{"pr_number": 1306, "pr_title": "[DOCS] Adds supervised ML workflow description to DFA overview", "pr_createdAt": "2020-07-27T12:11:17Z", "pr_url": "https://github.com/elastic/stack-docs/pull/1306", "timeline": [{"oid": "8a239e0600395a42b0de8fb33a8e788a8a1dc0c8", "url": "https://github.com/elastic/stack-docs/commit/8a239e0600395a42b0de8fb33a8e788a8a1dc0c8", "message": "[DOCS] Adds supervised ML workflow description to DFA overview.", "committedDate": "2020-07-27T12:05:36Z", "type": "commit"}, {"oid": "bd0672393762864271fc83e9238b62dc560b8417", "url": "https://github.com/elastic/stack-docs/commit/bd0672393762864271fc83e9238b62dc560b8417", "message": "[DOCS] Adds better examples to regression and classification.", "committedDate": "2020-07-27T12:52:32Z", "type": "commit"}, {"oid": "464be52559693925bd1d16780c3f5116f5e46f8b", "url": "https://github.com/elastic/stack-docs/commit/464be52559693925bd1d16780c3f5116f5e46f8b", "message": "[DOCS] Adds next steps section.", "committedDate": "2020-07-29T09:11:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyNDE1Mw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r462224153", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Consult the documentation to learn more about <<dfa-regression>> and \n          \n          \n            \n            * Consult the documentation to learn more about <<dfa-regression,regression>> and", "author": "szabosteve", "createdAt": "2020-07-29T11:18:59Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,147 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Supervised {ml} workflow\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+* Define the problem\n+* Prepare and transform data\n+* Train and test the model\n+* Deploy the model\n+\n+[DIAGRAM]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.\n+\n+Now define how to split your training data, using what's called the train-test \n+split. There is no optimal percentage that fits for all use cases, it depends on \n+the amount of data and the time you have to train. The test set won\u2019t be used to \n+train the model, but only for testing during the learning process.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on  how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further evaluation types for both \n+{classification} and {regression} analysis which provide metrics about training \n+performance. \n+\n+\n+[[deploy-model]]\n+== Deploy model\n+\n+You have trained the model and are satisfied with the performance. The last step \n+is to deploy your trained model and start using it on new data.\n+\n+Trained models are stored as {es} documents in an internal index. The Elastic \n+{ml} feature called {infer} enables you to use the model in a continuous fashion \n+either by using it as a processor in an ingest pipeline, in a continuous \n+{transform} or as an aggregation at search time. When new data comes into your \n+ingest pipeline or you run a search on your data with an {infer} aggregation, \n+the model is used to infer against the data and make predictions on it.\n+\n+\n+[[next-steps]]\n+== Next steps\n+\n+* Read more about how to {ref}/transforms.html[transform you data] into an \n+  entity-centric index.\n+* Consult the documentation to learn more about <<dfa-regression>> and ", "originalCommit": "464be52559693925bd1d16780c3f5116f5e46f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyNDMwMg==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r462224302", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <<dfa-classification>>.\n          \n          \n            \n              <<dfa-classification,classification>>.", "author": "szabosteve", "createdAt": "2020-07-29T11:19:19Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,147 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Supervised {ml} workflow\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+* Define the problem\n+* Prepare and transform data\n+* Train and test the model\n+* Deploy the model\n+\n+[DIAGRAM]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.\n+\n+Now define how to split your training data, using what's called the train-test \n+split. There is no optimal percentage that fits for all use cases, it depends on \n+the amount of data and the time you have to train. The test set won\u2019t be used to \n+train the model, but only for testing during the learning process.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on  how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further evaluation types for both \n+{classification} and {regression} analysis which provide metrics about training \n+performance. \n+\n+\n+[[deploy-model]]\n+== Deploy model\n+\n+You have trained the model and are satisfied with the performance. The last step \n+is to deploy your trained model and start using it on new data.\n+\n+Trained models are stored as {es} documents in an internal index. The Elastic \n+{ml} feature called {infer} enables you to use the model in a continuous fashion \n+either by using it as a processor in an ingest pipeline, in a continuous \n+{transform} or as an aggregation at search time. When new data comes into your \n+ingest pipeline or you run a search on your data with an {infer} aggregation, \n+the model is used to infer against the data and make predictions on it.\n+\n+\n+[[next-steps]]\n+== Next steps\n+\n+* Read more about how to {ref}/transforms.html[transform you data] into an \n+  entity-centric index.\n+* Consult the documentation to learn more about <<dfa-regression>> and \n+  <<dfa-classification>>.", "originalCommit": "464be52559693925bd1d16780c3f5116f5e46f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyNDU5Mg==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r462224592", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Learn how to evaluate <<ml-dfanalytics-classification,classification>> and \n          \n          \n            \n            * Learn how to evaluate <<ml-dfanalytics-regression-evaluation,regression>> and", "author": "szabosteve", "createdAt": "2020-07-29T11:19:51Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,147 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Supervised {ml} workflow\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+* Define the problem\n+* Prepare and transform data\n+* Train and test the model\n+* Deploy the model\n+\n+[DIAGRAM]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.\n+\n+Now define how to split your training data, using what's called the train-test \n+split. There is no optimal percentage that fits for all use cases, it depends on \n+the amount of data and the time you have to train. The test set won\u2019t be used to \n+train the model, but only for testing during the learning process.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on  how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further evaluation types for both \n+{classification} and {regression} analysis which provide metrics about training \n+performance. \n+\n+\n+[[deploy-model]]\n+== Deploy model\n+\n+You have trained the model and are satisfied with the performance. The last step \n+is to deploy your trained model and start using it on new data.\n+\n+Trained models are stored as {es} documents in an internal index. The Elastic \n+{ml} feature called {infer} enables you to use the model in a continuous fashion \n+either by using it as a processor in an ingest pipeline, in a continuous \n+{transform} or as an aggregation at search time. When new data comes into your \n+ingest pipeline or you run a search on your data with an {infer} aggregation, \n+the model is used to infer against the data and make predictions on it.\n+\n+\n+[[next-steps]]\n+== Next steps\n+\n+* Read more about how to {ref}/transforms.html[transform you data] into an \n+  entity-centric index.\n+* Consult the documentation to learn more about <<dfa-regression>> and \n+  <<dfa-classification>>.\n+* Learn how to evaluate <<ml-dfanalytics-classification,classification>> and ", "originalCommit": "464be52559693925bd1d16780c3f5116f5e46f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyNDc0Mg==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r462224742", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <<ml-dfanalytics-regression-evaluation,regression>> models.\n          \n          \n            \n              <<ml-dfanalytics-classification,classification>> models.", "author": "szabosteve", "createdAt": "2020-07-29T11:20:06Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,147 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Supervised {ml} workflow\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+* Define the problem\n+* Prepare and transform data\n+* Train and test the model\n+* Deploy the model\n+\n+[DIAGRAM]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.\n+\n+Now define how to split your training data, using what's called the train-test \n+split. There is no optimal percentage that fits for all use cases, it depends on \n+the amount of data and the time you have to train. The test set won\u2019t be used to \n+train the model, but only for testing during the learning process.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on  how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further evaluation types for both \n+{classification} and {regression} analysis which provide metrics about training \n+performance. \n+\n+\n+[[deploy-model]]\n+== Deploy model\n+\n+You have trained the model and are satisfied with the performance. The last step \n+is to deploy your trained model and start using it on new data.\n+\n+Trained models are stored as {es} documents in an internal index. The Elastic \n+{ml} feature called {infer} enables you to use the model in a continuous fashion \n+either by using it as a processor in an ingest pipeline, in a continuous \n+{transform} or as an aggregation at search time. When new data comes into your \n+ingest pipeline or you run a search on your data with an {infer} aggregation, \n+the model is used to infer against the data and make predictions on it.\n+\n+\n+[[next-steps]]\n+== Next steps\n+\n+* Read more about how to {ref}/transforms.html[transform you data] into an \n+  entity-centric index.\n+* Consult the documentation to learn more about <<dfa-regression>> and \n+  <<dfa-classification>>.\n+* Learn how to evaluate <<ml-dfanalytics-classification,classification>> and \n+  <<ml-dfanalytics-regression-evaluation,regression>> models.", "originalCommit": "464be52559693925bd1d16780c3f5116f5e46f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a07afe5bbd02988694cbfce1c3e9517d77c65b37", "url": "https://github.com/elastic/stack-docs/commit/a07afe5bbd02988694cbfce1c3e9517d77c65b37", "message": "Apply suggestions from code review", "committedDate": "2020-07-29T11:20:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzMDU4NQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r462230585", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [DIAGRAM]\n          \n          \n            \n            include::ml/lifecycle.adoc[lines=15..26]```", "author": "szabosteve", "createdAt": "2020-07-29T11:31:45Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,147 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Supervised {ml} workflow\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+* Define the problem\n+* Prepare and transform data\n+* Train and test the model\n+* Deploy the model\n+\n+[DIAGRAM]", "originalCommit": "a07afe5bbd02988694cbfce1c3e9517d77c65b37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d2752c64301fcf0bc4690e73779ea34f590e5351", "url": "https://github.com/elastic/stack-docs/commit/d2752c64301fcf0bc4690e73779ea34f590e5351", "message": "Update docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "committedDate": "2020-07-29T11:31:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIzMDgyNw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r462230827", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            include::ml/lifecycle.adoc[lines=15..26]```\n          \n          \n            \n            include::ml/lifecycle.adoc[lines=15..26]", "author": "szabosteve", "createdAt": "2020-07-29T11:32:11Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,147 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Supervised {ml} workflow\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+* Define the problem\n+* Prepare and transform data\n+* Train and test the model\n+* Deploy the model\n+\n+include::ml/lifecycle.adoc[lines=15..26]```", "originalCommit": "d2752c64301fcf0bc4690e73779ea34f590e5351", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a3c0af76d36649ce4a7064f25405440cc8ae8bd1", "url": "https://github.com/elastic/stack-docs/commit/a3c0af76d36649ce4a7064f25405440cc8ae8bd1", "message": "Update docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "committedDate": "2020-07-29T11:32:15Z", "type": "commit"}, {"oid": "ab8218d43d998d1e8241010eee5ea1ff80904ada", "url": "https://github.com/elastic/stack-docs/commit/ab8218d43d998d1e8241010eee5ea1ff80904ada", "message": "[DOCS] Adds lifecycle diagram adoc.", "committedDate": "2020-07-29T12:08:14Z", "type": "commit"}, {"oid": "f67346de016b7ea4f1643cfe681bd6796d8284a3", "url": "https://github.com/elastic/stack-docs/commit/f67346de016b7ea4f1643cfe681bd6796d8284a3", "message": "[DOCS] Removes incorrect reference.", "committedDate": "2020-07-29T12:10:01Z", "type": "commit"}, {"oid": "e3ba0e3f8c2ebcbbe01cbaa0b0336889242cfb21", "url": "https://github.com/elastic/stack-docs/commit/e3ba0e3f8c2ebcbbe01cbaa0b0336889242cfb21", "message": "[DOCS] Further changes.", "committedDate": "2020-07-29T16:38:57Z", "type": "commit"}, {"oid": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "url": "https://github.com/elastic/stack-docs/commit/f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "message": "[DOCS] Adds diagram to the text.", "committedDate": "2020-07-31T08:25:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU2ODc1Ng==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463568756", "bodyText": "Perhaps more succinct to say\nThis page describes the end-to-end workflow to clarify how you can  train a model, evaluate it and deploy it. It gives a high-level overview of the steps  required to identify and implement a solution using supervised learning.", "author": "sophiec20", "createdAt": "2020-07-31T11:59:16Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU2OTU3NA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463569574", "bodyText": "suggest remove or examples", "author": "sophiec20", "createdAt": "2020-07-31T12:01:16Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU2OTk4Nw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463569987", "bodyText": "this para feels a bit untidy.", "author": "sophiec20", "createdAt": "2020-07-31T12:02:13Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MDM1MQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463570351", "bodyText": "suggest remove or you are not collecting all of the necessary information", "author": "sophiec20", "createdAt": "2020-07-31T12:03:14Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MTM5Ng==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463571396", "bodyText": "suggest remove as it consists of the observed examples on which you can train the model.", "author": "sophiec20", "createdAt": "2020-07-31T12:05:43Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The ", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MjI3MA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463572270", "bodyText": "typo? Doing so makes a large dataset more manageable, reducing the computing resources  and time required for training.", "author": "sophiec20", "createdAt": "2020-07-31T12:07:56Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0Mjk2OA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463642968", "bodyText": "Yes, I think we edited out something incompletely. Thanks for spotting it!", "author": "szabosteve", "createdAt": "2020-07-31T14:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MjI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3NjU4Mw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463576583", "bodyText": "Suggest\nNow define how to split your data into a training set and a test set. The test set won\u2019t be used to train the model, but is used to evaluate how the model performs. There is no optimal percentage that fits all use cases, it depends on the amount of data and the time you have to train.\nPotentially include something to say for large data sets (e.g. >100k docs) then you may wish to start with a very low training percent - just to complete an end to end iteration in a short time.", "author": "sophiec20", "createdAt": "2020-07-31T12:18:29Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.\n+\n+Now define how to split your training data, using what's called the train-test \n+split. There is no optimal percentage that fits for all use cases, it depends on \n+the amount of data and the time you have to train. The test set won\u2019t be used to \n+train the model, but only for testing during the learning process.", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3ODE1Ng==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463578156", "bodyText": "Do we need a link to Evaluation here?\nI think we should close off this section with another mention that depending on the result of the evaluation, you may wish to iterate.", "author": "sophiec20", "createdAt": "2020-07-31T12:21:45Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.\n+\n+Now define how to split your training data, using what's called the train-test \n+split. There is no optimal percentage that fits for all use cases, it depends on \n+the amount of data and the time you have to train. The test set won\u2019t be used to \n+train the model, but only for testing during the learning process.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on  how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further evaluation types for both \n+{classification} and {regression} analysis which provide metrics about training \n+performance. ", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3OTg5Mg==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463579892", "bodyText": "It seems out of place to mention an implementation detail such as Trained models are stored as {es} documents in an internal index.\nPhase enables you to use the model in a continuous fashion doesn't feel quite right. Inference enables you to make predictions for new data. This could be done thru ingest, continuous transforms or an agg.", "author": "sophiec20", "createdAt": "2020-07-31T12:25:52Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can \n+train a model and deploy it to answer the right questions and solve your \n+problem. It gives a high-level overview of the steps required to identify and \n+implement a solution to a problem using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. What business problems do you want to solve by analyzing this data? The \n+better you know the data, the quicker you will be able to create {ml} models \n+that generate useful insights. It is crucial to think through the problem and \n+set clear objectives. Find the answer to questions like these: What kinds of \n+patterns do you want to discover in your data? What type of value do you want to \n+predict: a category, or a numerical value? The answers help you choose the type \n+of analysis that fits your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values or \n+examples that the model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es} or \n+you are not collecting all of the necessary information, this is the stage where \n+you develop your data pipeline. If you want to learn more about how to ingest \n+data into {es}, refer to the {ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must \n+supply a labelled data set for training. This is often called the \"ground truth\" \n+as it consists of the observed examples on which you can train the model. The \n+\"ground truth\" allows the training process to identify relationships among the \n+various characteristics of the data and the predicted value as well as takes a \n+critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable and by reducing the computing resources \n+and time required for training.\n+\n+Now define how to split your training data, using what's called the train-test \n+split. There is no optimal percentage that fits for all use cases, it depends on \n+the amount of data and the time you have to train. The test set won\u2019t be used to \n+train the model, but only for testing during the learning process.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on  how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further evaluation types for both \n+{classification} and {regression} analysis which provide metrics about training \n+performance. \n+\n+\n+[[deploy-model]]\n+== Deploy model\n+\n+You have trained the model and are satisfied with the performance. The last step \n+is to deploy your trained model and start using it on new data.\n+\n+Trained models are stored as {es} documents in an internal index. The Elastic \n+{ml} feature called {infer} enables you to use the model in a continuous fashion \n+either by using it as a processor in an ingest pipeline, in a continuous \n+{transform} or as an aggregation at search time. When new data comes into your \n+ingest pipeline or you run a search on your data with an {infer} aggregation, \n+the model is used to infer against the data and make predictions on it.", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU4MDY2Ng==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r463580666", "bodyText": "suggest You can then use your model to make predictions on new data.", "author": "sophiec20", "createdAt": "2020-07-31T12:27:31Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,142 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+unseen data. This page describes the end-to-end workflow to clarify how you can ", "originalCommit": "f9b55997d1442cdf0c1b7697797c8c03a6ccb334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "26e730ef82e066fdee24b415bb5f1987fba2926e", "url": "https://github.com/elastic/stack-docs/commit/26e730ef82e066fdee24b415bb5f1987fba2926e", "message": "[DOCS] Addresses review comments.", "committedDate": "2020-07-31T14:38:49Z", "type": "commit"}, {"oid": "acc2c6b793b0be405db363f577e64d96d91fa441", "url": "https://github.com/elastic/stack-docs/commit/acc2c6b793b0be405db363f577e64d96d91fa441", "message": "[DOCS] Fine-tunes wording.", "committedDate": "2020-07-31T14:39:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NTcwOA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r464395708", "bodyText": "When we talk about \"classification and regression\", we sometimes switch the order. We might want to review copy to keep a consistent order when we use the two words together. Or not \ud83d\ude06", "author": "joshdevins", "createdAt": "2020-08-03T12:57:33Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore ", "originalCommit": "acc2c6b793b0be405db363f577e64d96d91fa441", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3ODM2MA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r464478360", "bodyText": "@joshdevins Thanks for the review. I addressed your comments via 1c30df5.", "author": "szabosteve", "createdAt": "2020-08-03T15:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NTcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NTg3Nw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r464395877", "bodyText": "See above comment about word order.", "author": "joshdevins", "createdAt": "2020-08-03T12:57:51Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source ", "originalCommit": "acc2c6b793b0be405db363f577e64d96d91fa441", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NjMxNA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r464396314", "bodyText": "\"every round of iteration is...\" should read \"every iteration is...\"", "author": "joshdevins", "createdAt": "2020-08-03T12:58:43Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is ", "originalCommit": "acc2c6b793b0be405db363f577e64d96d91fa441", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NjkyOA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r464396928", "bodyText": "\"training set and test set\" should maybe rather be just \"training and test set\"", "author": "joshdevins", "createdAt": "2020-08-03T12:59:53Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{classification-cap} and {regression} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every round of iteration is \n+followed by an evaluation to see how the model performs. When you are satisfied \n+with the results, you are ready to deploy the model otherwise you may want to \n+adjust the training configuration or consider alternative ways to preprocess and \n+represent your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in classification and regression automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training set and a test set. The test ", "originalCommit": "acc2c6b793b0be405db363f577e64d96d91fa441", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1c30df500343227726f05f8919e447aab08f6bfb", "url": "https://github.com/elastic/stack-docs/commit/1c30df500343227726f05f8919e447aab08f6bfb", "message": "[DOCS] Addresses feedback.", "committedDate": "2020-08-03T15:09:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MTA2NQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465971065", "bodyText": "Very minor issue, but the first arrow looks different than the others, so I suggest making it the same:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |           |-->+           +-->+           +-->|           |\n          \n          \n            \n            |           +-->+           +-->+           +-->|           |", "author": "lcawl", "createdAt": "2020-08-05T20:02:18Z", "path": "docs/en/stack/ml/df-analytics/supervised-lifecycle.adoc", "diffHunk": "@@ -0,0 +1,11 @@\n+[ditaa, target=\"ml-dfa-lifecycle-diagram\"]\n+....\n+                            \n++-----------+   +-----------+   +-----------+   +-----------+\n+|           |-->+           +-->+           +-->|           |", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MjQ3NA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465972474", "bodyText": "I always prefer \"enable\" to \"allow\" since the former implies a sense of empowerment, whereas the latter makes me think of security/authority or permission to do something.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Elastic supervised learning allows you to train a {ml} model based on training \n          \n          \n            \n            Elastic supervised learning enables you to train a {ml} model based on training", "author": "lcawl", "createdAt": "2020-08-05T20:04:53Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3Mzk3NA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465973974", "bodyText": "Not a mandatory change, but I think it's helpful to note this is a summary, not a walk-through/tutorial:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            new data. This page describes the end-to-end workflow to clarify how you can \n          \n          \n            \n            new data. This page summarizes the end-to-end workflow for", "author": "lcawl", "createdAt": "2020-08-05T20:07:53Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3NDg5Mw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465974893", "bodyText": "Rewording to avoid a succession of \"it\":\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            train a model, evaluate it and deploy it. It gives a high-level overview of the \n          \n          \n            \n            training, evaluating and deploying a model. It gives a high-level overview of the", "author": "lcawl", "createdAt": "2020-08-05T20:09:35Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3NzU0OA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465977548", "bodyText": "Unsupervised learning... can be trained on.\n\nThis feels like a long sentence. Perhaps it can be split into two like this?:\n\nSupervised learning requires a data set that contains known values that the model can be trained on. Unsupervised learning -- like {anomaly-detect} or {oldetection} does not have this requirement.", "author": "lcawl", "createdAt": "2020-08-05T20:14:51Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3OTA2MQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465979061", "bodyText": "I like to use the target page's title if possible, so readers have a hint of where the link will take them.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ref}/ingest.html[documentation].\n          \n          \n            \n            {ref}/ingest.html[Ingest node documentation].", "author": "lcawl", "createdAt": "2020-08-05T20:17:40Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4MTQ0Ng==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465981446", "bodyText": "It feels a little awkward to repeat this term in close succession. Perhaps reword like this?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \"ground truth\". The \"ground truth\" allows the training process to identify \n          \n          \n            \n            \"ground truth\". The training process uses this information to identify", "author": "lcawl", "createdAt": "2020-08-05T20:22:13Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4MTk0MA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465981940", "bodyText": "If you accept my suggestion for the first part of this sentence, I recommend this change too:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            value as well as takes a critical role in model evaluation.\n          \n          \n            \n            value. It also plays a critical role in model evaluation.", "author": "lcawl", "createdAt": "2020-08-05T20:23:10Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4MjgxNw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465982817", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {regression-cap} and {classification} requires specifically structured source \n          \n          \n            \n            {regression-cap} and {classification} require specifically structured source", "author": "lcawl", "createdAt": "2020-08-05T20:24:51Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4MzYyNQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465983625", "bodyText": "Since the paragraph started with \"regression and classification\", I think they're redundant here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            can be used as the source for {dfanalytics} like {regression} and \n          \n          \n            \n            can be used as the source for these types of {dfanalytics}.", "author": "lcawl", "createdAt": "2020-08-05T20:26:23Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4MzkyNQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465983925", "bodyText": "If you accept the suggestion for the first part of this sentence, you must also remove this part:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {classification}.", "author": "lcawl", "createdAt": "2020-08-05T20:26:57Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NDU2Ng==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465984566", "bodyText": "I like shorter, digestible sentences, so I'd suggest splitting this in two:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            results, you are ready to deploy the model otherwise you may want to adjust the \n          \n          \n            \n            results, you are ready to deploy the model. Otherwise, you may want to adjust the", "author": "lcawl", "createdAt": "2020-08-05T20:28:20Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NTg2NQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465985865", "bodyText": "When you are satisfied with the results...\n\nThis sentence (or two, if you split it) feel like they belong at the end of this section instead of the beginning.  They seem to be about transitioning from training to deploying, so I think they'd make more sense at the end.", "author": "lcawl", "createdAt": "2020-08-05T20:30:43Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NjQxMg==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465986412", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            However, you can exclude irrelevant fields optionally from the process. Doing so \n          \n          \n            \n            However, you can optionally exclude irrelevant fields from the process. Doing so", "author": "lcawl", "createdAt": "2020-08-05T20:31:50Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NjYxOQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465986619", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            makes a large dataset more manageable, reducing the computing resources and time \n          \n          \n            \n            makes a large data set more manageable, reducing the computing resources and time", "author": "lcawl", "createdAt": "2020-08-05T20:32:16Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NzgyMw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465987823", "bodyText": "\"Now\" feels odd to me since they're not actually doing any of this \"now\". They're thinking about the order they need to do things in the future when they actually tackle this workflow. I suggest something like \"next\":\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now define how to split your data into a training and a test set. The test set \n          \n          \n            \n            Next you must define how to split your data into a training and a test set. The test set", "author": "lcawl", "createdAt": "2020-08-05T20:34:48Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4ODQ3NA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465988474", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            won\u2019t be used to train the model, but is used to evaluate how the model \n          \n          \n            \n            won\u2019t be used to train the model; it is used to evaluate how the model", "author": "lcawl", "createdAt": "2020-08-05T20:36:08Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set \n+won\u2019t be used to train the model, but is used to evaluate how the model ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4OTE3Nw==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465989177", "bodyText": "I think this extra info is unnecessary:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            During the training process, the training data that contains the ground truth \n          \n          \n            \n            During the training process, the training data", "author": "lcawl", "createdAt": "2020-08-05T20:37:31Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set \n+won\u2019t be used to train the model, but is used to evaluate how the model \n+performs. There is no optimal percentage that fits all use cases, it depends on \n+the amount of data and the time you have to train. For large data sets, you may \n+want to start with a low training percent to complete an end-to-end iteration in \n+a short time.\n+\n+During the training process, the training data that contains the ground truth ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4OTQ3MA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465989470", "bodyText": "Likewise, I think readers understand what training data is by this point:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            you want to learn from is fed through the learning algorithm. The model predicts \n          \n          \n            \n            is fed through the learning algorithm. The model predicts", "author": "lcawl", "createdAt": "2020-08-05T20:38:05Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set \n+won\u2019t be used to train the model, but is used to evaluate how the model \n+performs. There is no optimal percentage that fits all use cases, it depends on \n+the amount of data and the time you have to train. For large data sets, you may \n+want to start with a low training percent to complete an end-to-end iteration in \n+a short time.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5MDc4Mg==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465990782", "bodyText": "This switch to \"will be\" is unexpected. I'd suggest sticking with the present:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Once the model has been trained, it will be tested on how well it predicts for \n          \n          \n            \n            Once the model is trained, you can evaluate how well it predicts", "author": "lcawl", "createdAt": "2020-08-05T20:40:44Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set \n+won\u2019t be used to train the model, but is used to evaluate how the model \n+performs. There is no optimal percentage that fits all use cases, it depends on \n+the amount of data and the time you have to train. For large data sets, you may \n+want to start with a low training percent to complete an end-to-end iteration in \n+a short time.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on how well it predicts for ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5ODMwOA==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r465998308", "bodyText": "I found \"an estimate of a quantity\" confusing, so if possible it would be simpler to just omit that:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            previously unseen data. This test provides an estimate of a quantity known as \n          \n          \n            \n            previously unseen data with", "author": "lcawl", "createdAt": "2020-08-05T20:55:36Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set \n+won\u2019t be used to train the model, but is used to evaluate how the model \n+performs. There is no optimal percentage that fits all use cases, it depends on \n+the amount of data and the time you have to train. For large data sets, you may \n+want to start with a low training percent to complete an end-to-end iteration in \n+a short time.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAwMDA2NQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r466000065", "bodyText": "I thought these were the same links as the previous sentence, since they have the same name. I suggest linking the \"evaluate\" term instead:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Learn how to evaluate <<ml-dfanalytics-regression-evaluation,regression>> and \n          \n          \n            \n            * Learn how to <<ml-dfanalytics-evaluate,evaluate>> regression and", "author": "lcawl", "createdAt": "2020-08-05T20:59:03Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set \n+won\u2019t be used to train the model, but is used to evaluate how the model \n+performs. There is no optimal percentage that fits all use cases, it depends on \n+the amount of data and the time you have to train. For large data sets, you may \n+want to start with a low training percent to complete an end-to-end iteration in \n+a short time.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further \n+<<ml-dfanalytics-evaluate,evaluation types>> for both {regression} and \n+{classification} analysis which provide metrics about training performance. \n+Depending on the evaluation results, you may wish to iterate.\n+\n+\n+[[deploy-model]]\n+== Deploy model\n+\n+You have trained the model and are satisfied with the performance. The last step \n+is to deploy your trained model and start using it on new data.\n+\n+The Elastic {ml} feature called {infer} enables you to make predictions for new \n+data either by using it as a processor in an ingest pipeline, in a continuous \n+{transform} or as an aggregation at search time. When new data comes into your \n+ingest pipeline or you run a search on your data with an {infer} aggregation, \n+the model is used to infer against the data and make predictions on it.\n+\n+\n+[[next-steps]]\n+== Next steps\n+\n+* Read more about how to {ref}/transforms.html[transform you data] into an \n+  entity-centric index.\n+* Consult the documentation to learn more about <<dfa-regression,regression>> \n+  and <<dfa-classification,classification>>.\n+* Learn how to evaluate <<ml-dfanalytics-regression-evaluation,regression>> and ", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAwMDMyNQ==", "url": "https://github.com/elastic/stack-docs/pull/1306#discussion_r466000325", "bodyText": "If you accept the suggestion on the first part of this sentence, please make this one too:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <<ml-dfanalytics-classification,classification>> models.\n          \n          \n            \n            classification models.", "author": "lcawl", "createdAt": "2020-08-05T20:59:34Z", "path": "docs/en/stack/ml/df-analytics/ml-supervised-workflow.asciidoc", "diffHunk": "@@ -0,0 +1,139 @@\n+[role=\"xpack\"]\n+[[ml-supervised-workflow]]\n+= Introduction to supervised learning\n+\n+Elastic supervised learning allows you to train a {ml} model based on training \n+examples that you provide. You can then use your model to make predictions on \n+new data. This page describes the end-to-end workflow to clarify how you can \n+train a model, evaluate it and deploy it. It gives a high-level overview of the \n+steps required to identify and implement a solution using supervised learning.\n+\n+The workflow for supervised learning consists of the following stages:\n+\n+image::images/ml-dfa-lifecycle-diagram.png[\"Supervised learning workflow\"]\n+\n+These are iterative stages, meaning that after evaluating each step, you might \n+need to make adjustments before you move further.\n+\n+\n+[[define-problem]]\n+== Define the problem\n+\n+It\u2019s important to take a moment and think about where {ml} can be most \n+impactful. Consider what type of data you have available and what value it \n+holds. The better you know the data, the quicker you will be able to create {ml} \n+models that generate useful insights. What kinds of patterns do you want to \n+discover in your data? What type of value do you want to predict: a category, or \n+a numerical value? The answers help you choose the type of analysis that fits \n+your use case.\n+\n+After you identify the problem, consider which of the {ml-features} are most \n+likely to help you solve it. Unsupervised learning \u2013 like {anomaly-detect} or \n+{oldetection} \u2013 does not require a labelled data set to train the model on while \n+supervised learning requires a data set that contains the known values that the \n+model can be trained on.\n+\n+{stack} provides the following types of supervised learning: \n+\n+* {regression}: predicts **continuous, numerical values** like the response time \n+  of a web request. \n+* {classification}: predicts **discrete, categorical values** like whether a \n+  https://www.elastic.co/blog/machine-learning-in-cybersecurity-training-supervised-models-to-detect-dga-activity[DNS request originates from a malicious or benign domain]. \n+\n+\n+[[prepare-transform-data]]\n+== Prepare and transform data\n+\n+You have defined the problem and selected an appropriate type of analysis. The \n+next step is to produce a high-quality data set in {es} with a clear \n+relationship to your training objectives. If your data is not already in {es}, \n+this is the stage where you develop your data pipeline. If you want to learn \n+more about how to ingest data into {es}, refer to the \n+{ref}/ingest.html[documentation].\n+\n+{regression-cap} and {classification} are supervised {ml} techniques, therefore \n+you must supply a labelled data set for training. This is often called the \n+\"ground truth\". The \"ground truth\" allows the training process to identify \n+relationships among the various characteristics of the data and the predicted \n+value as well as takes a critical role in model evaluation.\n+\n+An important requirement is a data set that is large enough to train a model. \n+For example, if you would like to train a {classification} model that decides \n+whether an email is a spam or not, you need a labelled data set that contains \n+enough data points from each possible category to train the model. What counts \n+as \"enough\" depends on various factors like the complexity of the problem or \n+the {ml} solution you have chosen. There is no exact number that fits every \n+use case; deciding how much data is acceptable is rather a heuristic process \n+that might involve iterative trials.\n+\n+Before you train the model, consider preprocessing the data. In practice, the \n+type of preprocessing depends on the nature of the data set. Preprocessing can \n+include, but is not limited to, mitigating redundancy, reducing biases, applying \n+standards and/or conventions, data normalization, and so on.\n+\n+{regression-cap} and {classification} requires specifically structured source \n+data: a two dimensional tabular data structure. For this reason, you might need \n+to {ref}/transforms.html[{transform}] your data to create a {dataframe} which \n+can be used as the source for {dfanalytics} like {regression} and \n+{classification}.\n+\n+[[train-test-iterate]]\n+== Train, test, iterate\n+\n+After your data is prepared and transformed into the right format, it is time to \n+train the model. Training is an iterative process \u2014 every iteration is followed \n+by an evaluation to see how the model performs. When you are satisfied with the \n+results, you are ready to deploy the model otherwise you may want to adjust the \n+training configuration or consider alternative ways to preprocess and represent \n+your data.\n+\n+The first step is defining the features \u2013 the relevant fields in the data set \u2013 \n+that will be used for training the model. By default, all the fields with \n+supported types are included in {regression} and {classification} automatically. \n+However, you can exclude irrelevant fields optionally from the process. Doing so \n+makes a large dataset more manageable, reducing the computing resources and time \n+required for training.\n+\n+Now define how to split your data into a training and a test set. The test set \n+won\u2019t be used to train the model, but is used to evaluate how the model \n+performs. There is no optimal percentage that fits all use cases, it depends on \n+the amount of data and the time you have to train. For large data sets, you may \n+want to start with a low training percent to complete an end-to-end iteration in \n+a short time.\n+\n+During the training process, the training data that contains the ground truth \n+you want to learn from is fed through the learning algorithm. The model predicts \n+the value and compares it to the ground truth then the model is fine-tuned to \n+make the predictions more accurate.\n+\n+Once the model has been trained, it will be tested on how well it predicts for \n+previously unseen data. This test provides an estimate of a quantity known as \n+the model generalization error. There are further \n+<<ml-dfanalytics-evaluate,evaluation types>> for both {regression} and \n+{classification} analysis which provide metrics about training performance. \n+Depending on the evaluation results, you may wish to iterate.\n+\n+\n+[[deploy-model]]\n+== Deploy model\n+\n+You have trained the model and are satisfied with the performance. The last step \n+is to deploy your trained model and start using it on new data.\n+\n+The Elastic {ml} feature called {infer} enables you to make predictions for new \n+data either by using it as a processor in an ingest pipeline, in a continuous \n+{transform} or as an aggregation at search time. When new data comes into your \n+ingest pipeline or you run a search on your data with an {infer} aggregation, \n+the model is used to infer against the data and make predictions on it.\n+\n+\n+[[next-steps]]\n+== Next steps\n+\n+* Read more about how to {ref}/transforms.html[transform you data] into an \n+  entity-centric index.\n+* Consult the documentation to learn more about <<dfa-regression,regression>> \n+  and <<dfa-classification,classification>>.\n+* Learn how to evaluate <<ml-dfanalytics-regression-evaluation,regression>> and \n+  <<ml-dfanalytics-classification,classification>> models.", "originalCommit": "1c30df500343227726f05f8919e447aab08f6bfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0714d02e332209af8ffb1868364b518f4f6aa3e5", "url": "https://github.com/elastic/stack-docs/commit/0714d02e332209af8ffb1868364b518f4f6aa3e5", "message": "Apply suggestions from code review\n\nCo-authored-by: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-08-06T07:31:19Z", "type": "commit"}, {"oid": "dc3235b6fb4c203775370aa09949a3036bfa16f5", "url": "https://github.com/elastic/stack-docs/commit/dc3235b6fb4c203775370aa09949a3036bfa16f5", "message": "[DOCS] Addresses feedback and adds fixed diagram.", "committedDate": "2020-08-06T08:00:20Z", "type": "commit"}]}