{"pr_number": 920, "pr_title": "[ML] adding multi-field limitation for inference + analytics", "pr_createdAt": "2020-03-04T16:53:48Z", "pr_url": "https://github.com/elastic/stack-docs/pull/920", "timeline": [{"oid": "0f7d5618280eb68b2ab4252606086dc1bb002ecd", "url": "https://github.com/elastic/stack-docs/commit/0f7d5618280eb68b2ab4252606086dc1bb002ecd", "message": "[ML] adding multi-field limitation for inference + analytics", "committedDate": "2020-03-04T16:51:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNzI1Mw==", "url": "https://github.com/elastic/stack-docs/pull/920#discussion_r387817253", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {dfanalytics-jobs-cap} will dynamically select the best field when multi-field\n          \n          \n            \n            {dfanalytics-jobs-cap} dynamically select the best field when multi-field", "author": "lcawl", "createdAt": "2020-03-04T17:23:52Z", "path": "docs/en/stack/ml/df-analytics/dfanalytics-limitations.asciidoc", "diffHunk": "@@ -135,3 +135,29 @@ If a reduction in runtime is important to you, try strategies such as disabling\n feature importance, using a smaller {transform}, setting \n {ref}/put-dfanalytics.html#ml-hyperparam-optimization[hyperparameter] values, or \n only selecting fields that are relevant for analysis.\n+\n+[float]\n+[[dfa-inference-multi-field]]\n+=== Analytics training on multi-field values may affect {infer}\n+\n+{dfanalytics-jobs-cap} will dynamically select the best field when multi-field", "originalCommit": "0f7d5618280eb68b2ab4252606086dc1bb002ecd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNzcwNQ==", "url": "https://github.com/elastic/stack-docs/pull/920#discussion_r387817705", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            values are included. This means that if a multi-field `foo` is included for training,\n          \n          \n            \n            values are included. For example, if a multi-field `foo` is included for training,", "author": "lcawl", "createdAt": "2020-03-04T17:24:45Z", "path": "docs/en/stack/ml/df-analytics/dfanalytics-limitations.asciidoc", "diffHunk": "@@ -135,3 +135,29 @@ If a reduction in runtime is important to you, try strategies such as disabling\n feature importance, using a smaller {transform}, setting \n {ref}/put-dfanalytics.html#ml-hyperparam-optimization[hyperparameter] values, or \n only selecting fields that are relevant for analysis.\n+\n+[float]\n+[[dfa-inference-multi-field]]\n+=== Analytics training on multi-field values may affect {infer}\n+\n+{dfanalytics-jobs-cap} will dynamically select the best field when multi-field\n+values are included. This means that if a multi-field `foo` is included for training,", "originalCommit": "0f7d5618280eb68b2ab4252606086dc1bb002ecd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNzgzMg==", "url": "https://github.com/elastic/stack-docs/pull/920#discussion_r387817832", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            the `foo.keyword` is actually used instead. This poses a complication for {infer} with\n          \n          \n            \n            the `foo.keyword` is actually used. This poses a complication for {infer} with", "author": "lcawl", "createdAt": "2020-03-04T17:25:00Z", "path": "docs/en/stack/ml/df-analytics/dfanalytics-limitations.asciidoc", "diffHunk": "@@ -135,3 +135,29 @@ If a reduction in runtime is important to you, try strategies such as disabling\n feature importance, using a smaller {transform}, setting \n {ref}/put-dfanalytics.html#ml-hyperparam-optimization[hyperparameter] values, or \n only selecting fields that are relevant for analysis.\n+\n+[float]\n+[[dfa-inference-multi-field]]\n+=== Analytics training on multi-field values may affect {infer}\n+\n+{dfanalytics-jobs-cap} will dynamically select the best field when multi-field\n+values are included. This means that if a multi-field `foo` is included for training,\n+the `foo.keyword` is actually used instead. This poses a complication for {infer} with", "originalCommit": "0f7d5618280eb68b2ab4252606086dc1bb002ecd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxODM0Mw==", "url": "https://github.com/elastic/stack-docs/pull/920#discussion_r387818343", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            will not take the field `foo` into account.\n          \n          \n            \n            does not take the field `foo` into account.", "author": "lcawl", "createdAt": "2020-03-04T17:25:50Z", "path": "docs/en/stack/ml/df-analytics/dfanalytics-limitations.asciidoc", "diffHunk": "@@ -135,3 +135,29 @@ If a reduction in runtime is important to you, try strategies such as disabling\n feature importance, using a smaller {transform}, setting \n {ref}/put-dfanalytics.html#ml-hyperparam-optimization[hyperparameter] values, or \n only selecting fields that are relevant for analysis.\n+\n+[float]\n+[[dfa-inference-multi-field]]\n+=== Analytics training on multi-field values may affect {infer}\n+\n+{dfanalytics-jobs-cap} will dynamically select the best field when multi-field\n+values are included. This means that if a multi-field `foo` is included for training,\n+the `foo.keyword` is actually used instead. This poses a complication for {infer} with\n+the inference processor. Documents supplied to ingest pipelines are not mapped. Consequently,\n+only the field `foo` is present. This means that a model trained with the field `foo.keyword`\n+will not take the field `foo` into account.", "originalCommit": "0f7d5618280eb68b2ab4252606086dc1bb002ecd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxODg0Ng==", "url": "https://github.com/elastic/stack-docs/pull/920#discussion_r387818846", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A work around is by using the `field_mappings` parameter in the inference processor.\n          \n          \n            \n            You can work around this limitation by using the `field_mappings` parameter in the inference processor.", "author": "lcawl", "createdAt": "2020-03-04T17:26:37Z", "path": "docs/en/stack/ml/df-analytics/dfanalytics-limitations.asciidoc", "diffHunk": "@@ -135,3 +135,29 @@ If a reduction in runtime is important to you, try strategies such as disabling\n feature importance, using a smaller {transform}, setting \n {ref}/put-dfanalytics.html#ml-hyperparam-optimization[hyperparameter] values, or \n only selecting fields that are relevant for analysis.\n+\n+[float]\n+[[dfa-inference-multi-field]]\n+=== Analytics training on multi-field values may affect {infer}\n+\n+{dfanalytics-jobs-cap} will dynamically select the best field when multi-field\n+values are included. This means that if a multi-field `foo` is included for training,\n+the `foo.keyword` is actually used instead. This poses a complication for {infer} with\n+the inference processor. Documents supplied to ingest pipelines are not mapped. Consequently,\n+only the field `foo` is present. This means that a model trained with the field `foo.keyword`\n+will not take the field `foo` into account.\n+\n+A work around is by using the `field_mappings` parameter in the inference processor.", "originalCommit": "0f7d5618280eb68b2ab4252606086dc1bb002ecd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9b8d5aa124395be777268bda0f59939532909880", "url": "https://github.com/elastic/stack-docs/commit/9b8d5aa124395be777268bda0f59939532909880", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-03-04T17:57:45Z", "type": "commit"}]}