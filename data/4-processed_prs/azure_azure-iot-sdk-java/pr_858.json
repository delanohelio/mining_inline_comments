{"pr_number": 858, "pr_title": "fix(iot-dev): Fix issue with ordering of queue within amqp layer", "pr_createdAt": "2020-07-10T17:26:40Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/858", "timeline": [{"oid": "54b8b96d0cb2bc2a0766527dec7da0e51e9d3431", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/54b8b96d0cb2bc2a0766527dec7da0e51e9d3431", "message": "fix(iot-dev): Fix issue with ordering of queue within amqp layer\n\nIf two messages are queued, one for subscribing to twin, and one for getting a twin, and the latter is queued first, then the SDK gets stuck trying to send the get twin request repeatedly without trying to send the subscribe message first.\n\nThis change ensures that any message that is failed to send is placed at the back of the queue and that the next message stays at the front of the queue", "committedDate": "2020-07-10T17:26:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3NjgxOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/858#discussion_r452976819", "bodyText": "It's important to return here before the next call to messagesToSend.poll() as it keeps the next message to send at the front of the queue. Before this change, if exactly two messages are queued, and the first fails to send (if it is a get twin request and twin links aren't up yet, for instance), then the second message will never send. The second message would be polled and re-queued at the back, and the whole process would run again and fail again indefinitely", "author": "timtay-microsoft", "createdAt": "2020-07-10T17:27:53Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -530,18 +530,18 @@ private void addProxyLayer(Transport transport, String hostName)\n     private void sendQueuedMessages()\n     {\n         int messagesAttemptedToBeProcessed = 0;\n-        boolean lastSendSucceeded = true;\n         Message message = messagesToSend.poll();\n-        while (message != null && messagesAttemptedToBeProcessed < MAX_MESSAGES_TO_SEND_PER_CALLBACK && lastSendSucceeded)\n+        while (message != null && messagesAttemptedToBeProcessed < MAX_MESSAGES_TO_SEND_PER_CALLBACK)\n         {\n             messagesAttemptedToBeProcessed++;\n-            lastSendSucceeded = sendQueuedMessage(message);\n+            boolean lastSendSucceeded = sendQueuedMessage(message);\n \n             if (!lastSendSucceeded)\n             {\n                 //message failed to send, likely due to lack of link credit available. Re-queue and try again later\n                 log.trace(\"Amqp message failed to send, adding it back to messages to send queue ({})\", message);\n                 messagesToSend.add(message);\n+                return;", "originalCommit": "54b8b96d0cb2bc2a0766527dec7da0e51e9d3431", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMTE4NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/858#discussion_r453031185", "bodyText": "Did you verify only with the e2e test not failing or something else?", "author": "bikamani", "createdAt": "2020-07-10T19:11:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3NjgxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1NTY1NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/858#discussion_r453055654", "bodyText": "I verified by manually causing that 2 message scenario and verifying that the SDK eventually sends the subscription message. There isn't a way to test this reliably because we don't have control over when each message will be queued from the e2e tests level. There is some level of randomness", "author": "timtay-microsoft", "createdAt": "2020-07-10T20:10:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3NjgxOQ=="}], "type": "inlineReview"}, {"oid": "15e995bd2f64fd807c514465d1204a0e609276f5", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/15e995bd2f64fd807c514465d1204a0e609276f5", "message": "Merge branch 'master' into timtay/Ordering", "committedDate": "2020-07-10T20:10:24Z", "type": "commit"}]}