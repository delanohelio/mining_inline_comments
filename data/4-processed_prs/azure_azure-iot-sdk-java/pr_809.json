{"pr_number": 809, "pr_title": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter", "pr_createdAt": "2020-06-15T16:03:14Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/809", "timeline": [{"oid": "08ec0937516d9147d7f83e384bfe72868cf64810", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/08ec0937516d9147d7f83e384bfe72868cf64810", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.", "committedDate": "2020-06-15T16:03:33Z", "type": "forcePushed"}, {"oid": "32c883f791c7a5f6ca89efb68416b836b7a6920d", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/32c883f791c7a5f6ca89efb68416b836b7a6920d", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.", "committedDate": "2020-06-15T16:04:29Z", "type": "forcePushed"}, {"oid": "d5875acac86f7b3dd07b6fc51719727451f201ce", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d5875acac86f7b3dd07b6fc51719727451f201ce", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.", "committedDate": "2020-06-15T16:06:57Z", "type": "forcePushed"}, {"oid": "e22b7e3f34dff2adab0423817426ba4cb47c2b32", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e22b7e3f34dff2adab0423817426ba4cb47c2b32", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.", "committedDate": "2020-06-15T16:19:11Z", "type": "forcePushed"}, {"oid": "a3bef754de428d3ba1af0e0bd4033672b2b8d6a6", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a3bef754de428d3ba1af0e0bd4033672b2b8d6a6", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.", "committedDate": "2020-06-15T16:58:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NjExMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r440366110", "bodyText": "This timeout was simply too long. Any test timeout failures will be caught in the first 30 seconds", "author": "timtay-microsoft", "createdAt": "2020-06-15T18:29:00Z", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/setup/iothub/DeviceTwinCommon.java", "diffHunk": "@@ -48,9 +48,9 @@\n {\n     // Max time to wait to see it on Hub\n     protected static final long PERIODIC_WAIT_TIME_FOR_VERIFICATION = 1000; // 1 sec\n-    protected static final long MAX_WAIT_TIME_FOR_VERIFICATION = 180000; // 180 sec", "originalCommit": "a3bef754de428d3ba1af0e0bd4033672b2b8d6a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2OTc0NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441069744", "bodyText": "Do we have any long running tests? Token refresh tests? Connection status change tests?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NjExMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwNzYwNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441107605", "bodyText": "ping on this question", "author": "abhipsaMisra", "createdAt": "2020-06-16T19:59:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NjExMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NjU3MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441056570", "bodyText": "Is this really a \"dummy\"? Else we might want to rename it to something else", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:25:10Z", "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/helper/DummyAndroidRunner.java", "diffHunk": "@@ -5,28 +5,13 @@\n \n package com.microsoft.azure.sdk.iot.android.helper;\n \n-import com.microsoft.appcenter.espresso.Factory;\n-import com.microsoft.appcenter.espresso.ReportHelper;\n-import com.microsoft.azure.sdk.iot.common.helpers.BasicTierOnlyRule;\n-import com.microsoft.azure.sdk.iot.common.helpers.ConditionalIgnoreRule;\n-\n-import org.junit.After;\n-import org.junit.Rule;\n import org.junit.Test;\n \n-// This class is to add a dummy test for every TestGroup.  Currently, App Center errors out\n-// when a TestGroup did not execute any actual tests.\n+// This class is to add a dummy test for every TestGroup.  Currently, android testing errors out\n+// when a TestGroup did not execute any actual tests, so this forces each test group to have at least\n+// this test\n public class DummyAndroidRunner", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MTE1MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441061151", "bodyText": "Sure, I can rename this to \"Fake\"", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:33:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NjU3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MjU4NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441062585", "bodyText": "It exists only so that, if all other tests get filtered, at least one test runs. Android instrumentation testing fails if no tests run, counterintuitively", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NjU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NzIxMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441057213", "bodyText": "q - we need fewer test groups now because...? can we parallelize more stuff in the android emulator, or do we spin up more emulators?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:26:13Z", "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/helper/DummyAndroidRunner.java", "diffHunk": "@@ -44,30 +29,8 @@ public void labelSnapshot()\n     @TestGroup15\n     @TestGroup16\n     @TestGroup17", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MDgwNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441060804", "bodyText": "We used to have separate test groups for device and module tests. For instance, we had a SendMessagesDeviceAndroidRunner and a SendMessagesModuleAndroidRunner, but now those two are combined into just SendMessagesAndroidRunner. On top of that, several test groups contained only a few tests, so they were also grouped together instead of given their own test group", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NzIxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MTAxMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441061013", "bodyText": "RegistryManager tests and Service Client tests, for instance, don't need their own test group anymore. They can share", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:32:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NzIxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1ODU4Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441058586", "bodyText": "Does TestSuite annotation work better with emulators? That way we wouldn't need a fakeTest class and a lot of other overhead code.", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:28:43Z", "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/helper/DummyAndroidRunner.java", "diffHunk": "@@ -5,28 +5,13 @@\n \n package com.microsoft.azure.sdk.iot.android.helper;\n \n-import com.microsoft.appcenter.espresso.Factory;\n-import com.microsoft.appcenter.espresso.ReportHelper;\n-import com.microsoft.azure.sdk.iot.common.helpers.BasicTierOnlyRule;\n-import com.microsoft.azure.sdk.iot.common.helpers.ConditionalIgnoreRule;\n-\n-import org.junit.After;\n-import org.junit.Rule;\n import org.junit.Test;\n \n-// This class is to add a dummy test for every TestGroup.  Currently, App Center errors out\n-// when a TestGroup did not execute any actual tests.\n+// This class is to add a dummy test for every TestGroup.  Currently, android testing errors out\n+// when a TestGroup did not execute any actual tests, so this forces each test group to have at least\n+// this test\n public class DummyAndroidRunner\n {", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MTk4MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441061981", "bodyText": "We do still need this. We added this fake test class for App Center, but they share the same problem as running the test on an emulator. Anytime you invoke instrumentation tests on an android device, emulator or real, at least one test needs to run. Otherwise it will report an error", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:34:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1ODU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODY4MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441108680", "bodyText": "Sure, but with TestSuite, instead of multiple runners, we can have a single runner that references all the test files, and does the initial setup.", "author": "abhipsaMisra", "createdAt": "2020-06-16T20:01:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1ODU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2NDYzMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441164633", "bodyText": "I don't see how we could split the tests into groups with this approach", "author": "timtay-microsoft", "createdAt": "2020-06-16T21:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1ODU4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTA0Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441065046", "bodyText": "Q - why was this here?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:39:56Z", "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/FileUploadAndroidRunner.java", "diffHunk": "@@ -46,17 +44,4 @@ public static Collection inputsCommons() throws Exception\n         isBasicTierHub = Boolean.parseBoolean(BuildConfig.IsBasicTierHub);\n         return FileUploadTests.inputs();\n     }\n-\n-    @Ignore\n-    @Override\n-    @Test\n-    public void uploadToBlobAsyncSingleFileZeroLength()", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2OTYwMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441069601", "bodyText": "This test was failing on android in particular at some point, but it was never re-enabled", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTA0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODg3Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441108876", "bodyText": "are we keeping this now?", "author": "abhipsaMisra", "createdAt": "2020-06-16T20:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTA0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2NDMzNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441164335", "bodyText": "File upload as a whole wasn't being tested on Android, but not on purpose. I'd re-enable it but there are some test failures on Android. They appear to be test bugs, not bugs in file upload itself. I'll open a separate PR to fix that bug, and to re-enable file upload tests on android", "author": "timtay-microsoft", "createdAt": "2020-06-16T21:54:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTA0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTcwNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441065704", "bodyText": "I assume this cleanup is happening elsewhere now?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:41:06Z", "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/HubTierConnectionAndroidRunner.java", "diffHunk": "@@ -51,16 +44,4 @@ public static Collection inputs() throws IOException, IotHubException, GeneralSe\n         identities = getIdentities(inputs);\n         return inputs;\n     }\n-\n-    @AfterClass\n-    public static void cleanUpResources()\n-    {\n-        tearDown(identities);", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDAzNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441070034", "bodyText": "Actually, this looks like it shouldn't have been deleted. I'll revert this", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:48:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTcwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2Njk2Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441066963", "bodyText": "Q - don't we have tests that take in the SSL context directly, or do they have a specific test class?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:43:23Z", "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/errorinjection/twin/ReportedPropertiesErrInjAndroidRunner.java", "diffHunk": "@@ -24,17 +21,14 @@\n import java.security.GeneralSecurityException;\n import java.util.Collection;\n \n-@TestGroup26\n+@TestGroup8\n @RunWith(Parameterized.class)\n-public class ReportedPropertiesDeviceAndroidRunner extends ReportedPropertiesTests\n+public class ReportedPropertiesErrInjAndroidRunner extends ReportedPropertiesErrInjTests\n {\n     @Rule\n     public Rerun count = new Rerun(3);\n \n-    @Rule\n-    public ReportHelper reportHelper = Factory.getReportHelper();\n-\n-    public ReportedPropertiesDeviceAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint)\n+    public ReportedPropertiesErrInjAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint)", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2OTg5Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441069893", "bodyText": "We do have a single test for that in the SendMessages test suite", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2Njk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4MDA0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441080040", "bodyText": "For context, the SSLContext constructor was a very recent addition, and most of these tests were written before then.", "author": "timtay-microsoft", "createdAt": "2020-06-16T19:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2Njk2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2ODQzNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441068436", "bodyText": "nit: It would help if these constructors and parameterized test methods have some comments that describe what they do. I know this has been a point of confusion for me in the past, because these tests have pretty deep inheritance, and the test class and method names are not descriptive of what they are responsible for.", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:46:08Z", "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/messaging/SendMessagesAndroidRunner.java", "diffHunk": "@@ -26,19 +23,15 @@\n import java.net.URISyntaxException;\n import java.security.GeneralSecurityException;\n import java.util.Collection;\n-import java.util.Collections;\n \n-@TestGroup33\n+@TestGroup9\n @RunWith(Parameterized.class)\n-public class SendMessagesModuleAndroidRunner extends SendMessagesTests\n+public class SendMessagesAndroidRunner extends SendMessagesTests\n {\n     @Rule\n     public Rerun count = new Rerun(3);\n \n-    @Rule\n-    public ReportHelper reportHelper = Factory.getReportHelper();\n-\n-    public SendMessagesModuleAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint, boolean useHttpProxy) throws Exception\n+    public SendMessagesAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint, boolean useHttpProxy) throws Exception", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDU4NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441070585", "bodyText": "Sure thing, I can add some comments. I plan on removing the JVMRunner classes and moving their logic into the test classes themselves to help cut down on the inheritance.", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:49:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2ODQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2NDg0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441164840", "bodyText": "This effort will be in a different PR, since removing the JVMRunner classes is a big task", "author": "timtay-microsoft", "createdAt": "2020-06-16T21:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2ODQzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDMzMA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441070330", "bodyText": "removed, why?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:49:27Z", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -58,12 +56,6 @@ public void sendSecurityMessages() throws Exception\n     @Test\n     public void sendMessages() throws Exception\n     {\n-        if (testInstance.protocol == MQTT_WS && (testInstance.authenticationType == SELF_SIGNED || testInstance.authenticationType == CERTIFICATE_AUTHORITY))", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDgyNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441070826", "bodyText": "MQTT_WS does support x509 auth now. It's orthogonal to this PR, but worth enabling", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:50:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDgxMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441070813", "bodyText": "whoa!", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:50:21Z", "path": "vsts/RunTestsOnEmulator.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+\n+# -e flag to force this command to run on what should be the only emulator active on this machine\n+echo 'Installing APKs on emulator'\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk\n+\n+#List instrumentation classes, for logging purposes only\n+echo 'Listing available instrumentations:'\n+adb -e shell pm list instrumentation\n+echo ''\n+\n+annotationString=\"com.microsoft.azure.sdk.iot.android.helper.${TEST_GROUP_ID}\"\n+echo 'Running android tests with annotation'\n+echo $annotationString\n+\n+#Return code from adb shell isn't returned as one would expect. Need to capture output logs and analyze them to determine if this test run was a success or not", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MTE2OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441071168", "bodyText": "Yeah, I'm not happy about this. I don't have another way though", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:50:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDgxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MTUxMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441071512", "bodyText": "Do we get test results on the AzureDevOps pane, or will we have to parse the output log file?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:51:36Z", "path": "vsts/RunTestsOnEmulator.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+\n+# -e flag to force this command to run on what should be the only emulator active on this machine\n+echo 'Installing APKs on emulator'\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk\n+\n+#List instrumentation classes, for logging purposes only\n+echo 'Listing available instrumentations:'\n+adb -e shell pm list instrumentation\n+echo ''\n+\n+annotationString=\"com.microsoft.azure.sdk.iot.android.helper.${TEST_GROUP_ID}\"\n+echo 'Running android tests with annotation'\n+echo $annotationString\n+\n+#Return code from adb shell isn't returned as one would expect. Need to capture output logs and analyze them to determine if this test run was a success or not\n+TestLogs=$(adb -e shell am instrument -w -e annotation $annotationString com.iothub.azure.microsoft.com.androide2e.test/android.support.test.runner.AndroidJUnitRunner)\n+\n+echo 'Result of running tests'\n+echo \"$TestLogs\"\n+\n+#This string is always present in the output logs from android testing if a test failed. Hacky, but there is no return code\n+# to check instead.\n+FailureMessage='FAILURES!!!'\n+\n+if grep -q \"$FailureMessage\" <<< \"$TestLogs\"; then\n+    echo 'Test failures detected, exiting...'\n+    exit -1\n+fi", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3Mjc2Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441072766", "bodyText": "For now, you only get the logs. I'm still investigating how to improve this experience", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MTUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMDIyNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441110225", "bodyText": "Another question then - do we get a summary at the end?", "author": "abhipsaMisra", "createdAt": "2020-06-16T20:05:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MTUxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2Mzg1Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441163852", "bodyText": "Yes, there is a summary logged of all the failures that happened.", "author": "timtay-microsoft", "createdAt": "2020-06-16T21:53:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MTUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MjE2NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441072164", "bodyText": "are we testing against just a single android API version, or the mix and max that we claim to support?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:52:47Z", "path": "vsts/StartEmulator.sh", "diffHunk": "@@ -0,0 +1,32 @@\n+#!/usr/bin/env bash\n+\n+echo 'Listing available android sdks for installation'\n+$ANDROID_HOME/tools/bin/sdkmanager --list | grep system-images\n+\n+emulatorImage='system-images;android-28;google_apis;x86_64'", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MzE1MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441073151", "bodyText": "We only ever tested API 28 on App center, and this PR doesn't change that. In theory though, we could run the same tests on two or more android API versions", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:54:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MjE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MzQ4NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441073485", "bodyText": "The list operation on line 4 actually prints out all the alternatives to the system-images;android-28;google_apis;x86_64 that can be installed", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MjE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMDczMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441110733", "bodyText": "In theory though, we could run the same tests on two or more android API versions\n\nIs the effort small enough to add to this PR directly?", "author": "abhipsaMisra", "createdAt": "2020-06-16T20:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MjE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2NTE2Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441165162", "bodyText": "Sure, but we haven't had a requirement like that yet. I could see that being a separate PR, if we need it at all", "author": "timtay-microsoft", "createdAt": "2020-06-16T21:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MjE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MzczNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441073736", "bodyText": "does this file still exist?", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:55:50Z", "path": "vsts/install_appcenter_cli.ps1", "diffHunk": "@@ -1 +0,0 @@\n-\ufeffnpm install appcenter-cli", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3NDY3OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441074679", "bodyText": "No, that file is deleted", "author": "timtay-microsoft", "createdAt": "2020-06-16T18:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MzczNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3NDI3MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441074271", "bodyText": "so few env var required here!", "author": "abhipsaMisra", "createdAt": "2020-06-16T18:56:48Z", "path": "vsts/windowsLinuxAndAndroidBuildMatrixConfig.yaml", "diffHunk": "@@ -1,299 +1,249 @@\n name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)\n \n jobs:\n-### Windows ###\n-- job: Windows\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Windows\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/start_tpm_windows.ps1\n-    displayName: 'Start TPM Simulator'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+  ### Windows ###\n+  - job: Windows\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Windows\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/start_tpm_windows.ps1\n+        displayName: 'Start TPM Simulator'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3NjM1Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441076356", "bodyText": "Note that the android environment variable values are set during build time, not runtime. The APKs that are generated from a build contain the environment variables such as iothub connection string. As such, there is no need to include them here, too", "author": "timtay-microsoft", "createdAt": "2020-06-16T19:00:33Z", "path": "vsts/windowsLinuxAndAndroidBuildMatrixConfig.yaml", "diffHunk": "@@ -1,299 +1,249 @@\n name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)\n \n jobs:\n-### Windows ###\n-- job: Windows\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Windows\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/start_tpm_windows.ps1\n-    displayName: 'Start TPM Simulator'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+  ### Windows ###\n+  - job: Windows\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Windows\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/start_tpm_windows.ps1\n+        displayName: 'Start TPM Simulator'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()\n-    \n-### Linux ###\n-- job: Linux\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted Ubuntu 1604\n-  displayName: Linux\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: Docker@1\n-    displayName: 'Start TPM Simulator'\n-    inputs:\n-      containerregistrytype: 'Container Registry'\n-      command: 'Run an image'\n-      imageName: aziotbld/testtpm\n-      containerName: 'testtpm-instance'\n-      ports: |\n-       127.0.0.1:2321:2321\n-       127.0.0.1:2322:2322\n-      restartPolicy: unlessStopped      \n-      \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+  ### Linux ###\n+  - job: Linux\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted Ubuntu 1604\n+    displayName: Linux\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()  \n-    \n- ### Android, Multi configuration build (12 different test groups to cover) ###\n-- job: AndroidBuild\n-  timeoutInMinutes: 45\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Android Build\n+      - task: Docker@1\n+        displayName: 'Start TPM Simulator'\n+        inputs:\n+          containerregistrytype: 'Container Registry'\n+          command: 'Run an image'\n+          imageName: aziotbld/testtpm\n+          containerName: 'testtpm-instance'\n+          ports: |\n+            127.0.0.1:2321:2321\n+            127.0.0.1:2322:2322\n+          restartPolicy: unlessStopped\n \n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - powershell: ./vsts/android_java.cmd\n-    displayName: 'Android Build'\n-    env:\n-      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)\n-      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)\n-      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB) \n-    condition: always()\n-      \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'\n-      Contents: |\n-       *.*\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n-    \n-  - task: PublishPipelineArtifact@0\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'\n-    \n-- job: AndroidTest\n-  timeoutInMinutes: 80\n-  pool:\n-    vmImage: 'macOS-latest'\n-  strategy:\n-    maxParallel: 12\n-    matrix:\n-      TestGroup1:\n-        ANDROID_TEST_GROUP_ID: TestGroup1\n-      TestGroup2:\n-        ANDROID_TEST_GROUP_ID: TestGroup2\n-      TestGroup3:\n-        ANDROID_TEST_GROUP_ID: TestGroup3\n-      TestGroup4:\n-        ANDROID_TEST_GROUP_ID: TestGroup4\n-      TestGroup5:\n-        ANDROID_TEST_GROUP_ID: TestGroup5\n-      TestGroup6:\n-        ANDROID_TEST_GROUP_ID: TestGroup6\n-      TestGroup7:\n-        ANDROID_TEST_GROUP_ID: TestGroup7\n-      TestGroup8:\n-        ANDROID_TEST_GROUP_ID: TestGroup8\n-      TestGroup9:\n-        ANDROID_TEST_GROUP_ID: TestGroup9\n-      TestGroup10:\n-        ANDROID_TEST_GROUP_ID: TestGroup10\n-      TestGroup11:\n-        ANDROID_TEST_GROUP_ID: TestGroup11\n-      TestGroup12:\n-        ANDROID_TEST_GROUP_ID: TestGroup12\n-      TestGroup13:\n-        ANDROID_TEST_GROUP_ID: TestGroup13\n-      TestGroup14:\n-        ANDROID_TEST_GROUP_ID: TestGroup14\n-      TestGroup15:\n-        ANDROID_TEST_GROUP_ID: TestGroup15\n-      TestGroup16:\n-        ANDROID_TEST_GROUP_ID: TestGroup16\n-      TestGroup17:\n-        ANDROID_TEST_GROUP_ID: TestGroup17\n-      TestGroup18:\n-        ANDROID_TEST_GROUP_ID: TestGroup18\n-      TestGroup19:\n-        ANDROID_TEST_GROUP_ID: TestGroup19\n-      TestGroup20:\n-        ANDROID_TEST_GROUP_ID: TestGroup20\n-      TestGroup21:\n-        ANDROID_TEST_GROUP_ID: TestGroup21\n-      TestGroup22:\n-        ANDROID_TEST_GROUP_ID: TestGroup22\n-      TestGroup23:\n-        ANDROID_TEST_GROUP_ID: TestGroup23\n-      TestGroup24:\n-        ANDROID_TEST_GROUP_ID: TestGroup24\n-      TestGroup25:\n-        ANDROID_TEST_GROUP_ID: TestGroup25\n-      TestGroup26:\n-        ANDROID_TEST_GROUP_ID: TestGroup26\n-      TestGroup27:\n-        ANDROID_TEST_GROUP_ID: TestGroup27\n-      TestGroup28:\n-        ANDROID_TEST_GROUP_ID: TestGroup28\n-      TestGroup29:\n-        ANDROID_TEST_GROUP_ID: TestGroup29\n-      TestGroup30:\n-        ANDROID_TEST_GROUP_ID: TestGroup30\n-      TestGroup31:\n-        ANDROID_TEST_GROUP_ID: TestGroup31\n-      TestGroup32:\n-        ANDROID_TEST_GROUP_ID: TestGroup32\n-      TestGroup33:\n-        ANDROID_TEST_GROUP_ID: TestGroup33\n-      TestGroup34:\n-        ANDROID_TEST_GROUP_ID: TestGroup34\n-      TestGroup35:\n-        ANDROID_TEST_GROUP_ID: TestGroup35\n-      TestGroup36:\n-        ANDROID_TEST_GROUP_ID: TestGroup36\n-      TestGroup37:\n-        ANDROID_TEST_GROUP_ID: TestGroup37\n-      TestGroup38:\n-        ANDROID_TEST_GROUP_ID: TestGroup38\n-      TestGroup39:\n-        ANDROID_TEST_GROUP_ID: TestGroup39\n-      \n-  displayName: Android Test\n-  dependsOn: AndroidBuild\n-  steps:\n-  - task: PowerShell@2\n-    displayName: 'determine if testing needed'\n-    condition: always()\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1\n-    env:\n-      TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PowerShell@2\n-    displayName: 'Install app center cli'\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: './vsts/install_appcenter_cli.ps1'\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: DownloadPipelineArtifact@0\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: $(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk\n-  \n-  - task: AppCenterTest@1\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    displayName: 'E2E with Visual Studio App Center'\n-    inputs:\n-      appFile: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk'\n-      frameworkOption: espresso\n-      espressoBuildDirectory: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug'\n-      serverEndpoint: 'AppCenter connection aziotclb'\n-      appSlug: 'Azure-Iot-Sdk/androide2e'\n-      devices: 'Azure-Iot-Sdk/api28_2'\n-      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.$(ANDROID_TEST_GROUP_ID)'\n-      showDebugOutput: true\n\\ No newline at end of file\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n+\n+  ### Android, Multi configuration build (12 different test groups to cover) ###\n+  - job: AndroidBuild\n+    timeoutInMinutes: 45\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Android Build\n+\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n+\n+      - powershell: ./vsts/android_java.cmd\n+        displayName: 'Android Build'\n+        env:\n+          IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)\n+          DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)\n+          IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)\n+          INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+        condition: always()\n+\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'\n+          Contents: |\n+            *.*\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n+\n+      - task: PublishPipelineArtifact@0\n+        inputs:\n+          artifactName: 'androidBuildFiles'\n+          targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'\n+\n+  - job: AndroidTest\n+    timeoutInMinutes: 80\n+    pool:\n+      vmImage: 'macOS-latest'\n+    strategy:\n+      maxParallel: 17\n+      matrix:\n+        TestGroup1:\n+          ANDROID_TEST_GROUP_ID: TestGroup1\n+        TestGroup2:\n+          ANDROID_TEST_GROUP_ID: TestGroup2\n+        TestGroup3:\n+          ANDROID_TEST_GROUP_ID: TestGroup3\n+        TestGroup4:\n+          ANDROID_TEST_GROUP_ID: TestGroup4\n+        TestGroup5:\n+          ANDROID_TEST_GROUP_ID: TestGroup5\n+        TestGroup6:\n+          ANDROID_TEST_GROUP_ID: TestGroup6\n+        TestGroup7:\n+          ANDROID_TEST_GROUP_ID: TestGroup7\n+        TestGroup8:\n+          ANDROID_TEST_GROUP_ID: TestGroup8\n+        TestGroup9:\n+          ANDROID_TEST_GROUP_ID: TestGroup9\n+        TestGroup10:\n+          ANDROID_TEST_GROUP_ID: TestGroup10\n+        TestGroup11:\n+          ANDROID_TEST_GROUP_ID: TestGroup11\n+        TestGroup12:\n+          ANDROID_TEST_GROUP_ID: TestGroup12\n+        TestGroup13:\n+          ANDROID_TEST_GROUP_ID: TestGroup13\n+        TestGroup14:\n+          ANDROID_TEST_GROUP_ID: TestGroup14\n+        TestGroup15:\n+          ANDROID_TEST_GROUP_ID: TestGroup15\n+        TestGroup16:\n+          ANDROID_TEST_GROUP_ID: TestGroup16\n+        TestGroup17:\n+          ANDROID_TEST_GROUP_ID: TestGroup17\n+\n+    displayName: Android Test\n+    dependsOn: AndroidBuild\n+    steps:\n+      - task: PowerShell@2\n+        displayName: 'determine if testing needed'\n+        condition: always()\n+        inputs:\n+          targetType: 'filePath'\n+          filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1\n+        env:\n+          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+\n+      - task: DownloadPipelineArtifact@0\n+        condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n+        inputs:\n+          artifactName: 'androidBuildFiles'\n+          targetPath: $(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk\n+\n+      - task: Bash@3\n+        displayName: 'Start Android Emulator'\n+        inputs:\n+          targetType: 'filePath'\n+          filePath: '$(Build.SourcesDirectory)/vsts/StartEmulator.sh'\n+\n+      - task: Bash@3\n+        displayName: 'Run tests on emulator'\n+        inputs:\n+          targetType: 'filePath'\n+          filePath: '$(Build.SourcesDirectory)/vsts/RunTestsOnEmulator.sh'\n+        env:\n+          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)", "originalCommit": "a0f7facd9cbdb16f6d47c1860499757aa143726a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4df6c35dd81bd650c3ff6a1b39849819c86ec309", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4df6c35dd81bd650c3ff6a1b39849819c86ec309", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.", "committedDate": "2020-06-16T19:03:12Z", "type": "commit"}, {"oid": "4df6c35dd81bd650c3ff6a1b39849819c86ec309", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4df6c35dd81bd650c3ff6a1b39849819c86ec309", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.", "committedDate": "2020-06-16T19:03:12Z", "type": "forcePushed"}, {"oid": "a0cefc505f5eca8351672576b538ff7da72bfdcb", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a0cefc505f5eca8351672576b538ff7da72bfdcb", "message": "fix", "committedDate": "2020-06-16T19:19:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMzA2NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441113064", "bodyText": "The doc mentioned that: The Android Emulator is currently available only on the Hosted macOS agent.\nBut we seem to be using a win image here?", "author": "abhipsaMisra", "createdAt": "2020-06-16T20:10:47Z", "path": "vsts/windowsLinuxAndAndroidBuildMatrixConfig.yaml", "diffHunk": "@@ -1,299 +1,248 @@\n name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)\n \n jobs:\n-### Windows ###\n-- job: Windows\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Windows\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/start_tpm_windows.ps1\n-    displayName: 'Start TPM Simulator'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+  ### Windows ###\n+  - job: Windows\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Windows\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/start_tpm_windows.ps1\n+        displayName: 'Start TPM Simulator'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()\n-    \n-### Linux ###\n-- job: Linux\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted Ubuntu 1604\n-  displayName: Linux\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: Docker@1\n-    displayName: 'Start TPM Simulator'\n-    inputs:\n-      containerregistrytype: 'Container Registry'\n-      command: 'Run an image'\n-      imageName: aziotbld/testtpm\n-      containerName: 'testtpm-instance'\n-      ports: |\n-       127.0.0.1:2321:2321\n-       127.0.0.1:2322:2322\n-      restartPolicy: unlessStopped      \n-      \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+  ### Linux ###\n+  - job: Linux\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted Ubuntu 1604\n+    displayName: Linux\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()  \n-    \n- ### Android, Multi configuration build (12 different test groups to cover) ###\n-- job: AndroidBuild\n-  timeoutInMinutes: 45\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Android Build\n+      - task: Docker@1\n+        displayName: 'Start TPM Simulator'\n+        inputs:\n+          containerregistrytype: 'Container Registry'\n+          command: 'Run an image'\n+          imageName: aziotbld/testtpm\n+          containerName: 'testtpm-instance'\n+          ports: |\n+            127.0.0.1:2321:2321\n+            127.0.0.1:2322:2322\n+          restartPolicy: unlessStopped\n \n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - powershell: ./vsts/android_java.cmd\n-    displayName: 'Android Build'\n-    env:\n-      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)\n-      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)\n-      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB) \n-    condition: always()\n-      \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'\n-      Contents: |\n-       *.*\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n-    \n-  - task: PublishPipelineArtifact@0\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'\n-    \n-- job: AndroidTest\n-  timeoutInMinutes: 80\n-  pool:\n-    vmImage: 'macOS-latest'\n-  strategy:\n-    maxParallel: 12\n-    matrix:\n-      TestGroup1:\n-        ANDROID_TEST_GROUP_ID: TestGroup1\n-      TestGroup2:\n-        ANDROID_TEST_GROUP_ID: TestGroup2\n-      TestGroup3:\n-        ANDROID_TEST_GROUP_ID: TestGroup3\n-      TestGroup4:\n-        ANDROID_TEST_GROUP_ID: TestGroup4\n-      TestGroup5:\n-        ANDROID_TEST_GROUP_ID: TestGroup5\n-      TestGroup6:\n-        ANDROID_TEST_GROUP_ID: TestGroup6\n-      TestGroup7:\n-        ANDROID_TEST_GROUP_ID: TestGroup7\n-      TestGroup8:\n-        ANDROID_TEST_GROUP_ID: TestGroup8\n-      TestGroup9:\n-        ANDROID_TEST_GROUP_ID: TestGroup9\n-      TestGroup10:\n-        ANDROID_TEST_GROUP_ID: TestGroup10\n-      TestGroup11:\n-        ANDROID_TEST_GROUP_ID: TestGroup11\n-      TestGroup12:\n-        ANDROID_TEST_GROUP_ID: TestGroup12\n-      TestGroup13:\n-        ANDROID_TEST_GROUP_ID: TestGroup13\n-      TestGroup14:\n-        ANDROID_TEST_GROUP_ID: TestGroup14\n-      TestGroup15:\n-        ANDROID_TEST_GROUP_ID: TestGroup15\n-      TestGroup16:\n-        ANDROID_TEST_GROUP_ID: TestGroup16\n-      TestGroup17:\n-        ANDROID_TEST_GROUP_ID: TestGroup17\n-      TestGroup18:\n-        ANDROID_TEST_GROUP_ID: TestGroup18\n-      TestGroup19:\n-        ANDROID_TEST_GROUP_ID: TestGroup19\n-      TestGroup20:\n-        ANDROID_TEST_GROUP_ID: TestGroup20\n-      TestGroup21:\n-        ANDROID_TEST_GROUP_ID: TestGroup21\n-      TestGroup22:\n-        ANDROID_TEST_GROUP_ID: TestGroup22\n-      TestGroup23:\n-        ANDROID_TEST_GROUP_ID: TestGroup23\n-      TestGroup24:\n-        ANDROID_TEST_GROUP_ID: TestGroup24\n-      TestGroup25:\n-        ANDROID_TEST_GROUP_ID: TestGroup25\n-      TestGroup26:\n-        ANDROID_TEST_GROUP_ID: TestGroup26\n-      TestGroup27:\n-        ANDROID_TEST_GROUP_ID: TestGroup27\n-      TestGroup28:\n-        ANDROID_TEST_GROUP_ID: TestGroup28\n-      TestGroup29:\n-        ANDROID_TEST_GROUP_ID: TestGroup29\n-      TestGroup30:\n-        ANDROID_TEST_GROUP_ID: TestGroup30\n-      TestGroup31:\n-        ANDROID_TEST_GROUP_ID: TestGroup31\n-      TestGroup32:\n-        ANDROID_TEST_GROUP_ID: TestGroup32\n-      TestGroup33:\n-        ANDROID_TEST_GROUP_ID: TestGroup33\n-      TestGroup34:\n-        ANDROID_TEST_GROUP_ID: TestGroup34\n-      TestGroup35:\n-        ANDROID_TEST_GROUP_ID: TestGroup35\n-      TestGroup36:\n-        ANDROID_TEST_GROUP_ID: TestGroup36\n-      TestGroup37:\n-        ANDROID_TEST_GROUP_ID: TestGroup37\n-      TestGroup38:\n-        ANDROID_TEST_GROUP_ID: TestGroup38\n-      TestGroup39:\n-        ANDROID_TEST_GROUP_ID: TestGroup39\n-      \n-  displayName: Android Test\n-  dependsOn: AndroidBuild\n-  steps:\n-  - task: PowerShell@2\n-    displayName: 'determine if testing needed'\n-    condition: always()\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1\n-    env:\n-      TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PowerShell@2\n-    displayName: 'Install app center cli'\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: './vsts/install_appcenter_cli.ps1'\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: DownloadPipelineArtifact@0\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: $(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk\n-  \n-  - task: AppCenterTest@1\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    displayName: 'E2E with Visual Studio App Center'\n-    inputs:\n-      appFile: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk'\n-      frameworkOption: espresso\n-      espressoBuildDirectory: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug'\n-      serverEndpoint: 'AppCenter connection aziotclb'\n-      appSlug: 'Azure-Iot-Sdk/androide2e'\n-      devices: 'Azure-Iot-Sdk/api28_2'\n-      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.$(ANDROID_TEST_GROUP_ID)'\n-      showDebugOutput: true\n\\ No newline at end of file\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n+\n+  ### Android, Multi configuration build (12 different test groups to cover) ###\n+  - job: AndroidBuild\n+    timeoutInMinutes: 45\n+    pool:\n+      name: Hosted VS2017", "originalCommit": "a0cefc505f5eca8351672576b538ff7da72bfdcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMzM0Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441113347", "bodyText": "Ah, I see the AndroidTest uses macOS-latest", "author": "abhipsaMisra", "createdAt": "2020-06-16T20:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMzA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExNjA5Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441116093", "bodyText": "We build the android APKs on a windows image, but the Android Test portion of this yaml is all on a Mac OS", "author": "timtay-microsoft", "createdAt": "2020-06-16T20:17:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMzA2NA=="}], "type": "inlineReview"}]}