{"pr_number": 791, "pr_title": "feat(iot-dev): Add support for PnP Model Id", "pr_createdAt": "2020-06-02T19:15:32Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/791", "timeline": [{"oid": "1130d91ff061e91d8f0c9ac113a412501a363122", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/1130d91ff061e91d8f0c9ac113a412501a363122", "message": "model id initial changes", "committedDate": "2020-06-02T19:12:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTkyNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434125925", "bodyText": "I am calling this the digital twin model id", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:28:16Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ClientOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public final class ClientOptions\n+{\n+    /**\n+     * The Plug and Play Model Id associated with the device identity.", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNzg0NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434127844", "bodyText": "Isn't lombok so cool! :)", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:32:01Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClientConfig.java", "diffHunk": "@@ -38,6 +39,10 @@\n     private boolean useWebsocket;\n     private ProxySettings proxySettings;\n \n+    @Getter\n+    @Setter(AccessLevel.PROTECTED)", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NzM0OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434167348", "bodyText": "why not private?", "author": "prmathur-microsoft", "createdAt": "2020-06-02T20:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNzg0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4NzA3Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434187076", "bodyText": "lombok looks cool. New learnings for me :)", "author": "vinagesh", "createdAt": "2020-06-02T21:30:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNzg0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyOTAxMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434129013", "bodyText": "I renamed this to API_VERSION_PREVIEW, and added a comment that clarifies that this is for pnp support", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:34:02Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/net/IotHubUri.java", "diffHunk": "@@ -28,6 +28,9 @@\n     /** The API version will be passed as a param in the URI. */\n     public static final String API_VERSION = \"api-version=\" + TransportUtils.IOTHUB_API_VERSION;\n \n+    /** The API version will be passed as a param in the URI for PnP. */\n+    public static final String PNP_API_VERSION = \"api-version=\" + TransportUtils.PNP_IOTHUB_API_VERSION;", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyOTE2Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434129167", "bodyText": "This as \"preview\" as well", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:34:22Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/TransportUtils.java", "diffHunk": "@@ -8,6 +8,7 @@\n public class TransportUtils\n {\n     public static String IOTHUB_API_VERSION = \"2019-10-01\";\n+    public static String PNP_IOTHUB_API_VERSION = \"2020-05-31-preview\";", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMTg3NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434131875", "bodyText": "sure can change it", "author": "bikamani", "createdAt": "2020-06-02T19:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyOTE2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyOTg3OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434129879", "bodyText": "modelId == null || modelId.isEmpty()", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:35:47Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -151,7 +151,18 @@ else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509\n                     clientId += \"/\" + moduleId;\n                 }\n \n-                this.iotHubUserName = this.config.getIotHubHostname() + \"/\" + clientId + \"/\" + API_VERSION + \"&\" + clientUserAgentIdentifier;\n+                String apiVersion;\n+                String modelId = this.config.getModelId();\n+                if(modelId == null)", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NTYzNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434195634", "bodyText": "Looks like java does not have a single function for this :)", "author": "vinagesh", "createdAt": "2020-06-02T21:50:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyOTg3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMDQxOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434130418", "bodyText": "rename this to serverParam or something similar, this has both api version and model Id (for preview APIs)", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:36:50Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -151,7 +151,18 @@ else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509\n                     clientId += \"/\" + moduleId;\n                 }\n \n-                this.iotHubUserName = this.config.getIotHubHostname() + \"/\" + clientId + \"/\" + API_VERSION + \"&\" + clientUserAgentIdentifier;\n+                String apiVersion;", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMjY5Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434132692", "bodyText": "I know. I thought about a better naming! I would be looking any other suggestions too other than serverParam. :)", "author": "bikamani", "createdAt": "2020-06-02T19:41:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMDQxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NzE5Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434197192", "bodyText": "An option to consider might be - Define two variabes - apiVersion, modelIdParam and initialize both inside the if-else. When you do str concatenation later, it should just work (if it works like c#)\nthis.iotHubUserName = this.config.getIotHubHostname() + \"/\" + clientId + \"/?api-version=\" + apiVersion + modelIdParam\nIn java i'm not entirely sure what happens if modelIdParam = null during concatenation", "author": "vinagesh", "createdAt": "2020-06-02T21:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMDQxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjk0Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434222942", "bodyText": "I like your suggestion. I also need to check how it works in case where modelId is not part of username. Currently I have it renamed as per Abhipsa's comment", "author": "bikamani", "createdAt": "2020-06-02T23:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMDQxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMTg5Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434131896", "bodyText": "how is this assertion relevant here?", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:39:49Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -147,6 +148,34 @@ public void constructorSuccess() throws URISyntaxException, IOException\n         };\n     }\n \n+    @Test\n+    public void constructorWithClientOptionsSuccess() throws URISyntaxException, IOException\n+    {\n+        // arrange\n+        final String connString = \"HostName=iothub.device.com;CredentialType=SharedAccessKey;CredentialScope=Device;deviceId=testdevice;SharedAccessKey=adjkl234j52=;\";\n+        final IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\n+        final ClientOptions clientOptions = new ClientOptions();\n+        clientOptions.setModelId(\"dtmi:Company:device:1\");\n+\n+        // act\n+        final DeviceClient client = new DeviceClient(connString, protocol, clientOptions);\n+\n+        // assert\n+        new Verifications()\n+        {\n+            {\n+                IotHubConnectionString iotHubConnectionString = Deencapsulation.newInstance(IotHubConnectionString.class, connString);\n+                times = 1;\n+\n+                IoTHubConnectionType ioTHubConnectionType = Deencapsulation.getField(client, \"ioTHubConnectionType\");\n+                assertEquals(SINGLE_CLIENT, ioTHubConnectionType);\n+\n+                TransportClient transportClient = Deencapsulation.getField(client, \"transportClient\");", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNDg0Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434134847", "bodyText": "From our legacy tests:  The constructor shall set the transportClient to null.\nWhat do you think is releavant?", "author": "bikamani", "createdAt": "2020-06-02T19:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMTg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNjQxNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434136415", "bodyText": "I don't understand why initializing a device client sets the transportClient to null, and how that is relevant to this test case.", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMTg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMjUxNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434132516", "bodyText": "Todo here", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:41:07Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -245,6 +310,28 @@ public void createFromSecurityProviderUsesUriAndDeviceIdAndSavesSecurityProvider\n         };\n     }\n \n+    @Test\n+    public void createFromSecurityProviderUsesUriAndDeviceIdAndSavesSecurityProviderAndCreatesDeviceIOWithClientOptions() throws URISyntaxException, IOException\n+    {\n+        //arrange\n+        final String expectedUri = \"some uri\";\n+        final String expectedDeviceId = \"some device id\";\n+        final IotHubClientProtocol expectedProtocol = IotHubClientProtocol.HTTPS;\n+        final ClientOptions clientOptions = new ClientOptions();\n+        clientOptions.setModelId(\"dtmi:Company:device:1\");\n+\n+        //act\n+        DeviceClient.createFromSecurityProvider(expectedUri, expectedDeviceId, mockSecurityProvider, expectedProtocol);\n+\n+        //assert\n+        new Verifications()\n+        {\n+            {\n+                //TODO add check for super() call", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMzA1MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434133050", "bodyText": "What are we doing with iotHubConnectionString here?", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:42:17Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -147,6 +148,34 @@ public void constructorSuccess() throws URISyntaxException, IOException\n         };\n     }\n \n+    @Test\n+    public void constructorWithClientOptionsSuccess() throws URISyntaxException, IOException\n+    {\n+        // arrange\n+        final String connString = \"HostName=iothub.device.com;CredentialType=SharedAccessKey;CredentialScope=Device;deviceId=testdevice;SharedAccessKey=adjkl234j52=;\";\n+        final IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\n+        final ClientOptions clientOptions = new ClientOptions();\n+        clientOptions.setModelId(\"dtmi:Company:device:1\");\n+\n+        // act\n+        final DeviceClient client = new DeviceClient(connString, protocol, clientOptions);\n+\n+        // assert\n+        new Verifications()\n+        {\n+            {\n+                IotHubConnectionString iotHubConnectionString = Deencapsulation.newInstance(IotHubConnectionString.class, connString);", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNjA2Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434136063", "bodyText": "good catch, it's unused", "author": "bikamani", "createdAt": "2020-06-02T19:48:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMzA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzMzM2NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434133365", "bodyText": "Can you explain what we are testing here?", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:42:53Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -222,6 +251,42 @@ public void constructorWithSSLContextSuccess(@Mocked final SSLContext mockedSSLC\n         };\n     }\n \n+    @Test\n+    public void constructorWithSSLContextClientOptionsSuccess(@Mocked final SSLContext mockedSSLContext) throws URISyntaxException\n+    {\n+        // arrange\n+        final String connString =\n+                \"HostName=iothub.device.com;deviceId=testdevice;x509=true\";\n+        final IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\n+        final ClientOptions clientOptions = new ClientOptions();\n+        clientOptions.setModelId(\"dtmi:Company:device:1\");\n+\n+        new Expectations()\n+        {\n+            {\n+                new IotHubConnectionString(connString);\n+                result = mockIotHubConnectionString;\n+            }\n+        };\n+\n+        // act\n+        final DeviceClient client = new DeviceClient(connString, protocol, mockedSSLContext, clientOptions);\n+\n+        // assert\n+        new Verifications()\n+        {\n+            {\n+                IoTHubConnectionType ioTHubConnectionType = Deencapsulation.getField(client, \"ioTHubConnectionType\");\n+                assertEquals(SINGLE_CLIENT, ioTHubConnectionType);\n+\n+                TransportClient transportClient = Deencapsulation.getField(client, \"transportClient\");\n+                assertNull(transportClient);\n+\n+                new DeviceClientConfig(mockIotHubConnectionString, mockedSSLContext);", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNTExNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434135115", "bodyText": "nit: this assertion is not really relevant to this test", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:46:13Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java", "diffHunk": "@@ -308,6 +310,53 @@ public void openEstablishesConnectionUsingCorrectConfig() throws IOException, Tr\n         };\n     }\n \n+    @Test\n+    public void openEstablishesConnectionUsingModelIdSetsCorrectPreviewApiVersion() throws IOException, TransportException\n+    {\n+        final String expectedSasToken = \"someToken\";\n+        final String serverUri = SSL_PREFIX + iotHubHostName + SSL_PORT_SUFFIX;\n+        baseExpectations();\n+\n+        new Expectations()\n+        {\n+            {\n+                mockConfig.getAuthenticationType();\n+                result = DeviceClientConfig.AuthType.SAS_TOKEN;\n+                mockConfig.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                result = expectedSasToken;\n+                mockConfig.isUseWebsocket();\n+                result = false;\n+                mockConfig.getModelId();\n+                result = modelId;\n+            }\n+        };\n+\n+        MqttIotHubConnection connection = new MqttIotHubConnection(mockConfig);\n+        Deencapsulation.setField(connection, \"listener\", mockedIotHubListener);\n+        connection.open(mockedQueue, mockedScheduledExecutorService);\n+\n+        final String actualIotHubUserName = Deencapsulation.getField(connection, \"iotHubUserName\");\n+\n+        String clientIdentifier = \"DeviceClientType=\" + URLEncoder.encode(TransportUtils.USER_AGENT_STRING, \"UTF-8\").replaceAll(\"\\\\+\", \"%20\");\n+        assertTrue(actualIotHubUserName.contains(iotHubHostName + \"/\" + deviceId + \"/\" + PNP_API_VERSION));\n+\n+        final String actualUserPassword = Deencapsulation.getField(connection, \"iotHubUserPassword\");", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNTI1OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434135259", "bodyText": "Add another test for scenario where you don't set the model Id", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:46:30Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java", "diffHunk": "@@ -308,6 +310,53 @@ public void openEstablishesConnectionUsingCorrectConfig() throws IOException, Tr\n         };\n     }\n \n+    @Test\n+    public void openEstablishesConnectionUsingModelIdSetsCorrectPreviewApiVersion() throws IOException, TransportException", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzODg1Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434138852", "bodyText": "If you look at openEstablishesConnectionUsingCorrectConfig - this does not set model id and makes sure API version is IOTHUB_API_VERSION so it is already covered", "author": "bikamani", "createdAt": "2020-06-02T19:53:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNTI1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0MDQwMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434140403", "bodyText": "cool", "author": "abhipsaMisra", "createdAt": "2020-06-02T19:56:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNTI1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0ODQ5OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434148499", "bodyText": "Add a note that non plug and play users should not set this value", "author": "timtay-microsoft", "createdAt": "2020-06-02T20:12:22Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ClientOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public final class ClientOptions\n+{\n+    /**\n+     * The Plug and Play Model Id associated with the device identity.", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4NzI3Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434187273", "bodyText": "will do", "author": "bikamani", "createdAt": "2020-06-02T21:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0ODQ5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0ODgyOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434148828", "bodyText": "Add a description to this class. Something about how it is for constructor time options that won't change for as long as this client exists", "author": "timtay-microsoft", "createdAt": "2020-06-02T20:13:00Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ClientOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public final class ClientOptions", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0OTI0NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434149244", "bodyText": "Just make this constructor call your new constructor but with a null client options. No need to call commonConstructorVerifications/setup here and in your new constructor", "author": "timtay-microsoft", "createdAt": "2020-06-02T20:13:55Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java", "diffHunk": "@@ -173,7 +173,7 @@ public DeviceClient(String connString, TransportClient transportClient) throws U\n     public DeviceClient(String connString, IotHubClientProtocol protocol) throws URISyntaxException, IllegalArgumentException\n     {", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4OTEwNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434189104", "bodyText": "Agreed", "author": "bikamani", "createdAt": "2020-06-02T21:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0OTI0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MDg2Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434150867", "bodyText": "What is this import for?", "author": "timtay-microsoft", "createdAt": "2020-06-02T20:17:09Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -11,6 +11,7 @@\n import com.microsoft.azure.sdk.iot.device.fileupload.FileUpload;\n import com.microsoft.azure.sdk.iot.device.transport.amqps.IoTHubConnectionType;\n import com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider;\n+import com.sun.security.ntlm.Client;", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5MTg1MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434191851", "bodyText": "I'll remove it, it may have been added when I was adding some changes.", "author": "bikamani", "createdAt": "2020-06-02T21:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MDg2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MTAyOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434151029", "bodyText": "TODO?", "author": "timtay-microsoft", "createdAt": "2020-06-02T20:17:26Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -245,6 +310,28 @@ public void createFromSecurityProviderUsesUriAndDeviceIdAndSavesSecurityProvider\n         };\n     }\n \n+    @Test\n+    public void createFromSecurityProviderUsesUriAndDeviceIdAndSavesSecurityProviderAndCreatesDeviceIOWithClientOptions() throws URISyntaxException, IOException\n+    {\n+        //arrange\n+        final String expectedUri = \"some uri\";\n+        final String expectedDeviceId = \"some device id\";\n+        final IotHubClientProtocol expectedProtocol = IotHubClientProtocol.HTTPS;\n+        final ClientOptions clientOptions = new ClientOptions();\n+        clientOptions.setModelId(\"dtmi:Company:device:1\");\n+\n+        //act\n+        DeviceClient.createFromSecurityProvider(expectedUri, expectedDeviceId, mockSecurityProvider, expectedProtocol);\n+\n+        //assert\n+        new Verifications()\n+        {\n+            {\n+                //TODO add check for super() call", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5MjIwNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434192205", "bodyText": "I'll take care of this.", "author": "bikamani", "createdAt": "2020-06-02T21:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MTAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MTI5Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434151296", "bodyText": "factor out the \"?api-version=\" string and reference it in these two places", "author": "timtay-microsoft", "createdAt": "2020-06-02T20:17:59Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java", "diffHunk": "@@ -42,8 +42,10 @@\n     final String iotHubHostName = \"test.host.name\";\n     final String hubName = \"test.iothub\";\n     final String deviceId = \"test-deviceId\";\n+    final String modelId = \"dtmi:my:company:namespace;1\";\n     final String deviceKey = \"test-devicekey?&test\";\n-    final String API_VERSION = Deencapsulation.getField(MqttIotHubConnection.class, \"API_VERSION\");\n+    final String API_VERSION = \"?api-version=\" + TransportUtils.IOTHUB_API_VERSION;", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NjI0Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434166247", "bodyText": "Why can't SSLContext be part of clientOptions?", "author": "prmathur-microsoft", "createdAt": "2020-06-02T20:47:51Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java", "diffHunk": "@@ -229,7 +255,26 @@ public DeviceClient(String connString, IotHubClientProtocol protocol, String pub\n      */\n     public DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext) throws URISyntaxException\n     {\n-        super(new IotHubConnectionString(connString), protocol, sslContext, SEND_PERIOD_MILLIS, getReceivePeriod(protocol));\n+        super(new IotHubConnectionString(connString), protocol, sslContext, SEND_PERIOD_MILLIS, getReceivePeriod(protocol), null);\n+        commonConstructorVerifications();\n+        commonConstructorSetup();\n+    }\n+\n+    /**\n+     * Creates a device client that uses the provided SSLContext for SSL negotiation\n+     * @param connString the connection string for the device. May be an x509 connection string (format: \"HostName=...;DeviceId=...;x509=true\")\n+     *                   and it may be a SAS connection string (format: \"HostName=...;DeviceId=...;SharedAccessKey=...\"). If\n+     *                   this connection string is an x509 connection string, the client will use the provided SSLContext for authentication.\n+     * @param protocol the protocol to use when communicating with IotHub\n+     * @param sslContext the ssl context that will be used during authentication. If the provided connection string does not contain\n+     *                   SAS based credentials, then the sslContext will be used for x509 authentication. If the provided connection string\n+     *                   does contain SAS based credentials, the sslContext will still be used during SSL negotiation.\n+     * @param clientOptions The options that allow configuration of the device client instance during initialization\n+     * @throws URISyntaxException if the hostname in the connection string is not a valid URI\n+     */\n+    public DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext, ClientOptions clientOptions) throws URISyntaxException", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5MzQ0OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434193448", "bodyText": "How would that work with other constructors?", "author": "bikamani", "createdAt": "2020-06-02T21:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NjI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIwMjYyOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434202628", "bodyText": "Is it possible to just have 2 constructors and maybe SSLContext can be set to null in ClientOptions if user does not want to use it?", "author": "vinagesh", "createdAt": "2020-06-02T22:08:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NjI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4ODM2MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434788360", "bodyText": "As this is a new API, I don't see reason why you can't do that.", "author": "prmathur-microsoft", "createdAt": "2020-06-03T19:01:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NjI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0NzY2OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r436047668", "bodyText": "We have resolved this offline and I will be sending out a PR for these changes.", "author": "bikamani", "createdAt": "2020-06-05T17:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NjI0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2Njc0MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434166741", "bodyText": "URI is not connection string. Isn't it hostname only?", "author": "prmathur-microsoft", "createdAt": "2020-06-02T20:48:55Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java", "diffHunk": "@@ -247,7 +292,24 @@ public DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext\n      */\n     public static DeviceClient createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol) throws URISyntaxException, IOException\n     {\n-        return new DeviceClient(uri, deviceId, securityProvider, protocol);\n+        return new DeviceClient(uri, deviceId, securityProvider, protocol, null);\n+    }\n+\n+    /**\n+     * Creates a device client that uses the provided security provider for authentication.\n+     *\n+     * @param uri The connection string for iot hub to connect to (format: \"yourHubName.azure-devices.net\")", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NDA4MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434194080", "bodyText": "it is hostname. will modify this comment", "author": "bikamani", "createdAt": "2020-06-02T21:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2Njc0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2ODkzNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434168934", "bodyText": "Please add a detail comment as to why are we adding preview API here", "author": "prmathur-microsoft", "createdAt": "2020-06-02T20:53:14Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/TransportUtils.java", "diffHunk": "@@ -8,6 +8,7 @@\n public class TransportUtils\n {\n     public static String IOTHUB_API_VERSION = \"2019-10-01\";\n+    public static String PNP_IOTHUB_API_VERSION = \"2020-05-31-preview\";", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NjAxMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434196012", "bodyText": "added", "author": "bikamani", "createdAt": "2020-06-02T21:51:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2ODkzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5Nzk0NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434197945", "bodyText": "is this a real connection string or fake?", "author": "vinagesh", "createdAt": "2020-06-02T21:56:51Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -147,6 +148,34 @@ public void constructorSuccess() throws URISyntaxException, IOException\n         };\n     }\n \n+    @Test\n+    public void constructorWithClientOptionsSuccess() throws URISyntaxException, IOException\n+    {\n+        // arrange\n+        final String connString = \"HostName=iothub.device.com;CredentialType=SharedAccessKey;CredentialScope=Device;deviceId=testdevice;SharedAccessKey=adjkl234j52=;\";", "originalCommit": "1130d91ff061e91d8f0c9ac113a412501a363122", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxODY0MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434218641", "bodyText": "It is fake may be never changed in our legacy test code. I am removing these tests as they seem unnecessary after rethinking. But this is good to address in follow up PR so I'll keep a note of this.", "author": "bikamani", "createdAt": "2020-06-02T22:55:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5Nzk0NQ=="}], "type": "inlineReview"}, {"oid": "61a643150c734a840275aea13c6127c7d50422d8", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/61a643150c734a840275aea13c6127c7d50422d8", "message": "address comments and remove unnecessary tests", "committedDate": "2020-06-02T23:01:10Z", "type": "commit"}, {"oid": "3edfdcc2077b7d6b78e66802b6bb8c85d314a4c5", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/3edfdcc2077b7d6b78e66802b6bb8c85d314a4c5", "message": "remove unnecessary test commit#2", "committedDate": "2020-06-02T23:05:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNDMyMw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434224323", "bodyText": "the hostname of the", "author": "timtay-microsoft", "createdAt": "2020-06-02T23:13:05Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java", "diffHunk": "@@ -229,15 +247,32 @@ public DeviceClient(String connString, IotHubClientProtocol protocol, String pub\n      */\n     public DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext) throws URISyntaxException\n     {\n-        super(new IotHubConnectionString(connString), protocol, sslContext, SEND_PERIOD_MILLIS, getReceivePeriod(protocol));\n+        new DeviceClient(connString, protocol, sslContext, null);\n+    }\n+\n+    /**\n+     * Creates a device client that uses the provided SSLContext for SSL negotiation\n+     * @param connString the connection string for the device. May be an x509 connection string (format: \"HostName=...;DeviceId=...;x509=true\")\n+     *                   and it may be a SAS connection string (format: \"HostName=...;DeviceId=...;SharedAccessKey=...\"). If\n+     *                   this connection string is an x509 connection string, the client will use the provided SSLContext for authentication.\n+     * @param protocol the protocol to use when communicating with IotHub\n+     * @param sslContext the ssl context that will be used during authentication. If the provided connection string does not contain\n+     *                   SAS based credentials, then the sslContext will be used for x509 authentication. If the provided connection string\n+     *                   does contain SAS based credentials, the sslContext will still be used during SSL negotiation.\n+     * @param clientOptions The options that allow configuration of the device client instance during initialization\n+     * @throws URISyntaxException if the hostname in the connection string is not a valid URI\n+     */\n+    public DeviceClient(String connString, IotHubClientProtocol protocol, SSLContext sslContext, ClientOptions clientOptions) throws URISyntaxException\n+    {\n+        super(new IotHubConnectionString(connString), protocol, sslContext, SEND_PERIOD_MILLIS, getReceivePeriod(protocol), clientOptions);\n         commonConstructorVerifications();\n         commonConstructorSetup();\n     }\n \n     /**\n      * Creates a device client that uses the provided security provider for authentication.\n      *\n-     * @param uri The connection string for iot hub to connect to (format: \"yourHubName.azure-devices.net\")\n+     * @param uri The hostname of iot hub to connect to (format: \"yourHubName.azure-devices.net\")", "originalCommit": "3edfdcc2077b7d6b78e66802b6bb8c85d314a4c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fadba8bb34e6809b1caa62262de3bab4a673170c", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/fadba8bb34e6809b1caa62262de3bab4a673170c", "message": "fix uts", "committedDate": "2020-06-03T01:11:27Z", "type": "commit"}, {"oid": "02b4534942335cbba0e7800d99433f17a206dec9", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/02b4534942335cbba0e7800d99433f17a206dec9", "message": "add minor changes", "committedDate": "2020-06-03T01:12:44Z", "type": "commit"}, {"oid": "7a107d7d2568b630ec0874873507b985000c8118", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/7a107d7d2568b630ec0874873507b985000c8118", "message": "constructor changes", "committedDate": "2020-06-03T05:27:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDY2OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434750668", "bodyText": "FYI - we do not want to use the term \"plug and play\" in any public comments/ APIs.", "author": "abhipsaMisra", "createdAt": "2020-06-03T17:54:12Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ClientOptions.java", "diffHunk": "@@ -0,0 +1,21 @@\n+// Copyright (c) Microsoft. All rights reserved.\n+// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Options that allow configuration of the device client instance during initialization.\n+ */\n+public final class ClientOptions\n+{\n+    /**\n+     * The Digital Twin Model Id associated with the device identity.\n+     * Non plug and play users should not set this value", "originalCommit": "7a107d7d2568b630ec0874873507b985000c8118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1NDI2NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434754265", "bodyText": "I am confused, are you suggesting to document this as Digital Twin users?", "author": "bikamani", "createdAt": "2020-06-03T18:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MzA3NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434793074", "bodyText": "I am not sure, digital twin users could potentially confuse users, since there is a different service called \"digital twins\".\n@prmathur-microsoft - any suggestions on which term to use here?", "author": "abhipsaMisra", "createdAt": "2020-06-03T19:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NjczMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434796732", "bodyText": "exactly, that is the reason why I am asking.", "author": "bikamani", "createdAt": "2020-06-03T19:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNjEzOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434916138", "bodyText": "I would leave it at model id and revisit this when we have a better story around this.", "author": "prmathur-microsoft", "createdAt": "2020-06-03T23:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4OTUwNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434789504", "bodyText": "shouldn't this be final?", "author": "prmathur-microsoft", "createdAt": "2020-06-03T19:03:38Z", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -42,7 +42,7 @@\n     private static final String SSL_PREFIX = \"ssl://\";\n     private static final String SSL_PORT_SUFFIX = \":8883\";\n \n-    private static final String API_VERSION = \"?api-version=\" + TransportUtils.IOTHUB_API_VERSION;\n+    private static String ModelIdParam = \"digital-twin-model-id\";", "originalCommit": "7a107d7d2568b630ec0874873507b985000c8118", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NDcwMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434794701", "bodyText": "agreed, will address this", "author": "bikamani", "createdAt": "2020-06-03T19:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4OTUwNA=="}], "type": "inlineReview"}, {"oid": "e837bae881f0097d07a6ed8c116013089a6d04b8", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e837bae881f0097d07a6ed8c116013089a6d04b8", "message": "make modelparam final", "committedDate": "2020-06-03T19:25:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMTQ5Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434911497", "bodyText": "Why did we have to modify existing e2e?", "author": "prmathur-microsoft", "createdAt": "2020-06-03T23:28:48Z", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java", "diffHunk": "@@ -129,7 +129,7 @@ public void constructorSuccess() throws URISyntaxException, IOException\n         final IotHubClientProtocol protocol = IotHubClientProtocol.AMQPS;\n \n         // act\n-        final DeviceClient client = new DeviceClient(connString, protocol);\n+        final DeviceClient client = new DeviceClient(connString, protocol, (ClientOptions) null);", "originalCommit": "fadba8bb34e6809b1caa62262de3bab4a673170c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMjE2Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/791#discussion_r434912166", "bodyText": "this is ut. nm", "author": "prmathur-microsoft", "createdAt": "2020-06-03T23:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxMTQ5Nw=="}], "type": "inlineReview"}]}