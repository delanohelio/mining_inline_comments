{"pr_number": 717, "pr_title": "Add support for JobProperties.StorageAuthenticationType property", "pr_createdAt": "2020-02-27T23:25:36Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/717", "timeline": [{"oid": "e0047d3036829d6cd81694ddd0696f65b3b81ff5", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e0047d3036829d6cd81694ddd0696f65b3b81ff5", "message": "Add support for JobProperties.StorageAuthenticationType property", "committedDate": "2020-02-27T23:18:08Z", "type": "commit"}, {"oid": "555ac589300ee55473a5ab145f80b2a01abfe82a", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/555ac589300ee55473a5ab145f80b2a01abfe82a", "message": "Add support for JobProperties.StorageAuthenticationType property", "committedDate": "2020-02-27T23:48:08Z", "type": "commit"}, {"oid": "e8ad5067b5494ac83fd511ef5d1bb77ceea57994", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e8ad5067b5494ac83fd511ef5d1bb77ceea57994", "message": "Merge branch 'master' into binal/StorageAuthType", "committedDate": "2020-02-28T00:43:04Z", "type": "commit"}, {"oid": "530a36bd96964e749eba63eca4f6465572fb3f24", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/530a36bd96964e749eba63eca4f6465572fb3f24", "message": "API version change", "committedDate": "2020-02-28T20:41:57Z", "type": "commit"}, {"oid": "ef7a5e27778acdf485b47eec6ea9372a437df7aa", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ef7a5e27778acdf485b47eec6ea9372a437df7aa", "message": "Merge branch 'master' into binal/StorageAuthType", "committedDate": "2020-02-28T21:47:24Z", "type": "commit"}, {"oid": "e3535d8e72a935d3cac96d5964411fbf61989e03", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e3535d8e72a935d3cac96d5964411fbf61989e03", "message": "Merge branch 'binal/StorageAuthType' of https://github.com/Azure/azure-iot-sdk-java into binal/StorageAuthType", "committedDate": "2020-02-28T22:29:13Z", "type": "commit"}, {"oid": "dfbc8a03a719d5ec2ddcfd951322e0684209350d", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/dfbc8a03a719d5ec2ddcfd951322e0684209350d", "message": "beautifying code", "committedDate": "2020-02-28T22:56:48Z", "type": "commit"}, {"oid": "191b67cba8c6b9875080a1bb9f365a4e4218d4d1", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/191b67cba8c6b9875080a1bb9f365a4e4218d4d1", "message": "Merge branch 'master' into binal/StorageAuthType", "committedDate": "2020-03-02T18:13:53Z", "type": "commit"}, {"oid": "0a7723acc0748d8e9bf877a60d37a234a8c33700", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0a7723acc0748d8e9bf877a60d37a234a8c33700", "message": "adding import export class", "committedDate": "2020-03-06T02:19:20Z", "type": "commit"}, {"oid": "7d4ab58bd6c2ae857cbd3ac36706e8dc8d406060", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/7d4ab58bd6c2ae857cbd3ac36706e8dc8d406060", "message": "Merge branch 'binal/StorageAuthType' of https://github.com/Azure/azure-iot-sdk-java into binal/StorageAuthType", "committedDate": "2020-03-06T02:19:54Z", "type": "commit"}, {"oid": "d8ff8fd90932cbda2c213fc235640c4540ce0fa3", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d8ff8fd90932cbda2c213fc235640c4540ce0fa3", "message": "public api for import export", "committedDate": "2020-03-07T00:48:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMTczOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r389211738", "bodyText": "Shouldn't the serialized name be \"storageAuthenticationType\"?", "author": "drwill-ms", "createdAt": "2020-03-07T01:15:15Z", "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobPropertiesParser.java", "diffHunk": "@@ -66,6 +66,11 @@\n     @SerializedName(FAILURE_REASON_NAME)\n     private String failureReason;\n \n+    private static final String STORAGE_AUTHENTICATION_TYPE = \"storageAuthenticationType\";\n+    @Expose(serialize = true, deserialize = true)\n+    @SerializedName(STORAGE_AUTHENTICATION_TYPE)", "originalCommit": "d8ff8fd90932cbda2c213fc235640c4540ce0fa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxNDQxNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r389214417", "bodyText": "Yes that's what it is. Did I miss something?", "author": "bikamani", "createdAt": "2020-03-07T01:37:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMTczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxNjIxNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r389216215", "bodyText": "No, I'm just new to Java. That is a string constant that has the value we want. I get it now. :)", "author": "drwill-ms", "createdAt": "2020-03-07T01:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMTczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMTk1MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r389211950", "bodyText": "This is missing the extra comment I added: This means authentication must be supplied in the storage URI(s)", "author": "drwill-ms", "createdAt": "2020-03-07T01:16:30Z", "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/StorageAuthenticationType.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.microsoft.azure.sdk.iot.deps.serializer;\n+\n+import com.google.gson.annotations.SerializedName;\n+/* Specifies authentication type being used for connecting to storage account */\n+public enum StorageAuthenticationType\n+{\n+    /** Use a shared access key for authentication */", "originalCommit": "d8ff8fd90932cbda2c213fc235640c4540ce0fa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxNDU2OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r389214569", "bodyText": "added", "author": "bikamani", "createdAt": "2020-03-07T01:38:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMTk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMzQ2Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r389213466", "bodyText": "\"containing SAS token\" is only true if the storageAuthenticationType is keyBased.\nCheck all these comments, and compare them against the updated ones in the c# PR.", "author": "drwill-ms", "createdAt": "2020-03-07T01:28:22Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/JobProperties.java", "diffHunk": "@@ -126,6 +127,21 @@ public void setProgress(int progress) {\n         this.progress = progress;\n     }\n \n+    /**\n+     * @return System generated. Ignored at creation.\n+     * If status == failure, this represents a string containing the reason.\n+     */\n+    public String getFailureReason() {\n+        return failureReason;\n+    }\n+\n+    /**\n+     * @param failureReason the failure reason.\n+     */\n+    public void setFailureReason(String failureReason) {\n+        this.failureReason = failureReason;\n+    }\n+\n     /**\n      * @return URI containing SAS token to a blob container that contains registry data to sync.", "originalCommit": "d8ff8fd90932cbda2c213fc235640c4540ce0fa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxMzA1MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391313050", "bodyText": "I looked at your PR and seeing same comment for this context. Did I miss something?", "author": "bikamani", "createdAt": "2020-03-11T22:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMzQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2ODA0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391968040", "bodyText": "Done", "author": "bikamani", "createdAt": "2020-03-13T00:10:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMzQ2Ng=="}], "type": "inlineReview"}, {"oid": "47b218fe313dcf4f1f7697c606135d0756b45391", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/47b218fe313dcf4f1f7697c606135d0756b45391", "message": "clean up + create objects", "committedDate": "2020-03-07T01:35:28Z", "type": "commit"}, {"oid": "b11af3a4e46ae47feaa05946923bab8736de48aa", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/b11af3a4e46ae47feaa05946923bab8736de48aa", "message": "Add ut and e2e tests", "committedDate": "2020-03-11T00:43:50Z", "type": "commit"}, {"oid": "86690e2b24ec14c19cdb85fca8bf131919f16d3a", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/86690e2b24ec14c19cdb85fca8bf131919f16d3a", "message": "Merge branch 'master' into binal/StorageAuthType", "committedDate": "2020-03-11T00:44:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTI0MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r390695241", "bodyText": "minor: space between \"if\" and \"(\"", "author": "drwill-ms", "createdAt": "2020-03-11T01:08:19Z", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ExportImportTests.java", "diffHunk": "@@ -160,8 +213,18 @@ public void export_import_e2e() throws Exception\n         {\n             try\n             {\n-                exportJob = registryManager.exportDevices(containerSasUri, excludeKeys);\n-                exportJobScheduled = true;\n+                if(storageAuthenticationType.isPresent())", "originalCommit": "86690e2b24ec14c19cdb85fca8bf131919f16d3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2ODY0Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391268647", "bodyText": "done", "author": "bikamani", "createdAt": "2020-03-11T21:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTI0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTY0NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r390695645", "bodyText": "minor, extra space before ending parenthesis", "author": "drwill-ms", "createdAt": "2020-03-11T01:09:58Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/JobProperties.java", "diffHunk": "@@ -272,4 +290,76 @@ JobPropertiesParser toJobPropertiesParser()\n \n         return jobPropertiesParser;\n     }\n+\n+    /**\n+     * Creates an instance of JobProperties with parameters ready to start an Import job\n+     *\n+     * @param inputBlobContainerUri URI containing SAS token to a blob container that contains registry data to sync\n+     * @param outputBlobContainerUri URI containing SAS token to a blob container.  This is used to output the status of the job and the results.\n+     * @return An instance of JobProperties\n+     */\n+    public static JobProperties createForImportJob(\n+            String inputBlobContainerUri,\n+            String outputBlobContainerUri)\n+    {\n+        StorageAuthenticationType storageAuthenticationType = StorageAuthenticationType.KEY;\n+        return createForImportJob(inputBlobContainerUri, outputBlobContainerUri, storageAuthenticationType);\n+    }\n+\n+    /**\n+     * Creates an instance of JobProperties with parameters ready to start an Import job\n+     *\n+     * @param inputBlobContainerUri URI containing SAS token to a blob container that contains registry data to sync\n+     * @param outputBlobContainerUri URI containing SAS token to a blob container.  This is used to output the status of the job and the results.\n+     * @param storageAuthenticationType Specifies authentication type being used for connecting to storage account\n+     * @return An instance of JobProperties\n+     */\n+    public static JobProperties createForImportJob(\n+            String inputBlobContainerUri,\n+            String outputBlobContainerUri,\n+            StorageAuthenticationType storageAuthenticationType)\n+    {\n+        JobProperties importJobProperties = new JobProperties();\n+        importJobProperties.setType(JobProperties.JobType.IMPORT);\n+        importJobProperties.setInputBlobContainerUri(inputBlobContainerUri);\n+        importJobProperties.setOutputBlobContainerUri(outputBlobContainerUri);\n+        importJobProperties.setStorageAuthenticationType(storageAuthenticationType);\n+        return importJobProperties;\n+    }\n+\n+    /**\n+     * Creates an instance of JobProperties with parameters ready to start an Export job\n+     *\n+     * @param outputBlobContainerUri URI containing SAS token to a blob container.  This is used to output the status of the job and the results.\n+     * @param excludeKeysInExport Indicates if authorization keys are included in export output\n+     * @return An instance of JobProperties\n+     */\n+    public static JobProperties createForExportJob(\n+            String outputBlobContainerUri,\n+            Boolean excludeKeysInExport )", "originalCommit": "86690e2b24ec14c19cdb85fca8bf131919f16d3a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTk4Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r390695986", "bodyText": "in c# we don't use multiple empty lines between class members. I don't now what Java's style guidelines are, but here's a note for you to check on that.", "author": "drwill-ms", "createdAt": "2020-03-11T01:11:29Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1439,6 +1579,7 @@ private String CreateImportJobPropertiesJson(String importBlobContainerUri, Stri\n         return jobProperties.toJobPropertiesParser().toJson();\n     }\n \n+", "originalCommit": "86690e2b24ec14c19cdb85fca8bf131919f16d3a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NzE4Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r390697183", "bodyText": "In my experience running several tests at once now, I've run into an JobQuotaExceededException. I thought of different ways of handling this, including using a semaphore, but that would only prevent tests in the same process from running at the same time.\nI eventually landed on just guarding against that exception and retrying a certain number of times.\nYou'll want to do the same, otherwise these tests will occasionally fail and be considered flaky.", "author": "drwill-ms", "createdAt": "2020-03-11T01:16:38Z", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ExportImportTests.java", "diffHunk": "@@ -160,8 +213,18 @@ public void export_import_e2e() throws Exception\n         {\n             try\n             {\n-                exportJob = registryManager.exportDevices(containerSasUri, excludeKeys);\n-                exportJobScheduled = true;\n+                if(storageAuthenticationType.isPresent())\n+                {\n+                    JobProperties exportJobProperties = JobProperties.createForExportJob(containerSasUri, excludeKeys, storageAuthenticationType.get());\n+                    exportJob = registryManager.exportDevices(exportJobProperties);", "originalCommit": "86690e2b24ec14c19cdb85fca8bf131919f16d3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5Nzg3Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r390697876", "bodyText": "I see a catch for IotHubTooManyDevicesException, which seems like a weird one to throw, but maybe in Java it is a differently named exception.\nIf that is the same, you have it covered, although I think a 30 second sleep is a bit much. We don't need tests taking longer than they need to. In my test, I loop for a max of 30 times, sleeping 1 second each time. If I need to increase the iteration count because of failures, I will, but I'd rather know the jobs are taking a long time or that we have too many concurrent ones before I let tests run too long.", "author": "drwill-ms", "createdAt": "2020-03-11T01:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NzE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNzQ2Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391307466", "bodyText": "yes you are right, it's a same exception, error code: 403. I will change sleep time .", "author": "bikamani", "createdAt": "2020-03-11T22:31:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NzE4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ0Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r385883443", "bodyText": "Should this be CAPS or CamelCasing?", "author": "prmathur-microsoft", "createdAt": "2020-02-28T19:35:13Z", "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/StorageAuthenticationType.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.microsoft.azure.sdk.iot.deps.serializer;\n+\n+import com.google.gson.annotations.SerializedName;\n+/* Specifies authentication type being used for connecting to storage account */\n+public enum StorageAuthenticationType\n+{\n+    /* Use a shared access key for authentication */\n+    @SerializedName(\"keyBased\")\n+    KEY,\n+", "originalCommit": "e8ad5067b5494ac83fd511ef5d1bb77ceea57994", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2ODA2OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391268069", "bodyText": "Can change to CamelCase if that's the standard we are following in java", "author": "bikamani", "createdAt": "2020-03-11T21:06:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNDI3OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391814278", "bodyText": "Please visit our coding guidelines and reconvene", "author": "prmathur-microsoft", "createdAt": "2020-03-12T18:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk1MTg5Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391951897", "bodyText": "Doesn't say anything about enums.", "author": "bikamani", "createdAt": "2020-03-12T23:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3NTAwNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391975006", "bodyText": "We should leave it as is. If I rem enums should be caps. wanted to confirm that.", "author": "prmathur-microsoft", "createdAt": "2020-03-13T00:41:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NTU5MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391985590", "bodyText": "A quick check of the Java repo shows you have about half of your enums as all caps, and the other half camelCased.", "author": "drwill-ms", "createdAt": "2020-03-13T01:29:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MzQ0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwOTYxOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r389209619", "bodyText": "Add description here", "author": "prmathur-microsoft", "createdAt": "2020-03-07T01:00:07Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/JobProperties.java", "diffHunk": "@@ -156,40 +172,32 @@ public void setOutputBlobContainerUri(String outputBlobContainerUri) {\n     }\n \n     /**\n-     * @return whether the keys are included in export or not.\n+     * @return\n      */", "originalCommit": "d8ff8fd90932cbda2c213fc235640c4540ce0fa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NzcwNg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r390697706", "bodyText": "Where ever we expose a public API, we need better description, params etc. This data gets pulled into API reference doc we publish during release.", "author": "prmathur-microsoft", "createdAt": "2020-03-11T01:18:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwOTYxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxMzgyMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391313821", "bodyText": "Agreed, added comments.", "author": "bikamani", "createdAt": "2020-03-11T22:49:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwOTYxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NjUwNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r390696507", "bodyText": "Why not use primitive?", "author": "prmathur-microsoft", "createdAt": "2020-03-11T01:13:35Z", "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobPropertiesParser.java", "diffHunk": "@@ -59,13 +59,18 @@\n     private static final String EXCLUDE_KEYS_IN_EXPORT_NAME = \"excludeKeysInExport\";\n     @Expose(serialize = true, deserialize = true)\n     @SerializedName(EXCLUDE_KEYS_IN_EXPORT_NAME)\n-    private boolean excludeKeysInExport;\n+    private Boolean excludeKeysInExport;\n ", "originalCommit": "86690e2b24ec14c19cdb85fca8bf131919f16d3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2NjcyNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391266724", "bodyText": "validating the get value as NULL or not in new changes. Not possible in boolean.", "author": "bikamani", "createdAt": "2020-03-11T21:03:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NjUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxMzI3Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391813277", "bodyText": "Why would excludeKeysInExport be null? what is it set in swagger?", "author": "prmathur-microsoft", "createdAt": "2020-03-12T18:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NjUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxMzUwOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391813509", "bodyText": "Ideally we shouldn't validate anything on the client side. Why are we validating this?", "author": "prmathur-microsoft", "createdAt": "2020-03-12T18:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NjUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyMzgyOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391823829", "bodyText": "Are you sure we shouldn't be validating? I see our Import Export APIs (without storage Auth) validating mandatory parameters. Unit tests are also making sure we do this.\nIf that's not required, I can remove this change.", "author": "bikamani", "createdAt": "2020-03-12T18:48:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NjUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNzgxNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391827817", "bodyText": "Yeah we were doing that in the very beginning time of SDK. However we got away from that practice  because we can keep track of service changes. So we don't validate anymore and reply on service to validate for us.", "author": "prmathur-microsoft", "createdAt": "2020-03-12T18:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NjUwNw=="}], "type": "inlineReview"}, {"oid": "df50d21410ef6062cd58997c39e2c9d62675ba49", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/df50d21410ef6062cd58997c39e2c9d62675ba49", "message": "Merge branch 'master' into binal/StorageAuthType", "committedDate": "2020-03-11T22:25:13Z", "type": "commit"}, {"oid": "855b660674b1a49261e2548e6fef6ba62e705e95", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/855b660674b1a49261e2548e6fef6ba62e705e95", "message": "env var changes for API version", "committedDate": "2020-03-11T22:35:38Z", "type": "commit"}, {"oid": "ec9a222a7924c8a525bc1831872d76f1edf84b79", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ec9a222a7924c8a525bc1831872d76f1edf84b79", "message": "Merge branch 'binal/StorageAuthType' of https://github.com/Azure/azure-iot-sdk-java into binal/StorageAuthType", "committedDate": "2020-03-11T22:52:03Z", "type": "commit"}, {"oid": "7e6d3ede601e41bee9dc80a280804e7a9c30b599", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/7e6d3ede601e41bee9dc80a280804e7a9c30b599", "message": "minor changes and addressing code review comments", "committedDate": "2020-03-11T22:52:46Z", "type": "commit"}, {"oid": "57b7e242907d551002946c7757e03e3ca8cb6575", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/57b7e242907d551002946c7757e03e3ca8cb6575", "message": "changes fixing test failures", "committedDate": "2020-03-12T00:53:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNDAxMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391814012", "bodyText": "As this is a public API I would be hesistant to make this change. If we absolutely have to then we should follow the deprecation process here. Can you justify why?", "author": "prmathur-microsoft", "createdAt": "2020-03-12T18:30:19Z", "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobPropertiesParser.java", "diffHunk": "@@ -270,7 +296,7 @@ public int getProgress()\n      *\n      * @return The value of excludeKeysInExport\n      */\n-    public boolean isExcludeKeysInExport()\n+    public Boolean isExcludeKeysInExport()\n     {", "originalCommit": "57b7e242907d551002946c7757e03e3ca8cb6575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNjkxNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391816914", "bodyText": "I see, is there a better way to do this? -> https://github.com/Azure/azure-iot-sdk-java/pull/717/files#diff-85f710f651a02e7437edb830cfaafa4fR737\nThis is the main reason I had to change it to Boolean for null checking using JobProperties.", "author": "bikamani", "createdAt": "2020-03-12T18:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNDAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyOTQ0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391829440", "bodyText": "So if it is boolean and not Boolean then customers can never set it to null and will be forced to provide a value. So I don't see value here in this check. What was the motivation for this check?", "author": "prmathur-microsoft", "createdAt": "2020-03-12T18:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNDAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk1MTU0Mg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391951542", "bodyText": "That's only true for earlier APIs. In new API it is JobProperties and if excludeKeys is not set, we are sending the request to service without mandatory requirements. Motivation of this check is to make sure these two necessary parameters are provided at least.", "author": "bikamani", "createdAt": "2020-03-12T23:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNDAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk1Njg5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391956898", "bodyText": "As per our conversation offline, removing the validation for import export API and reverting back changes for boolean -> Boolean", "author": "bikamani", "createdAt": "2020-03-12T23:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNDAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391836283", "bodyText": "why static? wouldn't it vary per instance of the job?", "author": "prmathur-microsoft", "createdAt": "2020-03-12T19:13:07Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/JobProperties.java", "diffHunk": "@@ -272,4 +298,76 @@ JobPropertiesParser toJobPropertiesParser()\n \n         return jobPropertiesParser;\n     }\n+\n+    /**\n+     * Creates an instance of JobProperties with parameters ready to start an Import job\n+     *\n+     * @param inputBlobContainerUri URI containing SAS token to a blob container that contains registry data to sync\n+     * @param outputBlobContainerUri URI containing SAS token to a blob container.  This is used to output the status of the job and the results.\n+     * @return An instance of JobProperties\n+     */\n+    public static JobProperties createForImportJob(\n+            String inputBlobContainerUri,", "originalCommit": "57b7e242907d551002946c7757e03e3ca8cb6575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk1MDkzOQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391950939", "bodyText": "This is static as customer does not need to create object of class before accessing this method. I am not sure what you mean as per instance of the job here?", "author": "bikamani", "createdAt": "2020-03-12T23:05:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2NDg5Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391964897", "bodyText": "Static because one doesn't need an instance to call it, rather it returns an instance. It is a factory method.", "author": "drwill-ms", "createdAt": "2020-03-12T23:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2NTMzNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391965337", "bodyText": "I changed mine to:\n/// URI to a blob container that contains registry data to sync. Including a SAS token is dependent on the  parameter.\n/// URI to a blob container.  This is used to output the status of the job and the results. Including a SAS token is dependent on the  parameter.", "author": "drwill-ms", "createdAt": "2020-03-12T23:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3MjkxNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391972917", "bodyText": "factory in java...cool. Haven't seen  that in a while", "author": "prmathur-microsoft", "createdAt": "2020-03-13T00:32:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3Mzc4OQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391973789", "bodyText": "won't make you go back and redesign, but in java we usually use builder in these cases. factory is frowned upon.", "author": "prmathur-microsoft", "createdAt": "2020-03-13T00:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NjIyMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391986221", "bodyText": "What do people have against factory pattern? Genuinely curious.", "author": "drwill-ms", "createdAt": "2020-03-13T01:32:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0OTY0Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r392349646", "bodyText": "+1,I also want to know.", "author": "bikamani", "createdAt": "2020-03-13T16:50:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNjI4Mw=="}], "type": "inlineReview"}, {"oid": "c72d55ef23e4255205c1c26f457c515749f53d33", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/c72d55ef23e4255205c1c26f457c515749f53d33", "message": "reverting Boolean changes", "committedDate": "2020-03-12T23:34:39Z", "type": "commit"}, {"oid": "1f9d47ac2de3877551e496b897afb31b0b179355", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/1f9d47ac2de3877551e496b897afb31b0b179355", "message": "improve comments", "committedDate": "2020-03-13T00:07:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3MzIzNQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391973235", "bodyText": "So where are you setting the env for this to work?", "author": "prmathur-microsoft", "createdAt": "2020-03-13T00:33:30Z", "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/RegistryManagerTest.java", "diffHunk": "@@ -1162,7 +1163,74 @@ public Device getStatistics() throws IOException, IotHubException\n         registryManager.getStatisticsAsync();\n     }\n \n+    @Test\n+    public void exportDevices_jobProperties_good_case() throws Exception\n+    {\n+        String connectionString = \"HostName=aaa.bbb.ccc;SharedAccessKeyName=XXX;SharedAccessKey=YYY\";\n+\n+        new NonStrictExpectations()\n+        {\n+            {\n+                IotHubConnectionStringBuilder.createConnectionString(connectionString);\n+                result = iotHubConnectionString;\n+                iotHubConnectionString.getUrlCreateExportImportJob();\n+                result = mockUrl;\n+                mockHttpRequest.send();\n+                result = mockHttpResponse;\n+                mockIotHubExceptionManager.httpResponseVerification((HttpResponse) any);\n+                mockHttpResponse.getBody();\n+                result = jobPropertiesJson.getBytes();\n+            }\n+        };\n+\n+        RegistryManager registryManager = RegistryManager.createFromConnectionString(connectionString);\n+        JobProperties exportJobProperties =\n+                JobProperties.createForExportJob(\"blob1\", true, StorageAuthenticationType.IDENTITY);\n+        JobProperties jobProperties = registryManager.exportDevices(exportJobProperties);", "originalCommit": "c72d55ef23e4255205c1c26f457c515749f53d33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NzI1Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391987253", "bodyText": "For .NET, I'm setting it locally when I test.\nFor our pipeline, we can't set the env var because this api-version will not be rolled to west us, so the test would fail. We'll have to wait for the feature to make it to west us, and enable our hubs with identity (still a TODO for me, so I created this PBI: https://msazure.visualstudio.com/One/_boards/board/t/IoT-Developers%20and%20Devices-Managed/Backlog%20items/?workitem=6454493).\nFor now, we're relying on local testing to validate the new functionality.", "author": "drwill-ms", "createdAt": "2020-03-13T01:37:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk3MzIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NjAwOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391986008", "bodyText": "Does this set the new api-version globally, or just for import/export devices job?", "author": "drwill-ms", "createdAt": "2020-03-13T01:31:24Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/IotHubConnectionString.java", "diffHunk": "@@ -632,7 +647,19 @@ public URL getUrlCreateExportImportJob() throws MalformedURLException\n         stringBuilder.append(URL_SEPARATOR_0);\n         stringBuilder.append(\"create\");\n         stringBuilder.append(URL_SEPARATOR_1);\n-        stringBuilder.append(URL_API_VERSION);\n+        // The new api-version is only available in a few initial regions\n+        // Control access via an environment variable. If a user wishes to try it out,\n+        // they can set \"EnabledStorageIdentity\" to \"1\". Otherwise, the SDK will still\n+        // default to the latest, broadly-supported api-version used in this SDK.\n+        IotHubConnectionString iotHubConnectionString = new IotHubConnectionString();\n+        if (iotHubConnectionString.IsStorageIdentityEnabled)", "originalCommit": "1f9d47ac2de3877551e496b897afb31b0b179355", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0NTQ5Mw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r392345493", "bodyText": "Thanks for catching this. It is setting only for import export currently, will change it to all.", "author": "bikamani", "createdAt": "2020-03-13T16:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NjAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0ODczMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r392348732", "bodyText": "No, we want it only for import/export job. Not all. Sorry for the confusion.", "author": "drwill-ms", "createdAt": "2020-03-13T16:48:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NjAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1MDE3Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r392350177", "bodyText": "As discussed offline, this is only required for import export which is what it is currently. No changes required, resolving", "author": "bikamani", "createdAt": "2020-03-13T16:51:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NjAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NzYxMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r391987612", "bodyText": "If this feature is off, you need to make sure the storageAuthenticationType is not serialized into the json, otherwise the service will reject the request.", "author": "drwill-ms", "createdAt": "2020-03-13T01:39:09Z", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -718,6 +718,69 @@ public JobProperties exportDevices(String exportBlobContainerUri, Boolean exclud\n         return future;\n     }\n \n+    /**\n+     * Create a bulk export job.\n+     *\n+     * @param exportDevicesParameters A JobProperties object containing input parameters for export Devices job\n+     *\n+     * @return A JobProperties object for the newly created bulk export job\n+     *\n+     * @throws IllegalArgumentException This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null\n+     * @throws IOException This exception is thrown if the IO operation failed\n+     * @throws IotHubException This exception is thrown if the response verification failed\n+     */\n+    public JobProperties exportDevices(JobProperties exportDevicesParameters)\n+            throws IllegalArgumentException, IOException, IotHubException, JsonSyntaxException\n+    {\n+        // CODES_SRS_SERVICE_SDK_JAVA_REGISTRYMANAGER_15_062: [The function shall get the URL for the bulk export job creation]\n+        URL url = iotHubConnectionString.getUrlCreateExportImportJob();\n+\n+        // CODES_SRS_SERVICE_SDK_JAVA_REGISTRYMANAGER_15_063: [The function shall create a new SAS token for the bulk export job]\n+        String sasTokenString = new IotHubServiceSasToken(this.iotHubConnectionString).toString();\n+\n+        // CODES_SRS_SERVICE_SDK_JAVA_REGISTRYMANAGER_15_064: [The function shall create a new HttpRequest for the bulk export job creation ]\n+        exportDevicesParameters.setType(JobProperties.JobType.EXPORT);\n+        String jobPropertiesJson = exportDevicesParameters.toJobPropertiesParser().toJson();", "originalCommit": "1f9d47ac2de3877551e496b897afb31b0b179355", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0NzEwNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/717#discussion_r392347104", "bodyText": "It is checked in toJobPropertiesParser. It won't be serialized into json", "author": "bikamani", "createdAt": "2020-03-13T16:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4NzYxMg=="}], "type": "inlineReview"}]}