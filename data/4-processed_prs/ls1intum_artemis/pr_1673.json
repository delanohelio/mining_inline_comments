{"pr_number": 1673, "pr_title": "Exam exercise submission exam components (text & modeling)", "pr_createdAt": "2020-06-18T09:24:05Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1673", "timeline": [{"oid": "cb510e40817eaa8086a615bc641a377fb24d4d65", "url": "https://github.com/ls1intum/Artemis/commit/cb510e40817eaa8086a615bc641a377fb24d4d65", "message": "change participation layout for text exercises", "committedDate": "2020-06-14T21:49:13Z", "type": "commit"}, {"oid": "a17958e11a626fa4999fe7d07b66d01fb741d7a7", "url": "https://github.com/ls1intum/Artemis/commit/a17958e11a626fa4999fe7d07b66d01fb741d7a7", "message": "change participation layout for modeling exercises", "committedDate": "2020-06-14T21:49:31Z", "type": "commit"}, {"oid": "a795f3ab16e5c3294defdcd4b79677f2eaca4dd9", "url": "https://github.com/ls1intum/Artemis/commit/a795f3ab16e5c3294defdcd4b79677f2eaca4dd9", "message": "change participation layout for file upload exercises", "committedDate": "2020-06-14T21:49:49Z", "type": "commit"}, {"oid": "a57cd1648051b2cf3b108c5f0f0ba8a72abcbc9e", "url": "https://github.com/ls1intum/Artemis/commit/a57cd1648051b2cf3b108c5f0f0ba8a72abcbc9e", "message": "add css for smaller screens", "committedDate": "2020-06-16T09:18:25Z", "type": "commit"}, {"oid": "398eef1700c174197a31a7cef6c8b4b4047971a3", "url": "https://github.com/ls1intum/Artemis/commit/398eef1700c174197a31a7cef6c8b4b4047971a3", "message": "fix nullpointers", "committedDate": "2020-06-16T09:19:04Z", "type": "commit"}, {"oid": "70e0d11e6b0c2711b87d3082dc0d9a026248b723", "url": "https://github.com/ls1intum/Artemis/commit/70e0d11e6b0c2711b87d3082dc0d9a026248b723", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/exam/exercise-layout", "committedDate": "2020-06-16T09:44:17Z", "type": "commit"}, {"oid": "1edd693e482806b027e2459db0b22a7e5fdad92e", "url": "https://github.com/ls1intum/Artemis/commit/1edd693e482806b027e2459db0b22a7e5fdad92e", "message": "run prettier", "committedDate": "2020-06-16T10:17:00Z", "type": "commit"}, {"oid": "22bba29e01a97576ecc32ac130c3037cc4636893", "url": "https://github.com/ls1intum/Artemis/commit/22bba29e01a97576ecc32ac130c3037cc4636893", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/exam/exercise-layout\n\n# Conflicts:\n#\tsrc/main/webapp/app/exercises/modeling/participate/modeling-submission.component.html", "committedDate": "2020-06-16T11:37:12Z", "type": "commit"}, {"oid": "50ff6385bcc89716a027fb338f3638f99804d93a", "url": "https://github.com/ls1intum/Artemis/commit/50ff6385bcc89716a027fb338f3638f99804d93a", "message": "Merge branch 'develop' into enhancement/exam/exercise-layout", "committedDate": "2020-06-17T09:50:17Z", "type": "commit"}, {"oid": "4576adad7b251063554a44b1511a6402b5c2cdf0", "url": "https://github.com/ls1intum/Artemis/commit/4576adad7b251063554a44b1511a6402b5c2cdf0", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/exam/exercise-layout", "committedDate": "2020-06-17T13:43:32Z", "type": "commit"}, {"oid": "9cee56cf63444ada3fa2e71018f3d85709311d40", "url": "https://github.com/ls1intum/Artemis/commit/9cee56cf63444ada3fa2e71018f3d85709311d40", "message": "fix warning [interact.js] Consider adding CSS \"touch-action: none\" to this element", "committedDate": "2020-06-17T15:23:01Z", "type": "commit"}, {"oid": "36e16ae805c8ef7f2930198ec1ae179500fbbed7", "url": "https://github.com/ls1intum/Artemis/commit/36e16ae805c8ef7f2930198ec1ae179500fbbed7", "message": "added exam components with original data", "committedDate": "2020-06-18T09:22:49Z", "type": "commit"}, {"oid": "1220c08156790c463444d718c2a33b63264f2eb1", "url": "https://github.com/ls1intum/Artemis/commit/1220c08156790c463444d718c2a33b63264f2eb1", "message": "remove not needed methods and html", "committedDate": "2020-06-18T11:10:54Z", "type": "commit"}, {"oid": "545e8687eed1a6566dd59ebd4e0c32d1c1da6c60", "url": "https://github.com/ls1intum/Artemis/commit/545e8687eed1a6566dd59ebd4e0c32d1c1da6c60", "message": "add module", "committedDate": "2020-06-18T11:11:08Z", "type": "commit"}, {"oid": "b77566f90c62f6f36d02124621ebbb51dfee0dbf", "url": "https://github.com/ls1intum/Artemis/commit/b77566f90c62f6f36d02124621ebbb51dfee0dbf", "message": "remove not needed methods and html for modeling submission component", "committedDate": "2020-06-18T11:11:46Z", "type": "commit"}, {"oid": "e208caa1ddff38413ae5bdfdd9acceea5c64305c", "url": "https://github.com/ls1intum/Artemis/commit/e208caa1ddff38413ae5bdfdd9acceea5c64305c", "message": "Merge branch 'exam/participation/exercise-submission-exam-components' of https://github.com/ls1intum/Artemis into exam/participation/exercise-submission-exam-components", "committedDate": "2020-06-18T11:12:13Z", "type": "commit"}, {"oid": "576281cfadec7f2a5c9967ab8df43875717a3cb3", "url": "https://github.com/ls1intum/Artemis/commit/576281cfadec7f2a5c9967ab8df43875717a3cb3", "message": "change module and delete the unnecessary module", "committedDate": "2020-06-19T20:15:08Z", "type": "commit"}, {"oid": "3e78cb3628967302f732f753bc6a4ae85a3e10d0", "url": "https://github.com/ls1intum/Artemis/commit/3e78cb3628967302f732f753bc6a4ae85a3e10d0", "message": "add skeleton functions for service", "committedDate": "2020-06-19T20:15:50Z", "type": "commit"}, {"oid": "bdf8f38a1aae513d62801b0d5d7e4a9f67d4371a", "url": "https://github.com/ls1intum/Artemis/commit/bdf8f38a1aae513d62801b0d5d7e4a9f67d4371a", "message": "add css file and use ExamParticipationService with skeleton functions", "committedDate": "2020-06-19T20:17:26Z", "type": "commit"}, {"oid": "32365d63c43336d3905af537ec8633c454da297d", "url": "https://github.com/ls1intum/Artemis/commit/32365d63c43336d3905af537ec8633c454da297d", "message": "add css and use ExamParticipationService with skeleton functions", "committedDate": "2020-06-19T20:19:19Z", "type": "commit"}, {"oid": "ae4e769a586a4f26cc0befcac0383ffd69c27ca6", "url": "https://github.com/ls1intum/Artemis/commit/ae4e769a586a4f26cc0befcac0383ffd69c27ca6", "message": "run prettier", "committedDate": "2020-06-19T20:19:41Z", "type": "commit"}, {"oid": "c07f3b926e96a85bfd92ceda092683f9f46c0972", "url": "https://github.com/ls1intum/Artemis/commit/c07f3b926e96a85bfd92ceda092683f9f46c0972", "message": "try to fix typescript errors", "committedDate": "2020-06-19T20:34:49Z", "type": "commit"}, {"oid": "db7fc9e71495f38b55c27cf1da4a785dc6955d51", "url": "https://github.com/ls1intum/Artemis/commit/db7fc9e71495f38b55c27cf1da4a785dc6955d51", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into exam/participation/exercise-submission-exam-components\n\n# Conflicts:\n#\tsrc/main/webapp/app/exam/participate/exam-participation.module.ts", "committedDate": "2020-06-19T20:38:06Z", "type": "commit"}, {"oid": "4f66854eb518dfd5327b1522b6c18b1469f7b258", "url": "https://github.com/ls1intum/Artemis/commit/4f66854eb518dfd5327b1522b6c18b1469f7b258", "message": "run prettier", "committedDate": "2020-06-19T20:41:06Z", "type": "commit"}, {"oid": "7cec143fdf096d0547d45d5a47922ce2f2913f6e", "url": "https://github.com/ls1intum/Artemis/commit/7cec143fdf096d0547d45d5a47922ce2f2913f6e", "message": "revert changes for submission components", "committedDate": "2020-06-19T22:14:13Z", "type": "commit"}, {"oid": "5848c6b692d2b1363bea1e72ae2c6d58f515d7be", "url": "https://github.com/ls1intum/Artemis/commit/5848c6b692d2b1363bea1e72ae2c6d58f515d7be", "message": "revert changes of resizeable container", "committedDate": "2020-06-19T22:14:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5NjIyOA==", "url": "https://github.com/ls1intum/Artemis/pull/1673#discussion_r443396228", "bodyText": "I thought that another component takes care of autosave?", "author": "krusche", "createdAt": "2020-06-22T08:28:00Z", "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-submission-exam.component.ts", "diffHunk": "@@ -0,0 +1,157 @@\n+import { Component, OnDestroy, OnInit, ViewChild, Input } from '@angular/core';\n+import { UMLModel } from '@ls1intum/apollon';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { Observable } from 'rxjs/Observable';\n+import * as moment from 'moment';\n+import { omit } from 'lodash';\n+import { ComponentCanDeactivate } from 'app/shared/guard/can-deactivate.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingExercise, UMLDiagramType } from 'app/entities/modeling-exercise.model';\n+import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n+import { ModelingEditorComponent } from 'app/exercises/modeling/shared/modeling-editor.component';\n+import { participationStatus } from 'app/exercises/shared/exercise/exercise-utils';\n+import { stringifyIgnoringFields } from 'app/shared/util/utils';\n+import { ExamParticipationService } from 'app/exam/participate/exam-participation.service';\n+\n+@Component({\n+    selector: 'jhi-modeling-submission-exam',\n+    templateUrl: './modeling-submission-exam.component.html',\n+    styleUrls: ['./modeling-submission-exam.component.scss'],\n+})\n+export class ModelingSubmissionExamComponent implements OnInit, OnDestroy, ComponentCanDeactivate {\n+    @ViewChild(ModelingEditorComponent, { static: false })\n+    modelingEditor: ModelingEditorComponent;\n+\n+    @Input()\n+    participationId: number;\n+\n+    modelingExercise: ModelingExercise;\n+    umlModel: UMLModel; // input model for Apollon\n+\n+    participation: StudentParticipation;\n+    submission: ModelingSubmission;\n+\n+    hasElements = false; // indicates if the current model has at least one element\n+    isSaving: boolean;\n+    autoSaveInterval: number;\n+\n+    constructor(private examParticipationService: ExamParticipationService, private jhiAlertService: AlertService) {\n+        this.isSaving = false;\n+    }\n+\n+    ngOnInit(): void {\n+        // add\n+        this.examParticipationService.getLatestSubmissionForParticipation(this.participationId).subscribe(\n+            (modelingSubmission) => {\n+                this.updateModelingSubmission(modelingSubmission as ModelingSubmission);\n+                this.setAutoSaveTimer();\n+            },\n+            (error) => {\n+                this.jhiAlertService.error(error.message, null, undefined);\n+            },\n+        );\n+\n+        window.scroll(0, 0);\n+    }\n+\n+    private updateModelingSubmission(modelingSubmission: ModelingSubmission) {\n+        if (!modelingSubmission) {\n+            this.jhiAlertService.error('artemisApp.apollonDiagram.submission.noSubmission');\n+        }\n+\n+        this.submission = modelingSubmission;\n+        this.participation = modelingSubmission.participation as StudentParticipation;\n+\n+        // reconnect participation <--> submission\n+        this.participation.submissions = [<ModelingSubmission>omit(modelingSubmission, 'participation')];\n+\n+        this.modelingExercise = this.participation.exercise as ModelingExercise;\n+        this.modelingExercise.studentParticipations = [this.participation];\n+        this.modelingExercise.participationStatus = participationStatus(this.modelingExercise);\n+        if (this.modelingExercise.diagramType == null) {\n+            this.modelingExercise.diagramType = UMLDiagramType.ClassDiagram;\n+        }\n+        if (this.submission.model) {\n+            this.umlModel = JSON.parse(this.submission.model);\n+            this.hasElements = this.umlModel.elements && this.umlModel.elements.length !== 0;\n+        }\n+    }\n+\n+    /**\n+     * This function sets and starts an auto-save timer that automatically saves changes\n+     * to the model after at most 60 seconds.\n+     */\n+    private setAutoSaveTimer(): void {", "originalCommit": "5848c6b692d2b1363bea1e72ae2c6d58f515d7be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQxNjgyNg==", "url": "https://github.com/ls1intum/Artemis/pull/1673#discussion_r443416826", "bodyText": "I asked the same question and as far as I understood the explanation this is needed as a sync for the modeling editor. Maybe @TobiasPr can clarify in more detail", "author": "filip-gregurevic", "createdAt": "2020-06-22T09:03:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5NjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQxNzQwOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1673#discussion_r443417409", "bodyText": "the modeling-submission has the specialty, that we need to ask Apollon every x seconds for the current model and compare it to the last state, because Apollon had not the ability to communicate model changes in the past. Thats the reason why we have the timer here. The synchronization to the server is handled in the ExamParticipationService in one place", "author": "TobiasPr", "createdAt": "2020-06-22T09:04:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5NjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQzMDkxOA==", "url": "https://github.com/ls1intum/Artemis/pull/1673#discussion_r443430918", "bodyText": "Maybe a explanation of our working methods helps here: our goal was to create a slim component for the exercise type in exam mode and then further adapt that component in an integration branch which brings together all the other components. That means that this component is not 100% complete, but we did some more adaptations in another branch where the dependencies already exist. I would say it's not a clean way to do it, but for sake of velocity we did it like that. Because we have the code changes of this branch also in the integration branch, it would be possible to not use this branch anymore. However, we thought it makes sense to merge these initial branches back to develop to avoid having one big branch which contains all the changes", "author": "TobiasPr", "createdAt": "2020-06-22T09:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5NjIyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5NjMyMA==", "url": "https://github.com/ls1intum/Artemis/pull/1673#discussion_r443396320", "bodyText": "I thought that another component takes care of save?", "author": "krusche", "createdAt": "2020-06-22T08:28:09Z", "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-submission-exam.component.ts", "diffHunk": "@@ -0,0 +1,157 @@\n+import { Component, OnDestroy, OnInit, ViewChild, Input } from '@angular/core';\n+import { UMLModel } from '@ls1intum/apollon';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { Observable } from 'rxjs/Observable';\n+import * as moment from 'moment';\n+import { omit } from 'lodash';\n+import { ComponentCanDeactivate } from 'app/shared/guard/can-deactivate.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingExercise, UMLDiagramType } from 'app/entities/modeling-exercise.model';\n+import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n+import { ModelingEditorComponent } from 'app/exercises/modeling/shared/modeling-editor.component';\n+import { participationStatus } from 'app/exercises/shared/exercise/exercise-utils';\n+import { stringifyIgnoringFields } from 'app/shared/util/utils';\n+import { ExamParticipationService } from 'app/exam/participate/exam-participation.service';\n+\n+@Component({\n+    selector: 'jhi-modeling-submission-exam',\n+    templateUrl: './modeling-submission-exam.component.html',\n+    styleUrls: ['./modeling-submission-exam.component.scss'],\n+})\n+export class ModelingSubmissionExamComponent implements OnInit, OnDestroy, ComponentCanDeactivate {\n+    @ViewChild(ModelingEditorComponent, { static: false })\n+    modelingEditor: ModelingEditorComponent;\n+\n+    @Input()\n+    participationId: number;\n+\n+    modelingExercise: ModelingExercise;\n+    umlModel: UMLModel; // input model for Apollon\n+\n+    participation: StudentParticipation;\n+    submission: ModelingSubmission;\n+\n+    hasElements = false; // indicates if the current model has at least one element\n+    isSaving: boolean;\n+    autoSaveInterval: number;\n+\n+    constructor(private examParticipationService: ExamParticipationService, private jhiAlertService: AlertService) {\n+        this.isSaving = false;\n+    }\n+\n+    ngOnInit(): void {\n+        // add\n+        this.examParticipationService.getLatestSubmissionForParticipation(this.participationId).subscribe(\n+            (modelingSubmission) => {\n+                this.updateModelingSubmission(modelingSubmission as ModelingSubmission);\n+                this.setAutoSaveTimer();\n+            },\n+            (error) => {\n+                this.jhiAlertService.error(error.message, null, undefined);\n+            },\n+        );\n+\n+        window.scroll(0, 0);\n+    }\n+\n+    private updateModelingSubmission(modelingSubmission: ModelingSubmission) {\n+        if (!modelingSubmission) {\n+            this.jhiAlertService.error('artemisApp.apollonDiagram.submission.noSubmission');\n+        }\n+\n+        this.submission = modelingSubmission;\n+        this.participation = modelingSubmission.participation as StudentParticipation;\n+\n+        // reconnect participation <--> submission\n+        this.participation.submissions = [<ModelingSubmission>omit(modelingSubmission, 'participation')];\n+\n+        this.modelingExercise = this.participation.exercise as ModelingExercise;\n+        this.modelingExercise.studentParticipations = [this.participation];\n+        this.modelingExercise.participationStatus = participationStatus(this.modelingExercise);\n+        if (this.modelingExercise.diagramType == null) {\n+            this.modelingExercise.diagramType = UMLDiagramType.ClassDiagram;\n+        }\n+        if (this.submission.model) {\n+            this.umlModel = JSON.parse(this.submission.model);\n+            this.hasElements = this.umlModel.elements && this.umlModel.elements.length !== 0;\n+        }\n+    }\n+\n+    /**\n+     * This function sets and starts an auto-save timer that automatically saves changes\n+     * to the model after at most 60 seconds.\n+     */\n+    private setAutoSaveTimer(): void {\n+        // auto save of submission if there are changes\n+        this.autoSaveInterval = window.setInterval(\n+            () => {\n+                if (!this.canDeactivate()) {\n+                    this.saveDiagram();\n+                }\n+            }, // 60seconds\n+            1000 * 60,\n+        );\n+    }\n+\n+    saveDiagram(): void {\n+        if (this.isSaving) {", "originalCommit": "5848c6b692d2b1363bea1e72ae2c6d58f515d7be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2ac94fea3e24af9444dcce6b1bf901c98e733ebc", "url": "https://github.com/ls1intum/Artemis/commit/2ac94fea3e24af9444dcce6b1bf901c98e733ebc", "message": "revert unnecessary changes", "committedDate": "2020-06-22T11:17:29Z", "type": "commit"}, {"oid": "41409483dfb1368c8dcfaa4c719b6fc133c4c2dd", "url": "https://github.com/ls1intum/Artemis/commit/41409483dfb1368c8dcfaa4c719b6fc133c4c2dd", "message": "remove canDeactivate logic", "committedDate": "2020-06-22T11:26:04Z", "type": "commit"}]}