{"pr_number": 1190, "pr_title": "Chore/test coverage/modeling submission resource", "pr_createdAt": "2020-01-16T13:08:22Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1190", "timeline": [{"oid": "6ebeaf1a2d2f5f2766da8e5d5c719fba4db539f8", "url": "https://github.com/ls1intum/Artemis/commit/6ebeaf1a2d2f5f2766da8e5d5c719fba4db539f8", "message": "Add tests for getSubmissionForModelingEditor()", "committedDate": "2020-01-16T00:29:21Z", "type": "commit"}, {"oid": "ac9c256384f7be231e64db119f9a42f9c0d171fd", "url": "https://github.com/ls1intum/Artemis/commit/ac9c256384f7be231e64db119f9a42f9c0d171fd", "message": "Add test for getNextOptimalModelSubmission()", "committedDate": "2020-01-16T01:00:37Z", "type": "commit"}, {"oid": "46632c59f8aa871294ea0ba2b728079a860a77ab", "url": "https://github.com/ls1intum/Artemis/commit/46632c59f8aa871294ea0ba2b728079a860a77ab", "message": "Extend test for getNextOptimalModelSubmission()", "committedDate": "2020-01-16T02:08:44Z", "type": "commit"}, {"oid": "dfbbb4e674362f2a9c4a990ded2eabcba8608151", "url": "https://github.com/ls1intum/Artemis/commit/dfbbb4e674362f2a9c4a990ded2eabcba8608151", "message": "Add test for updateModelSubmission()", "committedDate": "2020-01-16T02:09:20Z", "type": "commit"}, {"oid": "e729e065999f799f1a10bf28370de6dca2b9796f", "url": "https://github.com/ls1intum/Artemis/commit/e729e065999f799f1a10bf28370de6dca2b9796f", "message": "Add test for deleteNextOptimalModelSubmission()", "committedDate": "2020-01-16T02:16:32Z", "type": "commit"}, {"oid": "95ab3b95da6f0796e0eea39138d94a116d46403c", "url": "https://github.com/ls1intum/Artemis/commit/95ab3b95da6f0796e0eea39138d94a116d46403c", "message": "Add test for createModelingSubmission()", "committedDate": "2020-01-16T02:27:24Z", "type": "commit"}, {"oid": "016055fbcf45c1883b08997513ad4e6c88baba57", "url": "https://github.com/ls1intum/Artemis/commit/016055fbcf45c1883b08997513ad4e6c88baba57", "message": "Apply spotless", "committedDate": "2020-01-16T02:32:54Z", "type": "commit"}, {"oid": "2e9578784a3bb91b9c973217a149a4ee0aa2e612", "url": "https://github.com/ls1intum/Artemis/commit/2e9578784a3bb91b9c973217a149a4ee0aa2e612", "message": "Merge branch 'develop' into chore/test-coverage/ModelingSubmissionResource", "committedDate": "2020-01-16T12:23:35Z", "type": "commit"}, {"oid": "557f0469523d05a4856b3371c06542575a66e0c4", "url": "https://github.com/ls1intum/Artemis/commit/557f0469523d05a4856b3371c06542575a66e0c4", "message": "Add descriptions to test cases", "committedDate": "2020-01-16T12:55:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1MDg0NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1190#discussion_r367450845", "bodyText": "This code is not necessary because findOneWithEagerSubmissionsAndResults throws an exception if there is no entity found.", "author": "lovaiible", "createdAt": "2020-01-16T14:35:01Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "diffHunk": "@@ -329,18 +329,16 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n     @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n     public ResponseEntity<ModelingSubmission> getSubmissionForModelingEditor(@PathVariable Long participationId) {\n         StudentParticipation participation = participationService.findOneWithEagerSubmissionsAndResults(participationId);\n-        if (participation == null) {", "originalCommit": "557f0469523d05a4856b3371c06542575a66e0c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxMDA3Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1190#discussion_r367810076", "bodyText": "I think you should invoke @GetMapping(value = \"/exercises/{exerciseId}/modeling-submission-without-assessment\") once before, so that there are optimal submissions calculated on the server.\nThen please also check that the list of optimal models is empty. You might need to add a public getter to obtain this information, it is stored in CompassService (can be injected) -> CompassCalculationEngine -> ModelSelector -> modelsWaitingForAssessment", "author": "krusche", "createdAt": "2020-01-17T08:06:26Z", "path": "src/test/java/de/tum/in/www1/artemis/ModelingSubmissionIntegrationTest.java", "diffHunk": "@@ -387,19 +492,19 @@ public void getNextOptimalModelSubmission_lockLimitReached() throws Exception {\n     }\n \n     @Test\n-    @WithMockUser(value = \"student1\")\n-    public void getModelSubmissionForModelingEditor() throws Exception {\n-        ModelingSubmission submission = ModelFactory.generateModelingSubmission(validModel, true);\n-        submission = database.addModelingSubmissionWithFinishedResultAndAssessor(classExercise, submission, \"student1\", \"tutor1\");\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void deleteNextOptimalModelSubmission() throws Exception {\n+        request.delete(\"/api/exercises/\" + classExercise.getId() + \"/optimal-model-submissions\", HttpStatus.NO_CONTENT);", "originalCommit": "557f0469523d05a4856b3371c06542575a66e0c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxMjEzNg==", "url": "https://github.com/ls1intum/Artemis/pull/1190#discussion_r369012136", "bodyText": "@krusche Thank you for your feedback! I have adjusted the test and added the mentioned REST calls :)", "author": "lovaiible", "createdAt": "2020-01-21T13:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxMDA3Ng=="}], "type": "inlineReview"}, {"oid": "44fa30e122b04d9f06ea1095549a2ffb0252f60f", "url": "https://github.com/ls1intum/Artemis/commit/44fa30e122b04d9f06ea1095549a2ffb0252f60f", "message": "Merge branch 'develop' into chore/test-coverage/ModelingSubmissionResource", "committedDate": "2020-01-20T23:24:09Z", "type": "commit"}, {"oid": "8ca4a76ad721bc7a30253037d67d0edd3b438d96", "url": "https://github.com/ls1intum/Artemis/commit/8ca4a76ad721bc7a30253037d67d0edd3b438d96", "message": "Extend deleteNextOptimalModelSubmission test", "committedDate": "2020-01-21T13:06:54Z", "type": "commit"}, {"oid": "d1013a869da97295bbe495cb9c9bf5ddf8cbba74", "url": "https://github.com/ls1intum/Artemis/commit/d1013a869da97295bbe495cb9c9bf5ddf8cbba74", "message": "Apply spotless", "committedDate": "2020-01-21T13:21:18Z", "type": "commit"}, {"oid": "ffc0954309e24e48c3cedb0f0561a62e8248431d", "url": "https://github.com/ls1intum/Artemis/commit/ffc0954309e24e48c3cedb0f0561a62e8248431d", "message": "Merge branch 'develop' into chore/test-coverage/ModelingSubmissionResource", "committedDate": "2020-01-21T13:54:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA1NDAxMg==", "url": "https://github.com/ls1intum/Artemis/pull/1190#discussion_r369054012", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public List<Long> getCalculationEngineModelsWaitingForAssessment(Long exerciseId) {\n          \n          \n            \n                public List<Long> getCalculationEngineModelsWaitingForAssessment(long exerciseId) {", "author": "maxr96", "createdAt": "2020-01-21T15:04:28Z", "path": "src/main/java/de/tum/in/www1/artemis/service/compass/CompassService.java", "diffHunk": "@@ -585,4 +585,13 @@ public void printStatistic(Long exerciseId) {\n         compassCalculationEngines.get(exerciseId).printStatistic(exerciseId,\n                 resultRepository.findAllWithEagerFeedbackByAssessorIsNotNullAndParticipation_ExerciseIdAndCompletionDateIsNotNull(exerciseId));\n     }\n+\n+    /**\n+     * Method to access to the compass calculation engine getModelsWaitingForAssessment() method\n+     * @param exerciseId the id of the exercise the models should belong to\n+     * @return a list of modelIds that should be assessed next\n+     */\n+    public List<Long> getCalculationEngineModelsWaitingForAssessment(Long exerciseId) {", "originalCommit": "ffc0954309e24e48c3cedb0f0561a62e8248431d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}