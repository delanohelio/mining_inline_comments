{"pr_number": 2457, "pr_title": "Feature/programming exercises management/update selected exercises", "pr_createdAt": "2020-11-24T08:40:44Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2457", "timeline": [{"oid": "309252e84c60ffefca54a41c97df72b6b525f9fc", "url": "https://github.com/ls1intum/Artemis/commit/309252e84c60ffefca54a41c97df72b6b525f9fc", "message": "Added initial edit selected feature changes", "committedDate": "2020-11-16T17:54:50Z", "type": "commit"}, {"oid": "d8486f5d72e8dc78fd348033f77519cad3b450c7", "url": "https://github.com/ls1intum/Artemis/commit/d8486f5d72e8dc78fd348033f77519cad3b450c7", "message": "Added page reload after exercises update", "committedDate": "2020-11-18T09:53:27Z", "type": "commit"}, {"oid": "f8999a76962da980ebf2eff0f73bcaacc7e1dc8c", "url": "https://github.com/ls1intum/Artemis/commit/f8999a76962da980ebf2eff0f73bcaacc7e1dc8c", "message": "Added wait + display failed updates", "committedDate": "2020-11-19T13:40:29Z", "type": "commit"}, {"oid": "0f21b8eddf60c238db5748c2b4445cd140fb6e85", "url": "https://github.com/ls1intum/Artemis/commit/0f21b8eddf60c238db5748c2b4445cd140fb6e85", "message": "Fixed double triggered export", "committedDate": "2020-11-19T14:53:28Z", "type": "commit"}, {"oid": "08424aa5874e3b043c941f5df5107721bddb8340", "url": "https://github.com/ls1intum/Artemis/commit/08424aa5874e3b043c941f5df5107721bddb8340", "message": "Removed selection for non-instructors", "committedDate": "2020-11-23T07:50:45Z", "type": "commit"}, {"oid": "2e0992fe239ff5496e3ad753b8ab65f93cf4f9a8", "url": "https://github.com/ls1intum/Artemis/commit/2e0992fe239ff5496e3ad753b8ab65f93cf4f9a8", "message": "Merge branch 'develop' into feature/programming-exercises-management/update-selected-exercises", "committedDate": "2020-11-23T15:08:14Z", "type": "commit"}, {"oid": "b1469711caec65b6151080ba92904a757a18d1f7", "url": "https://github.com/ls1intum/Artemis/commit/b1469711caec65b6151080ba92904a757a18d1f7", "message": "Added some client tests", "committedDate": "2020-11-23T17:40:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzNDEzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r530834135", "bodyText": "I think null should be replaced with undefined", "author": "ivanchimeno", "createdAt": "2020-11-26T08:00:06Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.ts", "diffHunk": "@@ -46,21 +49,25 @@ export class ProgrammingAssessmentRepoExportDialogComponent implements OnInit {\n             normalizeCodeStyle: false, // disabled by default because it is rather unstable\n             hideStudentNameInZippedFolder: false,\n         };\n-        this.exerciseService\n-            .find(this.exerciseId)\n-            .pipe(\n-                tap(({ body: exercise }) => {\n-                    this.exercise = exercise!;\n-                }),\n-                catchError((err) => {\n-                    this.jhiAlertService.error(err);\n-                    this.clear();\n-                    return of(undefined);\n-                }),\n-            )\n-            .subscribe(() => {\n-                this.isLoading = false;\n-            });\n+        if (this.selectedProgrammingExercises.length <= 0) {\n+            this.exerciseService\n+                .find(this.exerciseId)\n+                .pipe(\n+                    tap(({ body: exercise }) => {\n+                        this.exercise = exercise!;\n+                    }),\n+                    catchError((err) => {\n+                        this.jhiAlertService.error(err);\n+                        this.clear();\n+                        return of(null);", "originalCommit": "b1469711caec65b6151080ba92904a757a18d1f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzODYyMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r530838621", "bodyText": "You're right.. Fixed with 6885a6a \ud83d\udc4d", "author": "daniels98it", "createdAt": "2020-11-26T08:09:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzNDEzNQ=="}], "type": "inlineReview"}, {"oid": "6885a6a32c9e196c18220e2d2dd756103e9911ab", "url": "https://github.com/ls1intum/Artemis/commit/6885a6a32c9e196c18220e2d2dd756103e9911ab", "message": "Replaced null with undefined", "committedDate": "2020-11-26T08:05:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczNzQ1OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r532737459", "bodyText": "In TypeScript we prefer to use undefined instead of null\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                notificationText: string | null;\n          \n          \n            \n                notificationText: string | undefined;", "author": "balazs-czopf", "createdAt": "2020-11-30T16:41:34Z", "path": "src/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.ts", "diffHunk": "@@ -0,0 +1,113 @@\n+import { Component, OnInit } from '@angular/core';\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n+import { TranslateService } from '@ngx-translate/core';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { ProgrammingExerciseSimulationService } from 'app/exercises/programming/manage/services/programming-exercise-simulation.service';\n+import { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+\n+@Component({\n+    selector: 'jhi-programming-exercise-edit-selected',\n+    templateUrl: './programming-exercise-edit-selected.component.html',\n+})\n+export class ProgrammingExerciseEditSelectedComponent implements OnInit {\n+    newProgrammingExercise: ProgrammingExercise;\n+    selectedProgrammingExercises: ProgrammingExercise[];\n+\n+    isSaving = false;\n+    savedExercises = 0;\n+    failedExercises: string[] = [];\n+    private translationBasePath = 'artemisApp.programmingExercise.';\n+    notificationText: string | null;", "originalCommit": "6885a6a32c9e196c18220e2d2dd756103e9911ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc0MDM1NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r532740355", "bodyText": "you can simplify this line as follows:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    exerciseTitle = exerciseTitle == undefined ? 'undefined exercise' : exerciseTitle;\n          \n          \n            \n                    exerciseTitle = exerciseTitle ?? 'undefined exercise';", "author": "balazs-czopf", "createdAt": "2020-11-30T16:45:26Z", "path": "src/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.ts", "diffHunk": "@@ -0,0 +1,113 @@\n+import { Component, OnInit } from '@angular/core';\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n+import { TranslateService } from '@ngx-translate/core';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { ProgrammingExerciseSimulationService } from 'app/exercises/programming/manage/services/programming-exercise-simulation.service';\n+import { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+\n+@Component({\n+    selector: 'jhi-programming-exercise-edit-selected',\n+    templateUrl: './programming-exercise-edit-selected.component.html',\n+})\n+export class ProgrammingExerciseEditSelectedComponent implements OnInit {\n+    newProgrammingExercise: ProgrammingExercise;\n+    selectedProgrammingExercises: ProgrammingExercise[];\n+\n+    isSaving = false;\n+    savedExercises = 0;\n+    failedExercises: string[] = [];\n+    private translationBasePath = 'artemisApp.programmingExercise.';\n+    notificationText: string | null;\n+\n+    constructor(\n+        private activeModal: NgbActiveModal,\n+        private translateService: TranslateService,\n+        private jhiAlertService: JhiAlertService,\n+        private programmingExerciseService: ProgrammingExerciseService,\n+        private programmingExerciseSimulationService: ProgrammingExerciseSimulationService,\n+    ) {}\n+\n+    ngOnInit(): void {\n+        this.newProgrammingExercise = new ProgrammingExercise(undefined, undefined);\n+    }\n+\n+    saveAll() {\n+        // If no release date is set, we warn the user.\n+        if (!this.newProgrammingExercise.releaseDate) {\n+            const confirmNoReleaseDate = this.translateService.instant(this.translationBasePath + 'noReleaseDateWarning');\n+            if (!window.confirm(confirmNoReleaseDate)) {\n+                return;\n+            }\n+        }\n+        this.isSaving = true;\n+        this.selectedProgrammingExercises.forEach((programmingExercise) => {\n+            programmingExercise = this.setNewValues(programmingExercise);\n+            if (programmingExercise.id !== undefined) {\n+                const requestOptions = {} as any;\n+                if (this.notificationText) {\n+                    requestOptions.notificationText = this.notificationText;\n+                }\n+                this.subscribeToSaveResponse(programmingExercise.title, this.programmingExerciseService.update(programmingExercise, requestOptions));\n+            } else if (programmingExercise.noVersionControlAndContinuousIntegrationAvailable) {\n+                // only for testing purposes(noVersionControlAndContinuousIntegrationAvailable)\n+                this.subscribeToSaveResponse(programmingExercise.title, this.programmingExerciseSimulationService.automaticSetupWithoutConnectionToVCSandCI(programmingExercise));\n+            } else {\n+                this.subscribeToSaveResponse(programmingExercise.title, this.programmingExerciseService.automaticSetup(programmingExercise));\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Replace the programming exercise values with the new given ones\n+     * @param programmingExercise to update\n+     * @return the programming exercise with updated values\n+     */\n+    setNewValues(programmingExercise: ProgrammingExercise) {\n+        programmingExercise.releaseDate = this.newProgrammingExercise.releaseDate;\n+        programmingExercise.dueDate = this.newProgrammingExercise.dueDate;\n+        programmingExercise.buildAndTestStudentSubmissionsAfterDueDate = this.newProgrammingExercise.buildAndTestStudentSubmissionsAfterDueDate;\n+        programmingExercise.assessmentDueDate = this.newProgrammingExercise.assessmentDueDate;\n+        return programmingExercise;\n+    }\n+\n+    private subscribeToSaveResponse(exerciseTitle: string | undefined, result: Observable<HttpResponse<ProgrammingExercise>>) {\n+        result.subscribe(\n+            () => this.onSaveSuccess(),\n+            (res: HttpErrorResponse) => this.onSaveError(res, exerciseTitle),\n+        );\n+    }\n+\n+    private onSaveSuccess() {\n+        this.savedExercises++;\n+        if (this.savedExercises === this.selectedProgrammingExercises.length) {\n+            this.isSaving = false;\n+            if (this.failedExercises.length <= 0) {\n+                this.activeModal.close();\n+            }\n+        }\n+    }\n+\n+    private onSaveError(error: HttpErrorResponse, exerciseTitle?: string | undefined) {\n+        exerciseTitle = exerciseTitle == undefined ? 'undefined exercise' : exerciseTitle;", "originalCommit": "6885a6a32c9e196c18220e2d2dd756103e9911ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc0NDQwOQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r532744409", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"editSelected\": \"Bearbeite Ausgew\u00e4hlte\",\n          \n          \n            \n                        \"editSelected\": \"Ausgew\u00e4hlte bearbeiten\",", "author": "balazs-czopf", "createdAt": "2020-11-30T16:50:54Z", "path": "src/main/webapp/i18n/de/global.json", "diffHunk": "@@ -178,6 +178,7 @@\n             \"dashboard\": \"Dashboard\",\n             \"units\": \"Einheiten\",\n             \"edit\": \"Bearbeiten\",\n+            \"editSelected\": \"Bearbeite Ausgew\u00e4hlte\",", "originalCommit": "6885a6a32c9e196c18220e2d2dd756103e9911ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc0NjA1NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r532746055", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"reEvaluateFailed\": \"The re-evaulation failed: {{message}}\",\n          \n          \n            \n                        \"reEvaluateFailed\": \"The re-evaluation failed: {{message}}\",", "author": "balazs-czopf", "createdAt": "2020-11-30T16:53:10Z", "path": "src/main/webapp/i18n/en/programmingExercise.json", "diffHunk": "@@ -223,7 +224,12 @@\n             \"reEvaluate\": \"Re-evaluate all\",\n             \"reEvaluateTooltip\": \"Re-evaluate the latest automatic results of all participations. Manual results are not affected.\",\n             \"reEvaluateSuccessful\": \"{{number}} automatic results were successfully updated, including the template and solution.\",\n-            \"reEvaluateFailed\": \"The re-evaulation failed: {{message}}\"\n+            \"reEvaluateFailed\": \"The re-evaulation failed: {{message}}\",", "originalCommit": "6885a6a32c9e196c18220e2d2dd756103e9911ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "671077d41c5fd31a70f2a39aab08a28a69ecbae3", "url": "https://github.com/ls1intum/Artemis/commit/671077d41c5fd31a70f2a39aab08a28a69ecbae3", "message": "Update src/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.ts\n\nCo-authored-by: Balazs Czopf <63286106+balazs-czopf@users.noreply.github.com>", "committedDate": "2020-12-01T08:07:48Z", "type": "commit"}, {"oid": "2340dfcfdfc5d76b69e8a512018272683656502b", "url": "https://github.com/ls1intum/Artemis/commit/2340dfcfdfc5d76b69e8a512018272683656502b", "message": "Update src/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.ts\n\nCo-authored-by: Balazs Czopf <63286106+balazs-czopf@users.noreply.github.com>", "committedDate": "2020-12-01T08:08:14Z", "type": "commit"}, {"oid": "eb32ee7d09155f52d6cc3c631e465f51dbd93575", "url": "https://github.com/ls1intum/Artemis/commit/eb32ee7d09155f52d6cc3c631e465f51dbd93575", "message": "Update src/main/webapp/i18n/de/global.json\n\nCo-authored-by: Balazs Czopf <63286106+balazs-czopf@users.noreply.github.com>", "committedDate": "2020-12-01T08:08:25Z", "type": "commit"}, {"oid": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "url": "https://github.com/ls1intum/Artemis/commit/a57491d34e39c4bce4eb32182e70f081c357ee4c", "message": "Update src/main/webapp/i18n/en/programmingExercise.json\n\nCo-authored-by: Balazs Czopf <63286106+balazs-czopf@users.noreply.github.com>", "committedDate": "2020-12-01T08:08:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NDU3NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534054575", "bodyText": "Maybe we can introduce a new variable something like isRepoExportForMultipleExercises = selectedProgrammingExercises.length > 0", "author": "fde312", "createdAt": "2020-12-02T10:22:39Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -1,19 +1,37 @@\n-<form *ngIf=\"!isLoading; else loadingContainer\" name=\"exportForm\" role=\"form\" (ngSubmit)=\"exportRepos(exercise.id)\" #exportForm=\"ngForm\">\n+<form\n+    *ngIf=\"!isLoading; else loadingContainer\"\n+    name=\"exportForm\"\n+    role=\"form\"\n+    (ngSubmit)=\"selectedProgrammingExercises.length <= 0 ? exportRepos(exercise.id) : bulkExportRepos()\"", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NTQ2NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534055465", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:24:00Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -1,19 +1,37 @@\n-<form *ngIf=\"!isLoading; else loadingContainer\" name=\"exportForm\" role=\"form\" (ngSubmit)=\"exportRepos(exercise.id)\" #exportForm=\"ngForm\">\n+<form\n+    *ngIf=\"!isLoading; else loadingContainer\"\n+    name=\"exportForm\"\n+    role=\"form\"\n+    (ngSubmit)=\"selectedProgrammingExercises.length <= 0 ? exportRepos(exercise.id) : bulkExportRepos()\"\n+    #exportForm=\"ngForm\"\n+>\n     <div class=\"modal-header\">\n         <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export operation</h4>\n         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"clear()\">&times;</button>\n     </div>\n     <div class=\"modal-body\">\n         <jhi-alert-error></jhi-alert-error>\n+        <div *ngIf=\"selectedProgrammingExercises.length > 0\" class=\"table-responsive m-2 p-1\">", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NTkwNw==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534055907", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:24:36Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -1,19 +1,37 @@\n-<form *ngIf=\"!isLoading; else loadingContainer\" name=\"exportForm\" role=\"form\" (ngSubmit)=\"exportRepos(exercise.id)\" #exportForm=\"ngForm\">\n+<form\n+    *ngIf=\"!isLoading; else loadingContainer\"\n+    name=\"exportForm\"\n+    role=\"form\"\n+    (ngSubmit)=\"selectedProgrammingExercises.length <= 0 ? exportRepos(exercise.id) : bulkExportRepos()\"\n+    #exportForm=\"ngForm\"\n+>\n     <div class=\"modal-header\">\n         <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export operation</h4>\n         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"clear()\">&times;</button>\n     </div>\n     <div class=\"modal-body\">\n         <jhi-alert-error></jhi-alert-error>\n+        <div *ngIf=\"selectedProgrammingExercises.length > 0\" class=\"table-responsive m-2 p-1\">\n+            <span style=\"font-weight: bold\" jhiTranslate=\"instructorDashboard.exportRepos.currentlySelected\"\n+                >You are about to download all teams'/students' submissions of the following exercises:</span\n+            >\n+            <table class=\"table table-striped\">\n+                <tbody>\n+                    <tr *ngFor=\"let programmingExercise of selectedProgrammingExercises\">\n+                        <td>{{ programmingExercise.title }}</td>\n+                    </tr>\n+                </tbody>\n+            </table>\n+        </div>\n         <p\n-            *ngIf=\"!singleParticipantMode\"\n+            *ngIf=\"!singleParticipantMode && selectedProgrammingExercises.length <= 0\"", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NjEyMg==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534056122", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:24:54Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -1,19 +1,37 @@\n-<form *ngIf=\"!isLoading; else loadingContainer\" name=\"exportForm\" role=\"form\" (ngSubmit)=\"exportRepos(exercise.id)\" #exportForm=\"ngForm\">\n+<form\n+    *ngIf=\"!isLoading; else loadingContainer\"\n+    name=\"exportForm\"\n+    role=\"form\"\n+    (ngSubmit)=\"selectedProgrammingExercises.length <= 0 ? exportRepos(exercise.id) : bulkExportRepos()\"\n+    #exportForm=\"ngForm\"\n+>\n     <div class=\"modal-header\">\n         <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export operation</h4>\n         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"clear()\">&times;</button>\n     </div>\n     <div class=\"modal-body\">\n         <jhi-alert-error></jhi-alert-error>\n+        <div *ngIf=\"selectedProgrammingExercises.length > 0\" class=\"table-responsive m-2 p-1\">\n+            <span style=\"font-weight: bold\" jhiTranslate=\"instructorDashboard.exportRepos.currentlySelected\"\n+                >You are about to download all teams'/students' submissions of the following exercises:</span\n+            >\n+            <table class=\"table table-striped\">\n+                <tbody>\n+                    <tr *ngFor=\"let programmingExercise of selectedProgrammingExercises\">\n+                        <td>{{ programmingExercise.title }}</td>\n+                    </tr>\n+                </tbody>\n+            </table>\n+        </div>\n         <p\n-            *ngIf=\"!singleParticipantMode\"\n+            *ngIf=\"!singleParticipantMode && selectedProgrammingExercises.length <= 0\"\n             [jhiTranslate]=\"'instructorDashboard.exportRepos.questions.' + (exercise.teamMode ? 'team' : 'individual')\"\n             [translateValues]=\"{ exerciseTitle: exercise.title, courseTitle: exercise.course?.title }\"\n         >\n             Confirm export\n         </p>\n         <textarea\n-            *ngIf=\"!participationIdList\"\n+            *ngIf=\"!participationIdList && selectedProgrammingExercises.length <= 0\"", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NjM1NA==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534056354", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:25:10Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -24,7 +42,7 @@ <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export o\n         <!--\n         Only show download all checkbox for instructors & admins.\n         -->\n-        <ng-container *ngIf=\"!singleParticipantMode\">\n+        <ng-container *ngIf=\"!singleParticipantMode && selectedProgrammingExercises.length <= 0\">", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NjU4MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534056581", "bodyText": "Use new variable for checks", "author": "fde312", "createdAt": "2020-12-02T10:25:32Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -55,9 +73,15 @@ <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export o\n         <div *ngIf=\"!singleParticipantMode\" class=\"checkbox\">\n             <label class=\"control-label\">\n                 <input type=\"checkbox\" name=\"addParticipantName\" [(ngModel)]=\"this.repositoryExportOptions.addParticipantName\" />\n-                <strong [jhiTranslate]=\"'artemisApp.programmingExercise.export.' + (exercise.teamMode ? 'addTeamName' : 'addStudentName')\">\n+                <strong\n+                    *ngIf=\"selectedProgrammingExercises.length <= 0\"\n+                    [jhiTranslate]=\"'artemisApp.programmingExercise.export.' + (selectedProgrammingExercises.length <= 0 && exercise.teamMode ? 'addTeamName' : 'addStudentName')\"", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NjczMg==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534056732", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:25:45Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -55,9 +73,15 @@ <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export o\n         <div *ngIf=\"!singleParticipantMode\" class=\"checkbox\">\n             <label class=\"control-label\">\n                 <input type=\"checkbox\" name=\"addParticipantName\" [(ngModel)]=\"this.repositoryExportOptions.addParticipantName\" />\n-                <strong [jhiTranslate]=\"'artemisApp.programmingExercise.export.' + (exercise.teamMode ? 'addTeamName' : 'addStudentName')\">\n+                <strong\n+                    *ngIf=\"selectedProgrammingExercises.length <= 0\"\n+                    [jhiTranslate]=\"'artemisApp.programmingExercise.export.' + (selectedProgrammingExercises.length <= 0 && exercise.teamMode ? 'addTeamName' : 'addStudentName')\"\n+                >\n                     Add {{ exercise.teamMode ? 'team' : 'student' }} name to project\n                 </strong>\n+                <strong *ngIf=\"selectedProgrammingExercises.length > 0\" [jhiTranslate]=\"'artemisApp.programmingExercise.export.addTeamOrStudentName'\">", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NzA3Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534057072", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:26:16Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -85,6 +109,17 @@ <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export o\n             type=\"submit\"\n             [disabled]=\"!participationIdList && !participantIdentifierList && !this.repositoryExportOptions.exportAllParticipants && !exportInProgress\"\n             class=\"btn btn-default\"\n+            *ngIf=\"selectedProgrammingExercises.length <= 0\"", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1NzI1NA==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534057254", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:26:33Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.html", "diffHunk": "@@ -85,6 +109,17 @@ <h4 class=\"modal-title\" jhiTranslate=\"entity.exportRepos.title\">Confirm export o\n             type=\"submit\"\n             [disabled]=\"!participationIdList && !participantIdentifierList && !this.repositoryExportOptions.exportAllParticipants && !exportInProgress\"\n             class=\"btn btn-default\"\n+            *ngIf=\"selectedProgrammingExercises.length <= 0\"\n+        >\n+            <span *ngIf=\"this.exportInProgress\" class=\"mr-1\"><fa-icon [icon]=\"'circle-notch'\" spin=\"true\"></fa-icon></span>\n+            <span class=\"glyphicon glyphicon-download-alt\"></span>&nbsp;<span jhiTranslate=\"entity.action.export\">Export</span>\n+        </button>\n+        <button\n+            [jhiFeatureToggle]=\"FeatureToggle.PROGRAMMING_EXERCISES\"\n+            type=\"submit\"\n+            [disabled]=\"!participationIdList && !participantIdentifierList && !this.repositoryExportOptions.exportAllParticipants && !exportInProgress\"\n+            class=\"btn btn-default\"\n+            *ngIf=\"selectedProgrammingExercises.length > 0\"", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1ODIzMA==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534058230", "bodyText": "Use new variable for check", "author": "fde312", "createdAt": "2020-12-02T10:28:00Z", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.ts", "diffHunk": "@@ -46,21 +49,25 @@ export class ProgrammingAssessmentRepoExportDialogComponent implements OnInit {\n             normalizeCodeStyle: false, // disabled by default because it is rather unstable\n             hideStudentNameInZippedFolder: false,\n         };\n-        this.exerciseService\n-            .find(this.exerciseId)\n-            .pipe(\n-                tap(({ body: exercise }) => {\n-                    this.exercise = exercise!;\n-                }),\n-                catchError((err) => {\n-                    this.jhiAlertService.error(err);\n-                    this.clear();\n-                    return of(undefined);\n-                }),\n-            )\n-            .subscribe(() => {\n-                this.isLoading = false;\n-            });\n+        if (this.selectedProgrammingExercises.length <= 0) {", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MTQ2NA==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534061464", "bodyText": "You could also introduce a new variable for this check", "author": "fde312", "createdAt": "2020-12-02T10:32:50Z", "path": "src/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.html", "diffHunk": "@@ -0,0 +1,54 @@\n+<div>\n+    <div class=\"modal-header\">\n+        <h4 class=\"modal-title\" jhiTranslate=\"entity.action.editSelected\">Edit selected</h4>\n+        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"clear()\">&times;</button>\n+    </div>\n+    <div class=\"modal-body\">\n+        <div class=\"row justify-content-center\">\n+            <jhi-alert></jhi-alert>\n+            <jhi-alert-error></jhi-alert-error>\n+        </div>\n+        <div *ngIf=\"failedExercises.length > 0\" class=\"row justify-content-center\">", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MjQ5MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534062491", "bodyText": "Codacy: 'courseService' is assigned a value but never used", "author": "fde312", "createdAt": "2020-12-02T10:34:31Z", "path": "src/test/javascript/spec/component/programming-exercise/programming-exercise-edit-selected.component.spec.ts", "diffHunk": "@@ -0,0 +1,112 @@\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n+import { ActivatedRoute } from '@angular/router';\n+import { of } from 'rxjs';\n+import * as moment from 'moment';\n+\n+import { ArtemisTestModule } from '../../test.module';\n+import { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n+import { MockSyncStorage } from '../../helpers/mocks/service/mock-sync-storage.service';\n+import { MockTranslateService } from '../../helpers/mocks/service/mock-translate.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Course } from 'app/entities/course.model';\n+import { MockActivatedRoute } from '../../helpers/mocks/activated-route/mock-activated-route';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { ProgrammingLanguageFeatureService } from 'app/exercises/programming/shared/service/programming-language-feature/programming-language-feature.service';\n+import { ProgrammingExerciseEditSelectedComponent } from 'app/exercises/programming/manage/programming-exercise-edit-selected.component';\n+\n+describe('ProgrammingExercise Edit Selected Component', () => {\n+    let comp: ProgrammingExerciseEditSelectedComponent;\n+    let fixture: ComponentFixture<ProgrammingExerciseEditSelectedComponent>;\n+    let programmingExerciseService: ProgrammingExerciseService;\n+    let courseService: CourseManagementService;\n+    let exerciseGroupService: ExerciseGroupService;\n+    let programmingExerciseFeatureService: ProgrammingLanguageFeatureService;\n+\n+    beforeEach(() => {\n+        TestBed.configureTestingModule({\n+            imports: [ArtemisTestModule],\n+            declarations: [ProgrammingExerciseEditSelectedComponent],\n+            providers: [\n+                { provide: LocalStorageService, useClass: MockSyncStorage },\n+                { provide: SessionStorageService, useClass: MockSyncStorage },\n+                { provide: TranslateService, useClass: MockTranslateService },\n+                { provide: ActivatedRoute, useValue: new MockActivatedRoute() },\n+            ],\n+        })\n+            .overrideTemplate(ProgrammingExerciseEditSelectedComponent, '')\n+            .compileComponents();\n+\n+        fixture = TestBed.createComponent(ProgrammingExerciseEditSelectedComponent);\n+        comp = fixture.componentInstance;\n+        programmingExerciseService = fixture.debugElement.injector.get(ProgrammingExerciseService);\n+        courseService = fixture.debugElement.injector.get(CourseManagementService);", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MjY0OA==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534062648", "bodyText": "Codacy: 'exerciseGroupService' is assigned a value but never used", "author": "fde312", "createdAt": "2020-12-02T10:34:45Z", "path": "src/test/javascript/spec/component/programming-exercise/programming-exercise-edit-selected.component.spec.ts", "diffHunk": "@@ -0,0 +1,112 @@\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n+import { ActivatedRoute } from '@angular/router';\n+import { of } from 'rxjs';\n+import * as moment from 'moment';\n+\n+import { ArtemisTestModule } from '../../test.module';\n+import { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n+import { MockSyncStorage } from '../../helpers/mocks/service/mock-sync-storage.service';\n+import { MockTranslateService } from '../../helpers/mocks/service/mock-translate.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Course } from 'app/entities/course.model';\n+import { MockActivatedRoute } from '../../helpers/mocks/activated-route/mock-activated-route';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { ProgrammingLanguageFeatureService } from 'app/exercises/programming/shared/service/programming-language-feature/programming-language-feature.service';\n+import { ProgrammingExerciseEditSelectedComponent } from 'app/exercises/programming/manage/programming-exercise-edit-selected.component';\n+\n+describe('ProgrammingExercise Edit Selected Component', () => {\n+    let comp: ProgrammingExerciseEditSelectedComponent;\n+    let fixture: ComponentFixture<ProgrammingExerciseEditSelectedComponent>;\n+    let programmingExerciseService: ProgrammingExerciseService;\n+    let courseService: CourseManagementService;\n+    let exerciseGroupService: ExerciseGroupService;\n+    let programmingExerciseFeatureService: ProgrammingLanguageFeatureService;\n+\n+    beforeEach(() => {\n+        TestBed.configureTestingModule({\n+            imports: [ArtemisTestModule],\n+            declarations: [ProgrammingExerciseEditSelectedComponent],\n+            providers: [\n+                { provide: LocalStorageService, useClass: MockSyncStorage },\n+                { provide: SessionStorageService, useClass: MockSyncStorage },\n+                { provide: TranslateService, useClass: MockTranslateService },\n+                { provide: ActivatedRoute, useValue: new MockActivatedRoute() },\n+            ],\n+        })\n+            .overrideTemplate(ProgrammingExerciseEditSelectedComponent, '')\n+            .compileComponents();\n+\n+        fixture = TestBed.createComponent(ProgrammingExerciseEditSelectedComponent);\n+        comp = fixture.componentInstance;\n+        programmingExerciseService = fixture.debugElement.injector.get(ProgrammingExerciseService);\n+        courseService = fixture.debugElement.injector.get(CourseManagementService);\n+        exerciseGroupService = fixture.debugElement.injector.get(ExerciseGroupService);", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2Mjc4Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534062783", "bodyText": "Codacy: 'programmingExerciseFeatureService' is assigned a value but never used", "author": "fde312", "createdAt": "2020-12-02T10:34:58Z", "path": "src/test/javascript/spec/component/programming-exercise/programming-exercise-edit-selected.component.spec.ts", "diffHunk": "@@ -0,0 +1,112 @@\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n+import { ActivatedRoute } from '@angular/router';\n+import { of } from 'rxjs';\n+import * as moment from 'moment';\n+\n+import { ArtemisTestModule } from '../../test.module';\n+import { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n+import { MockSyncStorage } from '../../helpers/mocks/service/mock-sync-storage.service';\n+import { MockTranslateService } from '../../helpers/mocks/service/mock-translate.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Course } from 'app/entities/course.model';\n+import { MockActivatedRoute } from '../../helpers/mocks/activated-route/mock-activated-route';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { ProgrammingLanguageFeatureService } from 'app/exercises/programming/shared/service/programming-language-feature/programming-language-feature.service';\n+import { ProgrammingExerciseEditSelectedComponent } from 'app/exercises/programming/manage/programming-exercise-edit-selected.component';\n+\n+describe('ProgrammingExercise Edit Selected Component', () => {\n+    let comp: ProgrammingExerciseEditSelectedComponent;\n+    let fixture: ComponentFixture<ProgrammingExerciseEditSelectedComponent>;\n+    let programmingExerciseService: ProgrammingExerciseService;\n+    let courseService: CourseManagementService;\n+    let exerciseGroupService: ExerciseGroupService;\n+    let programmingExerciseFeatureService: ProgrammingLanguageFeatureService;\n+\n+    beforeEach(() => {\n+        TestBed.configureTestingModule({\n+            imports: [ArtemisTestModule],\n+            declarations: [ProgrammingExerciseEditSelectedComponent],\n+            providers: [\n+                { provide: LocalStorageService, useClass: MockSyncStorage },\n+                { provide: SessionStorageService, useClass: MockSyncStorage },\n+                { provide: TranslateService, useClass: MockTranslateService },\n+                { provide: ActivatedRoute, useValue: new MockActivatedRoute() },\n+            ],\n+        })\n+            .overrideTemplate(ProgrammingExerciseEditSelectedComponent, '')\n+            .compileComponents();\n+\n+        fixture = TestBed.createComponent(ProgrammingExerciseEditSelectedComponent);\n+        comp = fixture.componentInstance;\n+        programmingExerciseService = fixture.debugElement.injector.get(ProgrammingExerciseService);\n+        courseService = fixture.debugElement.injector.get(CourseManagementService);\n+        exerciseGroupService = fixture.debugElement.injector.get(ExerciseGroupService);\n+        programmingExerciseFeatureService = fixture.debugElement.injector.get(ProgrammingLanguageFeatureService);", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MzQwMg==", "url": "https://github.com/ls1intum/Artemis/pull/2457#discussion_r534063402", "bodyText": "If this is not an important/intended check, please remove", "author": "fde312", "createdAt": "2020-12-02T10:35:56Z", "path": "src/test/javascript/spec/component/programming-exercise/programming-exercise-edit-selected.component.spec.ts", "diffHunk": "@@ -0,0 +1,112 @@\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n+import { ActivatedRoute } from '@angular/router';\n+import { of } from 'rxjs';\n+import * as moment from 'moment';\n+\n+import { ArtemisTestModule } from '../../test.module';\n+import { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n+import { MockSyncStorage } from '../../helpers/mocks/service/mock-sync-storage.service';\n+import { MockTranslateService } from '../../helpers/mocks/service/mock-translate.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Course } from 'app/entities/course.model';\n+import { MockActivatedRoute } from '../../helpers/mocks/activated-route/mock-activated-route';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { ProgrammingLanguageFeatureService } from 'app/exercises/programming/shared/service/programming-language-feature/programming-language-feature.service';\n+import { ProgrammingExerciseEditSelectedComponent } from 'app/exercises/programming/manage/programming-exercise-edit-selected.component';\n+\n+describe('ProgrammingExercise Edit Selected Component', () => {\n+    let comp: ProgrammingExerciseEditSelectedComponent;\n+    let fixture: ComponentFixture<ProgrammingExerciseEditSelectedComponent>;\n+    let programmingExerciseService: ProgrammingExerciseService;\n+    let courseService: CourseManagementService;\n+    let exerciseGroupService: ExerciseGroupService;\n+    let programmingExerciseFeatureService: ProgrammingLanguageFeatureService;\n+\n+    beforeEach(() => {\n+        TestBed.configureTestingModule({\n+            imports: [ArtemisTestModule],\n+            declarations: [ProgrammingExerciseEditSelectedComponent],\n+            providers: [\n+                { provide: LocalStorageService, useClass: MockSyncStorage },\n+                { provide: SessionStorageService, useClass: MockSyncStorage },\n+                { provide: TranslateService, useClass: MockTranslateService },\n+                { provide: ActivatedRoute, useValue: new MockActivatedRoute() },\n+            ],\n+        })\n+            .overrideTemplate(ProgrammingExerciseEditSelectedComponent, '')\n+            .compileComponents();\n+\n+        fixture = TestBed.createComponent(ProgrammingExerciseEditSelectedComponent);\n+        comp = fixture.componentInstance;\n+        programmingExerciseService = fixture.debugElement.injector.get(ProgrammingExerciseService);\n+        courseService = fixture.debugElement.injector.get(CourseManagementService);\n+        exerciseGroupService = fixture.debugElement.injector.get(ExerciseGroupService);\n+        programmingExerciseFeatureService = fixture.debugElement.injector.get(ProgrammingLanguageFeatureService);\n+    });\n+\n+    describe('saveAll', () => {\n+        it('Should update each selected exercise', fakeAsync(() => {\n+            // GIVEN\n+            // the exercise containing the values to update the selected ones\n+            const newProgrammingExercise = new ProgrammingExercise(new Course(), undefined);\n+            newProgrammingExercise.releaseDate = moment();\n+            newProgrammingExercise.dueDate = moment().add(7, 'days');\n+            const selectedProgrammingExercises = [];\n+            const entityOne = new ProgrammingExercise(new Course(), undefined);\n+            entityOne.id = 123;\n+            entityOne.releaseDate = moment().add(1, 'days');\n+            const entityTwo = new ProgrammingExercise(new Course(), undefined);\n+            entityTwo.id = 123;\n+            entityTwo.releaseDate = moment().add(1, 'days');\n+            selectedProgrammingExercises.push(entityOne);\n+            selectedProgrammingExercises.push(entityTwo);\n+            comp.selectedProgrammingExercises = selectedProgrammingExercises;\n+            comp.newProgrammingExercise = newProgrammingExercise;\n+\n+            spyOn(programmingExerciseService, 'update').and.returnValue(of(new HttpResponse({ body: entityOne })));\n+\n+            // WHEN\n+            comp.saveAll();\n+            tick(); // simulate async\n+\n+            // THEN\n+            expect(programmingExerciseService.update).toHaveBeenCalledWith(entityOne, {});\n+            expect(programmingExerciseService.update).toHaveBeenCalledWith(entityTwo, {});\n+            expect(comp.selectedProgrammingExercises[0].dueDate).toEqual(newProgrammingExercise.dueDate);\n+            expect(comp.selectedProgrammingExercises[1].dueDate).toEqual(newProgrammingExercise.dueDate);\n+            expect(comp.selectedProgrammingExercises[0].releaseDate).toEqual(newProgrammingExercise.releaseDate);\n+            expect(comp.selectedProgrammingExercises[1].releaseDate).toEqual(newProgrammingExercise.releaseDate);\n+            expect(comp.isSaving).toEqual(false);\n+        }));\n+\n+        it('Should display error and not close modal', fakeAsync(() => {\n+            // GIVEN\n+            const newProgrammingExercise = new ProgrammingExercise(new Course(), undefined);\n+            newProgrammingExercise.releaseDate = moment();\n+            newProgrammingExercise.dueDate = moment().add(7, 'days');\n+            const selectedProgrammingExercises = [];\n+            const entityOne = new ProgrammingExercise(new Course(), undefined);\n+            entityOne.id = 123;\n+            entityOne.releaseDate = moment().add(1, 'days');\n+            selectedProgrammingExercises.push(entityOne);\n+            comp.selectedProgrammingExercises = selectedProgrammingExercises;\n+            comp.newProgrammingExercise = newProgrammingExercise;\n+\n+            spyOn(programmingExerciseService, 'update').and.returnValue(of(new HttpErrorResponse({ error: 'Internal Server Error' })));\n+            spyOn(comp, 'closeModal');\n+            // WHEN\n+            comp.saveAll();\n+            tick(); // simulate async\n+\n+            // THEN\n+            expect(programmingExerciseService.update).toHaveBeenCalledWith(entityOne, {});\n+            // expect(comp.failedExercises.length).toBeGreaterThan(0);", "originalCommit": "a57491d34e39c4bce4eb32182e70f081c357ee4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cdddb138b795ba14bd50f55c4f2a6e58502db3ac", "url": "https://github.com/ls1intum/Artemis/commit/cdddb138b795ba14bd50f55c4f2a6e58502db3ac", "message": "Merge branch 'develop' into feature/programming-exercises-management/update-selected-exercises", "committedDate": "2020-12-02T10:38:09Z", "type": "commit"}, {"oid": "f737c5a198b8e9f276d24ea632695079fa1d3425", "url": "https://github.com/ls1intum/Artemis/commit/f737c5a198b8e9f276d24ea632695079fa1d3425", "message": "Applied suggestions", "committedDate": "2020-12-03T09:18:27Z", "type": "commit"}, {"oid": "1a1a96271e9e90a892e2a7a64353de0fb8875942", "url": "https://github.com/ls1intum/Artemis/commit/1a1a96271e9e90a892e2a7a64353de0fb8875942", "message": "Small fix to previous commit", "committedDate": "2020-12-03T10:02:42Z", "type": "commit"}, {"oid": "c72cbd6ca7a50ce175cea52aa27867d1c79c4082", "url": "https://github.com/ls1intum/Artemis/commit/c72cbd6ca7a50ce175cea52aa27867d1c79c4082", "message": "Merge remote-tracking branch 'origin/feature/programming-exercises-management/update-selected-exercises' into feature/programming-exercises-management/update-selected-exercises\n\n# Conflicts:\n#\tsrc/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.ts", "committedDate": "2020-12-03T10:06:10Z", "type": "commit"}, {"oid": "2b81adb464972f256486728115660c50f47ef7fd", "url": "https://github.com/ls1intum/Artemis/commit/2b81adb464972f256486728115660c50f47ef7fd", "message": "Increased size of modal", "committedDate": "2020-12-04T08:46:06Z", "type": "commit"}, {"oid": "dd674ff6cd2b668f227ca35c9565093ef61d21f8", "url": "https://github.com/ls1intum/Artemis/commit/dd674ff6cd2b668f227ca35c9565093ef61d21f8", "message": "Merge branch 'develop' into feature/programming-exercises-management/update-selected-exercises", "committedDate": "2020-12-04T08:49:05Z", "type": "commit"}]}