{"pr_number": 2524, "pr_title": "[Feature] Highlight code line changes", "pr_createdAt": "2020-12-09T13:02:03Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2524", "timeline": [{"oid": "950d8aad96ae8d4dc23cf8c70b4d23d4997ab53c", "url": "https://github.com/ls1intum/Artemis/commit/950d8aad96ae8d4dc23cf8c70b4d23d4997ab53c", "message": "first try to highlight new lines of code", "committedDate": "2020-12-01T03:37:03Z", "type": "commit"}, {"oid": "5dd10bfbefd4026d4e58251b3356b46b2e088457", "url": "https://github.com/ls1intum/Artemis/commit/5dd10bfbefd4026d4e58251b3356b46b2e088457", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-code-line-changes", "committedDate": "2020-12-07T15:13:08Z", "type": "commit"}, {"oid": "8045ce5721f83e9a55a7b33ff693dd359152fbe3", "url": "https://github.com/ls1intum/Artemis/commit/8045ce5721f83e9a55a7b33ff693dd359152fbe3", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-code-line-changes\n\n# Conflicts:\n#\tpackage.json", "committedDate": "2020-12-09T13:01:10Z", "type": "commit"}, {"oid": "7ecaff41020fd6e867fe597e54fb49497a60d825", "url": "https://github.com/ls1intum/Artemis/commit/7ecaff41020fd6e867fe597e54fb49497a60d825", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-code-line-changes", "committedDate": "2020-12-10T21:23:02Z", "type": "commit"}, {"oid": "9894fcf54847aac07358004fd3a5be945ed7147b", "url": "https://github.com/ls1intum/Artemis/commit/9894fcf54847aac07358004fd3a5be945ed7147b", "message": "implement new endpoint to get all files with content from template repo", "committedDate": "2020-12-12T12:54:03Z", "type": "commit"}, {"oid": "d34fa4febe0e49bd3ed1a25eaa8c1889683ad3b8", "url": "https://github.com/ls1intum/Artemis/commit/d34fa4febe0e49bd3ed1a25eaa8c1889683ad3b8", "message": "add marking of new lines", "committedDate": "2020-12-12T12:58:43Z", "type": "commit"}, {"oid": "6a87e4da75d70a22e231839763ad96930ba02f1a", "url": "https://github.com/ls1intum/Artemis/commit/6a87e4da75d70a22e231839763ad96930ba02f1a", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-code-line-changes", "committedDate": "2020-12-12T12:58:52Z", "type": "commit"}, {"oid": "9f71ed9d08e88e7c5f79e422044f53b37e46df4e", "url": "https://github.com/ls1intum/Artemis/commit/9f71ed9d08e88e7c5f79e422044f53b37e46df4e", "message": "add new event emitter", "committedDate": "2020-12-13T03:05:38Z", "type": "commit"}, {"oid": "c028e123f99a420ffb465f585fd656eedc587836", "url": "https://github.com/ls1intum/Artemis/commit/c028e123f99a420ffb465f585fd656eedc587836", "message": "move logic form ace editor to code editor tutor", "committedDate": "2020-12-13T03:06:11Z", "type": "commit"}, {"oid": "39f7d3d4c156c2d12e4f62c7f75685b4ddef587a", "url": "https://github.com/ls1intum/Artemis/commit/39f7d3d4c156c2d12e4f62c7f75685b4ddef587a", "message": "use new event emitter", "committedDate": "2020-12-16T12:34:05Z", "type": "commit"}, {"oid": "7e79056bd5c2fade546d1ba7b47b865ba74c3d88", "url": "https://github.com/ls1intum/Artemis/commit/7e79056bd5c2fade546d1ba7b47b865ba74c3d88", "message": "generalize rest end point and make changes accordingly in client", "committedDate": "2020-12-16T12:35:53Z", "type": "commit"}, {"oid": "0ea16717b126bb6534e8dda8ab0cbe9912d4845c", "url": "https://github.com/ls1intum/Artemis/commit/0ea16717b126bb6534e8dda8ab0cbe9912d4845c", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-code-line-changes\n\n# Conflicts:\n#\tpackage.json", "committedDate": "2020-12-16T13:58:28Z", "type": "commit"}, {"oid": "fcc6e01ec03017cbf81dcff922fe711ea6f1a7be", "url": "https://github.com/ls1intum/Artemis/commit/fcc6e01ec03017cbf81dcff922fe711ea6f1a7be", "message": "make codacy happy and renaming of variable", "committedDate": "2020-12-16T14:13:47Z", "type": "commit"}, {"oid": "a6d04ba99f91fb06adc587ba58a47825f9312886", "url": "https://github.com/ls1intum/Artemis/commit/a6d04ba99f91fb06adc587ba58a47825f9312886", "message": "add PreAuthorized and server test", "committedDate": "2020-12-16T14:27:10Z", "type": "commit"}, {"oid": "9a7a2ccd5dacfc8a88d7ee9376a1e02ded1955c9", "url": "https://github.com/ls1intum/Artemis/commit/9a7a2ccd5dacfc8a88d7ee9376a1e02ded1955c9", "message": "removed console logs, renamed method and small changes", "committedDate": "2020-12-17T05:24:17Z", "type": "commit"}, {"oid": "f80edc786f86b242913ac72adb55cd4b7a1115ed", "url": "https://github.com/ls1intum/Artemis/commit/f80edc786f86b242913ac72adb55cd4b7a1115ed", "message": "add client test", "committedDate": "2020-12-17T05:33:40Z", "type": "commit"}, {"oid": "54fca565b3e6c4dcb6e14020efa76321160d4471", "url": "https://github.com/ls1intum/Artemis/commit/54fca565b3e6c4dcb6e14020efa76321160d4471", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-code-line-changes", "committedDate": "2020-12-17T12:31:58Z", "type": "commit"}, {"oid": "a7b2971df05f34f9d4e320fa276c3e9d2798b91c", "url": "https://github.com/ls1intum/Artemis/commit/a7b2971df05f34f9d4e320fa276c3e9d2798b91c", "message": "try to fix issues with wrong line highlighting", "committedDate": "2020-12-17T12:59:36Z", "type": "commit"}, {"oid": "b32098ee3a42c8a8a530759f93844567b8968d58", "url": "https://github.com/ls1intum/Artemis/commit/b32098ee3a42c8a8a530759f93844567b8968d58", "message": "Merge branch 'develop' into feature/programming-assessment/highlight-code-line-changes", "committedDate": "2020-12-17T16:19:08Z", "type": "commit"}, {"oid": "27c5987fd3f4f0143ffd6bd0cf732a8fb011cbed", "url": "https://github.com/ls1intum/Artemis/commit/27c5987fd3f4f0143ffd6bd0cf732a8fb011cbed", "message": "Merge branch 'develop' into feature/programming-assessment/highlight-code-line-changes", "committedDate": "2020-12-17T20:03:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyMjMyNw==", "url": "https://github.com/ls1intum/Artemis/pull/2524#discussion_r545422327", "bodyText": "This could hurt a bit if the repositories are known to contain larger files (e.g. some example data), but it is not dramatic. We could in future however use the already implemented file change detection to reduce this only to files that were changed.", "author": "MaisiKoleni", "createdAt": "2020-12-17T21:43:11Z", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -133,37 +145,55 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n                 participationId = Number(params['participationId']);\n             }\n \n-            this.programmingExerciseParticipationService.getStudentParticipationWithLatestManualResult(participationId).subscribe(\n-                (participationWithResult: ProgrammingExerciseStudentParticipation) => {\n-                    // Set domain to make file editor work properly\n-                    this.domainService.setDomain([DomainType.PARTICIPATION, participationWithResult]);\n-                    this.participation = participationWithResult;\n-                    this.manualResult = this.participation.results![0];\n-\n-                    // Either submission from latest manual or automatic result\n-                    this.submission = this.manualResult.submission as ProgrammingSubmission;\n-                    this.submission.participation = this.participation;\n-                    this.exercise = this.participation.exercise as ProgrammingExercise;\n-                    this.hasAssessmentDueDatePassed = !!this.exercise!.assessmentDueDate && moment(this.exercise!.assessmentDueDate).isBefore(now());\n-\n-                    this.checkPermissions();\n-                    this.handleFeedback();\n-\n-                    if (this.manualResult && this.manualResult.hasComplaint) {\n-                        this.getComplaint();\n-                    }\n-                    this.createAdjustedRepositoryUrl();\n-                },\n-                (error: HttpErrorResponse) => {\n-                    this.participationCouldNotBeFetched = true;\n-                    if (error.error && error.error.errorKey === 'lockedSubmissionsLimitReached') {\n-                        this.lockLimitReached = true;\n-                    }\n-                },\n-                () => {\n-                    this.loadingParticipation = false;\n-                },\n-            );\n+            this.programmingExerciseParticipationService\n+                .getStudentParticipationWithLatestManualResult(participationId)\n+                .pipe(\n+                    tap(\n+                        (participationWithResult: ProgrammingExerciseStudentParticipation) => {\n+                            // Set domain to make file editor work properly\n+                            this.domainService.setDomain([DomainType.PARTICIPATION, participationWithResult]);\n+                            this.participation = participationWithResult;\n+                            this.manualResult = this.participation.results![0];\n+\n+                            // Either submission from latest manual or automatic result\n+                            this.submission = this.manualResult.submission as ProgrammingSubmission;\n+                            this.submission.participation = this.participation;\n+                            this.exercise = this.participation.exercise as ProgrammingExercise;\n+                            this.hasAssessmentDueDatePassed = !!this.exercise!.assessmentDueDate && moment(this.exercise!.assessmentDueDate).isBefore(now());\n+\n+                            this.checkPermissions();\n+                            this.handleFeedback();\n+\n+                            if (this.manualResult && this.manualResult.hasComplaint) {\n+                                this.getComplaint();\n+                            }\n+                            this.createAdjustedRepositoryUrl();\n+                        },\n+                        (error: HttpErrorResponse) => {\n+                            this.participationCouldNotBeFetched = true;\n+                            if (error.error && error.error.errorKey === 'lockedSubmissionsLimitReached') {\n+                                this.lockLimitReached = true;\n+                            }\n+                        },\n+                        () => (this.loadingParticipation = false),\n+                    ),\n+                    switchMap(() => this.programmingExerciseService.findWithTemplateAndSolutionParticipation(this.exercise.id!)),\n+                    tap((programmingExercise) => (this.templateParticipation = programmingExercise.body!.templateParticipation!)),\n+                    switchMap(() => {\n+                        // Get all files with content from template repository\n+                        this.domainService.setDomain([DomainType.PARTICIPATION, this.templateParticipation]);\n+                        const observable = this.repositoryFileService.getFilesWithContent();", "originalCommit": "27c5987fd3f4f0143ffd6bd0cf732a8fb011cbed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}