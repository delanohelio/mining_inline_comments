{"pr_number": 1323, "pr_title": "Ensure that users only receive notifications for their courses", "pr_createdAt": "2020-04-20T10:14:11Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1323", "timeline": [{"oid": "70951d74ee7dc6420d9852c64505290428471f70", "url": "https://github.com/ls1intum/Artemis/commit/70951d74ee7dc6420d9852c64505290428471f70", "message": "Add findAllRecentNotificationsForRecipientWithLogin() to NotificationRespository", "committedDate": "2020-04-20T09:47:22Z", "type": "commit"}, {"oid": "a76377a3f966ad8c8707d000e2caae1966e87c52", "url": "https://github.com/ls1intum/Artemis/commit/a76377a3f966ad8c8707d000e2caae1966e87c52", "message": "Use findAllRecentNotificationsForRecipientWithLogin() in NotificationService", "committedDate": "2020-04-20T09:47:59Z", "type": "commit"}, {"oid": "c9448fd0459c68e3d9a7a6d25f5d3c9826daf989", "url": "https://github.com/ls1intum/Artemis/commit/c9448fd0459c68e3d9a7a6d25f5d3c9826daf989", "message": "small refactoring and code quality improvements", "committedDate": "2020-04-20T12:15:59Z", "type": "commit"}, {"oid": "d229293b74eb12fab6a6ad5ae850812407456fdd", "url": "https://github.com/ls1intum/Artemis/commit/d229293b74eb12fab6a6ad5ae850812407456fdd", "message": "Delete cached notifications on logout", "committedDate": "2020-04-20T15:06:17Z", "type": "commit"}, {"oid": "3fff3ea2afde70c198ec5fb3aab51ab41458dba1", "url": "https://github.com/ls1intum/Artemis/commit/3fff3ea2afde70c198ec5fb3aab51ab41458dba1", "message": "Remove shareReplay as notification cache ensures that get request is not send twice", "committedDate": "2020-04-20T15:07:21Z", "type": "commit"}, {"oid": "dd928cab90f88118cf8d89a186527aafbf925746", "url": "https://github.com/ls1intum/Artemis/commit/dd928cab90f88118cf8d89a186527aafbf925746", "message": "Initialize notification observer on service instantiation", "committedDate": "2020-04-20T15:31:40Z", "type": "commit"}, {"oid": "5532dec0be8da2476be3f193207dad7bed4bc114", "url": "https://github.com/ls1intum/Artemis/commit/5532dec0be8da2476be3f193207dad7bed4bc114", "message": "Clean up notification observer on log out", "committedDate": "2020-04-20T15:33:12Z", "type": "commit"}, {"oid": "1430d50197da84980bf6294e11dbcf9ef2d50756", "url": "https://github.com/ls1intum/Artemis/commit/1430d50197da84980bf6294e11dbcf9ef2d50756", "message": "Add notification service to login-service.spec.ts", "committedDate": "2020-04-20T15:53:58Z", "type": "commit"}, {"oid": "beb2c8cfee202167579b1fa2730cce7c3874e98b", "url": "https://github.com/ls1intum/Artemis/commit/beb2c8cfee202167579b1fa2730cce7c3874e98b", "message": "Remove now unnecessary service and repository methods", "committedDate": "2020-04-20T16:28:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2Njg5OA==", "url": "https://github.com/ls1intum/Artemis/pull/1323#discussion_r411666898", "bodyText": "I guess we should cleanup subscribedTopics as well, right?", "author": "krusche", "createdAt": "2020-04-20T20:23:51Z", "path": "src/main/webapp/app/overview/notification/notification.service.ts", "diffHunk": "@@ -183,4 +174,13 @@ export class NotificationService {\n         const courseId = target.course || notification.course.id;\n         this.router.navigate([target.mainPage, courseId, target.entity, target.id]);\n     }\n+\n+    private initNotificationObserver(): void {\n+        this.notificationObserver = new BehaviorSubject<Notification | null>(null);\n+    }\n+\n+    public cleanUp(): void {\n+        this.cachedNotifications = new Observable<EntityArrayResponseType>();", "originalCommit": "beb2c8cfee202167579b1fa2730cce7c3874e98b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyMjQwMA==", "url": "https://github.com/ls1intum/Artemis/pull/1323#discussion_r411722400", "bodyText": "Had that on my todo :-) Is now cleaned up during logout: 0af1890", "author": "sascha11110", "createdAt": "2020-04-20T22:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2Njg5OA=="}], "type": "inlineReview"}, {"oid": "88fadcde55fff33c1e28896dfea235bcc36f6562", "url": "https://github.com/ls1intum/Artemis/commit/88fadcde55fff33c1e28896dfea235bcc36f6562", "message": "Improve tests in NotificationResourceIntegrationTest", "committedDate": "2020-04-20T21:27:46Z", "type": "commit"}, {"oid": "0af1890947ced7227abc9f4e7db24fe3ed1a5505", "url": "https://github.com/ls1intum/Artemis/commit/0af1890947ced7227abc9f4e7db24fe3ed1a5505", "message": "Clean up subscribedTopics in notification service on log out", "committedDate": "2020-04-20T21:29:14Z", "type": "commit"}, {"oid": "d06b7e97a6990dc663e28d6e89dcfd615c655686", "url": "https://github.com/ls1intum/Artemis/commit/d06b7e97a6990dc663e28d6e89dcfd615c655686", "message": "Apply tests for api/notification/recent-for-user", "committedDate": "2020-04-20T21:55:43Z", "type": "commit"}, {"oid": "e22b460dd7dd8692cfb2818e07e93cb9d421b0f3", "url": "https://github.com/ls1intum/Artemis/commit/e22b460dd7dd8692cfb2818e07e93cb9d421b0f3", "message": "Adjust SystemNotificationIntegrationTest to new parameter order of generateSystemNotification()", "committedDate": "2020-04-20T21:59:48Z", "type": "commit"}, {"oid": "0abae33fc7013e0815d77e20172da13b68253f0f", "url": "https://github.com/ls1intum/Artemis/commit/0abae33fc7013e0815d77e20172da13b68253f0f", "message": "Remove now unnecessary test case", "committedDate": "2020-04-20T22:01:05Z", "type": "commit"}, {"oid": "9f3fe0f1725171f1d4e8eea9f638d77ce117ca47", "url": "https://github.com/ls1intum/Artemis/commit/9f3fe0f1725171f1d4e8eea9f638d77ce117ca47", "message": "Merge branch 'develop' into bugfix/notifications/rest-only-notifications-for-user", "committedDate": "2020-04-20T22:11:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAzODQ4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1323#discussion_r412038489", "bodyText": "One thing regarding all the test cases:\nYou currently only check that the notification is returned when calling recent-for-user, which is totally fine.\nI think you do not test right now that the notification is only delivered once (correct me if I'm wrong), so I propose you execute another call to the same endpoint again and verify that the list is either empty or does at least not contain notification1 and notification2.\nThe same applies to the other test cases.", "author": "sleiss", "createdAt": "2020-04-21T09:46:50Z", "path": "src/test/java/de/tum/in/www1/artemis/NotificationResourceIntegrationTest.java", "diffHunk": "@@ -101,36 +115,132 @@ public void testCreateNotification_asInstructor_BAD_REQUEST() throws Exception {\n     }\n \n     @Test\n-    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n-    public void testGetNotifications_asInstructor() throws Exception {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), \"Title\", \"Notification Text\", null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        notificationRepository.save(groupNotification);\n-        List<Notification> notificationResponse = request.get(\"/api/notifications\", HttpStatus.OK, List.class);\n-        assertThat(notificationResponse.size()).as(\"response length is 1\").isEqualTo(1);\n+    @Sql({ \"/h2/custom-functions.sql\" })\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void testGetNotifications_recipientEvaluation() throws Exception {\n+        User recipient = userService.getUser();\n+        SingleUserNotification notification1 = ModelFactory.generateSingleUserNotification(ZonedDateTime.now(), recipient);\n+        notificationRepository.save(notification1);\n+        SingleUserNotification notification2 = ModelFactory.generateSingleUserNotification(ZonedDateTime.now(), users.get(1));\n+        notificationRepository.save(notification2);\n+\n+        List<Notification> notifications = request.getList(\"/api/notifications\", HttpStatus.OK, Notification.class);\n+        assertThat(notifications).as(\"Notification with recipient equal to current user is returned\").contains(notification1);\n+        assertThat(notifications).as(\"Notification with recipient not equal to current user is not returned\").doesNotContain(notification2);\n+\n+        List<Notification> recentNotifications = request.getList(\"/api/notifications/recent-for-user\", HttpStatus.OK, Notification.class);\n+        assertThat(recentNotifications).as(\"Recent notification with recipient equal to current user is returned\").contains(notification1);\n+        assertThat(recentNotifications).as(\"Recent notification with recipient not equal to current user is not returned\").doesNotContain(notification2);", "originalCommit": "9f3fe0f1725171f1d4e8eea9f638d77ce117ca47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3Mjc0MA==", "url": "https://github.com/ls1intum/Artemis/pull/1323#discussion_r412072740", "bodyText": "As discussed on zoom this is tested implicitly via testGetRecentNotifications().", "author": "sascha11110", "createdAt": "2020-04-21T10:39:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAzODQ4OQ=="}], "type": "inlineReview"}, {"oid": "b32616a45df11759e49d39355648cb7f401ce572", "url": "https://github.com/ls1intum/Artemis/commit/b32616a45df11759e49d39355648cb7f401ce572", "message": "Fix evaluation of lastNotificationRead and notificationDate", "committedDate": "2020-04-21T16:15:15Z", "type": "commit"}, {"oid": "d4f4b7327cff990017fe7515f093f81dfdcdd8f9", "url": "https://github.com/ls1intum/Artemis/commit/d4f4b7327cff990017fe7515f093f81dfdcdd8f9", "message": "Update user lastNotificationRead differently to avoid side-effects when saving user completely", "committedDate": "2020-04-21T17:29:17Z", "type": "commit"}, {"oid": "00e2cc9568c3b6e0214cd9d9a4510869298ca40e", "url": "https://github.com/ls1intum/Artemis/commit/00e2cc9568c3b6e0214cd9d9a4510869298ca40e", "message": "Merge branch 'develop' into bugfix/notifications/rest-only-notifications-for-user", "committedDate": "2020-04-21T17:49:44Z", "type": "commit"}]}