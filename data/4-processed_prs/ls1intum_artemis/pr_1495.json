{"pr_number": 1495, "pr_title": "Store versions of submissions in database", "pr_createdAt": "2020-05-18T22:11:04Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1495", "timeline": [{"oid": "9c5db7b6e23871297dd2ac38221925e969fad717", "url": "https://github.com/ls1intum/Artemis/commit/9c5db7b6e23871297dd2ac38221925e969fad717", "message": "Initial commit", "committedDate": "2020-05-18T22:10:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzYzMw==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r426927633", "bodyText": "can we wrap this in a generic try {... } catch(Exception ex) {...} so that it never can happen that any kind of (runtime) exception (we did not think of) in the submission version service makes problem with saving the normal submission? (which should really always work!)\nHere, we might also make sure the transaction is not rolled back if an exception in submissionVersionService occurs", "author": "krusche", "createdAt": "2020-05-18T22:31:58Z", "path": "src/main/java/de/tum/in/www1/artemis/service/TextSubmissionService.java", "diffHunk": "@@ -98,12 +101,13 @@ public TextSubmission handleTextSubmission(TextSubmission textSubmission, TextEx\n      * @return the textSubmission entity that was saved to the database\n      */\n     @Transactional(rollbackFor = Exception.class)\n-    public TextSubmission save(TextSubmission textSubmission, StudentParticipation participation) {\n+    public TextSubmission save(TextSubmission textSubmission, StudentParticipation participation, Principal principal) {\n         // update submission properties\n         textSubmission.setSubmissionDate(ZonedDateTime.now());\n         textSubmission.setType(SubmissionType.MANUAL);\n         textSubmission.setParticipation(participation);\n         textSubmission = textSubmissionRepository.save(textSubmission);\n+        submissionVersionService.save(textSubmission, principal.getName());", "originalCommit": "9c5db7b6e23871297dd2ac38221925e969fad717", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MTk3Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427371976", "bodyText": "Will do.", "author": "madwau", "createdAt": "2020-05-19T14:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzYzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzc0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r426927747", "bodyText": "can we wrap this in a generic try {... } catch(Exception ex) {...} so that it never can happen that any kind of (runtime) exception (we did not think of) in the submission version service makes problem with saving the normal submission? (which should really always work!)", "author": "krusche", "createdAt": "2020-05-18T22:32:17Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "diffHunk": "@@ -206,6 +209,7 @@ public ModelingSubmission save(ModelingSubmission modelingSubmission, ModelingEx\n         modelingSubmission.setType(SubmissionType.MANUAL);\n         modelingSubmission.setParticipation(participation);\n         modelingSubmission = modelingSubmissionRepository.save(modelingSubmission);\n+        submissionVersionService.save(modelingSubmission, username);", "originalCommit": "9c5db7b6e23871297dd2ac38221925e969fad717", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MTc4MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427371781", "bodyText": "Yes, makes sense. I'll add a try catch block.", "author": "madwau", "createdAt": "2020-05-19T14:59:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzc0Nw=="}], "type": "inlineReview"}, {"oid": "4054e07ed142735d0667bafdc90738394f7c6083", "url": "https://github.com/ls1intum/Artemis/commit/4054e07ed142735d0667bafdc90738394f7c6083", "message": "Order column not needed since order is determined by id", "committedDate": "2020-05-19T15:27:32Z", "type": "commit"}, {"oid": "b915352e0141b365df1fd6bc4fc8cfdf7c71d0ac", "url": "https://github.com/ls1intum/Artemis/commit/b915352e0141b365df1fd6bc4fc8cfdf7c71d0ac", "message": "Add comment", "committedDate": "2020-05-19T15:40:24Z", "type": "commit"}, {"oid": "c7293a57717e4f188aa653a2374b2aab9c3b6213", "url": "https://github.com/ls1intum/Artemis/commit/c7293a57717e4f188aa653a2374b2aab9c3b6213", "message": "Merge branch 'develop' into feature/submission-versions", "committedDate": "2020-05-19T15:40:43Z", "type": "commit"}, {"oid": "6d190ede01acef7566c405d29c40a141b9f6b17a", "url": "https://github.com/ls1intum/Artemis/commit/6d190ede01acef7566c405d29c40a141b9f6b17a", "message": "Add comment", "committedDate": "2020-05-19T15:44:40Z", "type": "commit"}, {"oid": "660c4e23baa12e23bbce2ecf37af80ecfd7c45a5", "url": "https://github.com/ls1intum/Artemis/commit/660c4e23baa12e23bbce2ecf37af80ecfd7c45a5", "message": "Merge remote-tracking branch 'origin/feature/submission-versions' into feature/submission-versions", "committedDate": "2020-05-19T15:44:55Z", "type": "commit"}, {"oid": "099a87e528caa117055474d84f14df0cae033ea8", "url": "https://github.com/ls1intum/Artemis/commit/099a87e528caa117055474d84f14df0cae033ea8", "message": "Merge branch 'develop' into feature/submission-versions", "committedDate": "2020-05-19T16:03:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyMzg3MA==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427423870", "bodyText": "add a small comment that this is set automatically by spring / hibernate", "author": "krusche", "createdAt": "2020-05-19T16:10:07Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/SubmissionVersion.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.time.Instant;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+import org.springframework.data.annotation.CreatedDate;\n+import org.springframework.data.annotation.LastModifiedDate;\n+import org.springframework.data.jpa.domain.support.AuditingEntityListener;\n+\n+@Entity\n+@Table(name = \"submission_version\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@EntityListeners(AuditingEntityListener.class)\n+public class SubmissionVersion {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @ManyToOne\n+    private Submission submission;\n+\n+    @ManyToOne\n+    private User author;\n+\n+    @Lob\n+    @Column(name = \"content\")\n+    private String content;\n+\n+    @CreatedDate\n+    @Column(name = \"created_date\", updatable = false)\n+    private Instant createdDate = Instant.now();\n+\n+    @LastModifiedDate\n+    @Column(name = \"last_modified_date\")\n+    private Instant lastModifiedDate = Instant.now();", "originalCommit": "099a87e528caa117055474d84f14df0cae033ea8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4MjQ3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427482473", "bodyText": "Done", "author": "madwau", "createdAt": "2020-05-19T17:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyMzg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMzk4OA==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427433988", "bodyText": "please log info the time between here and below", "author": "krusche", "createdAt": "2020-05-19T16:24:52Z", "path": "src/main/java/de/tum/in/www1/artemis/service/SubmissionVersionService.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Submission;\n+import de.tum.in.www1.artemis.domain.SubmissionVersion;\n+import de.tum.in.www1.artemis.domain.TextSubmission;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.domain.modeling.ModelingSubmission;\n+import de.tum.in.www1.artemis.repository.SubmissionVersionRepository;\n+\n+@Service\n+public class SubmissionVersionService {\n+\n+    private final Logger log = LoggerFactory.getLogger(SubmissionVersionService.class);\n+\n+    protected SubmissionVersionRepository submissionVersionRepository;\n+\n+    protected UserService userService;\n+\n+    public SubmissionVersionService(SubmissionVersionRepository submissionVersionRepository, UserService userService) {\n+        this.submissionVersionRepository = submissionVersionRepository;\n+        this.userService = userService;\n+    }\n+\n+    /**\n+     * Saves a version for the given submission to track its current content and author\n+     *\n+     * If the last version for this submission was made by the same user, update this version.\n+     * Otherwise, create a new version. This drastically reduces the number of versions that need to be created.\n+     *\n+     * @param submission Submission for which to save a version\n+     * @param username Username of the author of the submission update\n+     * @return created/updated submission version\n+     */\n+    public SubmissionVersion save(Submission submission, String username) {\n+        User user = userService.getUserByLogin(username).orElseThrow();\n+", "originalCommit": "099a87e528caa117055474d84f14df0cae033ea8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4NjgyNw==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427486827", "bodyText": "Done", "author": "madwau", "createdAt": "2020-05-19T17:46:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMzk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzNDEwNA==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427434104", "bodyText": "log.info", "author": "krusche", "createdAt": "2020-05-19T16:25:03Z", "path": "src/main/java/de/tum/in/www1/artemis/service/SubmissionVersionService.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Submission;\n+import de.tum.in.www1.artemis.domain.SubmissionVersion;\n+import de.tum.in.www1.artemis.domain.TextSubmission;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.domain.modeling.ModelingSubmission;\n+import de.tum.in.www1.artemis.repository.SubmissionVersionRepository;\n+\n+@Service\n+public class SubmissionVersionService {\n+\n+    private final Logger log = LoggerFactory.getLogger(SubmissionVersionService.class);\n+\n+    protected SubmissionVersionRepository submissionVersionRepository;\n+\n+    protected UserService userService;\n+\n+    public SubmissionVersionService(SubmissionVersionRepository submissionVersionRepository, UserService userService) {\n+        this.submissionVersionRepository = submissionVersionRepository;\n+        this.userService = userService;\n+    }\n+\n+    /**\n+     * Saves a version for the given submission to track its current content and author\n+     *\n+     * If the last version for this submission was made by the same user, update this version.\n+     * Otherwise, create a new version. This drastically reduces the number of versions that need to be created.\n+     *\n+     * @param submission Submission for which to save a version\n+     * @param username Username of the author of the submission update\n+     * @return created/updated submission version\n+     */\n+    public SubmissionVersion save(Submission submission, String username) {\n+        User user = userService.getUserByLogin(username).orElseThrow();\n+\n+        return submissionVersionRepository.findLatestVersion(submission.getId()).map(latestVersion -> {\n+            if (latestVersion.getAuthor().equals(user)) {\n+                return updateExistingVersion(latestVersion, submission);\n+            }\n+            else {\n+                return createNewVersion(submission, user);\n+            }\n+        }).orElseGet(() -> createNewVersion(submission, user));\n+    }", "originalCommit": "099a87e528caa117055474d84f14df0cae033ea8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzNzAxNw==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427437017", "bodyText": "please only invoke this for team exercises (pass TeamExercise in the method)", "author": "krusche", "createdAt": "2020-05-19T16:29:21Z", "path": "src/main/java/de/tum/in/www1/artemis/service/TextSubmissionService.java", "diffHunk": "@@ -95,16 +102,25 @@ public TextSubmission handleTextSubmission(TextSubmission textSubmission, TextEx\n      *\n      * @param textSubmission the submission that should be saved\n      * @param participation  the participation the participation the submission belongs to\n+     * @param principal      the principal of the user\n      * @return the textSubmission entity that was saved to the database\n      */\n     @Transactional(rollbackFor = Exception.class)\n-    public TextSubmission save(TextSubmission textSubmission, StudentParticipation participation) {\n+    public TextSubmission save(TextSubmission textSubmission, StudentParticipation participation, Principal principal) {\n         // update submission properties\n         textSubmission.setSubmissionDate(ZonedDateTime.now());\n         textSubmission.setType(SubmissionType.MANUAL);\n         textSubmission.setParticipation(participation);\n         textSubmission = textSubmissionRepository.save(textSubmission);\n \n+        // versioning of submission\n+        try {\n+            submissionVersionService.save(textSubmission, principal.getName());", "originalCommit": "099a87e528caa117055474d84f14df0cae033ea8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4ODQzOA==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427488438", "bodyText": "Done", "author": "madwau", "createdAt": "2020-05-19T17:49:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzNzAxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzNzE1Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427437156", "bodyText": "please only invoke this for team exercises (pass TeamExercise in the method)", "author": "krusche", "createdAt": "2020-05-19T16:29:33Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "diffHunk": "@@ -207,6 +210,14 @@ public ModelingSubmission save(ModelingSubmission modelingSubmission, ModelingEx\n         modelingSubmission.setParticipation(participation);\n         modelingSubmission = modelingSubmissionRepository.save(modelingSubmission);\n \n+        // versioning of submission\n+        try {\n+            submissionVersionService.save(modelingSubmission, username);", "originalCommit": "099a87e528caa117055474d84f14df0cae033ea8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4ODQ2OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1495#discussion_r427488469", "bodyText": "Done", "author": "madwau", "createdAt": "2020-05-19T17:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzNzE1Ng=="}], "type": "inlineReview"}, {"oid": "482696119a6ca189e0f75df736b6ac67e7fecd76", "url": "https://github.com/ls1intum/Artemis/commit/482696119a6ca189e0f75df736b6ac67e7fecd76", "message": "Merge remote-tracking branch 'origin/develop' into feature/submission-versions\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/TextSubmissionService.java", "committedDate": "2020-05-19T17:37:19Z", "type": "commit"}, {"oid": "b5f31c76b570f05e8ab2ee9eb5860b8cb1f1c4a2", "url": "https://github.com/ls1intum/Artemis/commit/b5f31c76b570f05e8ab2ee9eb5860b8cb1f1c4a2", "message": "Add comment", "committedDate": "2020-05-19T17:39:57Z", "type": "commit"}, {"oid": "b19b48bbe9a4b29165469ac06abe59680cbd789d", "url": "https://github.com/ls1intum/Artemis/commit/b19b48bbe9a4b29165469ac06abe59680cbd789d", "message": "Time log", "committedDate": "2020-05-19T17:46:46Z", "type": "commit"}, {"oid": "0b66c52f06eead3da202ace98a877eaab6efdcd6", "url": "https://github.com/ls1intum/Artemis/commit/0b66c52f06eead3da202ace98a877eaab6efdcd6", "message": "Only version in team mode", "committedDate": "2020-05-19T17:49:16Z", "type": "commit"}, {"oid": "738fce88eef2423d9573fedd3589c000b0a65fc0", "url": "https://github.com/ls1intum/Artemis/commit/738fce88eef2423d9573fedd3589c000b0a65fc0", "message": "Merge branch 'develop' into feature/submission-versions", "committedDate": "2020-05-19T17:52:01Z", "type": "commit"}, {"oid": "05e4309efff392133e5ee8de7691622d2e7e7436", "url": "https://github.com/ls1intum/Artemis/commit/05e4309efff392133e5ee8de7691622d2e7e7436", "message": "Docs", "committedDate": "2020-05-19T18:03:42Z", "type": "commit"}, {"oid": "b00dbfd8f3d37d5d6e9d657ec42fbb3c095c166f", "url": "https://github.com/ls1intum/Artemis/commit/b00dbfd8f3d37d5d6e9d657ec42fbb3c095c166f", "message": "Merge remote-tracking branch 'origin/feature/submission-versions' into feature/submission-versions", "committedDate": "2020-05-19T18:03:51Z", "type": "commit"}, {"oid": "09fabcc4859e116add66b7d072b1b79a44849145", "url": "https://github.com/ls1intum/Artemis/commit/09fabcc4859e116add66b7d072b1b79a44849145", "message": "Add server tests", "committedDate": "2020-05-19T20:03:36Z", "type": "commit"}]}