{"pr_number": 2307, "pr_title": "Feature: Implement Video Units for Lecture Modularization", "pr_createdAt": "2020-11-01T16:25:31Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2307", "timeline": [{"oid": "3ecd84d7dc75d68715a44da8436bb505b1f9a4cc", "url": "https://github.com/ls1intum/Artemis/commit/3ecd84d7dc75d68715a44da8436bb505b1f9a4cc", "message": "Fixed: Regular Attachments for Lecture were not release locked any more", "committedDate": "2020-10-30T17:30:37Z", "type": "commit"}, {"oid": "450d9cb84e0cd7202bfbb545522eb8684be69595", "url": "https://github.com/ls1intum/Artemis/commit/450d9cb84e0cd7202bfbb545522eb8684be69595", "message": "Fixed: Package did not correspond to file path", "committedDate": "2020-10-30T18:07:05Z", "type": "commit"}, {"oid": "ef450c2898427ae905fa27993d8fd72040e5bd8e", "url": "https://github.com/ls1intum/Artemis/commit/ef450c2898427ae905fa27993d8fd72040e5bd8e", "message": "Fixed: Package did not correspond to file path", "committedDate": "2020-10-30T18:49:17Z", "type": "commit"}, {"oid": "83e458521c10d309ae7fa652992da870a08bd18b", "url": "https://github.com/ls1intum/Artemis/commit/83e458521c10d309ae7fa652992da870a08bd18b", "message": "Fixed: Removed unnecessary @Cache annotation on subclasses", "committedDate": "2020-10-30T19:20:11Z", "type": "commit"}, {"oid": "b8fc707bc77bec64004069e1117a3501d7078931", "url": "https://github.com/ls1intum/Artemis/commit/b8fc707bc77bec64004069e1117a3501d7078931", "message": "Fixed: Information for Exercise Units not consistent with Course Overview", "committedDate": "2020-10-31T15:15:00Z", "type": "commit"}, {"oid": "80527dd9b4e99b16170bae32619ec542f89cd22a", "url": "https://github.com/ls1intum/Artemis/commit/80527dd9b4e99b16170bae32619ec542f89cd22a", "message": "Refactor: Made exclusive options more clear", "committedDate": "2020-10-31T15:57:26Z", "type": "commit"}, {"oid": "81e873174837cd8b40e27ecf1d35167a09b39eea", "url": "https://github.com/ls1intum/Artemis/commit/81e873174837cd8b40e27ecf1d35167a09b39eea", "message": "Added YoutubePlayer Component", "committedDate": "2020-10-31T19:59:37Z", "type": "commit"}, {"oid": "d03bf7794cd4b4d289194d8cd9ae18a7716f2ec2", "url": "https://github.com/ls1intum/Artemis/commit/d03bf7794cd4b4d289194d8cd9ae18a7716f2ec2", "message": "Merge branch 'develop' into fix/lecture-units/bugfixes", "committedDate": "2020-11-01T12:01:00Z", "type": "commit"}, {"oid": "8910bd0c4925c76056fdec99f25198adea82ba90", "url": "https://github.com/ls1intum/Artemis/commit/8910bd0c4925c76056fdec99f25198adea82ba90", "message": "Implemented Video Units", "committedDate": "2020-11-01T16:21:37Z", "type": "commit"}, {"oid": "d8cfbf42ed78c0e368b4017fd795062ee5c8fafd", "url": "https://github.com/ls1intum/Artemis/commit/d8cfbf42ed78c0e368b4017fd795062ee5c8fafd", "message": "Merge branch 'develop' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-01T16:22:34Z", "type": "commit"}, {"oid": "ef006a191ca714ead5d471d8aae06643661341be", "url": "https://github.com/ls1intum/Artemis/commit/ef006a191ca714ead5d471d8aae06643661341be", "message": "Fixed JavaDoc", "committedDate": "2020-11-01T19:36:27Z", "type": "commit"}, {"oid": "4334364fc76ecf8473a7683ba2b4458ec9fff89a", "url": "https://github.com/ls1intum/Artemis/commit/4334364fc76ecf8473a7683ba2b4458ec9fff89a", "message": "Wrote VideoUnit IntegrationTest", "committedDate": "2020-11-01T20:47:39Z", "type": "commit"}, {"oid": "9fd9c006a8326d6b66e94d5a6189ad5a1cf370b2", "url": "https://github.com/ls1intum/Artemis/commit/9fd9c006a8326d6b66e94d5a6189ad5a1cf370b2", "message": "FixedTests", "committedDate": "2020-11-01T21:26:31Z", "type": "commit"}, {"oid": "5d06e23b821d78c8a8bdf06123573296cfbb8908", "url": "https://github.com/ls1intum/Artemis/commit/5d06e23b821d78c8a8bdf06123573296cfbb8908", "message": "YouTube API fix", "committedDate": "2020-11-01T23:31:56Z", "type": "commit"}, {"oid": "9a0a229d1accaf5134471f4873deb07e83db44df", "url": "https://github.com/ls1intum/Artemis/commit/9a0a229d1accaf5134471f4873deb07e83db44df", "message": "Fixed Constants Name", "committedDate": "2020-11-02T09:11:07Z", "type": "commit"}, {"oid": "0ad7c3b0422bb4ee5efd297f95a078f1e1a11b6e", "url": "https://github.com/ls1intum/Artemis/commit/0ad7c3b0422bb4ee5efd297f95a078f1e1a11b6e", "message": "Merge remote-tracking branch 'origin/fix/lecture-units/bugfixes' into fix/lecture-units/bugfixes", "committedDate": "2020-11-02T09:11:44Z", "type": "commit"}, {"oid": "27718a018da8943df880c21b369fdf9d06c47f3e", "url": "https://github.com/ls1intum/Artemis/commit/27718a018da8943df880c21b369fdf9d06c47f3e", "message": "Merge branch 'develop' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-02T09:38:58Z", "type": "commit"}, {"oid": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "url": "https://github.com/ls1intum/Artemis/commit/7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "message": "Merge branch 'fix/lecture-units/bugfixes' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-02T09:41:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyODc3OA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515928778", "bodyText": "an env-variable containing \"/api/video-units\" would be nice", "author": "derLalla", "createdAt": "2020-11-02T12:08:44Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/lecture/VideoUnitResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package de.tum.in.www1.artemis.web.rest.lecture;\n+\n+import static de.tum.in.www1.artemis.web.rest.util.ResponseUtil.*;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.Optional;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Lecture;\n+import de.tum.in.www1.artemis.domain.lecture.VideoUnit;\n+import de.tum.in.www1.artemis.repository.LectureRepository;\n+import de.tum.in.www1.artemis.repository.VideoUnitRepository;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+@RestController\n+@RequestMapping(\"/api\")\n+public class VideoUnitResource {\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(ExerciseUnitResource.class);\n+\n+    private static final String ENTITY_NAME = \"videoUnit\";\n+\n+    private final VideoUnitRepository videoUnitRepository;\n+\n+    private final LectureRepository lectureRepository;\n+\n+    private final AuthorizationCheckService authorizationCheckService;\n+\n+    public VideoUnitResource(LectureRepository lectureRepository, AuthorizationCheckService authorizationCheckService, VideoUnitRepository videoUnitRepository) {\n+        this.lectureRepository = lectureRepository;\n+        this.authorizationCheckService = authorizationCheckService;\n+        this.videoUnitRepository = videoUnitRepository;\n+    }\n+\n+    /**\n+     * GET /video-units/:videoUnitId : gets the video unit with the specified id\n+     *\n+     * @param videoUnitId the id of the videoUnit to retrieve\n+     * @return the ResponseEntity with status 200 (OK) and with body the video unit, or with status 404 (Not Found)\n+     */\n+    @GetMapping(\"/video-units/{videoUnitId}\")\n+    @PreAuthorize(\"hasAnyRole('ADMIN', 'INSTRUCTOR')\")\n+    public ResponseEntity<VideoUnit> getVideoUnit(@PathVariable Long videoUnitId) {\n+        log.debug(\"REST request to get VideoUnit : {}\", videoUnitId);\n+        Optional<VideoUnit> optionalVideoUnit = videoUnitRepository.findById(videoUnitId);\n+        if (optionalVideoUnit.isEmpty()) {\n+            return notFound();\n+        }\n+        VideoUnit videoUnit = optionalVideoUnit.get();\n+        if (videoUnit.getLecture() == null || videoUnit.getLecture().getCourse() == null) {\n+            return conflict();\n+        }\n+\n+        if (!authorizationCheckService.isAtLeastInstructorInCourse(videoUnit.getLecture().getCourse(), null)) {\n+            return forbidden();\n+        }\n+        return ResponseEntity.ok().body(videoUnit);\n+    }\n+\n+    /**\n+     * PUT /lectures/:lectureId/video-units : Updates an existing video unit .\n+     *\n+     * @param lectureId      the id of the lecture to which the video unit belongs to update\n+     * @param videoUnit the video unit to update\n+     * @return the ResponseEntity with status 200 (OK) and with body the updated videoUnit\n+     * @throws URISyntaxException if the Location URI syntax is incorrect\n+     */\n+    @PutMapping(\"/lectures/{lectureId}/video-units\")\n+    @PreAuthorize(\"hasAnyRole('ADMIN', 'INSTRUCTOR')\")\n+    public ResponseEntity<VideoUnit> updateVideoUnit(@PathVariable Long lectureId, @RequestBody VideoUnit videoUnit) throws URISyntaxException {\n+        log.debug(\"REST request to update an video unit : {}\", videoUnit);\n+        if (videoUnit.getId() == null) {\n+            return badRequest();\n+        }\n+\n+        if (videoUnit.getLecture() == null || videoUnit.getLecture().getCourse() == null) {\n+            return conflict();\n+        }\n+\n+        if (!authorizationCheckService.isAtLeastInstructorInCourse(videoUnit.getLecture().getCourse(), null)) {\n+            return forbidden();\n+        }\n+\n+        if (!videoUnit.getLecture().getId().equals(lectureId)) {\n+            return conflict();\n+        }\n+\n+        VideoUnit result = videoUnitRepository.save(videoUnit);\n+        return ResponseEntity.ok().headers(HeaderUtil.createEntityUpdateAlert(applicationName, true, ENTITY_NAME, videoUnit.getId().toString())).body(result);\n+    }\n+\n+    /**\n+     * POST /lectures/:lectureId/video-units : creates a new video unit.\n+     *\n+     * @param lectureId      the id of the lecture to which the video unit should be added\n+     * @param videoUnit the video unit that should be created\n+     * @return the ResponseEntity with status 201 (Created) and with body the new video unit\n+     * @throws URISyntaxException if the Location URI syntax is incorrect\n+     */\n+    @PostMapping(\"/lectures/{lectureId}/video-units\")\n+    @PreAuthorize(\"hasAnyRole('ADMIN','INSTRUCTOR')\")\n+    public ResponseEntity<VideoUnit> createVideoUnit(@PathVariable Long lectureId, @RequestBody VideoUnit videoUnit) throws URISyntaxException {\n+        log.debug(\"REST request to create VideoUnit : {}\", videoUnit);\n+        if (videoUnit.getId() != null) {\n+            return badRequest();\n+        }\n+        Optional<Lecture> lectureOptional = lectureRepository.findByIdWithStudentQuestionsAndLectureUnits(lectureId);\n+        if (lectureOptional.isEmpty()) {\n+            return badRequest();\n+        }\n+        Lecture lecture = lectureOptional.get();\n+        if (lecture.getCourse() == null) {\n+            return conflict();\n+        }\n+        if (!authorizationCheckService.isAtLeastInstructorInCourse(lecture.getCourse(), null)) {\n+            return forbidden();\n+        }\n+\n+        lecture.addLectureUnit(videoUnit);\n+        Lecture updatedLecture = lectureRepository.save(lecture);\n+        VideoUnit persistedVideoUnit = (VideoUnit) updatedLecture.getLectureUnits().get(updatedLecture.getLectureUnits().size() - 1);\n+\n+        return ResponseEntity.created(new URI(\"/api/video-units/\" + persistedVideoUnit.getId()))", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMTEyOQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516021129", "bodyText": "What do you mean by this? Some of the APIs start with /video-units but some with /lectures, so I can not add it to @RequestMapping. Do you have an example?", "author": "stefanwaldhauser", "createdAt": "2020-11-02T14:46:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyODc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzMDQ0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515930447", "bodyText": "you can shorten it by:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (name) {\n          \n          \n            \n                        this.videoUnitToCreate.name = name;\n          \n          \n            \n                    }\n          \n          \n            \n                    this.videoUnitToCreate.name = name || undefined;", "author": "derLalla", "createdAt": "2020-11-02T12:12:21Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/create-video-unit/create-video-unit.component.ts", "diffHunk": "@@ -0,0 +1,68 @@\n+import { HttpErrorResponse } from '@angular/common/http';\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\n+import { VideoUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component';\n+import { VideoUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/videoUnit.service';\n+import { onError } from 'app/shared/util/global.utils';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { finalize } from 'rxjs/operators';\n+\n+@Component({\n+    selector: 'jhi-create-video-unit',\n+    templateUrl: './create-video-unit.component.html',\n+    styles: [],\n+})\n+export class CreateVideoUnitComponent implements OnInit {\n+    videoUnitToCreate: VideoUnit = new VideoUnit();\n+    isLoading: boolean;\n+    lectureId: number;\n+    courseId: number;\n+\n+    constructor(private activatedRoute: ActivatedRoute, private router: Router, private videoUnitService: VideoUnitService, private alertService: JhiAlertService) {}\n+\n+    ngOnInit(): void {\n+        this.activatedRoute.paramMap.subscribe((params) => {\n+            this.lectureId = Number(params.get('lectureId'));\n+            this.courseId = Number(params.get('courseId'));\n+        });\n+        this.videoUnitToCreate = new VideoUnit();\n+    }\n+\n+    createAttachmentUnit(formData: VideoUnitFormData) {\n+        if (!formData?.name || !formData?.source) {\n+            return;\n+        }\n+\n+        const { name, description, releaseDate, source } = formData;\n+\n+        if (name) {\n+            this.videoUnitToCreate.name = name;\n+        }", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMjU3Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516022577", "bodyText": "Done in e9c09ee", "author": "stefanwaldhauser", "createdAt": "2020-11-02T14:49:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzMDQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzMTk3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515931973", "bodyText": "can this never be null?  Maybe it's safer to assign the values via\nname: videoUnitResponse.body?.name\n\n..etc.", "author": "derLalla", "createdAt": "2020-11-02T12:15:43Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-video-unit/edit-video-unit.component.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+import { Component, OnInit } from '@angular/core';\n+import { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\n+import { VideoUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { VideoUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/videoUnit.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { onError } from 'app/shared/util/global.utils';\n+import { finalize, switchMap, take } from 'rxjs/operators';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+\n+@Component({\n+    selector: 'jhi-edit-video-unit',\n+    templateUrl: './edit-video-unit.component.html',\n+    styles: [],\n+})\n+export class EditVideoUnitComponent implements OnInit {\n+    isLoading = false;\n+    videoUnit: VideoUnit;\n+    formData: VideoUnitFormData;\n+    lectureId: number;\n+\n+    constructor(private activatedRoute: ActivatedRoute, private router: Router, private videoUnitService: VideoUnitService, private alertService: JhiAlertService) {}\n+\n+    ngOnInit(): void {\n+        this.isLoading = true;\n+        this.activatedRoute.paramMap\n+            .pipe(\n+                take(1),\n+                switchMap((params) => {\n+                    const videoUnitId = Number(params.get('videoUnitId'));\n+                    this.lectureId = Number(params.get('lectureId'));\n+                    return this.videoUnitService.findById(videoUnitId);\n+                }),\n+                finalize(() => {\n+                    this.isLoading = false;\n+                }),\n+            )\n+            .subscribe(\n+                (videoUnitResponse: HttpResponse<VideoUnit>) => {\n+                    this.videoUnit = videoUnitResponse.body!;", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyNDI0MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516024241", "bodyText": "The body should never be null. If the corresponding video unit is not found, a httpError will be thrown.", "author": "stefanwaldhauser", "createdAt": "2020-11-02T14:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzMTk3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzMjU4MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515932581", "bodyText": "a comment stating the current directory and the resulting target would be good.", "author": "derLalla", "createdAt": "2020-11-02T12:16:57Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-video-unit/edit-video-unit.component.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+import { Component, OnInit } from '@angular/core';\n+import { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\n+import { VideoUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { VideoUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/videoUnit.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { onError } from 'app/shared/util/global.utils';\n+import { finalize, switchMap, take } from 'rxjs/operators';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+\n+@Component({\n+    selector: 'jhi-edit-video-unit',\n+    templateUrl: './edit-video-unit.component.html',\n+    styles: [],\n+})\n+export class EditVideoUnitComponent implements OnInit {\n+    isLoading = false;\n+    videoUnit: VideoUnit;\n+    formData: VideoUnitFormData;\n+    lectureId: number;\n+\n+    constructor(private activatedRoute: ActivatedRoute, private router: Router, private videoUnitService: VideoUnitService, private alertService: JhiAlertService) {}\n+\n+    ngOnInit(): void {\n+        this.isLoading = true;\n+        this.activatedRoute.paramMap\n+            .pipe(\n+                take(1),\n+                switchMap((params) => {\n+                    const videoUnitId = Number(params.get('videoUnitId'));\n+                    this.lectureId = Number(params.get('lectureId'));\n+                    return this.videoUnitService.findById(videoUnitId);\n+                }),\n+                finalize(() => {\n+                    this.isLoading = false;\n+                }),\n+            )\n+            .subscribe(\n+                (videoUnitResponse: HttpResponse<VideoUnit>) => {\n+                    this.videoUnit = videoUnitResponse.body!;\n+\n+                    this.formData = {\n+                        name: this.videoUnit.name,\n+                        description: this.videoUnit.description,\n+                        releaseDate: this.videoUnit.releaseDate,\n+                        source: this.videoUnit.source,\n+                    };\n+                },\n+                (res: HttpErrorResponse) => onError(this.alertService, res),\n+            );\n+    }\n+\n+    updateVideoUnit(formData: VideoUnitFormData) {\n+        const { name, description, releaseDate, source } = formData;\n+        this.videoUnit.name = name;\n+        this.videoUnit.description = description;\n+        this.videoUnit.releaseDate = releaseDate;\n+        this.videoUnit.source = source;\n+        this.isLoading = true;\n+        this.videoUnitService\n+            .update(this.videoUnit, this.lectureId)\n+            .pipe(\n+                finalize(() => {\n+                    this.isLoading = false;\n+                    this.router.navigate(['../../../'], { relativeTo: this.activatedRoute });", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyNTM4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516025389", "bodyText": "added in dda78e6", "author": "stefanwaldhauser", "createdAt": "2020-11-02T14:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzMjU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzNDU1OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515934559", "bodyText": "wouldn't a switch case here be more readable? Also adding a default case might be relevant?", "author": "derLalla", "createdAt": "2020-11-02T12:21:20Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/lecture-unit-management.component.ts", "diffHunk": "@@ -139,6 +160,9 @@ export class LectureUnitManagementComponent implements OnInit, OnDestroy {\n         if (lectureUnit.type === LectureUnitType.ATTACHMENT) {\n             return 'artemisApp.attachmentUnit.delete.typeNameToConfirm';\n         }\n+        if (lectureUnit.type === LectureUnitType.VIDEO) {\n+            return 'artemisApp.videoUnit.delete.typeNameToConfirm';\n+        }\n     }", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyNzgyOA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516027828", "bodyText": "done in b8e9bc9", "author": "stefanwaldhauser", "createdAt": "2020-11-02T14:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzNDU1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzNTU3MA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515935570", "bodyText": "skip the else part, if it's not really needed (see other functions as well):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            export function extractVideoService(url: string) {\n          \n          \n            \n                if (!url) {\n          \n          \n            \n                    return undefined;\n          \n          \n            \n                } else {\n          \n          \n            \n                    return getVideoId(url).service;\n          \n          \n            \n                }\n          \n          \n            \n            }\n          \n          \n            \n            export function extractVideoService(url: string) {\n          \n          \n            \n                if (!url) {\n          \n          \n            \n                    return undefined;\n          \n          \n            \n                }\n          \n          \n            \n                return getVideoId(url).service;\n          \n          \n            \n            }", "author": "derLalla", "createdAt": "2020-11-02T12:23:48Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component.ts", "diffHunk": "@@ -0,0 +1,126 @@\n+import { Moment } from 'moment';\n+import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n+import { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n+\n+const getVideoId = require('get-video-id');\n+\n+export interface VideoUnitFormData {\n+    name?: string;\n+    description?: string;\n+    releaseDate?: Moment;\n+    source?: string;\n+}\n+\n+export function extractVideoService(url: string) {\n+    if (!url) {\n+        return undefined;\n+    } else {\n+        return getVideoId(url).service;\n+    }\n+}", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyODgxMA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516028810", "bodyText": "done in 93fc033", "author": "stefanwaldhauser", "createdAt": "2020-11-02T14:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzNTU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzNzc5Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515937796", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"errorCode100\": \"The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.\",\n          \n          \n            \n                            \"errorCode100\": \"The requested video was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.\",", "author": "derLalla", "createdAt": "2020-11-02T12:28:52Z", "path": "src/main/webapp/i18n/en/lectureUnit.json", "diffHunk": "@@ -13,10 +13,47 @@\n             },\n             \"releaseDate\": \"Release Date\"\n         },\n+        \"videoUnit\": {\n+            \"created\": \"A new video unit created\",\n+            \"updated\": \"Video unit updated\",\n+            \"tooltip\": \"This is a Video Unit.\",\n+            \"description\": \"Description\",\n+            \"notReleasedTooltip\": \"Video only visible to teaching assistants and instructors. Release date:\",\n+            \"youTube\": {\n+                \"errorCode2\": \"The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters.\",\n+                \"errorCode5\": \" The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.\",\n+                \"errorCode100\": \"The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.\",", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyOTgwNg==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516029806", "bodyText": "Not changed to be consistent with text from https://developers.google.com/youtube/iframe_api_reference", "author": "stefanwaldhauser", "createdAt": "2020-11-02T14:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzNzc5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzODYxNw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515938617", "bodyText": "stay consistent with the wording of video unit. Sometimes you write it capitalized and sometimes not.", "author": "derLalla", "createdAt": "2020-11-02T12:30:28Z", "path": "src/main/webapp/i18n/en/lectureUnit.json", "diffHunk": "@@ -13,10 +13,47 @@\n             },\n             \"releaseDate\": \"Release Date\"\n         },\n+        \"videoUnit\": {\n+            \"created\": \"A new video unit created\",\n+            \"updated\": \"Video unit updated\",\n+            \"tooltip\": \"This is a Video Unit.\",\n+            \"description\": \"Description\",\n+            \"notReleasedTooltip\": \"Video only visible to teaching assistants and instructors. Release date:\",\n+            \"youTube\": {\n+                \"errorCode2\": \"The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters.\",\n+                \"errorCode5\": \" The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.\",\n+                \"errorCode100\": \"The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.\",\n+                \"errorCode101Or150\": \"The owner of the requested video does not allow it to be played in embedded players.\",\n+                \"unknownError\": \"An error has occured when trying to start the video.\"\n+            },\n+            \"createVideoUnit\": {\n+                \"title\": \"Create Video Unit\",\n+                \"name\": \"Name\",\n+                \"namePlaceHolder\": \"Give the Video Unit a name\",\n+                \"description\": \"Description\",\n+                \"descriptionPlaceHolder\": \"Give the video a description\",\n+                \"nameRequiredValidationError\": \"Name is required.\",\n+                \"nameMaxLengthValidationError\": \"Name can be max 255 characters long.\",\n+                \"descriptionMaxLengthValidationError\": \"Description can be max 255 characters long.\",\n+                \"source\": \"YouTube Video Id\",\n+                \"sourcePlaceHolder\": \"YouTube Video Id\",\n+                \"sourceRequiredValidationError\": \"YouTube Video Id is required\",\n+                \"urlPlaceholder\": \"Input a YouTube URL here for Video ID extraction\",\n+                \"urlPatternValidationError\": \"URL does not match a link to a YouTube Video\"\n+            },\n+            \"editVideoUnit\": {\n+                \"title\": \"Edit Video Unit\"\n+            },\n+            \"delete\": {\n+                \"question\": \"Do you really want to delete the video unit <strong>{{ title }}</strong>? You can not undo this action!\",\n+                \"typeNameToConfirm\": \"Please enter the name of the video unit for confirmation.\",", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMwMjQ5OA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516302498", "bodyText": "Fixed in d092133", "author": "stefanwaldhauser", "createdAt": "2020-11-02T22:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzODYxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzOTI1Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515939256", "bodyText": "this code is duplicated 4 times. Try to create a function for that.", "author": "derLalla", "createdAt": "2020-11-02T12:31:46Z", "path": "src/test/java/de/tum/in/www1/artemis/AttachmentUnitIntegrationTest.java", "diffHunk": "@@ -124,7 +136,11 @@ public void updateAttachmentUnit_notInstructorInCourse_shouldReturnForbidden() t\n     @Test\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n     public void updateAttachmentUnit_noId_shouldReturnBadRequest() throws Exception {\n-        this.attachmentUnit = attachmentUnitRepository.save(attachmentUnit);\n+        lecture1 = lectureRepository.findByIdWithStudentQuestionsAndLectureUnits(lecture1.getId()).get();\n+        lecture1.addLectureUnit(this.attachmentUnit);\n+        lectureRepository.save(lecture1);\n+        this.attachmentUnit = (AttachmentUnit) lectureRepository.findByIdWithStudentQuestionsAndLectureUnits(lecture1.getId()).get().getLectureUnits().stream().findFirst().get();\n+", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAzMTU3MA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516031570", "bodyText": "done in e49e339", "author": "stefanwaldhauser", "createdAt": "2020-11-02T15:01:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzOTI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk0MDI3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r515940273", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"errorCode100\": \" Der angeforderte Video wurde nicht gefunden. Dieser Fehler tritt auf, wenn ein Video aus irgendeinem Grund entfernt oder als privat markiert wurde.\",\n          \n          \n            \n                            \"errorCode100\": \" Das angeforderte Video wurde nicht gefunden. Dieser Fehler tritt auf, wenn ein Video aus irgendeinem Grund entfernt oder als privat markiert wurde.\",", "author": "derLalla", "createdAt": "2020-11-02T12:33:52Z", "path": "src/main/webapp/i18n/de/lectureUnit.json", "diffHunk": "@@ -13,6 +13,43 @@\n             },\n             \"releaseDate\": \"Ver\u00f6ffentlichungsdatum\"\n         },\n+        \"videoUnit\": {\n+            \"created\": \"Eine neue Videoeinheit wurde erstellt\",\n+            \"updated\": \"Videoeinheit geupdated\",\n+            \"tooltip\": \"Das ist eine Videoeinheit.\",\n+            \"description\": \"Beschreibung\",\n+            \"notReleasedTooltip\": \"Video nur sichtbar f\u00fcr Tutoren und Dozenten. Ver\u00f6ffentlichkeitsdatum:\",\n+            \"youTube\": {\n+                \"errorCode2\": \"Die Anfrage enth\u00e4lt einen ung\u00fcltigen Parameterwert. Dieser Fehler tritt beispielsweise auf, wenn du eine Video-ID angibst, die nicht aus elf Zeichen besteht, oder wenn die Video-ID ung\u00fcltige Zeichen wie z. B. Ausrufezeichen oder Sternchen enth\u00e4lt.\",\n+                \"errorCode5\": \" Der angeforderte Inhalt kann nicht mit einem HTML5-Player wiedergegeben werden oder es ist ein anderer Fehler im Zusammenhang mit dem HTML5-Player aufgetreten.\",\n+                \"errorCode100\": \" Der angeforderte Video wurde nicht gefunden. Dieser Fehler tritt auf, wenn ein Video aus irgendeinem Grund entfernt oder als privat markiert wurde.\",", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516020689", "bodyText": "We already embed youtube videos for guided tours.\ne.g. here https://artemis.ase.in.tum.de/#/courses/39/exercises (start tutorial)\nWe simply use an iframe for this: guided-tour.component.html:111.\nThe URLs are defined here: guidedTourCourseExerciseOverview.json:11", "author": "jpbernius", "createdAt": "2020-11-02T14:46:22Z", "path": "package.json", "diffHunk": "@@ -14,6 +14,7 @@\n     },\n     \"dependencies\": {\n         \"@angular/animations\": \"10.2.1\",\n+        \"@angular/youtube-player\": \"10.2.6\",", "originalCommit": "7c3eb75236e6941d5e77abf0a6ac1afb8c6b34cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAzMzk2NA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516033964", "bodyText": "But this produces the same error as the official youtube component which is just an abstraction above the iframe?", "author": "stefanwaldhauser", "createdAt": "2020-11-02T15:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAzNDk4MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516034981", "bodyText": "And I like the interactivity I gain from using the component for example stopping the video when the unit is closed.", "author": "stefanwaldhauser", "createdAt": "2020-11-02T15:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4ODExMg==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516088112", "bodyText": "So I have a version working without using the youtube i frame api and thus without using the angular youtube component. What is lost? It is not possible in any way to interact with the video using code, meaning it is not possible for example to pause the video when the unit is collapsed. Through a \"hack\" by reassigning the src attribute of the iframe you can make it that the video stops completely when the unit is collapsed. The problem with this is that the viewing progress is lost. There is also no feedback from the video anymore, thus no error messages can be displayed.", "author": "stefanwaldhauser", "createdAt": "2020-11-02T16:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5NTM3NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516095375", "bodyText": "I removed the YouTube Angular Component and YouTube I Frame APi in cda468f in favor of using a simple iframe approach. Some features are lost:\nVideos now continue playing even though video unit is collapsed.\nYouTube Errors are not received and not displayed in the Ui any more", "author": "stefanwaldhauser", "createdAt": "2020-11-02T16:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0MzMwNg==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516143306", "bodyText": "@krusche what do you think. Most importantly we should have a consistent way of embedding youtube videos throughout the platform.", "author": "jpbernius", "createdAt": "2020-11-02T17:34:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzNzU3OA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516337578", "bodyText": "I think we use the easy version for now, we can still discuss improvements in a follow-up.\nI would also favor consistency. Let's have a quick discussion tomorrow and check whether we should use the YouTube Angular Component for the other place as well.\nBy the way: not everyone is using Youtube, so we should also allow other videos to be embedded in lectures ;-)", "author": "krusche", "createdAt": "2020-11-02T23:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTQ5Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516339493", "bodyText": "please remove the unused entry for now here", "author": "krusche", "createdAt": "2020-11-02T23:46:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAyMDY4OQ=="}], "type": "inlineReview"}, {"oid": "e9c09ee164bf2f643b674f7114de5739ba1d9f2b", "url": "https://github.com/ls1intum/Artemis/commit/e9c09ee164bf2f643b674f7114de5739ba1d9f2b", "message": "Refactored if to optional chaining", "committedDate": "2020-11-02T14:48:50Z", "type": "commit"}, {"oid": "dda78e63e9a1c07513f189edc016b2498a4db1b3", "url": "https://github.com/ls1intum/Artemis/commit/dda78e63e9a1c07513f189edc016b2498a4db1b3", "message": "Added route comment", "committedDate": "2020-11-02T14:52:39Z", "type": "commit"}, {"oid": "b8e9bc9f529484f9109a58503fb96a81fc84b78e", "url": "https://github.com/ls1intum/Artemis/commit/b8e9bc9f529484f9109a58503fb96a81fc84b78e", "message": "Refactored if to switch", "committedDate": "2020-11-02T14:55:51Z", "type": "commit"}, {"oid": "93fc0335414f4bba82b740ffbef04bdf8a9745db", "url": "https://github.com/ls1intum/Artemis/commit/93fc0335414f4bba82b740ffbef04bdf8a9745db", "message": "Unwrapped else", "committedDate": "2020-11-02T14:57:12Z", "type": "commit"}, {"oid": "e49e3394f2a7ebe0249b9c45bb625af3cd98c356", "url": "https://github.com/ls1intum/Artemis/commit/e49e3394f2a7ebe0249b9c45bb625af3cd98c356", "message": "Refactored duplicated code into method", "committedDate": "2020-11-02T15:01:00Z", "type": "commit"}, {"oid": "71348641ba8583a4f9ad614d470c63fadadd83f8", "url": "https://github.com/ls1intum/Artemis/commit/71348641ba8583a4f9ad614d470c63fadadd83f8", "message": "Update src/main/webapp/i18n/de/lectureUnit.json\n\nCo-authored-by: Ren\u00e9 Lalla <33484318+derLalla@users.noreply.github.com>", "committedDate": "2020-11-02T15:02:10Z", "type": "commit"}, {"oid": "cda468f41f957b8e4c2b141cafbe17a70109cd99", "url": "https://github.com/ls1intum/Artemis/commit/cda468f41f957b8e4c2b141cafbe17a70109cd99", "message": "Removed YouTube API and YouTube Component in favor or simple iframe\nimplementation", "committedDate": "2020-11-02T16:27:07Z", "type": "commit"}, {"oid": "9b4fbc9f706db98a2b8a1690cef0e21b3423ce8d", "url": "https://github.com/ls1intum/Artemis/commit/9b4fbc9f706db98a2b8a1690cef0e21b3423ce8d", "message": "Merge remote-tracking branch 'origin/feature/lecture-modules-learning-goals/video-unit' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-02T16:27:29Z", "type": "commit"}, {"oid": "d092133ab497d6ee3aa612ad07beb64b01b1766d", "url": "https://github.com/ls1intum/Artemis/commit/d092133ab497d6ee3aa612ad07beb64b01b1766d", "message": "Corrected Capitalization", "committedDate": "2020-11-02T22:43:51Z", "type": "commit"}, {"oid": "46c961227ca3bff3c1082521b1e6897ac1e4720c", "url": "https://github.com/ls1intum/Artemis/commit/46c961227ca3bff3c1082521b1e6897ac1e4720c", "message": "Merge branch 'develop' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-02T22:45:14Z", "type": "commit"}, {"oid": "96de1905b3db1bb2c6b45e735c190febf9afe43a", "url": "https://github.com/ls1intum/Artemis/commit/96de1905b3db1bb2c6b45e735c190febf9afe43a", "message": "Merge branch 'develop' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-02T23:44:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTA2NA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516339064", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @GetMapping(\"/video-units/{videoUnitId}\")\n          \n          \n            \n                @GetMapping(\"/lectures/{lectureId}/video-units/{videoUnitId}\")", "author": "krusche", "createdAt": "2020-11-02T23:46:10Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/lecture/VideoUnitResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package de.tum.in.www1.artemis.web.rest.lecture;\n+\n+import static de.tum.in.www1.artemis.web.rest.util.ResponseUtil.*;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.Optional;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Lecture;\n+import de.tum.in.www1.artemis.domain.lecture.VideoUnit;\n+import de.tum.in.www1.artemis.repository.LectureRepository;\n+import de.tum.in.www1.artemis.repository.VideoUnitRepository;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+@RestController\n+@RequestMapping(\"/api\")\n+public class VideoUnitResource {\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(ExerciseUnitResource.class);\n+\n+    private static final String ENTITY_NAME = \"videoUnit\";\n+\n+    private final VideoUnitRepository videoUnitRepository;\n+\n+    private final LectureRepository lectureRepository;\n+\n+    private final AuthorizationCheckService authorizationCheckService;\n+\n+    public VideoUnitResource(LectureRepository lectureRepository, AuthorizationCheckService authorizationCheckService, VideoUnitRepository videoUnitRepository) {\n+        this.lectureRepository = lectureRepository;\n+        this.authorizationCheckService = authorizationCheckService;\n+        this.videoUnitRepository = videoUnitRepository;\n+    }\n+\n+    /**\n+     * GET /video-units/:videoUnitId : gets the video unit with the specified id\n+     *\n+     * @param videoUnitId the id of the videoUnit to retrieve\n+     * @return the ResponseEntity with status 200 (OK) and with body the video unit, or with status 404 (Not Found)\n+     */\n+    @GetMapping(\"/video-units/{videoUnitId}\")", "originalCommit": "96de1905b3db1bb2c6b45e735c190febf9afe43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTEzOA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516339138", "bodyText": "Let's stay consistent with the REST URLs", "author": "krusche", "createdAt": "2020-11-02T23:46:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4Mzc2NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516483765", "bodyText": "I did it this way because I tried to follow the guidelines:\n\nShould I change it for all units?", "author": "stefanwaldhauser", "createdAt": "2020-11-03T08:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU5NDA3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516594073", "bodyText": "I do not fully agree to the marked statement and would prefer, that our REST URLs stay consistent of starting points", "author": "krusche", "createdAt": "2020-11-03T11:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU5NDEzMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516594131", "bodyText": "so yes, please change it ;-)", "author": "krusche", "createdAt": "2020-11-03T11:20:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYwNTg2Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516605866", "bodyText": "Done in\n2781c72\n9d7f2cd\n72bab48", "author": "stefanwaldhauser", "createdAt": "2020-11-03T11:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTg0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516339847", "bodyText": "I guess this should be createVideoUnit, right?", "author": "krusche", "createdAt": "2020-11-02T23:47:39Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/create-video-unit/create-video-unit.component.ts", "diffHunk": "@@ -0,0 +1,60 @@\n+import { HttpErrorResponse } from '@angular/common/http';\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\n+import { VideoUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component';\n+import { VideoUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/videoUnit.service';\n+import { onError } from 'app/shared/util/global.utils';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { finalize } from 'rxjs/operators';\n+\n+@Component({\n+    selector: 'jhi-create-video-unit',\n+    templateUrl: './create-video-unit.component.html',\n+    styles: [],\n+})\n+export class CreateVideoUnitComponent implements OnInit {\n+    videoUnitToCreate: VideoUnit = new VideoUnit();\n+    isLoading: boolean;\n+    lectureId: number;\n+    courseId: number;\n+\n+    constructor(private activatedRoute: ActivatedRoute, private router: Router, private videoUnitService: VideoUnitService, private alertService: JhiAlertService) {}\n+\n+    ngOnInit(): void {\n+        this.activatedRoute.paramMap.subscribe((params) => {\n+            this.lectureId = Number(params.get('lectureId'));\n+            this.courseId = Number(params.get('courseId'));\n+        });\n+        this.videoUnitToCreate = new VideoUnit();\n+    }\n+\n+    createAttachmentUnit(formData: VideoUnitFormData) {", "originalCommit": "96de1905b3db1bb2c6b45e735c190febf9afe43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTk3OA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516339978", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                createAttachmentUnit(formData: VideoUnitFormData) {\n          \n          \n            \n                createVideoUnit(formData: VideoUnitFormData) {", "author": "krusche", "createdAt": "2020-11-02T23:47:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU5MTY4NA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516591684", "bodyText": "done in b2ad6f0", "author": "stefanwaldhauser", "createdAt": "2020-11-03T11:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMzOTg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MDM4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516340389", "bodyText": "use translations", "author": "krusche", "createdAt": "2020-11-02T23:48:41Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-video-unit/edit-video-unit.component.html", "diffHunk": "@@ -0,0 +1,9 @@\n+<div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\n+    <div class=\"spinner-border\" role=\"status\">\n+        <span class=\"sr-only\">Loading...</span>", "originalCommit": "96de1905b3db1bb2c6b45e735c190febf9afe43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU5MTMyNw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516591327", "bodyText": "Done in b9b15e4", "author": "stefanwaldhauser", "createdAt": "2020-11-03T11:15:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MDM4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MDYzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516340635", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <jhi-video-unit-form [isEditMode]=\"false\" (formSubmitted)=\"createAttachmentUnit($event)\"></jhi-video-unit-form>\n          \n          \n            \n                <jhi-video-unit-form [isEditMode]=\"false\" (formSubmitted)=\"createVideoUnit($event)\"></jhi-video-unit-form>", "author": "krusche", "createdAt": "2020-11-02T23:49:10Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/create-video-unit/create-video-unit.component.html", "diffHunk": "@@ -0,0 +1,9 @@\n+<div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\n+    <div class=\"spinner-border\" role=\"status\">\n+        <span class=\"sr-only\">Loading...</span>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"!isLoading\" class=\"container\">\n+    <jhi-video-unit-form [isEditMode]=\"false\" (formSubmitted)=\"createAttachmentUnit($event)\"></jhi-video-unit-form>", "originalCommit": "96de1905b3db1bb2c6b45e735c190febf9afe43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU5MDQ3NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516590475", "bodyText": "Done in b2ad6f0", "author": "stefanwaldhauser", "createdAt": "2020-11-03T11:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MDYzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MDc2OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516340769", "bodyText": "use translations", "author": "krusche", "createdAt": "2020-11-02T23:49:25Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/create-video-unit/create-video-unit.component.html", "diffHunk": "@@ -0,0 +1,9 @@\n+<div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\n+    <div class=\"spinner-border\" role=\"status\">\n+        <span class=\"sr-only\">Loading...</span>", "originalCommit": "96de1905b3db1bb2c6b45e735c190febf9afe43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4OTk3OA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516589978", "bodyText": "done in 3524206", "author": "stefanwaldhauser", "createdAt": "2020-11-03T11:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MDc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MjIxNA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516342214", "bodyText": "with this approach, we cannot support any other streaming platform. I don't think we should do that. I think it would be better to allow users to enter the whole URL and store it in the database instead.\nWe could still have a special handling for Youtube URLs here, but we should not have a vendor lock-in!", "author": "krusche", "createdAt": "2020-11-02T23:52:10Z", "path": "src/main/webapp/app/overview/course-lectures/video-unit/video-unit.component.ts", "diffHunk": "@@ -0,0 +1,29 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { SafeResourceUrl } from '@angular/platform-browser';\n+import { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\n+import { SafeResourceUrlPipe } from 'app/shared/pipes/safe-resource-url.pipe';\n+\n+@Component({\n+    selector: 'jhi-video-unit',\n+    templateUrl: './video-unit.component.html',\n+    styleUrls: ['../../course-exercises/course-exercise-row.scss'],\n+})\n+export class VideoUnitComponent implements OnInit {\n+    @Input()\n+    videoUnit: VideoUnit;\n+\n+    youTubeUrl: SafeResourceUrl;\n+\n+    isCollapsed = true;\n+\n+    constructor(private safeResourceUrlPipe: SafeResourceUrlPipe) {}\n+\n+    ngOnInit() {\n+        this.youTubeUrl = this.safeResourceUrlPipe.transform(`https://www.youtube.com/embed/${this.videoUnit.source}`);", "originalCommit": "96de1905b3db1bb2c6b45e735c190febf9afe43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4NDc4NA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516484784", "bodyText": "Ok I will switch it to storing the whole URL in the database instead of just the id.", "author": "stefanwaldhauser", "createdAt": "2020-11-03T08:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4Nzg1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516587853", "bodyText": "done in e92995f", "author": "stefanwaldhauser", "createdAt": "2020-11-03T11:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MjIxNA=="}], "type": "inlineReview"}, {"oid": "e92995fe232f9a7fd224e15317c68f6e7dad8f97", "url": "https://github.com/ls1intum/Artemis/commit/e92995fe232f9a7fd224e15317c68f6e7dad8f97", "message": "Made video provider agnostic", "committedDate": "2020-11-03T11:07:33Z", "type": "commit"}, {"oid": "ec2443951c3cd2f6859aae08ac280dc3059fb030", "url": "https://github.com/ls1intum/Artemis/commit/ec2443951c3cd2f6859aae08ac280dc3059fb030", "message": "Merge remote-tracking branch 'origin/feature/lecture-modules-learning-goals/video-unit' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-03T11:08:11Z", "type": "commit"}, {"oid": "352420623b362c85e24e7e3b6453872b5e60481a", "url": "https://github.com/ls1intum/Artemis/commit/352420623b362c85e24e7e3b6453872b5e60481a", "message": "Switched to Translation", "committedDate": "2020-11-03T11:12:39Z", "type": "commit"}, {"oid": "b2ad6f08755d798fe85237719dc8f1e8de51e93e", "url": "https://github.com/ls1intum/Artemis/commit/b2ad6f08755d798fe85237719dc8f1e8de51e93e", "message": "Fixed Wrong Method Name", "committedDate": "2020-11-03T11:13:40Z", "type": "commit"}, {"oid": "b9b15e406ad96fca7d157f730c6c695fe79062a3", "url": "https://github.com/ls1intum/Artemis/commit/b9b15e406ad96fca7d157f730c6c695fe79062a3", "message": "Switched to Translation", "committedDate": "2020-11-03T11:15:08Z", "type": "commit"}, {"oid": "04991310588665af8df5f4137519a26a4c695398", "url": "https://github.com/ls1intum/Artemis/commit/04991310588665af8df5f4137519a26a4c695398", "message": "Merge branch 'develop' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-03T11:20:16Z", "type": "commit"}, {"oid": "2781c727467c1856877faaeda668c20accef330c", "url": "https://github.com/ls1intum/Artemis/commit/2781c727467c1856877faaeda668c20accef330c", "message": "Adapted Path for GET of VideoUnit", "committedDate": "2020-11-03T11:31:11Z", "type": "commit"}, {"oid": "9d7f2cd06db2e196187a6dc14ea4986d9e218472", "url": "https://github.com/ls1intum/Artemis/commit/9d7f2cd06db2e196187a6dc14ea4986d9e218472", "message": "Adapted Path for GET of Attachment Units", "committedDate": "2020-11-03T11:36:35Z", "type": "commit"}, {"oid": "72bab48290d7f14c4d8fd31d641e52676521dc18", "url": "https://github.com/ls1intum/Artemis/commit/72bab48290d7f14c4d8fd31d641e52676521dc18", "message": "Adapted Path for Delete of Lecture Units", "committedDate": "2020-11-03T11:41:02Z", "type": "commit"}, {"oid": "2adb081fb23ccc7fa3c4e2190d26ee56e121c788", "url": "https://github.com/ls1intum/Artemis/commit/2adb081fb23ccc7fa3c4e2190d26ee56e121c788", "message": "Added video url parser", "committedDate": "2020-11-03T11:42:25Z", "type": "commit"}, {"oid": "88532e8085e086a98d8d069ca8cbceb60da020f9", "url": "https://github.com/ls1intum/Artemis/commit/88532e8085e086a98d8d069ca8cbceb60da020f9", "message": "Merge remote-tracking branch 'origin/feature/lecture-modules-learning-goals/video-unit' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-03T11:42:38Z", "type": "commit"}, {"oid": "bf66896c0e0aa4eb53e2d74bd96b793a22605c69", "url": "https://github.com/ls1intum/Artemis/commit/bf66896c0e0aa4eb53e2d74bd96b793a22605c69", "message": "Added missing javadoc", "committedDate": "2020-11-03T12:03:40Z", "type": "commit"}, {"oid": "bc8ee43f7cb5d5805a1658439c92b134e008c29d", "url": "https://github.com/ls1intum/Artemis/commit/bc8ee43f7cb5d5805a1658439c92b134e008c29d", "message": "Fixed ordering of parameters", "committedDate": "2020-11-03T14:22:47Z", "type": "commit"}, {"oid": "1f0984c721d6c9296d8349416a1e055ea1eb7037", "url": "https://github.com/ls1intum/Artemis/commit/1f0984c721d6c9296d8349416a1e055ea1eb7037", "message": "Removed Release Date from Video Unit Display", "committedDate": "2020-11-03T14:50:26Z", "type": "commit"}, {"oid": "e8508714521a4a5fd6487133b9ce1c8e898705e9", "url": "https://github.com/ls1intum/Artemis/commit/e8508714521a4a5fd6487133b9ce1c8e898705e9", "message": "Fixed Form Layout", "committedDate": "2020-11-03T14:58:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4MjA2MA==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516782060", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"js-video-url-parser\": \"^0.4.2\",\n          \n          \n            \n                    \"js-video-url-parser\": \"0.4.2\",", "author": "krusche", "createdAt": "2020-11-03T16:07:25Z", "path": "package.json", "diffHunk": "@@ -45,6 +45,7 @@\n         \"franc-min\": \"5.0.0\",\n         \"interactjs\": \"1.10.0\",\n         \"jquery\": \"3.5.1\",\n+        \"js-video-url-parser\": \"^0.4.2\",", "originalCommit": "e8508714521a4a5fd6487133b9ce1c8e898705e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4NTY1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2307#discussion_r516785653", "bodyText": "done in 7a3b0ff", "author": "stefanwaldhauser", "createdAt": "2020-11-03T16:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4MjA2MA=="}], "type": "inlineReview"}, {"oid": "7a3b0ff750a498c297ca6f45cf36cdd2ead77db9", "url": "https://github.com/ls1intum/Artemis/commit/7a3b0ff750a498c297ca6f45cf36cdd2ead77db9", "message": "Remved ^ in package.json", "committedDate": "2020-11-03T16:11:15Z", "type": "commit"}, {"oid": "5b76118a98a506661617a18f5cdc84e252a365e2", "url": "https://github.com/ls1intum/Artemis/commit/5b76118a98a506661617a18f5cdc84e252a365e2", "message": "Merge branch 'develop' into feature/lecture-modules-learning-goals/video-unit", "committedDate": "2020-11-03T16:12:22Z", "type": "commit"}]}