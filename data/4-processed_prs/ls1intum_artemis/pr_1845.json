{"pr_number": 1845, "pr_title": "Export metrics in prometheus format", "pr_createdAt": "2020-07-09T21:50:20Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1845", "timeline": [{"oid": "76b9a7cdbc1ef85645280f601d07756bf9369167", "url": "https://github.com/ls1intum/Artemis/commit/76b9a7cdbc1ef85645280f601d07756bf9369167", "message": "Add health indicator metrics, allow access to endpoint.", "committedDate": "2020-07-09T06:56:46Z", "type": "commit"}, {"oid": "b21f17eb348e6bbe1802284e4b0e7115ad36dbae", "url": "https://github.com/ls1intum/Artemis/commit/b21f17eb348e6bbe1802284e4b0e7115ad36dbae", "message": "Move Prometheus Configuration, only allow from specified IP.", "committedDate": "2020-07-09T21:38:45Z", "type": "commit"}, {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f", "url": "https://github.com/ls1intum/Artemis/commit/617836921f4a85b79dbc3cd5103dfe0e7448696f", "message": "Merge branch 'develop' into feature/prometheus-metrics-export", "committedDate": "2020-07-10T07:24:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5ODk0MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452798941", "bodyText": "Is this a typo? \"healthindicator\"", "author": "kloessst", "createdAt": "2020-07-10T11:59:23Z", "path": "src/main/java/de/tum/in/www1/artemis/config/MetricsBean.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.actuate.health.*;\n+import org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor;\n+import org.springframework.messaging.simp.user.SimpUserRegistry;\n+import org.springframework.stereotype.Component;\n+\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+\n+@Component\n+public class MetricsBean {\n+\n+    public MetricsBean(MeterRegistry meterRegistry, SimpUserRegistry simpUserRegistry, List<HealthContributor> healthContributors) {\n+        Gauge.builder(\"artemis.instance.websocket.users\", simpUserRegistry, SimpUserRegistry::getUserCount).strongReference(true)\n+                .description(\"Number of users connected to this Artemis instance\").register(meterRegistry);\n+\n+        for (HealthContributor healthContributor : healthContributors) {\n+            if (healthContributor instanceof HealthIndicator) {\n+                HealthIndicator healthIndicator = (HealthIndicator) healthContributor;\n+                Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")\n+                        .tag(\"healtindicator\", healthIndicator.getClass().getSimpleName().toLowerCase()).register(meterRegistry);", "originalCommit": "617836921f4a85b79dbc3cd5103dfe0e7448696f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4Njc3Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r453186772", "bodyText": "Good catch, I extracted it into a constant.", "author": "sleiss", "createdAt": "2020-07-11T11:43:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5ODk0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5OTgxNA==", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452799814", "bodyText": "Is this a typo? \"healthindicator\"", "author": "kloessst", "createdAt": "2020-07-10T12:01:21Z", "path": "src/main/java/de/tum/in/www1/artemis/config/MetricsBean.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.actuate.health.*;\n+import org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor;\n+import org.springframework.messaging.simp.user.SimpUserRegistry;\n+import org.springframework.stereotype.Component;\n+\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+\n+@Component\n+public class MetricsBean {\n+\n+    public MetricsBean(MeterRegistry meterRegistry, SimpUserRegistry simpUserRegistry, List<HealthContributor> healthContributors) {\n+        Gauge.builder(\"artemis.instance.websocket.users\", simpUserRegistry, SimpUserRegistry::getUserCount).strongReference(true)\n+                .description(\"Number of users connected to this Artemis instance\").register(meterRegistry);\n+\n+        for (HealthContributor healthContributor : healthContributors) {\n+            if (healthContributor instanceof HealthIndicator) {\n+                HealthIndicator healthIndicator = (HealthIndicator) healthContributor;\n+                Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")\n+                        .tag(\"healtindicator\", healthIndicator.getClass().getSimpleName().toLowerCase()).register(meterRegistry);\n+            }\n+            if (healthContributor instanceof DiscoveryCompositeHealthContributor) {\n+                DiscoveryCompositeHealthContributor discoveryCompositeHealthContributor = (DiscoveryCompositeHealthContributor) healthContributor;\n+                for (NamedContributor<HealthContributor> discoveryHealthContributor : discoveryCompositeHealthContributor) {\n+                    if (discoveryHealthContributor.getContributor() instanceof HealthIndicator) {\n+                        HealthIndicator healthIndicator = (HealthIndicator) discoveryHealthContributor.getContributor();\n+                        Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")\n+                                .tag(\"healtindicator\", discoveryHealthContributor.getName().toLowerCase()).register(meterRegistry);", "originalCommit": "617836921f4a85b79dbc3cd5103dfe0e7448696f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgwMDU1MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452800551", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Only enable the endpoint an ip-address is specified\n          \n          \n            \n                    // Only enable the endpoint if an ip-address is specified", "author": "kloessst", "createdAt": "2020-07-10T12:03:12Z", "path": "src/main/java/de/tum/in/www1/artemis/config/PrometheusAuthConfiguration.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+\n+@Configuration\n+@Order(1)\n+@ConditionalOnProperty(prefix = \"management\", name = \"metrics.export.prometheus.enabled\")\n+public class PrometheusAuthConfiguration extends WebSecurityConfigurerAdapter {\n+\n+    @Value(\"${spring.prometheus.monitoringIp}\")\n+    private String monitoringIpAddress;\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        // Only enable the endpoint an ip-address is specified", "originalCommit": "617836921f4a85b79dbc3cd5103dfe0e7448696f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE4Njg2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r453186863", "bodyText": "Thanks, I fixed the documentation.", "author": "sleiss", "createdAt": "2020-07-11T11:44:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgwMDU1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgwMTQzNg==", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452801436", "bodyText": "You could define constants for \"artemis.health\", \"Artemis Health Indicator\", \"healt(h)indicator\". But this could also hurt readability.", "author": "kloessst", "createdAt": "2020-07-10T12:05:08Z", "path": "src/main/java/de/tum/in/www1/artemis/config/MetricsBean.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.actuate.health.*;\n+import org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor;\n+import org.springframework.messaging.simp.user.SimpUserRegistry;\n+import org.springframework.stereotype.Component;\n+\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+\n+@Component\n+public class MetricsBean {\n+\n+    public MetricsBean(MeterRegistry meterRegistry, SimpUserRegistry simpUserRegistry, List<HealthContributor> healthContributors) {\n+        Gauge.builder(\"artemis.instance.websocket.users\", simpUserRegistry, SimpUserRegistry::getUserCount).strongReference(true)\n+                .description(\"Number of users connected to this Artemis instance\").register(meterRegistry);\n+\n+        for (HealthContributor healthContributor : healthContributors) {\n+            if (healthContributor instanceof HealthIndicator) {\n+                HealthIndicator healthIndicator = (HealthIndicator) healthContributor;\n+                Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")", "originalCommit": "617836921f4a85b79dbc3cd5103dfe0e7448696f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6503ab10001ab5a0223cd6f2d65ecd7b86c0d905", "url": "https://github.com/ls1intum/Artemis/commit/6503ab10001ab5a0223cd6f2d65ecd7b86c0d905", "message": "Apply feedback, add more documentation.", "committedDate": "2020-07-11T11:43:26Z", "type": "commit"}, {"oid": "61628e96639bb4d2623508cd3d1a62f27692ef00", "url": "https://github.com/ls1intum/Artemis/commit/61628e96639bb4d2623508cd3d1a62f27692ef00", "message": "Merge remote-tracking branch 'origin/feature/prometheus-metrics-export' into feature/prometheus-metrics-export", "committedDate": "2020-07-11T11:46:31Z", "type": "commit"}]}