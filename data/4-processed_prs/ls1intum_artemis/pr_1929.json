{"pr_number": 1929, "pr_title": "Exam QuizExercises no submissions in summary after reload for DnD and SA questions", "pr_createdAt": "2020-07-18T21:14:43Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1929", "timeline": [{"oid": "d24fc13c105a8cb1c334e9c08f20144546180df9", "url": "https://github.com/ls1intum/Artemis/commit/d24fc13c105a8cb1c334e9c08f20144546180df9", "message": "back reference student Answers\nload latest server version on submit and display in summary", "committedDate": "2020-07-18T21:07:23Z", "type": "commit"}, {"oid": "02be013392c0f95b00606142852b7cb91ffc5f75", "url": "https://github.com/ls1intum/Artemis/commit/02be013392c0f95b00606142852b7cb91ffc5f75", "message": "Merge branch 'develop' into bugfix/exam/quizzes-dnd-and-sa-no-submission-after-reload", "committedDate": "2020-07-18T21:49:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMTQ4NA==", "url": "https://github.com/ls1intum/Artemis/pull/1929#discussion_r456831484", "bodyText": "Is already checked via checkCourseAndExamAndStudentExamAccess()", "author": "sascha11110", "createdAt": "2020-07-18T21:52:28Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -138,7 +138,12 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n         if (workingTime <= 0) {\n             return badRequest();\n         }\n-        Exam exam = examRepository.findById(examId).get();\n+        Optional<Exam> optionalExam = examRepository.findById(examId);\n+        if (optionalExam.isEmpty()) {\n+            return notFound();\n+        }", "originalCommit": "02be013392c0f95b00606142852b7cb91ffc5f75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMTQ5NA==", "url": "https://github.com/ls1intum/Artemis/pull/1929#discussion_r456831494", "bodyText": "?", "author": "sascha11110", "createdAt": "2020-07-18T21:52:46Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -151,35 +156,35 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n     /**\n      * POST /courses/{courseId}/exams/{examId}/studentExams/submit : Submits the student exam\n      * Updates all submissions and marks student exam as submitted according to given student exam\n-     *\n+     * <p>", "originalCommit": "02be013392c0f95b00606142852b7cb91ffc5f75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMTUyNA==", "url": "https://github.com/ls1intum/Artemis/pull/1929#discussion_r456831524", "bodyText": "?", "author": "sascha11110", "createdAt": "2020-07-18T21:53:06Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -151,35 +156,35 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n     /**\n      * POST /courses/{courseId}/exams/{examId}/studentExams/submit : Submits the student exam\n      * Updates all submissions and marks student exam as submitted according to given student exam\n-     *\n+     * <p>\n      * NOTE: the studentExam has to be sent with all exercises, participations and submissions\n      *\n-     * @param courseId      the course to which the student exams belong to\n-     * @param examId        the exam to which the student exams belong to\n-     * @param studentExam   the student exam with exercises, participations and submissions\n-     * @return              empty response with status code:\n-     *                          200 if successful\n-     *                          400 if student exam was in an illegal state\n+     * @param courseId    the course to which the student exams belong to\n+     * @param examId      the exam to which the student exams belong to\n+     * @param studentExam the student exam with exercises, participations and submissions\n+     * @return empty response with status code:\n+     * 200 if successful\n+     * 400 if student exam was in an illegal state\n      */\n     @PostMapping(\"/courses/{courseId}/exams/{examId}/studentExams/submit\")\n     @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n-    public ResponseEntity<Void> submitStudentExam(@PathVariable Long courseId, @PathVariable Long examId, @RequestBody StudentExam studentExam) {\n+    public ResponseEntity<StudentExam> submitStudentExam(@PathVariable Long courseId, @PathVariable Long examId, @RequestBody StudentExam studentExam) {\n         log.debug(\"REST request to mark the studentExam as submitted : {}\", studentExam.getId());\n         User currentUser = userService.getUserWithGroupsAndAuthorities();\n-        Optional<ResponseEntity<Void>> accessFailure = this.studentExamAccessService.checkStudentExamAccess(courseId, examId, studentExam.getId(), currentUser);\n+        Optional<ResponseEntity<StudentExam>> accessFailure = this.studentExamAccessService.checkStudentExamAccess(courseId, examId, studentExam.getId(), currentUser);\n         return accessFailure.orElseGet(() -> studentExamService.submitStudentExam(studentExam, currentUser));\n     }\n \n     /**\n      * GET /courses/{courseId}/exams/{examId}/studentExams/conduction : Find a student exam for the user.\n      * This will be used for the actual conduction of the exam. The student exam will be returned with the exercises\n      * and with the student participation and with the submissions.\n-     *\n+     * <p>", "originalCommit": "02be013392c0f95b00606142852b7cb91ffc5f75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e4eeb8053d31d419ea9d569f1f0c089642f4fd43", "url": "https://github.com/ls1intum/Artemis/commit/e4eeb8053d31d419ea9d569f1f0c089642f4fd43", "message": "revert change because it is already checked in checkCourseAndExamAndStudentExamAccess()", "committedDate": "2020-07-18T22:00:49Z", "type": "commit"}, {"oid": "6fd1a3a27d75d57d22bf9c081eda3020b00f6b29", "url": "https://github.com/ls1intum/Artemis/commit/6fd1a3a27d75d57d22bf9c081eda3020b00f6b29", "message": "remove strang comments", "committedDate": "2020-07-18T22:03:23Z", "type": "commit"}]}