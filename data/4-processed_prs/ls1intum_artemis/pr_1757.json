{"pr_number": 1757, "pr_title": "Calculate the current server time to be used in a better way to prevent problems", "pr_createdAt": "2020-06-29T21:08:03Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1757", "timeline": [{"oid": "59bad063920320d3ad02a250705ffa6437967ad5", "url": "https://github.com/ls1intum/Artemis/commit/59bad063920320d3ad02a250705ffa6437967ad5", "message": "calculate server date with absolut offset based on last sync", "committedDate": "2020-06-29T14:58:53Z", "type": "commit"}, {"oid": "3e53de4f2e4bd1c5ca6cf3e37ef82318dbc6bcdc", "url": "https://github.com/ls1intum/Artemis/commit/3e53de4f2e4bd1c5ca6cf3e37ef82318dbc6bcdc", "message": "add TODOs", "committedDate": "2020-06-29T15:04:50Z", "type": "commit"}, {"oid": "a0a5fabcf1bbd343ced2649991a805ff97af8d7a", "url": "https://github.com/ls1intum/Artemis/commit/a0a5fabcf1bbd343ced2649991a805ff97af8d7a", "message": "calculate average of offsets", "committedDate": "2020-06-29T16:28:27Z", "type": "commit"}, {"oid": "cdfa86372187aa39806bcd5bfe4f63cd825e40d6", "url": "https://github.com/ls1intum/Artemis/commit/cdfa86372187aa39806bcd5bfe4f63cd825e40d6", "message": "remove wrong calculation", "committedDate": "2020-06-29T18:54:03Z", "type": "commit"}, {"oid": "4e381b18f252c56f939eaf7e148e5033a938ea4b", "url": "https://github.com/ls1intum/Artemis/commit/4e381b18f252c56f939eaf7e148e5033a938ea4b", "message": "use a new time call to get a better precision, invoke it at most 5 times per minute", "committedDate": "2020-06-29T20:59:19Z", "type": "commit"}, {"oid": "15d1ff40a426ed03e63ea1d05cebbea6a419d953", "url": "https://github.com/ls1intum/Artemis/commit/15d1ff40a426ed03e63ea1d05cebbea6a419d953", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into bugfix/calculate-serverdate-with-offset\n\n# Conflicts:\n#\tsrc/main/webapp/app/shared/server-date.service.ts", "committedDate": "2020-06-30T08:04:26Z", "type": "commit"}, {"oid": "930f64f3a9d07cb27ef87c74e64e8151706b002d", "url": "https://github.com/ls1intum/Artemis/commit/930f64f3a9d07cb27ef87c74e64e8151706b002d", "message": "fix javadoc", "committedDate": "2020-06-30T08:34:58Z", "type": "commit"}, {"oid": "907b65c38796ac5cbf0658fb24557b0d515d27f8", "url": "https://github.com/ls1intum/Artemis/commit/907b65c38796ac5cbf0658fb24557b0d515d27f8", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into bugfix/calculate-serverdate-with-offset", "committedDate": "2020-07-01T08:22:17Z", "type": "commit"}, {"oid": "59706dee4d6d22e27f863d8f647cbf6e449941d1", "url": "https://github.com/ls1intum/Artemis/commit/59706dee4d6d22e27f863d8f647cbf6e449941d1", "message": "add explanations and remove unused", "committedDate": "2020-07-01T09:21:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0Njc0OA==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r448246748", "bodyText": "Is anyone working on this? Otherwise, I might give this a shot! This can be a significant factor and make the accuracy worse than it actually is!", "author": "jpbernius", "createdAt": "2020-07-01T09:45:30Z", "path": "src/main/webapp/app/shared/server-date.service.ts", "diffHunk": "@@ -24,11 +28,12 @@ export class ArtemisServerDateService {\n                 }\n             });\n         } else {\n-            // definitly sync if we do not have 5 elements yet\n+            // definitely sync if we do not have 5 elements yet\n             shouldSync = true;\n         }\n         // TODO: one additional optimization could be to take the duration for request -> response into account here", "originalCommit": "59706dee4d6d22e27f863d8f647cbf6e449941d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0OTI4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r448249289", "bodyText": "@jpbernius I'm not working on this TODO right now and I guess nobody else is working on this in general. So feel free to give this a shot! \ud83d\ude80", "author": "filip-gregurevic", "createdAt": "2020-07-01T09:49:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0Njc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2MTA3NA==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r448261074", "bodyText": "Please talk to @stefanwaldhauser: he wrote a seminar paper about how this works best. It can become quite complex though. He told me you, that you also need to send the client time to the server and you need at least 3 calls.\nWe actually designed a new REST endpoint /time, which is without access control and database access, so it should be super fast (even with a bad internet connection it should not take longer than a few ms, you can test this with the Edge profile in Chrome), so I am not sure if it makes sense to implement additional logic now. I would prefer that we do this in a follow up PR.\nWe should first test that the implementation of this PR is correct (especially the logic with the offset) and that a wrong time zone / wrong local clock at the start of the exam still shows the correct working time. Then we should merge this PR and if we find time, we can improve this in a follow up.", "author": "krusche", "createdAt": "2020-07-01T10:11:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0Njc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMwNDE2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r448304163", "bodyText": "OK, so we keep it as is for now. If we need additional logic, we can consider integrating the timesync library.", "author": "jpbernius", "createdAt": "2020-07-01T11:39:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0Njc0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk5ODQ5OA==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r448998498", "bodyText": "Maybe make this more explicit? This could lead to unwanted behaviour if there are any other requests with \"time\" in the url path right?", "author": "schultek", "createdAt": "2020-07-02T13:23:43Z", "path": "src/main/webapp/app/core/interceptor/artemis-version.interceptor.ts", "diffHunk": "@@ -24,9 +22,9 @@ export class ArtemisVersionInterceptor implements HttpInterceptor {\n                     if (VERSION && serverVersion && VERSION !== serverVersion) {\n                         this.showAlert.next();\n                     }\n-                    const serverDate = response.headers.get(ARTEMIS_SERVER_DATE_HEADER);\n-                    if (serverDate) {\n-                        this.serverDate.next(serverDate);\n+                    // only invoke the time call if the call was not already the time call to prevent recursion here\n+                    if (!req.url.includes('time')) {", "originalCommit": "59706dee4d6d22e27f863d8f647cbf6e449941d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNjIzOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r449036239", "bodyText": "Well for now there is only this call including 'time' but it should be changed to a more specific approach at some point", "author": "filip-gregurevic", "createdAt": "2020-07-02T14:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk5ODQ5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAwMDk0NA==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r449000944", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.recentClientDates.forEach((recentClientDate) => {\n          \n          \n            \n                            // only if all recent client dates (i.e. recent syncs are older than 60s)\n          \n          \n            \n                            if (now.diff(recentClientDate, 's') > 60) {\n          \n          \n            \n                                shouldSync = true;\n          \n          \n            \n                            }\n          \n          \n            \n                        });\n          \n          \n            \n                         // only if some recent client dates (i.e. recent syncs) are older than 60s\n          \n          \n            \n                        shouldSync = this.recentClientDates.some((recentClientDate) => \n          \n          \n            \n                            now.diff(recentClientDate, 's') > 60);", "author": "schultek", "createdAt": "2020-07-02T13:27:37Z", "path": "src/main/webapp/app/shared/server-date.service.ts", "diffHunk": "@@ -1,36 +1,89 @@\n import { Injectable } from '@angular/core';\n-import { interval } from 'rxjs/observable/interval';\n import * as moment from 'moment';\n+import { HttpClient } from '@angular/common/http';\n+import { SERVER_API_URL } from 'app/app.constants';\n \n @Injectable({ providedIn: 'root' })\n export class ArtemisServerDateService {\n-    // date from the server saved in unix for easier calculation\n-    private serverDate: number;\n-    // interval firing every second to increment the server date\n-    private interval = interval(1000);\n+    private resourceUrl = SERVER_API_URL + 'time';\n \n-    constructor() {\n-        this.interval.subscribe(() => {\n-            // increment the server date by a second every second\n-            this.serverDate++;\n-        });\n+    // offsets of the last synchronizations in ms (max. 5)\n+    private recentOffsets = new Array<number>();\n+    // client (!) dates of the last synchronizations (max. 5)\n+    private recentClientDates = new Array<moment.Moment>();\n+\n+    constructor(private http: HttpClient) {}\n+\n+    /**\n+     * get a new server date if necessary\n+     */\n+    updateTime(): void {\n+        let shouldSync = false;\n+        const now = moment(new Date());\n+        if (this.recentClientDates.length > 4) {\n+            this.recentClientDates.forEach((recentClientDate) => {\n+                // only if all recent client dates (i.e. recent syncs are older than 60s)\n+                if (now.diff(recentClientDate, 's') > 60) {\n+                    shouldSync = true;\n+                }\n+            });", "originalCommit": "59706dee4d6d22e27f863d8f647cbf6e449941d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAwMzk0OA==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r449003948", "bodyText": "Array.sort in javascript is an in-place operation, which means this.recentOffsets would be modified too - also by the shift and pop operation - because offsetsSorted is just a reference, not a copy.", "author": "schultek", "createdAt": "2020-07-02T13:32:08Z", "path": "src/main/webapp/app/shared/server-date.service.ts", "diffHunk": "@@ -1,36 +1,89 @@\n import { Injectable } from '@angular/core';\n-import { interval } from 'rxjs/observable/interval';\n import * as moment from 'moment';\n+import { HttpClient } from '@angular/common/http';\n+import { SERVER_API_URL } from 'app/app.constants';\n \n @Injectable({ providedIn: 'root' })\n export class ArtemisServerDateService {\n-    // date from the server saved in unix for easier calculation\n-    private serverDate: number;\n-    // interval firing every second to increment the server date\n-    private interval = interval(1000);\n+    private resourceUrl = SERVER_API_URL + 'time';\n \n-    constructor() {\n-        this.interval.subscribe(() => {\n-            // increment the server date by a second every second\n-            this.serverDate++;\n-        });\n+    // offsets of the last synchronizations in ms (max. 5)\n+    private recentOffsets = new Array<number>();\n+    // client (!) dates of the last synchronizations (max. 5)\n+    private recentClientDates = new Array<moment.Moment>();\n+\n+    constructor(private http: HttpClient) {}\n+\n+    /**\n+     * get a new server date if necessary\n+     */\n+    updateTime(): void {\n+        let shouldSync = false;\n+        const now = moment(new Date());\n+        if (this.recentClientDates.length > 4) {\n+            this.recentClientDates.forEach((recentClientDate) => {\n+                // only if all recent client dates (i.e. recent syncs are older than 60s)\n+                if (now.diff(recentClientDate, 's') > 60) {\n+                    shouldSync = true;\n+                }\n+            });\n+        } else {\n+            // definitely sync if we do not have 5 elements yet\n+            shouldSync = true;\n+        }\n+        // TODO: one additional optimization could be to take the duration for request -> response into account here\n+        if (shouldSync) {\n+            // get new server date\n+            this.http.get<string>(this.resourceUrl).subscribe((serverDate) => {\n+                this.setServerDate(serverDate);\n+            });\n+        }\n     }\n \n     /**\n-     * sets the current server date as unix\n+     * adds the latest offset\n      *\n      * @param {string} date\n      */\n     setServerDate(date: string): void {\n-        this.serverDate = moment(date).unix();\n+        const serverDate = moment(date);\n+        const clientDate = moment();\n+        // save the most recent client date\n+        this.recentClientDates.push(clientDate);\n+        // calculate offset\n+        const offset = serverDate.diff(clientDate, 'ms');\n+        // save the most recent offset\n+        this.recentOffsets.push(offset);\n+        // remove oldest offset and client date if more than 5\n+        if (this.recentOffsets.length > 5) {\n+            this.recentOffsets.shift();\n+            this.recentClientDates.shift();\n+        }\n+        // This would be faster and more reliable than using an interceptor with arbitrary REST calls\n     }\n \n     /**\n      * returns the calculated current server date as moment\n      */\n-    now(): any {\n-        // return moment.unix(this.serverDate);\n-        // NOTE: quick fix which basically deactivates the calculation here until a better approach is implemented and tested\n-        return moment();\n+    now(): moment.Moment {\n+        const clientDate = moment();\n+        // return the client date if there are no offsets (e.g. when offline or before any api call was made)\n+        if (this.recentOffsets.length === 0) {\n+            return clientDate;\n+        }\n+        // take first offset if there are less than 5\n+        let offset = this.recentOffsets[0];\n+        // remove noise from offset if there are 5\n+        if (this.recentOffsets.length === 5) {\n+            const offsetsSorted = this.recentOffsets.sort((a, b) => b - a);\n+            // remove lowest\n+            offsetsSorted.shift();\n+            // remove highest\n+            offsetsSorted.pop();", "originalCommit": "59706dee4d6d22e27f863d8f647cbf6e449941d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNTcxNA==", "url": "https://github.com/ls1intum/Artemis/pull/1757#discussion_r449035714", "bodyText": "I changed it to work on a copy now", "author": "filip-gregurevic", "createdAt": "2020-07-02T14:18:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAwMzk0OA=="}], "type": "inlineReview"}, {"oid": "cd0d5a4e09500c4034ba1d4a538f1f5a396e018d", "url": "https://github.com/ls1intum/Artemis/commit/cd0d5a4e09500c4034ba1d4a538f1f5a396e018d", "message": "Update src/main/webapp/app/shared/server-date.service.ts\n\nCo-authored-by: Kilian Schulte <schultek@in.tum.de>", "committedDate": "2020-07-02T14:14:36Z", "type": "commit"}, {"oid": "835c87ebdc896472ba7972a1e3f52bd022c97fc7", "url": "https://github.com/ls1intum/Artemis/commit/835c87ebdc896472ba7972a1e3f52bd022c97fc7", "message": "work on copy", "committedDate": "2020-07-02T14:18:01Z", "type": "commit"}, {"oid": "68c4b518618a3007a20093be0d3b3162cc04e8b9", "url": "https://github.com/ls1intum/Artemis/commit/68c4b518618a3007a20093be0d3b3162cc04e8b9", "message": "Merge branch 'develop' into bugfix/calculate-serverdate-with-offset", "committedDate": "2020-07-02T15:26:17Z", "type": "commit"}, {"oid": "8a937295d71e408edefdbf697896e9a398afd82e", "url": "https://github.com/ls1intum/Artemis/commit/8a937295d71e408edefdbf697896e9a398afd82e", "message": "Merge branch 'develop' into bugfix/calculate-serverdate-with-offset", "committedDate": "2020-07-02T21:04:20Z", "type": "commit"}, {"oid": "9a2819389d2b8505432dc5fea4e672e6fa88d18b", "url": "https://github.com/ls1intum/Artemis/commit/9a2819389d2b8505432dc5fea4e672e6fa88d18b", "message": "Merge branch 'develop' into bugfix/calculate-serverdate-with-offset", "committedDate": "2020-07-04T23:29:45Z", "type": "commit"}, {"oid": "03d114f34c9555ba5bfd7811c5601a88240ce295", "url": "https://github.com/ls1intum/Artemis/commit/03d114f34c9555ba5bfd7811c5601a88240ce295", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into bugfix/calculate-serverdate-with-offset", "committedDate": "2020-07-08T08:12:54Z", "type": "commit"}, {"oid": "25d12fd030c97a8dc0362915906572f7f4f42b0f", "url": "https://github.com/ls1intum/Artemis/commit/25d12fd030c97a8dc0362915906572f7f4f42b0f", "message": "use server date in overview", "committedDate": "2020-07-08T08:25:47Z", "type": "commit"}]}