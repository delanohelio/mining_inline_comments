{"pr_number": 2461, "pr_title": "[Bugfix] Start Assessment from Exercise Scores View", "pr_createdAt": "2020-11-24T17:02:21Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2461", "timeline": [{"oid": "fc7f112d39f044c2f3cb1dc365ef52ab3ce024c1", "url": "https://github.com/ls1intum/Artemis/commit/fc7f112d39f044c2f3cb1dc365ef52ab3ce024c1", "message": "rename method for fileUpload", "committedDate": "2020-11-24T16:55:33Z", "type": "commit"}, {"oid": "93edf6ff6a50480e0b5ad85391043ed4876c935b", "url": "https://github.com/ls1intum/Artemis/commit/93edf6ff6a50480e0b5ad85391043ed4876c935b", "message": "throw error if no manual result was found", "committedDate": "2020-11-24T16:55:54Z", "type": "commit"}, {"oid": "cfcdbdb30d499350b47d8a269e2f87729dc5bba2", "url": "https://github.com/ls1intum/Artemis/commit/cfcdbdb30d499350b47d8a269e2f87729dc5bba2", "message": "implement new endpoint to lock a specific submission", "committedDate": "2020-11-24T16:58:15Z", "type": "commit"}, {"oid": "fd4f243ed59273bfa11d5cf6ddda5dcb4022a092", "url": "https://github.com/ls1intum/Artemis/commit/fd4f243ed59273bfa11d5cf6ddda5dcb4022a092", "message": "reach endpoint on client", "committedDate": "2020-11-24T17:00:07Z", "type": "commit"}, {"oid": "b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29", "url": "https://github.com/ls1intum/Artemis/commit/b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29", "message": "enable back assessment button in scores view", "committedDate": "2020-11-24T17:00:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1NjE4Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529756183", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * GET /programming-submissions/:id : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment\n          \n          \n            \n                 * GET /programming-submissions/:participationId/lock : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment", "author": "fde312", "createdAt": "2020-11-24T17:33:37Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -347,6 +348,43 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n         return ResponseEntity.ok().body(programmingSubmissions);\n     }\n \n+    // TODO: Make this call use submissionId instead of participationId (after implementation of one to many relation ship of submission and results)\n+    /**\n+     * GET /programming-submissions/:id : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment", "originalCommit": "b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1ODgxOA==", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529758818", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Result latestAutomaticResult = participation.getResults().stream().filter(result -> result.getAssessmentType() == AssessmentType.AUTOMATIC)\n          \n          \n            \n                                .sorted(Comparator.comparing(Result::getId).reversed()).iterator().next();\n          \n          \n            \n                        Result latestAutomaticResult = participation.findLatestResult();", "author": "fde312", "createdAt": "2020-11-24T17:37:46Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -347,6 +348,43 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n         return ResponseEntity.ok().body(programmingSubmissions);\n     }\n \n+    // TODO: Make this call use submissionId instead of participationId (after implementation of one to many relation ship of submission and results)\n+    /**\n+     * GET /programming-submissions/:id : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment\n+     *\n+     * @param participationId the id of the participation to retrieve\n+     * @return the ResponseEntity with status 200 (OK) and with body the programmingSubmissions participation\n+     */\n+    @GetMapping(\"/programming-submissions/{participationId}/lock\")\n+    @PreAuthorize(\"hasAnyRole('TA','INSTRUCTOR','ADMIN')\")\n+    public ResponseEntity<Participation> lockAndGetProgrammingSubmissionParticipation(@PathVariable Long participationId) {\n+        log.debug(\"REST request to get ProgrammingSubmission of Participation with id: {}\", participationId);\n+        final var participation = participationService.findOneWithEagerResultsAndCourse(participationId);\n+        final var exercise = participation.getExercise();\n+        final User user = userService.getUserWithGroupsAndAuthorities();\n+\n+        if (!authCheckService.isAtLeastTeachingAssistantForExercise(exercise, user)) {\n+            return forbidden();\n+        }\n+\n+        Optional<Result> manualResult = participation.getResults().stream().filter(Result::isManualResult).findFirst();\n+\n+        if (manualResult.isPresent()) {\n+            return ResponseEntity.ok(participation);\n+        }\n+        else {\n+            // Check lock limit\n+            programmingSubmissionService.checkSubmissionLockLimit(exercise.getCourseViaExerciseGroupOrCourseMember().getId());\n+\n+            // As no manual result is present we need to lock the submission for assessment\n+            Result latestAutomaticResult = participation.getResults().stream().filter(result -> result.getAssessmentType() == AssessmentType.AUTOMATIC)\n+                    .sorted(Comparator.comparing(Result::getId).reversed()).iterator().next();", "originalCommit": "b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "13f59e9747d900f74a51f2a59761f359580c6584", "url": "https://github.com/ls1intum/Artemis/commit/13f59e9747d900f74a51f2a59761f359580c6584", "message": "Update programming-assessment.route.ts", "committedDate": "2020-11-24T17:40:48Z", "type": "commit"}, {"oid": "fb711600077ad8875d2dbec8f96fcb308db65dbf", "url": "https://github.com/ls1intum/Artemis/commit/fb711600077ad8875d2dbec8f96fcb308db65dbf", "message": "Apply suggestions from code review", "committedDate": "2020-11-24T17:42:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1MzU3MA==", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529753570", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param submissionId       the id of the programming submission\n          \n          \n            \n                 * @param submissionId the id of the programming submission", "author": "kloessst", "createdAt": "2020-11-24T17:29:36Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -636,6 +636,21 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n \n+    /**\n+     * Get the programming submission with the given ID from the database and lock the submission to prevent other tutors from receiving and assessing it.\n+     *\n+     * @param submissionId       the id of the programming submission", "originalCommit": "b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c7588b0efe4cdb8ef5df27f2d894aa230e349cfc", "url": "https://github.com/ls1intum/Artemis/commit/c7588b0efe4cdb8ef5df27f2d894aa230e349cfc", "message": "Apply suggestions from code review\n\nCo-authored-by: Stefan Kl\u00f6ss-Schuster <16407766+kloessst@users.noreply.github.com>", "committedDate": "2020-11-24T17:44:32Z", "type": "commit"}, {"oid": "465eb9305cb7cc24f1a402492a6b337f20c93c2d", "url": "https://github.com/ls1intum/Artemis/commit/465eb9305cb7cc24f1a402492a6b337f20c93c2d", "message": "run spotless and removed not used code and added check if user is instructor", "committedDate": "2020-11-24T18:24:58Z", "type": "commit"}, {"oid": "83521209a640d21b1b6894d3710919e01dc2c418", "url": "https://github.com/ls1intum/Artemis/commit/83521209a640d21b1b6894d3710919e01dc2c418", "message": "Merge branch 'develop' into bugfix/programming-exercises/allow-assessments-via-score-view", "committedDate": "2020-11-24T19:32:24Z", "type": "commit"}, {"oid": "cead85cada0ec00d8b50e267cec0b3e359d2331f", "url": "https://github.com/ls1intum/Artemis/commit/cead85cada0ec00d8b50e267cec0b3e359d2331f", "message": "add tests", "committedDate": "2020-11-24T20:11:38Z", "type": "commit"}, {"oid": "4704c200d8c236975be62367615704612ceead29", "url": "https://github.com/ls1intum/Artemis/commit/4704c200d8c236975be62367615704612ceead29", "message": "Merge branch 'bugfix/programming-exercises/allow-assessments-via-score-view' of https://github.com/ls1intum/Artemis into bugfix/programming-exercises/allow-assessments-via-score-view", "committedDate": "2020-11-24T20:11:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDgxOA==", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529864818", "bodyText": "We also need to disable that for purely automatic programming exercise.", "author": "MaisiKoleni", "createdAt": "2020-11-24T20:41:32Z", "path": "src/main/webapp/app/exercises/shared/exercise-scores/exercise-scores.component.html", "diffHunk": "@@ -235,15 +241,15 @@ <h2>\n                             Online editor\n                         </button>\n                         <button\n-                            *ngIf=\"exercise.course && isManualResult(value)\"\n+                            *ngIf=\"exercise.course\"\n                             [routerLink]=\"['/course-management', exercise.course?.id, 'programming-exercises', exercise.id, 'code-editor', value.participation.id, 'assessment']\"\n                             class=\"btn btn-primary btn-sm mr-1\"\n                         >\n                             <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>\n                             {{ 'artemisApp.programmingSubmission.view' | translate }}\n                         </button>\n                         <button\n-                            *ngIf=\"exercise.exerciseGroup && isManualResult(value)\"\n+                            *ngIf=\"exercise.exerciseGroup\"", "originalCommit": "4704c200d8c236975be62367615704612ceead29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3NDY3Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529874677", "bodyText": "Fixed in 70289fe", "author": "fde312", "createdAt": "2020-11-24T21:00:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDgxOA=="}], "type": "inlineReview"}, {"oid": "70289fe86efa6bcfc40ee6ae26bf9502c0ca7ef4", "url": "https://github.com/ls1intum/Artemis/commit/70289fe86efa6bcfc40ee6ae26bf9502c0ca7ef4", "message": "try to fix issue with when no manual result is enabled", "committedDate": "2020-11-24T20:52:09Z", "type": "commit"}]}