{"pr_number": 1433, "pr_title": "Feature/tutor course dashboard/show locks", "pr_createdAt": "2020-05-07T23:01:51Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1433", "timeline": [{"oid": "d454ff43af0e7aee409689dee8f9da33257d191c", "url": "https://github.com/ls1intum/Artemis/commit/d454ff43af0e7aee409689dee8f9da33257d191c", "message": "Adds possibility to show number of locks in dashboard", "committedDate": "2020-05-07T22:34:30Z", "type": "commit"}, {"oid": "49a6f9d96f27d2d3049290510cf9db6bfe652813", "url": "https://github.com/ls1intum/Artemis/commit/49a6f9d96f27d2d3049290510cf9db6bfe652813", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-07T22:35:56Z", "type": "commit"}, {"oid": "6434ccaa5e1b92cf566186c6c82a9a2c0f5e4499", "url": "https://github.com/ls1intum/Artemis/commit/6434ccaa5e1b92cf566186c6c82a9a2c0f5e4499", "message": "Remove unused imports", "committedDate": "2020-05-08T08:40:02Z", "type": "commit"}, {"oid": "a705a19221302d434376aa55294e7e9d31d663e1", "url": "https://github.com/ls1intum/Artemis/commit/a705a19221302d434376aa55294e7e9d31d663e1", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-10T08:04:49Z", "type": "commit"}, {"oid": "7b39d97239f09f8d995dd2c25f0bd82785dab296", "url": "https://github.com/ls1intum/Artemis/commit/7b39d97239f09f8d995dd2c25f0bd82785dab296", "message": "Few minor fixes", "committedDate": "2020-05-10T12:40:32Z", "type": "commit"}, {"oid": "c0d6735d3ac1efafb5c509c771a2d36c9daa65cb", "url": "https://github.com/ls1intum/Artemis/commit/c0d6735d3ac1efafb5c509c771a2d36c9daa65cb", "message": "Fix unused expression error", "committedDate": "2020-05-10T15:36:36Z", "type": "commit"}, {"oid": "6606f3d5074f4e3feed3139877c07a92851cb195", "url": "https://github.com/ls1intum/Artemis/commit/6606f3d5074f4e3feed3139877c07a92851cb195", "message": "Fix part two", "committedDate": "2020-05-10T15:51:04Z", "type": "commit"}, {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "url": "https://github.com/ls1intum/Artemis/commit/6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "message": "Add missing button for instructor", "committedDate": "2020-05-10T18:00:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDI2Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704266", "bodyText": "I do not think we need a new Module for this. Please check our module structure (e.g. #1248) and decide if this fits in an existing module.", "author": "jpbernius", "createdAt": "2020-05-10T21:40:52Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.module.ts", "diffHunk": "@@ -0,0 +1,17 @@\n+import { NgModule } from '@angular/core';\n+import { AssessmentLocksComponent } from './assessment-locks.component';\n+import { MomentModule } from 'ngx-moment';\n+import { ClipboardModule } from 'ngx-clipboard';\n+import { RouterModule } from '@angular/router';\n+import { assessmentLocksRoute } from 'app/assessment/assessment-locks/assessment-locks.route';\n+import { SortByModule } from 'app/shared/pipes/sort-by.module';\n+import { ArtemisSharedModule } from 'app/shared/shared.module';\n+\n+const ENTITY_STATES = [...assessmentLocksRoute];\n+\n+@NgModule({\n+    imports: [ArtemisSharedModule, MomentModule, ClipboardModule, RouterModule.forChild(ENTITY_STATES), SortByModule],\n+    declarations: [AssessmentLocksComponent],\n+    exports: [AssessmentLocksComponent],\n+})\n+export class ArtemisAssessmentLocksModule {}", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NjY1MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423146651", "bodyText": "I put it in the assessment-shared.module.ts.", "author": "balazs-czopf", "createdAt": "2020-05-11T16:00:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDI2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704636", "bodyText": "I do not like this change. A Submission does not have an exercise id. Adding this here may lead to many problems in the future that would lead to a compile error now.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public exerciseId?: number;", "author": "jpbernius", "createdAt": "2020-05-10T21:44:18Z", "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -34,6 +34,8 @@ export abstract class Submission implements BaseEntity {\n \n     public language: Language | null;\n \n+    public exerciseId?: number;\n+", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4MzE2Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422983162", "bodyText": "Is there another way to conclude the corresponding exercise from a submission without having to do a lookup on which exercise contains the given submission?", "author": "balazs-czopf", "createdAt": "2020-05-11T11:48:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwNzg3Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423007876", "bodyText": "submission.participation.exercise", "author": "jpbernius", "createdAt": "2020-05-11T12:37:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxODAxNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423018015", "bodyText": "awesome, thanks :) removed this change", "author": "balazs-czopf", "createdAt": "2020-05-11T12:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDc4MA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704780", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                readonly TEXT = ExerciseType.TEXT;\n          \n          \n            \n                readonly MODELING = ExerciseType.MODELING;\n          \n          \n            \n                readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;\n          \n          \n            \n                readonly ExerciseType = ExerciseType;", "author": "jpbernius", "createdAt": "2020-05-10T21:45:48Z", "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.ts", "diffHunk": "@@ -47,6 +48,10 @@ export class TutorCourseDashboardComponent implements OnInit, AfterViewInit {\n \n     exerciseForGuidedTour: Exercise | null;\n \n+    readonly TEXT = ExerciseType.TEXT;\n+    readonly MODELING = ExerciseType.MODELING;\n+    readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4ODE5OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422988199", "bodyText": "Removed as the changes in the corresponding html file made it redundant.", "author": "balazs-czopf", "createdAt": "2020-05-11T11:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDk2NA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704964", "bodyText": "Could this work here?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    <button\n          \n          \n            \n                                        *ngIf=\"exercise.type === MODELING\"\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, 'modeling-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>\n          \n          \n            \n                                    <button\n          \n          \n            \n                                        *ngIf=\"exercise.type === TEXT\"\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, 'text-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>\n          \n          \n            \n                                    <button\n          \n          \n            \n                                        *ngIf=\"exercise.type === FILE_UPLOAD\"\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, 'file-upload-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>\n          \n          \n            \n                                    <button\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, exercise.type + '-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>", "author": "jpbernius", "createdAt": "2020-05-10T21:47:51Z", "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.html", "diffHunk": "@@ -131,6 +140,27 @@ <h2>\n                         >\n                             <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.exerciseDashboard\">Exercise dashboard</span>\n                         </button>\n+                        <button\n+                            *ngIf=\"exercise.type === MODELING\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'modeling-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>\n+                        <button\n+                            *ngIf=\"exercise.type === TEXT\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'text-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>\n+                        <button\n+                            *ngIf=\"exercise.type === FILE_UPLOAD\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'file-upload-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwODc1MA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423008750", "bodyText": "Yes, works as expected, thanks :)", "author": "balazs-czopf", "createdAt": "2020-05-11T12:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTEwNw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705107", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                readonly TEXT = ExerciseType.TEXT;\n          \n          \n            \n                readonly MODELING = ExerciseType.MODELING;\n          \n          \n            \n                readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;\n          \n          \n            \n                readonly ExerciseType = ExerciseType;", "author": "jpbernius", "createdAt": "2020-05-10T21:48:55Z", "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.ts", "diffHunk": "@@ -31,14 +34,29 @@ export class InstructorCourseDashboardComponent implements OnInit {\n     readonly MIN_POINTS_GREEN = 100;\n     readonly MIN_POINTS_ORANGE = 50;\n \n-    constructor(private courseService: CourseManagementService, private resultService: ResultService, private route: ActivatedRoute, private jhiAlertService: AlertService) {}\n+    readonly TEXT = ExerciseType.TEXT;\n+    readonly MODELING = ExerciseType.MODELING;\n+    readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwOTgyMw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423009823", "bodyText": "Removed as the changes in the corresponding html file made it redundant.", "author": "balazs-czopf", "createdAt": "2020-05-11T12:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTQ0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705447", "bodyText": "Could this work here? Maybe filter like [ExerciseType.MODELING, ExerciseType. TEXT, ExerciseType. FILE_UPLOAD].includes(exercise.type).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            <button\n          \n          \n            \n                                                *ngIf=\"exercise.type === MODELING\"\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/modeling-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n          \n            \n                                            <button\n          \n          \n            \n                                                *ngIf=\"exercise.type === TEXT\"\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/text-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n          \n            \n                                            <button\n          \n          \n            \n                                                *ngIf=\"exercise.type === FILE_UPLOAD\"\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/file-upload-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n          \n            \n                                            <button\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/{{exercise.type}}-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n      \n    \n    \n  \n\nAlso consider using the [routerLink]=\"[..]\" notation maybe?", "author": "jpbernius", "createdAt": "2020-05-10T21:52:25Z", "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.html", "diffHunk": "@@ -122,9 +127,32 @@ <h3>\n                             </div>\n                         </td>\n                         <td>\n-                            <button class=\"btn btn-primary\" routerLink=\"/course-management/{{ course.id }}/exercises/{{ exercise.id }}/instructor-dashboard\">\n-                                {{ 'artemisApp.instructorCourseDashboard.exerciseDashboard' | translate }}\n-                            </button>\n+                            <div class=\"btn-group flex-btn-group-container\">\n+                                <button class=\"btn btn-primary btn-sm mr-1\" routerLink=\"/course-management/{{ course.id }}/exercises/{{ exercise.id }}/instructor-dashboard\">\n+                                    {{ 'artemisApp.instructorCourseDashboard.exerciseDashboard' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === MODELING\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/modeling-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === TEXT\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/text-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === FILE_UPLOAD\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/file-upload-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNTc2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423015763", "bodyText": "Changed as suggested", "author": "balazs-czopf", "createdAt": "2020-05-11T12:51:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTc1Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705752", "bodyText": "Can we do this in one network call? If we have a big course, this can trigger many (like 100) network calls!", "author": "jpbernius", "createdAt": "2020-05-10T21:55:23Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NTUzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423265535", "bodyText": "Yes, refactored the code accordingly.", "author": "balazs-czopf", "createdAt": "2020-05-11T19:23:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTc1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTk0Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705942", "bodyText": "return not needed, remove arrow function.", "author": "jpbernius", "createdAt": "2020-05-10T21:57:24Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NjQwMw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423096403", "bodyText": "Refactored", "author": "balazs-czopf", "createdAt": "2020-05-11T14:50:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTk0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjEwNA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706104", "bodyText": "This needs to change (see comment above), but this code is duplicated a few times and can easily refactored.", "author": "jpbernius", "createdAt": "2020-05-10T21:58:01Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NjU0Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423096546", "bodyText": "Refactored", "author": "balazs-czopf", "createdAt": "2020-05-11T14:50:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjEwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjIzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706235", "bodyText": "In this case, do we need to perform all 100 network calls again?", "author": "jpbernius", "createdAt": "2020-05-10T21:59:04Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.modelingSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for text exercise\n+     * @param exercise text exercise\n+     */\n+    getTextSubmissions(exercise: TextExercise) {\n+        this.textSubmissionService.getTextSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<TextSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.textSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for file uplaod exercise\n+     * @param exercise file upload exercise\n+     */\n+    getFileUploadSubmissions(exercise: FileUploadExercise) {\n+        this.fileUploadSubmissionService.getFileUploadSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<FileUploadSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.fileUploadSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelModelingAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.modelingAssessmentService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzNTIxNw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423035217", "bodyText": "No, now it simply removes the submission locally without a full reload after canceling it through a network call .", "author": "balazs-czopf", "createdAt": "2020-05-11T13:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjMwNg==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706306", "bodyText": "This is duplicated code and could be one function.", "author": "jpbernius", "createdAt": "2020-05-10T21:59:54Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.modelingSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for text exercise\n+     * @param exercise text exercise\n+     */\n+    getTextSubmissions(exercise: TextExercise) {\n+        this.textSubmissionService.getTextSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<TextSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.textSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for file uplaod exercise\n+     * @param exercise file upload exercise\n+     */\n+    getFileUploadSubmissions(exercise: FileUploadExercise) {\n+        this.fileUploadSubmissionService.getFileUploadSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<FileUploadSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.fileUploadSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelModelingAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.modelingAssessmentService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelTextAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel && submission.exerciseId) {\n+            this.textAssessmentsService.cancelAssessment(submission.exerciseId, submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelFileUploadAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.fileUploadAssessmentsService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzMzg0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423033847", "bodyText": "Refactored to one function", "author": "balazs-czopf", "createdAt": "2020-05-11T13:21:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjMwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjQyMQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706421", "bodyText": "if wired up correctly, this could be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>\n          \n          \n            \n                                <td>{{ fileUploadSubmission.participation.exercise.title }}</td>", "author": "jpbernius", "createdAt": "2020-05-10T22:01:03Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"fileUploadSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.fileUploadSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let fileUploadSubmission of fileUploadSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ fileUploadSubmission.id }}</td>\n+                    <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NTcyNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423095725", "bodyText": "Refactored", "author": "balazs-czopf", "createdAt": "2020-05-11T14:49:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUwMA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706500", "bodyText": "Please extract this in a template or component as this is reused above.", "author": "jpbernius", "createdAt": "2020-05-10T22:01:47Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"fileUploadSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.fileUploadSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let fileUploadSubmission of fileUploadSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ fileUploadSubmission.id }}</td>\n+                    <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>\n+                    <td>{{ fileUploadSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ fileUploadSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"fileUploadSubmission.result && fileUploadSubmission.result.score != null\">{{ fileUploadSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"fileUploadSubmission && fileUploadSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'file-upload-exercises',\n+                                    fileUploadSubmission.exerciseId,\n+                                    'submissions',\n+                                    fileUploadSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"fileUploadSubmission && fileUploadSubmission.result && !fileUploadSubmission.result.completionDate\"\n+                                (click)=\"cancelFileUploadAssessment(fileUploadSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NTU2Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423095567", "bodyText": "Refactored", "author": "balazs-czopf", "createdAt": "2020-05-11T14:49:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUyMA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706520", "bodyText": "See comment below.", "author": "jpbernius", "createdAt": "2020-05-10T22:02:05Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>", "originalCommit": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a3a3ed42588388577aa3048d28e61458f2fa99f3", "url": "https://github.com/ls1intum/Artemis/commit/a3a3ed42588388577aa3048d28e61458f2fa99f3", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-11T10:38:39Z", "type": "commit"}, {"oid": "b91d5381cfd32a153593538743a402af2c237b7f", "url": "https://github.com/ls1intum/Artemis/commit/b91d5381cfd32a153593538743a402af2c237b7f", "message": "Introduces requested changes from PR", "committedDate": "2020-05-11T19:24:17Z", "type": "commit"}, {"oid": "5973b623fda5684ac5476f833cfee952cf9b6e47", "url": "https://github.com/ls1intum/Artemis/commit/5973b623fda5684ac5476f833cfee952cf9b6e47", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-11T19:24:39Z", "type": "commit"}, {"oid": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f", "url": "https://github.com/ls1intum/Artemis/commit/48d7c021511b8dbe74ee3cb62c9f4039379cc08f", "message": "Fix Java Code Style", "committedDate": "2020-05-11T19:33:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTI2MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423675261", "bodyText": "bad performance!", "author": "krusche", "createdAt": "2020-05-12T11:57:26Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -636,6 +654,60 @@ private void validateComplaintsConfig(Course course) {\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/submissions Get all submissions for course\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/submissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {", "originalCommit": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNjU0NA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r426606544", "bodyText": "Refactored", "author": "balazs-czopf", "createdAt": "2020-05-18T12:58:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTI2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NjMzMw==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423676333", "bodyText": "Make sure to filter (i.e. hide) elements that should not be visible to tutors, e.g. they are not allowed to see the author of the submission", "author": "krusche", "createdAt": "2020-05-12T11:59:25Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -636,6 +654,60 @@ private void validateComplaintsConfig(Course course) {\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/submissions Get all submissions for course\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/submissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {\n+        log.debug(\"REST request to get all submissions for course : {}\", courseId);\n+        long start = System.currentTimeMillis();\n+        Course course = courseService.findOneWithExercises(courseId);\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastInstructorInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        List<Exercise> exercises = exerciseService.findAllForCourse(course, user);\n+        List<Submission> submissions = new ArrayList<>();\n+\n+        for (Exercise exercise : exercises) {\n+            if (exercise instanceof ModelingExercise) {\n+                List<ModelingSubmission> modelingSubmissions = modelingSubmissionService.getModelingSubmissions(exercise.getId(), true);\n+                for (ModelingSubmission modelingSubmission : modelingSubmissions) {\n+                    modelingSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(modelingSubmissions);\n+            }\n+            else if (exercise instanceof TextExercise) {\n+                List<TextSubmission> textSubmissions = textSubmissionService.getTextSubmissionsByExerciseId(exercise.getId(), true);\n+                for (TextSubmission textSubmission : textSubmissions) {\n+                    textSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(textSubmissions);\n+            }\n+            else if (exercise instanceof FileUploadExercise) {\n+                List<FileUploadSubmission> fileUploadSubmissions = fileUploadSubmissionService.getFileUploadSubmissions(exercise.getId(), true);\n+                for (FileUploadSubmission fileUploadSubmission : fileUploadSubmissions) {\n+                    fileUploadSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(fileUploadSubmissions);\n+            }\n+\n+            Set<Submission> set = new HashSet<>(submissions);\n+            submissions.clear();\n+            submissions.addAll(set);\n+\n+        }\n+        long end = System.currentTimeMillis();\n+        log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");\n+        return ResponseEntity.ok(submissions);", "originalCommit": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNzI2OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r426607269", "bodyText": "Thanks for the hint, done so.", "author": "balazs-czopf", "createdAt": "2020-05-18T12:59:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NjMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3ODMxMg==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423678312", "bodyText": "do we need all these services?", "author": "krusche", "createdAt": "2020-05-12T12:03:11Z", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,155 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission, SubmissionExerciseType } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, getIcon, getIconTooltip } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    submissions: Submission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    getIcon = getIcon;\n+    getIconTooltip = getIconTooltip;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,", "originalCommit": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNzcwMA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r426607700", "bodyText": "No, removed the unused ones. Thanks.", "author": "balazs-czopf", "createdAt": "2020-05-18T13:00:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3ODMxMg=="}], "type": "inlineReview"}, {"oid": "e5c73443774d4d801a2da343b64cb83efc6f8ce0", "url": "https://github.com/ls1intum/Artemis/commit/e5c73443774d4d801a2da343b64cb83efc6f8ce0", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-18T09:00:34Z", "type": "commit"}, {"oid": "b2be2909b29208b4665394de2b3bdea57e5e0afc", "url": "https://github.com/ls1intum/Artemis/commit/b2be2909b29208b4665394de2b3bdea57e5e0afc", "message": "Remove unused imports", "committedDate": "2020-05-18T09:12:21Z", "type": "commit"}, {"oid": "6f15e4f5eec6f36acd59f8e95653215a4ba99e13", "url": "https://github.com/ls1intum/Artemis/commit/6f15e4f5eec6f36acd59f8e95653215a4ba99e13", "message": "Optimize performance", "committedDate": "2020-05-18T12:58:23Z", "type": "commit"}, {"oid": "2d542cffc9151959e8c7794185e6b0fc11202d11", "url": "https://github.com/ls1intum/Artemis/commit/2d542cffc9151959e8c7794185e6b0fc11202d11", "message": "fix java code style", "committedDate": "2020-05-18T13:10:36Z", "type": "commit"}, {"oid": "05665ec0a8e3158c80609b5ffe2465580be526d3", "url": "https://github.com/ls1intum/Artemis/commit/05665ec0a8e3158c80609b5ffe2465580be526d3", "message": "Remove unused services", "committedDate": "2020-05-18T13:46:07Z", "type": "commit"}, {"oid": "c7a9554d55012d39881192764e108d81ced50182", "url": "https://github.com/ls1intum/Artemis/commit/c7a9554d55012d39881192764e108d81ced50182", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-18T13:47:15Z", "type": "commit"}, {"oid": "82c5ffec4befd54d33b191c8d8137db3754de35a", "url": "https://github.com/ls1intum/Artemis/commit/82c5ffec4befd54d33b191c8d8137db3754de35a", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-18T14:07:52Z", "type": "commit"}, {"oid": "9390017132d725de3c5b8a89a15548ad1f4e20f2", "url": "https://github.com/ls1intum/Artemis/commit/9390017132d725de3c5b8a89a15548ad1f4e20f2", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/SubmissionService.java\n#\tsrc/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.html\n#\tsrc/main/webapp/app/course/manage/course-management.service.ts", "committedDate": "2020-05-21T09:27:29Z", "type": "commit"}, {"oid": "1298745f39ec0537489d25d42fecc0eb6bcd3faa", "url": "https://github.com/ls1intum/Artemis/commit/1298745f39ec0537489d25d42fecc0eb6bcd3faa", "message": "Remove double submission link buttons", "committedDate": "2020-05-21T09:37:52Z", "type": "commit"}, {"oid": "f3ed5696a1e6716469057c4483db55b4e83ae268", "url": "https://github.com/ls1intum/Artemis/commit/f3ed5696a1e6716469057c4483db55b4e83ae268", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-25T10:31:53Z", "type": "commit"}, {"oid": "6c029322361346bd71c1978b93728008feec6111", "url": "https://github.com/ls1intum/Artemis/commit/6c029322361346bd71c1978b93728008feec6111", "message": "add test cases", "committedDate": "2020-05-25T19:25:57Z", "type": "commit"}, {"oid": "d40ba14708c0a54b839bd4151a3f4e348df67e69", "url": "https://github.com/ls1intum/Artemis/commit/d40ba14708c0a54b839bd4151a3f4e348df67e69", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-26T09:25:02Z", "type": "commit"}, {"oid": "485cbe8bae0adc027c5dd2380f79651e4c701e26", "url": "https://github.com/ls1intum/Artemis/commit/485cbe8bae0adc027c5dd2380f79651e4c701e26", "message": "fix java code style", "committedDate": "2020-05-26T09:30:43Z", "type": "commit"}, {"oid": "cf69e2df36d63065d390940f681d27af5b69c011", "url": "https://github.com/ls1intum/Artemis/commit/cf69e2df36d63065d390940f681d27af5b69c011", "message": "fix wrong id", "committedDate": "2020-05-26T10:14:44Z", "type": "commit"}, {"oid": "c85aba61697f5226ec1695a1c256c54ff99b4e6f", "url": "https://github.com/ls1intum/Artemis/commit/c85aba61697f5226ec1695a1c256c54ff99b4e6f", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks\n\n# Conflicts:\n#\tsrc/main/webapp/app/assessment/assessment-shared.module.ts", "committedDate": "2020-05-26T18:58:14Z", "type": "commit"}, {"oid": "55803800c349a5784cb45ad12816b3728a3d0ff1", "url": "https://github.com/ls1intum/Artemis/commit/55803800c349a5784cb45ad12816b3728a3d0ff1", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-27T19:15:46Z", "type": "commit"}, {"oid": "1be31c2a43dca54f918c4eb285113231af329d12", "url": "https://github.com/ls1intum/Artemis/commit/1be31c2a43dca54f918c4eb285113231af329d12", "message": "add test cases", "committedDate": "2020-05-27T19:50:54Z", "type": "commit"}, {"oid": "ef5bf06658659186f01a2452a2ad6e3dd3c0b44b", "url": "https://github.com/ls1intum/Artemis/commit/ef5bf06658659186f01a2452a2ad6e3dd3c0b44b", "message": "Basic test suite setup", "committedDate": "2020-05-27T20:26:33Z", "type": "commit"}, {"oid": "a54f1be8aa9a5fcd242306c84a33d71c7a122bc3", "url": "https://github.com/ls1intum/Artemis/commit/a54f1be8aa9a5fcd242306c84a33d71c7a122bc3", "message": "fix test suite", "committedDate": "2020-05-27T20:55:06Z", "type": "commit"}, {"oid": "0e34c7fad5f800027e4826191d073906e70cc8a6", "url": "https://github.com/ls1intum/Artemis/commit/0e34c7fad5f800027e4826191d073906e70cc8a6", "message": "Fix test suite name", "committedDate": "2020-05-27T21:02:48Z", "type": "commit"}, {"oid": "1f31649ca98d732c2ed4c0ae842f3496b1de400f", "url": "https://github.com/ls1intum/Artemis/commit/1f31649ca98d732c2ed4c0ae842f3496b1de400f", "message": "Fix translation error", "committedDate": "2020-05-28T13:18:13Z", "type": "commit"}, {"oid": "5f4392f7dc06ff8ccf9198ca93ef88254809c72d", "url": "https://github.com/ls1intum/Artemis/commit/5f4392f7dc06ff8ccf9198ca93ef88254809c72d", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-05-29T08:29:41Z", "type": "commit"}, {"oid": "2d4a18a06e50703359a9e5994fa7d04ab58b9bb9", "url": "https://github.com/ls1intum/Artemis/commit/2d4a18a06e50703359a9e5994fa7d04ab58b9bb9", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-06-01T09:50:19Z", "type": "commit"}, {"oid": "211e2fdc5030b648b75f430db16cd71b6409da6c", "url": "https://github.com/ls1intum/Artemis/commit/211e2fdc5030b648b75f430db16cd71b6409da6c", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-06-01T17:51:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzU3Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433447576", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");\n          \n          \n            \n                    log.debug(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");", "author": "krusche", "createdAt": "2020-06-01T19:39:22Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -659,6 +665,35 @@ public void fetchParticipationsWithSubmissionsAndResultsForCourses(List<Course>\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/lockedSubmissions Get locked submissions for course for user\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/lockedSubmissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getLockedSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {\n+        log.debug(\"REST request to get all locked submissions for course : {}\", courseId);\n+        long start = System.currentTimeMillis();\n+        Course course = courseService.findOneWithExercises(courseId);\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastTeachingAssistantInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        List<Submission> submissions = submissionService.getLockedSubmissions(courseId);\n+\n+        for (Submission submission : submissions) {\n+            submissionService.hideDetails(submission, user);\n+        }\n+\n+        long end = System.currentTimeMillis();\n+        log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");", "originalCommit": "211e2fdc5030b648b75f430db16cd71b6409da6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzY5OA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433447698", "bodyText": "we don't really need info here. The time is tracked anyway in the metrics", "author": "krusche", "createdAt": "2020-06-01T19:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NjgxNg==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433466816", "bodyText": "Changed it accordingly.", "author": "balazs-czopf", "createdAt": "2020-06-01T20:19:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0ODQ4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433448489", "bodyText": "please delete this line", "author": "krusche", "createdAt": "2020-06-01T19:41:13Z", "path": "src/main/webapp/app/course/manage/course-management.service.ts", "diffHunk": "@@ -248,6 +250,29 @@ export class CourseManagementService {\n         return this.http.get<User[]>(`${this.resourceUrl}/${courseId}/${courseGroup}`, { observe: 'response' });\n     }\n \n+    /**\n+     * Find all locked submissions of a given course for user\n+     * @param {number} courseId - The id of the course to be searched for\n+     */\n+    findAllLockedSubmissionsOfCourse(courseId: number): Observable<HttpResponse<Submission[]>> {\n+        return this.http\n+            .get<Submission[]>(`${this.resourceUrl}/${courseId}/lockedSubmissions`, { observe: 'response' })\n+            .pipe(\n+                // map((res) => this.convertDateArrayFromServer(res)),", "originalCommit": "211e2fdc5030b648b75f430db16cd71b6409da6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NjU3OA==", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433466578", "bodyText": "Done. Thanks for the hint.", "author": "balazs-czopf", "createdAt": "2020-06-01T20:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0ODQ4OQ=="}], "type": "inlineReview"}, {"oid": "c66b2c7170f7100ebd94ae7d849e65d4ee1859c8", "url": "https://github.com/ls1intum/Artemis/commit/c66b2c7170f7100ebd94ae7d849e65d4ee1859c8", "message": "Requested changes from PR", "committedDate": "2020-06-01T20:14:53Z", "type": "commit"}, {"oid": "a672b9e0dea35f79794bc6982a278c2bfdd94e5f", "url": "https://github.com/ls1intum/Artemis/commit/a672b9e0dea35f79794bc6982a278c2bfdd94e5f", "message": "Merge branch 'develop' into feature/tutor-course-dashboard/show-locks", "committedDate": "2020-06-01T20:27:58Z", "type": "commit"}]}