{"pr_number": 1340, "pr_title": "Performance improvement for courses on dashboard", "pr_createdAt": "2020-04-23T21:17:20Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1340", "timeline": [{"oid": "a0381f80caded9353d72fafe338c92d513b4b76d", "url": "https://github.com/ls1intum/Artemis/commit/a0381f80caded9353d72fafe338c92d513b4b76d", "message": "start to improve performance for courses-for-dashboard\n\nWork in progress", "committedDate": "2020-04-23T20:38:42Z", "type": "commit"}, {"oid": "aaf34f39be49b2ac07498f6c88ca1f5363078885", "url": "https://github.com/ls1intum/Artemis/commit/aaf34f39be49b2ac07498f6c88ca1f5363078885", "message": "fetch with team assignment config", "committedDate": "2020-04-23T20:42:20Z", "type": "commit"}, {"oid": "1143ffb908b481f581e56441c9da443704e5eb13", "url": "https://github.com/ls1intum/Artemis/commit/1143ffb908b481f581e56441c9da443704e5eb13", "message": "Split exercises into individual and team exercises in dashboard endpoint", "committedDate": "2020-04-23T21:05:40Z", "type": "commit"}, {"oid": "1e85a38bc3b37518baafa08de92b219dead4946e", "url": "https://github.com/ls1intum/Artemis/commit/1e85a38bc3b37518baafa08de92b219dead4946e", "message": "Merge branch 'develop' into performance/courses-for-dashboard", "committedDate": "2020-04-23T21:30:33Z", "type": "commit"}, {"oid": "a92c061b32c88ee52740458b5ccf4f23b19ff9e8", "url": "https://github.com/ls1intum/Artemis/commit/a92c061b32c88ee52740458b5ccf4f23b19ff9e8", "message": "Load team assignment config when needed", "committedDate": "2020-04-23T21:34:30Z", "type": "commit"}, {"oid": "d0520402a080d1b8ad84375b756c9925909a32a9", "url": "https://github.com/ls1intum/Artemis/commit/d0520402a080d1b8ad84375b756c9925909a32a9", "message": "improve log", "committedDate": "2020-04-23T22:00:05Z", "type": "commit"}, {"oid": "6d93cb2e61121abf6d5d78ef231767365596c4ad", "url": "https://github.com/ls1intum/Artemis/commit/6d93cb2e61121abf6d5d78ef231767365596c4ad", "message": "Fix activeExercises size in log", "committedDate": "2020-04-23T22:03:39Z", "type": "commit"}, {"oid": "47c88f46acb0aec4fe0a254520754fbcacdf8ddd", "url": "https://github.com/ls1intum/Artemis/commit/47c88f46acb0aec4fe0a254520754fbcacdf8ddd", "message": "Merge branch 'performance/courses-for-dashboard' of https://github.com/ls1intum/Artemis into performance/courses-for-dashboard\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "committedDate": "2020-04-23T22:05:37Z", "type": "commit"}, {"oid": "74fabfc717f2b4d886660af31ff3be1a8f3173a7", "url": "https://github.com/ls1intum/Artemis/commit/74fabfc717f2b4d886660af31ff3be1a8f3173a7", "message": "eagerly fetch categories more often", "committedDate": "2020-04-23T22:18:27Z", "type": "commit"}, {"oid": "321e2079bdc807ffda6273aecf8bcbc0beeed9be", "url": "https://github.com/ls1intum/Artemis/commit/321e2079bdc807ffda6273aecf8bcbc0beeed9be", "message": "Merge branch 'develop' into performance/courses-for-dashboard", "committedDate": "2020-04-24T12:51:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3MDIzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1340#discussion_r414570235", "bodyText": "I'm not sure if this is relevant, but the method name no longer indicates exactly what is loaded.", "author": "sleiss", "createdAt": "2020-04-24T13:20:37Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/CourseRepository.java", "diffHunk": "@@ -32,7 +32,7 @@\n     @Query(\"select distinct course from Course course left join fetch course.exercises exercises left join fetch course.lectures lectures left join fetch lectures.attachments left join fetch exercises.categories where (course.startDate <= current_timestamp or course.startDate is null) and (course.endDate >= current_timestamp or course.endDate is null)\")\n     List<Course> findAllActiveWithEagerExercisesAndLectures();\n \n-    @EntityGraph(type = LOAD, attributePaths = { \"exercises\" })\n+    @EntityGraph(type = LOAD, attributePaths = { \"exercises\", \"exercises.categories\", \"exercises.teamAssignmentConfig\" })\n     Course findWithEagerExercisesById(long courseId);", "originalCommit": "321e2079bdc807ffda6273aecf8bcbc0beeed9be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1OTk5Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1340#discussion_r415059992", "bodyText": "Hm yeah, we need some kind of convention for this. I'm not sure if it's resonable to name all the loaded attributes in the method name when there are a lot of them, e.g. in this case findWithEagerExercisesAndExerciseCategoriesAndExerciseTeamAssignmentConfigById.\nSince categories and teamAssignmentConfig are nested on the exercises attributes, maybe we could say it's fine to omit them in the method name?\nThis would provide a reasonable answer in this case but it still wouldn't tell us what to do in other cases like the one you mentioned below where there are a lot of attributes on the top level:\n@EntityGraph(type = LOAD, attributePaths = { \"exampleSubmissions\", \"teamAssignmentConfig\", \"categories\" })\n    Optional<ModelingExercise> findWithEagerExampleSubmissionsById(@Param(\"exerciseId\") Long exerciseId);\nThe spring documentation offers no guidance here. They do not include loaded attributes in the method name in any way:\n\nBut I don't think that is something that we could do since we might have repository methods that only differ in the attributes being loaded, and thus they need a different name to be distinguishable.\nWe could say that we do not include eagerly loaded attributes in the repository method name in general but only if it is important for distinction or if it is a very expensive eager load. This convention wouldn't be super strict since those points are debatable on a case by case basis but probably better than no convention at all. Or maybe somebody else has a better idea altogether?", "author": "madwau", "createdAt": "2020-04-25T13:09:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3MDIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA5NzczNw==", "url": "https://github.com/ls1intum/Artemis/pull/1340#discussion_r415097737", "bodyText": "This is actually very closely related to what @roxhens has been working on in this PR. Maybe he has some thoughts on this?", "author": "madwau", "createdAt": "2020-04-25T16:41:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3MDIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3MTQzMw==", "url": "https://github.com/ls1intum/Artemis/pull/1340#discussion_r414571433", "bodyText": "Same as above, the name does not reflect the attributePaths anymore.", "author": "sleiss", "createdAt": "2020-04-24T13:22:16Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ModelingExerciseRepository.java", "diffHunk": "@@ -20,7 +23,7 @@\n     @Query(\"SELECT e FROM ModelingExercise e WHERE e.course.id = :#{#courseId}\")\n     List<ModelingExercise> findByCourseId(@Param(\"courseId\") Long courseId);\n \n-    @Query(\"select distinct modelingExercise from ModelingExercise modelingExercise left join fetch modelingExercise.exampleSubmissions where modelingExercise.id = :#{#exerciseId}\")\n-    Optional<ModelingExercise> findByIdWithEagerExampleSubmissions(@Param(\"exerciseId\") Long exerciseId);\n+    @EntityGraph(type = LOAD, attributePaths = { \"exampleSubmissions\", \"teamAssignmentConfig\", \"categories\" })\n+    Optional<ModelingExercise> findWithEagerExampleSubmissionsById(@Param(\"exerciseId\") Long exerciseId);", "originalCommit": "321e2079bdc807ffda6273aecf8bcbc0beeed9be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3MTUzNA==", "url": "https://github.com/ls1intum/Artemis/pull/1340#discussion_r414571534", "bodyText": "Same as above, the name does not reflect the attributePaths anymore.", "author": "sleiss", "createdAt": "2020-04-24T13:22:26Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseRepository.java", "diffHunk": "@@ -29,7 +29,7 @@\n     @Query(\"select distinct pe from ProgrammingExercise pe left join fetch pe.templateParticipation tp left join fetch pe.solutionParticipation sp left join fetch tp.results as tpr left join fetch sp.results as spr where pe.course.id = :#{#courseId} and (tpr.id = (select max(id) from tp.results) or tpr.id = null) and (spr.id = (select max(id) from sp.results) or spr.id = null)\")\n     List<ProgrammingExercise> findByCourseIdWithLatestResultForTemplateSolutionParticipations(@Param(\"courseId\") Long courseId);\n \n-    @EntityGraph(type = LOAD, attributePaths = { \"templateParticipation\", \"solutionParticipation\" })\n+    @EntityGraph(type = LOAD, attributePaths = { \"templateParticipation\", \"solutionParticipation\", \"teamAssignmentConfig\", \"categories\" })\n     Optional<ProgrammingExercise> findWithTemplateParticipationAndSolutionParticipationById(Long exerciseId);", "originalCommit": "321e2079bdc807ffda6273aecf8bcbc0beeed9be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3NDYxOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1340#discussion_r414574619", "bodyText": "Are there any cases where activeExercises is not empty but both activeIndividualExercises and activeTeamExercises are? If not, can we simplify it to:\nactiveExercises.isEmpty()? (Was like this before).", "author": "sleiss", "createdAt": "2020-04-24T13:26:37Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -422,15 +423,29 @@ private void validateComplaintsConfig(Course course) {\n \n         // get all courses with exercises for this user\n         List<Course> courses = courseService.findAllActiveWithExercisesAndLecturesForUser(user);\n-        Set<Exercise> activeExercises = courses.stream().flatMap(course -> course.getExercises().stream()).collect(Collectors.toSet());\n-        log.debug(\"          /courses/for-dashboard.findAllActiveWithExercisesForUser in \" + (System.currentTimeMillis() - start) + \"ms\");\n+        log.debug(\"          /courses/for-dashboard.findAllActiveWithExercisesAndLecturesForUser in \" + (System.currentTimeMillis() - start) + \"ms\");\n \n-        if (activeExercises.isEmpty()) {\n+        Map<ExerciseMode, List<Exercise>> activeExercises = courses.stream().flatMap(course -> course.getExercises().stream()).collect(Collectors.groupingBy(Exercise::getMode));\n+        List<Exercise> activeIndividualExercises = Optional.ofNullable(activeExercises.get(ExerciseMode.INDIVIDUAL)).orElse(List.of());\n+        List<Exercise> activeTeamExercises = Optional.ofNullable(activeExercises.get(ExerciseMode.TEAM)).orElse(List.of());\n+\n+        if (activeIndividualExercises.isEmpty() && activeTeamExercises.isEmpty()) {", "originalCommit": "321e2079bdc807ffda6273aecf8bcbc0beeed9be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA2MTMyNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1340#discussion_r415061325", "bodyText": "That should work and would be more elegant but is also a bit harder to understand since activeExercises is not a List but a Map of exercise groups. When the map is empty, it means that there are no groups of exercises (which of course also implies that there are no exercises, so it is correct).\nThe two expressions would become non-equivalent if there were any other Exercise Modes apart from INDIVIDUAL and TEAM. However, in that case the method would need to be adapted anyway.\nI have no strong feelings either way. Both seem acceptable to me.", "author": "madwau", "createdAt": "2020-04-25T13:17:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3NDYxOQ=="}], "type": "inlineReview"}]}