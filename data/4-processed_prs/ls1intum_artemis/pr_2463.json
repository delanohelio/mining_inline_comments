{"pr_number": 2463, "pr_title": "[Feature] Highlight Changed Files for the Assessment of Programming Exercises", "pr_createdAt": "2020-11-25T21:53:22Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2463", "timeline": [{"oid": "566a0c0f019fc787a27a42a054e631b675f91d27", "url": "https://github.com/ls1intum/Artemis/commit/566a0c0f019fc787a27a42a054e631b675f91d27", "message": "implement service method to check if a file was changed compared to the template file", "committedDate": "2020-11-25T20:32:26Z", "type": "commit"}, {"oid": "f00564b77d82f118815c4d2bec0f2eed502eb445", "url": "https://github.com/ls1intum/Artemis/commit/f00564b77d82f118815c4d2bec0f2eed502eb445", "message": "create new endpoint", "committedDate": "2020-11-25T20:36:04Z", "type": "commit"}, {"oid": "a62823fd4f749ab149aed68e4f3d452b4ed660a4", "url": "https://github.com/ls1intum/Artemis/commit/a62823fd4f749ab149aed68e4f3d452b4ed660a4", "message": "implement endpoint on client, call it correctly and adapt that this is used only during assessment", "committedDate": "2020-11-25T21:52:02Z", "type": "commit"}, {"oid": "815b0f1da5ef84dc5dd7a58e58f6f8f35b676715", "url": "https://github.com/ls1intum/Artemis/commit/815b0f1da5ef84dc5dd7a58e58f6f8f35b676715", "message": "try to make codacy happy", "committedDate": "2020-11-26T09:30:05Z", "type": "commit"}, {"oid": "ca3e9656572017a9e932bb0505c9b6e4464f7d36", "url": "https://github.com/ls1intum/Artemis/commit/ca3e9656572017a9e932bb0505c9b6e4464f7d36", "message": "add tests", "committedDate": "2020-11-26T09:30:19Z", "type": "commit"}, {"oid": "fa0f45bda360b4f56479c5f1cd63eaa882f73fdd", "url": "https://github.com/ls1intum/Artemis/commit/fa0f45bda360b4f56479c5f1cd63eaa882f73fdd", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-files-when-changed", "committedDate": "2020-11-26T09:30:29Z", "type": "commit"}, {"oid": "8823cd588bfa75231d78f80affd95ef443b61e86", "url": "https://github.com/ls1intum/Artemis/commit/8823cd588bfa75231d78f80affd95ef443b61e86", "message": "Merge branch 'develop' into feature/programming-assessment/highlight-files-when-changed", "committedDate": "2020-11-30T07:16:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxMDQ2Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2463#discussion_r532410462", "bodyText": "Wrong class!\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Logger log = LoggerFactory.getLogger(TextSubmissionService.class);\n          \n          \n            \n                private final Logger log = LoggerFactory.getLogger(RepositoryService.class);", "author": "jpbernius", "createdAt": "2020-11-30T08:12:57Z", "path": "src/main/java/de/tum/in/www1/artemis/service/RepositoryService.java", "diffHunk": "@@ -36,6 +39,8 @@\n \n     private ProgrammingExerciseParticipationService programmingExerciseParticipationService;\n \n+    private final Logger log = LoggerFactory.getLogger(TextSubmissionService.class);", "originalCommit": "8823cd588bfa75231d78f80affd95ef443b61e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyOTc2MA==", "url": "https://github.com/ls1intum/Artemis/pull/2463#discussion_r532729760", "bodyText": "Good catch!", "author": "fde312", "createdAt": "2020-11-30T16:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxMDQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5MzY2OA==", "url": "https://github.com/ls1intum/Artemis/pull/2463#discussion_r532893668", "bodyText": "Done in 28d558", "author": "fde312", "createdAt": "2020-11-30T20:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxMDQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxMzgyMA==", "url": "https://github.com/ls1intum/Artemis/pull/2463#discussion_r532413820", "bodyText": "Why do we need this loop? We already verified that the file is in that list, so I would argue that it can be deleted.\nConsider replacing templateRepoFiles and templateRepoFilesNames with a Map<String, File> instead?", "author": "jpbernius", "createdAt": "2020-11-30T08:19:39Z", "path": "src/main/java/de/tum/in/www1/artemis/service/RepositoryService.java", "diffHunk": "@@ -82,6 +87,53 @@ public RepositoryService(GitService gitService, AuthorizationCheckService authCh\n         return fileInBytes;\n     }\n \n+    /**\n+     * Gets the files of the repository and checks whether they were changed during a student participation.\n+     * Compares the files from the students repository with the files of the template repository.\n+     *\n+     * @param repository the students repository with possibly new files and changed files\n+     * @param templateRepository the template repository with default files on which the student started working on\n+     * @return a map of files with the information if they were changed/are new.\n+     */\n+    public Map<String, Boolean> getFilesWithInformationAboutChange(Repository repository, Repository templateRepository) {\n+        Map<String, Boolean> filesWithInformationAboutChange = new HashMap<>();\n+\n+        var repoFiles = gitService.listFilesAndFolders(repository).entrySet().stream().filter(entry -> entry.getValue() == FileType.FILE).map(Map.Entry::getKey)\n+                .collect(Collectors.toList());\n+        var templateRepoFiles = gitService.listFilesAndFolders(templateRepository).entrySet().stream().filter(entry -> entry.getValue() == FileType.FILE).map(Map.Entry::getKey)\n+                .collect(Collectors.toList());\n+        // Used to avoid going through the loop when the file which the student added was not in the template repository\n+        var templateRepoFilesNames = templateRepoFiles.stream().map(File::toString).collect(Collectors.toList());\n+\n+        repoFiles.forEach(file -> {\n+            var fileName = file.toString();\n+            // When template repository does not contain this file it is new/changed, no need to iterate through the loop\n+            if (!templateRepoFilesNames.contains(fileName)) {\n+                filesWithInformationAboutChange.put(fileName, true);\n+            }\n+            else {\n+                templateRepoFiles.forEach(templateFile -> {\n+                    try {\n+                        // Check to assure we are comparing the correct files\n+                        if (file.toString().equalsIgnoreCase(templateFile.toString())) {\n+                            // When having the same content, it was not changed\n+                            if (FileUtils.contentEquals(file, templateFile)) {\n+                                filesWithInformationAboutChange.put(fileName, false);\n+                            }\n+                            else {\n+                                filesWithInformationAboutChange.put(fileName, true);\n+                            }\n+                        }\n+                    }", "originalCommit": "8823cd588bfa75231d78f80affd95ef443b61e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5NDEwMw==", "url": "https://github.com/ls1intum/Artemis/pull/2463#discussion_r532894103", "bodyText": "Thank you, using a Map<String, File> was indeed better! Done in 28d558", "author": "fde312", "createdAt": "2020-11-30T20:49:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxMzgyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxNDY4Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2463#discussion_r532414682", "bodyText": "How is a permission check performed here?", "author": "jpbernius", "createdAt": "2020-11-30T08:21:17Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/repository/RepositoryProgrammingExerciseParticipationResource.java", "diffHunk": "@@ -103,6 +103,28 @@ boolean canAccessRepository(Long participationId) throws IllegalArgumentExceptio\n         return super.getFiles(participationId);\n     }\n \n+    /**\n+     * GET /repository/{participationId}/files-change\n+     *\n+     * Gets the files of the repository and checks whether they were changed during a student participation with respect to the initial template\n+     *\n+     * @param participationId participation of the student\n+     * @return the ResponseEntity with status 200 (OK) and a map of files with the information if they were changed/are new.\n+     */\n+    @GetMapping(value = \"/repository/{participationId}/files-change\", produces = MediaType.APPLICATION_JSON_VALUE)\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Map<String, Boolean>> getFilesWithInformationAboutChange(@PathVariable Long participationId) {\n+        return super.executeAndCheckForExceptions(() -> {", "originalCommit": "8823cd588bfa75231d78f80affd95ef443b61e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5NjQ3Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2463#discussion_r532896476", "bodyText": "@jpbernius in the getRepository() a few checks are done e.g. canAccessParticipation() in ProgrammingExerciseParticipationService.java:187 which checks if the user has the correct rights to view the participation.\nOr which specific checks do you mean?", "author": "fde312", "createdAt": "2020-11-30T20:53:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQxNDY4Mg=="}], "type": "inlineReview"}, {"oid": "28d558db121494c8e2858cea507b73da08032e7d", "url": "https://github.com/ls1intum/Artemis/commit/28d558db121494c8e2858cea507b73da08032e7d", "message": "incorporate feedback from review", "committedDate": "2020-11-30T20:47:37Z", "type": "commit"}, {"oid": "e6080f4d17f3e2a37ac644b63d2d390049f9eaab", "url": "https://github.com/ls1intum/Artemis/commit/e6080f4d17f3e2a37ac644b63d2d390049f9eaab", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/programming-assessment/highlight-files-when-changed\n\n# Conflicts:\n#\tsrc/test/java/de/tum/in/www1/artemis/RepositoryProgrammingExerciseParticipationResourceIntegrationTest.java", "committedDate": "2020-12-01T03:45:31Z", "type": "commit"}, {"oid": "151b73fda38e191f94d7c14af01090bf53a5ad0e", "url": "https://github.com/ls1intum/Artemis/commit/151b73fda38e191f94d7c14af01090bf53a5ad0e", "message": "Merge branch 'develop' into feature/programming-assessment/highlight-files-when-changed", "committedDate": "2020-12-03T08:07:34Z", "type": "commit"}, {"oid": "d94943048d109de32b3b3b06180ff7e22753c3a8", "url": "https://github.com/ls1intum/Artemis/commit/d94943048d109de32b3b3b06180ff7e22753c3a8", "message": "Merge branch 'develop' into feature/programming-assessment/highlight-files-when-changed", "committedDate": "2020-12-03T08:47:51Z", "type": "commit"}]}