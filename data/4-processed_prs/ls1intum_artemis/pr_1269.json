{"pr_number": 1269, "pr_title": "Feature/grading instructions/modify markdown editor for sgi", "pr_createdAt": "2020-03-08T00:38:38Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1269", "timeline": [{"oid": "e0f2f5a1eb84a91e88493efc3c6b40b5f168326e", "url": "https://github.com/ls1intum/Artemis/commit/e0f2f5a1eb84a91e88493efc3c6b40b5f168326e", "message": "remove redundant changelog", "committedDate": "2020-02-10T10:18:49Z", "type": "commit"}, {"oid": "462887d3d9ba1b4cd0d0ae69339039f51b819b6a", "url": "https://github.com/ls1intum/Artemis/commit/462887d3d9ba1b4cd0d0ae69339039f51b819b6a", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2020-02-10T10:23:47Z", "type": "commit"}, {"oid": "3b08b731631af3333466529369f4a03b818630b6", "url": "https://github.com/ls1intum/Artemis/commit/3b08b731631af3333466529369f4a03b818630b6", "message": "add criterion model", "committedDate": "2020-02-10T11:01:58Z", "type": "commit"}, {"oid": "f37b055da53ade18a56051e3ee46456cbfb6342e", "url": "https://github.com/ls1intum/Artemis/commit/f37b055da53ade18a56051e3ee46456cbfb6342e", "message": "Merge branch 'feature/grading-instructions/refactoring-in-prep-for-SGI' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2020-02-10T11:02:29Z", "type": "commit"}, {"oid": "3029100e74b277eac9eb4a1385580cb23b61b23b", "url": "https://github.com/ls1intum/Artemis/commit/3029100e74b277eac9eb4a1385580cb23b61b23b", "message": "add criterion model", "committedDate": "2020-02-10T11:12:59Z", "type": "commit"}, {"oid": "78ce6577a00c80297221e1002f98b2ce5be4340d", "url": "https://github.com/ls1intum/Artemis/commit/78ce6577a00c80297221e1002f98b2ce5be4340d", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2020-02-11T09:45:03Z", "type": "commit"}, {"oid": "87aef671c93bd33aa6ca60822b5d5a6767f99f24", "url": "https://github.com/ls1intum/Artemis/commit/87aef671c93bd33aa6ca60822b5d5a6767f99f24", "message": "rename client side models", "committedDate": "2020-02-11T10:10:07Z", "type": "commit"}, {"oid": "a4f947edb566e26b262cd948b83ae489415896db", "url": "https://github.com/ls1intum/Artemis/commit/a4f947edb566e26b262cd948b83ae489415896db", "message": "rename client models", "committedDate": "2020-02-13T22:19:54Z", "type": "commit"}, {"oid": "9073da0f463bc3ed718d010a0726d7f6a662b0a3", "url": "https://github.com/ls1intum/Artemis/commit/9073da0f463bc3ed718d010a0726d7f6a662b0a3", "message": "set grading criteria in the GET calls of the different exercise types: text, fileUpload and modeling", "committedDate": "2020-02-14T13:42:45Z", "type": "commit"}, {"oid": "82c31c0bb27839d95678e00fc60419a67c24ea9a", "url": "https://github.com/ls1intum/Artemis/commit/82c31c0bb27839d95678e00fc60419a67c24ea9a", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2020-02-14T13:48:28Z", "type": "commit"}, {"oid": "e887cf3d2eef0eab3e2e581e470db235758e8a17", "url": "https://github.com/ls1intum/Artemis/commit/e887cf3d2eef0eab3e2e581e470db235758e8a17", "message": "merge develop into current branch", "committedDate": "2020-02-17T22:06:12Z", "type": "commit"}, {"oid": "d87765ab737f1e224286b162c3321ddea4d0544d", "url": "https://github.com/ls1intum/Artemis/commit/d87765ab737f1e224286b162c3321ddea4d0544d", "message": "add switch toggle to switch between SGI and GI", "committedDate": "2020-02-18T19:22:31Z", "type": "commit"}, {"oid": "02b1562b49ff1581b578491aa0798c5c15e4c6b2", "url": "https://github.com/ls1intum/Artemis/commit/02b1562b49ff1581b578491aa0798c5c15e4c6b2", "message": "add new switch toggle component to allow switching between SGI and GI", "committedDate": "2020-02-18T19:23:35Z", "type": "commit"}, {"oid": "f9c98e31d14d0c3a905434230143b982d989dff5", "url": "https://github.com/ls1intum/Artemis/commit/f9c98e31d14d0c3a905434230143b982d989dff5", "message": "merge develop into current branch", "committedDate": "2020-02-19T20:41:51Z", "type": "commit"}, {"oid": "52f20c3184bf4dbf56bd528ebb9461e3107a43d1", "url": "https://github.com/ls1intum/Artemis/commit/52f20c3184bf4dbf56bd528ebb9461e3107a43d1", "message": "adapt branch to new client structure", "committedDate": "2020-02-20T13:07:54Z", "type": "commit"}, {"oid": "693d2ca0cd3ea916167eff20cd24c6cbc20c902a", "url": "https://github.com/ls1intum/Artemis/commit/693d2ca0cd3ea916167eff20cd24c6cbc20c902a", "message": "merged develop into current branch", "committedDate": "2020-02-25T12:11:48Z", "type": "commit"}, {"oid": "81cba66bff97cb8f6206c1f3a4fe412f69bc5836", "url": "https://github.com/ls1intum/Artemis/commit/81cba66bff97cb8f6206c1f3a4fe412f69bc5836", "message": "fix merge", "committedDate": "2020-02-25T12:24:38Z", "type": "commit"}, {"oid": "fbe6a9f8c1bc01fdab0b5661d90cc9b1d011d0f0", "url": "https://github.com/ls1intum/Artemis/commit/fbe6a9f8c1bc01fdab0b5661d90cc9b1d011d0f0", "message": "add toggle between SGI and GI", "committedDate": "2020-02-25T14:47:59Z", "type": "commit"}, {"oid": "7d506301513f4872b8b411b383e1139b6edcb560", "url": "https://github.com/ls1intum/Artemis/commit/7d506301513f4872b8b411b383e1139b6edcb560", "message": "Add and enable save a new grading criteria entry", "committedDate": "2020-02-29T19:55:30Z", "type": "commit"}, {"oid": "e809902b9da2d71e6a3ff5857f01da42602502bc", "url": "https://github.com/ls1intum/Artemis/commit/e809902b9da2d71e6a3ff5857f01da42602502bc", "message": "display grading instructions of each criterion in the corresponding editor", "committedDate": "2020-03-01T15:35:52Z", "type": "commit"}, {"oid": "c4593109a97ff721b76861d4b9df19a96c5cb8fc", "url": "https://github.com/ls1intum/Artemis/commit/c4593109a97ff721b76861d4b9df19a96c5cb8fc", "message": "fix ts style", "committedDate": "2020-03-01T15:45:19Z", "type": "commit"}, {"oid": "7eee31991ef299b224832568c9cab666cfe11c28", "url": "https://github.com/ls1intum/Artemis/commit/7eee31991ef299b224832568c9cab666cfe11c28", "message": "enable editing the grading instructions of a criterion and saving them", "committedDate": "2020-03-01T18:41:43Z", "type": "commit"}, {"oid": "eb37730a951a9de8c38d82083ba4c00a0b5dac0b", "url": "https://github.com/ls1intum/Artemis/commit/eb37730a951a9de8c38d82083ba4c00a0b5dac0b", "message": "enable deleting a criteria and its corresponding instructions", "committedDate": "2020-03-01T19:57:55Z", "type": "commit"}, {"oid": "5807bb30689137b8206cc5dfcd50d902cae8c8a5", "url": "https://github.com/ls1intum/Artemis/commit/5807bb30689137b8206cc5dfcd50d902cae8c8a5", "message": "- when exercise has no criteria nor instructions then add a dummy element\n- add new element to instructions array when gradingCriteriaCommand is triggered", "committedDate": "2020-03-02T19:14:17Z", "type": "commit"}, {"oid": "e432af24f4f22f9ecfd8c6dd930a7d8edbf6f459", "url": "https://github.com/ls1intum/Artemis/commit/e432af24f4f22f9ecfd8c6dd930a7d8edbf6f459", "message": "modify generateMarkdown()", "committedDate": "2020-03-02T22:10:31Z", "type": "commit"}, {"oid": "a85a7bf0cefc7efa847d674357f93b53ef3cc0ab", "url": "https://github.com/ls1intum/Artemis/commit/a85a7bf0cefc7efa847d674357f93b53ef3cc0ab", "message": "small bug fix", "committedDate": "2020-03-02T22:47:43Z", "type": "commit"}, {"oid": "c1c014ea68c71049605c4e3e4085ca94cbf2c292", "url": "https://github.com/ls1intum/Artemis/commit/c1c014ea68c71049605c4e3e4085ca94cbf2c292", "message": "Merge remote-tracking branch 'remotes/origin/develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2020-03-02T22:55:12Z", "type": "commit"}, {"oid": "fa37c59949c899d9c8490494ff8130b3e8d5747b", "url": "https://github.com/ls1intum/Artemis/commit/fa37c59949c899d9c8490494ff8130b3e8d5747b", "message": "code refactoring", "committedDate": "2020-03-03T15:22:23Z", "type": "commit"}, {"oid": "cf9a59d3c4fd5138ddc20e1e9d9d50d5f6047db8", "url": "https://github.com/ls1intum/Artemis/commit/cf9a59d3c4fd5138ddc20e1e9d9d50d5f6047db8", "message": "- remove hiding the instruction command workaround by adding the displayCommand Flag.\n- modify the parsing method to allow adding instructions via the opening identifiers", "committedDate": "2020-03-05T12:39:10Z", "type": "commit"}, {"oid": "884c35e55964a82b7c6bd145687c15a61e7fc968", "url": "https://github.com/ls1intum/Artemis/commit/884c35e55964a82b7c6bd145687c15a61e7fc968", "message": "fix ts code style", "committedDate": "2020-03-05T12:43:18Z", "type": "commit"}, {"oid": "5d2d47cf1a534e6d1ad1bcda2c2855c613f8ea42", "url": "https://github.com/ls1intum/Artemis/commit/5d2d47cf1a534e6d1ad1bcda2c2855c613f8ea42", "message": "fix build", "committedDate": "2020-03-05T13:21:57Z", "type": "commit"}, {"oid": "ffb812e0ba6e8cd93136c2da7acf69c95676cc21", "url": "https://github.com/ls1intum/Artemis/commit/ffb812e0ba6e8cd93136c2da7acf69c95676cc21", "message": "add criterion markdown editor command", "committedDate": "2020-03-05T17:01:03Z", "type": "commit"}, {"oid": "76929fb037cc0e9c7d0bcbeae7fa73d7abfee582", "url": "https://github.com/ls1intum/Artemis/commit/76929fb037cc0e9c7d0bcbeae7fa73d7abfee582", "message": "delete edit-structured-grading-instruction component since it is required to only have one markdown editor for all criteria of an exercise", "committedDate": "2020-03-06T14:38:02Z", "type": "commit"}, {"oid": "a9b7bf827e6edecbcbe31f0aeb1a43c3d1ee1486", "url": "https://github.com/ls1intum/Artemis/commit/a9b7bf827e6edecbcbe31f0aeb1a43c3d1ee1486", "message": "-enable adding criteria and multiple instructions to a criterion in the markdown editor\n-differentiate between stand-alone instructions and instructions that belong to a criterion", "committedDate": "2020-03-07T23:54:08Z", "type": "commit"}, {"oid": "68e5f1dcf68c2cd3a8ed3f9eb66e19a138ee114b", "url": "https://github.com/ls1intum/Artemis/commit/68e5f1dcf68c2cd3a8ed3f9eb66e19a138ee114b", "message": "code cleanup", "committedDate": "2020-03-09T16:00:07Z", "type": "commit"}, {"oid": "01898c252cec4ab87d5d7b683b25215ba16fff6f", "url": "https://github.com/ls1intum/Artemis/commit/01898c252cec4ab87d5d7b683b25215ba16fff6f", "message": "Add SGI markdown editor Preview", "committedDate": "2020-03-09T18:55:28Z", "type": "commit"}, {"oid": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "url": "https://github.com/ls1intum/Artemis/commit/e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "message": "use htmlForMarkdown pipe in the SGI editor preview", "committedDate": "2020-03-10T09:56:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxNDQxNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391714415", "bodyText": "Do we need a separate module for this one component?", "author": "jpbernius", "createdAt": "2020-03-12T15:48:16Z", "path": "src/main/webapp/app/exercises/shared/slide-toggle/slide-toggle.module.ts", "diffHunk": "@@ -0,0 +1,11 @@\n+import { NgModule } from '@angular/core';\n+\n+import { ArtemisSharedModule } from 'app/shared/shared.module';\n+import { SlideToggleComponent } from 'app/exercises/shared/slide-toggle/slide-toggle.component';\n+\n+@NgModule({\n+    imports: [ArtemisSharedModule],\n+    declarations: [SlideToggleComponent],\n+    exports: [SlideToggleComponent],\n+})\n+export class ArtemisSlideToggleModule {}", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5NDgzNg==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r392394836", "bodyText": "Not really, I declared it in the shared module so different exercise types could use the slide toggle, thanks for pointing this out.", "author": "HanyaElhashemy", "createdAt": "2020-03-13T18:17:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxNDQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxNTA4Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391715082", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';", "author": "jpbernius", "createdAt": "2020-03-12T15:49:12Z", "path": "src/main/webapp/app/shared/markdown-editor/markdown-editor.component.ts", "diffHunk": "@@ -29,6 +29,7 @@ import { CodeCommand } from 'app/shared/markdown-editor/commands/code.command';\n import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n import { UnorderedListCommand } from 'app/shared/markdown-editor/commands/unorderedListCommand';\n import { HeadingThreeCommand } from 'app/shared/markdown-editor/commands/headingThree.command';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4ODY5Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391888693", "bodyText": "Do we need a separate module for this one component?", "author": "jpbernius", "createdAt": "2020-03-12T20:55:08Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/structured-grading-criterion.module.ts", "diffHunk": "@@ -0,0 +1,12 @@\n+import { NgModule } from '@angular/core';\n+import { CommonModule } from '@angular/common';\n+import { ArtemisSharedModule } from 'app/shared/shared.module';\n+import { ArtemisMarkdownEditorModule } from 'app/shared/markdown-editor/markdown-editor.module';\n+import { GradingInstructionsDetailsComponent } from 'app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts';\n+\n+@NgModule({\n+    declarations: [GradingInstructionsDetailsComponent],\n+    exports: [GradingInstructionsDetailsComponent],\n+    imports: [CommonModule, ArtemisSharedModule, ArtemisMarkdownEditorModule],\n+})\n+export class StructuredGradingCriterionModule {}", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5NzI1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r392397253", "bodyText": "Same like the slide toggle, I could declare the component in the shared module, but I would leave it like this for now if it is ok for you, because more components might be added in the future if we extended this feature further, for example, if we extended it with self- and peer review.", "author": "HanyaElhashemy", "createdAt": "2020-03-13T18:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4ODY5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MTQ0Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391891443", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }", "author": "jpbernius", "createdAt": "2020-03-12T21:01:19Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MTUxOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391891519", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }", "author": "jpbernius", "createdAt": "2020-03-12T21:01:28Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }\n+    generateMarkdown(): string {\n+        let markdownText = '';\n+        if (this.criteria === undefined || this.criteria.length === 0) {\n+            this.criteria = [];\n+            const newCriteria = new GradingCriterion();\n+            this.criteria.push(newCriteria);\n+        }\n+        for (const criterion of this.criteria) {\n+            if (criterion.title === null || criterion.title === undefined) {\n+                // if it is a dummy criterion, leave out the command identifier\n+                markdownText += this.generateInstructionsMarkdown(criterion);\n+            } else {\n+                markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);\n+            }\n+        }\n+        return markdownText;\n+    }", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MTY0MA==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391891640", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }", "author": "jpbernius", "createdAt": "2020-03-12T21:01:43Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }\n+    generateMarkdown(): string {\n+        let markdownText = '';\n+        if (this.criteria === undefined || this.criteria.length === 0) {\n+            this.criteria = [];\n+            const newCriteria = new GradingCriterion();\n+            this.criteria.push(newCriteria);\n+        }\n+        for (const criterion of this.criteria) {\n+            if (criterion.title === null || criterion.title === undefined) {\n+                // if it is a dummy criterion, leave out the command identifier\n+                markdownText += this.generateInstructionsMarkdown(criterion);\n+            } else {\n+                markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);\n+            }\n+        }\n+        return markdownText;\n+    }\n+    /**\n+     * @function generateMarkdown\n+     * @desc Generate the markdown text for this grading instruction\n+     */\n+    generateInstructionsMarkdown(criterion: GradingCriterion): string {\n+        let markdownText = '';\n+        if (criterion.structuredGradingInstructions === undefined || criterion.structuredGradingInstructions.length === 0) {\n+            this.instructions = [];\n+            const newInstruction = new GradingInstruction();\n+            this.instructions.push(newInstruction);\n+            criterion.structuredGradingInstructions = this.instructions;\n+        }\n+        for (const instruction of criterion.structuredGradingInstructions) {\n+            markdownText +=\n+                '[gradingInstruction]' +\n+                '\\n' +\n+                '\\t' +\n+                this.generateCreditsText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateGradingScaleText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionDescriptionText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionFeedback(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateUsageCount(instruction) +\n+                '\\n' +\n+                '\\n';\n+        }\n+        return markdownText;\n+    }\n+\n+    generateCreditsText(instruction: GradingInstruction): string {\n+        if (instruction.credits === undefined) {\n+            instruction.credits = parseFloat(CreditsCommand.text);\n+            return CreditsCommand.identifier + ' ' + CreditsCommand.text;\n+        }\n+        return CreditsCommand.identifier + ' ' + instruction.credits;\n+    }", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MTcwNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391891705", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }", "author": "jpbernius", "createdAt": "2020-03-12T21:01:52Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }\n+    generateMarkdown(): string {\n+        let markdownText = '';\n+        if (this.criteria === undefined || this.criteria.length === 0) {\n+            this.criteria = [];\n+            const newCriteria = new GradingCriterion();\n+            this.criteria.push(newCriteria);\n+        }\n+        for (const criterion of this.criteria) {\n+            if (criterion.title === null || criterion.title === undefined) {\n+                // if it is a dummy criterion, leave out the command identifier\n+                markdownText += this.generateInstructionsMarkdown(criterion);\n+            } else {\n+                markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);\n+            }\n+        }\n+        return markdownText;\n+    }\n+    /**\n+     * @function generateMarkdown\n+     * @desc Generate the markdown text for this grading instruction\n+     */\n+    generateInstructionsMarkdown(criterion: GradingCriterion): string {\n+        let markdownText = '';\n+        if (criterion.structuredGradingInstructions === undefined || criterion.structuredGradingInstructions.length === 0) {\n+            this.instructions = [];\n+            const newInstruction = new GradingInstruction();\n+            this.instructions.push(newInstruction);\n+            criterion.structuredGradingInstructions = this.instructions;\n+        }\n+        for (const instruction of criterion.structuredGradingInstructions) {\n+            markdownText +=\n+                '[gradingInstruction]' +\n+                '\\n' +\n+                '\\t' +\n+                this.generateCreditsText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateGradingScaleText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionDescriptionText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionFeedback(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateUsageCount(instruction) +\n+                '\\n' +\n+                '\\n';\n+        }\n+        return markdownText;\n+    }\n+\n+    generateCreditsText(instruction: GradingInstruction): string {\n+        if (instruction.credits === undefined) {\n+            instruction.credits = parseFloat(CreditsCommand.text);\n+            return CreditsCommand.identifier + ' ' + CreditsCommand.text;\n+        }\n+        return CreditsCommand.identifier + ' ' + instruction.credits;\n+    }\n+    generateGradingScaleText(instruction: GradingInstruction): string {\n+        if (instruction.gradingScale === undefined) {\n+            instruction.gradingScale = GradingScaleCommand.text;\n+            return GradingScaleCommand.identifier + ' ' + GradingScaleCommand.text;\n+        }\n+        return GradingScaleCommand.identifier + ' ' + instruction.gradingScale;\n+    }", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MTc5MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391891791", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }", "author": "jpbernius", "createdAt": "2020-03-12T21:02:04Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }\n+    generateMarkdown(): string {\n+        let markdownText = '';\n+        if (this.criteria === undefined || this.criteria.length === 0) {\n+            this.criteria = [];\n+            const newCriteria = new GradingCriterion();\n+            this.criteria.push(newCriteria);\n+        }\n+        for (const criterion of this.criteria) {\n+            if (criterion.title === null || criterion.title === undefined) {\n+                // if it is a dummy criterion, leave out the command identifier\n+                markdownText += this.generateInstructionsMarkdown(criterion);\n+            } else {\n+                markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);\n+            }\n+        }\n+        return markdownText;\n+    }\n+    /**\n+     * @function generateMarkdown\n+     * @desc Generate the markdown text for this grading instruction\n+     */\n+    generateInstructionsMarkdown(criterion: GradingCriterion): string {\n+        let markdownText = '';\n+        if (criterion.structuredGradingInstructions === undefined || criterion.structuredGradingInstructions.length === 0) {\n+            this.instructions = [];\n+            const newInstruction = new GradingInstruction();\n+            this.instructions.push(newInstruction);\n+            criterion.structuredGradingInstructions = this.instructions;\n+        }\n+        for (const instruction of criterion.structuredGradingInstructions) {\n+            markdownText +=\n+                '[gradingInstruction]' +\n+                '\\n' +\n+                '\\t' +\n+                this.generateCreditsText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateGradingScaleText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionDescriptionText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionFeedback(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateUsageCount(instruction) +\n+                '\\n' +\n+                '\\n';\n+        }\n+        return markdownText;\n+    }\n+\n+    generateCreditsText(instruction: GradingInstruction): string {\n+        if (instruction.credits === undefined) {\n+            instruction.credits = parseFloat(CreditsCommand.text);\n+            return CreditsCommand.identifier + ' ' + CreditsCommand.text;\n+        }\n+        return CreditsCommand.identifier + ' ' + instruction.credits;\n+    }\n+    generateGradingScaleText(instruction: GradingInstruction): string {\n+        if (instruction.gradingScale === undefined) {\n+            instruction.gradingScale = GradingScaleCommand.text;\n+            return GradingScaleCommand.identifier + ' ' + GradingScaleCommand.text;\n+        }\n+        return GradingScaleCommand.identifier + ' ' + instruction.gradingScale;\n+    }\n+    generateInstructionDescriptionText(instruction: GradingInstruction): string {\n+        if (instruction.instructionDescription === undefined) {\n+            instruction.instructionDescription = InstructionDescriptionCommand.text;\n+            return InstructionDescriptionCommand.identifier + ' ' + InstructionDescriptionCommand.text;\n+        }\n+        return InstructionDescriptionCommand.identifier + ' ' + instruction.instructionDescription;\n+    }\n+\n+    generateInstructionFeedback(instruction: GradingInstruction): string {\n+        if (instruction.feedback === undefined) {\n+            instruction.feedback = FeedbackCommand.text;\n+            return FeedbackCommand.identifier + ' ' + FeedbackCommand.text;\n+        }\n+        return FeedbackCommand.identifier + ' ' + instruction.feedback;\n+    }\n+\n+    generateUsageCount(instruction: GradingInstruction): string {\n+        if (instruction.usageCount === undefined) {\n+            instruction.usageCount = parseInt(UsageCountCommand.text, 10);\n+            return UsageCountCommand.identifier + ' ' + UsageCountCommand.text;\n+        }\n+        return UsageCountCommand.identifier + ' ' + instruction.usageCount;\n+    }\n+\n+    prepareForSave(): void {\n+        this.markdownEditor.parse();\n+    }\n+\n+    hasCriterionCommand(domainCommands: [string, DomainCommand][]): boolean {\n+        for (const [text, command] of domainCommands) {\n+            if (command instanceof GradingCriterionCommand) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * @function createSubInstructionCommands\n+     * @desc 1. divides the input: domainCommands in two subarrays:\n+     *          instructionCommands, which consists of all stand-alone instructions\n+     *          criteriaCommands, which consists of instructions that belong to a criterion\n+     *       2. for each subarrray a method is called to create the criterion and instruction objects\n+     * @param domainCommands containing tuples of [text, domainCommandIdentifiers]\n+     */\n+    createSubInstructionCommands(domainCommands: [string, DomainCommand][]): void {\n+        let instructionCommands;\n+        let criteriaCommands;\n+        let endOfInstructionsCommand = 0;\n+        if (this.hasCriterionCommand(domainCommands) === false) {\n+            this.setParentForInstructionsWithNoCriterion(domainCommands);\n+        } else {\n+            for (const [text, command] of domainCommands) {\n+                endOfInstructionsCommand++;\n+                if (command instanceof GradingCriterionCommand) {\n+                    instructionCommands = domainCommands.slice(0, endOfInstructionsCommand - 1);\n+                    if (instructionCommands.length !== 0) {\n+                        this.setParentForInstructionsWithNoCriterion(instructionCommands);\n+                    }\n+                    criteriaCommands = domainCommands.slice(endOfInstructionsCommand - 1);\n+                    if (criteriaCommands.length !== 0) {\n+                        this.instructions = []; // resets the instructions array to be filled with the instructions of the criteria\n+                        this.groupInstructionsToCriteria(criteriaCommands); // creates criterion object for each criterion and their corresponding instruction objects\n+                    }\n+                    break;\n+                }\n+            }\n+        }\n+    }", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5NDEwMA==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391894100", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            '[gradingInstruction]' +\n          \n          \n            \n                            GradingCriterionCommand.identifier +", "author": "jpbernius", "createdAt": "2020-03-12T21:07:10Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }\n+    generateMarkdown(): string {\n+        let markdownText = '';\n+        if (this.criteria === undefined || this.criteria.length === 0) {\n+            this.criteria = [];\n+            const newCriteria = new GradingCriterion();\n+            this.criteria.push(newCriteria);\n+        }\n+        for (const criterion of this.criteria) {\n+            if (criterion.title === null || criterion.title === undefined) {\n+                // if it is a dummy criterion, leave out the command identifier\n+                markdownText += this.generateInstructionsMarkdown(criterion);\n+            } else {\n+                markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);\n+            }\n+        }\n+        return markdownText;\n+    }\n+    /**\n+     * @function generateMarkdown\n+     * @desc Generate the markdown text for this grading instruction\n+     */\n+    generateInstructionsMarkdown(criterion: GradingCriterion): string {\n+        let markdownText = '';\n+        if (criterion.structuredGradingInstructions === undefined || criterion.structuredGradingInstructions.length === 0) {\n+            this.instructions = [];\n+            const newInstruction = new GradingInstruction();\n+            this.instructions.push(newInstruction);\n+            criterion.structuredGradingInstructions = this.instructions;\n+        }\n+        for (const instruction of criterion.structuredGradingInstructions) {\n+            markdownText +=\n+                '[gradingInstruction]' +", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5NDQxMA==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391894410", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);\n          \n          \n            \n                            markdownText += GradingCriterionCommand.identifier + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);", "author": "jpbernius", "createdAt": "2020-03-12T21:07:51Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }\n+    generateMarkdown(): string {\n+        let markdownText = '';\n+        if (this.criteria === undefined || this.criteria.length === 0) {\n+            this.criteria = [];\n+            const newCriteria = new GradingCriterion();\n+            this.criteria.push(newCriteria);\n+        }\n+        for (const criterion of this.criteria) {\n+            if (criterion.title === null || criterion.title === undefined) {\n+                // if it is a dummy criterion, leave out the command identifier\n+                markdownText += this.generateInstructionsMarkdown(criterion);\n+            } else {\n+                markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5NjQ4MA==", "url": "https://github.com/ls1intum/Artemis/pull/1269#discussion_r391896480", "bodyText": "Could this work?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (const [text, command] of domainCommands) {\n          \n          \n            \n                        if (command instanceof GradingCriterionCommand) {\n          \n          \n            \n                            return true;\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    return false;\n          \n          \n            \n                    return domainCommands.some(([text, command]) => command instanceof GradingCriterionCommand);", "author": "jpbernius", "createdAt": "2020-03-12T21:12:36Z", "path": "src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts", "diffHunk": "@@ -0,0 +1,279 @@\n+import { Component, OnInit, Input, ViewChild } from '@angular/core';\n+import { GradingCriterion } from 'app/exercises/shared/structured-grading-criterion/grading-criterion.model';\n+import { KatexCommand } from 'app/shared/markdown-editor/commands/katex.command';\n+import { UsageCountCommand } from 'app/shared/markdown-editor/domainCommands/usageCount.command';\n+import { CreditsCommand } from 'app/shared/markdown-editor/domainCommands/credits.command';\n+import { FeedbackCommand } from 'app/shared/markdown-editor/domainCommands/feedback.command';\n+import { DomainCommand } from 'app/shared/markdown-editor/domainCommands/domainCommand';\n+import { MarkdownEditorComponent } from 'app/shared/markdown-editor/markdown-editor.component';\n+import { GradingInstruction } from 'app/exercises/shared/structured-grading-criterion/grading-instruction.model';\n+import { GradingScaleCommand } from 'app/shared/markdown-editor/domainCommands/gradingScaleCommand';\n+import { GradingInstructionCommand } from 'app/shared/markdown-editor/domainCommands/gradingInstruction.command';\n+import { InstructionDescriptionCommand } from 'app/shared/markdown-editor/domainCommands/instructionDescription.command';\n+import { GradingCriterionCommand } from 'app/shared/markdown-editor/domainCommands/gradingCriterionCommand';\n+import { Exercise } from 'app/entities/exercise.model';\n+@Component({\n+    selector: 'jhi-grading-instructions-details',\n+    templateUrl: './grading-instructions-details.component.html',\n+})\n+export class GradingInstructionsDetailsComponent implements OnInit {\n+    /** Ace Editor configuration constants **/\n+    questionEditorText = '';\n+    @ViewChild('markdownEditor', { static: false })\n+    private markdownEditor: MarkdownEditorComponent;\n+    @Input()\n+    exercise: Exercise;\n+    private instructions: GradingInstruction[];\n+    private criteria: GradingCriterion[];\n+\n+    gradingCriterionCommand = new GradingCriterionCommand();\n+    gradingInstructionCommand = new GradingInstructionCommand();\n+    creditsCommand = new CreditsCommand();\n+    gradingScaleCommand = new GradingScaleCommand();\n+    instructionDescriptionCommand = new InstructionDescriptionCommand();\n+    feedbackCommand = new FeedbackCommand();\n+    usageCountCommand = new UsageCountCommand();\n+\n+    domainCommands: DomainCommand[] = [\n+        this.creditsCommand,\n+        this.gradingScaleCommand,\n+        this.instructionDescriptionCommand,\n+        this.feedbackCommand,\n+        this.usageCountCommand,\n+        this.gradingCriterionCommand,\n+        this.gradingInstructionCommand,\n+    ];\n+\n+    constructor() {}\n+\n+    ngOnInit() {\n+        this.criteria = this.exercise.gradingCriteria;\n+        this.questionEditorText = this.generateMarkdown();\n+    }\n+    generateMarkdown(): string {\n+        let markdownText = '';\n+        if (this.criteria === undefined || this.criteria.length === 0) {\n+            this.criteria = [];\n+            const newCriteria = new GradingCriterion();\n+            this.criteria.push(newCriteria);\n+        }\n+        for (const criterion of this.criteria) {\n+            if (criterion.title === null || criterion.title === undefined) {\n+                // if it is a dummy criterion, leave out the command identifier\n+                markdownText += this.generateInstructionsMarkdown(criterion);\n+            } else {\n+                markdownText += '[gradingCriterion]' + criterion.title + '\\n' + '\\t' + this.generateInstructionsMarkdown(criterion);\n+            }\n+        }\n+        return markdownText;\n+    }\n+    /**\n+     * @function generateMarkdown\n+     * @desc Generate the markdown text for this grading instruction\n+     */\n+    generateInstructionsMarkdown(criterion: GradingCriterion): string {\n+        let markdownText = '';\n+        if (criterion.structuredGradingInstructions === undefined || criterion.structuredGradingInstructions.length === 0) {\n+            this.instructions = [];\n+            const newInstruction = new GradingInstruction();\n+            this.instructions.push(newInstruction);\n+            criterion.structuredGradingInstructions = this.instructions;\n+        }\n+        for (const instruction of criterion.structuredGradingInstructions) {\n+            markdownText +=\n+                '[gradingInstruction]' +\n+                '\\n' +\n+                '\\t' +\n+                this.generateCreditsText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateGradingScaleText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionDescriptionText(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateInstructionFeedback(instruction) +\n+                '\\n' +\n+                '\\t' +\n+                this.generateUsageCount(instruction) +\n+                '\\n' +\n+                '\\n';\n+        }\n+        return markdownText;\n+    }\n+\n+    generateCreditsText(instruction: GradingInstruction): string {\n+        if (instruction.credits === undefined) {\n+            instruction.credits = parseFloat(CreditsCommand.text);\n+            return CreditsCommand.identifier + ' ' + CreditsCommand.text;\n+        }\n+        return CreditsCommand.identifier + ' ' + instruction.credits;\n+    }\n+    generateGradingScaleText(instruction: GradingInstruction): string {\n+        if (instruction.gradingScale === undefined) {\n+            instruction.gradingScale = GradingScaleCommand.text;\n+            return GradingScaleCommand.identifier + ' ' + GradingScaleCommand.text;\n+        }\n+        return GradingScaleCommand.identifier + ' ' + instruction.gradingScale;\n+    }\n+    generateInstructionDescriptionText(instruction: GradingInstruction): string {\n+        if (instruction.instructionDescription === undefined) {\n+            instruction.instructionDescription = InstructionDescriptionCommand.text;\n+            return InstructionDescriptionCommand.identifier + ' ' + InstructionDescriptionCommand.text;\n+        }\n+        return InstructionDescriptionCommand.identifier + ' ' + instruction.instructionDescription;\n+    }\n+\n+    generateInstructionFeedback(instruction: GradingInstruction): string {\n+        if (instruction.feedback === undefined) {\n+            instruction.feedback = FeedbackCommand.text;\n+            return FeedbackCommand.identifier + ' ' + FeedbackCommand.text;\n+        }\n+        return FeedbackCommand.identifier + ' ' + instruction.feedback;\n+    }\n+\n+    generateUsageCount(instruction: GradingInstruction): string {\n+        if (instruction.usageCount === undefined) {\n+            instruction.usageCount = parseInt(UsageCountCommand.text, 10);\n+            return UsageCountCommand.identifier + ' ' + UsageCountCommand.text;\n+        }\n+        return UsageCountCommand.identifier + ' ' + instruction.usageCount;\n+    }\n+\n+    prepareForSave(): void {\n+        this.markdownEditor.parse();\n+    }\n+\n+    hasCriterionCommand(domainCommands: [string, DomainCommand][]): boolean {\n+        for (const [text, command] of domainCommands) {\n+            if (command instanceof GradingCriterionCommand) {\n+                return true;\n+            }\n+        }\n+        return false;", "originalCommit": "e6ae024e52cfab3b7f6b2179fbb20a2fccd8f97e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "041e1b5d401625bae53478b5905511394936fe1a", "url": "https://github.com/ls1intum/Artemis/commit/041e1b5d401625bae53478b5905511394936fe1a", "message": "Update src/main/webapp/app/shared/markdown-editor/markdown-editor.component.ts\r\n\r\nremove unused import\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:13:46Z", "type": "commit"}, {"oid": "d415031be7f22599ebaa8d05729553ca76f3e8a6", "url": "https://github.com/ls1intum/Artemis/commit/d415031be7f22599ebaa8d05729553ca76f3e8a6", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nadjust code style\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:14:23Z", "type": "commit"}, {"oid": "90b5933c0fc22bfd761b8a45016f89f66084fe86", "url": "https://github.com/ls1intum/Artemis/commit/90b5933c0fc22bfd761b8a45016f89f66084fe86", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nadjust code style\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:14:39Z", "type": "commit"}, {"oid": "a523594628dd1d0c53b5ace487e80c5b18f37a57", "url": "https://github.com/ls1intum/Artemis/commit/a523594628dd1d0c53b5ace487e80c5b18f37a57", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nadjust code style\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:15:15Z", "type": "commit"}, {"oid": "594d6bed02f0a233ae2ca77699a1acdbff488796", "url": "https://github.com/ls1intum/Artemis/commit/594d6bed02f0a233ae2ca77699a1acdbff488796", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nadjust code style\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:15:43Z", "type": "commit"}, {"oid": "502daf3feedf771034f27847e7fca214433aa50a", "url": "https://github.com/ls1intum/Artemis/commit/502daf3feedf771034f27847e7fca214433aa50a", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nadjust code style\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:16:02Z", "type": "commit"}, {"oid": "1a494898e113bb6f89985cb0b5b6f511227aab45", "url": "https://github.com/ls1intum/Artemis/commit/1a494898e113bb6f89985cb0b5b6f511227aab45", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nuse GradingCriterionCommand.identifier property instead of a hardcoded string\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:19:03Z", "type": "commit"}, {"oid": "ac067a50506d0dfc602380732864c7d7e27aa8d0", "url": "https://github.com/ls1intum/Artemis/commit/ac067a50506d0dfc602380732864c7d7e27aa8d0", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nuse GradingCriterionCommand.identifier property instead of a hardcoded string\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:20:02Z", "type": "commit"}, {"oid": "15979871b5415d46164a8801989429a856429339", "url": "https://github.com/ls1intum/Artemis/commit/15979871b5415d46164a8801989429a856429339", "message": "Update src/main/webapp/app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component.ts\r\n\r\nuse JavaScript: Array.some()\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T13:27:21Z", "type": "commit"}, {"oid": "5519af5be09bf789a7532776c8e303e80679d264", "url": "https://github.com/ls1intum/Artemis/commit/5519af5be09bf789a7532776c8e303e80679d264", "message": "small fix", "committedDate": "2020-03-13T14:06:52Z", "type": "commit"}, {"oid": "26432c0b4d1f33250a905f5d6f20a03808a00ad3", "url": "https://github.com/ls1intum/Artemis/commit/26432c0b4d1f33250a905f5d6f20a03808a00ad3", "message": "Merge remote-tracking branch 'origin/develop' into feature/grading-instructions/modify-markdown-editor-for-SGI", "committedDate": "2020-03-13T17:37:36Z", "type": "commit"}, {"oid": "b7cf6c4c926484fc37a9260122219d15a92c8c4c", "url": "https://github.com/ls1intum/Artemis/commit/b7cf6c4c926484fc37a9260122219d15a92c8c4c", "message": "remove slide toggle module and declare component in shared module", "committedDate": "2020-03-13T18:10:25Z", "type": "commit"}, {"oid": "4c08cdad8b7027d28d4f0f3d01a375a32b4e092b", "url": "https://github.com/ls1intum/Artemis/commit/4c08cdad8b7027d28d4f0f3d01a375a32b4e092b", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor-for-SGI", "committedDate": "2020-03-16T10:23:19Z", "type": "commit"}, {"oid": "5267bfbe1971ad03be9795149eabbe0dda7bf7ef", "url": "https://github.com/ls1intum/Artemis/commit/5267bfbe1971ad03be9795149eabbe0dda7bf7ef", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor-for-SGI", "committedDate": "2020-03-16T14:37:27Z", "type": "commit"}, {"oid": "ca913e2f73d6d46f85f8897de98faee80205d4ae", "url": "https://github.com/ls1intum/Artemis/commit/ca913e2f73d6d46f85f8897de98faee80205d4ae", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor-for-SGI", "committedDate": "2020-03-16T23:06:19Z", "type": "commit"}, {"oid": "af04dff38e048432a213339d10b1c61b3031bdf7", "url": "https://github.com/ls1intum/Artemis/commit/af04dff38e048432a213339d10b1c61b3031bdf7", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor-for-SGI", "committedDate": "2020-03-17T18:04:40Z", "type": "commit"}, {"oid": "9cb54749a43d065b283841954236bd407ec757db", "url": "https://github.com/ls1intum/Artemis/commit/9cb54749a43d065b283841954236bd407ec757db", "message": "Add missing Import Statment\n\nSigned-off-by: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-17T18:09:57Z", "type": "commit"}, {"oid": "6ee7152b6cf44cd5ff81253262109b01ed945088", "url": "https://github.com/ls1intum/Artemis/commit/6ee7152b6cf44cd5ff81253262109b01ed945088", "message": "adding command buttons to grading instructions editor", "committedDate": "2019-10-29T15:44:10Z", "type": "commit"}, {"oid": "47e6c9bf0a047c08635cf72c7776381a51a88b5e", "url": "https://github.com/ls1intum/Artemis/commit/47e6c9bf0a047c08635cf72c7776381a51a88b5e", "message": " adding structured grading instruction component", "committedDate": "2019-10-29T17:17:58Z", "type": "commit"}, {"oid": "3abb02fbe7fd1f371e34b473f153e47ea33b1f7d", "url": "https://github.com/ls1intum/Artemis/commit/3abb02fbe7fd1f371e34b473f153e47ea33b1f7d", "message": " added HTML for structured grading instructions", "committedDate": "2019-11-02T20:50:21Z", "type": "commit"}, {"oid": "6af54b23390ca834339ca6866f6112ba1becd9b6", "url": "https://github.com/ls1intum/Artemis/commit/6af54b23390ca834339ca6866f6112ba1becd9b6", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2019-11-02T20:50:47Z", "type": "commit"}, {"oid": "fdde4c60536b7ae0cac1c3479e01962285cfacee", "url": "https://github.com/ls1intum/Artemis/commit/fdde4c60536b7ae0cac1c3479e01962285cfacee", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2019-11-03T16:48:20Z", "type": "commit"}, {"oid": "071dc9939fc9b4dd8f66c1ca42ee987bae887df2", "url": "https://github.com/ls1intum/Artemis/commit/071dc9939fc9b4dd8f66c1ca42ee987bae887df2", "message": "adding html component to grading instruction editor", "committedDate": "2019-11-11T08:23:47Z", "type": "commit"}, {"oid": "7cca7102c0696f25cd67b1df4996710b13327547", "url": "https://github.com/ls1intum/Artemis/commit/7cca7102c0696f25cd67b1df4996710b13327547", "message": "merged develop", "committedDate": "2019-11-11T13:08:41Z", "type": "commit"}, {"oid": "77a21c2a70b9e5b5500a297928154e162d34edfe", "url": "https://github.com/ls1intum/Artemis/commit/77a21c2a70b9e5b5500a297928154e162d34edfe", "message": "combining all 4 commands to one command", "committedDate": "2019-11-11T16:09:19Z", "type": "commit"}, {"oid": "9dc3bed59d3206d1be09334d2346071b587478e4", "url": "https://github.com/ls1intum/Artemis/commit/9dc3bed59d3206d1be09334d2346071b587478e4", "message": "adding assessment-instructions model", "committedDate": "2019-11-19T12:25:25Z", "type": "commit"}, {"oid": "258fad5db3ccf4b1e2a9d459b8c37a21431f477e", "url": "https://github.com/ls1intum/Artemis/commit/258fad5db3ccf4b1e2a9d459b8c37a21431f477e", "message": "merge develop", "committedDate": "2019-11-25T17:59:29Z", "type": "commit"}, {"oid": "2a37b48e58a581c3e9ac24328e9d4a87cb65b077", "url": "https://github.com/ls1intum/Artemis/commit/2a37b48e58a581c3e9ac24328e9d4a87cb65b077", "message": "merged", "committedDate": "2019-12-09T13:14:13Z", "type": "commit"}, {"oid": "928f94f99565ed0fc8dca25ed7b192919d2c68a2", "url": "https://github.com/ls1intum/Artemis/commit/928f94f99565ed0fc8dca25ed7b192919d2c68a2", "message": "merge", "committedDate": "2019-12-09T13:21:00Z", "type": "commit"}, {"oid": "a1d2575758cb586e5cbe25fcb69b11e2eca32e83", "url": "https://github.com/ls1intum/Artemis/commit/a1d2575758cb586e5cbe25fcb69b11e2eca32e83", "message": "merge", "committedDate": "2019-12-09T16:06:23Z", "type": "commit"}, {"oid": "1fa9068a1d556f97636a99c826b3b8ba6bf37d00", "url": "https://github.com/ls1intum/Artemis/commit/1fa9068a1d556f97636a99c826b3b8ba6bf37d00", "message": "code refactoring", "committedDate": "2019-12-10T10:59:19Z", "type": "commit"}, {"oid": "4f0ca2bac1bd6fa2035bdc3dd56a6867e39845f5", "url": "https://github.com/ls1intum/Artemis/commit/4f0ca2bac1bd6fa2035bdc3dd56a6867e39845f5", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2019-12-10T11:02:39Z", "type": "commit"}, {"oid": "18065a3c9f5328b8b2078493af6dcff0d30f6d80", "url": "https://github.com/ls1intum/Artemis/commit/18065a3c9f5328b8b2078493af6dcff0d30f6d80", "message": "code refactoring", "committedDate": "2019-12-10T11:33:49Z", "type": "commit"}, {"oid": "6a1ac8ba931eeef62309cf29876c88a31dcf8ee8", "url": "https://github.com/ls1intum/Artemis/commit/6a1ac8ba931eeef62309cf29876c88a31dcf8ee8", "message": "add changelog of new mysql table: grading_instruction", "committedDate": "2019-12-10T16:18:05Z", "type": "commit"}, {"oid": "adbcaf54a237d00c0acc555f94edef65cfd8505e", "url": "https://github.com/ls1intum/Artemis/commit/adbcaf54a237d00c0acc555f94edef65cfd8505e", "message": " adding controller, repository and service for grading_instruction", "committedDate": "2019-12-10T19:02:09Z", "type": "commit"}, {"oid": "9860e54f3ceb5ada0a0d8434540f9c815ac09018", "url": "https://github.com/ls1intum/Artemis/commit/9860e54f3ceb5ada0a0d8434540f9c815ac09018", "message": "add domain objects (entities)", "committedDate": "2019-12-11T19:03:03Z", "type": "commit"}, {"oid": "e1014dae99a319bb77195bbf2adb0f11b9e511f7", "url": "https://github.com/ls1intum/Artemis/commit/e1014dae99a319bb77195bbf2adb0f11b9e511f7", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2019-12-11T19:15:57Z", "type": "commit"}, {"oid": "b7520bcce521d2968d17af7a53f4b60d453bac54", "url": "https://github.com/ls1intum/Artemis/commit/b7520bcce521d2968d17af7a53f4b60d453bac54", "message": " implemented get, create, delete and update method for grading instruction", "committedDate": "2019-12-13T14:39:42Z", "type": "commit"}, {"oid": "017f21ddc23cc71270466501a141c3fe8bda9898", "url": "https://github.com/ls1intum/Artemis/commit/017f21ddc23cc71270466501a141c3fe8bda9898", "message": "resolve java code style issue", "committedDate": "2019-12-13T14:46:03Z", "type": "commit"}, {"oid": "3507c85fbbe54a9c2d2ac6e6588b68532ea3722a", "url": "https://github.com/ls1intum/Artemis/commit/3507c85fbbe54a9c2d2ac6e6588b68532ea3722a", "message": "fix java code style", "committedDate": "2019-12-13T16:54:51Z", "type": "commit"}, {"oid": "737db6b5203bf1881eb002c15816ce073c843ca5", "url": "https://github.com/ls1intum/Artemis/commit/737db6b5203bf1881eb002c15816ce073c843ca5", "message": "revert changes", "committedDate": "2019-12-13T18:03:30Z", "type": "commit"}, {"oid": "4ea55ed011d5dee8658562f66576a560e4d73441", "url": "https://github.com/ls1intum/Artemis/commit/4ea55ed011d5dee8658562f66576a560e4d73441", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2019-12-13T18:22:26Z", "type": "commit"}, {"oid": "2a49ec1083420b733b39664860a42eda5fbb8493", "url": "https://github.com/ls1intum/Artemis/commit/2a49ec1083420b733b39664860a42eda5fbb8493", "message": "fix encoding", "committedDate": "2019-12-13T19:02:06Z", "type": "commit"}, {"oid": "5c251ba553ffd5477c1be3322c4bd219d51a6855", "url": "https://github.com/ls1intum/Artemis/commit/5c251ba553ffd5477c1be3322c4bd219d51a6855", "message": "fix java coding style", "committedDate": "2019-12-13T19:06:40Z", "type": "commit"}, {"oid": "9b281867c777ef93dcd9fe514b94e1937d394b5d", "url": "https://github.com/ls1intum/Artemis/commit/9b281867c777ef93dcd9fe514b94e1937d394b5d", "message": "add authorization check for delete method", "committedDate": "2019-12-14T14:37:10Z", "type": "commit"}, {"oid": "fa766a3225aa59f35550896494b8a94542824d69", "url": "https://github.com/ls1intum/Artemis/commit/fa766a3225aa59f35550896494b8a94542824d69", "message": "test case for creating grading instruction", "committedDate": "2019-12-15T17:21:12Z", "type": "commit"}, {"oid": "cc8254b661c0d19bf56383e8defb7b31a5a4a51d", "url": "https://github.com/ls1intum/Artemis/commit/cc8254b661c0d19bf56383e8defb7b31a5a4a51d", "message": " add test case for deleting grading instructions", "committedDate": "2019-12-16T17:42:20Z", "type": "commit"}, {"oid": "d8c32e91793df4305c37e7e7262ffca35009c719", "url": "https://github.com/ls1intum/Artemis/commit/d8c32e91793df4305c37e7e7262ffca35009c719", "message": "test that students don't get information about grading instructions", "committedDate": "2019-12-16T19:08:47Z", "type": "commit"}, {"oid": "8123d24e95cfb93ea8f74624b120d1936ddbce49", "url": "https://github.com/ls1intum/Artemis/commit/8123d24e95cfb93ea8f74624b120d1936ddbce49", "message": "merge develop", "committedDate": "2019-12-16T19:13:28Z", "type": "commit"}, {"oid": "368e9f1f48a57805850250e37f9db1e2d14bf87a", "url": "https://github.com/ls1intum/Artemis/commit/368e9f1f48a57805850250e37f9db1e2d14bf87a", "message": "code cleanup", "committedDate": "2019-12-16T20:02:49Z", "type": "commit"}, {"oid": "5cb609fddb7145caf9759cad3c70e8dd1f45b89e", "url": "https://github.com/ls1intum/Artemis/commit/5cb609fddb7145caf9759cad3c70e8dd1f45b89e", "message": "make url consistent", "committedDate": "2019-12-16T21:00:08Z", "type": "commit"}, {"oid": "0a5d63f1a61ff7b4a7cff2270188dfad46e695d4", "url": "https://github.com/ls1intum/Artemis/commit/0a5d63f1a61ff7b4a7cff2270188dfad46e695d4", "message": "remove transactional annotation and all other redundant spring annotaions", "committedDate": "2019-12-16T21:56:52Z", "type": "commit"}, {"oid": "43e56aa750135b673ca1933d05bff731af14897e", "url": "https://github.com/ls1intum/Artemis/commit/43e56aa750135b673ca1933d05bff731af14897e", "message": "fix java code style", "committedDate": "2019-12-16T22:01:26Z", "type": "commit"}, {"oid": "02cbd3c6bda09a4631029a05c570519df0425de1", "url": "https://github.com/ls1intum/Artemis/commit/02cbd3c6bda09a4631029a05c570519df0425de1", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2019-12-23T20:20:47Z", "type": "commit"}, {"oid": "439ec46d9ce1578e2ee6c8b15a5a9577ab2b83ed", "url": "https://github.com/ls1intum/Artemis/commit/439ec46d9ce1578e2ee6c8b15a5a9577ab2b83ed", "message": "merge develop", "committedDate": "2020-01-02T12:04:54Z", "type": "commit"}, {"oid": "754203440cebf9738310543842a8f05b4bd678a9", "url": "https://github.com/ls1intum/Artemis/commit/754203440cebf9738310543842a8f05b4bd678a9", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-05T16:16:48Z", "type": "commit"}, {"oid": "b2bc6801efeec283c5c0d51201f2af4c15c1fed5", "url": "https://github.com/ls1intum/Artemis/commit/b2bc6801efeec283c5c0d51201f2af4c15c1fed5", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-07T10:10:25Z", "type": "commit"}, {"oid": "32b5d454f2a741762ee09d976364b07e38501055", "url": "https://github.com/ls1intum/Artemis/commit/32b5d454f2a741762ee09d976364b07e38501055", "message": "rename level to grading_scale", "committedDate": "2020-01-07T10:58:40Z", "type": "commit"}, {"oid": "3d229bbd8788a0fb5ebb006824b68f5cfbe6ee33", "url": "https://github.com/ls1intum/Artemis/commit/3d229bbd8788a0fb5ebb006824b68f5cfbe6ee33", "message": "adjusting javaDoc", "committedDate": "2020-01-07T13:42:43Z", "type": "commit"}, {"oid": "c3e7f7449cc72ab0d4082f9d9e8f4a00f7d74476", "url": "https://github.com/ls1intum/Artemis/commit/c3e7f7449cc72ab0d4082f9d9e8f4a00f7d74476", "message": "Use plural for route's entities (naming convention)", "committedDate": "2020-01-07T17:36:17Z", "type": "commit"}, {"oid": "d397735ba53f00ea1d3a9db0dddc1b73729d197d", "url": "https://github.com/ls1intum/Artemis/commit/d397735ba53f00ea1d3a9db0dddc1b73729d197d", "message": "renaming \u0096GradingInstructionTest to GradingInstructionIntegrationTest", "committedDate": "2020-01-07T17:42:57Z", "type": "commit"}, {"oid": "b2e032755f6c325da13dfcc8324469c561ff69ab", "url": "https://github.com/ls1intum/Artemis/commit/b2e032755f6c325da13dfcc8324469c561ff69ab", "message": " on delete of exercises delete all its grading instructions", "committedDate": "2020-01-07T18:27:41Z", "type": "commit"}, {"oid": "d105c3425eafd187b8c59746dfdd11401e776969", "url": "https://github.com/ls1intum/Artemis/commit/d105c3425eafd187b8c59746dfdd11401e776969", "message": "adjust to naming convention", "committedDate": "2020-01-07T18:39:58Z", "type": "commit"}, {"oid": "a3b6b06538718abdb18a1e0c864dabf91180b400", "url": "https://github.com/ls1intum/Artemis/commit/a3b6b06538718abdb18a1e0c864dabf91180b400", "message": "remove redundant db query", "committedDate": "2020-01-07T19:00:07Z", "type": "commit"}, {"oid": "10c32cd456049bc05e91c1b4d4ca1974bd57396a", "url": "https://github.com/ls1intum/Artemis/commit/10c32cd456049bc05e91c1b4d4ca1974bd57396a", "message": "fix java code style", "committedDate": "2020-01-07T19:05:29Z", "type": "commit"}, {"oid": "08636aaf69ad09804b995f2fa84a9c843d1a0c9b", "url": "https://github.com/ls1intum/Artemis/commit/08636aaf69ad09804b995f2fa84a9c843d1a0c9b", "message": "adjust route in integration test", "committedDate": "2020-01-07T19:19:43Z", "type": "commit"}, {"oid": "779e811734244268ea4b7352ec4e279536584f07", "url": "https://github.com/ls1intum/Artemis/commit/779e811734244268ea4b7352ec4e279536584f07", "message": "remove api_basic", "committedDate": "2020-01-08T13:11:41Z", "type": "commit"}, {"oid": "5022ea5a1f26198b10dc2d19ab71b2bba52c632c", "url": "https://github.com/ls1intum/Artemis/commit/5022ea5a1f26198b10dc2d19ab71b2bba52c632c", "message": "change credits type to primitive", "committedDate": "2020-01-08T13:32:33Z", "type": "commit"}, {"oid": "6b7e6c3e083e2a700944223e92b9c67e44a37ef6", "url": "https://github.com/ls1intum/Artemis/commit/6b7e6c3e083e2a700944223e92b9c67e44a37ef6", "message": "remove security at class level", "committedDate": "2020-01-08T13:44:01Z", "type": "commit"}, {"oid": "2958553639f6ef2da9666768a9e27da8baac1613", "url": "https://github.com/ls1intum/Artemis/commit/2958553639f6ef2da9666768a9e27da8baac1613", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-08T13:48:36Z", "type": "commit"}, {"oid": "3d333edb77ee69291ede617c3e973cbed8465735", "url": "https://github.com/ls1intum/Artemis/commit/3d333edb77ee69291ede617c3e973cbed8465735", "message": "change findByExercise method argument type to primitive", "committedDate": "2020-01-08T14:10:02Z", "type": "commit"}, {"oid": "12823648488c6b3295014d6fd463c459fe01d940", "url": "https://github.com/ls1intum/Artemis/commit/12823648488c6b3295014d6fd463c459fe01d940", "message": "change findOne method argument type to primitive", "committedDate": "2020-01-08T14:18:14Z", "type": "commit"}, {"oid": "22b4b75f3c747bbea9b677bc464ae2fdc8ae913b", "url": "https://github.com/ls1intum/Artemis/commit/22b4b75f3c747bbea9b677bc464ae2fdc8ae913b", "message": "fix java code style", "committedDate": "2020-01-08T14:33:20Z", "type": "commit"}, {"oid": "cfd8c9217471601bb0d849b5d5106ed09733afa8", "url": "https://github.com/ls1intum/Artemis/commit/cfd8c9217471601bb0d849b5d5106ed09733afa8", "message": "add authorization check to create and update gradingInstruction", "committedDate": "2020-01-08T18:38:26Z", "type": "commit"}, {"oid": "e9fcd8615da8b052d37cd99cf4a3315fdb1010c8", "url": "https://github.com/ls1intum/Artemis/commit/e9fcd8615da8b052d37cd99cf4a3315fdb1010c8", "message": "adding more test cases to GradingInstructionIntegrationTest", "committedDate": "2020-01-10T16:11:13Z", "type": "commit"}, {"oid": "3977a119ee0d2219574d1ff3b603e4db7bfd429a", "url": "https://github.com/ls1intum/Artemis/commit/3977a119ee0d2219574d1ff3b603e4db7bfd429a", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-10T16:21:18Z", "type": "commit"}, {"oid": "fc265f83ce0a41e33f9ca418af75776ab96ffcef", "url": "https://github.com/ls1intum/Artemis/commit/fc265f83ce0a41e33f9ca418af75776ab96ffcef", "message": "change return type of addGradingInstructionToExercise", "committedDate": "2020-01-11T16:17:09Z", "type": "commit"}, {"oid": "4434028408e5a8d670733eb6dac6aae3fbb26238", "url": "https://github.com/ls1intum/Artemis/commit/4434028408e5a8d670733eb6dac6aae3fbb26238", "message": "add some assertions for the remaining attributes", "committedDate": "2020-01-11T21:17:21Z", "type": "commit"}, {"oid": "b4b17fb671d316a8abc515d4eec74f095744d105", "url": "https://github.com/ls1intum/Artemis/commit/b4b17fb671d316a8abc515d4eec74f095744d105", "message": "rename applicationName", "committedDate": "2020-01-11T21:37:02Z", "type": "commit"}, {"oid": "2576935240c7de8cd38af3f5bf298541d8b2261f", "url": "https://github.com/ls1intum/Artemis/commit/2576935240c7de8cd38af3f5bf298541d8b2261f", "message": "code clean up", "committedDate": "2020-01-12T14:43:09Z", "type": "commit"}, {"oid": "a7a315678d8a2dab741ad2ef0a8ef056ca7bc511", "url": "https://github.com/ls1intum/Artemis/commit/a7a315678d8a2dab741ad2ef0a8ef056ca7bc511", "message": "code refactor", "committedDate": "2020-01-12T18:21:46Z", "type": "commit"}, {"oid": "2507c9dbc3b906e293337ae8dc9ee1e46cdf3639", "url": "https://github.com/ls1intum/Artemis/commit/2507c9dbc3b906e293337ae8dc9ee1e46cdf3639", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-13T19:30:50Z", "type": "commit"}, {"oid": "5a10b656860a142d174f7faa6d1f6408e612b55c", "url": "https://github.com/ls1intum/Artemis/commit/5a10b656860a142d174f7faa6d1f6408e612b55c", "message": "make Alex proud", "committedDate": "2020-01-13T19:41:22Z", "type": "commit"}, {"oid": "775bc0f7929f7ab99c2430d5dd219fb4e61fe7d3", "url": "https://github.com/ls1intum/Artemis/commit/775bc0f7929f7ab99c2430d5dd219fb4e61fe7d3", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-16T12:14:33Z", "type": "commit"}, {"oid": "6348f5e9e5d73f394f41af0d446063bde4998ba8", "url": "https://github.com/ls1intum/Artemis/commit/6348f5e9e5d73f394f41af0d446063bde4998ba8", "message": "rename gradingInstructionsModel", "committedDate": "2020-01-18T18:04:42Z", "type": "commit"}, {"oid": "a348523e860ffafe2ba60ba7e3465ea6774a5411", "url": "https://github.com/ls1intum/Artemis/commit/a348523e860ffafe2ba60ba7e3465ea6774a5411", "message": "Merge develop into current branch", "committedDate": "2020-01-24T14:24:38Z", "type": "commit"}, {"oid": "0350d9a1f9a1b43c217b100e6f3b040b22285e5d", "url": "https://github.com/ls1intum/Artemis/commit/0350d9a1f9a1b43c217b100e6f3b040b22285e5d", "message": "merge develop into current branch", "committedDate": "2020-01-24T14:33:53Z", "type": "commit"}, {"oid": "5d5319eab89a92cca1ae00d9947adef543577f36", "url": "https://github.com/ls1intum/Artemis/commit/5d5319eab89a92cca1ae00d9947adef543577f36", "message": "modify changelog", "committedDate": "2020-01-24T15:56:00Z", "type": "commit"}, {"oid": "3c9616633a293238bcaa813bb920ebc03ea7aa74", "url": "https://github.com/ls1intum/Artemis/commit/3c9616633a293238bcaa813bb920ebc03ea7aa74", "message": "Add grading criteria entity, resource, repository,service and modified the changelog by adding the new grading_criteria table", "committedDate": "2020-01-25T17:11:42Z", "type": "commit"}, {"oid": "e5585e14e1c87225cc069be419fd7fe8197336e5", "url": "https://github.com/ls1intum/Artemis/commit/e5585e14e1c87225cc069be419fd7fe8197336e5", "message": "fix java code style", "committedDate": "2020-01-25T18:09:23Z", "type": "commit"}, {"oid": "f239e5aeac0d030017490e8beadf8db427a2a78a", "url": "https://github.com/ls1intum/Artemis/commit/f239e5aeac0d030017490e8beadf8db427a2a78a", "message": "fix tests", "committedDate": "2020-01-25T18:11:40Z", "type": "commit"}, {"oid": "06055dc15d2efa21cf16ccaf1e0ab49bbed96183", "url": "https://github.com/ls1intum/Artemis/commit/06055dc15d2efa21cf16ccaf1e0ab49bbed96183", "message": "revert changes made to scm/test-repository", "committedDate": "2020-01-25T18:26:11Z", "type": "commit"}, {"oid": "53b38775f70a393263dbcece65a8f31674cd963c", "url": "https://github.com/ls1intum/Artemis/commit/53b38775f70a393263dbcece65a8f31674cd963c", "message": "Merge remote-tracking branch 'origin/feature/grading-instructions/refactoring-in-prep-for-SGI' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-25T18:32:31Z", "type": "commit"}, {"oid": "9c7eee2d41631ffa08ca5ccfbd048c35395cfe50", "url": "https://github.com/ls1intum/Artemis/commit/9c7eee2d41631ffa08ca5ccfbd048c35395cfe50", "message": "revert changes made to scm/test-repository", "committedDate": "2020-01-25T18:41:30Z", "type": "commit"}, {"oid": "7a9c9554bd71f8cd5d1437c79c1a3b69bd6a5b52", "url": "https://github.com/ls1intum/Artemis/commit/7a9c9554bd71f8cd5d1437c79c1a3b69bd6a5b52", "message": "fix java tests", "committedDate": "2020-01-25T20:13:12Z", "type": "commit"}, {"oid": "7ffa8153042d0c0642883ebb4fd20321d208bea4", "url": "https://github.com/ls1intum/Artemis/commit/7ffa8153042d0c0642883ebb4fd20321d208bea4", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-26T10:09:17Z", "type": "commit"}, {"oid": "38deb8f5da857929ccc756b99ff04d0c05e31647", "url": "https://github.com/ls1intum/Artemis/commit/38deb8f5da857929ccc756b99ff04d0c05e31647", "message": "Add CRUD Rest calls for grading criteria and add reference to exercise table", "committedDate": "2020-01-26T19:59:52Z", "type": "commit"}, {"oid": "e063272e41fe2483a5f9a23d75bae1e6f9b1d804", "url": "https://github.com/ls1intum/Artemis/commit/e063272e41fe2483a5f9a23d75bae1e6f9b1d804", "message": "fix java code style", "committedDate": "2020-01-26T20:08:29Z", "type": "commit"}, {"oid": "1d607aa638af7e56b884ba374ae2ddf15e601bea", "url": "https://github.com/ls1intum/Artemis/commit/1d607aa638af7e56b884ba374ae2ddf15e601bea", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-27T17:15:45Z", "type": "commit"}, {"oid": "f2c274489576be3294d4ee4c39f2d6bd55ca07a0", "url": "https://github.com/ls1intum/Artemis/commit/f2c274489576be3294d4ee4c39f2d6bd55ca07a0", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-28T10:45:19Z", "type": "commit"}, {"oid": "068df9fe46d8f93d2963e58830e4674bfd789e33", "url": "https://github.com/ls1intum/Artemis/commit/068df9fe46d8f93d2963e58830e4674bfd789e33", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-28T14:43:48Z", "type": "commit"}, {"oid": "3d35d7ae8055bc9660b9bc065192c621ccdfe5ea", "url": "https://github.com/ls1intum/Artemis/commit/3d35d7ae8055bc9660b9bc065192c621ccdfe5ea", "message": "change the data-model by integrating the grading criteria and setting it as the parent of the structured grading instructions also deleted redundant rest calls. Put and Post calls of the text/modeling/fileUpload exercises got refactored accordingly", "committedDate": "2020-01-29T18:16:11Z", "type": "commit"}, {"oid": "5a87bb0c1be49cb168e3d1ccaeedb7df01b2b079", "url": "https://github.com/ls1intum/Artemis/commit/5a87bb0c1be49cb168e3d1ccaeedb7df01b2b079", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-01-29T18:25:26Z", "type": "commit"}, {"oid": "5b0df3f2e73a9015e74e82f35fcb8cfd4c57d135", "url": "https://github.com/ls1intum/Artemis/commit/5b0df3f2e73a9015e74e82f35fcb8cfd4c57d135", "message": "add tests for SGI", "committedDate": "2020-01-30T23:42:31Z", "type": "commit"}, {"oid": "05bf249ab2a9a512af4eb7c73418513f3473ae6e", "url": "https://github.com/ls1intum/Artemis/commit/05bf249ab2a9a512af4eb7c73418513f3473ae6e", "message": "merge develop into current branch", "committedDate": "2020-01-30T23:54:39Z", "type": "commit"}, {"oid": "e5f28cc646ba223e4addf280d71acc700943358f", "url": "https://github.com/ls1intum/Artemis/commit/e5f28cc646ba223e4addf280d71acc700943358f", "message": "add more tests for ModelingExercise", "committedDate": "2020-02-01T19:13:46Z", "type": "commit"}, {"oid": "3d88de74a3d76c26010fcd1b68dbc83030fec041", "url": "https://github.com/ls1intum/Artemis/commit/3d88de74a3d76c26010fcd1b68dbc83030fec041", "message": "Code-Cleanup: delete GradingInstructionService and some methods of GradingCriteriaService", "committedDate": "2020-02-01T19:44:26Z", "type": "commit"}, {"oid": "d82209e015dd377a33e434d0c5147dbf8a608f81", "url": "https://github.com/ls1intum/Artemis/commit/d82209e015dd377a33e434d0c5147dbf8a608f81", "message": "Fix code style", "committedDate": "2020-02-01T19:47:51Z", "type": "commit"}, {"oid": "5254b649a5369f865d364eed734f3fabc21951c3", "url": "https://github.com/ls1intum/Artemis/commit/5254b649a5369f865d364eed734f3fabc21951c3", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-02-01T19:49:12Z", "type": "commit"}, {"oid": "876ec3c8071597c2eea84d0845f8d78fa8822bea", "url": "https://github.com/ls1intum/Artemis/commit/876ec3c8071597c2eea84d0845f8d78fa8822bea", "message": "correct the order of changelogs", "committedDate": "2020-02-01T20:14:39Z", "type": "commit"}, {"oid": "8e8a4afcb5c8464b4161fc512fe90cce51bdaa65", "url": "https://github.com/ls1intum/Artemis/commit/8e8a4afcb5c8464b4161fc512fe90cce51bdaa65", "message": "Fix server tests after bad merge", "committedDate": "2020-02-02T19:42:29Z", "type": "commit"}, {"oid": "b89cc9af91ba1f3936fab3365eb0ec9ef01ca4a7", "url": "https://github.com/ls1intum/Artemis/commit/b89cc9af91ba1f3936fab3365eb0ec9ef01ca4a7", "message": "Apply PR review feedback:\n - renamed GradingCriteria to GradingCriterion\n - removed mapping method and modified the setters for criteria in exercise instead\n - added more tests for SGI", "committedDate": "2020-02-09T14:46:52Z", "type": "commit"}, {"oid": "55ea81bce5ea0ee20764d9e9e58b6db6be13d784", "url": "https://github.com/ls1intum/Artemis/commit/55ea81bce5ea0ee20764d9e9e58b6db6be13d784", "message": "Merge remote-tracking branch 'origin/feature/grading-instructions/refactoring-in-prep-for-SGI' into feature/grading-instructions/refactoring-in-prep-for-SGI", "committedDate": "2020-02-09T15:37:52Z", "type": "commit"}, {"oid": "acaf766cd28048d4e3a44fc4417956c87f2e2a59", "url": "https://github.com/ls1intum/Artemis/commit/acaf766cd28048d4e3a44fc4417956c87f2e2a59", "message": "Merge branch 'develop' into feature/grading-instructions/refactoring-in-prep-for-SGI\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/web/rest/FileUploadExerciseResource.java\n#\tsrc/test/java/de/tum/in/www1/artemis/FileUploadExerciseIntegrationTest.java", "committedDate": "2020-02-09T15:42:51Z", "type": "commit"}, {"oid": "ec67437ab17a2fdf3d78b0270a1bc30e64e51946", "url": "https://github.com/ls1intum/Artemis/commit/ec67437ab17a2fdf3d78b0270a1bc30e64e51946", "message": "fix java code style", "committedDate": "2020-02-09T15:53:15Z", "type": "commit"}, {"oid": "606ccae9c927166e8f0174773f1d45d87426f173", "url": "https://github.com/ls1intum/Artemis/commit/606ccae9c927166e8f0174773f1d45d87426f173", "message": "fix java tests", "committedDate": "2020-02-09T16:15:37Z", "type": "commit"}, {"oid": "6b404a48e5471d39a05e93548ad6a389f465ddbe", "url": "https://github.com/ls1intum/Artemis/commit/6b404a48e5471d39a05e93548ad6a389f465ddbe", "message": "Merge branch 'develop' into feature/grading-instructions/modify-markdown-editor", "committedDate": "2020-02-10T10:05:15Z", "type": "commit"}]}