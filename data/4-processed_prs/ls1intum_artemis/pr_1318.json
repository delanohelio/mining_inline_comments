{"pr_number": 1318, "pr_title": "Enhancement/doc/setup guide: Improve documentation", "pr_createdAt": "2020-04-17T17:01:32Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1318", "timeline": [{"oid": "f08f5967d525ccb07a323cca089576e65886cacb", "url": "https://github.com/ls1intum/Artemis/commit/f08f5967d525ccb07a323cca089576e65886cacb", "message": "add additional information to setup guide, fix formatting", "committedDate": "2020-04-17T16:45:16Z", "type": "commit"}, {"oid": "51808ff53dcc58535c6892f0e5082beadce6ecee", "url": "https://github.com/ls1intum/Artemis/commit/51808ff53dcc58535c6892f0e5082beadce6ecee", "message": "remove another trailing whitespace", "committedDate": "2020-04-17T16:58:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM2NTk3Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1318#discussion_r410365977", "bodyText": "We now use java 14. can you update  this?", "author": "krusche", "createdAt": "2020-04-17T17:26:33Z", "path": "doc/setup/SETUP.md", "diffHunk": "@@ -1,22 +1,21 @@\n ## Setup Guide for Artemis\n \n In this guide you learn how to setup the development environment of Artemis.\n-Artemis is based on [JHipster](https://jhipster.github.io), i.e. [Spring Boot](http://projects.spring.io/spring-boot) development on the application server using Java 12, \n-and TypeScript development on the application client in the browser using [Angular](https://angular.io) and Webpack. \n-To get an overview of the used technology, have a look at [https://jhipster.github.io/tech-stack](https://jhipster.github.io/tech-stack) and other tutorials on the JHipster homepage.  \n+Artemis is based on [JHipster](https://jhipster.github.io), i.e. [Spring Boot](http://projects.spring.io/spring-boot) development on the application server using Java 12, and TypeScript development on the application client in the browser using [Angular](https://angular.io) and Webpack.", "originalCommit": "51808ff53dcc58535c6892f0e5082beadce6ecee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM3MTk0NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1318#discussion_r410371945", "bodyText": "I missed that one and updated it accordingly. Thanks!", "author": "linusmichel", "createdAt": "2020-04-17T17:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM2NTk3Nw=="}], "type": "inlineReview"}, {"oid": "dda94013578540e715177629d686a911bf44d944", "url": "https://github.com/ls1intum/Artemis/commit/dda94013578540e715177629d686a911bf44d944", "message": "update documentation to java 14", "committedDate": "2020-04-17T17:35:54Z", "type": "commit"}, {"oid": "edad3c0156c7ed6ee970ef016afe2136ac1b61ba", "url": "https://github.com/ls1intum/Artemis/commit/edad3c0156c7ed6ee970ef016afe2136ac1b61ba", "message": "Merge branch 'develop' into enhancement/doc/setup-guide", "committedDate": "2020-04-20T08:38:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNDk5NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1318#discussion_r411514995", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. [MySQL Database Server 8](https://dev.mysql.com/downloads/mysql): Artemis uses Hibernate to store entities in a MySQL database. Download and install the MySQL Community Server (8.0.x) and configure the 'root' user with an empty password. (In case you want to use a different password, make sure to change the value in application-dev.yml and in liquibase.gradle). The required Artemis scheme will be created / updated automatically at startup time of the server application. Alternatively, you can run the MySQL Database Server inside a Docker container using e.g. ```docker run -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mysql:8.0```\n          \n          \n            \n            2. [MySQL Database Server 8](https://dev.mysql.com/downloads/mysql): Artemis uses Hibernate to store entities in a MySQL database. Download and install the MySQL Community Server (8.0.x) and configure the 'root' user with an empty password. (In case you want to use a different password, make sure to change the value in application-dev.yml and in liquibase.gradle). The required Artemis scheme will be created / updated automatically at startup time of the server application. Alternatively, you can run the MySQL Database Server inside a Docker container using e.g. ```docker-compose -f src/main/docker/mysql.yml up```\n          \n      \n    \n    \n  \n\nWhat about using docker-compose?", "author": "jpbernius", "createdAt": "2020-04-20T16:23:30Z", "path": "doc/setup/SETUP.md", "diffHunk": "@@ -1,22 +1,21 @@\n ## Setup Guide for Artemis\n \n In this guide you learn how to setup the development environment of Artemis.\n-Artemis is based on [JHipster](https://jhipster.github.io), i.e. [Spring Boot](http://projects.spring.io/spring-boot) development on the application server using Java 12, \n-and TypeScript development on the application client in the browser using [Angular](https://angular.io) and Webpack. \n-To get an overview of the used technology, have a look at [https://jhipster.github.io/tech-stack](https://jhipster.github.io/tech-stack) and other tutorials on the JHipster homepage.  \n+Artemis is based on [JHipster](https://jhipster.github.io), i.e. [Spring Boot](http://projects.spring.io/spring-boot) development on the application server using Java 14, and TypeScript development on the application client in the browser using [Angular](https://angular.io) and Webpack.\n+To get an overview of the used technology, have a look at [https://jhipster.github.io/tech-stack](https://jhipster.github.io/tech-stack) and other tutorials on the JHipster homepage.\n \n-You can find tutorials how to setup JHipster in an IDE ([IntelliJ](https://www.jetbrains.com/idea) is recommended) on [https://jhipster.github.io/configuring-ide](https://jhipster.github.io/configuring-ide).\n+You can find tutorials how to setup JHipster in an IDE ([IntelliJ IDEA Ultimate](https://www.jetbrains.com/idea) is recommended) on [https://jhipster.github.io/configuring-ide](https://jhipster.github.io/configuring-ide). Note that the Community Edition of IntelliJ IDEA does not provide Spring Boot support (see the [comparison matrix](https://www.jetbrains.com/idea/features/editions_comparison_matrix.html)).\n Before you can build Artemis, you must install and configure the following dependencies/tools on your machine:\n \n 1. [Java JDK](https://www.oracle.com/java/technologies/javase-downloads.html): We use Java (>= JDK 14) to develop and run the Artemis application server which is based on [Spring Boot](http://projects.spring.io/spring-boot).\n-2. [MySQL Database Server 8](https://dev.mysql.com/downloads/mysql): Artemis uses Hibernate to store entities in a MySQL database. Download and install the MySQL Community Server (8.0.x) and configure the 'root' user with an empty password. (In case you want to use a different password, make sure to change the value in application-dev.yml and in liquibase.gradle). The required Artemis scheme will be created / updated automatically at startup time of the server application.\n-3. [Node.js](https://nodejs.org): We use Node (>=12.8.0) to compile and run the client Angular application. Depending on your system, you can install Node either from source or as a pre-packaged bundle. \n+2. [MySQL Database Server 8](https://dev.mysql.com/downloads/mysql): Artemis uses Hibernate to store entities in a MySQL database. Download and install the MySQL Community Server (8.0.x) and configure the 'root' user with an empty password. (In case you want to use a different password, make sure to change the value in application-dev.yml and in liquibase.gradle). The required Artemis scheme will be created / updated automatically at startup time of the server application. Alternatively, you can run the MySQL Database Server inside a Docker container using e.g. ```docker run -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mysql:8.0```", "originalCommit": "edad3c0156c7ed6ee970ef016afe2136ac1b61ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNTY2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1318#discussion_r411515663", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To start the Artemis application server from the development environment, first import the project into IntelliJ and then make sure to install the Spring Boot plugins to run the main class de.tum.in.www1.artemis.ArtemisApp. Before the application runs, you have to configure the file `application-artemis.yml` in the folder `src/main/resources/config`.\n          \n          \n            \n            To start the Artemis application server from the development environment, first import the project into IntelliJ and then make sure to install the Spring Boot plugins to run the main class `de.tum.in.www1.artemis.ArtemisApp`. Before the application runs, you have to configure the file `application-artemis.yml` in the folder `src/main/resources/config`.", "author": "jpbernius", "createdAt": "2020-04-20T16:24:22Z", "path": "doc/setup/SETUP.md", "diffHunk": "@@ -1,22 +1,21 @@\n ## Setup Guide for Artemis\n \n In this guide you learn how to setup the development environment of Artemis.\n-Artemis is based on [JHipster](https://jhipster.github.io), i.e. [Spring Boot](http://projects.spring.io/spring-boot) development on the application server using Java 12, \n-and TypeScript development on the application client in the browser using [Angular](https://angular.io) and Webpack. \n-To get an overview of the used technology, have a look at [https://jhipster.github.io/tech-stack](https://jhipster.github.io/tech-stack) and other tutorials on the JHipster homepage.  \n+Artemis is based on [JHipster](https://jhipster.github.io), i.e. [Spring Boot](http://projects.spring.io/spring-boot) development on the application server using Java 14, and TypeScript development on the application client in the browser using [Angular](https://angular.io) and Webpack.\n+To get an overview of the used technology, have a look at [https://jhipster.github.io/tech-stack](https://jhipster.github.io/tech-stack) and other tutorials on the JHipster homepage.\n \n-You can find tutorials how to setup JHipster in an IDE ([IntelliJ](https://www.jetbrains.com/idea) is recommended) on [https://jhipster.github.io/configuring-ide](https://jhipster.github.io/configuring-ide).\n+You can find tutorials how to setup JHipster in an IDE ([IntelliJ IDEA Ultimate](https://www.jetbrains.com/idea) is recommended) on [https://jhipster.github.io/configuring-ide](https://jhipster.github.io/configuring-ide). Note that the Community Edition of IntelliJ IDEA does not provide Spring Boot support (see the [comparison matrix](https://www.jetbrains.com/idea/features/editions_comparison_matrix.html)).\n Before you can build Artemis, you must install and configure the following dependencies/tools on your machine:\n \n 1. [Java JDK](https://www.oracle.com/java/technologies/javase-downloads.html): We use Java (>= JDK 14) to develop and run the Artemis application server which is based on [Spring Boot](http://projects.spring.io/spring-boot).\n-2. [MySQL Database Server 8](https://dev.mysql.com/downloads/mysql): Artemis uses Hibernate to store entities in a MySQL database. Download and install the MySQL Community Server (8.0.x) and configure the 'root' user with an empty password. (In case you want to use a different password, make sure to change the value in application-dev.yml and in liquibase.gradle). The required Artemis scheme will be created / updated automatically at startup time of the server application.\n-3. [Node.js](https://nodejs.org): We use Node (>=12.8.0) to compile and run the client Angular application. Depending on your system, you can install Node either from source or as a pre-packaged bundle. \n+2. [MySQL Database Server 8](https://dev.mysql.com/downloads/mysql): Artemis uses Hibernate to store entities in a MySQL database. Download and install the MySQL Community Server (8.0.x) and configure the 'root' user with an empty password. (In case you want to use a different password, make sure to change the value in application-dev.yml and in liquibase.gradle). The required Artemis scheme will be created / updated automatically at startup time of the server application. Alternatively, you can run the MySQL Database Server inside a Docker container using e.g. ```docker run -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mysql:8.0```\n+3. [Node.js](https://nodejs.org): We use Node (>=12.8.0) to compile and run the client Angular application. Depending on your system, you can install Node either from source or as a pre-packaged bundle.\n 4. [Yarn](https://yarnpkg.com): We use Yarn (>=1.17.3) to manage client side Node dependencies.\n Depending on your system, you can install Yarn either from source or as a pre-packaged bundle.\n \n ### Server Setup\n \n-To start the Artemis application server from the development environment, first import the project into IntelliJ and then make sure to install the Spring Boot plugins to run the main class de.tum.in.www1.artemis.ArtemisApp. Before the application runs, you have to configure the file `application-artemis.yml` in the folder `src/main/resources/config`. \n+To start the Artemis application server from the development environment, first import the project into IntelliJ and then make sure to install the Spring Boot plugins to run the main class de.tum.in.www1.artemis.ArtemisApp. Before the application runs, you have to configure the file `application-artemis.yml` in the folder `src/main/resources/config`.", "originalCommit": "edad3c0156c7ed6ee970ef016afe2136ac1b61ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b9f58ec355ffe8b680592219f25db36e67cf0eb3", "url": "https://github.com/ls1intum/Artemis/commit/b9f58ec355ffe8b680592219f25db36e67cf0eb3", "message": "docker-compose for MySQL instead of manual docker command\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-04-20T17:10:02Z", "type": "commit"}, {"oid": "52e53559031d42923ac71be4f79549074cdf270f", "url": "https://github.com/ls1intum/Artemis/commit/52e53559031d42923ac71be4f79549074cdf270f", "message": "format class name\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-04-20T17:10:22Z", "type": "commit"}]}