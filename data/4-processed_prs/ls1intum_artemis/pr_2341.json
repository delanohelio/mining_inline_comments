{"pr_number": 2341, "pr_title": "[Feature] Text Units", "pr_createdAt": "2020-11-05T10:31:22Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2341", "timeline": [{"oid": "f8fca396206cfa757ec49eef382a989ae24c8679", "url": "https://github.com/ls1intum/Artemis/commit/f8fca396206cfa757ec49eef382a989ae24c8679", "message": "Created Basic Frontend Setup for Text Units", "committedDate": "2020-11-05T10:22:02Z", "type": "commit"}, {"oid": "d243cd8493942f23283e0763563806beec0cd495", "url": "https://github.com/ls1intum/Artemis/commit/d243cd8493942f23283e0763563806beec0cd495", "message": "Worked on Text Units", "committedDate": "2020-11-06T09:56:56Z", "type": "commit"}, {"oid": "24749bdc88bf1df043e94652ccfcfa19426b9a4f", "url": "https://github.com/ls1intum/Artemis/commit/24749bdc88bf1df043e94652ccfcfa19426b9a4f", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-07T09:43:24Z", "type": "commit"}, {"oid": "7e786916dabf0f363763e91444a62aa06ec61dbd", "url": "https://github.com/ls1intum/Artemis/commit/7e786916dabf0f363763e91444a62aa06ec61dbd", "message": "Progress on TextUnits", "committedDate": "2020-11-08T12:34:29Z", "type": "commit"}, {"oid": "634d6374b936e49e6a127aaa08289ef218b1325f", "url": "https://github.com/ls1intum/Artemis/commit/634d6374b936e49e6a127aaa08289ef218b1325f", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-08T12:36:15Z", "type": "commit"}, {"oid": "84df06a4161a1648164e6c992baedb6bc2563333", "url": "https://github.com/ls1intum/Artemis/commit/84df06a4161a1648164e6c992baedb6bc2563333", "message": "Fixed Error in Rest Path", "committedDate": "2020-11-08T12:40:32Z", "type": "commit"}, {"oid": "34d9affa52e4e7db263b28f4fd3d46e09568dfd7", "url": "https://github.com/ls1intum/Artemis/commit/34d9affa52e4e7db263b28f4fd3d46e09568dfd7", "message": "Finished Basic Implementation of Text Units", "committedDate": "2020-11-08T12:51:27Z", "type": "commit"}, {"oid": "feed9d756cec22f680192380a98b1c8c39eb2117", "url": "https://github.com/ls1intum/Artemis/commit/feed9d756cec22f680192380a98b1c8c39eb2117", "message": "Implemented Text Units Fully", "committedDate": "2020-11-08T23:20:31Z", "type": "commit"}, {"oid": "9342e1b8f9510d2c4abd9c4f941bc580ad56322e", "url": "https://github.com/ls1intum/Artemis/commit/9342e1b8f9510d2c4abd9c4f941bc580ad56322e", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-08T23:40:36Z", "type": "commit"}, {"oid": "4bd21b5376b2eb4631d52717999a860c054e7a5e", "url": "https://github.com/ls1intum/Artemis/commit/4bd21b5376b2eb4631d52717999a860c054e7a5e", "message": "Added German Translation", "committedDate": "2020-11-08T23:44:39Z", "type": "commit"}, {"oid": "ee9efabdb8751e420a62040ef13a8a0d3ce43320", "url": "https://github.com/ls1intum/Artemis/commit/ee9efabdb8751e420a62040ef13a8a0d3ce43320", "message": "Increased size of popup to window sieze", "committedDate": "2020-11-09T10:24:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3NDc2MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520174761", "bodyText": "Missing space before Du.", "author": "FrankeLukas", "createdAt": "2020-11-09T22:57:54Z", "path": "src/main/webapp/i18n/de/lectureUnit.json", "diffHunk": "@@ -13,6 +14,31 @@\n             },\n             \"releaseDate\": \"Ver\u00f6ffentlichungsdatum\"\n         },\n+        \"textUnit\": {\n+            \"created\": \"Eine neue Texteinheit erstellt\",\n+            \"updated\": \"Texteinheit geupdated\",\n+            \"tooltip\": \"Das ist eine Texteinheit.\",\n+            \"popup\": \"In Popup \u00f6ffnen\",\n+            \"notReleasedTooltip\": \"Text nur sichtbar f\u00fcr Tutoren und Dozenten. Ver\u00f6ffentlichkeitsdatum:\",\n+            \"markdownHelp\": \"Hier kann Markdown eingegeben werden. Mehr informationen: \",\n+            \"cachedMarkdown\": \"Artemis fand ungespeichertes Markdown im local storage. M\u00f6chtest du es laden? Speicherdatum:\",\n+            \"createTextUnit\": {\n+                \"title\": \"Erstelle Texteinheit\",\n+                \"name\": \"Name\",\n+                \"content\": \"Inhalt\",\n+                \"namePlaceHolder\": \"Gib der Texteinheit einen Namen\",\n+                \"nameRequiredValidationError\": \"Der Name ist ein Pflichtfeld.\",\n+                \"nameMaxLengthValidationError\": \"Der Name kann maximal 255 Zeichen lang sein.\"\n+            },\n+            \"editTextUnit\": {\n+                \"title\": \"Bearbeite Texteinheit\"\n+            },\n+            \"delete\": {\n+                \"question\": \"Willst du wirklich die Texteinheit <strong>{{ title }}</strong> l\u00f6schen?Du kannst diese Aktion nicht r\u00fcckg\u00e4ngig machen!\",", "originalCommit": "ee9efabdb8751e420a62040ef13a8a0d3ce43320", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5MDk0NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520590945", "bodyText": "Done in e881a30", "author": "stefanwaldhauser", "createdAt": "2020-11-10T14:11:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3NDc2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3NTAyNg==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520175026", "bodyText": "This : has a trailing space while the other two don't. Is there a policy here? (I.e. should we make that consistent by removing the space here?)", "author": "FrankeLukas", "createdAt": "2020-11-09T22:58:36Z", "path": "src/main/webapp/i18n/de/lectureUnit.json", "diffHunk": "@@ -13,6 +14,31 @@\n             },\n             \"releaseDate\": \"Ver\u00f6ffentlichungsdatum\"\n         },\n+        \"textUnit\": {\n+            \"created\": \"Eine neue Texteinheit erstellt\",\n+            \"updated\": \"Texteinheit geupdated\",\n+            \"tooltip\": \"Das ist eine Texteinheit.\",\n+            \"popup\": \"In Popup \u00f6ffnen\",\n+            \"notReleasedTooltip\": \"Text nur sichtbar f\u00fcr Tutoren und Dozenten. Ver\u00f6ffentlichkeitsdatum:\",\n+            \"markdownHelp\": \"Hier kann Markdown eingegeben werden. Mehr informationen: \",", "originalCommit": "ee9efabdb8751e420a62040ef13a8a0d3ce43320", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5MTA3MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520591071", "bodyText": "Done in e881a30", "author": "stefanwaldhauser", "createdAt": "2020-11-10T14:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3NTAyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3NTYzMg==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520175632", "bodyText": "GitHub Actions complains: 'EntityArrayResponseType' is defined but never used", "author": "FrankeLukas", "createdAt": "2020-11-09T23:00:02Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/textUnit.service.ts", "diffHunk": "@@ -0,0 +1,37 @@\n+import { Injectable } from '@angular/core';\n+import { SERVER_API_URL } from 'app/app.constants';\n+import { HttpClient, HttpResponse } from '@angular/common/http';\n+import { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\n+import { Observable } from 'rxjs';\n+import { map } from 'rxjs/operators';\n+import { LectureUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/lectureUnit.service';\n+\n+type EntityResponseType = HttpResponse<TextUnit>;\n+type EntityArrayResponseType = HttpResponse<TextUnit[]>;", "originalCommit": "ee9efabdb8751e420a62040ef13a8a0d3ce43320", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5MTE0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520591147", "bodyText": "Done in e881a30", "author": "stefanwaldhauser", "createdAt": "2020-11-10T14:12:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3NTYzMg=="}], "type": "inlineReview"}, {"oid": "52e0028b1c6a6187884d537fc3a861daad1b71cd", "url": "https://github.com/ls1intum/Artemis/commit/52e0028b1c6a6187884d537fc3a861daad1b71cd", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-10T10:27:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MjU0NA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520482544", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<LectureUnit> deleteLectureUnit(@PathVariable Long lectureUnitId, @PathVariable Long lectureId) {\n          \n          \n            \n                public ResponseEntity<Void> deleteLectureUnit(@PathVariable Long lectureUnitId, @PathVariable Long lectureId) {\n          \n      \n    \n    \n  \n\nI do not think you are actually changing the return type here.", "author": "jpbernius", "createdAt": "2020-11-10T11:13:25Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/lecture/LectureUnitResource.java", "diffHunk": "@@ -100,13 +100,14 @@ public LectureUnitResource(AuthorizationCheckService authorizationCheckService,\n      */\n     @DeleteMapping(\"/lectures/{lectureId}/lecture-units/{lectureUnitId}\")\n     @PreAuthorize(\"hasAnyRole('ADMIN','INSTRUCTOR')\")\n-    public ResponseEntity<Void> deleteLectureUnit(@PathVariable Long lectureUnitId, @PathVariable Long lectureId) {\n+    public ResponseEntity<LectureUnit> deleteLectureUnit(@PathVariable Long lectureUnitId, @PathVariable Long lectureId) {", "originalCommit": "52e0028b1c6a6187884d537fc3a861daad1b71cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MzY2Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520483666", "bodyText": "This could be refactored for all units. Take a look at <ng-content>.", "author": "jpbernius", "createdAt": "2020-11-10T11:15:09Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/create-text-unit/create-text-unit.component.html", "diffHunk": "@@ -0,0 +1,9 @@\n+<div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\n+    <div class=\"spinner-border\" role=\"status\">\n+        <span class=\"sr-only\">{{ 'loading' | translate }}</span>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"!isLoading\" class=\"container\">\n+    <jhi-text-unit-form [isEditMode]=\"false\" (formSubmitted)=\"createTextUnit($event)\"></jhi-text-unit-form>", "originalCommit": "52e0028b1c6a6187884d537fc3a861daad1b71cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4Nzc5NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520587795", "bodyText": "Can you be more specific? What exactly should be refactored?", "author": "stefanwaldhauser", "createdAt": "2020-11-10T14:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MzY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxMjAxMA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520912010", "bodyText": "I'd suggest creating a <lecture-unit-layout/> component with something like this as its template:\n<div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\n     <div class=\"spinner-border\" role=\"status\">\n         <span class=\"sr-only\">{{ 'loading' | translate }}</span>\n     </div>\n </div>\n\n <div *ngIf=\"!isLoading\" class=\"container\">\n     <ng-content></ng-content>\n</div>\nTo be used here like so:\n<lecture-unit-layout>\n    <jhi-text-unit-form [isEditMode]=\"false\" (formSubmitted)=\"createTextUnit($event)\"></jhi-text-unit-form>\n</lecture-unit-layout>\nThat way the spinner and the layout would be reused for all unit types.", "author": "jpbernius", "createdAt": "2020-11-10T22:22:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MzY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1NzE0OA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r522457148", "bodyText": "Thanks for the tip. Done in 74163fb", "author": "stefanwaldhauser", "createdAt": "2020-11-12T22:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MzY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NDc3Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520484777", "bodyText": "This could also use the refactored lecture unit layout (see above)", "author": "jpbernius", "createdAt": "2020-11-10T11:16:55Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-text-unit/edit-text-unit.component.html", "diffHunk": "@@ -0,0 +1,9 @@\n+<div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\n+    <div class=\"spinner-border\" role=\"status\">\n+        <span class=\"sr-only\">{{ 'loading' | translate }}</span>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"!isLoading\" class=\"container\">\n+    <jhi-text-unit-form [formData]=\"formData\" (formSubmitted)=\"updateTextUnit($event)\" [isEditMode]=\"true\"></jhi-text-unit-form>", "originalCommit": "52e0028b1c6a6187884d537fc3a861daad1b71cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwNjUzOA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520606538", "bodyText": "Can you be more specific? What exactly should be refactored?", "author": "stefanwaldhauser", "createdAt": "2020-11-10T14:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NDc3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1NzM5OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r522457399", "bodyText": "Done in 74163fb", "author": "stefanwaldhauser", "createdAt": "2020-11-12T22:09:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NDc3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NTM5MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520485391", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            finalize(() => {\n          \n          \n            \n                                this.isLoading = false;\n          \n          \n            \n                            }),\n          \n          \n            \n                            finalize(() => this.isLoading = false),", "author": "jpbernius", "createdAt": "2020-11-10T11:18:05Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-text-unit/edit-text-unit.component.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+import { Component, OnInit } from '@angular/core';\n+import { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\n+import { TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\n+import { TextUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/textUnit.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\n+import { onError } from 'app/shared/util/global.utils';\n+import { finalize, switchMap, take } from 'rxjs/operators';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+\n+@Component({\n+    selector: 'jhi-edit-text-unit',\n+    templateUrl: './edit-text-unit.component.html',\n+    styles: [],\n+})\n+export class EditTextUnitComponent implements OnInit {\n+    isLoading = false;\n+    textUnit: TextUnit;\n+    formData: TextUnitFormData;\n+    lectureId: number;\n+\n+    constructor(private activatedRoute: ActivatedRoute, private router: Router, private textUnitService: TextUnitService, private alertService: JhiAlertService) {}\n+\n+    ngOnInit(): void {\n+        this.isLoading = true;\n+        this.activatedRoute.paramMap\n+            .pipe(\n+                take(1),\n+                switchMap((params) => {\n+                    const textUnitId = Number(params.get('textUnitId'));\n+                    this.lectureId = Number(params.get('lectureId'));\n+                    return this.textUnitService.findById(textUnitId, this.lectureId);\n+                }),\n+                finalize(() => {\n+                    this.isLoading = false;\n+                }),", "originalCommit": "52e0028b1c6a6187884d537fc3a861daad1b71cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNTI1Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520515256", "bodyText": "Please don't embed external CS like that.", "author": "jpbernius", "createdAt": "2020-11-10T12:12:00Z", "path": "src/main/webapp/app/overview/course-lectures/text-unit/text-unit.component.ts", "diffHunk": "@@ -0,0 +1,49 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { SafeHtml } from '@angular/platform-browser';\n+import { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\n+import { ArtemisMarkdownService } from 'app/shared/markdown.service';\n+\n+@Component({\n+    selector: 'jhi-text-unit',\n+    templateUrl: './text-unit.component.html',\n+    styleUrls: ['./text-unit.component.scss'],\n+})\n+export class TextUnitComponent implements OnInit {\n+    @Input()\n+    textUnit: TextUnit;\n+    isCollapsed = true;\n+\n+    formattedContent?: SafeHtml;\n+\n+    constructor(private artemisMarkdown: ArtemisMarkdownService) {}\n+\n+    ngOnInit(): void {\n+        if (this.textUnit?.content) {\n+            this.formattedContent = this.artemisMarkdown.safeHtmlForMarkdown(this.textUnit.content);\n+        }\n+    }\n+\n+    handleCollapse($event: any) {\n+        $event.stopPropagation();\n+        this.isCollapsed = !this.isCollapsed;\n+    }\n+\n+    openPopup($event: any) {\n+        $event.stopPropagation();\n+\n+        const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n+        const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n+        const win = window.open('', ' ', 'toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,' + `width=${width},height=${height}`);\n+        win!.document.write(`<html><head><title>${this.textUnit.name}</title>`);\n+        win!.document.write(\n+            '<link rel=\"stylesheet\" ' +\n+                'href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/4.0.0/github-markdown.min.css\" ' +\n+                'integrity=\"sha512-Oy18vBnbSJkXTndr2n6lDMO5NN31UljR8e/ICzVPrGpSud4Gkckb8yUpqhKuUNoE+o9gAb4O/rAxxw1ojyUVzg==\" crossorigin=\"anonymous\" />',", "originalCommit": "52e0028b1c6a6187884d537fc3a861daad1b71cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5Mjk0OA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520592948", "bodyText": "What is the preferred way to do it? I need to load some css to style the popup.", "author": "stefanwaldhauser", "createdAt": "2020-11-10T14:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNTI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxMDE1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r520910153", "bodyText": "Best way would be to serve it from /public I guess?", "author": "jpbernius", "createdAt": "2020-11-10T22:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNTI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ0NDAyMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r522444021", "bodyText": "Thanks for the tip @jpbernius :)\nDone in: e2d2b58", "author": "stefanwaldhauser", "createdAt": "2020-11-12T21:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNTI1Ng=="}], "type": "inlineReview"}, {"oid": "9ab142620925a547a917a33a5086cde8e4cd5d55", "url": "https://github.com/ls1intum/Artemis/commit/9ab142620925a547a917a33a5086cde8e4cd5d55", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-10T14:00:52Z", "type": "commit"}, {"oid": "e881a30d6467f0e45c64b9490f1b0b6a4fef22f0", "url": "https://github.com/ls1intum/Artemis/commit/e881a30d6467f0e45c64b9490f1b0b6a4fef22f0", "message": "Fixed Small Issues", "committedDate": "2020-11-10T14:11:31Z", "type": "commit"}, {"oid": "8fca320cb783e659f383e50e7efa1c21f53497f5", "url": "https://github.com/ls1intum/Artemis/commit/8fca320cb783e659f383e50e7efa1c21f53497f5", "message": "Update src/main/java/de/tum/in/www1/artemis/web/rest/lecture/LectureUnitResource.java\n\nCo-authored-by: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-11-10T14:14:38Z", "type": "commit"}, {"oid": "4bde9972b47292fd17f8612ffff6b456122794da", "url": "https://github.com/ls1intum/Artemis/commit/4bde9972b47292fd17f8612ffff6b456122794da", "message": "Update src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-text-unit/edit-text-unit.component.ts\n\nCo-authored-by: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-11-10T14:14:49Z", "type": "commit"}, {"oid": "b7a6f64211834ca49febbc8ec9521a46dd819b8f", "url": "https://github.com/ls1intum/Artemis/commit/b7a6f64211834ca49febbc8ec9521a46dd819b8f", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-10T14:32:12Z", "type": "commit"}, {"oid": "c60c2778058d5dfbe610fb8c4e40feefe19d3ff6", "url": "https://github.com/ls1intum/Artemis/commit/c60c2778058d5dfbe610fb8c4e40feefe19d3ff6", "message": "Added Css Class Extension so Showdown Markdown Converter", "committedDate": "2020-11-10T14:44:54Z", "type": "commit"}, {"oid": "e69097d64fbc2bdb07a0434a9260cd42c35c8ca3", "url": "https://github.com/ls1intum/Artemis/commit/e69097d64fbc2bdb07a0434a9260cd42c35c8ca3", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-10T17:30:41Z", "type": "commit"}, {"oid": "55f63236ae5d2b580db32318949d29fadfd6a842", "url": "https://github.com/ls1intum/Artemis/commit/55f63236ae5d2b580db32318949d29fadfd6a842", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-12T08:46:48Z", "type": "commit"}, {"oid": "6a925e9611b51996f9ea4bb25f32a665c451baeb", "url": "https://github.com/ls1intum/Artemis/commit/6a925e9611b51996f9ea4bb25f32a665c451baeb", "message": "Wrote Test for Text-Unit-Form-Component", "committedDate": "2020-11-12T11:07:14Z", "type": "commit"}, {"oid": "6ccaa443100796a2b5aa0e17cf96222ef7ac77dd", "url": "https://github.com/ls1intum/Artemis/commit/6ccaa443100796a2b5aa0e17cf96222ef7ac77dd", "message": "Extended Text-Unit-Form-Test", "committedDate": "2020-11-12T16:10:47Z", "type": "commit"}, {"oid": "2a945df8a617f3f3a6772505eb4294563c304cb9", "url": "https://github.com/ls1intum/Artemis/commit/2a945df8a617f3f3a6772505eb4294563c304cb9", "message": "Extended Text-Unit-Form-Test", "committedDate": "2020-11-12T17:00:41Z", "type": "commit"}, {"oid": "69fbc92d0e9ec07778816070b45f2c99eb33d386", "url": "https://github.com/ls1intum/Artemis/commit/69fbc92d0e9ec07778816070b45f2c99eb33d386", "message": "Fixed Flaky Text Unit Tests", "committedDate": "2020-11-12T19:29:16Z", "type": "commit"}, {"oid": "e2d2b5836e4fe89f36926dd66c29548072587c42", "url": "https://github.com/ls1intum/Artemis/commit/e2d2b5836e4fe89f36926dd66c29548072587c42", "message": "Serving Github Markdown from Public", "committedDate": "2020-11-12T21:41:46Z", "type": "commit"}, {"oid": "74163fbd896bbe491df078297b2024f5928bd1d4", "url": "https://github.com/ls1intum/Artemis/commit/74163fbd896bbe491df078297b2024f5928bd1d4", "message": "Refactored units with new layout component", "committedDate": "2020-11-12T22:08:37Z", "type": "commit"}, {"oid": "f366c3f1eba3c5fcca731061187cc521de4a229b", "url": "https://github.com/ls1intum/Artemis/commit/f366c3f1eba3c5fcca731061187cc521de4a229b", "message": "Wrote Test for text-unit-component", "committedDate": "2020-11-13T10:16:30Z", "type": "commit"}, {"oid": "e05487cf2c058e2bae83fb632a8d5adc33fc9749", "url": "https://github.com/ls1intum/Artemis/commit/e05487cf2c058e2bae83fb632a8d5adc33fc9749", "message": "Added test for create-text-unit-component", "committedDate": "2020-11-13T11:08:41Z", "type": "commit"}, {"oid": "7e9dd9babeab0069327ae45efe667fd292bd52f6", "url": "https://github.com/ls1intum/Artemis/commit/7e9dd9babeab0069327ae45efe667fd292bd52f6", "message": "Created Test for edit-text-unit-component", "committedDate": "2020-11-13T11:42:36Z", "type": "commit"}, {"oid": "5d106299255a44761101990ffd15e6e06e2185f5", "url": "https://github.com/ls1intum/Artemis/commit/5d106299255a44761101990ffd15e6e06e2185f5", "message": "Created Test for Text-Unit-Service", "committedDate": "2020-11-13T12:09:24Z", "type": "commit"}, {"oid": "512c37465a4747cf888a5d4f1e25816f7cf5bb31", "url": "https://github.com/ls1intum/Artemis/commit/512c37465a4747cf888a5d4f1e25816f7cf5bb31", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-15T11:30:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NTkxNw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523765917", "bodyText": "GitHub Actions: 'getItemStub' is assigned a value but never used", "author": "FrankeLukas", "createdAt": "2020-11-15T14:26:41Z", "path": "src/test/javascript/spec/component/lecture-unit/text-unit/text-unit-form.component.spec.ts", "diffHunk": "@@ -0,0 +1,182 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { SinonStub } from 'sinon';\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { TextUnitFormComponent, TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\n+import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n+import { TranslatePipe, TranslateService } from '@ngx-translate/core';\n+import { MockComponent, MockPipe, MockProvider } from 'ng-mocks';\n+import { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\n+import * as moment from 'moment';\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { By } from '@angular/platform-browser';\n+import { MockRouter } from '../../../helpers/mocks/mock-router';\n+import { Router } from '@angular/router';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+@Component({ selector: 'jhi-markdown-editor', template: '' })\n+class MarkdownEditorStubComponent {\n+    @Input() markdown: string;\n+    @Input() enableResize = false;\n+    @Output() markdownChange = new EventEmitter<string>();\n+}\n+\n+describe('TextUnitFormComponent', () => {\n+    let store = {};\n+    const sandbox = sinon.createSandbox();\n+    let textUnitFormComponentFixture: ComponentFixture<TextUnitFormComponent>;\n+    let textUnitFormComponent: TextUnitFormComponent;\n+    let getItemStub: SinonStub;\n+    let removeItemStub: SinonStub;\n+    let setItemStub: SinonStub;\n+    beforeEach(() => {\n+        // mocking router\n+        // mocking the local storage for cache testing\n+        store = {};\n+        getItemStub = sandbox.stub(localStorage, 'getItem').callsFake((key: string) => {", "originalCommit": "512c37465a4747cf888a5d4f1e25816f7cf5bb31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2OTU2Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523769567", "bodyText": "d67c60c", "author": "stefanwaldhauser", "createdAt": "2020-11-15T14:54:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NTkxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NTkzMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523765931", "bodyText": "GitHub Actions: 'removeItemStub' is assigned a value but never used", "author": "FrankeLukas", "createdAt": "2020-11-15T14:26:50Z", "path": "src/test/javascript/spec/component/lecture-unit/text-unit/text-unit-form.component.spec.ts", "diffHunk": "@@ -0,0 +1,182 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { SinonStub } from 'sinon';\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { TextUnitFormComponent, TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\n+import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n+import { TranslatePipe, TranslateService } from '@ngx-translate/core';\n+import { MockComponent, MockPipe, MockProvider } from 'ng-mocks';\n+import { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\n+import * as moment from 'moment';\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { By } from '@angular/platform-browser';\n+import { MockRouter } from '../../../helpers/mocks/mock-router';\n+import { Router } from '@angular/router';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+@Component({ selector: 'jhi-markdown-editor', template: '' })\n+class MarkdownEditorStubComponent {\n+    @Input() markdown: string;\n+    @Input() enableResize = false;\n+    @Output() markdownChange = new EventEmitter<string>();\n+}\n+\n+describe('TextUnitFormComponent', () => {\n+    let store = {};\n+    const sandbox = sinon.createSandbox();\n+    let textUnitFormComponentFixture: ComponentFixture<TextUnitFormComponent>;\n+    let textUnitFormComponent: TextUnitFormComponent;\n+    let getItemStub: SinonStub;\n+    let removeItemStub: SinonStub;\n+    let setItemStub: SinonStub;\n+    beforeEach(() => {\n+        // mocking router\n+        // mocking the local storage for cache testing\n+        store = {};\n+        getItemStub = sandbox.stub(localStorage, 'getItem').callsFake((key: string) => {\n+            return store[key] || null;\n+        });\n+        removeItemStub = sandbox.stub(localStorage, 'removeItem').callsFake((key: string) => {", "originalCommit": "512c37465a4747cf888a5d4f1e25816f7cf5bb31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2OTU2MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523769561", "bodyText": "d67c60c", "author": "stefanwaldhauser", "createdAt": "2020-11-15T14:54:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NTkzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NTk5Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523765992", "bodyText": "GitHub Actions: 'setItemStub' is assigned a value but never used", "author": "FrankeLukas", "createdAt": "2020-11-15T14:27:07Z", "path": "src/test/javascript/spec/component/lecture-unit/text-unit/text-unit-form.component.spec.ts", "diffHunk": "@@ -0,0 +1,182 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { SinonStub } from 'sinon';\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { TextUnitFormComponent, TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\n+import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n+import { TranslatePipe, TranslateService } from '@ngx-translate/core';\n+import { MockComponent, MockPipe, MockProvider } from 'ng-mocks';\n+import { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\n+import * as moment from 'moment';\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { By } from '@angular/platform-browser';\n+import { MockRouter } from '../../../helpers/mocks/mock-router';\n+import { Router } from '@angular/router';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+@Component({ selector: 'jhi-markdown-editor', template: '' })\n+class MarkdownEditorStubComponent {\n+    @Input() markdown: string;\n+    @Input() enableResize = false;\n+    @Output() markdownChange = new EventEmitter<string>();\n+}\n+\n+describe('TextUnitFormComponent', () => {\n+    let store = {};\n+    const sandbox = sinon.createSandbox();\n+    let textUnitFormComponentFixture: ComponentFixture<TextUnitFormComponent>;\n+    let textUnitFormComponent: TextUnitFormComponent;\n+    let getItemStub: SinonStub;\n+    let removeItemStub: SinonStub;\n+    let setItemStub: SinonStub;\n+    beforeEach(() => {\n+        // mocking router\n+        // mocking the local storage for cache testing\n+        store = {};\n+        getItemStub = sandbox.stub(localStorage, 'getItem').callsFake((key: string) => {\n+            return store[key] || null;\n+        });\n+        removeItemStub = sandbox.stub(localStorage, 'removeItem').callsFake((key: string) => {\n+            delete store[key];\n+        });\n+        setItemStub = sandbox.stub(localStorage, 'setItem').callsFake((key: string, value: string) => {", "originalCommit": "512c37465a4747cf888a5d4f1e25816f7cf5bb31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2OTU0MA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523769540", "bodyText": "done in d67c60c", "author": "stefanwaldhauser", "createdAt": "2020-11-15T14:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NTk5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAxNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523766015", "bodyText": "GitHub Actions: 'markdown' is defined but never used", "author": "FrankeLukas", "createdAt": "2020-11-15T14:27:22Z", "path": "src/test/javascript/spec/component/lecture-unit/text-unit/text-unit.component.spec.ts", "diffHunk": "@@ -0,0 +1,117 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { ComponentFixture, TestBed } from '@angular/core/testing';\n+import { TextUnitComponent } from 'app/overview/course-lectures/text-unit/text-unit.component';\n+import { MockComponent, MockDirective, MockPipe, MockProvider } from 'ng-mocks';\n+import { TranslatePipe } from '@ngx-translate/core';\n+import { ArtemisMarkdownService } from 'app/shared/markdown.service';\n+import { FaIconComponent } from '@fortawesome/angular-fontawesome';\n+import { NgbCollapse, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\n+import { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\n+import { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+describe('TextUnitFormComponent', () => {\n+    const sandbox = sinon.createSandbox();\n+    const exampleName = 'Test';\n+    const exampleMarkdown = '# Sample Markdown';\n+    const exampleHTML = '<h1>Sample Markdown</h1>';\n+    let textUnitComponentFixture: ComponentFixture<TextUnitComponent>;\n+    let textUnitComponent: TextUnitComponent;\n+    let textUnit: TextUnit;\n+\n+    beforeEach(() => {\n+        textUnit = new TextUnit();\n+        textUnit.name = exampleName;\n+        textUnit.content = exampleMarkdown;\n+\n+        TestBed.configureTestingModule({\n+            imports: [],\n+            declarations: [\n+                TextUnitComponent,\n+                MockComponent(FaIconComponent),\n+                MockPipe(TranslatePipe),\n+                MockDirective(NgbCollapse),\n+                MockDirective(NgbTooltip),\n+                MockPipe(ArtemisDatePipe),\n+            ],\n+            providers: [\n+                MockProvider(ArtemisMarkdownService, {\n+                    safeHtmlForMarkdown: (markdown: string) => exampleHTML,", "originalCommit": "512c37465a4747cf888a5d4f1e25816f7cf5bb31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2OTQxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523769411", "bodyText": "i mean i need to have the parameter to mock the method? Any idea how to do this? @FrankeLukas", "author": "stefanwaldhauser", "createdAt": "2020-11-15T14:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3NTgyNw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523775827", "bodyText": "I think it wants something like safeHtmlForMarkdown: () => exampleHTML, here.", "author": "FrankeLukas", "createdAt": "2020-11-15T15:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc4MjIyOQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523782229", "bodyText": "Yes but I can not do it as the mocked method has to match the signature of the original method", "author": "stefanwaldhauser", "createdAt": "2020-11-15T16:39:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc5NzU5MA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523797590", "bodyText": "Then I don't know. One could probably define a dummy method, but adding some sort of ignore annotation would be better if that is possible? (Unfortunately I don't know if that exists or if the errors here even matter after the PR is merged.)", "author": "FrankeLukas", "createdAt": "2020-11-15T18:54:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3OTAzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524079035", "bodyText": "74049e8", "author": "stefanwaldhauser", "createdAt": "2020-11-16T10:19:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3OTI4MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524079281", "bodyText": "74049e8", "author": "stefanwaldhauser", "createdAt": "2020-11-16T10:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAyMA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523766020", "bodyText": "GitHub Actions: 'markdown' is defined but never used", "author": "FrankeLukas", "createdAt": "2020-11-15T14:27:27Z", "path": "src/test/javascript/spec/component/lecture-unit/text-unit/text-unit.component.spec.ts", "diffHunk": "@@ -0,0 +1,117 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { ComponentFixture, TestBed } from '@angular/core/testing';\n+import { TextUnitComponent } from 'app/overview/course-lectures/text-unit/text-unit.component';\n+import { MockComponent, MockDirective, MockPipe, MockProvider } from 'ng-mocks';\n+import { TranslatePipe } from '@ngx-translate/core';\n+import { ArtemisMarkdownService } from 'app/shared/markdown.service';\n+import { FaIconComponent } from '@fortawesome/angular-fontawesome';\n+import { NgbCollapse, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\n+import { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\n+import { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+describe('TextUnitFormComponent', () => {\n+    const sandbox = sinon.createSandbox();\n+    const exampleName = 'Test';\n+    const exampleMarkdown = '# Sample Markdown';\n+    const exampleHTML = '<h1>Sample Markdown</h1>';\n+    let textUnitComponentFixture: ComponentFixture<TextUnitComponent>;\n+    let textUnitComponent: TextUnitComponent;\n+    let textUnit: TextUnit;\n+\n+    beforeEach(() => {\n+        textUnit = new TextUnit();\n+        textUnit.name = exampleName;\n+        textUnit.content = exampleMarkdown;\n+\n+        TestBed.configureTestingModule({\n+            imports: [],\n+            declarations: [\n+                TextUnitComponent,\n+                MockComponent(FaIconComponent),\n+                MockPipe(TranslatePipe),\n+                MockDirective(NgbCollapse),\n+                MockDirective(NgbTooltip),\n+                MockPipe(ArtemisDatePipe),\n+            ],\n+            providers: [\n+                MockProvider(ArtemisMarkdownService, {\n+                    safeHtmlForMarkdown: (markdown: string) => exampleHTML,\n+                    htmlForMarkdown: (markdown: string) => exampleHTML,", "originalCommit": "512c37465a4747cf888a5d4f1e25816f7cf5bb31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2OTM5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r523769397", "bodyText": "i mean i need to have the parameter to mock the method? Any idea how to do this? @FrankeLukas", "author": "stefanwaldhauser", "createdAt": "2020-11-15T14:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2NjAyMA=="}], "type": "inlineReview"}, {"oid": "c9aadda47e7d33a33c09807c606cf4b0883ee170", "url": "https://github.com/ls1intum/Artemis/commit/c9aadda47e7d33a33c09807c606cf4b0883ee170", "message": "Possible Improvement of cache feature", "committedDate": "2020-11-15T14:50:13Z", "type": "commit"}, {"oid": "d67c60cb6977715928970ad04df3a2f288f31f6b", "url": "https://github.com/ls1intum/Artemis/commit/d67c60cb6977715928970ad04df3a2f288f31f6b", "message": "Removed not needed variables", "committedDate": "2020-11-15T14:53:39Z", "type": "commit"}, {"oid": "41d7d66cba79b59823300f8d3f81eba1404aa299", "url": "https://github.com/ls1intum/Artemis/commit/41d7d66cba79b59823300f8d3f81eba1404aa299", "message": "Improved caching behaviour", "committedDate": "2020-11-15T16:42:27Z", "type": "commit"}, {"oid": "334387d7a172b38734382646d4ab213c3d13dabb", "url": "https://github.com/ls1intum/Artemis/commit/334387d7a172b38734382646d4ab213c3d13dabb", "message": "Fixed Test", "committedDate": "2020-11-15T17:06:19Z", "type": "commit"}, {"oid": "74049e8c98e6d469300d1d71e63d236bdb4a5d4d", "url": "https://github.com/ls1intum/Artemis/commit/74049e8c98e6d469300d1d71e63d236bdb4a5d4d", "message": "Added eslint ignore message", "committedDate": "2020-11-16T10:19:37Z", "type": "commit"}, {"oid": "865dafa72fa2f8b50ab8e16330e5b69524cdb2b6", "url": "https://github.com/ls1intum/Artemis/commit/865dafa72fa2f8b50ab8e16330e5b69524cdb2b6", "message": "Removes eslint ignore", "committedDate": "2020-11-16T11:15:23Z", "type": "commit"}, {"oid": "970d6626b307e71e4bdcdde9dc3190cc0f6009ac", "url": "https://github.com/ls1intum/Artemis/commit/970d6626b307e71e4bdcdde9dc3190cc0f6009ac", "message": "Ran css through minimizer", "committedDate": "2020-11-16T14:42:00Z", "type": "commit"}, {"oid": "667c2bcfa9b636c443fa52384e4e5532c27c9c62", "url": "https://github.com/ls1intum/Artemis/commit/667c2bcfa9b636c443fa52384e4e5532c27c9c62", "message": "Renamed service", "committedDate": "2020-11-16T14:43:25Z", "type": "commit"}, {"oid": "a50cd46f6131818cdb84280c143a8874dc77f1a0", "url": "https://github.com/ls1intum/Artemis/commit/a50cd46f6131818cdb84280c143a8874dc77f1a0", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-16T14:44:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4NDA2Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524384062", "bodyText": "is this now an autogenerated file? Because a lot of line were deleted", "author": "derLalla", "createdAt": "2020-11-16T16:08:11Z", "path": "src/main/resources/public/content/github-markdown.css", "diffHunk": "@@ -1,985 +1,735 @@\n .markdown-body .octicon {\n-  display: inline-block;\n-  fill: currentColor;\n-  vertical-align: text-bottom;\n+    display: inline-block;\n+    fill: currentColor;\n+    vertical-align: text-bottom\n }\n ", "originalCommit": "970d6626b307e71e4bdcdde9dc3190cc0f6009ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzODI2MA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524438260", "bodyText": "I ran it through a css cleaner", "author": "stefanwaldhauser", "createdAt": "2020-11-16T17:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4NDA2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQyMjAxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524422011", "bodyText": "This is missing a semicolon. GitHub Actions has several similar complaints in this file that should be fixed too, I think?", "author": "FrankeLukas", "createdAt": "2020-11-16T16:58:06Z", "path": "src/main/resources/public/content/github-markdown.css", "diffHunk": "@@ -0,0 +1,735 @@\n+.markdown-body .octicon {\n+    display: inline-block;\n+    fill: currentColor;\n+    vertical-align: text-bottom", "originalCommit": "a50cd46f6131818cdb84280c143a8874dc77f1a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNzE3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524627173", "bodyText": "done :)", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:47:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQyMjAxMQ=="}], "type": "inlineReview"}, {"oid": "8772e13d16c93f667cd3579c6dcf86a1ee6a1e27", "url": "https://github.com/ls1intum/Artemis/commit/8772e13d16c93f667cd3579c6dcf86a1ee6a1e27", "message": "Fixed a lot of css errors", "committedDate": "2020-11-16T20:47:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMzk1Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524603952", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            export class LectureUnitLayoutComponent implements OnInit {\n          \n          \n            \n            export class LectureUnitLayoutComponent {", "author": "jpbernius", "createdAt": "2020-11-16T21:28:02Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/lecture-unit-layout/lecture-unit-layout.component.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+\n+@Component({\n+    selector: 'jhi-lecture-unit-layout',\n+    templateUrl: './lecture-unit-layout.component.html',\n+    styles: [],\n+})\n+export class LectureUnitLayoutComponent implements OnInit {", "originalCommit": "8772e13d16c93f667cd3579c6dcf86a1ee6a1e27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNDc1OA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524624758", "bodyText": "f8b3a8c", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMzk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNDg2MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524624861", "bodyText": "f8b3a8c", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMzk1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDA5OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524604099", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { Component, Input, OnInit } from '@angular/core';\n          \n          \n            \n            import { Component, Input } from '@angular/core';", "author": "jpbernius", "createdAt": "2020-11-16T21:28:10Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/lecture-unit-layout/lecture-unit-layout.component.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import { Component, Input, OnInit } from '@angular/core';", "originalCommit": "8772e13d16c93f667cd3579c6dcf86a1ee6a1e27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNTAxNw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524625017", "bodyText": "f8b3a8c", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:46:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDA5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDQwNg==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524604406", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                constructor() {}\n          \n          \n            \n            \n          \n          \n            \n                ngOnInit(): void {}", "author": "jpbernius", "createdAt": "2020-11-16T21:28:27Z", "path": "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/lecture-unit-layout/lecture-unit-layout.component.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+\n+@Component({\n+    selector: 'jhi-lecture-unit-layout',\n+    templateUrl: './lecture-unit-layout.component.html',\n+    styles: [],\n+})\n+export class LectureUnitLayoutComponent implements OnInit {\n+    @Input()\n+    isLoading = false;\n+\n+    constructor() {}\n+\n+    ngOnInit(): void {}", "originalCommit": "8772e13d16c93f667cd3579c6dcf86a1ee6a1e27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNTE2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524625163", "bodyText": "f8b3a8c", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDQwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNTMzMA==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524625330", "bodyText": "f8b3a8c", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:46:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDQwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNjg3Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524606877", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Input()\n          \n          \n            \n                isLoading = false;\n          \n          \n            \n                @Input() isLoading = false;", "author": "jpbernius", "createdAt": "2020-11-16T21:30:30Z", "path": "src/test/javascript/spec/component/lecture-unit/text-unit/create-text-unit.component.spec.ts", "diffHunk": "@@ -0,0 +1,115 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { CreateTextUnitComponent } from 'app/lecture/lecture-unit/lecture-unit-management/create-text-unit/create-text-unit.component';\n+import { TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\n+import { MockRouter } from '../../../helpers/mocks/mock-router';\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { Observable, of } from 'rxjs';\n+import { TextUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/textUnit.service';\n+import { MockProvider } from 'ng-mocks';\n+import { JhiAlertService } from 'ng-jhipster';\n+import * as moment from 'moment';\n+import { By } from '@angular/platform-browser';\n+import { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\n+import { HttpResponse } from '@angular/common/http';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+@Component({ selector: 'jhi-text-unit-form', template: '' })\n+class TextUnitFormStubComponent {\n+    @Input() isEditMode = false;\n+    @Output() formSubmitted: EventEmitter<TextUnitFormData> = new EventEmitter<TextUnitFormData>();\n+}\n+\n+@Component({ selector: 'jhi-lecture-unit-layout', template: '<ng-content></ng-content>' })\n+class LectureUnitLayoutStubComponent {\n+    @Input()\n+    isLoading = false;", "originalCommit": "8772e13d16c93f667cd3579c6dcf86a1ee6a1e27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNjc1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524626753", "bodyText": "f8b3a8c", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNjg3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNzY0OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524607649", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Input()\n          \n          \n            \n                isLoading = false;\n          \n          \n            \n                @Input() isLoading = false;", "author": "jpbernius", "createdAt": "2020-11-16T21:31:08Z", "path": "src/test/javascript/spec/component/lecture-unit/text-unit/edit-text-unit.component.spec.ts", "diffHunk": "@@ -0,0 +1,157 @@\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import * as moment from 'moment';\n+\n+import { ComponentFixture, fakeAsync, TestBed, tick } from '@angular/core/testing';\n+import { TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\n+import { MockRouter } from '../../../helpers/mocks/mock-router';\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { Observable, of } from 'rxjs';\n+import { TextUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/textUnit.service';\n+import { MockProvider } from 'ng-mocks';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { EditTextUnitComponent } from 'app/lecture/lecture-unit/lecture-unit-management/edit-text-unit/edit-text-unit.component';\n+import { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\n+import { HttpResponse } from '@angular/common/http';\n+import { By } from '@angular/platform-browser';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+@Component({ selector: 'jhi-text-unit-form', template: '' })\n+class TextUnitFormStubComponent {\n+    @Input() isEditMode = false;\n+    @Input() formData: TextUnitFormData;\n+    @Output() formSubmitted: EventEmitter<TextUnitFormData> = new EventEmitter<TextUnitFormData>();\n+}\n+\n+@Component({ selector: 'jhi-lecture-unit-layout', template: '<ng-content></ng-content>' })\n+class LectureUnitLayoutStubComponent {\n+    @Input()\n+    isLoading = false;", "originalCommit": "8772e13d16c93f667cd3579c6dcf86a1ee6a1e27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyNTQ4Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2341#discussion_r524625483", "bodyText": "f8b3a8c", "author": "stefanwaldhauser", "createdAt": "2020-11-16T21:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNzY0OQ=="}], "type": "inlineReview"}, {"oid": "8dbab891348ef26e757133f95117dd068ae91eb1", "url": "https://github.com/ls1intum/Artemis/commit/8dbab891348ef26e757133f95117dd068ae91eb1", "message": "Apply suggestions from code review", "committedDate": "2020-11-16T21:34:44Z", "type": "commit"}, {"oid": "f8b3a8c32952d73bebf274e32e506db2f599a1f6", "url": "https://github.com/ls1intum/Artemis/commit/f8b3a8c32952d73bebf274e32e506db2f599a1f6", "message": "Even more fixed", "committedDate": "2020-11-16T21:44:43Z", "type": "commit"}, {"oid": "b8d0214d82a4f8b6a9d08e5f5ef421da31ad677c", "url": "https://github.com/ls1intum/Artemis/commit/b8d0214d82a4f8b6a9d08e5f5ef421da31ad677c", "message": "Merge remote-tracking branch 'origin/feature/text-units' into feature/text-units", "committedDate": "2020-11-16T21:45:19Z", "type": "commit"}, {"oid": "2737ce68a461e4c7690d75f405006dd0a51be918", "url": "https://github.com/ls1intum/Artemis/commit/2737ce68a461e4c7690d75f405006dd0a51be918", "message": "Merge branch 'develop' into feature/text-units", "committedDate": "2020-11-16T21:46:45Z", "type": "commit"}]}