{"pr_number": 1525, "pr_title": "Prototype for programming exercises with static code analysis", "pr_createdAt": "2020-05-26T11:28:37Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1525", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNzY4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466607689", "bodyText": "isStaticCodeAnalysisEnabled could be null which might be problematic", "author": "krusche", "createdAt": "2020-08-06T18:31:40Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/BambooService.java", "diffHunk": "@@ -623,10 +628,11 @@ private void createAutomaticFeedback(Result result, String methodName, boolean p\n      *\n      * @param result the result for which the feedback should be added\n      * @param jobs   the jobs list of the requestBody\n-     * @return a list of feedbacks itemsstored in a result\n+     * @param isStaticCodeAnalysisEnabled flag determining whether static code analysis was enabled\n+     * @return a list of feedback items stored in a result\n      */\n     @SuppressWarnings(\"unchecked\")\n-    private Result addFeedbackToResultNew(Result result, List<BambooBuildResultNotificationDTO.BambooJobDTO> jobs) {\n+    private Result addFeedbackToResultNew(Result result, List<BambooBuildResultNotificationDTO.BambooJobDTO> jobs, Boolean isStaticCodeAnalysisEnabled) {", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMDY4NA==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466630684", "bodyText": "I've implemented extra checks when creating, importing and editing programming exercises and secured those checks with integration tests. Additionally the database field isStaticCodeAnalysisEnabled is by default false and not nullable. This should be fine", "author": "kloessst", "createdAt": "2020-08-06T19:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNzY4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwODA1MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466608051", "bodyText": "in case isStaticCodeAnalysisEnabled is null, this will lead to a null pointer exception.\nEither you check for equals Boolean.TRUE or you make sure the value cannot be null which basically means you can use boolean above", "author": "krusche", "createdAt": "2020-08-06T18:32:25Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/BambooService.java", "diffHunk": "@@ -656,8 +662,14 @@ private Result addFeedbackToResultNew(Result result, List<BambooBuildResultNotif\n \n                     createAutomaticFeedback(result, methodName, true, null);\n                 }\n+                // 3) process static code analysis feedback\n+                boolean hasStaticCodeAnalysisFeedback = false;\n+                if (isStaticCodeAnalysisEnabled) {", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMTYxMw==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466631613", "bodyText": "See above. I can additionally secure this but it is no problem.", "author": "kloessst", "createdAt": "2020-08-06T19:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwODA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwOTU3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466609573", "bodyText": "add a note that this must be equal to the constant on the server (including the link to the corresponding file)", "author": "krusche", "createdAt": "2020-08-06T18:35:17Z", "path": "src/main/webapp/app/entities/feedback.model.ts", "diffHunk": "@@ -18,6 +18,8 @@ export enum FeedbackType {\n     AUTOMATIC_ADAPTED = 'AUTOMATIC_ADAPTED',\n }\n \n+export const STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER = 'SCAFeedbackIdentifier:';", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxMDEyOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466610129", "bodyText": "why do you call it that and not feedback?\nWould it not make more sense to have this as instance method (without static) and check it for this", "author": "krusche", "createdAt": "2020-08-06T18:36:23Z", "path": "src/main/webapp/app/entities/feedback.model.ts", "diffHunk": "@@ -33,6 +35,13 @@ export class Feedback implements BaseEntity {\n     public referenceType: string | null; // this string needs to follow UMLModelElementType in Apollon in typings.d.ts\n     public referenceId: string | null;\n \n+    public static isStaticCodeAnalysisFeedback(that: Feedback): boolean {", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyODE0Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466628142", "bodyText": "That's what I first tried when I've written the method. The problem is that we don't get proper feedback TypeScript instances from the server but just plain JSON which is transformed to JavaScript objects. Those objects don't have the proper prototype. I would need to create Feedback instances from the plain JSON received from the server. That's why all the other Feedback methods are also static.", "author": "kloessst", "createdAt": "2020-08-06T19:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxMDEyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxMDcwNw==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466610707", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (Feedback.isStaticCodeAnalysisFeedback(feedback)) {\n          \n          \n            \n                        if (feedback.isStaticCodeAnalysisFeedback()) {", "author": "krusche", "createdAt": "2020-08-06T18:37:32Z", "path": "src/main/webapp/app/exercises/shared/result/result-detail.component.ts", "diffHunk": "@@ -65,20 +75,40 @@ export class ResultDetailComponent implements OnInit {\n         return this.resultService.getFeedbackDetailsForResult(resultId).pipe(map(({ body: feedbackList }) => feedbackList!));\n     }\n \n-    private filterAndSetFeedbacks = (feedbackList: Feedback[]) => {\n+    private filterFeedback = (feedbackList: Feedback[]) => {\n         // TODO: The input object is mutated, this could lead to unexpected bugs.\n         this.result.feedbacks = feedbackList!;\n         if (!this.feedbackFilter) {\n-            this.feedbackList = feedbackList;\n+            return feedbackList;\n         } else {\n-            this.feedbackList = this.feedbackFilter\n+            return this.feedbackFilter\n                 .map((test) => {\n                     return feedbackList.find(({ text }) => text === test);\n                 })\n                 .filter(Boolean) as Feedback[];\n         }\n     };\n \n+    /**\n+     * Distinguishes between static code analysis feedback and test case feedback.\n+     * Assigns both lists to the component.\n+     *\n+     * @param feedbackList All available Feedback\n+     */\n+    private partitionAndSetFeedback(feedbackList: Feedback[]) {\n+        const testCaseFeedback: Feedback[] = [];\n+        const staticCodeAnalysisFeedback: Feedback[] = [];\n+        feedbackList.forEach((feedback) => {\n+            if (Feedback.isStaticCodeAnalysisFeedback(feedback)) {", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMTc5Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466631796", "bodyText": "See above", "author": "kloessst", "createdAt": "2020-08-06T19:17:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxMDcwNw=="}], "type": "inlineReview"}, {"oid": "b73b1210ad7c04e1884b7eeb92506c7f1cd0be1e", "url": "https://github.com/ls1intum/Artemis/commit/b73b1210ad7c04e1884b7eeb92506c7f1cd0be1e", "message": "Added DTOs to handle incoming static assessment data", "committedDate": "2020-05-23T14:15:09Z", "type": "commit"}, {"oid": "a96f34d80f9a99f024ceb7b58019a2435515b940", "url": "https://github.com/ls1intum/Artemis/commit/a96f34d80f9a99f024ceb7b58019a2435515b940", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-05-24T15:55:45Z", "type": "commit"}, {"oid": "f398147250f55016af2e275b0e4beebc1c692200", "url": "https://github.com/ls1intum/Artemis/commit/f398147250f55016af2e275b0e4beebc1c692200", "message": "Store static assessment issues as Feedback. FeedbackService handles the mapping of StaticAssessmentReportDTO to Feedback.", "committedDate": "2020-05-25T11:08:52Z", "type": "commit"}, {"oid": "0edad5e7e1e296bff176704225da12bd0d54cb3a", "url": "https://github.com/ls1intum/Artemis/commit/0edad5e7e1e296bff176704225da12bd0d54cb3a", "message": "Store static assessment with type AUTOMATIC_STATIC_ASSESSMENT", "committedDate": "2020-05-26T07:34:23Z", "type": "commit"}, {"oid": "a2cceb4a52737ddb00e625439096dd129cd19886", "url": "https://github.com/ls1intum/Artemis/commit/a2cceb4a52737ddb00e625439096dd129cd19886", "message": "Display static assessment detail text in result details component. Created a pipe to format the text.", "committedDate": "2020-05-26T07:40:32Z", "type": "commit"}, {"oid": "03b9f35547f7e48bdea374fd1fba4c2bea49e882", "url": "https://github.com/ls1intum/Artemis/commit/03b9f35547f7e48bdea374fd1fba4c2bea49e882", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-05-26T09:51:26Z", "type": "commit"}, {"oid": "8a4e7a1d10ed98d5f5389c2e6e1ed91b22018789", "url": "https://github.com/ls1intum/Artemis/commit/8a4e7a1d10ed98d5f5389c2e6e1ed91b22018789", "message": "Restructured creating of static assessment feedback.", "committedDate": "2020-05-26T10:53:28Z", "type": "commit"}, {"oid": "e2784974be85020cddb0ff3b36bcb01e4943882d", "url": "https://github.com/ls1intum/Artemis/commit/e2784974be85020cddb0ff3b36bcb01e4943882d", "message": "Fix docs with gradlew spotlessApply", "committedDate": "2020-05-26T12:05:04Z", "type": "commit"}, {"oid": "2d33f28e0ac236d3806f89179d8179cbaae4ea68", "url": "https://github.com/ls1intum/Artemis/commit/2d33f28e0ac236d3806f89179d8179cbaae4ea68", "message": "Made FeedbackService imports explicit and added documentation.", "committedDate": "2020-05-26T12:28:22Z", "type": "commit"}, {"oid": "ed110a24c5d86eb343c3a4b5488851fe8a840b0a", "url": "https://github.com/ls1intum/Artemis/commit/ed110a24c5d86eb343c3a4b5488851fe8a840b0a", "message": "Merge branch develop. Resolve conflict in FeedbackType by keeping both new Enum constants.", "committedDate": "2020-05-27T09:21:48Z", "type": "commit"}, {"oid": "242058d39985e27e1d738aaa6b65f4d214b8a92f", "url": "https://github.com/ls1intum/Artemis/commit/242058d39985e27e1d738aaa6b65f4d214b8a92f", "message": "automatic buildplan setup for sca + checkbox in client", "committedDate": "2020-06-02T10:45:29Z", "type": "commit"}, {"oid": "208b1e68daa5d5b3cf01b587b9d633317077c709", "url": "https://github.com/ls1intum/Artemis/commit/208b1e68daa5d5b3cf01b587b9d633317077c709", "message": "code styling", "committedDate": "2020-06-02T12:12:36Z", "type": "commit"}, {"oid": "aa2a4cfd8ad788187f610154f14dc9fa7d47d85c", "url": "https://github.com/ls1intum/Artemis/commit/aa2a4cfd8ad788187f610154f14dc9fa7d47d85c", "message": "Merge branch 'feature/store-static-code-analysis-findings' of https://github.com/ls1intum/Artemis into feature/store-static-code-analysis-findings", "committedDate": "2020-06-05T08:47:35Z", "type": "commit"}, {"oid": "9aa1d9503f0683721aab929dbc7bf3cce78a441a", "url": "https://github.com/ls1intum/Artemis/commit/9aa1d9503f0683721aab929dbc7bf3cce78a441a", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-06-07T12:00:31Z", "type": "commit"}, {"oid": "c4770b5f59d469d3ff657cb16cb4f47ed1c8fa71", "url": "https://github.com/ls1intum/Artemis/commit/c4770b5f59d469d3ff657cb16cb4f47ed1c8fa71", "message": "Show artifact download button only for student programming participations", "committedDate": "2020-06-07T13:27:47Z", "type": "commit"}, {"oid": "2a4b9b6e78f914299ed55f0ad74f72b8aaed54f8", "url": "https://github.com/ls1intum/Artemis/commit/2a4b9b6e78f914299ed55f0ad74f72b8aaed54f8", "message": "Filter out static code analysis artifacts for build artifact download", "committedDate": "2020-06-07T23:51:07Z", "type": "commit"}, {"oid": "43a8d9bf0d6d529d93ff4bd9d8989f390ab19beb", "url": "https://github.com/ls1intum/Artemis/commit/43a8d9bf0d6d529d93ff4bd9d8989f390ab19beb", "message": "Fix code style", "committedDate": "2020-06-08T00:14:21Z", "type": "commit"}, {"oid": "8180e9bdaa7680b25c414d95ab28f7723ce10ace", "url": "https://github.com/ls1intum/Artemis/commit/8180e9bdaa7680b25c414d95ab28f7723ce10ace", "message": "Added integration test checking if feedback with new type is properly saved", "committedDate": "2020-06-09T11:49:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzMjYxOA==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r437432618", "bodyText": "I suggest that we use a text identifier for static code analysis, e.g.\n\"StaticCodeAnalysisFeedback:<tool.name()>\"", "author": "krusche", "createdAt": "2020-06-09T13:47:38Z", "path": "src/main/java/de/tum/in/www1/artemis/service/FeedbackService.java", "diffHunk": "@@ -37,4 +44,31 @@ public FeedbackService(FeedbackRepository feedbackRepository) {\n         return feedbackRepository.findByReferenceInAndResult_Submission_Participation_Exercise(references, exercise).parallelStream()\n                 .collect(toMap(Feedback::getReference, feedback -> feedback));\n     }\n+\n+    // TODO: Move this to a StaticAssessmentService, implement it as a Helper Entity or directly in Feedback?\n+    /**\n+     * Transforms static assessment reports to feedback objects.\n+     * As we reuse the Feedback entity to store static code analysis issues, a mapping to those attributes\n+     * has to be defined, violating the first normal form.\n+     *\n+     * @param reports Static Assessment reports to be transformed\n+     * @return Feedback objects storing the static assessment issues\n+     */\n+    public List<Feedback> createFeedbackFromStaticAssessmentReports(List<StaticAssessmentReportDTO> reports) {\n+        List<Feedback> feedbackList = new ArrayList<>();\n+        for (final var report : reports) {\n+            StaticCodeAnalysisTool tool = report.getTool();\n+\n+            for (final var issue : report.getIssues()) {\n+                Feedback feedback = new Feedback();\n+                feedback.setText(tool.name());", "originalCommit": "43a8d9bf0d6d529d93ff4bd9d8989f390ab19beb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzMjk3MA==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r437432970", "bodyText": "AUTOMATIC", "author": "krusche", "createdAt": "2020-06-09T13:47:57Z", "path": "src/main/java/de/tum/in/www1/artemis/service/FeedbackService.java", "diffHunk": "@@ -37,4 +44,31 @@ public FeedbackService(FeedbackRepository feedbackRepository) {\n         return feedbackRepository.findByReferenceInAndResult_Submission_Participation_Exercise(references, exercise).parallelStream()\n                 .collect(toMap(Feedback::getReference, feedback -> feedback));\n     }\n+\n+    // TODO: Move this to a StaticAssessmentService, implement it as a Helper Entity or directly in Feedback?\n+    /**\n+     * Transforms static assessment reports to feedback objects.\n+     * As we reuse the Feedback entity to store static code analysis issues, a mapping to those attributes\n+     * has to be defined, violating the first normal form.\n+     *\n+     * @param reports Static Assessment reports to be transformed\n+     * @return Feedback objects storing the static assessment issues\n+     */\n+    public List<Feedback> createFeedbackFromStaticAssessmentReports(List<StaticAssessmentReportDTO> reports) {\n+        List<Feedback> feedbackList = new ArrayList<>();\n+        for (final var report : reports) {\n+            StaticCodeAnalysisTool tool = report.getTool();\n+\n+            for (final var issue : report.getIssues()) {\n+                Feedback feedback = new Feedback();\n+                feedback.setText(tool.name());\n+                feedback.setDetailText(issue.getMessage());\n+                feedback.setReference(issue.getClassname() + ':' + issue.getLine());\n+                feedback.setType(FeedbackType.AUTOMATIC_STATIC_ASSESSMENT);", "originalCommit": "43a8d9bf0d6d529d93ff4bd9d8989f390ab19beb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNjE0OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r437436149", "bodyText": "please get rid of this", "author": "krusche", "createdAt": "2020-06-09T13:50:57Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/Result.java", "diffHunk": "@@ -117,6 +118,10 @@\n     @Column(name = \"example_result\")\n     private Boolean exampleResult;\n \n+    // Stores static assessment feedback temporally. Otherwise, ProgrammingExerciseTestCaseService will remove it\n+    @Transient\n+    private List<Feedback> staticAssessmentFeedback = new ArrayList<>();", "originalCommit": "43a8d9bf0d6d529d93ff4bd9d8989f390ab19beb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f559dfa5f7512842c657866e452509945e5e0727", "url": "https://github.com/ls1intum/Artemis/commit/f559dfa5f7512842c657866e452509945e5e0727", "message": "Add integration test checking if static code analysis feedback will be stored correctly", "committedDate": "2020-06-09T23:02:48Z", "type": "commit"}, {"oid": "afd8004daa20d2fa202976d0209a503f2918d9ea", "url": "https://github.com/ls1intum/Artemis/commit/afd8004daa20d2fa202976d0209a503f2918d9ea", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-06-09T23:09:08Z", "type": "commit"}, {"oid": "4a4dd88d38bf6a759ba22c4e1f7fa1d10a609050", "url": "https://github.com/ls1intum/Artemis/commit/4a4dd88d38bf6a759ba22c4e1f7fa1d10a609050", "message": "Fix style with spotlessApply", "committedDate": "2020-06-09T23:17:27Z", "type": "commit"}, {"oid": "a8fd484d7bd18d0680c08b37fa004588f5fbdeed", "url": "https://github.com/ls1intum/Artemis/commit/a8fd484d7bd18d0680c08b37fa004588f5fbdeed", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-06-10T12:16:18Z", "type": "commit"}, {"oid": "aa2e085ecdaf949089ea98208e49c7bac4fa1726", "url": "https://github.com/ls1intum/Artemis/commit/aa2e085ecdaf949089ea98208e49c7bac4fa1726", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-06-10T23:55:52Z", "type": "commit"}, {"oid": "5ae02eaab0704f010c574e15ce4c8c98bb746b61", "url": "https://github.com/ls1intum/Artemis/commit/5ae02eaab0704f010c574e15ce4c8c98bb746b61", "message": "Merge remote-tracking branch 'origin/develop' into feature/store-static-code-analysis-findings\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/BambooBuildPlanService.java\n#\tsrc/main/webapp/app/entities/programming-exercise.model.ts\n#\tsrc/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.html\n#\tsrc/main/webapp/app/shared/pipes/shared-pipes.module.ts", "committedDate": "2020-07-28T09:29:56Z", "type": "commit"}, {"oid": "5881abb4fe5ec3b4bc3fb0f08aa004e93161ead4", "url": "https://github.com/ls1intum/Artemis/commit/5881abb4fe5ec3b4bc3fb0f08aa004e93161ead4", "message": "Merge conflict fixes", "committedDate": "2020-07-28T09:46:06Z", "type": "commit"}, {"oid": "9f2ad1c3111491de645a0b3ccfe1ec50ab21a90f", "url": "https://github.com/ls1intum/Artemis/commit/9f2ad1c3111491de645a0b3ccfe1ec50ab21a90f", "message": "Store static code analysis feedback as AUTOMATIC", "committedDate": "2020-07-28T10:13:03Z", "type": "commit"}, {"oid": "bb99b9622cf28f69688caed04f050c077f929dfe", "url": "https://github.com/ls1intum/Artemis/commit/bb99b9622cf28f69688caed04f050c077f929dfe", "message": "Rename pipe", "committedDate": "2020-07-28T12:04:07Z", "type": "commit"}, {"oid": "f9b132270490beaa924457ec2cc1b0e4554496b0", "url": "https://github.com/ls1intum/Artemis/commit/f9b132270490beaa924457ec2cc1b0e4554496b0", "message": "Adjust add function to distinguish static code analysis feedback in client", "committedDate": "2020-07-28T12:05:17Z", "type": "commit"}, {"oid": "f7702d5b4ac6b5d0cafc92ae35ee8cd9d673aaf2", "url": "https://github.com/ls1intum/Artemis/commit/f7702d5b4ac6b5d0cafc92ae35ee8cd9d673aaf2", "message": "Display static code analysis feedback in result details", "committedDate": "2020-07-28T12:06:26Z", "type": "commit"}, {"oid": "7ba5b1fe0e5030f6cf0c75122b4cdaa799ffe71e", "url": "https://github.com/ls1intum/Artemis/commit/7ba5b1fe0e5030f6cf0c75122b4cdaa799ffe71e", "message": "Add column enable static code analysis", "committedDate": "2020-07-28T12:17:05Z", "type": "commit"}, {"oid": "02ddf2b5c78ef56cffb27a45529e00df42723417", "url": "https://github.com/ls1intum/Artemis/commit/02ddf2b5c78ef56cffb27a45529e00df42723417", "message": "Extend table programming-exercise-details by a flag determining whether static code analysis is enabled or not", "committedDate": "2020-07-28T13:01:29Z", "type": "commit"}, {"oid": "372487e02a3d45ff5539b7cd474927f7e2fc2bde", "url": "https://github.com/ls1intum/Artemis/commit/372487e02a3d45ff5539b7cd474927f7e2fc2bde", "message": "Disable change of static code analysis enabled field on edit", "committedDate": "2020-07-28T13:08:26Z", "type": "commit"}, {"oid": "0410694392d085277c79c562b5e5730e3c0be967", "url": "https://github.com/ls1intum/Artemis/commit/0410694392d085277c79c562b5e5730e3c0be967", "message": "Refactor generation of static code analysis feedback for tests", "committedDate": "2020-07-28T13:43:33Z", "type": "commit"}, {"oid": "dfa1b153e09907e4b253b29f147d384969a5dd2d", "url": "https://github.com/ls1intum/Artemis/commit/dfa1b153e09907e4b253b29f147d384969a5dd2d", "message": "Static Code Analysis flag cannot change on update or import", "committedDate": "2020-07-28T14:34:52Z", "type": "commit"}, {"oid": "f1ca883a7d7dfec68168623c3a0b604b072d05ea", "url": "https://github.com/ls1intum/Artemis/commit/f1ca883a7d7dfec68168623c3a0b604b072d05ea", "message": "Fix and add test for static code analysis distinction", "committedDate": "2020-07-28T15:49:01Z", "type": "commit"}, {"oid": "01ebc0d0441fd5927b1178821dbc6a525d490580", "url": "https://github.com/ls1intum/Artemis/commit/01ebc0d0441fd5927b1178821dbc6a525d490580", "message": "Merge remote-tracking branch 'origin/develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-07-29T11:20:32Z", "type": "commit"}, {"oid": "d73ba5864dfa64d2dcabbf7d9d6f0964db38c805", "url": "https://github.com/ls1intum/Artemis/commit/d73ba5864dfa64d2dcabbf7d9d6f0964db38c805", "message": "Update test repository template", "committedDate": "2020-07-29T12:16:03Z", "type": "commit"}, {"oid": "64929c101ffb26d208fd6cbabc1324f6c6c7d8f0", "url": "https://github.com/ls1intum/Artemis/commit/64929c101ffb26d208fd6cbabc1324f6c6c7d8f0", "message": "Setup template for static code analysis only if the option is chosen", "committedDate": "2020-07-29T14:05:24Z", "type": "commit"}, {"oid": "dc169560b95b4a1b924511e528325098f3c51afd", "url": "https://github.com/ls1intum/Artemis/commit/dc169560b95b4a1b924511e528325098f3c51afd", "message": "Move fast checks up", "committedDate": "2020-07-29T14:09:29Z", "type": "commit"}, {"oid": "286c575f33d3d8679703df0d42806975bba138d7", "url": "https://github.com/ls1intum/Artemis/commit/286c575f33d3d8679703df0d42806975bba138d7", "message": "Check if the static code analysis flag was set for setup and import", "committedDate": "2020-07-29T14:15:44Z", "type": "commit"}, {"oid": "e816c9191df9ce126733500dd9b58e68e6ed6ffe", "url": "https://github.com/ls1intum/Artemis/commit/e816c9191df9ce126733500dd9b58e68e6ed6ffe", "message": "Integration tests for static code analysis not null", "committedDate": "2020-07-29T14:25:45Z", "type": "commit"}, {"oid": "192a54888eb5442575fd2cdc8626bcaa0f65c7c0", "url": "https://github.com/ls1intum/Artemis/commit/192a54888eb5442575fd2cdc8626bcaa0f65c7c0", "message": "Use Integer for static code analysis DTO", "committedDate": "2020-07-29T14:36:25Z", "type": "commit"}, {"oid": "a88fca42a4fa59f2155d43d6b0d5e153bf37b9ca", "url": "https://github.com/ls1intum/Artemis/commit/a88fca42a4fa59f2155d43d6b0d5e153bf37b9ca", "message": "Fix tests", "committedDate": "2020-07-29T14:37:56Z", "type": "commit"}, {"oid": "73d400055ec16a62767c62847072386b4eb5e186", "url": "https://github.com/ls1intum/Artemis/commit/73d400055ec16a62767c62847072386b4eb5e186", "message": "Process static code analysis reports only if the option was enabled during the creation of a programming exercise", "committedDate": "2020-07-30T11:13:47Z", "type": "commit"}, {"oid": "ee1560114876498d3ac3b4afe075fa5ed93479f2", "url": "https://github.com/ls1intum/Artemis/commit/ee1560114876498d3ac3b4afe075fa5ed93479f2", "message": "Do not filter out static code analysis feedback", "committedDate": "2020-07-30T13:45:52Z", "type": "commit"}, {"oid": "2cc2b45e382e3f3d935e5832b842fb7d71af6a54", "url": "https://github.com/ls1intum/Artemis/commit/2cc2b45e382e3f3d935e5832b842fb7d71af6a54", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-07-30T19:43:27Z", "type": "commit"}, {"oid": "ec009593d6feea923300cba4a9cdce8141e6399b", "url": "https://github.com/ls1intum/Artemis/commit/ec009593d6feea923300cba4a9cdce8141e6399b", "message": "Refactor test setup", "committedDate": "2020-07-31T11:10:42Z", "type": "commit"}, {"oid": "4c5a4536469d272c98521e6ab1d1307642dcb7cd", "url": "https://github.com/ls1intum/Artemis/commit/4c5a4536469d272c98521e6ab1d1307642dcb7cd", "message": "Fix test", "committedDate": "2020-07-31T11:12:38Z", "type": "commit"}, {"oid": "7c99295a0a929f8960d748ce6c795d7fc0a091d2", "url": "https://github.com/ls1intum/Artemis/commit/7c99295a0a929f8960d748ce6c795d7fc0a091d2", "message": "Only show static code analysis checkbox if programming language is JAVA", "committedDate": "2020-07-31T11:27:11Z", "type": "commit"}, {"oid": "425ba21328e85f33b6fc1ecfd1fdda8f4e3ef309", "url": "https://github.com/ls1intum/Artemis/commit/425ba21328e85f33b6fc1ecfd1fdda8f4e3ef309", "message": "Only allow static code analysis for JAVA on server side", "committedDate": "2020-07-31T11:43:05Z", "type": "commit"}, {"oid": "8239deefd8ce928d48d00af78c6be383a4ddf657", "url": "https://github.com/ls1intum/Artemis/commit/8239deefd8ce928d48d00af78c6be383a4ddf657", "message": "Adapt test case handling for static code analysis feedback", "committedDate": "2020-07-31T12:13:14Z", "type": "commit"}, {"oid": "6dc6c3c225c52d63f31a0945bc14c8e889035241", "url": "https://github.com/ls1intum/Artemis/commit/6dc6c3c225c52d63f31a0945bc14c8e889035241", "message": "Do not generate test cases from static code analysis feedback", "committedDate": "2020-07-31T12:51:50Z", "type": "commit"}, {"oid": "72355637ae4d46aa17609dcba3d3535464f1f178", "url": "https://github.com/ls1intum/Artemis/commit/72355637ae4d46aa17609dcba3d3535464f1f178", "message": "Do not use equals for enum comparison", "committedDate": "2020-07-31T12:59:45Z", "type": "commit"}, {"oid": "5a699758defb37061dee9d5fb8512211c483d910", "url": "https://github.com/ls1intum/Artemis/commit/5a699758defb37061dee9d5fb8512211c483d910", "message": "Show in static code analysis enabled in programming exercise details", "committedDate": "2020-07-31T13:20:55Z", "type": "commit"}, {"oid": "9dcc47407c2cce7bafc1cbed02be3884530d3f26", "url": "https://github.com/ls1intum/Artemis/commit/9dcc47407c2cce7bafc1cbed02be3884530d3f26", "message": "Use a static method because Feedback objects are not proper instances of Feedback class", "committedDate": "2020-07-31T13:59:49Z", "type": "commit"}, {"oid": "5bdddbc2f73c6b577a722c574729795f6c912bb7", "url": "https://github.com/ls1intum/Artemis/commit/5bdddbc2f73c6b577a722c574729795f6c912bb7", "message": "Fix method call", "committedDate": "2020-07-31T14:00:37Z", "type": "commit"}, {"oid": "6062aa2d6bda8b2493239feacd1284f24deb0c6a", "url": "https://github.com/ls1intum/Artemis/commit/6062aa2d6bda8b2493239feacd1284f24deb0c6a", "message": "Move enable static code analysis radio", "committedDate": "2020-07-31T14:44:16Z", "type": "commit"}, {"oid": "5cf9e7c696bdff0cc5f49d8a32699ef3e761a9fe", "url": "https://github.com/ls1intum/Artemis/commit/5cf9e7c696bdff0cc5f49d8a32699ef3e761a9fe", "message": "Reset static code analysis flag when switching to another programming language not supporting this option", "committedDate": "2020-07-31T14:58:33Z", "type": "commit"}, {"oid": "a37bda35953d06788854a83de7e21ea2ca3247b8", "url": "https://github.com/ls1intum/Artemis/commit/a37bda35953d06788854a83de7e21ea2ca3247b8", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-07-31T15:06:42Z", "type": "commit"}, {"oid": "a2dc57e0fcfd464533e3ba65c0dee9d05444b86c", "url": "https://github.com/ls1intum/Artemis/commit/a2dc57e0fcfd464533e3ba65c0dee9d05444b86c", "message": "Extend StaticCodeAnalysisTool enum and use it create the build plan in a generic way", "committedDate": "2020-08-02T01:49:11Z", "type": "commit"}, {"oid": "cc79412a7e1f5fe040b2926f77e37469473d32a8", "url": "https://github.com/ls1intum/Artemis/commit/cc79412a7e1f5fe040b2926f77e37469473d32a8", "message": "Fix command builder", "committedDate": "2020-08-02T01:51:12Z", "type": "commit"}, {"oid": "f60fbe180efabb2bbb6e8421acbd30fc69f5ce43", "url": "https://github.com/ls1intum/Artemis/commit/f60fbe180efabb2bbb6e8421acbd30fc69f5ce43", "message": "Set hasFeedback properly if static code analysis found issues", "committedDate": "2020-08-02T11:32:46Z", "type": "commit"}, {"oid": "0121058674a977e136b914440d72ea60c366569c", "url": "https://github.com/ls1intum/Artemis/commit/0121058674a977e136b914440d72ea60c366569c", "message": "Enhance feedback display", "committedDate": "2020-08-02T13:15:05Z", "type": "commit"}, {"oid": "007fae8b34a00e7c7340e833c7f3d0bf4174996a", "url": "https://github.com/ls1intum/Artemis/commit/007fae8b34a00e7c7340e833c7f3d0bf4174996a", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-08-02T13:15:46Z", "type": "commit"}, {"oid": "aee894c26a854ba18831347d977b04e38cdf51c9", "url": "https://github.com/ls1intum/Artemis/commit/aee894c26a854ba18831347d977b04e38cdf51c9", "message": "Fix edge case in build plan command creation method", "committedDate": "2020-08-02T13:28:34Z", "type": "commit"}, {"oid": "a3a4f61185a518268c7148cc4e91fed55d55477a", "url": "https://github.com/ls1intum/Artemis/commit/a3a4f61185a518268c7148cc4e91fed55d55477a", "message": "Merge branch 'feature/store-static-code-analysis-findings' of https://github.com/ls1intum/Artemis into feature/store-static-code-analysis-findings", "committedDate": "2020-08-02T13:29:04Z", "type": "commit"}, {"oid": "a63250651cae5ba5a140f9f6c0a54d0f42aabfe6", "url": "https://github.com/ls1intum/Artemis/commit/a63250651cae5ba5a140f9f6c0a54d0f42aabfe6", "message": "Fix test and comments", "committedDate": "2020-08-02T20:58:36Z", "type": "commit"}, {"oid": "6ee487024d07947303fba56148a89a53685d2def", "url": "https://github.com/ls1intum/Artemis/commit/6ee487024d07947303fba56148a89a53685d2def", "message": "Use StringJoiner", "committedDate": "2020-08-02T22:42:18Z", "type": "commit"}, {"oid": "3480167aab6fc1aeae6ac3d6fb19237dc803ffc6", "url": "https://github.com/ls1intum/Artemis/commit/3480167aab6fc1aeae6ac3d6fb19237dc803ffc6", "message": "Fix DTO field name (must match the notification name)", "committedDate": "2020-08-03T12:15:18Z", "type": "commit"}, {"oid": "93c6c44568583150715abef2a42c553819d545ca", "url": "https://github.com/ls1intum/Artemis/commit/93c6c44568583150715abef2a42c553819d545ca", "message": "Improve readability", "committedDate": "2020-08-03T13:00:19Z", "type": "commit"}, {"oid": "8e77d395518ed1ccd6057d1924928200c6d987bd", "url": "https://github.com/ls1intum/Artemis/commit/8e77d395518ed1ccd6057d1924928200c6d987bd", "message": "Increase build log entries fetched from bamboo and filter out more useless logs", "committedDate": "2020-08-03T17:26:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU3NDM3MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464574371", "bodyText": "Maybe add a null check for this.text?", "author": "schultek", "createdAt": "2020-08-03T17:59:23Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/Feedback.java", "diffHunk": "@@ -207,6 +209,15 @@ public void setGradingInstruction(GradingInstruction gradingInstruction) {\n         this.gradingInstruction = gradingInstruction;\n     }\n \n+    /**\n+     * Checks whether the feedback was created by static code analysis\n+     * @return true if the it is static code analysis feedback else false\n+     */\n+    @JsonIgnore\n+    public boolean isStaticCodeAnalysisFeedback() {\n+        return this.text.startsWith(STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER) && this.type == FeedbackType.AUTOMATIC;", "originalCommit": "8e77d395518ed1ccd6057d1924928200c6d987bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4MTg1Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464581856", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                 * @param staticCodeAnalysisFeedback the static code analysis feedback items to keep\n          \n          \n            \n                 */", "author": "schultek", "createdAt": "2020-08-03T18:14:15Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseTestCaseService.java", "diffHunk": "@@ -254,12 +270,12 @@ private void updateResultString(Result result, Set<ProgrammingExerciseTestCase>\n     }\n \n     /**\n-     * Remove all feedback information from a result and treat it as if it has a score of 0.\n+     * Remove all test case feedback information from a result and treat it as if it has a score of 0.\n      * @param result\n      */", "originalCommit": "8e77d395518ed1ccd6057d1924928200c6d987bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4MzEzOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464583139", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param jobs   the jobs list of the requestBody\n          \n          \n            \n                 * @param jobs   the jobs list of the requestBody\n          \n          \n            \n                 * @param isStaticCodeAnalysisEnabled  whether to include static code analysis reports as feedback", "author": "schultek", "createdAt": "2020-08-03T18:16:44Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/BambooService.java", "diffHunk": "@@ -623,10 +624,10 @@ private void createAutomaticFeedback(Result result, String methodName, boolean p\n      *\n      * @param result the result for which the feedback should be added\n      * @param jobs   the jobs list of the requestBody", "originalCommit": "8e77d395518ed1ccd6057d1924928200c6d987bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7235a3faeb1c9947c78f13bcf3f5cfbbbc5323ab", "url": "https://github.com/ls1intum/Artemis/commit/7235a3faeb1c9947c78f13bcf3f5cfbbbc5323ab", "message": "Implement feedback", "committedDate": "2020-08-04T08:34:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxMDUxMw==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464910513", "bodyText": "Is that something that is caused by spotbugs or by Bamboo?\nSo if a different tool gets added, do we also have to change something here?", "author": "sleiss", "createdAt": "2020-08-04T09:08:47Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/BambooService.java", "diffHunk": "@@ -850,7 +876,9 @@ private Long calculateScoreForResult(Result result, int skippedTests) {\n                         logString.startsWith(\"[ERROR] For more information about the errors and possible solutions\") ||\n                         logString.startsWith(\"[ERROR] Re-run Maven using\") ||\n                         logString.startsWith(\"[ERROR] To see the full stack trace of the errors\") ||\n-                        logString.startsWith(\"[ERROR] -> [Help 1]\")\n+                        logString.startsWith(\"[ERROR] -> [Help 1]\") ||\n+                        logString.startsWith(\"Unable to publish artifact\") ||", "originalCommit": "7235a3faeb1c9947c78f13bcf3f5cfbbbc5323ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzMTYxNA==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464931614", "bodyText": "This logged by bamboo itself if an artifact can't be created. Happens for example if a compilation error occurs and and no Bytecode is available for analysis. This should be fine for other tools as well.", "author": "kloessst", "createdAt": "2020-08-04T09:45:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxMDUxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzODU4NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464938585", "bodyText": "Great!", "author": "sleiss", "createdAt": "2020-08-04T09:57:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxMDUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxMzE1MA==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464913150", "bodyText": "Is it planned to only enable some of the static code analysis tools (e.g. only SpotBugs and not a different tool)?\nThis cannot be realized well here, so it might be better to use something like static-code-analysis-stopbugs-start instead?", "author": "sleiss", "createdAt": "2020-08-04T09:13:27Z", "path": "src/main/resources/templates/java/test/projectTemplate/pom.xml", "diffHunk": "@@ -61,6 +61,17 @@\n                 <artifactId>maven-failsafe-plugin</artifactId>\n                 <version>2.22.2</version>\n             </plugin>\n+            %static-code-analysis-start%", "originalCommit": "7235a3faeb1c9947c78f13bcf3f5cfbbbc5323ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzMjg0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464932847", "bodyText": "I have no concept for this at the moment. We probably just enable all tools for a language and provide some predefined rule configurations for the instructor. I think this is fine and we can adapt this if we have a concept for configurations.", "author": "kloessst", "createdAt": "2020-08-04T09:47:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxMzE1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxOTA2Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464919063", "bodyText": "I'm not sure if this is also affected by what @krusche told us today in the meeting with the problematic getters, could you maybe check that?", "author": "sleiss", "createdAt": "2020-08-04T09:23:23Z", "path": "src/main/webapp/app/exercises/shared/result/result.component.ts", "diffHunk": "@@ -292,6 +292,13 @@ export class ResultComponent implements OnInit, OnChanges {\n         return false;\n     }\n \n+    /**\n+     * Checks whether the participation is a student programming participation\n+     */\n+    isStudentProgrammingParticipation() {", "originalCommit": "7235a3faeb1c9947c78f13bcf3f5cfbbbc5323ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "00195d21ec49b7b1e75813d0b26caf01c6062fbd", "url": "https://github.com/ls1intum/Artemis/commit/00195d21ec49b7b1e75813d0b26caf01c6062fbd", "message": "Extend java test repo readme", "committedDate": "2020-08-04T10:24:14Z", "type": "commit"}, {"oid": "2464bb8e8f336c992c3bdd5241235434a9d4d50b", "url": "https://github.com/ls1intum/Artemis/commit/2464bb8e8f336c992c3bdd5241235434a9d4d50b", "message": "Check for ParticipationType directly in template", "committedDate": "2020-08-04T11:08:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MjAzNA==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r464992034", "bodyText": "Does it make sense to put these checks in a separate class (ProgramminExerciseAccessService), since we are using them at least twice? I saw something similar for StudentExams", "author": "TobiasPr", "createdAt": "2020-08-04T11:48:23Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -360,6 +373,34 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n \n         log.debug(\"REST request to import programming exercise {} into course {}\", sourceExerciseId, newExercise.getCourseViaExerciseGroupOrCourseMember().getId());\n \n+        // Check if max score is set\n+        if (newExercise.getMaxScore() == null) {\n+            return ResponseEntity.badRequest().headers(HeaderUtil.createAlert(applicationName, \"The max score is invalid\", \"maxscoreInvalid\")).body(null);\n+        }\n+\n+        // Check if a participation mode is set\n+        if (!Boolean.TRUE.equals(newExercise.isAllowOnlineEditor()) && !Boolean.TRUE.equals(newExercise.isAllowOfflineIde())) {\n+            return ResponseEntity.badRequest().headers(HeaderUtil.createAlert(applicationName,\n+                    \"You need to allow at least one participation mode, the online editor or the offline IDE\", \"noParticipationModeAllowed\")).body(null);\n+        }\n+\n+        // Check if the static code analysis flag was set\n+        if (newExercise.isStaticCodeAnalysisEnabled() == null) {\n+            return ResponseEntity.badRequest()\n+                    .headers(HeaderUtil.createAlert(applicationName, \"The static code analysis flag must be set to true or false\", \"staticCodeAnalysisFlagNotSet\")).body(null);\n+        }\n+\n+        // Check if programming language is set\n+        if (newExercise.getProgrammingLanguage() == null) {\n+            return ResponseEntity.badRequest().headers(HeaderUtil.createAlert(applicationName, \"No programming language was specified\", \"programmingLanguageNotSet\")).body(null);\n+        }\n+\n+        // Static code analysis is only supported for Java at the moment\n+        if (Boolean.TRUE.equals(newExercise.isStaticCodeAnalysisEnabled()) && newExercise.getProgrammingLanguage() != ProgrammingLanguage.JAVA) {\n+            return ResponseEntity.badRequest()\n+                    .headers(HeaderUtil.createAlert(applicationName, \"The static code analysis can only be enabled for Java\", \"staticCodeAnalysisOnlyAvailableForJava\")).body(null);\n+        }\n+", "originalCommit": "2464bb8e8f336c992c3bdd5241235434a9d4d50b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MTI5NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r465191295", "bodyText": "Do you mean something like ProgrammingExerciseValidationService to validate incoming requests? I think that would be a good pattern in general. But I think this is out of scope for this PR.", "author": "kloessst", "createdAt": "2020-08-04T16:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MjAzNA=="}], "type": "inlineReview"}, {"oid": "49e58a661a2ba6f75e76ff077a71ceda16498d27", "url": "https://github.com/ls1intum/Artemis/commit/49e58a661a2ba6f75e76ff077a71ceda16498d27", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-08-05T18:34:01Z", "type": "commit"}, {"oid": "1be25abb855dd4d01c1c7b32e237451edc50f638", "url": "https://github.com/ls1intum/Artemis/commit/1be25abb855dd4d01c1c7b32e237451edc50f638", "message": "Fix imports", "committedDate": "2020-08-05T18:44:51Z", "type": "commit"}, {"oid": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "url": "https://github.com/ls1intum/Artemis/commit/d9215ea4a47e8f3662d648a94447d8ceceeea6de", "message": "Merge branch 'develop' into feature/store-static-code-analysis-findings", "committedDate": "2020-08-06T18:28:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNzU4MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466607581", "bodyText": "Codacy found an issue: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()", "author": "artemis-bot", "createdAt": "2020-08-06T18:31:27Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseTestCaseService.java", "diffHunk": "@@ -175,10 +189,10 @@ public Result updateResultFromTestCases(Result result, ProgrammingExercise exerc\n             updateResultString(result, successfulTestCases, testCasesForCurrentDate);\n         }\n         // Case 2: There are no test cases that are executed before the due date has passed. We need to do this to differentiate this case from a build error.\n-        else if (testCases.size() > 0 && result.getFeedbacks().size() > 0) {\n-            removeAllFeedbackAndSetScoreToZero(result);\n+        else if (testCases.size() > 0 && testCaseFeedback.size() > 0) {", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNzU4NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466607585", "bodyText": "Codacy found an issue: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()", "author": "artemis-bot", "createdAt": "2020-08-06T18:31:28Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseTestCaseService.java", "diffHunk": "@@ -254,12 +270,13 @@ private void updateResultString(Result result, Set<ProgrammingExerciseTestCase>\n     }\n \n     /**\n-     * Remove all feedback information from a result and treat it as if it has a score of 0.\n-     * @param result\n+     * Remove all test case feedback information from a result and treat it as if it has a score of 0.\n+     * @param result Result containing all feedback\n+     * @param staticCodeAnalysisFeedback Static code analysis feedback to keep\n      */\n-    private void removeAllFeedbackAndSetScoreToZero(Result result) {\n-        result.setFeedbacks(new ArrayList<>());\n-        result.hasFeedback(false);\n+    private void removeAllTestCaseFeedbackAndSetScoreToZero(Result result, List<Feedback> staticCodeAnalysisFeedback) {\n+        result.setFeedbacks(staticCodeAnalysisFeedback);\n+        result.hasFeedback(staticCodeAnalysisFeedback.size() > 0);", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNzU5Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1525#discussion_r466607593", "bodyText": "Codacy found an issue: Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()", "author": "artemis-bot", "createdAt": "2020-08-06T18:31:29Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseTestCaseService.java", "diffHunk": "@@ -157,8 +158,21 @@ public Result updateResultFromTestCases(Result result, ProgrammingExercise exerc\n         // We also don't filter the test cases for the solution/template participation's results as they are used as indicators for the instructor!\n         Set<ProgrammingExerciseTestCase> testCasesForCurrentDate = testCases.stream().filter(testCase -> !shouldTestsWithAfterDueDateFlagBeRemoved || !testCase.isAfterDueDate())\n                 .collect(Collectors.toSet());\n-        // Case 1: There are tests and feedbacks, find out which tests were not executed or should only count to the score after the due date.\n-        if (testCasesForCurrentDate.size() > 0 && result.getFeedbacks().size() > 0) {\n+        // Distinguish between static code analysis feedback and test case feedback\n+        // TODO: For now we are only concerned with not breaking existing functionality and not losing static code analysis feedback.\n+        // This method has to be extended/refactored when a grading concept for static code analysis has been created\n+        List<Feedback> testCaseFeedback = new ArrayList<>();\n+        List<Feedback> staticCodeAnalysisFeedback = new ArrayList<>();\n+        for (var feedback : result.getFeedbacks()) {\n+            if (feedback.isStaticCodeAnalysisFeedback()) {\n+                staticCodeAnalysisFeedback.add(feedback);\n+            }\n+            else {\n+                testCaseFeedback.add(feedback);\n+            }\n+        }\n+        // Case 1: There are tests and test case feedbacks, find out which tests were not executed or should only count to the score after the due date.\n+        if (testCasesForCurrentDate.size() > 0 && testCaseFeedback.size() > 0) {", "originalCommit": "d9215ea4a47e8f3662d648a94447d8ceceeea6de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}