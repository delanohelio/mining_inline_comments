{"pr_number": 2367, "pr_title": "Notification popup", "pr_createdAt": "2020-11-08T23:57:14Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2367", "timeline": [{"oid": "77df38e7ab9998fee7570d25fbfa20f48e0fcdbf", "url": "https://github.com/ls1intum/Artemis/commit/77df38e7ab9998fee7570d25fbfa20f48e0fcdbf", "message": "Server: Rename NotificationType EXERCISE_STARTED to QUIZ_EXERCISE_STARTED", "committedDate": "2020-10-29T20:57:44Z", "type": "commit"}, {"oid": "cfd0bc354c5dce1f02cc788820b07da88c04c549", "url": "https://github.com/ls1intum/Artemis/commit/cfd0bc354c5dce1f02cc788820b07da88c04c549", "message": "Server: \"Exercise started\" -> \"Quiz started\"", "committedDate": "2020-10-29T21:00:15Z", "type": "commit"}, {"oid": "765b0216dfecd30874d893d0716f07a693a1a38b", "url": "https://github.com/ls1intum/Artemis/commit/765b0216dfecd30874d893d0716f07a693a1a38b", "message": "Client: Adjust courseManagementService to fetch courses for notifications", "committedDate": "2020-11-04T07:15:21Z", "type": "commit"}, {"oid": "8d3ea199d4225ea8b8accbfec94e72da8a89ef52", "url": "https://github.com/ls1intum/Artemis/commit/8d3ea199d4225ea8b8accbfec94e72da8a89ef52", "message": "Client: Add notification popup component", "committedDate": "2020-11-04T21:44:45Z", "type": "commit"}, {"oid": "4919a98a9d6396379156b3a961fe40ef9385a757", "url": "https://github.com/ls1intum/Artemis/commit/4919a98a9d6396379156b3a961fe40ef9385a757", "message": "Client: Handle empty notification target in notification-popup.component", "committedDate": "2020-11-08T20:06:17Z", "type": "commit"}, {"oid": "73efda598a653fbda649ae3e0c4d289582f7a3c1", "url": "https://github.com/ls1intum/Artemis/commit/73efda598a653fbda649ae3e0c4d289582f7a3c1", "message": "Client: Handle empty notification target in notification-popup.component (2)", "committedDate": "2020-11-08T20:18:02Z", "type": "commit"}, {"oid": "e2508ad3696e8adcc887a3574c8e58b60615457b", "url": "https://github.com/ls1intum/Artemis/commit/e2508ad3696e8adcc887a3574c8e58b60615457b", "message": "Client: Use notification subscription mechanism in notification sidebar component", "committedDate": "2020-11-08T21:38:42Z", "type": "commit"}, {"oid": "b6580803fb477e7ae6f2f8cf4d91ace4df61fc46", "url": "https://github.com/ls1intum/Artemis/commit/b6580803fb477e7ae6f2f8cf4d91ace4df61fc46", "message": "Client [Test]: Adjust notification-sidebar.component.spec", "committedDate": "2020-11-08T21:41:05Z", "type": "commit"}, {"oid": "b9ad2688597bd930f55f2375c8374f02a6db6e1f", "url": "https://github.com/ls1intum/Artemis/commit/b9ad2688597bd930f55f2375c8374f02a6db6e1f", "message": "Client [Test]: Adjust notification service mock", "committedDate": "2020-11-08T22:54:34Z", "type": "commit"}, {"oid": "e26ff73f4e151d17028b2daf32042c77531ce050", "url": "https://github.com/ls1intum/Artemis/commit/e26ff73f4e151d17028b2daf32042c77531ce050", "message": "Client [Test]: Add notification-popup.component.spec", "committedDate": "2020-11-08T22:54:55Z", "type": "commit"}, {"oid": "a4cd8d38e9d5460289c47f1ac391be918513a8aa", "url": "https://github.com/ls1intum/Artemis/commit/a4cd8d38e9d5460289c47f1ac391be918513a8aa", "message": "Server: Add route to retrieve all active courses for notifications", "committedDate": "2020-11-08T23:02:48Z", "type": "commit"}, {"oid": "6bccc6d3766f98216f3b62c78657f5ea86b7cef3", "url": "https://github.com/ls1intum/Artemis/commit/6bccc6d3766f98216f3b62c78657f5ea86b7cef3", "message": "Server [Test]: Extend CourseIntegrationTest", "committedDate": "2020-11-08T23:05:40Z", "type": "commit"}, {"oid": "4d683715bc87646f3d0150d417470654ca7834b2", "url": "https://github.com/ls1intum/Artemis/commit/4d683715bc87646f3d0150d417470654ca7834b2", "message": "Server: Do not send notification if quiz exercise is started", "committedDate": "2020-11-08T23:20:07Z", "type": "commit"}, {"oid": "76bc5f234bd73042c5056ef4862dbc073cbd13a9", "url": "https://github.com/ls1intum/Artemis/commit/76bc5f234bd73042c5056ef4862dbc073cbd13a9", "message": "Merge branch 'develop' into feature/notification/popup-quiz-start", "committedDate": "2020-11-08T23:21:06Z", "type": "commit"}, {"oid": "407459ceea9cecb76ded0d367d1533ca35bfe37d", "url": "https://github.com/ls1intum/Artemis/commit/407459ceea9cecb76ded0d367d1533ca35bfe37d", "message": "Client: Remove notificationService from courseManagementService to prevent circular dependency", "committedDate": "2020-11-09T00:05:45Z", "type": "commit"}, {"oid": "d84edfa9c9b8e26a7001e5fa08d5b5d7022ecf81", "url": "https://github.com/ls1intum/Artemis/commit/d84edfa9c9b8e26a7001e5fa08d5b5d7022ecf81", "message": "Client: Fix Codacy issues (1)", "committedDate": "2020-11-09T00:11:08Z", "type": "commit"}, {"oid": "479bfc8f7b27532193a239b5e35bd52368b1d40c", "url": "https://github.com/ls1intum/Artemis/commit/479bfc8f7b27532193a239b5e35bd52368b1d40c", "message": "Server: Fix Codacy issues (2)", "committedDate": "2020-11-09T00:12:49Z", "type": "commit"}, {"oid": "5ca3f1443fc77180028bb9355f9d8fecad0d732f", "url": "https://github.com/ls1intum/Artemis/commit/5ca3f1443fc77180028bb9355f9d8fecad0d732f", "message": "Client: Fix Codacy issues (3)", "committedDate": "2020-11-09T00:23:25Z", "type": "commit"}, {"oid": "efc3edc1d94829ac1070e712ae3423808f949e65", "url": "https://github.com/ls1intum/Artemis/commit/efc3edc1d94829ac1070e712ae3423808f949e65", "message": "Client: Fix Codacy issues (4)", "committedDate": "2020-11-09T00:49:38Z", "type": "commit"}, {"oid": "a60dfb0a65951d0121d4130779f419b050d76849", "url": "https://github.com/ls1intum/Artemis/commit/a60dfb0a65951d0121d4130779f419b050d76849", "message": "Merge branch 'develop' into feature/notification/popup-quiz-start", "committedDate": "2020-11-09T23:24:04Z", "type": "commit"}, {"oid": "9e24fe64f1e1fca45ad28a69392877d8d41bfc69", "url": "https://github.com/ls1intum/Artemis/commit/9e24fe64f1e1fca45ad28a69392877d8d41bfc69", "message": "Client: Prevent undefined in notification-popup.component and notification-sidebar.component", "committedDate": "2020-11-10T00:12:11Z", "type": "commit"}, {"oid": "751c40492453f87aa4e40eb7910a5e0e73f13ed0", "url": "https://github.com/ls1intum/Artemis/commit/751c40492453f87aa4e40eb7910a5e0e73f13ed0", "message": "Client: Adjust bottom positioning of notification popup", "committedDate": "2020-11-10T00:15:47Z", "type": "commit"}, {"oid": "25be2e023c771bfdc2173d4d8c0bc0a92ea31fbf", "url": "https://github.com/ls1intum/Artemis/commit/25be2e023c771bfdc2173d4d8c0bc0a92ea31fbf", "message": "Client: Use ReplaySubject", "committedDate": "2020-11-10T00:47:54Z", "type": "commit"}, {"oid": "6b940feabc46b31a5e77c8964301f26c207d977d", "url": "https://github.com/ls1intum/Artemis/commit/6b940feabc46b31a5e77c8964301f26c207d977d", "message": "Client: Fix target of dummy quiz notification", "committedDate": "2020-11-10T01:00:10Z", "type": "commit"}, {"oid": "6f1721961d16aa8f45a49db7c35380a0e08ed4ab", "url": "https://github.com/ls1intum/Artemis/commit/6f1721961d16aa8f45a49db7c35380a0e08ed4ab", "message": "Merge branch 'develop' into feature/notification/popup-quiz-start", "committedDate": "2020-11-10T07:57:24Z", "type": "commit"}, {"oid": "235c6a5dea40f52b427712d79edc1c84f310b8a5", "url": "https://github.com/ls1intum/Artemis/commit/235c6a5dea40f52b427712d79edc1c84f310b8a5", "message": "Merge branch 'develop' into feature/notification/popup-quiz-start", "committedDate": "2020-11-11T20:56:00Z", "type": "commit"}, {"oid": "4adb7ebfd10d81424cf4041a292c6bbf6f896d43", "url": "https://github.com/ls1intum/Artemis/commit/4adb7ebfd10d81424cf4041a292c6bbf6f896d43", "message": "Merge branch 'develop' into feature/notification/popup-quiz-start", "committedDate": "2020-11-13T21:30:18Z", "type": "commit"}, {"oid": "e77c424ebae3de862a928306f10a84352ce41019", "url": "https://github.com/ls1intum/Artemis/commit/e77c424ebae3de862a928306f10a84352ce41019", "message": "Merge branch 'develop' into feature/notification/popup-quiz-start", "committedDate": "2020-11-14T20:58:27Z", "type": "commit"}, {"oid": "28216d6585d7f7ae5517d5bc5416da27c044ab2b", "url": "https://github.com/ls1intum/Artemis/commit/28216d6585d7f7ae5517d5bc5416da27c044ab2b", "message": "Merge branch 'develop' into feature/notification/popup-quiz-start", "committedDate": "2020-11-15T23:10:31Z", "type": "commit"}, {"oid": "942d6542fab023d56c6dc605c03503552c808239", "url": "https://github.com/ls1intum/Artemis/commit/942d6542fab023d56c6dc605c03503552c808239", "message": "Do not add current user as author of quiz started notification", "committedDate": "2020-11-16T00:18:53Z", "type": "commit"}, {"oid": "5ce77e6b9ac9ec498e3fabeb237077cd5d35e416", "url": "https://github.com/ls1intum/Artemis/commit/5ce77e6b9ac9ec498e3fabeb237077cd5d35e416", "message": "Merge remote-tracking branch 'origin/feature/notification/popup-quiz-start' into feature/notification/popup-quiz-start", "committedDate": "2020-11-16T00:19:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwNjAwMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2367#discussion_r525206001", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                describe('Webscoket receive', () => {\n          \n          \n            \n                describe('Websocket receive', () => {", "author": "stefanwaldhauser", "createdAt": "2020-11-17T14:41:16Z", "path": "src/test/javascript/spec/component/shared/notification/notification-popup.component.spec.ts", "diffHunk": "@@ -0,0 +1,135 @@\n+import { ComponentFixture, TestBed, fakeAsync, tick } from '@angular/core/testing';\n+import { By } from '@angular/platform-browser';\n+import { Router } from '@angular/router';\n+import { TranslateService } from '@ngx-translate/core';\n+import { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n+import { BehaviorSubject } from 'rxjs';\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import * as sinon from 'sinon';\n+import { NotificationPopupComponent } from 'app/shared/notification/notification-popup/notification-popup.component';\n+import { NotificationService } from 'app/shared/notification/notification.service';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { ArtemisTestModule } from '../../../test.module';\n+import { MockSyncStorage } from '../../../helpers/mocks/service/mock-sync-storage.service';\n+import { MockNotificationService } from '../../../helpers/mocks/service/mock-notification.service';\n+import { MockTranslateService } from '../../../helpers/mocks/service/mock-translate.service';\n+import { MockAccountService } from '../../../helpers/mocks/service/mock-account.service';\n+import { Notification } from 'app/entities/notification.model';\n+import { RouterTestingModule } from '@angular/router/testing';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+describe('Notification Popup Component', () => {\n+    let notificationPopupComponent: NotificationPopupComponent;\n+    let notificationPopupComponentFixture: ComponentFixture<NotificationPopupComponent>;\n+    let notificationService: NotificationService;\n+    let accountService: AccountService;\n+    let router: Router;\n+\n+    const generateNotification = (id: number) => {\n+        const generatedNotification = { id, title: 'Quiz started', text: 'Quiz \"Proxy pattern\" just started.' } as Notification;\n+        generatedNotification.target = JSON.stringify({ mainPage: 'courses', course: 1, entity: 'exercise', id: 1 });\n+        return generatedNotification;\n+    };\n+    const notification = generateNotification(1);\n+\n+    beforeEach(() => {\n+        TestBed.configureTestingModule({\n+            imports: [ArtemisTestModule, RouterTestingModule.withRoutes([])],\n+            declarations: [NotificationPopupComponent],\n+            providers: [\n+                { provide: LocalStorageService, useClass: MockSyncStorage },\n+                { provide: SessionStorageService, useClass: MockSyncStorage },\n+                { provide: NotificationService, useClass: MockNotificationService },\n+                { provide: TranslateService, useClass: MockTranslateService },\n+                { provide: AccountService, useClass: MockAccountService },\n+            ],\n+        })\n+            .compileComponents()\n+            .then(() => {\n+                notificationPopupComponentFixture = TestBed.createComponent(NotificationPopupComponent);\n+                notificationPopupComponent = notificationPopupComponentFixture.componentInstance;\n+                notificationService = TestBed.inject(NotificationService);\n+                accountService = TestBed.inject(AccountService);\n+                router = TestBed.get(Router);\n+            });\n+    });\n+\n+    describe('Initialization', () => {\n+        it('should get authentication state', () => {\n+            sinon.spy(accountService, 'getAuthenticationState');\n+            notificationPopupComponent.ngOnInit();\n+            expect(accountService.getAuthenticationState).to.have.been.calledOnce;\n+        });\n+\n+        it('should subscribe to notification updates', () => {\n+            sinon.spy(notificationService, 'subscribeToNotificationUpdates');\n+            notificationPopupComponent.ngOnInit();\n+            expect(notificationService.subscribeToNotificationUpdates).to.have.been.calledOnce;\n+        });\n+    });\n+\n+    describe('Click', () => {\n+        beforeEach(() => {\n+            notificationPopupComponent.notifications.push(notification);\n+            notificationPopupComponentFixture.detectChanges();\n+        });\n+\n+        it('should remove notification from component state and navigate to target when notification is clicked', () => {\n+            sinon.spy(notificationPopupComponent, 'removeNotification');\n+            sinon.replace(notificationPopupComponent, 'navigateToTarget', sinon.fake());\n+            const notificationElement = notificationPopupComponentFixture.debugElement.query(By.css('.notification-popup-container > div'));\n+            notificationElement.nativeElement.click();\n+            expect(notificationPopupComponent.removeNotification).to.have.been.calledOnce;\n+            expect(notificationPopupComponent.notifications).to.be.empty;\n+            expect(notificationPopupComponent.navigateToTarget).to.have.been.calledOnce;\n+        });\n+\n+        it('should remove notification from component state when notification is closed', () => {\n+            sinon.spy(notificationPopupComponent, 'removeNotification');\n+            sinon.replace(notificationPopupComponent, 'navigateToTarget', sinon.fake());\n+            const button = notificationPopupComponentFixture.debugElement.query(By.css('.notification-popup-container > div button'));\n+            button.nativeElement.click();\n+            expect(notificationPopupComponent.removeNotification).to.have.been.called;\n+            expect(notificationPopupComponent.notifications).to.be.empty;\n+        });\n+\n+        it('should navigate to target when notification is clicked', () => {\n+            sinon.spy(notificationPopupComponent, 'navigateToTarget');\n+            sinon.replace(router, 'navigateByUrl', sinon.fake());\n+            const button = notificationPopupComponentFixture.debugElement.query(By.css('.notification-popup-container > div button'));\n+            button.nativeElement.click();\n+            expect(notificationPopupComponent.navigateToTarget).to.have.been.calledOnce;\n+            expect(router.navigateByUrl).to.have.been.calledOnce;\n+        });\n+    });\n+\n+    describe('Webscoket receive', () => {", "originalCommit": "5ce77e6b9ac9ec498e3fabeb237077cd5d35e416", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3Mzc5NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2367#discussion_r525373795", "bodyText": "Thanks! I'll fix this in a follow-up PR", "author": "sascha11110", "createdAt": "2020-11-17T18:02:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwNjAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwODI1MA==", "url": "https://github.com/ls1intum/Artemis/pull/2367#discussion_r525208250", "bodyText": "I would suggest moving start-now into a shared constant wherever it is used. Can quizChange be an Enum instead of just a string?", "author": "stefanwaldhauser", "createdAt": "2020-11-17T14:44:11Z", "path": "src/main/java/de/tum/in/www1/artemis/service/QuizExerciseService.java", "diffHunk": "@@ -353,6 +357,11 @@ public void sendQuizExerciseToSubscribedClients(QuizExercise quizExercise, Strin\n             byte[] payload = objectMapper.writerWithView(view).writeValueAsBytes(quizExercise);\n             // For each change we send the same message. The client needs to decide how to handle the date based on the quiz status\n             if (quizExercise.isVisibleToStudents() && quizExercise.hasCourse()) {\n+                // Create a group notification if actions is 'start-now'.\n+                if (\"start-now\".equals(quizChange)) {", "originalCommit": "5ce77e6b9ac9ec498e3fabeb237077cd5d35e416", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIxMTIzMA==", "url": "https://github.com/ls1intum/Artemis/pull/2367#discussion_r525211230", "bodyText": "This seems very brittle. Can this be changed to an enum?", "author": "stefanwaldhauser", "createdAt": "2020-11-17T14:47:44Z", "path": "src/main/webapp/app/shared/notification/notification-popup/notification-popup.component.ts", "diffHunk": "@@ -0,0 +1,106 @@\n+import { Component, OnInit } from '@angular/core';\n+import { Router, UrlTree } from '@angular/router';\n+import { NotificationService } from 'app/shared/notification/notification.service';\n+import { User } from 'app/core/user/user.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { Notification } from 'app/entities/notification.model';\n+import { GroupNotification } from 'app/entities/group-notification.model';\n+\n+@Component({\n+    selector: 'jhi-notification-popup',\n+    templateUrl: './notification-popup.component.html',\n+    styleUrls: ['./notification-popup.scss'],\n+})\n+export class NotificationPopupComponent implements OnInit {\n+    notifications: Notification[] = [];\n+\n+    constructor(private accountService: AccountService, private notificationService: NotificationService, private router: Router) {}\n+\n+    /**\n+     * Subscribe to notification updates that are received via websocket if the user is logged in.\n+     */\n+    ngOnInit(): void {\n+        this.accountService.getAuthenticationState().subscribe((user: User | undefined) => {\n+            if (user) {\n+                this.subscribeToNotificationUpdates();\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Returns a string that can be interpreted as fontawesome icon based on the notification type of the given notification.\n+     * @param notification {Notification}\n+     */\n+    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n+    notificationIcon(notification: Notification): string {\n+        return 'check-double';\n+    }\n+\n+    /**\n+     * Removes the notification at the specified index from the notifications array.\n+     * @param index {number}\n+     */\n+    removeNotification(index: number): void {\n+        this.notifications.splice(index, 1);\n+    }\n+\n+    /**\n+     * Navigate to the target (view) of the notification that the user clicked.\n+     * @param notification {Notification}\n+     */\n+    navigateToTarget(notification: Notification): void {\n+        this.router.navigateByUrl(this.notificationTargetRoute(notification));\n+    }\n+\n+    private notificationTargetRoute(notification: Notification): UrlTree | string {\n+        if (notification.target) {\n+            const target = JSON.parse(notification.target);\n+            return this.router.createUrlTree([target.mainPage, target.course, target.entity, target.id]);\n+        }\n+        return this.router.url;\n+    }\n+\n+    private subscribeToNotificationUpdates(): void {\n+        this.notificationService.subscribeToNotificationUpdates().subscribe((notification: Notification) => {\n+            this.addNotification(notification);\n+        });\n+    }\n+\n+    private addNotification(notification: Notification): void {\n+        // Only add a notification if it does not already exist.\n+        if (notification && !this.notifications.some(({ id }) => id === notification.id)) {\n+            // For now only notifications about a started quiz should be displayed.\n+            if (notification.title === 'Quiz started') {", "originalCommit": "5ce77e6b9ac9ec498e3fabeb237077cd5d35e416", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3NDM0Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2367#discussion_r525374346", "bodyText": "We will have dedicated notification types in the future. So I will adjust it then :-)", "author": "sascha11110", "createdAt": "2020-11-17T18:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIxMTIzMA=="}], "type": "inlineReview"}]}