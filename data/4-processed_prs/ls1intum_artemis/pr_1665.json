{"pr_number": 1665, "pr_title": "[Exam] Quiz component for exams", "pr_createdAt": "2020-06-16T16:02:28Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1665", "timeline": [{"oid": "669587dccdbd32725591e88e1f571420ab875ab3", "url": "https://github.com/ls1intum/Artemis/commit/669587dccdbd32725591e88e1f571420ab875ab3", "message": "Add exam management route with lazy loaded module", "committedDate": "2020-06-09T16:41:11Z", "type": "commit"}, {"oid": "9974d0316468e7be9be2928c8a8560aaf6bdff28", "url": "https://github.com/ls1intum/Artemis/commit/9974d0316468e7be9be2928c8a8560aaf6bdff28", "message": "Shorten import", "committedDate": "2020-06-09T16:52:23Z", "type": "commit"}, {"oid": "5f6a74404af1837c4d433d04ab1186fd361e3be9", "url": "https://github.com/ls1intum/Artemis/commit/5f6a74404af1837c4d433d04ab1186fd361e3be9", "message": "Move basic exam route to exam-management.route", "committedDate": "2020-06-09T17:27:23Z", "type": "commit"}, {"oid": "d8f7e7f60232fa7ba48c33206d337a03c6f3a4ec", "url": "https://github.com/ls1intum/Artemis/commit/d8f7e7f60232fa7ba48c33206d337a03c6f3a4ec", "message": "Add all necessary routes", "committedDate": "2020-06-09T17:56:53Z", "type": "commit"}, {"oid": "b65d893f7492fcb4e5066d4ae58ff2de52c552cb", "url": "https://github.com/ls1intum/Artemis/commit/b65d893f7492fcb4e5066d4ae58ff2de52c552cb", "message": "Add exam components", "committedDate": "2020-06-09T18:38:58Z", "type": "commit"}, {"oid": "b3afc378ce214e88af4dfc8d7886ca0bfee04441", "url": "https://github.com/ls1intum/Artemis/commit/b3afc378ce214e88af4dfc8d7886ca0bfee04441", "message": "Add exercise groups components", "committedDate": "2020-06-09T19:06:30Z", "type": "commit"}, {"oid": "5de9fdc88053a103cc367a36978d4b0779350772", "url": "https://github.com/ls1intum/Artemis/commit/5de9fdc88053a103cc367a36978d4b0779350772", "message": "Add ExamStudentsComponent", "committedDate": "2020-06-09T19:09:28Z", "type": "commit"}, {"oid": "fc4909aff8baddab65fdf23e7bc090bdb2a96469", "url": "https://github.com/ls1intum/Artemis/commit/fc4909aff8baddab65fdf23e7bc090bdb2a96469", "message": "Add student exam components", "committedDate": "2020-06-09T19:14:50Z", "type": "commit"}, {"oid": "f7a68950f2442dcc502a73e2a0d5c2807e5e0948", "url": "https://github.com/ls1intum/Artemis/commit/f7a68950f2442dcc502a73e2a0d5c2807e5e0948", "message": "Initialize exam ids", "committedDate": "2020-06-09T19:46:10Z", "type": "commit"}, {"oid": "3057563048b8b05db954de767518adde5b2fd706", "url": "https://github.com/ls1intum/Artemis/commit/3057563048b8b05db954de767518adde5b2fd706", "message": "Basic implementation of exam management service", "committedDate": "2020-06-09T20:24:24Z", "type": "commit"}, {"oid": "0f2cb739f80a5aa84738f7eb0d664b653fd2152c", "url": "https://github.com/ls1intum/Artemis/commit/0f2cb739f80a5aa84738f7eb0d664b653fd2152c", "message": "Inject user service", "committedDate": "2020-06-09T20:32:03Z", "type": "commit"}, {"oid": "1fe3e75a04bc7737058cc4c5604b54cd50e8fdb2", "url": "https://github.com/ls1intum/Artemis/commit/1fe3e75a04bc7737058cc4c5604b54cd50e8fdb2", "message": "Add student exam service", "committedDate": "2020-06-09T20:42:56Z", "type": "commit"}, {"oid": "46d7b173650e1890b217b1a22a87495134e98633", "url": "https://github.com/ls1intum/Artemis/commit/46d7b173650e1890b217b1a22a87495134e98633", "message": "Add exercise group service", "committedDate": "2020-06-09T20:51:52Z", "type": "commit"}, {"oid": "6dd6be76ddf609300aeafddb3a11b31cd89bd577", "url": "https://github.com/ls1intum/Artemis/commit/6dd6be76ddf609300aeafddb3a11b31cd89bd577", "message": "Inject new services", "committedDate": "2020-06-09T20:57:13Z", "type": "commit"}, {"oid": "0b57d93fad38a5ec53ddd64f79da9844a7c4bd03", "url": "https://github.com/ls1intum/Artemis/commit/0b57d93fad38a5ec53ddd64f79da9844a7c4bd03", "message": "Merge branch 'develop' into exam/management/basic-setup", "committedDate": "2020-06-09T21:51:21Z", "type": "commit"}, {"oid": "449a7d65c84040a4515330b53b9535d8bd12140a", "url": "https://github.com/ls1intum/Artemis/commit/449a7d65c84040a4515330b53b9535d8bd12140a", "message": "Add resolvers", "committedDate": "2020-06-09T22:15:46Z", "type": "commit"}, {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576", "url": "https://github.com/ls1intum/Artemis/commit/520ad798cc5e4dd66d18d7eb22adffd1bb2c8576", "message": "Use resolvers", "committedDate": "2020-06-09T22:24:46Z", "type": "commit"}, {"oid": "30fe0f69d94fb28fa8bcab319422e24b11420f43", "url": "https://github.com/ls1intum/Artemis/commit/30fe0f69d94fb28fa8bcab319422e24b11420f43", "message": "Always add courseId to service routes", "committedDate": "2020-06-10T12:10:17Z", "type": "commit"}, {"oid": "4090486d5dddad65982b4c831535e350b894378b", "url": "https://github.com/ls1intum/Artemis/commit/4090486d5dddad65982b4c831535e350b894378b", "message": "Adjust resolvers to new route structure", "committedDate": "2020-06-10T12:13:10Z", "type": "commit"}, {"oid": "d5f86bd1a3f431a9f63cc098947a7dab154b56f7", "url": "https://github.com/ls1intum/Artemis/commit/d5f86bd1a3f431a9f63cc098947a7dab154b56f7", "message": "Initialize components with course id", "committedDate": "2020-06-10T12:20:48Z", "type": "commit"}, {"oid": "867e9d9e5e9623cdaed3e405fff6159980f610eb", "url": "https://github.com/ls1intum/Artemis/commit/867e9d9e5e9623cdaed3e405fff6159980f610eb", "message": "Merge branch 'develop' into exam/management/basic-setup", "committedDate": "2020-06-10T12:21:22Z", "type": "commit"}, {"oid": "91b9cc15b92ed927632c448789d2bd634d757369", "url": "https://github.com/ls1intum/Artemis/commit/91b9cc15b92ed927632c448789d2bd634d757369", "message": "Merge branch 'develop' into exam/management/basic-setup", "committedDate": "2020-06-10T15:35:56Z", "type": "commit"}, {"oid": "d1a85763cbc827cd7e639729041893c3f23216c9", "url": "https://github.com/ls1intum/Artemis/commit/d1a85763cbc827cd7e639729041893c3f23216c9", "message": "init exam detail in overview component", "committedDate": "2020-06-10T17:33:22Z", "type": "commit"}, {"oid": "64891ee6c79bc2ce78f0e321c6be77bdcc614281", "url": "https://github.com/ls1intum/Artemis/commit/64891ee6c79bc2ce78f0e321c6be77bdcc614281", "message": "Merge branch 'exam/management/basic-setup' of https://github.com/ls1intum/Artemis into exam-mode/client/student-overview", "committedDate": "2020-06-10T17:33:56Z", "type": "commit"}, {"oid": "7677af367476e35f637d08b318b504150cd93445", "url": "https://github.com/ls1intum/Artemis/commit/7677af367476e35f637d08b318b504150cd93445", "message": "init more components and routes", "committedDate": "2020-06-10T20:50:37Z", "type": "commit"}, {"oid": "7f992c4ed27e68f78e6b7eecc39c243c723817ff", "url": "https://github.com/ls1intum/Artemis/commit/7f992c4ed27e68f78e6b7eecc39c243c723817ff", "message": "load exams into overview", "committedDate": "2020-06-10T21:18:58Z", "type": "commit"}, {"oid": "169b99f3db5183508c2608788063fde55f496bb3", "url": "https://github.com/ls1intum/Artemis/commit/169b99f3db5183508c2608788063fde55f496bb3", "message": "remove console log", "committedDate": "2020-06-10T21:19:35Z", "type": "commit"}, {"oid": "9d6da9aaeb2d0bb73ad0bcab34c71c09dbf38381", "url": "https://github.com/ls1intum/Artemis/commit/9d6da9aaeb2d0bb73ad0bcab34c71c09dbf38381", "message": "check if exam(s) are visible", "committedDate": "2020-06-10T21:37:57Z", "type": "commit"}, {"oid": "1c3eeefc54ec3c31ce2874ee495235152a0717a5", "url": "https://github.com/ls1intum/Artemis/commit/1c3eeefc54ec3c31ce2874ee495235152a0717a5", "message": "fix build error (maybe)", "committedDate": "2020-06-10T21:51:30Z", "type": "commit"}, {"oid": "15c347795879f0929cb2a23c68a5b7e2796dd82c", "url": "https://github.com/ls1intum/Artemis/commit/15c347795879f0929cb2a23c68a5b7e2796dd82c", "message": "navigate to summary if exam is over", "committedDate": "2020-06-10T21:58:00Z", "type": "commit"}, {"oid": "5562ceb007de67f10c02379b629b5149464fdc8b", "url": "https://github.com/ls1intum/Artemis/commit/5562ceb007de67f10c02379b629b5149464fdc8b", "message": "display exam details in overview", "committedDate": "2020-06-11T12:28:05Z", "type": "commit"}, {"oid": "de4216af614779f4c3895b77c4856b77293d9ad2", "url": "https://github.com/ls1intum/Artemis/commit/de4216af614779f4c3895b77c4856b77293d9ad2", "message": "prettier", "committedDate": "2020-06-11T12:29:24Z", "type": "commit"}, {"oid": "9824a6d3813fe6084bdd0c5ba0ed784860aca5b0", "url": "https://github.com/ls1intum/Artemis/commit/9824a6d3813fe6084bdd0c5ba0ed784860aca5b0", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into exam-mode/client/student-overview\n\n# Conflicts:\n#\tsrc/main/webapp/i18n/de/exam.json\n#\tsrc/main/webapp/i18n/en/exam.json", "committedDate": "2020-06-11T12:32:21Z", "type": "commit"}, {"oid": "bf28fe9167cb664f3b56c0647fb3af6571713a05", "url": "https://github.com/ls1intum/Artemis/commit/bf28fe9167cb664f3b56c0647fb3af6571713a05", "message": "fix routing logic", "committedDate": "2020-06-11T12:36:30Z", "type": "commit"}, {"oid": "5f52a68a340c1f4bfeb68f41ef031648c923de6f", "url": "https://github.com/ls1intum/Artemis/commit/5f52a68a340c1f4bfeb68f41ef031648c923de6f", "message": "remove todo", "committedDate": "2020-06-11T12:45:57Z", "type": "commit"}, {"oid": "322cfc3d140a924940bdcfefb66248541ebe0455", "url": "https://github.com/ls1intum/Artemis/commit/322cfc3d140a924940bdcfefb66248541ebe0455", "message": "add doc", "committedDate": "2020-06-12T08:22:28Z", "type": "commit"}, {"oid": "534ce4b44c9ea72152ef7c5df2437028caae5bee", "url": "https://github.com/ls1intum/Artemis/commit/534ce4b44c9ea72152ef7c5df2437028caae5bee", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into exam-mode/client/student-overview", "committedDate": "2020-06-12T10:45:08Z", "type": "commit"}, {"oid": "d91918f80101b7e831f3054542f121a63677c5b5", "url": "https://github.com/ls1intum/Artemis/commit/d91918f80101b7e831f3054542f121a63677c5b5", "message": "add documentation", "committedDate": "2020-06-12T11:27:13Z", "type": "commit"}, {"oid": "93b5d778333bba3ef9d6bb9bcf97c543c14ca5e8", "url": "https://github.com/ls1intum/Artemis/commit/93b5d778333bba3ef9d6bb9bcf97c543c14ca5e8", "message": "merge participation routes", "committedDate": "2020-06-12T20:31:04Z", "type": "commit"}, {"oid": "92b89b6065923638d24cd73582187a6fdd20fc8b", "url": "https://github.com/ls1intum/Artemis/commit/92b89b6065923638d24cd73582187a6fdd20fc8b", "message": "add test for detail component", "committedDate": "2020-06-12T21:21:12Z", "type": "commit"}, {"oid": "e808f4e6c56c5348b5e1f32d486290d274aadecc", "url": "https://github.com/ls1intum/Artemis/commit/e808f4e6c56c5348b5e1f32d486290d274aadecc", "message": "add test for overview", "committedDate": "2020-06-12T21:35:52Z", "type": "commit"}, {"oid": "68cee9843fe5e6bcea4906e4fa8ea3d462e4d525", "url": "https://github.com/ls1intum/Artemis/commit/68cee9843fe5e6bcea4906e4fa8ea3d462e4d525", "message": "add mins to duration", "committedDate": "2020-06-12T21:37:41Z", "type": "commit"}, {"oid": "cd2522c7d71cf70c4fb01d3cf37a82baa7396132", "url": "https://github.com/ls1intum/Artemis/commit/cd2522c7d71cf70c4fb01d3cf37a82baa7396132", "message": "init component", "committedDate": "2020-06-13T11:08:23Z", "type": "commit"}, {"oid": "b74a47207a9251d5185f5dfb28168a733e67e2d4", "url": "https://github.com/ls1intum/Artemis/commit/b74a47207a9251d5185f5dfb28168a733e67e2d4", "message": "remove unused", "committedDate": "2020-06-15T11:16:36Z", "type": "commit"}, {"oid": "5ccb9d2b150decc68eff0790bf39dd0cbe5f6c62", "url": "https://github.com/ls1intum/Artemis/commit/5ccb9d2b150decc68eff0790bf39dd0cbe5f6c62", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into exam-mode/client/quiz-exam-mode\n\n# Conflicts:\n#\tsrc/main/webapp/i18n/de/exam.json\n#\tsrc/main/webapp/i18n/en/exam.json", "committedDate": "2020-06-15T14:40:40Z", "type": "commit"}, {"oid": "6772932cd0b8d8d8fdfee654ab8f03681b33c138", "url": "https://github.com/ls1intum/Artemis/commit/6772932cd0b8d8d8fdfee654ab8f03681b33c138", "message": "mock in route to test", "committedDate": "2020-06-15T16:25:16Z", "type": "commit"}, {"oid": "44dc88a972924b12ec242b53c2a1b770280a0b2c", "url": "https://github.com/ls1intum/Artemis/commit/44dc88a972924b12ec242b53c2a1b770280a0b2c", "message": "load quiz", "committedDate": "2020-06-16T06:30:43Z", "type": "commit"}, {"oid": "aa80146dcdf839a6cb3db9fce4c85a335a69536e", "url": "https://github.com/ls1intum/Artemis/commit/aa80146dcdf839a6cb3db9fce4c85a335a69536e", "message": "load exercise", "committedDate": "2020-06-16T09:39:58Z", "type": "commit"}, {"oid": "d3d7a2b553f1d86a6d470946093ffef2927deefe", "url": "https://github.com/ls1intum/Artemis/commit/d3d7a2b553f1d86a6d470946093ffef2927deefe", "message": "apply changes in quiz", "committedDate": "2020-06-16T15:23:15Z", "type": "commit"}, {"oid": "b46b97c364f2cc531444d0ab7a1baf5382306ce2", "url": "https://github.com/ls1intum/Artemis/commit/b46b97c364f2cc531444d0ab7a1baf5382306ce2", "message": "move component", "committedDate": "2020-06-16T15:52:44Z", "type": "commit"}, {"oid": "5a8383e15d3a79110a3f0e0d865d00dc3a82acf3", "url": "https://github.com/ls1intum/Artemis/commit/5a8383e15d3a79110a3f0e0d865d00dc3a82acf3", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into exam-mode/client/quiz-exam-mode\n\n# Conflicts:\n#\tsrc/main/webapp/app/exam/participate/exam-participation.component.html\n#\tsrc/main/webapp/app/exam/participate/exam-participation.module.ts\n#\tsrc/main/webapp/app/exam/participate/exam-participation.service.ts\n#\tsrc/main/webapp/app/overview/course-exams/course-exam-detail/course-exam-detail.component.html\n#\tsrc/main/webapp/app/overview/course-exams/course-exam-detail/course-exam-detail.component.ts\n#\tsrc/main/webapp/app/overview/course-exams/course-exams.component.ts\n#\tsrc/main/webapp/i18n/en/exam.json", "committedDate": "2020-06-16T16:02:00Z", "type": "commit"}, {"oid": "bd0f4a270551eddd297d0202c67a346f64dec604", "url": "https://github.com/ls1intum/Artemis/commit/bd0f4a270551eddd297d0202c67a346f64dec604", "message": "correct imports", "committedDate": "2020-06-16T16:19:26Z", "type": "commit"}, {"oid": "60ccfa8fda26c7eac11236c56a97b013f0fcb306", "url": "https://github.com/ls1intum/Artemis/commit/60ccfa8fda26c7eac11236c56a97b013f0fcb306", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into exam-mode/client/quiz-exam-mode\n\n# Conflicts:\n#\tsrc/main/webapp/app/exam/participate/exam-participation.module.ts", "committedDate": "2020-06-16T16:42:27Z", "type": "commit"}, {"oid": "128dbc251f420f944cf141c98045cafe3fc232f1", "url": "https://github.com/ls1intum/Artemis/commit/128dbc251f420f944cf141c98045cafe3fc232f1", "message": "Merge branch 'develop' into exam-mode/client/quiz-exam-mode", "committedDate": "2020-06-17T17:50:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4OTI0OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1665#discussion_r441789249", "bodyText": "I think we should rename this method as the participation is probably not coming from the server directly", "author": "krusche", "createdAt": "2020-06-17T19:40:26Z", "path": "src/main/webapp/app/exam/participate/exercises/quiz/quiz-exam-participation.component.ts", "diffHunk": "@@ -0,0 +1,235 @@\n+import { Component, OnInit, QueryList, ViewChildren, Input } from '@angular/core';\n+import { ParticipationService } from 'app/exercises/shared/participation/participation.service';\n+import { QuizQuestionType } from 'app/entities/quiz/quiz-question.model';\n+import { MultipleChoiceQuestionComponent } from 'app/exercises/quiz/shared/questions/multiple-choice-question/multiple-choice-question.component';\n+import { DragAndDropQuestionComponent } from 'app/exercises/quiz/shared/questions/drag-and-drop-question/drag-and-drop-question.component';\n+import { ShortAnswerQuestionComponent } from 'app/exercises/quiz/shared/questions/short-answer-question/short-answer-question.component';\n+import { ButtonSize, ButtonType } from 'app/shared/components/button.component';\n+import { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\n+import * as smoothscroll from 'smoothscroll-polyfill';\n+import { AnswerOption } from 'app/entities/quiz/answer-option.model';\n+import { DragAndDropMapping } from 'app/entities/quiz/drag-and-drop-mapping.model';\n+import { ShortAnswerSubmittedText } from 'app/entities/quiz/short-answer-submitted-text.model';\n+import { MultipleChoiceSubmittedAnswer } from 'app/entities/quiz/multiple-choice-submitted-answer.model';\n+import { DragAndDropSubmittedAnswer } from 'app/entities/quiz/drag-and-drop-submitted-answer.model';\n+import { ShortAnswerSubmittedAnswer } from 'app/entities/quiz/short-answer-submitted-answer.model';\n+import { QuizSubmission } from 'app/entities/quiz/quiz-submission.model';\n+import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n+\n+@Component({\n+    selector: 'jhi-exam-quiz',\n+    templateUrl: './quiz-exam-participation.component.html',\n+    providers: [ParticipationService],\n+    styleUrls: ['../../../../exercises/quiz/participate/quiz-participation.component.scss'],\n+})\n+export class QuizExamParticipationComponent implements OnInit {\n+    // make constants available to html for comparison\n+    readonly DRAG_AND_DROP = QuizQuestionType.DRAG_AND_DROP;\n+    readonly MULTIPLE_CHOICE = QuizQuestionType.MULTIPLE_CHOICE;\n+    readonly SHORT_ANSWER = QuizQuestionType.SHORT_ANSWER;\n+    readonly ButtonSize = ButtonSize;\n+    readonly ButtonType = ButtonType;\n+\n+    @ViewChildren(MultipleChoiceQuestionComponent)\n+    mcQuestionComponents: QueryList<MultipleChoiceQuestionComponent>;\n+\n+    @ViewChildren(DragAndDropQuestionComponent)\n+    dndQuestionComponents: QueryList<DragAndDropQuestionComponent>;\n+\n+    @ViewChildren(ShortAnswerQuestionComponent)\n+    shortAnswerQuestionComponents: QueryList<ShortAnswerQuestionComponent>;\n+\n+    @Input() studentParticipation: StudentParticipation;\n+\n+    quizExercise: QuizExercise;\n+    selectedAnswerOptions = new Map<number, AnswerOption[]>();\n+    dragAndDropMappings = new Map<number, DragAndDropMapping[]>();\n+    shortAnswerSubmittedTexts = new Map<number, ShortAnswerSubmittedText[]>();\n+    submission = new QuizSubmission();\n+\n+    constructor() {\n+        smoothscroll.polyfill();\n+    }\n+\n+    ngOnInit(): void {\n+        this.quizExercise = this.studentParticipation.exercise as QuizExercise;\n+        this.updateParticipationFromServer(this.studentParticipation);\n+    }\n+\n+    /**\n+     * Initialize the selections / mappings for each question with an empty array\n+     */\n+    initQuiz() {\n+        // prepare selection arrays for each question\n+        this.selectedAnswerOptions = new Map<number, AnswerOption[]>();\n+        this.dragAndDropMappings = new Map<number, DragAndDropMapping[]>();\n+        this.shortAnswerSubmittedTexts = new Map<number, ShortAnswerSubmittedText[]>();\n+\n+        if (this.quizExercise.quizQuestions) {\n+            this.quizExercise.quizQuestions.forEach((question) => {\n+                if (question.type === QuizQuestionType.MULTIPLE_CHOICE) {\n+                    // add the array of selected options to the dictionary (add an empty array, if there is no submittedAnswer for this question)\n+                    this.selectedAnswerOptions[question.id] = [];\n+                } else if (question.type === QuizQuestionType.DRAG_AND_DROP) {\n+                    // add the array of mappings to the dictionary (add an empty array, if there is no submittedAnswer for this question)\n+                    this.dragAndDropMappings[question.id] = [];\n+                } else if (question.type === QuizQuestionType.SHORT_ANSWER) {\n+                    // add the array of submitted texts to the dictionary (add an empty array, if there is no submittedAnswer for this question)\n+                    this.shortAnswerSubmittedTexts[question.id] = [];\n+                } else {\n+                    console.error('Unknown question type: ' + question);\n+                }\n+            }, this);\n+        }\n+    }\n+\n+    /**\n+     * By clicking on the bubble of the progress navigation towards the corresponding question of the quiz is triggered\n+     * @param questionIndex\n+     */\n+    navigateToQuestion(questionIndex: number): void {\n+        document.getElementById('question' + questionIndex)!.scrollIntoView({\n+            behavior: 'smooth',\n+        });\n+    }\n+\n+    onSelectionChanged() {\n+        this.applySelection();\n+    }\n+\n+    /**\n+     * applies the data from the model to the UI (reverse of applySelection):\n+     *\n+     * Sets the checkmarks (selected answers) for all questions according to the submission data\n+     * this needs to be done when we get new submission data, e.g. through the websocket connection\n+     */\n+    applySubmission() {\n+        // create dictionaries (key: questionID, value: Array of selected answerOptions / mappings)\n+        // for the submittedAnswers to hand the selected options / mappings in individual arrays to the question components\n+        this.selectedAnswerOptions = new Map<number, AnswerOption[]>();\n+        this.dragAndDropMappings = new Map<number, DragAndDropMapping[]>();\n+        this.shortAnswerSubmittedTexts = new Map<number, ShortAnswerSubmittedText[]>();\n+\n+        if (this.quizExercise.quizQuestions) {\n+            // iterate through all questions of this quiz\n+            this.quizExercise.quizQuestions.forEach((question) => {\n+                // find the submitted answer that belongs to this question, only when submitted answers already exist\n+                const submittedAnswer = this.submission.submittedAnswers\n+                    ? this.submission.submittedAnswers.find((answer) => {\n+                          return answer.quizQuestion.id === question.id;\n+                      })\n+                    : null;\n+\n+                if (question.type === QuizQuestionType.MULTIPLE_CHOICE) {\n+                    // add the array of selected options to the dictionary (add an empty array, if there is no submittedAnswer for this question)\n+                    if (submittedAnswer) {\n+                        const selectedOptions = (submittedAnswer as MultipleChoiceSubmittedAnswer).selectedOptions;\n+                        this.selectedAnswerOptions[question.id] = selectedOptions ? selectedOptions : [];\n+                    } else {\n+                        // not found, set to empty array\n+                        this.selectedAnswerOptions[question.id] = [];\n+                    }\n+                } else if (question.type === QuizQuestionType.DRAG_AND_DROP) {\n+                    // add the array of mappings to the dictionary (add an empty array, if there is no submittedAnswer for this question)\n+                    if (submittedAnswer) {\n+                        const mappings = (submittedAnswer as DragAndDropSubmittedAnswer).mappings;\n+                        this.dragAndDropMappings[question.id] = mappings ? mappings : [];\n+                    } else {\n+                        // not found, set to empty array\n+                        this.dragAndDropMappings[question.id] = [];\n+                    }\n+                } else if (question.type === QuizQuestionType.SHORT_ANSWER) {\n+                    // add the array of submitted texts to the dictionary (add an empty array, if there is no submittedAnswer for this question)\n+                    if (submittedAnswer) {\n+                        const submittedTexts = (submittedAnswer as ShortAnswerSubmittedAnswer).submittedTexts;\n+                        this.shortAnswerSubmittedTexts[question.id] = submittedTexts ? submittedTexts : [];\n+                    } else {\n+                        // not found, set to empty array\n+                        this.shortAnswerSubmittedTexts[question.id] = [];\n+                    }\n+                } else {\n+                    console.error('Unknown question type: ' + question);\n+                }\n+            }, this);\n+        }\n+    }\n+\n+    /**\n+     * updates the model according to UI state (reverse of applySubmission):\n+     *\n+     * Creates the submission from the user's selection\n+     * this needs to be done when we want to send the submission\n+     * either for saving (through websocket)\n+     * or for submitting (through REST call)\n+     */\n+    applySelection() {\n+        // convert the selection dictionary (key: questionID, value: Array of selected answerOptions / mappings)\n+        // into an array of submittedAnswer objects and save it as the submittedAnswers of the submission\n+        this.submission.submittedAnswers = [];\n+\n+        // for multiple-choice questions\n+        Object.keys(this.selectedAnswerOptions).forEach((questionID) => {\n+            // find the question object for the given question id\n+            const question = this.quizExercise.quizQuestions.find(function (selectedQuestion) {\n+                return selectedQuestion.id === Number(questionID);\n+            });\n+            if (!question) {\n+                console.error('question not found for ID: ' + questionID);\n+                return;\n+            }\n+            // generate the submittedAnswer object\n+            const mcSubmittedAnswer = new MultipleChoiceSubmittedAnswer();\n+            mcSubmittedAnswer.quizQuestion = question;\n+            mcSubmittedAnswer.selectedOptions = this.selectedAnswerOptions[questionID];\n+            this.submission.submittedAnswers.push(mcSubmittedAnswer);\n+        }, this);\n+\n+        // for drag-and-drop questions\n+        Object.keys(this.dragAndDropMappings).forEach((questionID) => {\n+            // find the question object for the given question id\n+            const question = this.quizExercise.quizQuestions.find(function (localQuestion) {\n+                return localQuestion.id === Number(questionID);\n+            });\n+            if (!question) {\n+                console.error('question not found for ID: ' + questionID);\n+                return;\n+            }\n+            // generate the submittedAnswer object\n+            const dndSubmittedAnswer = new DragAndDropSubmittedAnswer();\n+            dndSubmittedAnswer.quizQuestion = question;\n+            dndSubmittedAnswer.mappings = this.dragAndDropMappings[questionID];\n+            this.submission.submittedAnswers.push(dndSubmittedAnswer);\n+        }, this);\n+        // for short-answer questions\n+        Object.keys(this.shortAnswerSubmittedTexts).forEach((questionID) => {\n+            // find the question object for the given question id\n+            const question = this.quizExercise.quizQuestions.find(function (localQuestion) {\n+                return localQuestion.id === Number(questionID);\n+            });\n+            if (!question) {\n+                console.error('question not found for ID: ' + questionID);\n+                return;\n+            }\n+            // generate the submittedAnswer object\n+            const shortAnswerSubmittedAnswer = new ShortAnswerSubmittedAnswer();\n+            shortAnswerSubmittedAnswer.quizQuestion = question;\n+            shortAnswerSubmittedAnswer.submittedTexts = this.shortAnswerSubmittedTexts[questionID];\n+            this.submission.submittedAnswers.push(shortAnswerSubmittedAnswer);\n+        }, this);\n+    }\n+\n+    /**\n+     * Apply the data of the participation, replacing all old data\n+     */\n+    updateParticipationFromServer(participation: StudentParticipation) {", "originalCommit": "128dbc251f420f944cf141c98045cafe3fc232f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAyNTA1MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1665#discussion_r442025051", "bodyText": "I renamed the method now to only updateParticipation", "author": "filip-gregurevic", "createdAt": "2020-06-18T07:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4OTI0OQ=="}], "type": "inlineReview"}, {"oid": "c6d0b29ff39738fbd346b2c80c0b95538eca2047", "url": "https://github.com/ls1intum/Artemis/commit/c6d0b29ff39738fbd346b2c80c0b95538eca2047", "message": "rename function", "committedDate": "2020-06-18T07:31:57Z", "type": "commit"}, {"oid": "f12914aae0e1df08ddc8bdf443b32fa552aa0616", "url": "https://github.com/ls1intum/Artemis/commit/f12914aae0e1df08ddc8bdf443b32fa552aa0616", "message": "Merge branch 'exam-mode/client/quiz-exam-mode' of https://github.com/ls1intum/Artemis into exam-mode/client/quiz-exam-mode", "committedDate": "2020-06-18T07:32:23Z", "type": "commit"}, {"oid": "7c4a1287f1cdc952876f04c5821c1d53cdf927cf", "url": "https://github.com/ls1intum/Artemis/commit/7c4a1287f1cdc952876f04c5821c1d53cdf927cf", "message": "change position of navigation bar", "committedDate": "2020-06-18T14:02:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ3ODk5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1665#discussion_r442478997", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                z-index: 10;\n          \n          \n            \n                z-index: 8;", "author": "fde312", "createdAt": "2020-06-18T20:17:10Z", "path": "src/main/webapp/app/exam/participate/exercises/quiz/quiz-exam-participation.component.scss", "diffHunk": "@@ -0,0 +1,180 @@\n+.quiz-content {\n+    margin-top: 6px;\n+    margin-bottom: 110px;\n+    min-height: calc(100vh - 400px);\n+    padding-left: 40px;\n+\n+    .question-index {\n+        padding: 2px 6px;\n+    }\n+}\n+\n+.quiz-footer {\n+    width: 60px;\n+    height: 100%;\n+    position: absolute;\n+    padding: 0 10px;\n+    bottom: 0;\n+    left: 0;\n+    right: 0;\n+    z-index: 10;", "originalCommit": "7c4a1287f1cdc952876f04c5821c1d53cdf927cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5e04d68d06f010ae0deccab0c6acbd2382f285c", "url": "https://github.com/ls1intum/Artemis/commit/c5e04d68d06f010ae0deccab0c6acbd2382f285c", "message": "Update src/main/webapp/app/exam/participate/exercises/quiz/quiz-exam-participation.component.scss\n\nCo-authored-by: Francisco De las Casas Young <41108487+fde312@users.noreply.github.com>", "committedDate": "2020-06-19T06:59:55Z", "type": "commit"}]}