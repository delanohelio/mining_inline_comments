{"pr_number": 3211, "pr_title": "Allow debugging product tests", "pr_createdAt": "2020-03-23T12:48:39Z", "pr_url": "https://github.com/trinodb/trino/pull/3211", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMTY0Ng==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396431646", "bodyText": "I don't understand the description", "author": "wendigo", "createdAt": "2020-03-23T13:00:03Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentOptions.java", "diffHunk": "@@ -32,6 +32,9 @@\n     @Option(name = \"--without-presto\", title = \"without Presto\", description = \"do not start presto-master\")\n     public boolean withoutPrestoMaster;\n \n+    @Option(name = \"--debugger\", description = \"which services a debugger port should be opened for\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyNzA2Mw==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396727063", "bodyText": "I agree, message is not much user friendly", "author": "kokosing", "createdAt": "2020-03-23T20:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMTY0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyOTE5MA==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396429190", "bodyText": "copyright", "author": "kokosing", "createdAt": "2020-03-23T12:55:57Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/StandardDebugger.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package io.prestosql.tests.product.launcher.env;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyOTk1MA==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396429950", "bodyText": "Why not to expose all debug ports at once?", "author": "kokosing", "createdAt": "2020-03-23T12:57:15Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentOptions.java", "diffHunk": "@@ -32,6 +32,9 @@\n     @Option(name = \"--without-presto\", title = \"without Presto\", description = \"do not start presto-master\")\n     public boolean withoutPrestoMaster;\n \n+    @Option(name = \"--debugger\", description = \"which services a debugger port should be opened for\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0ODIyMw==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396448223", "bodyText": "maybe we want to add presto-worker as an option?\nor maybe we want to add more debug options besides Java debug port?", "author": "findepi", "createdAt": "2020-03-23T13:26:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyOTk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3OTYyNQ==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396579625", "bodyText": "@kokosing this is pending your feedback", "author": "findepi", "createdAt": "2020-03-23T16:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyOTk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyNTg2OQ==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396725869", "bodyText": "Then maybe we could add it later? It is hard to predict the future. Other than that we don't need to care about backward compatibility of product tests.", "author": "kokosing", "createdAt": "2020-03-23T20:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyOTk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMTc3MQ==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396431771", "bodyText": "export HADOOP_OPTS=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006\"\ncat /usr/lib/hive/bin/hive | grep 'exit 5' -v > x; mv -f x /usr/lib/hive/bin/hive\nsupervisorctl stop hive-metastore\nchmod +x /usr/lib/hive/bin/hive\nsu hive -c 'hive --service metastore --hiveconf hive.root.logger=DEBUG,console --hiveconf hive.log.threshold=DEBUG' -s /bin/bash", "author": "kokosing", "createdAt": "2020-03-23T13:00:16Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/StandardDebugger.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package io.prestosql.tests.product.launcher.env;\n+\n+import com.google.common.base.Splitter;\n+\n+import java.util.Optional;\n+\n+import static java.util.Locale.ENGLISH;\n+\n+public enum StandardDebugger\n+{\n+    PRESTO,\n+    // METASTORE, // TODO", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0Nzc3Mw==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396447773", "bodyText": "the correct way is using hive --debug=.... option.", "author": "findepi", "createdAt": "2020-03-23T13:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMTc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMzA1MA==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396433050", "bodyText": "unod indentation", "author": "kokosing", "createdAt": "2020-03-23T13:02:23Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "diffHunk": "@@ -72,10 +94,14 @@ private DockerContainer createPrestoMaster()\n     {\n         DockerContainer container =\n                 createPrestoContainer(dockerFiles, pathResolver, serverPackage, \"prestodev/centos7-oj11:\" + imagesVersion)\n-                .withFileSystemBind(dockerFiles.getDockerFilesHostPath(\"common/standard/config.properties\"), CONTAINER_PRESTO_CONFIG_PROPERTIES, READ_ONLY);\n+                        .withFileSystemBind(dockerFiles.getDockerFilesHostPath(\"common/standard/config.properties\"), CONTAINER_PRESTO_CONFIG_PROPERTIES, READ_ONLY);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzNDIwMQ==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396434201", "bodyText": "Doesn't launcher support to pass JVM properties? It would be much easier that this.", "author": "kokosing", "createdAt": "2020-03-23T13:04:17Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Standard.java", "diffHunk": "@@ -99,10 +125,47 @@ public static DockerContainer createPrestoContainer(DockerFiles dockerFiles, Pat\n     {\n         return new DockerContainer(dockerImageName)\n                 .withFileSystemBind(dockerFiles.getDockerFilesHostPath(), \"/docker/presto-product-tests\", READ_ONLY)\n+                .withFileSystemBind(dockerFiles.getDockerFilesHostPath(\"conf/presto/etc/jvm.config\"), CONTAINER_PRESTO_JVM_CONFIG, READ_ONLY)\n                 .withFileSystemBind(pathResolver.resolvePlaceholders(serverPackage).toString(), \"/docker/presto-server.tar.gz\", READ_ONLY)\n                 .withCommand(\"/docker/presto-product-tests/run-presto.sh\")\n                 .withStartupCheckStrategy(new IsRunningStartupCheckStrategy())\n                 .waitingFor(Wait.forLogMessage(\".*======== SERVER STARTED ========.*\", 1))\n                 .withStartupTimeout(Duration.ofMinutes(5));\n     }\n+\n+    private void enableDebugger(CreateContainerCmd createContainerCmd)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0ODQwNw==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396448407", "bodyText": "doesn't, i have already put a PR", "author": "findepi", "createdAt": "2020-03-23T13:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzNDIwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyNjg0Mw==", "url": "https://github.com/trinodb/trino/pull/3211#discussion_r396726843", "bodyText": "Please add a comment about this", "author": "kokosing", "createdAt": "2020-03-23T20:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzNDIwMQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "9dd84bd9644aa1d7edd9ffb07bba4e186c5ee6e3", "url": "https://github.com/trinodb/trino/commit/9dd84bd9644aa1d7edd9ffb07bba4e186c5ee6e3", "message": "Fix formatting", "committedDate": "2020-03-24T15:51:41Z", "type": "commit"}, {"oid": "63ecfeb815fda108d7de2e1cd9f467cc61281bf7", "url": "https://github.com/trinodb/trino/commit/63ecfeb815fda108d7de2e1cd9f467cc61281bf7", "message": "Fix variable name", "committedDate": "2020-03-24T15:51:42Z", "type": "commit"}, {"oid": "234591c46e946a519ca228fe68f9ddacb9c2a3e4", "url": "https://github.com/trinodb/trino/commit/234591c46e946a519ca228fe68f9ddacb9c2a3e4", "message": "Fix method name", "committedDate": "2020-03-24T15:51:43Z", "type": "commit"}, {"oid": "c1904dd805827e186bc6c180cbda62c1eda06d4a", "url": "https://github.com/trinodb/trino/commit/c1904dd805827e186bc6c180cbda62c1eda06d4a", "message": "Add --debug option for Launcher", "committedDate": "2020-03-24T15:51:44Z", "type": "commit"}, {"oid": "c1904dd805827e186bc6c180cbda62c1eda06d4a", "url": "https://github.com/trinodb/trino/commit/c1904dd805827e186bc6c180cbda62c1eda06d4a", "message": "Add --debug option for Launcher", "committedDate": "2020-03-24T15:51:44Z", "type": "forcePushed"}]}