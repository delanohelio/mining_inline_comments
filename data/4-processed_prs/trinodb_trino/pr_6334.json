{"pr_number": 6334, "pr_title": "Add DataType for TIMESTAMP TZ, TIME TZ", "pr_createdAt": "2020-12-14T11:15:19Z", "pr_url": "https://github.com/trinodb/trino/pull/6334", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcwODgwMg==", "url": "https://github.com/trinodb/trino/pull/6334#discussion_r543708802", "bodyText": "Pushed a change here. This looks horrible. We're fighting against our own convenience. I hope #6345 will eliminate all this.", "author": "findepi", "createdAt": "2020-12-15T21:45:20Z", "path": "presto-testing/src/main/java/io/prestosql/testing/datatype/DataType.java", "diffHunk": "@@ -180,14 +185,38 @@\n \n     public static DataType<LocalTime> timeDataType(int precision)\n     {\n-        String pattern = \"'TIME '''HH:mm:ss\" + (precision == 0 ? \"\" : (\".\" + \"S\".repeat(precision))) + \"''\";\n+        // This code does not support precision > 9, as java.time classes support precision up to nanoseconds\n+        checkArgument(precision >= 0 && precision <= 9, \"Unsupported precision: %s\", precision);\n+        String pattern = \"'TIME '''HH:mm:ss\" +\n+                (precision == 0 ? \"\" : (\".\" + \"S\".repeat(precision)))\n+                + \"''\";\n+\n         return dataType(\n                 format(\"time(%s)\", precision),\n                 createTimeType(precision),\n                 DateTimeFormatter.ofPattern(pattern)::format,\n                 identity());\n     }\n \n+    public static DataType<OffsetTime> timeWithTimeZoneDataType(int precision)\n+    {\n+        // This code does not support precision > 9, as java.time classes support precision up to nanoseconds\n+        checkArgument(precision >= 0 && precision <= 9, \"Unsupported precision: %s\", precision);\n+\n+        return dataType(\n+                format(\"time(%s) with time zone\", precision),\n+                createTimeWithTimeZoneType(precision),\n+                new DateTimeFormatterBuilder()\n+                        .appendPattern(\"'TIME '''HH:mm:ss\" + (precision == 0 ? \"\" : (\".\" + \"S\".repeat(precision))))\n+                        .appendOffset(\"+HH:mm\", \"+00:00\")\n+                        .appendPattern(\"''\")\n+                        .toFormatter()::format);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ededb718861bd5b26162e4d1c20a5221ebdf7bf6", "url": "https://github.com/trinodb/trino/commit/ededb718861bd5b26162e4d1c20a5221ebdf7bf6", "message": "Add DataType for TIMESTAMP TZ, TIME TZ\n\nAlso increase existing code consistency a little.", "committedDate": "2020-12-16T08:24:36Z", "type": "commit"}, {"oid": "ededb718861bd5b26162e4d1c20a5221ebdf7bf6", "url": "https://github.com/trinodb/trino/commit/ededb718861bd5b26162e4d1c20a5221ebdf7bf6", "message": "Add DataType for TIMESTAMP TZ, TIME TZ\n\nAlso increase existing code consistency a little.", "committedDate": "2020-12-16T08:24:36Z", "type": "forcePushed"}]}