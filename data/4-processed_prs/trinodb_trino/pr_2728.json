{"pr_number": 2728, "pr_title": "Replace tableScan with values for empty table prefixes", "pr_createdAt": "2020-02-04T14:46:47Z", "pr_url": "https://github.com/trinodb/trino/pull/2728", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5NDgxNg==", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r374894816", "bodyText": "Can you please add a test that?", "author": "kokosing", "createdAt": "2020-02-04T20:06:39Z", "path": "presto-main/src/main/java/io/prestosql/connector/informationschema/InformationSchemaMetadata.java", "diffHunk": "@@ -164,7 +165,13 @@ public boolean usesLegacyTableLayouts()\n     @Override\n     public ConnectorTableProperties getTableProperties(ConnectorSession session, ConnectorTableHandle table)\n     {\n-        return new ConnectorTableProperties();\n+        InformationSchemaTableHandle tableHandle = (InformationSchemaTableHandle) table;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE2Mjk4OA==", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r375162988", "bodyText": "have added a test for the same", "author": "Praveen2112", "createdAt": "2020-02-05T10:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5NDgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5ODQ4Ng==", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r375198486", "bodyText": "My idea for test here is to run a query and see that plan does not contain table scan. That possibly could be added to io.prestosql.tests.TestInformationSchemaConnector.", "author": "kokosing", "createdAt": "2020-02-05T11:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5NDgxNg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzMzgzNA==", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r376633834", "bodyText": "I was also thinking about:\n        assertFalse(searchFrom(getQueryRunner().createPlan(getSession(), \"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", WarningCollector.NOOP).getRoot())\n                .where(TableScanNode.class::isInstance)\n                .findFirst()\n                .isPresent());", "author": "kokosing", "createdAt": "2020-02-07T22:18:08Z", "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "diffHunk": "@@ -192,6 +192,12 @@ public void testMetadataCalls()\n                         .withListSchemasCount(1)\n                         .withListTablesCount(2)\n                         .withGetColumnsCount(10000));\n+        assertNoMetadataCalls(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", \"VALUES 0\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5MTk0Mw==", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r376791943", "bodyText": "Thanks for your insights. I have applied your comments", "author": "Praveen2112", "createdAt": "2020-02-09T15:20:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzMzgzNA=="}], "type": "inlineReview"}, {"oid": "494681a88a3a191785a903caeb69591783eb2afa", "url": "https://github.com/trinodb/trino/commit/494681a88a3a191785a903caeb69591783eb2afa", "message": "Fix typo in method name", "committedDate": "2020-02-09T15:05:35Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2MDEzNQ==", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r376960135", "bodyText": "please extract a method assertNoTableScan(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_name = ''\")\nAlso please pass some message to assertFalse", "author": "kokosing", "createdAt": "2020-02-10T09:53:58Z", "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "diffHunk": "@@ -192,13 +196,20 @@ public void testMetadataCalls()\n                         .withListSchemasCount(1)\n                         .withListTablesCount(2)\n                         .withGetColumnsCount(10000));\n+        assertNoMetadataCalls(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", \"VALUES 0\");\n     }\n \n     @Test\n     public void testInformationForEmptyNames()\n     {\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='tpch' AND table_name=''\", \"VALUES 0\");\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='' AND table_name='table'\", \"VALUES 0\");\n+        assertFalse(searchFrom(getQueryRunner().createPlan(getSession(), \"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", WarningCollector.NOOP).getRoot())\n+                .where(TableScanNode.class::isInstance)\n+                .findFirst()\n+                .isPresent());\n+        assertFalse(searchFrom(getQueryRunner().createPlan(getSession(), \"SELECT count(*) from test_catalog.information_schema.tables WHERE table_name = ''\", WarningCollector.NOOP).getRoot())\n+                .where(TableScanNode.class::isInstance)\n+                .findFirst()\n+                .isPresent());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "59cec2a05c77eb7f286608128a96e230cc16c169", "url": "https://github.com/trinodb/trino/commit/59cec2a05c77eb7f286608128a96e230cc16c169", "message": "Replace TableScan with Values for empty table prefixes", "committedDate": "2020-02-10T11:49:59Z", "type": "commit"}, {"oid": "59cec2a05c77eb7f286608128a96e230cc16c169", "url": "https://github.com/trinodb/trino/commit/59cec2a05c77eb7f286608128a96e230cc16c169", "message": "Replace TableScan with Values for empty table prefixes", "committedDate": "2020-02-10T11:49:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAzNjA5Nw==", "url": "https://github.com/trinodb/trino/pull/2728#discussion_r377036097", "bodyText": "you lost table_schema='tpch'", "author": "kokosing", "createdAt": "2020-02-10T12:35:22Z", "path": "presto-tests/src/test/java/io/prestosql/tests/TestInformationSchemaConnector.java", "diffHunk": "@@ -192,13 +196,14 @@ public void testMetadataCalls()\n                         .withListSchemasCount(1)\n                         .withListTablesCount(2)\n                         .withGetColumnsCount(10000));\n+        assertNoMetadataCalls(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\", \"VALUES 0\");\n     }\n \n     @Test\n     public void testInformationForEmptyNames()\n     {\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='tpch' AND table_name=''\", \"VALUES 0\");\n-        assertQuery(\"SELECT count(*) FROM test_catalog.information_schema.tables WHERE table_schema='' AND table_name='table'\", \"VALUES 0\");\n+        assertNoTableScan(\"SELECT count(*) from test_catalog.information_schema.tables WHERE table_schema = ''\");", "originalCommit": "59cec2a05c77eb7f286608128a96e230cc16c169", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}