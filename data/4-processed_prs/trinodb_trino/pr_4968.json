{"pr_number": 4968, "pr_title": "Update BigQuery dependencies to support HOURLY partitioning of tables", "pr_createdAt": "2020-08-25T11:29:09Z", "pr_url": "https://github.com/trinodb/trino/pull/4968", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1MjYzOQ==", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479352639", "bodyText": "I would rename to executeBigQuerySql or onBigQuery", "author": "ebyhr", "createdAt": "2020-08-28T14:45:03Z", "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NDg2NA==", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479354864", "bodyText": "Argument of format is missing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new RuntimeException(format(\"Job with uuid %s does not longer exists\"));\n          \n          \n            \n                            throw new RuntimeException(format(\"Job with uuid %s does not longer exists\", jobId.getJob()));", "author": "ebyhr", "createdAt": "2020-08-28T14:48:49Z", "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)\n+    {\n+        QueryJobConfiguration queryConfig = QueryJobConfiguration.newBuilder(query)\n+                .setUseLegacySql(false)\n+                .build();\n+\n+        JobId jobId = JobId.of(UUID.randomUUID().toString());\n+        Job queryJob = bigquery.create(JobInfo.newBuilder(queryConfig).setJobId(jobId).build());\n+\n+        try {\n+            queryJob = queryJob.waitFor();\n+\n+            if (queryJob == null) {\n+                throw new RuntimeException(format(\"Job with uuid %s does not longer exists\"));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NTAyNg==", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479355026", "bodyText": "Redundant else. I know it comes from BIgQuery's javadoc though.", "author": "ebyhr", "createdAt": "2020-08-28T14:49:04Z", "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)\n+    {\n+        QueryJobConfiguration queryConfig = QueryJobConfiguration.newBuilder(query)\n+                .setUseLegacySql(false)\n+                .build();\n+\n+        JobId jobId = JobId.of(UUID.randomUUID().toString());\n+        Job queryJob = bigquery.create(JobInfo.newBuilder(queryConfig).setJobId(jobId).build());\n+\n+        try {\n+            queryJob = queryJob.waitFor();\n+\n+            if (queryJob == null) {\n+                throw new RuntimeException(format(\"Job with uuid %s does not longer exists\"));\n+            }\n+            else if (queryJob.getStatus().getError() != null) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2NzIyNw==", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479767227", "bodyText": "How about adding DROP TABLE IF EXISTS  before CREAT TABLE?", "author": "ebyhr", "createdAt": "2020-08-30T13:01:13Z", "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2Nzc2NA==", "url": "https://github.com/trinodb/trino/pull/4968#discussion_r479767764", "bodyText": "nit: JobId.of() does the same thing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    JobId jobId = JobId.of(UUID.randomUUID().toString());\n          \n          \n            \n                    JobId jobId = JobId.of();", "author": "ebyhr", "createdAt": "2020-08-30T13:06:53Z", "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -51,4 +60,47 @@ public void testDescribeTable()\n         MaterializedResult actualColumns = computeActual(\"DESCRIBE orders\");\n         assertEquals(actualColumns, expectedColumns);\n     }\n+\n+    @Test(enabled = false)\n+    public void testSelectFromHourlyPartitionedTable()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        try {\n+            executeBigQuerySQL(client, \"CREATE TABLE test.hourly_partitioned (value INT64, ts TIMESTAMP) PARTITION BY TIMESTAMP_TRUNC(ts, HOUR)\");\n+            executeBigQuerySQL(client, \"INSERT INTO test.hourly_partitioned (value, ts) VALUES (1000, '2018-01-01 10:00:00')\");\n+\n+            MaterializedResult actualValues = computeActual(\"SELECT COUNT(1) FROM test.hourly_partitioned\");\n+\n+            assertEquals((long) actualValues.getOnlyValue(), 1L);\n+        }\n+        finally {\n+            executeBigQuerySQL(client, \"DROP TABLE test.hourly_partitioned\");\n+        }\n+    }\n+\n+    private static void executeBigQuerySQL(BigQuery bigquery, String query)\n+    {\n+        QueryJobConfiguration queryConfig = QueryJobConfiguration.newBuilder(query)\n+                .setUseLegacySql(false)\n+                .build();\n+\n+        JobId jobId = JobId.of(UUID.randomUUID().toString());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "130a0e8ab17dae5fdf4ef063ccfb8fe7d44f5d89", "url": "https://github.com/trinodb/trino/commit/130a0e8ab17dae5fdf4ef063ccfb8fe7d44f5d89", "message": "Update BigQuery dependencies to support HOURLY partitioning of tables", "committedDate": "2020-08-31T10:35:26Z", "type": "commit"}, {"oid": "b02921f07b853c6b0a613ca2127b33de748eb4e0", "url": "https://github.com/trinodb/trino/commit/b02921f07b853c6b0a613ca2127b33de748eb4e0", "message": "Redact bigquery.credentials-key config", "committedDate": "2020-08-31T10:35:26Z", "type": "commit"}, {"oid": "87963bdc80a2460ecfcfe9793411d1120ba31a3f", "url": "https://github.com/trinodb/trino/commit/87963bdc80a2460ecfcfe9793411d1120ba31a3f", "message": "Add BigQuery smoke test for HOUR-ly partitioned table", "committedDate": "2020-08-31T10:40:20Z", "type": "commit"}, {"oid": "87963bdc80a2460ecfcfe9793411d1120ba31a3f", "url": "https://github.com/trinodb/trino/commit/87963bdc80a2460ecfcfe9793411d1120ba31a3f", "message": "Add BigQuery smoke test for HOUR-ly partitioned table", "committedDate": "2020-08-31T10:40:20Z", "type": "forcePushed"}]}