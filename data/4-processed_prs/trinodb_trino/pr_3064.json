{"pr_number": 3064, "pr_title": "Flush remaining output pages before requesting next input page", "pr_createdAt": "2020-03-10T22:52:29Z", "pr_url": "https://github.com/trinodb/trino/pull/3064", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg==", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r390969012", "bodyText": "i think this should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return ofResult(outputPage, outputPages.isEmpty());\n          \n          \n            \n                            return ofResult(outputPage, false);\n          \n      \n    \n    \n  \n\n-- current inputPage isn't consumed, so we should request it to be re-submitted", "author": "findepi", "createdAt": "2020-03-11T13:28:44Z", "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNDM1MQ==", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391314351", "bodyText": "When we exhausted output pages queue (outputPages.isEmpty()), then we can ask for next page.\nWhen some output page is left in queue (!outputPages.isEmpty()), then we shouldn't ask for next page yet.", "author": "sopel39", "createdAt": "2020-03-11T22:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2NzE4OA==", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391467188", "bodyText": "When we exhausted output pages queue (outputPages.isEmpty()), then we can ask for next page.\n\n\nwe already got the next page (the inputPage argument). so it seems to me we can lose an input", "author": "findepi", "createdAt": "2020-03-12T08:35:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNjMwMQ==", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391516301", "bodyText": "the inputPage stays until you ask for next page. You ask for next page only when there are no pending output pages.\nKeep note that outputPages buffer needs to be empty in order to process next inputPage", "author": "sopel39", "createdAt": "2020-03-12T10:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA==", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r390969648", "bodyText": "this should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return ofResult(outputPage, outputPages.isEmpty());\n          \n          \n            \n                        return ofResult(outputPage, true);\n          \n      \n    \n    \n  \n\nbecause inputPage is fully consumed and should not be re-submitted", "author": "findepi", "createdAt": "2020-03-11T13:29:48Z", "path": "presto-main/src/main/java/io/prestosql/operator/StreamingAggregationOperator.java", "diffHunk": "@@ -232,17 +230,25 @@ private StreamingAggregation(\n                 if (outputPages.isEmpty()) {\n                     return finished();\n                 }\n+\n+                return ofResult(outputPages.removeFirst(), false);\n             }\n-            else {\n-                processInput(inputPage);\n-                updateMemoryUsage();\n+\n+            // flush remaining output pages before requesting next input page\n+            if (!outputPages.isEmpty()) {\n+                Page outputPage = outputPages.removeFirst();\n+                return ofResult(outputPage, outputPages.isEmpty());\n             }\n \n+            processInput(inputPage);\n+            updateMemoryUsage();\n+\n             if (outputPages.isEmpty()) {\n                 return needsMoreData();\n             }\n \n-            return ofResult(outputPages.removeFirst(), !finishing);\n+            Page outputPage = outputPages.removeFirst();\n+            return ofResult(outputPage, outputPages.isEmpty());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNDY5Mg==", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391314692", "bodyText": "inputPage is fully consumed. However, there are output pages left (from that input page), which need to be outputted before we can ask for next page", "author": "sopel39", "createdAt": "2020-03-11T22:51:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzc5NQ==", "url": "https://github.com/trinodb/trino/pull/3064#discussion_r391317795", "bodyText": "I've added comment about this invariant", "author": "sopel39", "createdAt": "2020-03-11T23:00:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2OTY0OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "url": "https://github.com/trinodb/trino/commit/f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "message": "Flush remaining output pages before requesting next input page\n\nAll output pages (potentially lazy) should be returned in\nStreamingAggregationOperator before next input page is requested.", "committedDate": "2020-03-11T23:13:48Z", "type": "commit"}, {"oid": "f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "url": "https://github.com/trinodb/trino/commit/f7dc523602cf3189b83da5b078aad7aceaf2c2ff", "message": "Flush remaining output pages before requesting next input page\n\nAll output pages (potentially lazy) should be returned in\nStreamingAggregationOperator before next input page is requested.", "committedDate": "2020-03-11T23:13:48Z", "type": "forcePushed"}]}