{"pr_number": 3877, "pr_title": "Allow creating a JDBC connector without CredentialProviderModule", "pr_createdAt": "2020-05-28T22:04:28Z", "pr_url": "https://github.com/trinodb/trino/pull/3877", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTExNA==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432401114", "bodyText": "You can always call Modules.combine. In my perception Module is a some kind of \"collection\", so returning a collection of collections does make much sense.", "author": "kokosing", "createdAt": "2020-05-29T10:39:11Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -83,14 +85,14 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         return injector.getInstance(JdbcConnector.class);\n     }\n \n-    public interface JdbcModuleProvider\n+    public interface JdbcModulesProvider\n     {\n-        Module getModule(String catalogName);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NjM2OQ==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432786369", "bodyText": "It appears that in Modules.combine(A, B) module B fails to inject anything bound by module A. Such problems didn't appear when using List.", "author": "MiguelWeezardo", "createdAt": "2020-05-29T23:55:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA5MDUxMA==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r433090510", "bodyText": "Have you tried:\nimport static io.airlift.configuration.ConfigurationAwareModules.combine;\n\n?", "author": "kokosing", "createdAt": "2020-06-01T07:49:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA5MTY0NA==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r433091644", "bodyText": "It appears that in Modules.combine(A, B) module B fails to inject anything bound by module A.\n\nIt does not correct, we are using such composition already already in base JDBC connector. Also from what I understand you trying to remove CredentialProviderModule beans from the initialization as there were initialized exactly this way, out of your control.", "author": "kokosing", "createdAt": "2020-06-01T07:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwMDYyNQ==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r433500625", "bodyText": "I'll try ConfigurationAwareModules.combine next, with regular Modules.combine the bindings from one module weren't injected into the other module.", "author": "MiguelWeezardo", "createdAt": "2020-06-01T21:28:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTExNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMjYxMw==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432402613", "bodyText": "Maybe simply let's remove it from here and it via JdbcConnectorFactory in all places where it is used instead of this refactor?", "author": "kokosing", "createdAt": "2020-05-29T10:42:40Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -67,12 +68,13 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         requireNonNull(requiredConfig, \"requiredConfig is null\");\n \n         Bootstrap app = new Bootstrap(\n-                binder -> binder.bind(TypeManager.class).toInstance(context.getTypeManager()),\n-                binder -> binder.bind(NodeManager.class).toInstance(context.getNodeManager()),\n-                binder -> binder.bind(VersionEmbedder.class).toInstance(context.getVersionEmbedder()),\n-                new JdbcModule(catalogName),\n-                new CredentialProviderModule(),", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3MTYyMg==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432471622", "bodyText": "static import", "author": "kokosing", "createdAt": "2020-05-29T13:10:32Z", "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestJdbcConnectorFactory.java", "diffHunk": "@@ -22,7 +24,7 @@\n     @Test\n     public void test()\n     {\n-        ConnectorFactory connectorFactory = new JdbcConnectorFactory(\"test\", new TestingH2JdbcModule());\n+        ConnectorFactory connectorFactory = new JdbcConnectorFactory(\"test\", Modules.combine(new CredentialProviderModule(), new TestingH2JdbcModule()));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3MjAzMg==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432472032", "bodyText": "static import", "author": "kokosing", "createdAt": "2020-05-29T13:11:15Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcPlugin.java", "diffHunk": "@@ -13,31 +13,15 @@\n  */\n package io.prestosql.plugin.jdbc;\n \n-import com.google.common.collect.ImmutableList;\n import com.google.inject.Module;\n-import io.prestosql.spi.Plugin;\n-import io.prestosql.spi.connector.ConnectorFactory;\n-\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Strings.isNullOrEmpty;\n-import static java.util.Objects.requireNonNull;\n+import com.google.inject.util.Modules;\n+import io.prestosql.plugin.jdbc.credential.CredentialProviderModule;\n \n public class JdbcPlugin\n-        implements Plugin\n+        extends BaseJdbcPlugin\n {\n-    private final String name;\n-    private final Module module;\n-\n     public JdbcPlugin(String name, Module module)\n     {\n-        checkArgument(!isNullOrEmpty(name), \"name is null or empty\");\n-        this.name = name;\n-        this.module = requireNonNull(module, \"module is null\");\n-    }\n-\n-    @Override\n-    public Iterable<ConnectorFactory> getConnectorFactories()\n-    {\n-        return ImmutableList.of(new JdbcConnectorFactory(name, module));\n+        super(name, Modules.combine(new CredentialProviderModule(), module));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3MjQyNA==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432472424", "bodyText": "I don't see this class", "author": "kokosing", "createdAt": "2020-05-29T13:11:53Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcPlugin.java", "diffHunk": "@@ -13,31 +13,15 @@\n  */\n package io.prestosql.plugin.jdbc;\n \n-import com.google.common.collect.ImmutableList;\n import com.google.inject.Module;\n-import io.prestosql.spi.Plugin;\n-import io.prestosql.spi.connector.ConnectorFactory;\n-\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Strings.isNullOrEmpty;\n-import static java.util.Objects.requireNonNull;\n+import com.google.inject.util.Modules;\n+import io.prestosql.plugin.jdbc.credential.CredentialProviderModule;\n \n public class JdbcPlugin\n-        implements Plugin\n+        extends BaseJdbcPlugin", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3Mzk3OQ==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432473979", "bodyText": "Another though. Maybe instead of putting this module here and having BaseJdbcPlugin we could add a factory method to JdbcPlugin, like\nJdbcPlugin.createWithCredentials(name, additionalModue);\n\n?\nWhat do you think? I have a feeling that using inheritance is too heavy for this.", "author": "kokosing", "createdAt": "2020-05-29T13:14:34Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcPlugin.java", "diffHunk": "@@ -13,31 +13,15 @@\n  */\n package io.prestosql.plugin.jdbc;\n \n-import com.google.common.collect.ImmutableList;\n import com.google.inject.Module;\n-import io.prestosql.spi.Plugin;\n-import io.prestosql.spi.connector.ConnectorFactory;\n-\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Strings.isNullOrEmpty;\n-import static java.util.Objects.requireNonNull;\n+import com.google.inject.util.Modules;\n+import io.prestosql.plugin.jdbc.credential.CredentialProviderModule;\n \n public class JdbcPlugin\n-        implements Plugin\n+        extends BaseJdbcPlugin\n {\n-    private final String name;\n-    private final Module module;\n-\n     public JdbcPlugin(String name, Module module)\n     {\n-        checkArgument(!isNullOrEmpty(name), \"name is null or empty\");\n-        this.name = name;\n-        this.module = requireNonNull(module, \"module is null\");\n-    }\n-\n-    @Override\n-    public Iterable<ConnectorFactory> getConnectorFactories()\n-    {\n-        return ImmutableList.of(new JdbcConnectorFactory(name, module));\n+        super(name, Modules.combine(new CredentialProviderModule(), module));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDc2Nw==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r432980767", "bodyText": "Other plugins are subclasses of JdbcPlugin, how would we initialize them? If a factory method was responsible for adding CredentialProviderModule then we wouldn't be able to use super().", "author": "MiguelWeezardo", "createdAt": "2020-05-31T20:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ3Mzk3OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1OTg4MA==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r433459880", "bodyText": "Use import static io.airlift.configuration.ConfigurationAwareModules.combine instead of list.", "author": "kokosing", "createdAt": "2020-06-01T20:05:02Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -35,14 +37,18 @@\n         implements ConnectorFactory\n {\n     private final String name;\n-    private final JdbcModuleProvider moduleProvider;\n+    private final JdbcModulesProvider moduleProvider;\n \n     public JdbcConnectorFactory(String name, Module module)\n     {\n-        this(name, JdbcModuleProvider.of(module));\n+        this(name, catalogName -> {\n+            return ImmutableList.of(", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzNzU5Nw==", "url": "https://github.com/trinodb/trino/pull/3877#discussion_r433837597", "bodyText": "Rename this method to withCredentialProvider?", "author": "kokosing", "createdAt": "2020-06-02T12:29:53Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -90,7 +90,7 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         static JdbcModuleProvider of(Module module)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c1ad78d700173631042f45076ca973f5a592c602", "url": "https://github.com/trinodb/trino/commit/c1ad78d700173631042f45076ca973f5a592c602", "message": "Allow creating a JDBC connector without CredentialProviderModule", "committedDate": "2020-06-02T12:33:43Z", "type": "forcePushed"}, {"oid": "c1ad78d700173631042f45076ca973f5a592c602", "url": "https://github.com/trinodb/trino/commit/c1ad78d700173631042f45076ca973f5a592c602", "message": "Allow creating a JDBC connector without CredentialProviderModule", "committedDate": "2020-06-02T12:33:43Z", "type": "commit"}]}