{"pr_number": 5615, "pr_title": "Translate null predicate correctly in mongodb connector", "pr_createdAt": "2020-10-20T14:08:36Z", "pr_url": "https://github.com/trinodb/trino/pull/5615", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk0OTQ2OA==", "url": "https://github.com/trinodb/trino/pull/5615#discussion_r508949468", "bodyText": "The generated _schema collection may miss the Value column if the 2nd document was read first. It will lead to flaky tests. Let's define table definition explicitly. e.g.\n    @Test\n    public void testNullPredicates()\n    {\n        assertUpdate(\"CREATE TABLE test.null_predicates(name varchar, value integer)\");\n\n        MongoCollection<Document> collection = client.getDatabase(\"test\").getCollection(\"null_predicates\");\n        collection.insertOne(new Document(ImmutableMap.of(\"name\", \"abc\", \"value\", 1)));\n        collection.insertOne(new Document(ImmutableMap.of(\"name\", \"abcd\")));\n        collection.insertOne(new Document(Document.parse(\"{\\\"name\\\": \\\"abcde\\\", \\\"value\\\": null}\")));\n\n        assertQuery(\"SELECT count(*) FROM test.null_predicates WHERE value IS NULL OR rand() = 42\", \"SELECT 2\");\n        assertQuery(\"SELECT count(*) FROM test.null_predicates WHERE value IS NULL\", \"SELECT 2\");\n        assertQuery(\"SELECT count(*) FROM test.null_predicates WHERE value IS NOT NULL\", \"SELECT 1\");\n\n        assertUpdate(\"DROP TABLE test.null_predicates\");\n    }", "author": "ebyhr", "createdAt": "2020-10-21T02:22:25Z", "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -340,6 +340,18 @@ public void testDropTable()\n         assertQueryFails(\"SELECT * FROM test.drop_table\", \".*Table 'mongodb.test.drop_table' does not exist\");\n     }\n \n+    @Test\n+    public void testNullPredicates()\n+    {\n+        MongoCollection<Document> collection = client.getDatabase(\"testnull\").getCollection(\"null_predicates\");\n+        collection.insertOne(new Document(ImmutableMap.of(\"Name\", \"abc\", \"Value\", 1)));\n+        collection.insertOne(new Document(ImmutableMap.of(\"Name\", \"abcd\")));\n+        collection.insertOne(new Document(Document.parse(\"{\\\"Name\\\": \\\"abcde\\\", \\\"Value\\\": null}\")));\n+        assertQuery(\"SELECT count(*) FROM testnull.null_predicates WHERE Value IS NULL OR rand() = 42\", \"SELECT 2\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk0OTYyOA==", "url": "https://github.com/trinodb/trino/pull/5615#discussion_r508949628", "bodyText": "Lowercase field names (name, value) because this test objective isn't case sensitivity.", "author": "ebyhr", "createdAt": "2020-10-21T02:23:01Z", "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -340,6 +340,18 @@ public void testDropTable()\n         assertQueryFails(\"SELECT * FROM test.drop_table\", \".*Table 'mongodb.test.drop_table' does not exist\");\n     }\n \n+    @Test\n+    public void testNullPredicates()\n+    {\n+        MongoCollection<Document> collection = client.getDatabase(\"testnull\").getCollection(\"null_predicates\");\n+        collection.insertOne(new Document(ImmutableMap.of(\"Name\", \"abc\", \"Value\", 1)));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk1MjYwNw==", "url": "https://github.com/trinodb/trino/pull/5615#discussion_r508952607", "bodyText": "Remove EXISTS_OP from static field because it's no longer needed.", "author": "ebyhr", "createdAt": "2020-10-21T02:34:06Z", "path": "presto-mongodb/src/main/java/io/prestosql/plugin/mongodb/MongoSession.java", "diffHunk": "@@ -433,7 +433,7 @@ private static Document orPredicate(List<Document> values)\n \n     private static Document isNullPredicate()\n     {\n-        return documentOf(EXISTS_OP, true).append(EQ_OP, null);\n+        return documentOf(EQ_OP, null);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "7410b13980cbc4a23258109144a51eb225c7e23f", "url": "https://github.com/trinodb/trino/commit/7410b13980cbc4a23258109144a51eb225c7e23f", "message": "Translate null predicate correctly in mongodb connector", "committedDate": "2020-10-22T00:02:06Z", "type": "commit"}, {"oid": "7410b13980cbc4a23258109144a51eb225c7e23f", "url": "https://github.com/trinodb/trino/commit/7410b13980cbc4a23258109144a51eb225c7e23f", "message": "Translate null predicate correctly in mongodb connector", "committedDate": "2020-10-22T00:02:06Z", "type": "forcePushed"}]}