{"pr_number": 5365, "pr_title": "Use hive.domain-compaction-threshold for dynamic filters", "pr_createdAt": "2020-09-30T16:27:24Z", "pr_url": "https://github.com/trinodb/trino/pull/5365", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2MTg3Mg==", "url": "https://github.com/trinodb/trino/pull/5365#discussion_r497761872", "bodyText": "this requires benchmarking with unpartitioned data set as discrete values set is extracted in readers (e.g in TupleDomainOrcPredicate). The more values in the set, the more CPU cost per stripe (hence the original simplify)", "author": "sopel39", "createdAt": "2020-09-30T19:52:08Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePageSourceProvider.java", "diffHunk": "@@ -101,7 +104,7 @@ public ConnectorPageSource createPageSource(ConnectorTransactionHandle transacti\n \n         TupleDomain<HiveColumnHandle> simplifiedDynamicFilter = dynamicFilter\n                 .getCurrentPredicate()\n-                .transform(HiveColumnHandle.class::cast).simplify();\n+                .transform(HiveColumnHandle.class::cast).simplify(domainCompactionThreshold);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2OTE1Nw==", "url": "https://github.com/trinodb/trino/pull/5365#discussion_r497769157", "bodyText": "I'm willing to benchmark it. Since this is the same limit that is used for static predicates and the same overheads apply in that case too, I assumed that at some point it was established that this threshold is reasonable.", "author": "raunaqmorarka", "createdAt": "2020-09-30T20:06:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2MTg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4NzQ1OQ==", "url": "https://github.com/trinodb/trino/pull/5365#discussion_r497787459", "bodyText": "I'm willing to benchmark it.\n\nSounds good to me.\n\nSince this is the same limit that is used for static predicates and the same overheads apply in that case too\n\nYes. It's reasonable assumption.", "author": "sopel39", "createdAt": "2020-09-30T20:41:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2MTg3Mg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "8512c5fb27c5fb05fe6294fdb6ba53041e8be48f", "url": "https://github.com/trinodb/trino/commit/8512c5fb27c5fb05fe6294fdb6ba53041e8be48f", "message": "Use hive.domain-compaction-threshold for dynamic filters", "committedDate": "2020-10-10T17:55:33Z", "type": "commit"}, {"oid": "8512c5fb27c5fb05fe6294fdb6ba53041e8be48f", "url": "https://github.com/trinodb/trino/commit/8512c5fb27c5fb05fe6294fdb6ba53041e8be48f", "message": "Use hive.domain-compaction-threshold for dynamic filters", "committedDate": "2020-10-10T17:55:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIwMjI3Mw==", "url": "https://github.com/trinodb/trino/pull/5365#discussion_r503202273", "bodyText": "this should most likely be simplified after intersection (please re-run benchmarks)", "author": "sopel39", "createdAt": "2020-10-12T10:36:08Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePageSourceProvider.java", "diffHunk": "@@ -101,7 +104,7 @@ public ConnectorPageSource createPageSource(ConnectorTransactionHandle transacti\n \n         TupleDomain<HiveColumnHandle> simplifiedDynamicFilter = dynamicFilter\n                 .getCurrentPredicate()\n-                .transform(HiveColumnHandle.class::cast).simplify();\n+                .transform(HiveColumnHandle.class::cast).simplify(domainCompactionThreshold);", "originalCommit": "8512c5fb27c5fb05fe6294fdb6ba53041e8be48f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}