{"pr_number": 5884, "pr_title": "Assert coercion behavior with Hive", "pr_createdAt": "2020-11-09T15:51:09Z", "pr_url": "https://github.com/trinodb/trino/pull/5884", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxODE3MQ==", "url": "https://github.com/trinodb/trino/pull/5884#discussion_r520518171", "bodyText": "remember to drop this", "author": "findepi", "createdAt": "2020-11-10T12:17:27Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -262,7 +262,8 @@ private Environment getEnvironment()\n                                         \"-XX:MinHeapFreeRatio=10\",\n                                         \"-XX:MaxHeapFreeRatio=10\",\n                                         \"-Djava.util.logging.config.file=/docker/presto-product-tests/conf/tempto/logging.properties\",\n-                                        \"-Duser.timezone=Asia/Kathmandu\")\n+                                        \"-Duser.timezone=Asia/Kathmandu\",\n+                                        \"-Dio.prestosql.testng.services.FlakyTestRetryAnalyzer.enabled=true\")", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxOTExOA==", "url": "https://github.com/trinodb/trino/pull/5884#discussion_r520519118", "bodyText": "onPresto() could return something that's scoped for a test method or class.\n(maybe it does already?)\nthus do it lazy, only when getExecutor is called.\nor, do like here\nhttps://github.com/prestosql/presto/blob/34504af3ce2a4dfff4fecdb1d26d840787345220/presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java#L793-L797\nwhere the enum is dumb", "author": "findepi", "createdAt": "2020-11-10T12:19:14Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveCoercion.java", "diffHunk": "@@ -140,6 +146,24 @@\n                         \"STORED AS AVRO\");\n     }\n \n+    enum ExecutorType\n+    {\n+        PRESTO(onPresto()),\n+        HIVE(onHive());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA5MTE5Mg==", "url": "https://github.com/trinodb/trino/pull/5884#discussion_r540091192", "bodyText": "fmt", "author": "findepi", "createdAt": "2020-12-10T11:26:08Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveCoercion.java", "diffHunk": "@@ -561,4 +730,81 @@ private static Row project(Row row, int... columns)\n                 .map(prestoArray -> Arrays.asList((Object[]) prestoArray.getArray()))\n                 .collect(toImmutableList());\n     }\n+\n+    static class ColumnContext\n+    {\n+        private final String hiveVersion;\n+        private final String format;\n+        private final String column;\n+\n+        public ColumnContext(String hiveVersion, String format, String column)\n+        {\n+            this.hiveVersion = requireNonNull(hiveVersion, \"hiveVersion is null\");\n+            this.format = requireNonNull(format, \"format is null\");\n+            this.column = requireNonNull(column, \"column is null\");\n+        }\n+\n+        public static ColumnContext columnContext(String version, String format, String column)\n+        {\n+            return new ColumnContext(version, format, column);\n+        }\n+\n+        public String getHiveVersion()\n+        {\n+            return hiveVersion;\n+        }\n+\n+        public String getFormat()\n+        {\n+            return format;\n+        }\n+\n+        public String getColumn()\n+        {\n+            return column;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o)\n+        {\n+            if (this == o) {\n+                return true;\n+            }\n+            if (o == null || getClass() != o.getClass()) {\n+                return false;\n+            }\n+            ColumnContext that = (ColumnContext) o;\n+            return Objects.equals(hiveVersion, that.hiveVersion) && Objects.equals(format, that.format) && Objects.equals(\n+                    column, that.column);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "71ea9033d773d15776a03a042a4f1d6cdea997ad", "url": "https://github.com/trinodb/trino/commit/71ea9033d773d15776a03a042a4f1d6cdea997ad", "message": "Verify coercion behavior in hive", "committedDate": "2020-12-11T03:58:50Z", "type": "commit"}, {"oid": "71ea9033d773d15776a03a042a4f1d6cdea997ad", "url": "https://github.com/trinodb/trino/commit/71ea9033d773d15776a03a042a4f1d6cdea997ad", "message": "Verify coercion behavior in hive", "committedDate": "2020-12-11T03:58:50Z", "type": "forcePushed"}]}