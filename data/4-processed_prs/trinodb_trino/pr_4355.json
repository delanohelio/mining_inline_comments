{"pr_number": 4355, "pr_title": "Fix time resolution in comparison", "pr_createdAt": "2020-07-06T12:29:08Z", "pr_url": "https://github.com/trinodb/trino/pull/4355", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE4OTAzMg==", "url": "https://github.com/trinodb/trino/pull/4355#discussion_r450189032", "bodyText": "Can you pass Instant to getTableCompactions and do the conversion to low-level unit internally. It is implementation detail that in SQL query to get transactions we need milliseconds.", "author": "losipiuk", "createdAt": "2020-07-06T12:33:54Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveTransactionalTable.java", "diffHunk": "@@ -245,7 +245,7 @@ private static void compactTableAndWait(CompactionMode compactMode, String table\n     private static void tryCompactingTable(CompactionMode compactMode, String tableName, String partitionString, Duration timeout)\n             throws TimeoutException\n     {\n-        long beforeCompactionStart = Instant.now().getEpochSecond();\n+        long beforeCompactionStart = Instant.now().getEpochSecond() * 1000;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE4OTc2NQ==", "url": "https://github.com/trinodb/trino/pull/4355#discussion_r450189765", "bodyText": "Sure, I can", "author": "wendigo", "createdAt": "2020-07-06T12:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE4OTAzMg=="}], "type": "inlineReview"}, {"oid": "afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "url": "https://github.com/trinodb/trino/commit/afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "message": "Fix time resolution in comparison", "committedDate": "2020-07-06T12:38:17Z", "type": "commit"}, {"oid": "afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "url": "https://github.com/trinodb/trino/commit/afd8f8122e7ee8b207fb3b70b84cf6097671c3cc", "message": "Fix time resolution in comparison", "committedDate": "2020-07-06T12:38:17Z", "type": "forcePushed"}]}