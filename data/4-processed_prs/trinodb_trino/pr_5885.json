{"pr_number": 5885, "pr_title": "Cache hashcode for TypeSignature class", "pr_createdAt": "2020-11-09T17:05:10Z", "pr_url": "https://github.com/trinodb/trino/pull/5885", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwODM3Nw==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r520008377", "bodyText": "There's a data race here due to lack of synchronization between these two variables. It's possible for a thread to observe hashComputed == false and hashCode being set to 0.\nThe only safe way to do this is:\nint hash = hashCode;\nif (hash == 0) {\n    hash = Objects.hash(...);\n    hashCode = hash\n}\n\nreturn hash;\n\nNote that this relies on the atomicity semantics for unsynchronized access to int fields.", "author": "martint", "createdAt": "2020-11-09T17:57:27Z", "path": "presto-spi/src/main/java/io/prestosql/spi/type/TypeSignature.java", "diffHunk": "@@ -160,7 +163,13 @@ public boolean equals(Object o)\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(base.toLowerCase(Locale.ENGLISH), parameters);\n+        if (hashComputed) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyNjYwNA==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r520026604", "bodyText": "Also you need to hande Objects.hash returning zero\nint hash = hashCode;\nif (hash == 0) {\n    int tempHash = Objects.hash(...);\n    if (tempHash == 0) {\n        tempHash++;\n    }\n    hashCode = hash\n}\n\nreturn hash;", "author": "dain", "createdAt": "2020-11-09T18:28:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwODM3Nw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NjI4Mg==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r521676282", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            hash++;\n          \n          \n            \n                            hash = 1;", "author": "findepi", "createdAt": "2020-11-11T22:27:52Z", "path": "presto-spi/src/main/java/io/prestosql/spi/type/TypeSignature.java", "diffHunk": "@@ -160,7 +162,16 @@ public boolean equals(Object o)\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(base.toLowerCase(Locale.ENGLISH), parameters);\n+        int hash = hashCode;\n+        if (hash == 0) {\n+            hash = Objects.hash(base.toLowerCase(Locale.ENGLISH), parameters);\n+            if (hash == 0) {\n+                hash++;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NzYzMQ==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r521677631", "bodyText": "// Cached hash code. The class remains effectively immutable, because inputs for hash calculations are immutable.", "author": "findepi", "createdAt": "2020-11-11T22:30:52Z", "path": "presto-spi/src/main/java/io/prestosql/spi/type/TypeSignature.java", "diffHunk": "@@ -36,6 +36,8 @@\n     private final List<TypeSignatureParameter> parameters;\n     private final boolean calculated;\n \n+    private int hashCode;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3OTA4Nw==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r521679087", "bodyText": "#5930", "author": "findepi", "createdAt": "2020-11-11T22:34:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NzYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1ODgxOA==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r522258818", "bodyText": "This is not accurate. The class is very much not \"effectively immutable\". The value of hashCode does change after construction and publication (it goes from 0 to some deterministically computed hashcode). It is also theoretically possible that some thread may never observe a non-zero value.\nThe trick here works because:\n\nThe value computed value is deterministic and it's derived from state that is immutable and guaranteed to be published safely\nReads/writes to int variables are guaranteed to be atomic in the JVM (unlike double or long)\nThe hashCode() method is carefully implemented to read the value of the hashCode field once and perform all its logic based on that.", "author": "martint", "createdAt": "2020-11-12T16:53:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NzYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM3NzI5Mw==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r522377293", "bodyText": "@martint i know. I tried to capture the gist of it, or a hint at this, in a brief comment. I don't thing going into tiny details is needed in a code comment here, but i think it's worth having something. Can you suggest a different wording for this?", "author": "findepi", "createdAt": "2020-11-12T19:46:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NzYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM4Mjk1Mg==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r522382952", "bodyText": "Just added the following comment.\n// Cached hash code", "author": "phd3", "createdAt": "2020-11-12T19:56:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NzYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI5NjA1OA==", "url": "https://github.com/trinodb/trino/pull/5885#discussion_r523296058", "bodyText": "Discussed offline with @findepi, merging without a comment for now to avoid confusion.", "author": "phd3", "createdAt": "2020-11-14T00:13:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NzYzMQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "81ae1997fa90825a1222f603d2302a0c9a16cc0b", "url": "https://github.com/trinodb/trino/commit/81ae1997fa90825a1222f603d2302a0c9a16cc0b", "message": "Cache hashcode for TypeSignature class\n\nThis improves the cpu cost of building hashmaps and hashsets of\nobjects that depend on AbstractType#hashCode, by caching the hash\nvalue for TypeSignature objects which is expensive to compute\nrepeatedly.", "committedDate": "2020-11-13T21:29:05Z", "type": "commit"}, {"oid": "81ae1997fa90825a1222f603d2302a0c9a16cc0b", "url": "https://github.com/trinodb/trino/commit/81ae1997fa90825a1222f603d2302a0c9a16cc0b", "message": "Cache hashcode for TypeSignature class\n\nThis improves the cpu cost of building hashmaps and hashsets of\nobjects that depend on AbstractType#hashCode, by caching the hash\nvalue for TypeSignature objects which is expensive to compute\nrepeatedly.", "committedDate": "2020-11-13T21:29:05Z", "type": "forcePushed"}]}