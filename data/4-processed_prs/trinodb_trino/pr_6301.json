{"pr_number": 6301, "pr_title": "Accept LocalDate as prepared statement parameter", "pr_createdAt": "2020-12-11T12:52:23Z", "pr_url": "https://github.com/trinodb/trino/pull/6301", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAxOTgxNg==", "url": "https://github.com/trinodb/trino/pull/6301#discussion_r541019816", "bodyText": "maybe function should be called setAsLocalDate or setLocalDate to match the parameter type?", "author": "losipiuk", "createdAt": "2020-12-11T15:17:06Z", "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/PrestoPreparedStatement.java", "diffHunk": "@@ -538,6 +538,9 @@ else if (x instanceof byte[]) {\n         else if (x instanceof Date) {\n             setDate(parameterIndex, (Date) x);\n         }\n+        else if (x instanceof LocalDate) {\n+            setAsDate(parameterIndex, x);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4MjE4MQ==", "url": "https://github.com/trinodb/trino/pull/6301#discussion_r541082181", "bodyText": "setAsDate takes Object and actually works with several different date representations", "author": "findepi", "createdAt": "2020-12-11T16:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAxOTgxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTAwNA==", "url": "https://github.com/trinodb/trino/pull/6301#discussion_r541021004", "bodyText": "this does not seem related. Extract?", "author": "losipiuk", "createdAt": "2020-12-11T15:18:46Z", "path": "presto-jdbc/src/test/java/io/prestosql/jdbc/TestJdbcPreparedStatement.java", "diffHunk": "@@ -943,8 +985,9 @@ public BindAssertion resultsIn(String type, String expectedValueLiteral)\n                             .isEqualTo(type);\n                     assertThat(rs.getString(\"bound_as_varchar\")).as(\"bound should cast to VARCHAR the same way as literal \" + expectedValueLiteral)\n                             .isEqualTo(rs.getString(\"literal_as_varchar\"));\n-                    assertThat(rs.getObject(\"bound\")).as(\"bound value should round trip the same way as literal \" + expectedValueLiteral)\n-                            .isEqualTo(rs.getObject(\"literal\"));\n+                    // TODO (https://github.com/prestosql/presto/issues/6242) ResultSet.getObject sometimes fails", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM5MTY3MA==", "url": "https://github.com/trinodb/trino/pull/6301#discussion_r541391670", "bodyText": "It is related -- i am adding test case with DATE 1970-01-01 and it fails here.", "author": "findepi", "createdAt": "2020-12-11T23:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTAwNA=="}], "type": "inlineReview"}, {"oid": "f97680e3306612c5d5a7c3deee29a926e9c00c15", "url": "https://github.com/trinodb/trino/commit/f97680e3306612c5d5a7c3deee29a926e9c00c15", "message": "Accept LocalDate as prepared statement parameter", "committedDate": "2020-12-11T23:07:16Z", "type": "commit"}, {"oid": "f97680e3306612c5d5a7c3deee29a926e9c00c15", "url": "https://github.com/trinodb/trino/commit/f97680e3306612c5d5a7c3deee29a926e9c00c15", "message": "Accept LocalDate as prepared statement parameter", "committedDate": "2020-12-11T23:07:16Z", "type": "forcePushed"}]}