{"pr_number": 6149, "pr_title": "Fix TIMESTAMP [TZ] in JDBC when nanos overflow", "pr_createdAt": "2020-11-30T09:23:05Z", "pr_url": "https://github.com/trinodb/trino/pull/6149", "timeline": [{"oid": "bb25cf1911d336345a4a28ddcac188eb383e416d", "url": "https://github.com/trinodb/trino/commit/bb25cf1911d336345a4a28ddcac188eb383e416d", "message": "Remove redundant checks on server capabilities\n\nIn these cases the relevant check is applied outside of the test case\nand does not need to be repeated in assertions.", "committedDate": "2020-11-30T09:20:10Z", "type": "commit"}, {"oid": "6c08b4339f4ebbf405f048f160206a3a0c850d66", "url": "https://github.com/trinodb/trino/commit/6c08b4339f4ebbf405f048f160206a3a0c850d66", "message": "Separate TIMESTAMP and TIMESTAMP WITH TIME ZONE test cases", "committedDate": "2020-11-30T09:20:10Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNjUyNw==", "url": "https://github.com/trinodb/trino/pull/6149#discussion_r535226527", "bodyText": "what about the \"before-epoch\" values. Are those handled correctly. Do we have tests coverage?", "author": "losipiuk", "createdAt": "2020-12-03T13:27:54Z", "path": "presto-jdbc/src/main/java/io/prestosql/jdbc/AbstractPrestoResultSet.java", "diffHunk": "@@ -1931,19 +1931,23 @@ private static Timestamp parseTimestamp(String value, Function<String, ZoneId> t\n         long epochSecond = LocalDateTime.of(year, month, day, hour, minute, second, 0)\n                 .atZone(zoneId)\n                 .toEpochSecond();\n-        long epochMillis = SECONDS.toMillis(epochSecond);\n \n-        Timestamp timestamp;\n-        if (epochMillis >= START_OF_MODERN_ERA) {\n-            timestamp = new Timestamp(epochMillis);\n-        }\n-        else {\n+        if (epochSecond < START_OF_MODERN_ERA_SECONDS) {\n             // slower path, but accurate for historical dates\n             GregorianCalendar calendar = new GregorianCalendar(year, month - 1, day, hour, minute, second);\n             calendar.setTimeZone(TimeZone.getTimeZone(zoneId));\n-            timestamp = new Timestamp(calendar.getTimeInMillis());\n+            verify(calendar.getTimeInMillis() % MILLISECONDS_PER_SECOND == 0, \"Fractional second when recalculating epochSecond of a historical date: %s\", value);\n+            epochSecond = calendar.getTimeInMillis() / MILLISECONDS_PER_SECOND;\n         }\n-        timestamp.setNanos((int) rescale(fractionValue, precision, 9));\n+\n+        int nanoOfSecond = (int) rescale(fractionValue, precision, 9);\n+        if (nanoOfSecond == NANOSECONDS_PER_SECOND) {\n+            epochSecond++;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNzE5NA==", "url": "https://github.com/trinodb/trino/pull/6149#discussion_r535237194", "bodyText": "The fractionValue is positive number, so this is correct for negative timestamp values as well.", "author": "findepi", "createdAt": "2020-12-03T13:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNjUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ5Nzc5Mw==", "url": "https://github.com/trinodb/trino/pull/6149#discussion_r535497793", "bodyText": "i do not feel a negative test is needed here, but added anyway", "author": "findepi", "createdAt": "2020-12-03T18:56:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNjUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyNjk1MA==", "url": "https://github.com/trinodb/trino/pull/6149#discussion_r535926950", "bodyText": "Yeah - I had some mind twist and for a moment thought that maybe for before-epoch we should subtract a second. WHich does not make sense at all :)\nThanks for test anyway.", "author": "losipiuk", "createdAt": "2020-12-04T08:40:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIyNjUyNw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "725cc5a67e79a935694d393cb2ad4e80f46cfdce", "url": "https://github.com/trinodb/trino/commit/725cc5a67e79a935694d393cb2ad4e80f46cfdce", "message": "Fix TIMESTAMP [TZ] in JDBC when nanos overflow", "committedDate": "2020-12-03T20:20:58Z", "type": "commit"}, {"oid": "1bbfe571337878034aabb4e5340700995e6d8837", "url": "https://github.com/trinodb/trino/commit/1bbfe571337878034aabb4e5340700995e6d8837", "message": "Fix formatting", "committedDate": "2020-12-03T20:20:58Z", "type": "commit"}, {"oid": "1bbfe571337878034aabb4e5340700995e6d8837", "url": "https://github.com/trinodb/trino/commit/1bbfe571337878034aabb4e5340700995e6d8837", "message": "Fix formatting", "committedDate": "2020-12-03T20:20:58Z", "type": "forcePushed"}]}