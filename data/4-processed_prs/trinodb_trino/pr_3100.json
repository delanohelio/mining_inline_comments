{"pr_number": 3100, "pr_title": "Refactor toCompactTupleDomain to reuse Domain#simplify", "pr_createdAt": "2020-03-15T08:25:46Z", "pr_url": "https://github.com/trinodb/trino/pull/3100", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg4NTI3OQ==", "url": "https://github.com/trinodb/trino/pull/3100#discussion_r392885279", "bodyText": "inline compactDomain", "author": "sopel39", "createdAt": "2020-03-16T09:33:49Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePartitionManager.java", "diffHunk": "@@ -243,14 +242,8 @@ public HiveTableHandle applyPartitionResult(HiveTableHandle handle, HivePartitio\n         effectivePredicate.getDomains().ifPresent(domains -> {\n             for (Map.Entry<ColumnHandle, Domain> entry : domains.entrySet()) {\n                 HiveColumnHandle hiveColumnHandle = (HiveColumnHandle) entry.getKey();\n-\n-                ValueSet values = entry.getValue().getValues();\n-                ValueSet compactValueSet = values.getValuesProcessor().<Optional<ValueSet>>transform(\n-                        ranges -> ranges.getRangeCount() > threshold ? Optional.of(ValueSet.ofRanges(ranges.getSpan())) : Optional.empty(),\n-                        discreteValues -> discreteValues.getValues().size() > threshold ? Optional.of(ValueSet.all(values.getType())) : Optional.empty(),\n-                        allOrNone -> Optional.empty())\n-                        .orElse(values);\n-                builder.put(hiveColumnHandle, Domain.create(compactValueSet, entry.getValue().isNullAllowed()));\n+                Domain compactDomain = entry.getValue().simplify(threshold);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkyMjQ1NQ==", "url": "https://github.com/trinodb/trino/pull/3100#discussion_r392922455", "bodyText": "done", "author": "raunaqmorarka", "createdAt": "2020-03-16T10:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg4NTI3OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3OTU2OQ==", "url": "https://github.com/trinodb/trino/pull/3100#discussion_r393579569", "bodyText": "commit message is too long.\n\nChanged Domain#simplify to avoid constructing new objects to get size of Ranges or DiscreteValues\n\nHow do you avoid creating new objects?", "author": "sopel39", "createdAt": "2020-03-17T10:29:05Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HivePartitionManager.java", "diffHunk": "@@ -34,7 +34,6 @@\n import io.prestosql.spi.predicate.Domain;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNDYwOQ==", "url": "https://github.com/trinodb/trino/pull/3100#discussion_r393634609", "bodyText": "I was referring to new ArrayList<>(lowIndexedRanges.values()); in SortedRangeSet#getOrderedRanges and similar copying of internal structures in EquatableValueSet#getValues just to get their size. Now that's replaced by getRangeCount and getValuesCount.\nI'll shorten the commit message", "author": "raunaqmorarka", "createdAt": "2020-03-17T12:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3OTU2OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "c3658cc198f3324fa9bd8c1866ec1d042793c84c", "url": "https://github.com/trinodb/trino/commit/c3658cc198f3324fa9bd8c1866ec1d042793c84c", "message": "Refactor toCompactTupleDomain to reuse Domain#simplify\n\nChanged Domain#simplify to avoid copying internal structures to get size of Ranges or DiscreteValues", "committedDate": "2020-03-18T10:33:25Z", "type": "commit"}, {"oid": "c3658cc198f3324fa9bd8c1866ec1d042793c84c", "url": "https://github.com/trinodb/trino/commit/c3658cc198f3324fa9bd8c1866ec1d042793c84c", "message": "Refactor toCompactTupleDomain to reuse Domain#simplify\n\nChanged Domain#simplify to avoid copying internal structures to get size of Ranges or DiscreteValues", "committedDate": "2020-03-18T10:33:25Z", "type": "forcePushed"}]}