{"pr_number": 3208, "pr_title": "Properly list all tables in memory connector", "pr_createdAt": "2020-03-23T11:17:09Z", "pr_url": "https://github.com/trinodb/trino/pull/3208", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM5NDM2NA==", "url": "https://github.com/trinodb/trino/pull/3208#discussion_r396394364", "bodyText": "s/test/viewName", "author": "kokosing", "createdAt": "2020-03-23T11:51:15Z", "path": "presto-memory/src/test/java/io/prestosql/plugin/memory/TestMemoryMetadata.java", "diffHunk": "@@ -198,6 +198,18 @@ public void testCreateViewWithReplace()\n                 .hasValue(\"bbb\");\n     }\n \n+    @Test\n+    public void testCreatedViewShouldBeListedAsTable()\n+    {\n+        SchemaTableName test = new SchemaTableName(\"test\", \"test_view\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM5NDQ3MQ==", "url": "https://github.com/trinodb/trino/pull/3208#discussion_r396394471", "bodyText": "extract \"test\" as schemaName", "author": "kokosing", "createdAt": "2020-03-23T11:51:29Z", "path": "presto-memory/src/test/java/io/prestosql/plugin/memory/TestMemoryMetadata.java", "diffHunk": "@@ -198,6 +198,18 @@ public void testCreateViewWithReplace()\n                 .hasValue(\"bbb\");\n     }\n \n+    @Test\n+    public void testCreatedViewShouldBeListedAsTable()\n+    {\n+        SchemaTableName test = new SchemaTableName(\"test\", \"test_view\");\n+\n+        metadata.createSchema(SESSION, \"test\", ImmutableMap.of());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM5NDg3Mw==", "url": "https://github.com/trinodb/trino/pull/3208#discussion_r396394873", "bodyText": "I would use ImmutableList.builder() instead of  concat", "author": "kokosing", "createdAt": "2020-03-23T11:52:16Z", "path": "presto-memory/src/main/java/io/prestosql/plugin/memory/MemoryMetadata.java", "diffHunk": "@@ -141,9 +142,12 @@ public synchronized ConnectorTableMetadata getTableMetadata(ConnectorSession ses\n     @Override\n     public synchronized List<SchemaTableName> listTables(ConnectorSession session, Optional<String> schemaName)\n     {\n-        return tables.values().stream()\n-                .filter(table -> schemaName.map(table.getSchemaName()::equals).orElse(true))\n-                .map(TableInfo::getSchemaTableName)\n+        return concat(", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "961f229c6981bc82fcaab5e186ec6d37dca23aae", "url": "https://github.com/trinodb/trino/commit/961f229c6981bc82fcaab5e186ec6d37dca23aae", "message": "Properly list all tables in memory connector", "committedDate": "2020-03-23T12:56:41Z", "type": "commit"}, {"oid": "961f229c6981bc82fcaab5e186ec6d37dca23aae", "url": "https://github.com/trinodb/trino/commit/961f229c6981bc82fcaab5e186ec6d37dca23aae", "message": "Properly list all tables in memory connector", "committedDate": "2020-03-23T12:56:41Z", "type": "forcePushed"}]}