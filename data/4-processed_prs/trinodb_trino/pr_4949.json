{"pr_number": 4949, "pr_title": "Require identifying flakiness's exception", "pr_createdAt": "2020-08-24T10:33:59Z", "pr_url": "https://github.com/trinodb/trino/pull/4949", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNjQ5NA==", "url": "https://github.com/trinodb/trino/pull/4949#discussion_r475536494", "bodyText": "Would match be better name?", "author": "findepi", "createdAt": "2020-08-24T11:34:18Z", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/Flaky.java", "diffHunk": "@@ -28,4 +29,10 @@\n public @interface Flaky\n {\n     String issue();\n+\n+    /**\n+     * A test is retried when it fails with a stacktrace, which string representation matches given regular expression.\n+     * The pattern is searched for, as if {@link Matcher#find()} was used.\n+     */\n+    String matching();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODMzMg==", "url": "https://github.com/trinodb/trino/pull/4949#discussion_r475538332", "bodyText": "exceptionMessageRegExp? It doesn't have to be super user friendly :)", "author": "kokosing", "createdAt": "2020-08-24T11:38:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNjQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODY5NQ==", "url": "https://github.com/trinodb/trino/pull/4949#discussion_r475538695", "bodyText": "can you please use regexp here?", "author": "kokosing", "createdAt": "2020-08-24T11:39:05Z", "path": "presto-testng-services/src/test/java/io/prestosql/testng/services/TestFlakyTestRetryAnalyzer.java", "diffHunk": "@@ -48,13 +48,13 @@ public void testNoRetrying()\n \n     @Override\n     @Test\n-    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\")\n+    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\", matching = \"I am trying hard to fail!\")\n     public void testRetryingOverriddenTest()\n     {\n         super.testRetryingOverriddenTest();\n     }\n \n-    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\")\n+    @Flaky(issue = \"intentionally flaky for @Flaky test purposes\", matching = \"I am trying hard to fail!\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5NjUyMw==", "url": "https://github.com/trinodb/trino/pull/4949#discussion_r475596523", "bodyText": "not sure i understand?", "author": "findepi", "createdAt": "2020-08-24T13:24:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzODY5NQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "416c0dd13906fe44f9081d5a215ce404b0d2bde9", "url": "https://github.com/trinodb/trino/commit/416c0dd13906fe44f9081d5a215ce404b0d2bde9", "message": "Require identifying flakiness's exception\n\nWhen marking a `@Flaky` test for retry, require identification of a\nflakiness by providing matching exception pattern. This prevents further\nregressions and helps as a code documentation.", "committedDate": "2020-08-25T05:46:58Z", "type": "commit"}, {"oid": "416c0dd13906fe44f9081d5a215ce404b0d2bde9", "url": "https://github.com/trinodb/trino/commit/416c0dd13906fe44f9081d5a215ce404b0d2bde9", "message": "Require identifying flakiness's exception\n\nWhen marking a `@Flaky` test for retry, require identification of a\nflakiness by providing matching exception pattern. This prevents further\nregressions and helps as a code documentation.", "committedDate": "2020-08-25T05:46:58Z", "type": "forcePushed"}]}