{"pr_number": 3463, "pr_title": "Add generic column names test", "pr_createdAt": "2020-04-17T10:24:11Z", "pr_url": "https://github.com/trinodb/trino/pull/3463", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxNTM0Mg==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410215342", "bodyText": "#3461", "author": "findepi", "createdAt": "2020-04-17T13:17:44Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveDistributedQueries.java", "diffHunk": "@@ -59,6 +59,17 @@ public void testExplainOfCreateTableAs()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Override\n+    public void testColumnName(String columnName)\n+    {\n+        if (columnName.equals(\"atrailingspace \")) {\n+            // TODO (https://github.com/prestosql/presto/issues/3461)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMTUyNg==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410221526", "bodyText": "#3460", "author": "findepi", "createdAt": "2020-04-17T13:27:55Z", "path": "presto-mongodb/src/test/java/io/prestosql/plugin/mongodb/TestMongoDistributedQueries.java", "diffHunk": "@@ -116,10 +117,14 @@ protected TestTable createTableWithDefaultColumns()\n     }\n \n     @Override\n+    @Test(dataProvider = \"testColumnNameDataProvider\")\n     public void testColumnName(String columnName)\n     {\n         if (columnName.equals(\"a.dot\")) {\n-            // TODO https://github.com/prestosql/presto/issues/3460\n+            // TODO (https://github.com/prestosql/presto/issues/3460)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMTY1Ng==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410221656", "bodyText": "#3466", "author": "findepi", "createdAt": "2020-04-17T13:28:03Z", "path": "presto-phoenix/src/test/java/io/prestosql/plugin/phoenix/TestPhoenixDistributedQueries.java", "diffHunk": "@@ -133,6 +133,13 @@ public void testCreateSchema()\n         throw new SkipException(\"test disabled until issue fixed\"); // TODO https://github.com/prestosql/presto/issues/2348\n     }\n \n+    @Override\n+    public void testColumnName(String columnName)\n+    {\n+        // TODO (https://github.com/prestosql/presto/issues/3466) Phoenix generally lacks quoting in underlying queries", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc2NDQ5Nw==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r410764497", "bodyText": "#3477", "author": "findepi", "createdAt": "2020-04-18T22:50:22Z", "path": "presto-kudu/src/test/java/io/prestosql/plugin/kudu/TestKuduDistributedQueries.java", "diffHunk": "@@ -158,7 +158,7 @@ public void testWrittenStats()\n     @Override\n     public void testColumnName(String columnName)\n     {\n-        // TODO enable the test\n+        // TODO (https://github.com/prestosql/presto/issues/3477) enable the test", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwMzkzOQ==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411103939", "bodyText": "does it support CTAS?", "author": "kokosing", "createdAt": "2020-04-20T05:33:24Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraDistributedQueries.java", "diffHunk": "@@ -160,6 +160,12 @@ protected TestTable createTableWithDefaultColumns()\n         throw new SkipException(\"Cassandra connector does not support column default values\");\n     }\n \n+    @Override\n+    public void testColumnName(String columnName)\n+    {\n+        // Cassandra connector currently does not support create table", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTExNjEwNw==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411116107", "bodyText": "Yes, CTAS is already supported.", "author": "ebyhr", "createdAt": "2020-04-20T06:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwMzkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyOTUxOQ==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411129519", "bodyText": "let's cover this in #3478 maybe.", "author": "findepi", "createdAt": "2020-04-20T06:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwMzkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0OTUyOQ==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411149529", "bodyText": "i removed the override, tests will pass when #3478 is merged", "author": "findepi", "createdAt": "2020-04-20T07:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwMzkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1NjMxNQ==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411156315", "bodyText": "I added the override back. The test fails for cassandra for a reason i don't understand.\nlet's get the test in in its general shape so that we can collaborate on it", "author": "findepi", "createdAt": "2020-04-20T07:31:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwMzkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNDUzNw==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411104537", "bodyText": "please extract qoute method", "author": "kokosing", "createdAt": "2020-04-20T05:35:14Z", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1239,6 +1240,84 @@ public void testInsertForDefaultColumn()\n \n     protected abstract TestTable createTableWithDefaultColumns();\n \n+    @Test(dataProvider = \"testColumnNameDataProvider\")\n+    public void testColumnName(String columnName)\n+    {\n+        if (!requiresDelimiting(columnName)) {\n+            testColumnName(columnName, false);\n+        }\n+        testColumnName(columnName, true);\n+    }\n+\n+    private void testColumnName(String columnName, boolean delimited)\n+    {\n+        String nameInSql = columnName;\n+        if (delimited) {\n+            nameInSql = \"\\\"\" + columnName.replace(\"\\\"\", \"\\\"\\\"\") + \"\\\"\";", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEzMDA2Nw==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411130067", "bodyText": "it's used once, and for specific purpose  and i prefer to leave it as is.\n(i could as well make it part of data provided by the @DataProvider)", "author": "findepi", "createdAt": "2020-04-20T06:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNDUzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNDk5Nw==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411104997", "bodyText": "remove?", "author": "kokosing", "createdAt": "2020-04-20T05:36:44Z", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1239,6 +1240,84 @@ public void testInsertForDefaultColumn()\n \n     protected abstract TestTable createTableWithDefaultColumns();\n \n+    @Test(dataProvider = \"testColumnNameDataProvider\")\n+    public void testColumnName(String columnName)\n+    {\n+        if (!requiresDelimiting(columnName)) {\n+            testColumnName(columnName, false);\n+        }\n+        testColumnName(columnName, true);\n+    }\n+\n+    private void testColumnName(String columnName, boolean delimited)\n+    {\n+        String nameInSql = columnName;\n+        if (delimited) {\n+            nameInSql = \"\\\"\" + columnName.replace(\"\\\"\", \"\\\"\\\"\") + \"\\\"\";\n+        }\n+        String tableName = \"test_column_names_\" + nameInSql.toLowerCase(ENGLISH).replaceAll(\"[^a-z0-9]\", \"_\") + \"_\" + randomTableSuffix();\n+\n+        try {\n+            // TODO test with both CTAS *and* CREATE TABLE + INSERT, since they use different connector API methods.\n+            assertUpdate(\"CREATE TABLE \" + tableName + \"(id varchar, \" + nameInSql + \" varchar)\");\n+        }\n+        catch (RuntimeException e) {\n+            if (isColumnNameRejected(e, columnName, delimited)) {\n+                // Fair enough", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEzMDU2MQ==", "url": "https://github.com/trinodb/trino/pull/3463#discussion_r411130561", "bodyText": "changed to // It is OK if give column name is not allowed and is clearly rejected by the connector.", "author": "findepi", "createdAt": "2020-04-20T06:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEwNDk5Nw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "6603522239b97a1ffa3593df911a7795110f95c2", "url": "https://github.com/trinodb/trino/commit/6603522239b97a1ffa3593df911a7795110f95c2", "message": "Add generic column names test", "committedDate": "2020-04-20T08:43:32Z", "type": "commit"}, {"oid": "6603522239b97a1ffa3593df911a7795110f95c2", "url": "https://github.com/trinodb/trino/commit/6603522239b97a1ffa3593df911a7795110f95c2", "message": "Add generic column names test", "committedDate": "2020-04-20T08:43:32Z", "type": "forcePushed"}]}