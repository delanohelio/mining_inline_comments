{"pr_number": 4926, "pr_title": "Support implementing interface in tests", "pr_createdAt": "2020-08-21T18:53:45Z", "pr_url": "https://github.com/trinodb/trino/pull/4926", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk4Mjk4Ng==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r474982986", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (superclass == null) {\n          \n          \n            \n                    if (method.getDeclaringClass().isInterface()) {", "author": "findepi", "createdAt": "2020-08-21T21:44:38Z", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/ReportUnannotatedMethods.java", "diffHunk": "@@ -78,6 +78,10 @@ private static boolean isTestMethod(Method method)\n             return true;\n         }\n         Class<?> superclass = method.getDeclaringClass().getSuperclass();\n+        if (superclass == null) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxNzU4NA==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475517584", "bodyText": "Please see #4951 for my take on this.", "author": "findepi", "createdAt": "2020-08-24T10:54:38Z", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/ReportUnannotatedMethods.java", "diffHunk": "@@ -129,4 +130,18 @@ public static boolean isTemptoClass(Class<?> aClass)\n     {\n         return aClass.getPackage().getName().startsWith(\"io.prestosql.tempto\");\n     }\n+\n+    private static void forceTestngFailure(Runnable runnable)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxODU0Mg==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475518542", "bodyText": "I guess #4951 is more robust as it covers more listeners.", "author": "wendigo", "createdAt": "2020-08-24T10:56:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxNzU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMDI0Ng==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475520246", "bodyText": "BTW Maybe we can deprecate & remove this interfaces?\nAlso, this should not match eg io.prestosql.temptomat -- you need to prefix match with a dot at the end.", "author": "findepi", "createdAt": "2020-08-24T11:00:21Z", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/ReportUnannotatedMethods.java", "diffHunk": "@@ -140,6 +140,6 @@ private static boolean overrides(Method first, Method second)\n \n     public static boolean isTemptoClass(Class<?> aClass)\n     {\n-        return \"io.prestosql.tempto\".equals(aClass.getPackage().getName());\n+        return aClass.getPackage().getName().startsWith(\"io.prestosql.tempto\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMTA4MQ==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475521081", "bodyText": "you should not exit early if this is an interface, but not tempto related\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (method.getDeclaringClass().isInterface()) {\n          \n          \n            \n                        return isTemptoClass(method.getDeclaringClass());\n          \n          \n            \n                    if (method.getDeclaringClass().isInterface() && isTemptoClass(method.getDeclaringClass())) {\n          \n          \n            \n                        return true;", "author": "findepi", "createdAt": "2020-08-24T11:02:09Z", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/ReportUnannotatedMethods.java", "diffHunk": "@@ -77,17 +76,33 @@ private static boolean isTestMethod(Method method)\n         if (method.getDeclaringClass() == Object.class) {\n             return true;\n         }\n-        Class<?> superclass = method.getDeclaringClass().getSuperclass();\n-        Method overridden;\n+        if (method.getDeclaringClass().isInterface()) {\n+            return isTemptoClass(method.getDeclaringClass());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMTU3MQ==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475521571", "bodyText": "Does this disable ReportUnannotatedMethods for any class that happens to implement a tempto interface?", "author": "findepi", "createdAt": "2020-08-24T11:03:17Z", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/ReportUnannotatedMethods.java", "diffHunk": "@@ -77,17 +76,33 @@ private static boolean isTestMethod(Method method)\n         if (method.getDeclaringClass() == Object.class) {\n             return true;\n         }\n-        Class<?> superclass = method.getDeclaringClass().getSuperclass();\n-        Method overridden;\n+        if (method.getDeclaringClass().isInterface()) {\n+            return isTemptoClass(method.getDeclaringClass());\n+        }\n+        for (Class<?> interfaceClass : method.getDeclaringClass().getInterfaces()) {\n+            if (isTemptoClass(interfaceClass)) {\n+                return true;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MzY3Mw==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475543673", "bodyText": "Good catch", "author": "kokosing", "createdAt": "2020-08-24T11:50:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMTU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMjE3MA==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475522170", "bodyText": "You apparently removed recursion from here.\neg what if A.test overrides B.test and B.test overrides C.test and C.test is @Test annotated?", "author": "findepi", "createdAt": "2020-08-24T11:04:31Z", "path": "presto-testng-services/src/main/java/io/prestosql/testng/services/ReportUnannotatedMethods.java", "diffHunk": "@@ -77,17 +76,33 @@ private static boolean isTestMethod(Method method)\n         if (method.getDeclaringClass() == Object.class) {\n             return true;\n         }\n-        Class<?> superclass = method.getDeclaringClass().getSuperclass();\n-        Method overridden;\n+        if (method.getDeclaringClass().isInterface()) {\n+            return isTemptoClass(method.getDeclaringClass());\n+        }\n+        for (Class<?> interfaceClass : method.getDeclaringClass().getInterfaces()) {\n+            if (isTemptoClass(interfaceClass)) {\n+                return true;\n+            }\n+            Optional<Method> overridden = getOverridden(method, interfaceClass);\n+            if (overridden.isPresent()) {\n+                return true;\n+            }\n+        }\n+\n+        return getOverridden(method, method.getDeclaringClass().getSuperclass())\n+                .map(ReportUnannotatedMethods::isAllowedPublicMethodInTest)\n+                .orElse(false);\n+    }\n+\n+    private static Optional<Method> getOverridden(Method method, Class<?> base)\n+    {\n         try {\n             // Simplistic override detection\n-            overridden = superclass.getMethod(method.getName(), method.getParameterTypes());\n+            return Optional.of(base.getMethod(method.getName(), method.getParameterTypes()));\n         }\n         catch (NoSuchMethodException ignored) {\n-            return false;\n+            return Optional.empty();\n         }\n-\n-        return isTestMethod(overridden);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MDI4Ng==", "url": "https://github.com/trinodb/trino/pull/4926#discussion_r475540286", "bodyText": "No it is moved, see\n                .map(ReportUnannotatedMethods::isAllowedPublicMethodInTest)\n\nI will add test for that.", "author": "kokosing", "createdAt": "2020-08-24T11:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMjE3MA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "0b31f9a65ddc126ec89bb49f7f8ba2669cdd6826", "url": "https://github.com/trinodb/trino/commit/0b31f9a65ddc126ec89bb49f7f8ba2669cdd6826", "message": "Handle io.prestosql.tempto.testmarkers interfaces", "committedDate": "2020-08-25T18:49:12Z", "type": "commit"}, {"oid": "5dd392cc7b963d0103021fa59ea1a01347aff407", "url": "https://github.com/trinodb/trino/commit/5dd392cc7b963d0103021fa59ea1a01347aff407", "message": "Support implementing interface in tests", "committedDate": "2020-08-25T18:49:12Z", "type": "commit"}, {"oid": "5dd392cc7b963d0103021fa59ea1a01347aff407", "url": "https://github.com/trinodb/trino/commit/5dd392cc7b963d0103021fa59ea1a01347aff407", "message": "Support implementing interface in tests", "committedDate": "2020-08-25T18:49:12Z", "type": "forcePushed"}]}