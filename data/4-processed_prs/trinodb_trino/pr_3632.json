{"pr_number": 3632, "pr_title": "Improve Domain#overlaps", "pr_createdAt": "2020-05-05T20:59:32Z", "pr_url": "https://github.com/trinodb/trino/pull/3632", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwODY0MA==", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r423908640", "bodyText": "else is redundant", "author": "martint", "createdAt": "2020-05-12T17:28:26Z", "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/EquatableValueSet.java", "diffHunk": "@@ -243,6 +243,25 @@ else if (otherValueSet.isWhiteList()) {\n         }\n     }\n \n+    @Override\n+    public boolean overlaps(ValueSet other)\n+    {\n+        EquatableValueSet otherValueSet = checkCompatibility(other);\n+\n+        if (whiteList && otherValueSet.isWhiteList()) {\n+            return intersectOverlaps(entries, otherValueSet.entries);\n+        }\n+        else if (whiteList) {\n+            return !otherValueSet.entries.containsAll(entries);\n+        }\n+        else if (otherValueSet.isWhiteList()) {\n+            return !entries.containsAll(otherValueSet.entries);\n+        }\n+        else {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzU0NQ==", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r424103545", "bodyText": "I didn't follow this, isn't this else block needed when whiteList and otherValueSet.isWhiteList() both are false ? EquatableValueSet#intersect also has similar if-else conditions.", "author": "raunaqmorarka", "createdAt": "2020-05-13T00:13:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwODY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwOTU2Ng==", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r423909566", "bodyText": "I'd just name this method setsOverlap or overlap.", "author": "martint", "createdAt": "2020-05-12T17:29:52Z", "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/EquatableValueSet.java", "diffHunk": "@@ -283,6 +302,16 @@ public String toString(ConnectorSession session)\n                 .collect(toLinkedSet());\n     }\n \n+    private static <T> boolean intersectOverlaps(Set<T> set1, Set<T> set2)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNjI5OQ==", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r424106299", "bodyText": "Done", "author": "raunaqmorarka", "createdAt": "2020-05-13T00:24:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkwOTU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyOTY4NQ==", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r423929685", "bodyText": "Iterate over the set with fewest elements.", "author": "martint", "createdAt": "2020-05-12T18:02:08Z", "path": "presto-spi/src/main/java/io/prestosql/spi/predicate/EquatableValueSet.java", "diffHunk": "@@ -283,6 +302,16 @@ public String toString(ConnectorSession session)\n                 .collect(toLinkedSet());\n     }\n \n+    private static <T> boolean intersectOverlaps(Set<T> set1, Set<T> set2)\n+    {\n+        for (T element : set1) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNjQwNw==", "url": "https://github.com/trinodb/trino/pull/3632#discussion_r424106407", "bodyText": "Made this change here and in intersect method", "author": "raunaqmorarka", "createdAt": "2020-05-13T00:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyOTY4NQ=="}], "type": "inlineReview"}, {"oid": "d9c2f731e3380e05390302e50f482d6c3face274", "url": "https://github.com/trinodb/trino/commit/d9c2f731e3380e05390302e50f482d6c3face274", "message": "Improve Domain#overlaps\n\nAvoid overhead of computing intersection for checking Domain overlap by short circuiting where possible\nRefactor TupleDomainParquetPredicate to use Domain#overlaps", "committedDate": "2020-05-13T00:23:49Z", "type": "commit"}, {"oid": "d9c2f731e3380e05390302e50f482d6c3face274", "url": "https://github.com/trinodb/trino/commit/d9c2f731e3380e05390302e50f482d6c3face274", "message": "Improve Domain#overlaps\n\nAvoid overhead of computing intersection for checking Domain overlap by short circuiting where possible\nRefactor TupleDomainParquetPredicate to use Domain#overlaps", "committedDate": "2020-05-13T00:23:49Z", "type": "forcePushed"}]}