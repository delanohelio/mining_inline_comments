{"pr_number": 4283, "pr_title": "Add support for Iceberg snapshot rollback", "pr_createdAt": "2020-06-30T18:41:07Z", "pr_url": "https://github.com/trinodb/trino/pull/4283", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5MjkyMA==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r453992920", "bodyText": "Missing word \"table\" at end of first sentence", "author": "electrum", "createdAt": "2020-07-13T22:55:02Z", "path": "presto-iceberg/README.md", "diffHunk": "@@ -69,6 +69,23 @@ Iceberg supports `$snapshot_id` and `$snapshot_timestamp_ms` as hidden columns.\n These columns allow users to query an old version of the table. Think of this\n as a time travel feature which lets you query your table's snapshot at a given time.\n \n+## Rolling back to a previous Snapshot\n+\n+The connector provides a system snapshots table for each Iceberg.  Snapshots are", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2NDkzNw==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454064937", "bodyText": "Fixed.", "author": "djsstarburst", "createdAt": "2020-07-14T02:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5MjkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5Mzg1OQ==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r453993859", "bodyText": "I don't think we need the IcebergProcedures class. We can directly inject Set<Procedure> here, like we do in JdbcConnector.", "author": "electrum", "createdAt": "2020-07-13T22:57:42Z", "path": "presto-iceberg/src/main/java/io/prestosql/plugin/iceberg/IcebergConnector.java", "diffHunk": "@@ -71,7 +73,8 @@ public IcebergConnector(\n             List<PropertyMetadata<?>> sessionProperties,\n             List<PropertyMetadata<?>> schemaProperties,\n             List<PropertyMetadata<?>> tableProperties,\n-            ConnectorAccessControl accessControl)\n+            ConnectorAccessControl accessControl,\n+            IcebergProcedures procedures)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2NDk4Mg==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454064982", "bodyText": "Removed.  I added it because I couldn't figure out how to get the Set<Procedure> from an Injector, which is needed in InternalIcebergConnectorFactory.  I've since figured that out, and am glad to be able to remove the IcebergProcedures and IcebergProceduresModule.", "author": "djsstarburst", "createdAt": "2020-07-14T02:44:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5Mzg1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwOTkwMw==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454009903", "bodyText": "Not needed here since we install it in IcebergModule", "author": "electrum", "createdAt": "2020-07-13T23:39:37Z", "path": "presto-iceberg/src/main/java/io/prestosql/plugin/iceberg/InternalIcebergConnectorFactory.java", "diffHunk": "@@ -63,6 +63,7 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                     new HiveAuthenticationModule(),\n                     new HiveMetastoreModule(metastore),\n                     new MBeanServerModule(),\n+                    new IcebergProceduresModule(),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2NTAxMg==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454065012", "bodyText": "Removed.", "author": "djsstarburst", "createdAt": "2020-07-14T02:44:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwOTkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMzM2MQ==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454013361", "bodyText": "Our code style is wrap all arguments if any are wrapped (all or none).", "author": "electrum", "createdAt": "2020-07-13T23:48:51Z", "path": "presto-iceberg/src/main/java/io/prestosql/plugin/iceberg/RollbackToSnapshotProcedure.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.iceberg;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.prestosql.plugin.hive.HdfsEnvironment;\n+import io.prestosql.plugin.hive.metastore.HiveMetastore;\n+import io.prestosql.spi.connector.ConnectorSession;\n+import io.prestosql.spi.connector.SchemaTableName;\n+import io.prestosql.spi.procedure.Procedure;\n+import org.apache.iceberg.BaseTable;\n+\n+import javax.inject.Inject;\n+import javax.inject.Provider;\n+\n+import java.lang.invoke.MethodHandle;\n+\n+import static io.prestosql.plugin.iceberg.IcebergUtil.getIcebergTable;\n+import static io.prestosql.spi.block.MethodHandleUtil.methodHandle;\n+import static io.prestosql.spi.type.BigintType.BIGINT;\n+import static io.prestosql.spi.type.VarcharType.VARCHAR;\n+import static java.util.Objects.requireNonNull;\n+\n+public class RollbackToSnapshotProcedure\n+        implements Provider<Procedure>\n+{\n+    private static final MethodHandle ROLLBACK_TO_SNAPSHOT = methodHandle(RollbackToSnapshotProcedure.class, \"rollbackToSnapshot\",", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2NTExMw==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454065113", "bodyText": "Fixed.", "author": "djsstarburst", "createdAt": "2020-07-14T02:45:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMzM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNDU2OQ==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454014569", "bodyText": "rollback() is on Table so we shouldn't need to case to BaseTable here", "author": "electrum", "createdAt": "2020-07-13T23:52:54Z", "path": "presto-iceberg/src/main/java/io/prestosql/plugin/iceberg/RollbackToSnapshotProcedure.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.iceberg;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.prestosql.plugin.hive.HdfsEnvironment;\n+import io.prestosql.plugin.hive.metastore.HiveMetastore;\n+import io.prestosql.spi.connector.ConnectorSession;\n+import io.prestosql.spi.connector.SchemaTableName;\n+import io.prestosql.spi.procedure.Procedure;\n+import org.apache.iceberg.BaseTable;\n+\n+import javax.inject.Inject;\n+import javax.inject.Provider;\n+\n+import java.lang.invoke.MethodHandle;\n+\n+import static io.prestosql.plugin.iceberg.IcebergUtil.getIcebergTable;\n+import static io.prestosql.spi.block.MethodHandleUtil.methodHandle;\n+import static io.prestosql.spi.type.BigintType.BIGINT;\n+import static io.prestosql.spi.type.VarcharType.VARCHAR;\n+import static java.util.Objects.requireNonNull;\n+\n+public class RollbackToSnapshotProcedure\n+        implements Provider<Procedure>\n+{\n+    private static final MethodHandle ROLLBACK_TO_SNAPSHOT = methodHandle(RollbackToSnapshotProcedure.class, \"rollbackToSnapshot\",\n+            ConnectorSession.class,\n+            String.class,\n+            String.class,\n+            Long.class);\n+\n+    private final IcebergMetadataFactory metadataFactory;\n+    private final HdfsEnvironment hdfsEnvironment;\n+\n+    @Inject\n+    public RollbackToSnapshotProcedure(IcebergMetadataFactory metadataFactory, HdfsEnvironment hdfsEnvironment)\n+    {\n+        this.metadataFactory = requireNonNull(metadataFactory, \"metadataFactory is null\");\n+        this.hdfsEnvironment = requireNonNull(hdfsEnvironment, \"hdfsEnvironment is null\");\n+    }\n+\n+    @Override\n+    public Procedure get()\n+    {\n+        return new Procedure(\n+                \"system\",\n+                \"rollback_to_snapshot\",\n+                ImmutableList.of(\n+                        new Procedure.Argument(\"schema\", VARCHAR),\n+                        new Procedure.Argument(\"table\", VARCHAR),\n+                        new Procedure.Argument(\"id\", BIGINT)),\n+                ROLLBACK_TO_SNAPSHOT.bindTo(this));\n+    }\n+\n+    public void rollbackToSnapshot(ConnectorSession clientSession, String schema, String table, Long id)\n+    {\n+        SchemaTableName schemaTableName = new SchemaTableName(schema, table);\n+        IcebergMetadata metadata = metadataFactory.create();\n+        HiveMetastore metastore = metadata.getMetastore();\n+        BaseTable icebergTable = (BaseTable) getIcebergTable(metastore, hdfsEnvironment, clientSession, schemaTableName);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2NTE1Ng==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454065156", "bodyText": "Good point; fixed.", "author": "djsstarburst", "createdAt": "2020-07-14T02:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNDU2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNDc2NA==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454014764", "bodyText": "Let's call this snapshot_id to be consistent with SnapshotsTable", "author": "electrum", "createdAt": "2020-07-13T23:53:31Z", "path": "presto-iceberg/src/main/java/io/prestosql/plugin/iceberg/RollbackToSnapshotProcedure.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.iceberg;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.prestosql.plugin.hive.HdfsEnvironment;\n+import io.prestosql.plugin.hive.metastore.HiveMetastore;\n+import io.prestosql.spi.connector.ConnectorSession;\n+import io.prestosql.spi.connector.SchemaTableName;\n+import io.prestosql.spi.procedure.Procedure;\n+import org.apache.iceberg.BaseTable;\n+\n+import javax.inject.Inject;\n+import javax.inject.Provider;\n+\n+import java.lang.invoke.MethodHandle;\n+\n+import static io.prestosql.plugin.iceberg.IcebergUtil.getIcebergTable;\n+import static io.prestosql.spi.block.MethodHandleUtil.methodHandle;\n+import static io.prestosql.spi.type.BigintType.BIGINT;\n+import static io.prestosql.spi.type.VarcharType.VARCHAR;\n+import static java.util.Objects.requireNonNull;\n+\n+public class RollbackToSnapshotProcedure\n+        implements Provider<Procedure>\n+{\n+    private static final MethodHandle ROLLBACK_TO_SNAPSHOT = methodHandle(RollbackToSnapshotProcedure.class, \"rollbackToSnapshot\",\n+            ConnectorSession.class,\n+            String.class,\n+            String.class,\n+            Long.class);\n+\n+    private final IcebergMetadataFactory metadataFactory;\n+    private final HdfsEnvironment hdfsEnvironment;\n+\n+    @Inject\n+    public RollbackToSnapshotProcedure(IcebergMetadataFactory metadataFactory, HdfsEnvironment hdfsEnvironment)\n+    {\n+        this.metadataFactory = requireNonNull(metadataFactory, \"metadataFactory is null\");\n+        this.hdfsEnvironment = requireNonNull(hdfsEnvironment, \"hdfsEnvironment is null\");\n+    }\n+\n+    @Override\n+    public Procedure get()\n+    {\n+        return new Procedure(\n+                \"system\",\n+                \"rollback_to_snapshot\",\n+                ImmutableList.of(\n+                        new Procedure.Argument(\"schema\", VARCHAR),\n+                        new Procedure.Argument(\"table\", VARCHAR),\n+                        new Procedure.Argument(\"id\", BIGINT)),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA2NTIxMw==", "url": "https://github.com/trinodb/trino/pull/4283#discussion_r454065213", "bodyText": "Done.", "author": "djsstarburst", "createdAt": "2020-07-14T02:45:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNDc2NA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "4c3dfdb2b5ef1927d0b90622a42b183218cb181c", "url": "https://github.com/trinodb/trino/commit/4c3dfdb2b5ef1927d0b90622a42b183218cb181c", "message": "Add support for Iceberg snapshot rollback\n\nThis commit provides support to roll back the state of an\nIceberg table to a previous snapshot id, and adds a unit test\nto verify the rollback functionaliy.\n\nThe rollback is done using a new SQL procedure in schema system:\nrollback_to_snapshot(schema, table, snapshot_id).\n\nThis commit also adds documentation for the procedure\nin the README.md.", "committedDate": "2020-07-14T13:00:35Z", "type": "commit"}, {"oid": "4c3dfdb2b5ef1927d0b90622a42b183218cb181c", "url": "https://github.com/trinodb/trino/commit/4c3dfdb2b5ef1927d0b90622a42b183218cb181c", "message": "Add support for Iceberg snapshot rollback\n\nThis commit provides support to roll back the state of an\nIceberg table to a previous snapshot id, and adds a unit test\nto verify the rollback functionaliy.\n\nThe rollback is done using a new SQL procedure in schema system:\nrollback_to_snapshot(schema, table, snapshot_id).\n\nThis commit also adds documentation for the procedure\nin the README.md.", "committedDate": "2020-07-14T13:00:35Z", "type": "forcePushed"}]}