{"pr_number": 4609, "pr_title": "Fix failure with repeated complex expressions in group by clause", "pr_createdAt": "2020-07-28T16:59:49Z", "pr_url": "https://github.com/trinodb/trino/pull/4609", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzMjc1OQ==", "url": "https://github.com/trinodb/trino/pull/4609#discussion_r462132759", "bodyText": "static import scopeAwareKey?", "author": "sopel39", "createdAt": "2020-07-29T08:34:29Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/QueryPlanner.java", "diffHunk": "@@ -379,14 +379,15 @@ private GroupingSetsPlan planGroupingSets(PlanBuilder subPlan, QuerySpecificatio\n             groupingSetMappings.put(output, input);\n         }\n \n-        ImmutableMap.Builder<Expression, Symbol> expressionsBuilder = ImmutableMap.builder();\n+        Map<ScopeAware<Expression>, Symbol> complexExpressions = new HashMap<>();\n         for (Expression expression : groupingSetAnalysis.getComplexExpressions()) {\n-            Symbol input = subPlan.translate(expression);\n-            Symbol output = symbolAllocator.newSymbol(expression, analysis.getType(expression), \"gid\");\n-            expressionsBuilder.put(expression, output);\n-            groupingSetMappings.put(output, input);\n+            if (!complexExpressions.containsKey(scopeAwareKey(expression, analysis, subPlan.getScope()))) {\n+                Symbol input = subPlan.translate(expression);\n+                Symbol output = symbolAllocator.newSymbol(expression, analysis.getType(expression), \"gid\");\n+                complexExpressions.put(ScopeAware.scopeAwareKey(expression, analysis, subPlan.getScope()), output);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5e4aa46c54bc4d17cdd83efd73070aefd663a6f0", "url": "https://github.com/trinodb/trino/commit/5e4aa46c54bc4d17cdd83efd73070aefd663a6f0", "message": "Fix failure with repeated complex expressions in group by clause", "committedDate": "2020-07-29T16:42:08Z", "type": "commit"}, {"oid": "6995780ea4bb69e72d6e1c7248b0258b5a8df490", "url": "https://github.com/trinodb/trino/commit/6995780ea4bb69e72d6e1c7248b0258b5a8df490", "message": "Add tests for group by expressions with mixed reference style", "committedDate": "2020-07-29T16:42:08Z", "type": "commit"}, {"oid": "6995780ea4bb69e72d6e1c7248b0258b5a8df490", "url": "https://github.com/trinodb/trino/commit/6995780ea4bb69e72d6e1c7248b0258b5a8df490", "message": "Add tests for group by expressions with mixed reference style", "committedDate": "2020-07-29T16:42:08Z", "type": "forcePushed"}]}