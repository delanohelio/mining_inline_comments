{"pr_number": 3490, "pr_title": "Add session property for hive projection pushdown", "pr_createdAt": "2020-04-20T17:59:59Z", "pr_url": "https://github.com/trinodb/trino/pull/3490", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyNDYwMA==", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412024600", "bodyText": "move \"CREATE TABLE  %s (col0) AS\" + to newline", "author": "sopel39", "createdAt": "2020-04-21T09:26:52Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,13 +92,34 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\"CREATE TABLE  %s (col0) AS\" +", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAyNDk5MQ==", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412024991", "bodyText": "inline tableName usage", "author": "sopel39", "createdAt": "2020-04-21T09:27:26Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,13 +92,34 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\"CREATE TABLE  %s (col0) AS\" +\n+                \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) AS col0 WHERE false\", testTable));\n+\n+        assertPlan(\n+                format(\"SELECT col0.a expr_a, col0.b expr_b FROM %s\", testTable),\n+                session,\n+                any(\n+                        project(\n+                                ImmutableMap.of(\"expr\", expression(\"col0.a\"), \"expr_2\", expression(\"col0.b\")),\n+                                tableScan(testTable, ImmutableMap.of(\"col0\", \"col0\")))));\n+    }\n+\n     @Test\n     public void testProjectionPushdown()\n     {\n         String testTable = \"test_simple_projection_pushdown\";\n         QualifiedObjectName completeTableName = new QualifiedObjectName(HIVE_CATALOG_NAME, SCHEMA_NAME, testTable);\n \n-        String tableName = HIVE_CATALOG_NAME + \".\" + SCHEMA_NAME + \".\" + testTable;\n+        String tableName = testTable;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgwNzc4Mg==", "url": "https://github.com/trinodb/trino/pull/3490#discussion_r412807782", "bodyText": "nit: each arg in newline, so move testTable to next line", "author": "sopel39", "createdAt": "2020-04-22T09:06:46Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/optimizer/TestHiveProjectionPushdownIntoTableScan.java", "diffHunk": "@@ -89,15 +92,37 @@ protected LocalQueryRunner createLocalQueryRunner()\n         return queryRunner;\n     }\n \n+    @Test\n+    public void testPushdownDisabled()\n+    {\n+        String testTable = \"test_disabled_pushdown\";\n+\n+        Session session = Session.builder(getQueryRunner().getDefaultSession())\n+                .setCatalogSessionProperty(HIVE_CATALOG_NAME, \"projection_pushdown_enabled\", \"false\")\n+                .build();\n+\n+        getQueryRunner().execute(format(\n+                \"CREATE TABLE %s (col0) AS\" +\n+                        \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) AS col0 WHERE false\", testTable));\n+\n+        assertPlan(\n+                format(\"SELECT col0.a expr_a, col0.b expr_b FROM %s\", testTable),\n+                session,\n+                any(\n+                        project(\n+                                ImmutableMap.of(\"expr\", expression(\"col0.a\"), \"expr_2\", expression(\"col0.b\")),\n+                                tableScan(testTable, ImmutableMap.of(\"col0\", \"col0\")))));\n+    }\n+\n     @Test\n     public void testProjectionPushdown()\n     {\n         String testTable = \"test_simple_projection_pushdown\";\n         QualifiedObjectName completeTableName = new QualifiedObjectName(HIVE_CATALOG_NAME, SCHEMA_NAME, testTable);\n \n-        String tableName = HIVE_CATALOG_NAME + \".\" + SCHEMA_NAME + \".\" + testTable;\n-        getQueryRunner().execute(\"CREATE TABLE \" + tableName + \" \" + \"(col0) AS\" +\n-                \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) as col0 where false\");\n+        getQueryRunner().execute(format(\n+                \"CREATE TABLE %s (col0) AS\" +\n+                        \" SELECT cast(row(5, 6) as row(a bigint, b bigint)) as col0 where false\", testTable));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "e87f7fd9ca0de00a10639d267a6737b06cdf1a92", "url": "https://github.com/trinodb/trino/commit/e87f7fd9ca0de00a10639d267a6737b06cdf1a92", "message": "Add session property for hive projection pushdown", "committedDate": "2020-04-24T17:24:26Z", "type": "commit"}, {"oid": "4958fad45434b3a654dd7384370113b35b8da2db", "url": "https://github.com/trinodb/trino/commit/4958fad45434b3a654dd7384370113b35b8da2db", "message": "Use default session for rule application", "committedDate": "2020-04-24T17:24:26Z", "type": "commit"}, {"oid": "4958fad45434b3a654dd7384370113b35b8da2db", "url": "https://github.com/trinodb/trino/commit/4958fad45434b3a654dd7384370113b35b8da2db", "message": "Use default session for rule application", "committedDate": "2020-04-24T17:24:26Z", "type": "forcePushed"}]}