{"pr_number": 4393, "pr_title": "Fix fails query if bucket number exceeds declared bucket size", "pr_createdAt": "2020-07-09T01:16:53Z", "pr_url": "https://github.com/trinodb/trino/pull/4393", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NTUxMw==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452095513", "bodyText": "nit: each argument in newline", "author": "sopel39", "createdAt": "2020-07-09T09:43:12Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,23 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        Integer highestBucketNumber = Collections.max(bucketFiles.keySet());\n+        // validate the bucket number detected from files, fail the query if the highest bucket number detected from file\n+        // exceeds the allowed highest number\n+        if (highestBucketNumber >= partitionBucketCount) {\n+            throw new PrestoException(HIVE_INVALID_BUCKET_FILES, format(", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3MDc1MQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452370751", "bodyText": "fixed", "author": "ArvinZheng", "createdAt": "2020-07-09T17:16:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NTUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NjUzNQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452096535", "bodyText": "remove catch, throwing an exception will cause test to fail anyway", "author": "sopel39", "createdAt": "2020-07-09T09:45:00Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +569,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (0) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 5, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (4) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 9, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (8) for partition: partitionName\");\n+\n+        boolean noErrors = true;\n+        try {\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 10, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 20, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 30, \"tableName\", \"partitionName\");\n+        }\n+        catch (Throwable e) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3MjI1OQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452372259", "bodyText": "Hi @sopel39 , I understand throwing exceptions will break and fail the test, but having the try catch and assert will improve the readability of the test, i.e. show the intent clearly, what do you think?", "author": "ArvinZheng", "createdAt": "2020-07-09T17:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NjUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5OTI4NQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453099285", "bodyText": "These are expected to be positive test cases that don't throw. Having try/catch is strange, as any exception will cause a test failure. By this logic, we would need try/catch in every test, as we normally expect that a test will not throw.", "author": "electrum", "createdAt": "2020-07-10T22:08:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NjUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwMzMzOA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453103338", "bodyText": "got it, will remove it", "author": "ArvinZheng", "createdAt": "2020-07-10T22:22:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NjUzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTEwMA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452685100", "bodyText": "static import", "author": "sopel39", "createdAt": "2020-07-10T07:57:47Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +570,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number \" +\n+                        \"declared (0) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 5, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number \" +\n+                        \"declared (4) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 9, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number \" +\n+                        \"declared (8) for partition: partitionName\");\n+\n+        try {\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 10, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 20, \"tableName\", \"partitionName\");\n+            BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 30, \"tableName\", \"partitionName\");\n+        }\n+        catch (Throwable e) {\n+            Assert.shouldNeverReachHere();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3OTkyNQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452979925", "bodyText": "fixed", "author": "ArvinZheng", "createdAt": "2020-07-10T17:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTQyMQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452685421", "bodyText": "static import max", "author": "sopel39", "createdAt": "2020-07-10T07:58:29Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,28 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = Collections.max(bucketFiles.keySet());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3OTk2MA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452979960", "bodyText": "fixed", "author": "ArvinZheng", "createdAt": "2020-07-10T17:34:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTc1Ng==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452685756", "bodyText": "each arg in newline", "author": "sopel39", "createdAt": "2020-07-10T07:59:07Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,28 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = Collections.max(bucketFiles.keySet());\n+        // validate the bucket number detected from files, fail the query if the highest bucket number detected from file\n+        // exceeds the allowed highest number\n+        if (highestBucketNumber >= partitionBucketCount) {\n+            throw new PrestoException(\n+                    HIVE_INVALID_BUCKET_FILES,\n+                    format(\"Hive table '%s' is corrupt. The highest bucket number in the directory (%s) is greater than the highest bucket \" +", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4MDEyNA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r452980124", "bodyText": "reformatted again", "author": "ArvinZheng", "createdAt": "2020-07-10T17:34:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4NTc1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkyMjQ4OQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r451922489", "bodyText": "No need to do this. If any of the checks throw, the test will fail automatically.", "author": "electrum", "createdAt": "2020-07-09T02:06:07Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +569,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (0) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 5, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (4) for partition: partitionName\");\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 9, \"tableName\", \"partitionName\"))\n+                .isInstanceOfSatisfying(PrestoException.class, e -> assertEquals(HIVE_INVALID_BUCKET_FILES.toErrorCode(), e.getErrorCode()))\n+                .hasMessage(\"Hive table 'tableName' is corrupt. The highest bucket number in the directory (9) is greater than the highest bucket number declared (8) for partition: partitionName\");\n+\n+        boolean noErrors = true;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5Nzk4Nw==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453097987", "bodyText": "This can be declared as int", "author": "electrum", "createdAt": "2020-07-10T22:03:57Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,27 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = max(bucketFiles.keySet());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwMzE5Mg==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453103192", "bodyText": "good catch", "author": "ArvinZheng", "createdAt": "2020-07-10T22:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5Nzk4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453098325", "bodyText": "Remove - 1 after changing error message", "author": "electrum", "createdAt": "2020-07-10T22:05:04Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -636,6 +639,27 @@ private static boolean shouldUseFileSplitsFromInputFormat(InputFormat<?, ?> inpu\n         return splitList;\n     }\n \n+    @VisibleForTesting\n+    static void validateFileBuckets(ListMultimap<Integer, LocatedFileStatus> bucketFiles, int partitionBucketCount, String tableName, String partitionName)\n+    {\n+        if (bucketFiles.isEmpty()) {\n+            return;\n+        }\n+\n+        Integer highestBucketNumber = max(bucketFiles.keySet());\n+        // validate the bucket number detected from files, fail the query if the highest bucket number detected from file\n+        // exceeds the allowed highest number\n+        if (highestBucketNumber >= partitionBucketCount) {\n+            throw new PrestoException(HIVE_INVALID_BUCKET_FILES, format(\n+                    \"Hive table '%s' is corrupt. The highest bucket number in the directory (%s) is greater than the highest bucket number \" +\n+                            \"declared (%s) for partition: %s\",\n+                    tableName,\n+                    highestBucketNumber,\n+                    partitionBucketCount - 1,", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNTkzNQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453105935", "bodyText": "I was thinking the same when I was trying to organize the error message, then I chose to make this trade off since I was not able to figure out a better one - how about Hive table '%s' is corrupt. The highest bucket number in the directory (%s) exceeds the bucket number range defined by the declared bucket count (%s) for partition: %s", "author": "ArvinZheng", "createdAt": "2020-07-10T22:32:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwODcxNg==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453108716", "bodyText": "one error message example that may look a bit odd, feel free to suggest a better one\n\nHive table 'tableName' is corrupt. The highest bucket number in the directory (9) exceeds the bucket number range defined by the declared bucket count (9) for partition: partitionName", "author": "ArvinZheng", "createdAt": "2020-07-10T22:43:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMzY4MQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453913681", "bodyText": "I see what you mean. Maybe we could list the range explicitly?\n\nHive table 'tableName' is corrupt. The highest bucket number in the directory (9) exceeds the bucket number range (0..8) defined by the declared bucket count (9) for partition: partitionName", "author": "electrum", "createdAt": "2020-07-13T20:30:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNDY5NA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453914694", "bodyText": "I merged the PR since this seems good enough for now. If you want to try adding the range or otherwise improving the error message, feel free to send a follow up PR.", "author": "electrum", "createdAt": "2020-07-13T20:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkzODY0NQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453938645", "bodyText": "Yup, that's my concern. To show the bucket range I'll need to do calculation on the partitionBucketCount, maybe extra a method will have better readability for the code, what do you think?\nBTW, thanks for your time on reviewing the code.", "author": "ArvinZheng", "createdAt": "2020-07-13T21:18:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NDg1NA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453944854", "bodyText": "The only calculation is partitionBucketCount - 1 so I don't think we need a method (the range always starts at zero).", "author": "electrum", "createdAt": "2020-07-13T21:30:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk3NDI0Mg==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453974242", "bodyText": "Yes, my concerns is whether subtracting 1 from partitionBucketCount is easy for people to understand, otherwise i am good to go with partitionBucketCount - 1 directly.", "author": "ArvinZheng", "createdAt": "2020-07-13T22:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODMyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODcxMQ==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453098711", "bodyText": "Static import validateFileBuckets for readability", "author": "electrum", "createdAt": "2020-07-10T22:06:15Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -566,6 +571,41 @@ public void testHive2VersionedFullAcidTableFails()\n         deleteRecursively(tablePath, ALLOW_INSECURE);\n     }\n \n+    @Test\n+    public void testValidateFileBuckets()\n+    {\n+        ListMultimap<Integer, LocatedFileStatus> bucketFiles = ArrayListMultimap.create();\n+        bucketFiles.put(1, null);\n+        bucketFiles.put(3, null);\n+        bucketFiles.put(4, null);\n+        bucketFiles.put(6, null);\n+        bucketFiles.put(9, null);\n+\n+        assertThatThrownBy(() -> BackgroundHiveSplitLoader.validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwMDg1NA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453100854", "bodyText": "You can do this using\nassertPrestoExceptionThrownBy(() -> validateFileBuckets(bucketFiles, 1, \"tableName\", \"partitionName\"))\n        .hasErrorCode(HIVE_INVALID_BUCKET_FILES)\n        .hasMessage(...);", "author": "electrum", "createdAt": "2020-07-10T22:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODcxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNTk5OA==", "url": "https://github.com/trinodb/trino/pull/4393#discussion_r453105998", "bodyText": "got it", "author": "ArvinZheng", "createdAt": "2020-07-10T22:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5ODcxMQ=="}], "type": "inlineReview"}, {"oid": "944b80b5373a05e3d700e325f898d427969236e4", "url": "https://github.com/trinodb/trino/commit/944b80b5373a05e3d700e325f898d427969236e4", "message": "Fail query if there are invalid buckets", "committedDate": "2020-07-10T23:15:59Z", "type": "commit"}, {"oid": "944b80b5373a05e3d700e325f898d427969236e4", "url": "https://github.com/trinodb/trino/commit/944b80b5373a05e3d700e325f898d427969236e4", "message": "Fail query if there are invalid buckets", "committedDate": "2020-07-10T23:15:59Z", "type": "forcePushed"}]}