{"pr_number": 4036, "pr_title": "Fix old client compatibility with parametric timestamp type", "pr_createdAt": "2020-06-15T15:21:43Z", "pr_url": "https://github.com/trinodb/trino/pull/4036", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3OTcxMg==", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440279712", "bodyText": "This should be TIMESTAMP as used in toClientTypeSignature", "author": "electrum", "createdAt": "2020-06-15T15:57:07Z", "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {\n+            typeName = \"timestamp\";", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTk1OA==", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440281958", "bodyText": "Should we compare the type signature so that it's consistent with toClientTypeSignature?", "author": "electrum", "createdAt": "2020-06-15T16:00:33Z", "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +576,13 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        String typeName = type.getDisplayName();\n+\n+        if (type instanceof TimestampType && !supportsParametricDateTime) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NTA0MQ==", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440285041", "bodyText": "Actually, I realized this has a problem. It works for top-level timestamps, but not for, say, array(timestamp)", "author": "martint", "createdAt": "2020-06-15T16:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTk1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MTExOQ==", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440441119", "bodyText": "@martint add this as desired test-cases in #1787", "author": "findepi", "createdAt": "2020-06-15T20:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MTk1OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MDY5OQ==", "url": "https://github.com/trinodb/trino/pull/4036#discussion_r440440699", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // and special types such as timestamp(p) with timezone in a future version\n          \n          \n            \n                    // and special types such as timestamp(p) with time zone in a future version", "author": "findepi", "createdAt": "2020-06-15T20:53:51Z", "path": "presto-main/src/main/java/io/prestosql/server/protocol/Query.java", "diffHunk": "@@ -575,8 +575,11 @@ private URI createPartialCancelUri(int stage, UriInfo uriInfo, long nextToken)\n \n     private Column createColumn(String name, Type type)\n     {\n-        TypeSignature signature = type.getTypeSignature();\n-        return new Column(name, type.getDisplayName(), toClientTypeSignature(signature));\n+        ClientTypeSignature signature = toClientTypeSignature(type.getTypeSignature());\n+\n+        // TODO: the type name should be rendered by the SQL expression formatter to account for delimited field names in row types\n+        // and special types such as timestamp(p) with timezone in a future version", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b3359c2bdeeee30cfc5e6348b48462305fce5005", "url": "https://github.com/trinodb/trino/commit/b3359c2bdeeee30cfc5e6348b48462305fce5005", "message": "Fix old client compatibility with parametric timestamp type\n\nThe type was being communicated to the client via two parallel paths: a structural\nform and a string form. We missed the latter when adding the capability check to\nthe protocol.", "committedDate": "2020-06-15T20:56:15Z", "type": "commit"}, {"oid": "b3359c2bdeeee30cfc5e6348b48462305fce5005", "url": "https://github.com/trinodb/trino/commit/b3359c2bdeeee30cfc5e6348b48462305fce5005", "message": "Fix old client compatibility with parametric timestamp type\n\nThe type was being communicated to the client via two parallel paths: a structural\nform and a string form. We missed the latter when adding the capability check to\nthe protocol.", "committedDate": "2020-06-15T20:56:15Z", "type": "forcePushed"}]}