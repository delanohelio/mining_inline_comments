{"pr_number": 5634, "pr_title": "Implement node local dynamic bucket pruning", "pr_createdAt": "2020-10-21T17:23:19Z", "pr_url": "https://github.com/trinodb/trino/pull/5634", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA4NTY3NA==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510085674", "bodyText": "check effectivePredicate.isAll() should go to the method below", "author": "sopel39", "createdAt": "2020-10-22T11:28:50Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,35 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty() || effectivePredicate.isAll()) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczOTcyNg==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511739726", "bodyText": "i got rid of this and keep the code flow similar to the current one", "author": "raunaqmorarka", "createdAt": "2020-10-26T06:25:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA4NTY3NA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510900532", "bodyText": "add getColumns to HiveColumnHandle that would return both partition and data columns", "author": "sopel39", "createdAt": "2020-10-23T13:54:36Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -203,21 +204,24 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketHandle(bucketColumns.build(), bucketingVersion, bucketCount, bucketCount));\n     }\n \n-    public static Optional<HiveBucketFilter> getHiveBucketFilter(Table table, TupleDomain<ColumnHandle> effectivePredicate)\n+    public static Optional<HiveBucketFilter> getHiveBucketFilter(HiveTableHandle hiveTable, TupleDomain<ColumnHandle> effectivePredicate)\n     {\n-        if (table.getStorage().getBucketProperty().isEmpty()) {\n+        if (hiveTable.getBucketHandle().isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        if (bucketedOnTimestamp(table.getStorage().getBucketProperty().get(), table)) {\n+        HiveBucketProperty hiveBucketProperty = hiveTable.getBucketHandle().get().toTableBucketProperty();\n+        List<Column> dataColumns = hiveTable.getDataColumns().stream()\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczOTE4MQ==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511739181", "bodyText": "it's not needed since using dataColumns was not the cause of test failure", "author": "raunaqmorarka", "createdAt": "2020-10-26T06:22:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMzY5Mw==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511823693", "bodyText": "Right, but I've seen similar pattern:\nnew Column(column.getName(), column.getHiveType(), column.getComment()))\nin many places.\nWe should at leas have HiveColumnHandle#toMetastoreColumn", "author": "sopel39", "createdAt": "2020-10-26T09:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg0ODAzOA==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511848038", "bodyText": "added HiveColumnHandle#toMetastoreColumn", "author": "raunaqmorarka", "createdAt": "2020-10-26T10:11:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk5NTc0Nw==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511995747", "bodyText": "Could you replace usages of new Column(column.getName(), column.getHiveType(), column.getComment())) in separate commit?", "author": "sopel39", "createdAt": "2020-10-26T14:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2Mzc4Mw==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r512163783", "bodyText": "done", "author": "raunaqmorarka", "createdAt": "2020-10-26T18:02:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMDUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMTkwMw==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510901903", "bodyText": "add override with HiveTableHandle as argument", "author": "sopel39", "createdAt": "2020-10-23T13:56:28Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -307,10 +311,15 @@ public static BucketingVersion getBucketingVersion(Map<String, String> tableProp\n     }\n \n     public static boolean bucketedOnTimestamp(HiveBucketProperty bucketProperty, Table table)\n+    {\n+        return bucketedOnTimestamp(bucketProperty, table.getDataColumns(), table.getTableName());\n+    }\n+\n+    public static boolean bucketedOnTimestamp(HiveBucketProperty bucketProperty, List<Column> dataColumns, String tableName)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMTYyNA==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511731624", "bodyText": "avoiding that because i want to avoid pulling out hiveBucketProperty from HiveTableHandle twice", "author": "raunaqmorarka", "createdAt": "2020-10-26T05:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMTkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMjk5Mw==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r510902993", "bodyText": "you can just pass HiveTableHandle hiveTable, no need for hiveBucketProperty", "author": "sopel39", "createdAt": "2020-10-23T13:58:02Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveBucketing.java", "diffHunk": "@@ -241,19 +245,19 @@ static int getBucketNumber(int hashCode, int bucketCount)\n         return Optional.of(new HiveBucketFilter(builder.build()));\n     }\n \n-    private static Optional<Set<Integer>> getHiveBuckets(Table table, Map<ColumnHandle, List<NullableValue>> bindings)\n+    private static Optional<Set<Integer>> getHiveBuckets(HiveBucketProperty hiveBucketProperty, HiveTableHandle hiveTable, Map<ColumnHandle, List<NullableValue>> bindings)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzY1Nw==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511733657", "bodyText": "Changed to pass HiveBucketProperty hiveBucketProperty, List<Column> dataColumns instead of HiveBucketProperty hiveBucketProperty, HiveTableHandle hiveTable", "author": "raunaqmorarka", "createdAt": "2020-10-26T06:01:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkwMjk5Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMDY5Mw==", "url": "https://github.com/trinodb/trino/pull/5634#discussion_r511820693", "bodyText": "make this single line.", "author": "sopel39", "createdAt": "2020-10-26T09:27:24Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/alluxio/ProtoUtils.java", "diffHunk": "@@ -151,7 +153,8 @@ static SortingColumn fromProto(alluxio.grpc.table.layout.hive.SortingColumn colu\n         List<SortingColumn> sortedBy = property.getSortedByList().stream()\n                 .map(ProtoUtils::fromProto)\n                 .collect(toImmutableList());\n-        return Optional.of(new HiveBucketProperty(property.getBucketedByList(), HiveBucketing.BucketingVersion.BUCKETING_V1,\n+        HiveBucketing.BucketingVersion bucketingVersion = HiveBucketing.getBucketingVersion(tableParameters);\n+        return Optional.of(new HiveBucketProperty(property.getBucketedByList(), bucketingVersion,", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ff2f2009338470bc83da67e4214179e069c1e0f", "url": "https://github.com/trinodb/trino/commit/3ff2f2009338470bc83da67e4214179e069c1e0f", "message": "Fix reading bucket version for Alluxio", "committedDate": "2020-10-26T10:02:33Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "3ba06c5eda97d93f8250c08162f814b71a17dd7c", "url": "https://github.com/trinodb/trino/commit/3ba06c5eda97d93f8250c08162f814b71a17dd7c", "message": "Add HiveColumnHandle#toMetastoreColumn", "committedDate": "2020-10-26T18:00:32Z", "type": "commit"}, {"oid": "c8ec128c0f80cd674a51a87d4ded7393dc898081", "url": "https://github.com/trinodb/trino/commit/c8ec128c0f80cd674a51a87d4ded7393dc898081", "message": "Implement node local dynamic bucket pruning", "committedDate": "2020-10-26T18:00:38Z", "type": "commit"}, {"oid": "c8ec128c0f80cd674a51a87d4ded7393dc898081", "url": "https://github.com/trinodb/trino/commit/c8ec128c0f80cd674a51a87d4ded7393dc898081", "message": "Implement node local dynamic bucket pruning", "committedDate": "2020-10-26T18:00:38Z", "type": "forcePushed"}]}