{"pr_number": 2979, "pr_title": "Remove duplicated logic", "pr_createdAt": "2020-03-02T10:21:09Z", "pr_url": "https://github.com/trinodb/trino/pull/2979", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0NzMzOQ==", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387547339", "bodyText": "you should filter by isPresent here (or peek validate the optional)", "author": "sopel39", "createdAt": "2020-03-04T09:37:25Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -550,18 +550,21 @@ private static OptionalDouble getPartitionRowCount(String partitionName, Map<Str\n     @VisibleForTesting\n     static Optional<DoubleRange> calculateRangeForPartitioningKey(HiveColumnHandle column, Type type, List<HivePartition> partitions)\n     {\n-        if (!isRangeSupported(type)) {\n-            return Optional.empty();\n-        }\n-\n-        List<Double> values = partitions.stream()\n+        List<OptionalDouble> convertedValues = partitions.stream()\n                 .map(HivePartition::getKeys)\n                 .map(keys -> keys.get(column))\n                 .filter(value -> !value.isNull())\n                 .map(NullableValue::getValue)\n                 .map(value -> convertPartitionValueToDouble(type, value))\n                 .collect(toImmutableList());\n \n+        if (convertedValues.stream().noneMatch(OptionalDouble::isPresent)) {\n+            return Optional.empty();\n+        }\n+        List<Double> values = convertedValues.stream()\n+                .map(OptionalDouble::getAsDouble)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0ODI0NA==", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387548244", "bodyText": "could you add a comment here? It seems that all or none value will be present.\nMaybe change the condition to !convertedValues.stream().allMatch(Optional::isPresent)", "author": "sopel39", "createdAt": "2020-03-04T09:38:57Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/statistics/MetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -550,18 +550,21 @@ private static OptionalDouble getPartitionRowCount(String partitionName, Map<Str\n     @VisibleForTesting\n     static Optional<DoubleRange> calculateRangeForPartitioningKey(HiveColumnHandle column, Type type, List<HivePartition> partitions)\n     {\n-        if (!isRangeSupported(type)) {\n-            return Optional.empty();\n-        }\n-\n-        List<Double> values = partitions.stream()\n+        List<OptionalDouble> convertedValues = partitions.stream()\n                 .map(HivePartition::getKeys)\n                 .map(keys -> keys.get(column))\n                 .filter(value -> !value.isNull())\n                 .map(NullableValue::getValue)\n                 .map(value -> convertPartitionValueToDouble(type, value))\n                 .collect(toImmutableList());\n \n+        if (convertedValues.stream().noneMatch(OptionalDouble::isPresent)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NDk0OQ==", "url": "https://github.com/trinodb/trino/pull/2979#discussion_r387674949", "bodyText": "They all should be present or absent. I want to fail if some are present and some are not.", "author": "findepi", "createdAt": "2020-03-04T13:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0ODI0NA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "784fa375a50a78fef34b1f1cb41fa8c7a1ce179b", "url": "https://github.com/trinodb/trino/commit/784fa375a50a78fef34b1f1cb41fa8c7a1ce179b", "message": "Remove duplicated logic\n\nRemove logic duplication between `isRangeSupported` and `createRange` /\n`calculateRangeForPartitioningKey`, by removing the `isRangeSupported`\nmethod.", "committedDate": "2020-03-05T09:50:09Z", "type": "commit"}, {"oid": "e68f1f1b28dbd30249cb250e4131bbead7461851", "url": "https://github.com/trinodb/trino/commit/e68f1f1b28dbd30249cb250e4131bbead7461851", "message": "Expose conversion method", "committedDate": "2020-03-05T09:54:03Z", "type": "commit"}, {"oid": "e68f1f1b28dbd30249cb250e4131bbead7461851", "url": "https://github.com/trinodb/trino/commit/e68f1f1b28dbd30249cb250e4131bbead7461851", "message": "Expose conversion method", "committedDate": "2020-03-05T09:54:03Z", "type": "forcePushed"}]}