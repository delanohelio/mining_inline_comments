{"pr_number": 2396, "pr_title": "Remove TestTablePartitioningInsertInto", "pr_createdAt": "2020-01-02T22:30:45Z", "pr_url": "https://github.com/trinodb/trino/pull/2396", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzU1NA==", "url": "https://github.com/trinodb/trino/pull/2396#discussion_r362737554", "bodyText": "I guess it does not solve the problem completely. I would suspect that every test that is using QueryStatsClient is vulnerable of being flaky.", "author": "kokosing", "createdAt": "2020-01-03T08:53:53Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/BaseHivePartitioningTest.java", "diffHunk": "@@ -1,55 +0,0 @@\n-/*\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package io.prestosql.tests.hive;\n-\n-import io.prestosql.jdbc.PrestoResultSet;\n-import io.prestosql.tempto.BeforeTestWithContext;\n-import io.prestosql.tempto.ProductTest;\n-import io.prestosql.tempto.query.QueryResult;\n-import io.prestosql.tests.querystats.QueryStatsClient;\n-\n-import javax.inject.Inject;\n-\n-import java.sql.SQLException;\n-\n-import static io.prestosql.tempto.query.QueryExecutor.query;\n-import static java.lang.String.format;\n-\n-public abstract class BaseHivePartitioningTest\n-        extends ProductTest\n-{\n-    private QueryStatsClient queryStatsClient;\n-\n-    @Inject\n-    @BeforeTestWithContext\n-    public void setUp(QueryStatsClient queryStatsClient)\n-    {\n-        this.queryStatsClient = queryStatsClient;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczODUwMA==", "url": "https://github.com/trinodb/trino/pull/2396#discussion_r362738500", "bodyText": "Luckily this is the only test that it was using this, so please remove QueryStatsClient and friends as well.", "author": "kokosing", "createdAt": "2020-01-03T08:58:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzU1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0NzQ2Ng==", "url": "https://github.com/trinodb/trino/pull/2396#discussion_r362747466", "bodyText": "I'm hesitant. It's not QueryStatsClient's fault and i think QueryStatsClient might be valuable.\nI want to leave #2382 open.\nI will still remove this class as we should test #2382 with engine \"unit\" tests, not product tests though.", "author": "findepi", "createdAt": "2020-01-03T09:31:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzU1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1OTI1Mg==", "url": "https://github.com/trinodb/trino/pull/2396#discussion_r362759252", "bodyText": "QueryStatsClient might be valuable.\n\nCorrect, but if it is not used then then it a risk that it become broken at some point.", "author": "kokosing", "createdAt": "2020-01-03T10:13:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzU1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczODc1Nw==", "url": "https://github.com/trinodb/trino/pull/2396#discussion_r362738757", "bodyText": "Do we have a test coverage partitioning is working effectively (end-to-end) somewhere else? Even though test was... it provided some value that I would like no to lose.", "author": "kokosing", "createdAt": "2020-01-03T08:59:17Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestTablePartitioningInsertInto.java", "diffHunk": "@@ -1,86 +0,0 @@\n-/*\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package io.prestosql.tests.hive;\n-\n-import io.prestosql.tempto.Requirement;\n-import io.prestosql.tempto.RequirementsProvider;\n-import io.prestosql.tempto.configuration.Configuration;\n-import io.prestosql.tempto.query.QueryResult;\n-import org.testng.annotations.Test;\n-\n-import static io.prestosql.tempto.Requirements.compose;\n-import static io.prestosql.tempto.fulfillment.table.MutableTableRequirement.State.CREATED;\n-import static io.prestosql.tempto.fulfillment.table.MutableTablesState.mutableTablesState;\n-import static io.prestosql.tempto.fulfillment.table.TableRequirements.mutableTable;\n-import static io.prestosql.tempto.fulfillment.table.hive.tpch.TpchTableDefinitions.NATION;\n-import static io.prestosql.tempto.query.QueryExecutor.query;\n-import static io.prestosql.tests.TestGroups.SMOKE;\n-import static io.prestosql.tests.hive.HiveTableDefinitions.NATION_PARTITIONED_BY_BIGINT_REGIONKEY;\n-import static io.prestosql.tests.hive.HiveTableDefinitions.NATION_PARTITIONED_BY_REGIONKEY_NUMBER_OF_LINES_PER_SPLIT;\n-import static java.lang.String.format;\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-public class TestTablePartitioningInsertInto\n-        extends BaseHivePartitioningTest\n-        implements RequirementsProvider\n-{\n-    private static final String TARGET_NATION_NAME = \"target_nation_test\";\n-\n-    @Override\n-    public Requirement getRequirements(Configuration configuration)\n-    {\n-        return compose(\n-                mutableTable(NATION_PARTITIONED_BY_BIGINT_REGIONKEY),\n-                mutableTable(NATION, TARGET_NATION_NAME, CREATED));\n-    }\n-\n-    @Test(groups = SMOKE)\n-    public void selectFromPartitionedNation()\n-            throws Exception\n-    {\n-        // read all data\n-        testQuerySplitsNumber(\"p_nationkey < 40\", 3);\n-\n-        // read no partitions\n-        testQuerySplitsNumber(\"p_regionkey = 42\", 0);\n-\n-        // read one partition\n-        testQuerySplitsNumber(\"p_regionkey = 2 AND p_nationkey < 40\", 1);\n-        // read two partitions\n-        testQuerySplitsNumber(\"p_regionkey = 2 AND p_nationkey < 40 or p_regionkey = 3\", 2);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0ODMzNw==", "url": "https://github.com/trinodb/trino/pull/2396#discussion_r362748337", "bodyText": "Yes, we have io.prestosql.plugin.hive.TestHiveIntegrationSmokeTest#testPartitionPerScanLimit()", "author": "findepi", "createdAt": "2020-01-03T09:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczODc1Nw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "fe606fa32ccb5997cf5d8c8aa25a01f709b1f686", "url": "https://github.com/trinodb/trino/commit/fe606fa32ccb5997cf5d8c8aa25a01f709b1f686", "message": "Remove TestTablePartitioningInsertInto\n\nThe test does not provide much additional value. The functionality is\ntested by `TestHiveIntegrationSmokeTest#testPartitionPerScanLimit()` as\nwell.", "committedDate": "2020-01-03T10:25:44Z", "type": "commit"}, {"oid": "fe606fa32ccb5997cf5d8c8aa25a01f709b1f686", "url": "https://github.com/trinodb/trino/commit/fe606fa32ccb5997cf5d8c8aa25a01f709b1f686", "message": "Remove TestTablePartitioningInsertInto\n\nThe test does not provide much additional value. The functionality is\ntested by `TestHiveIntegrationSmokeTest#testPartitionPerScanLimit()` as\nwell.", "committedDate": "2020-01-03T10:25:44Z", "type": "forcePushed"}]}