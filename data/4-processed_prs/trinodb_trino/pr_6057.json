{"pr_number": 6057, "pr_title": "Simplify extra large domains in JDBC connectors by default", "pr_createdAt": "2020-11-23T14:02:50Z", "pr_url": "https://github.com/trinodb/trino/pull/6057", "timeline": [{"oid": "232447e3320fed778d4ce5e0dbad5d37d5274e2c", "url": "https://github.com/trinodb/trino/commit/232447e3320fed778d4ce5e0dbad5d37d5274e2c", "message": "Pass session to PredicatePushdownController#apply", "committedDate": "2020-11-23T12:26:19Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "d2a025b9ed4ccc895c991265e66a3e8b4e8dab55", "url": "https://github.com/trinodb/trino/commit/d2a025b9ed4ccc895c991265e66a3e8b4e8dab55", "message": "Move basic pushdown types to PredicatePushdownController", "committedDate": "2020-11-23T15:40:04Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3MDA5OA==", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r528870098", "bodyText": "Add to commit message that you actually enable simplification of pushed down domain in this comit", "author": "losipiuk", "createdAt": "2020-11-23T17:19:22Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/PredicatePushdownController.java", "diffHunk": "@@ -14,15 +14,28 @@\n package io.prestosql.plugin.jdbc;\n \n import io.prestosql.spi.connector.ConnectorSession;\n+import io.prestosql.spi.predicate.DiscreteValues;\n import io.prestosql.spi.predicate.Domain;\n+import io.prestosql.spi.predicate.Ranges;\n \n+import static io.prestosql.plugin.jdbc.JdbcMetadataSessionProperties.getDomainCompactionThreshold;\n import static java.util.Objects.requireNonNull;\n \n public interface PredicatePushdownController\n {\n-    PredicatePushdownController FULL_PUSHDOWN = (session, domain) -> new DomainPushdownResult(domain, Domain.all(domain.getType()));\n-    PredicatePushdownController PUSHDOWN_AND_KEEP = (session, domain) -> new DomainPushdownResult(domain, domain);\n-    PredicatePushdownController DISABLE_PUSHDOWN = (session, domain) -> new DomainPushdownResult(Domain.all(domain.getType()), domain);\n+    PredicatePushdownController FULL_PUSHDOWN = (session, domain) -> {\n+        if (getDomainSize(domain) > getDomainCompactionThreshold(session)) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3MjA4MQ==", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r528872081", "bodyText": "With this you are changing the default value to 32. Why so?", "author": "losipiuk", "createdAt": "2020-11-23T17:22:18Z", "path": "presto-oracle/src/main/java/io/prestosql/plugin/oracle/OracleClient.java", "diffHunk": "@@ -126,8 +127,6 @@\n \n     private static final int PRECISION_OF_UNSPECIFIED_NUMBER = 127;\n \n-    private static final int ORACLE_MAX_LIST_EXPRESSIONS = 1000;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4MDE3Nw==", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r528880177", "bodyText": "It provides best balance in general use. Large IN lists really cause significant perf regresions.", "author": "sopel39", "createdAt": "2020-11-23T17:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3MjA4MQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3MjUyNg==", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r529372526", "bodyText": "more precisely, to IN list, or sequence of OR'd range conditions", "author": "findepi", "createdAt": "2020-11-24T09:50:49Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataConfig.java", "diffHunk": "@@ -17,10 +17,17 @@\n import io.airlift.configuration.ConfigDescription;\n import io.airlift.configuration.LegacyConfig;\n \n+import javax.validation.constraints.Min;\n+\n public class JdbcMetadataConfig\n {\n     private boolean allowDropTable;\n     private boolean aggregationPushdownEnabled = true;\n+    // Pushed domains are transformed into SQL IN lists in JDBC connectors.\n+    // Too large IN lists cause significant performance regression.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3NTE2Nw==", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r529375167", "bodyText": "Quote the offending value", "author": "findepi", "createdAt": "2020-11-24T09:52:45Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataSessionProperties.java", "diffHunk": "@@ -64,4 +70,17 @@ public static int getDomainCompactionThreshold(ConnectorSession session)\n     {\n         return session.getProperty(DOMAIN_COMPACTION_THRESHOLD, Integer.class);\n     }\n+\n+    private static void validateDomainCompactionThreshold(int domainCompactionThreshold, Optional<Integer> maxDomainCompactionThreshold)\n+    {\n+        if (domainCompactionThreshold < 1) {\n+            throw new PrestoException(INVALID_SESSION_PROPERTY, \"Domain compaction threshold must be greater than 0\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3NTIwNA==", "url": "https://github.com/trinodb/trino/pull/6057#discussion_r529375204", "bodyText": "Quote the offending value", "author": "findepi", "createdAt": "2020-11-24T09:52:47Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcMetadataSessionProperties.java", "diffHunk": "@@ -64,4 +70,17 @@ public static int getDomainCompactionThreshold(ConnectorSession session)\n     {\n         return session.getProperty(DOMAIN_COMPACTION_THRESHOLD, Integer.class);\n     }\n+\n+    private static void validateDomainCompactionThreshold(int domainCompactionThreshold, Optional<Integer> maxDomainCompactionThreshold)\n+    {\n+        if (domainCompactionThreshold < 1) {\n+            throw new PrestoException(INVALID_SESSION_PROPERTY, \"Domain compaction threshold must be greater than 0\");\n+        }\n+\n+        maxDomainCompactionThreshold.ifPresent(max -> {\n+            if (domainCompactionThreshold > max) {\n+                throw new PrestoException(INVALID_SESSION_PROPERTY, format(\"Domain compaction threshold cannot exceed %s\", max));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "8782f657d58a9d23ef044a179dcdb66bd84bf533", "url": "https://github.com/trinodb/trino/commit/8782f657d58a9d23ef044a179dcdb66bd84bf533", "message": "Compact pushed domains in JDBC by default (with default limit of 32)\n\nPreviously there was no compaction threshold for most JDBC connectors.\nPushed domains are transformed into SQL IN lists in JDBC connectors.\nHaving more than 1000 elements within IN list causes significant query slowdown.\nEven such a small number as 100 elements cause regressions. In other parts of\nPresto we use 32 as compaction threshold as it provides reasonable balance\nbetween performance and pushdown capabilities. If large IN lists are required,\ncompaction threshold can still be changed for query via session property.", "committedDate": "2020-11-24T12:37:38Z", "type": "commit"}, {"oid": "24beeb1744b16ff6a331ccbc2b132ec93c305f8c", "url": "https://github.com/trinodb/trino/commit/24beeb1744b16ff6a331ccbc2b132ec93c305f8c", "message": "Fix formatting", "committedDate": "2020-11-24T12:37:38Z", "type": "commit"}, {"oid": "21cc113df989302b3d1339d0a37a29f0e483c3aa", "url": "https://github.com/trinodb/trino/commit/21cc113df989302b3d1339d0a37a29f0e483c3aa", "message": "Allow connector to specify max domain size\n\nPreviosly Oracle and Sql server connectors had custom code to\nsupport compaction threshold limit.", "committedDate": "2020-11-24T12:37:38Z", "type": "commit"}, {"oid": "21cc113df989302b3d1339d0a37a29f0e483c3aa", "url": "https://github.com/trinodb/trino/commit/21cc113df989302b3d1339d0a37a29f0e483c3aa", "message": "Allow connector to specify max domain size\n\nPreviosly Oracle and Sql server connectors had custom code to\nsupport compaction threshold limit.", "committedDate": "2020-11-24T12:37:38Z", "type": "forcePushed"}]}