{"pr_number": 3801, "pr_title": "Improved concurrency for Elasticsearch calls", "pr_createdAt": "2020-05-20T15:33:11Z", "pr_url": "https://github.com/trinodb/trino/pull/3801", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1MDE3NA==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428150174", "bodyText": "I don't think it's worth it making this one configurable at this point. There's a timeout on the underlying connections already, so an extra level of timeouts when callers are waiting for connections will just make it harder to reason about the system.", "author": "martint", "createdAt": "2020-05-20T16:33:38Z", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/ElasticsearchConfig.java", "diffHunk": "@@ -196,6 +199,48 @@ public ElasticsearchConfig setNodeRefreshInterval(Duration nodeRefreshInterval)\n         return this;\n     }\n \n+    @NotNull\n+    public Duration getRequestQueuedTimeout()\n+    {\n+        return requestQueuedTimeout;\n+    }\n+\n+    @Config(\"elasticsearch.request-queued-timeout\")\n+    @ConfigDescription(\"The maximum time a request can wait for a connection to become available\")\n+    public ElasticsearchConfig setRequestQueuedTimeout(Duration requestQueuedTimeout)\n+    {\n+        this.requestQueuedTimeout = requestQueuedTimeout;\n+        return this;\n+    }", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0NTI1Mw==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428245253", "bodyText": "I had it hard-coded originally and right before pushing I thought that this setting might provide a back-pressure mechanism of sorts (if you were to set it to a reasonable value, it would fail queries quickly, should ES become overloaded and take a long time to respond).  But I don't feel strongly about it - I'll drop it if you think it's too much.", "author": "aalbu", "createdAt": "2020-05-20T19:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1MDE3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3MDM0Ng==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428170346", "bodyText": "Move this up to where the client builder is created an format as:\nIOReactorConfig reactorConfig = IOReactorConfig.custom()\n        .setIoThreadCount(config.getHttpThreadCount())\n        .build();\n\n// the client builder passed to the call-back is configured to use system properties, which makes it\n// impossible to configure concurrency settings, so we need to build a new one from scratch\nHttpAsyncClientBuilder clientBuilder = HttpAsyncClientBuilder.create()\n        .setDefaultRequestConfig(requestConfig)\n        .setDefaultIOReactorConfig(reactorConfig)\n        .setMaxConnPerRoute(config.getMaxHttpConnections())\n        .setMaxConnTotal(config.getMaxHttpConnections());", "author": "martint", "createdAt": "2020-05-20T17:03:00Z", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "diffHunk": "@@ -195,27 +198,33 @@ private static RestHighLevelClient createClient(ElasticsearchConfig config, Opti\n     {\n         RestClientBuilder builder = RestClient.builder(\n                 new HttpHost(config.getHost(), config.getPort(), config.isTlsEnabled() ? \"https\" : \"http\"))\n-                .setRequestConfigCallback(\n-                        configBuilder -> configBuilder\n-                                .setConnectTimeout(toIntExact(config.getConnectTimeout().toMillis()))\n-                                .setSocketTimeout(toIntExact(config.getRequestTimeout().toMillis())))\n                 .setMaxRetryTimeoutMillis(toIntExact(config.getMaxRetryTime().toMillis()));\n \n         builder.setHttpClientConfigCallback(clientBuilder -> {\n+            RequestConfig requestConfig = RequestConfig.custom()\n+                    .setConnectionRequestTimeout(toIntExact(config.getRequestQueuedTimeout().toMillis()))\n+                    .setConnectTimeout(toIntExact(config.getConnectTimeout().toMillis()))\n+                    .setSocketTimeout(toIntExact(config.getRequestTimeout().toMillis()))\n+                    .build();\n+            // the client builder passed to the call-back is configured to use system properties, which makes it\n+            // impossible to configure concurrency settings, so we need to build a new one from scratch\n+            HttpAsyncClientBuilder httpClientBuilder = HttpAsyncClientBuilder.create().setDefaultRequestConfig(requestConfig);\n             if (config.isTlsEnabled()) {\n                 buildSslContext(config.getKeystorePath(), config.getKeystorePassword(), config.getTrustStorePath(), config.getTruststorePassword())\n-                        .ifPresent(clientBuilder::setSSLContext);\n+                        .ifPresent(httpClientBuilder::setSSLContext);\n \n                 if (config.isVerifyHostnames()) {\n-                    clientBuilder.setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE);\n+                    httpClientBuilder.setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE);\n                 }\n             }\n+            httpClientBuilder.setMaxConnPerRoute(config.getMaxHttpConnections()).setMaxConnTotal(config.getMaxHttpConnections());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3Mzg5NQ==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428173895", "bodyText": "Rename clientBuilder to ignored and replace httpClientBuilder below with clientBuilder", "author": "martint", "createdAt": "2020-05-20T17:09:06Z", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "diffHunk": "@@ -195,27 +198,33 @@ private static RestHighLevelClient createClient(ElasticsearchConfig config, Opti\n     {\n         RestClientBuilder builder = RestClient.builder(\n                 new HttpHost(config.getHost(), config.getPort(), config.isTlsEnabled() ? \"https\" : \"http\"))\n-                .setRequestConfigCallback(\n-                        configBuilder -> configBuilder\n-                                .setConnectTimeout(toIntExact(config.getConnectTimeout().toMillis()))\n-                                .setSocketTimeout(toIntExact(config.getRequestTimeout().toMillis())))\n                 .setMaxRetryTimeoutMillis(toIntExact(config.getMaxRetryTime().toMillis()));\n \n         builder.setHttpClientConfigCallback(clientBuilder -> {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjIwOQ==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428176209", "bodyText": "I am a bit worried that we may lose some options already preset in clientBuilder passed as an argument to setHttpClientConfigCallback.\nDid what is the difference between provided clientBuilder and HttpAsyncClientBuilder.create().\nAre there any differences other than systemProperties set to true vs false?", "author": "losipiuk", "createdAt": "2020-05-20T17:13:07Z", "path": "presto-elasticsearch/src/main/java/io/prestosql/elasticsearch/client/ElasticsearchClient.java", "diffHunk": "@@ -195,27 +198,33 @@ private static RestHighLevelClient createClient(ElasticsearchConfig config, Opti\n     {\n         RestClientBuilder builder = RestClient.builder(\n                 new HttpHost(config.getHost(), config.getPort(), config.isTlsEnabled() ? \"https\" : \"http\"))\n-                .setRequestConfigCallback(\n-                        configBuilder -> configBuilder\n-                                .setConnectTimeout(toIntExact(config.getConnectTimeout().toMillis()))\n-                                .setSocketTimeout(toIntExact(config.getRequestTimeout().toMillis())))\n                 .setMaxRetryTimeoutMillis(toIntExact(config.getMaxRetryTime().toMillis()));\n \n         builder.setHttpClientConfigCallback(clientBuilder -> {\n+            RequestConfig requestConfig = RequestConfig.custom()\n+                    .setConnectionRequestTimeout(toIntExact(config.getRequestQueuedTimeout().toMillis()))\n+                    .setConnectTimeout(toIntExact(config.getConnectTimeout().toMillis()))\n+                    .setSocketTimeout(toIntExact(config.getRequestTimeout().toMillis()))\n+                    .build();\n+            // the client builder passed to the call-back is configured to use system properties, which makes it\n+            // impossible to configure concurrency settings, so we need to build a new one from scratch\n+            HttpAsyncClientBuilder httpClientBuilder = HttpAsyncClientBuilder.create().setDefaultRequestConfig(requestConfig);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NzU2Mg==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428177562", "bodyText": "I see the also call out to .setMaxConnPerRoute(DEFAULT_MAX_CONN_PER_ROUTE).setMaxConnTotal(DEFAULT_MAX_CONN_TOTAL).\nShould we replicate it here or it does not matter?", "author": "losipiuk", "createdAt": "2020-05-20T17:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE4MTczMg==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428181732", "bodyText": "@losipiuk, those are being set below. I made a suggestion on how to restructure the code for better readability.", "author": "martint", "createdAt": "2020-05-20T17:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNDQxNQ==", "url": "https://github.com/trinodb/trino/pull/3801#discussion_r428234415", "bodyText": "Right - did not notice that :)", "author": "losipiuk", "createdAt": "2020-05-20T18:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjIwOQ=="}], "type": "inlineReview"}, {"oid": "35dc924688d614aeb068b4649306ee49dcdaa977", "url": "https://github.com/trinodb/trino/commit/35dc924688d614aeb068b4649306ee49dcdaa977", "message": "Improved concurrency for Elasticsearch calls", "committedDate": "2020-05-21T01:36:21Z", "type": "commit"}, {"oid": "35dc924688d614aeb068b4649306ee49dcdaa977", "url": "https://github.com/trinodb/trino/commit/35dc924688d614aeb068b4649306ee49dcdaa977", "message": "Improved concurrency for Elasticsearch calls", "committedDate": "2020-05-21T01:36:21Z", "type": "forcePushed"}]}