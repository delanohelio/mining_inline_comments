{"pr_number": 3874, "pr_title": "Don't use coordinator REST endpoints directly when caching is enabled", "pr_createdAt": "2020-05-28T15:20:08Z", "pr_url": "https://github.com/trinodb/trino/pull/3874", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzMTczNw==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r431931737", "bodyText": "It should land in Rubix code eventually, right?", "author": "losipiuk", "createdAt": "2020-05-28T15:35:56Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/PrestoClusterManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.rubix;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.qubole.rubix.spi.ClusterManager;\n+import com.qubole.rubix.spi.ClusterType;\n+import io.prestosql.spi.Node;\n+import io.prestosql.spi.NodeManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static com.qubole.rubix.spi.ClusterType.PRESTOSQL_CLUSTER_MANAGER;\n+import static java.util.Objects.requireNonNull;\n+\n+public class PrestoClusterManager", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAwNDU2MQ==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r434004561", "bodyText": "Yes.", "author": "sopel39", "createdAt": "2020-06-02T16:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzMTczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzNDE0OQ==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r431934149", "bodyText": "Make this thread safe. make setNodeManager synchronized and add synchronized getter.", "author": "losipiuk", "createdAt": "2020-05-28T15:39:13Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/PrestoClusterManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.rubix;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.qubole.rubix.spi.ClusterManager;\n+import com.qubole.rubix.spi.ClusterType;\n+import io.prestosql.spi.Node;\n+import io.prestosql.spi.NodeManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static com.qubole.rubix.spi.ClusterType.PRESTOSQL_CLUSTER_MANAGER;\n+import static java.util.Objects.requireNonNull;\n+\n+public class PrestoClusterManager\n+        extends ClusterManager\n+{\n+    private static NodeManager nodeManager;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzNDY5NA==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r431934694", "bodyText": "explicitly check if nodeManager is not null.", "author": "losipiuk", "createdAt": "2020-05-28T15:40:01Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/PrestoClusterManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.rubix;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.qubole.rubix.spi.ClusterManager;\n+import com.qubole.rubix.spi.ClusterType;\n+import io.prestosql.spi.Node;\n+import io.prestosql.spi.NodeManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static com.qubole.rubix.spi.ClusterType.PRESTOSQL_CLUSTER_MANAGER;\n+import static java.util.Objects.requireNonNull;\n+\n+public class PrestoClusterManager\n+        extends ClusterManager\n+{\n+    private static NodeManager nodeManager;\n+\n+    static void setNodeManager(NodeManager nodeManager)\n+    {\n+        PrestoClusterManager.nodeManager = requireNonNull(nodeManager, \"nodeManager is null\");\n+    }\n+\n+    @Override\n+    public ClusterType getClusterType()\n+    {\n+        return PRESTOSQL_CLUSTER_MANAGER;\n+    }\n+\n+    @Override\n+    public boolean isMaster()\n+    {\n+        return nodeManager.getCurrentNode().isCoordinator();\n+    }\n+\n+    @Override\n+    public List<String> getNodes()\n+    {\n+        Set<Node> workers = nodeManager.getWorkerNodes();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzNjgyMQ==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r431936821", "bodyText": "How frequently is that called? I guess constructing list on each call should not be a problem but please make sure it is not.", "author": "losipiuk", "createdAt": "2020-05-28T15:43:02Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/PrestoClusterManager.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.rubix;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.qubole.rubix.spi.ClusterManager;\n+import com.qubole.rubix.spi.ClusterType;\n+import io.prestosql.spi.Node;\n+import io.prestosql.spi.NodeManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static com.qubole.rubix.spi.ClusterType.PRESTOSQL_CLUSTER_MANAGER;\n+import static java.util.Objects.requireNonNull;\n+\n+public class PrestoClusterManager\n+        extends ClusterManager\n+{\n+    private static NodeManager nodeManager;\n+\n+    static void setNodeManager(NodeManager nodeManager)\n+    {\n+        PrestoClusterManager.nodeManager = requireNonNull(nodeManager, \"nodeManager is null\");\n+    }\n+\n+    @Override\n+    public ClusterType getClusterType()\n+    {\n+        return PRESTOSQL_CLUSTER_MANAGER;\n+    }\n+\n+    @Override\n+    public boolean isMaster()\n+    {\n+        return nodeManager.getCurrentNode().isCoordinator();\n+    }\n+\n+    @Override\n+    public List<String> getNodes()\n+    {\n+        Set<Node> workers = nodeManager.getWorkerNodes();\n+        if (workers.isEmpty()) {\n+            // Empty result set => server up and only master node running, return localhost has the only node\n+            // Do not need to consider failed nodes list as 1node cluster and server is up since it replied to allNodesRequest\n+            return ImmutableList.of(nodeManager.getCurrentNode().getHost());\n+        }\n+\n+        return nodeManager.getWorkerNodes().stream()", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxMDA1NQ==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r434010055", "bodyText": "It's:\n\nonce per split (to get block locations)\nonce per com.qubole.rubix.core.CachingInputStream#read(long, byte[], int, int)\n\nAnyway, io.prestosql.metadata.DiscoveryNodeManager#activeNodesByCatalogName is immutable, so getting list of workers should be 0 time", "author": "sopel39", "createdAt": "2020-06-02T16:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzNjgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTAyMg==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r431939022", "bodyText": "tag with github issue", "author": "losipiuk", "createdAt": "2020-05-28T15:46:11Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -290,8 +280,9 @@ void updateRubixConfiguration(Configuration config)\n \n         config.set(\"fs.hdfs.impl\", RUBIX_DISTRIBUTED_FS_CLASS_NAME);\n \n-        // TODO: remove after https://github.com/qubole/rubix/pull/385 is merged\n-        setPrestoClusterManager(config, \"com.qubole.rubix.prestosql.PrestoClusterManager\");\n+        // TODO: fix PrestoClusterManager in Rubix itself", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxODI1NA==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r434418254", "bodyText": "Please merge this with filtering on stream above.\n        List<Node> workers = nodeManager.getWorkerNodes().stream()\n                .filter(node -> !node.isCoordinator())\n                .map(Node::getHost)\n                .sorted()\n                .collect(toImmutableList());\n\n        if (workers.isEmpty()) {\n            // Empty result set => server up and only master node running, return localhost has the only node\n            // Do not need to consider failed nodes list as 1node cluster and server is up since it replied to allNodesRequest\n            return ImmutableList.of(nodeManager.getCurrentNode().getHost());\n        }\n       \n        return workers;", "author": "losipiuk", "createdAt": "2020-06-03T09:03:36Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/PrestoClusterManager.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.rubix;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.qubole.rubix.spi.ClusterManager;\n+import com.qubole.rubix.spi.ClusterType;\n+import io.prestosql.spi.Node;\n+import io.prestosql.spi.NodeManager;\n+\n+import java.util.List;\n+\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static com.qubole.rubix.spi.ClusterType.PRESTOSQL_CLUSTER_MANAGER;\n+import static java.util.Objects.requireNonNull;\n+\n+// TODO: remove after https://github.com/prestosql/presto/issues/3907\n+public class PrestoClusterManager\n+        extends ClusterManager\n+{\n+    private static volatile NodeManager nodeManager;\n+\n+    static void setNodeManager(NodeManager nodeManager)\n+    {\n+        PrestoClusterManager.nodeManager = requireNonNull(nodeManager, \"nodeManager is null\");\n+    }\n+\n+    @Override\n+    public ClusterType getClusterType()\n+    {\n+        return PRESTOSQL_CLUSTER_MANAGER;\n+    }\n+\n+    @Override\n+    public boolean isMaster()\n+    {\n+        requireNonNull(nodeManager, \"nodeManager is null\");\n+        return nodeManager.getCurrentNode().isCoordinator();\n+    }\n+\n+    /*\n+     * This returns list of worker nodes when there are worker nodes in the cluster\n+     * If it is a single node cluster, it will return localhost information\n+     */\n+    @Override\n+    public List<String> getNodes()\n+    {\n+        requireNonNull(nodeManager, \"nodeManager is null\");\n+        List<Node> workers = nodeManager.getWorkerNodes().stream()\n+                .filter(node -> !node.isCoordinator())\n+                .collect(toImmutableList());\n+\n+        if (workers.isEmpty()) {\n+            // Empty result set => server up and only master node running, return localhost has the only node\n+            // Do not need to consider failed nodes list as 1node cluster and server is up since it replied to allNodesRequest\n+            return ImmutableList.of(nodeManager.getCurrentNode().getHost());\n+        }\n+\n+        return workers.stream()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQzNDA0OA==", "url": "https://github.com/trinodb/trino/pull/3874#discussion_r434434048", "bodyText": "nit: not sure if async reloading is needed but it may stay.", "author": "losipiuk", "createdAt": "2020-06-03T09:29:59Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/PrestoClusterManager.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.hive.rubix;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import com.google.common.collect.ImmutableList;\n+import com.qubole.rubix.spi.ClusterManager;\n+import com.qubole.rubix.spi.ClusterType;\n+import io.prestosql.spi.Node;\n+import io.prestosql.spi.NodeManager;\n+import org.apache.hadoop.conf.Configuration;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.List;\n+\n+import static com.google.common.cache.CacheLoader.asyncReloading;\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static com.qubole.rubix.spi.ClusterType.PRESTOSQL_CLUSTER_MANAGER;\n+import static java.util.Objects.requireNonNull;\n+import static java.util.concurrent.Executors.newSingleThreadExecutor;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+\n+// TODO: remove after https://github.com/prestosql/presto/issues/3907\n+public class PrestoClusterManager\n+        extends ClusterManager\n+{\n+    private static final String NODES_LIST = \"nodesList\";\n+\n+    @Nullable\n+    private static volatile NodeManager nodeManager;\n+\n+    @Nullable\n+    private LoadingCache<String, List<String>> nodesCache;\n+\n+    static void setNodeManager(NodeManager nodeManager)\n+    {\n+        PrestoClusterManager.nodeManager = requireNonNull(nodeManager, \"nodeManager is null\");\n+    }\n+\n+    @Override\n+    public void initialize(Configuration conf)\n+    {\n+        nodesCache = CacheBuilder.newBuilder()\n+                .refreshAfterWrite(getNodeRefreshTime(), SECONDS)\n+                .build(asyncReloading(CacheLoader.from(this::getNodesInternal), newSingleThreadExecutor()));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "0cc7b205dcf1fe6fc9f5796d0e4e6c2144485e71", "url": "https://github.com/trinodb/trino/commit/0cc7b205dcf1fe6fc9f5796d0e4e6c2144485e71", "message": "Don't use coordinator REST endpoints directly when caching is enabled", "committedDate": "2020-06-03T11:25:25Z", "type": "commit"}, {"oid": "0cc7b205dcf1fe6fc9f5796d0e4e6c2144485e71", "url": "https://github.com/trinodb/trino/commit/0cc7b205dcf1fe6fc9f5796d0e4e6c2144485e71", "message": "Don't use coordinator REST endpoints directly when caching is enabled", "committedDate": "2020-06-03T11:25:25Z", "type": "forcePushed"}]}