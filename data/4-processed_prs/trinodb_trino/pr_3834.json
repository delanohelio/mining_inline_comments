{"pr_number": 3834, "pr_title": "Filter table names in hidden schema for JDBC connector", "pr_createdAt": "2020-05-23T13:00:51Z", "pr_url": "https://github.com/trinodb/trino/pull/3834", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNDE2Nw==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r429804167", "bodyText": "isUserSchema? (as opposed to internal schema)", "author": "kokosing", "createdAt": "2020-05-25T08:29:51Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -192,6 +192,14 @@ public BaseJdbcClient(\n         }\n     }\n \n+    protected boolean filterSchema(String schemaName)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgyMDY0MA==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r429820640", "bodyText": "in line with io.prestosql.plugin.hive.HiveMetadata#filterSchema", "author": "findepi", "createdAt": "2020-05-25T09:02:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNDE2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNDQ1Mw==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r429804453", "bodyText": "Do we still need listSchemas method in MemSqlClient?", "author": "kokosing", "createdAt": "2020-05-25T08:30:26Z", "path": "presto-memsql/src/main/java/io/prestosql/plugin/memsql/MemSqlClient.java", "diffHunk": "@@ -47,7 +47,7 @@ public MemSqlClient(BaseJdbcConfig config, ConnectionFactory connectionFactory)\n             while (resultSet.next()) {\n                 String schemaName = resultSet.getString(\"TABLE_CAT\");\n                 // skip internal schemas\n-                if (!schemaName.equalsIgnoreCase(\"information_schema\") && !schemaName.equalsIgnoreCase(\"memsql\")) {\n+                if (filterSchema(schemaName)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYwNTI3MQ==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r446605271", "bodyText": "Yes, MemSQL also has diff as MySQL (TABLE_CAT vs TABLE_SCHEM)", "author": "ebyhr", "createdAt": "2020-06-28T06:01:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNDQ1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNDY0MQ==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r429804641", "bodyText": "Do we still need listSchemas method in MySqlClient?", "author": "kokosing", "createdAt": "2020-05-25T08:30:48Z", "path": "presto-mysql/src/main/java/io/prestosql/plugin/mysql/MySqlClient.java", "diffHunk": "@@ -112,7 +112,7 @@ public MySqlClient(BaseJdbcConfig config, ConnectionFactory connectionFactory, T\n             while (resultSet.next()) {\n                 String schemaName = resultSet.getString(\"TABLE_CAT\");\n                 // skip internal schemas\n-                if (!schemaName.equalsIgnoreCase(\"information_schema\") && !schemaName.equalsIgnoreCase(\"mysql\")) {\n+                if (filterSchema(schemaName)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgyMDc3Nw==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r429820777", "bodyText": "yes, because it considers TABLE_CAT", "author": "findepi", "createdAt": "2020-05-25T09:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNDY0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNTI0Ng==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r429805246", "bodyText": "do we still need listSchemas here?", "author": "kokosing", "createdAt": "2020-05-25T08:32:04Z", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -156,7 +156,7 @@ public void execute(ConnectorSession session, String statement)\n             while (resultSet.next()) {\n                 String schemaName = resultSet.getString(\"TABLE_SCHEM\");\n                 // skip internal schemas\n-                if (schemaName != null && !schemaName.equalsIgnoreCase(\"information_schema\")) {\n+                if (filterSchema(schemaName)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYwNTI3NA==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r446605274", "bodyText": "I think so.\nhttps://github.com/prestosql/presto/blob/b52bcd71d4a3fc17fcb74eb3aa1bd291b4111128/presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java#L156", "author": "ebyhr", "createdAt": "2020-06-28T06:01:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNTI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNTI2Mw==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r429805263", "bodyText": "null?", "author": "kokosing", "createdAt": "2020-05-25T08:32:07Z", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -167,6 +167,15 @@ public void execute(ConnectorSession session, String statement)\n         }\n     }\n \n+    @Override\n+    protected boolean filterSchema(String schemaName)\n+    {\n+        if (schemaName == null) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYwNTI4Mw==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r446605283", "bodyText": "I extracted the condition from the following. But I will remove and leave commit message if you agree on.\nhttps://github.com/prestosql/presto/blob/b52bcd71d4a3fc17fcb74eb3aa1bd291b4111128/presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java#L160", "author": "ebyhr", "createdAt": "2020-06-28T06:01:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNTI2Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4ODc1MQ==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r448288751", "bodyText": "fixup! Remove redundant filterSchema in PhoenixClient\n\nmake sure you squash this (it's \"fixuping\" a different commit)", "author": "findepi", "createdAt": "2020-07-01T11:07:06Z", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -168,15 +168,6 @@ public void execute(ConnectorSession session, String statement)\n         }\n     }\n \n-    @Override\n-    protected boolean filterSchema(String schemaName)\n-    {\n-        if (schemaName == null) {\n-            return false;\n-        }\n-        return super.filterSchema(schemaName);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI5NTk4NA==", "url": "https://github.com/trinodb/trino/pull/3834#discussion_r448295984", "bodyText": "if remoteSchema.isPresent() the filtering should be applied earlier\nso it needs to be done twice.", "author": "findepi", "createdAt": "2020-07-01T11:22:25Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -203,7 +211,9 @@ public BaseJdbcClient(\n                 while (resultSet.next()) {\n                     String tableSchema = getTableSchemaName(resultSet);\n                     String tableName = resultSet.getString(\"TABLE_NAME\");\n-                    list.add(new SchemaTableName(tableSchema, tableName));\n+                    if (filterSchema(tableSchema)) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "b6229eeecc149cf9d2e17ef78bd5262267ef76be", "url": "https://github.com/trinodb/trino/commit/b6229eeecc149cf9d2e17ef78bd5262267ef76be", "message": "Filter table names in hidden schema for JDBC connector\n\nAdditionally, extract method for filtering schema.", "committedDate": "2020-07-06T12:20:57Z", "type": "commit"}, {"oid": "b6229eeecc149cf9d2e17ef78bd5262267ef76be", "url": "https://github.com/trinodb/trino/commit/b6229eeecc149cf9d2e17ef78bd5262267ef76be", "message": "Filter table names in hidden schema for JDBC connector\n\nAdditionally, extract method for filtering schema.", "committedDate": "2020-07-06T12:20:57Z", "type": "forcePushed"}]}