{"pr_number": 4648, "pr_title": "Add user mapping to insecure authenticator", "pr_createdAt": "2020-07-31T02:41:55Z", "pr_url": "https://github.com/trinodb/trino/pull/4648", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDA5NQ==", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463454095", "bodyText": "add unit test", "author": "kokosing", "createdAt": "2020-07-31T07:39:16Z", "path": "presto-main/src/main/java/io/prestosql/server/security/InsecureAuthenticatorConfig.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server.security;\n+\n+import io.airlift.configuration.Config;\n+import io.airlift.configuration.validation.FileExists;\n+\n+import java.io.File;\n+import java.util.Optional;\n+\n+public class InsecureAuthenticatorConfig", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDc1OQ==", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463454759", "bodyText": "can you please add some unit tests for this feature?", "author": "kokosing", "createdAt": "2020-07-31T07:40:55Z", "path": "presto-main/src/main/java/io/prestosql/server/security/AuthenticationFilter.java", "diffHunk": "@@ -41,14 +41,20 @@\n     private final List<Authenticator> authenticators;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NDg3NA==", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463754874", "bodyText": "I updated the existing test in TestResourceSecurity", "author": "dain", "createdAt": "2020-07-31T18:04:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDc1OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNDU2NQ==", "url": "https://github.com/trinodb/trino/pull/4648#discussion_r463904565", "bodyText": "Shouldn't this be the original user? That's what we do for PasswordAuthenticator (at least for the built-in ones, as a custom password authenticator can return any principal).", "author": "electrum", "createdAt": "2020-08-01T01:37:56Z", "path": "presto-main/src/main/java/io/prestosql/server/security/InsecureAuthenticator.java", "diffHunk": "@@ -48,8 +60,14 @@ public Identity authenticate(ContainerRequestContext request)\n             throw new AuthenticationException(\"Basic authentication or \" + PRESTO_USER + \" must be sent\", BasicAuthCredentials.AUTHENTICATE_HEADER);\n         }\n \n-        return Identity.forUser(user)\n-                .withPrincipal(new BasicPrincipal(user))\n-                .build();\n+        try {\n+            String authenticatedUser = userMapping.mapUser(user);\n+            return Identity.forUser(authenticatedUser)\n+                    .withPrincipal(new BasicPrincipal(authenticatedUser))", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63cf2f51c41856140211b448fb905e4fcf140c9a", "url": "https://github.com/trinodb/trino/commit/63cf2f51c41856140211b448fb905e4fcf140c9a", "message": "Add user mapping to insecure authenticator", "committedDate": "2020-08-02T02:23:32Z", "type": "commit"}, {"oid": "63cf2f51c41856140211b448fb905e4fcf140c9a", "url": "https://github.com/trinodb/trino/commit/63cf2f51c41856140211b448fb905e4fcf140c9a", "message": "Add user mapping to insecure authenticator", "committedDate": "2020-08-02T02:23:32Z", "type": "forcePushed"}]}