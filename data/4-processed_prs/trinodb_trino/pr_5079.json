{"pr_number": 5079, "pr_title": "Set X-Presto-User header to retrieve CPU usage", "pr_createdAt": "2020-09-04T10:29:30Z", "pr_url": "https://github.com/trinodb/trino/pull/5079", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExNzE4MA==", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r484117180", "bodyText": "since we store user as a member variable in the class, we could just use that in this non-static method directly instead of passing it over from execute.", "author": "phd3", "createdAt": "2020-09-06T21:44:11Z", "path": "presto-benchmark-driver/src/main/java/io/prestosql/benchmark/driver/BenchmarkQueryRunner.java", "diffHunk": "@@ -261,12 +262,12 @@ public void handleFailure(Exception e)\n         }\n     }\n \n-    private long getTotalCpuTime()\n+    private long getTotalCpuTime(String user)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExODcwMA==", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r484118700", "bodyText": "wondering about using session.getUser() here as opposed to a new member variable user.\nI think having this new member variable user makes sense, since getting cpu time is like a monitoring request, as opposed to a benchmark query fired by the session user.\nIn future, we can probably provide a different pre-configured \"super-user\"  in this constructor invocation from BenchmarkDriver, instead of clientSession.getUser.", "author": "phd3", "createdAt": "2020-09-06T22:01:26Z", "path": "presto-benchmark-driver/src/main/java/io/prestosql/benchmark/driver/BenchmarkQueryRunner.java", "diffHunk": "@@ -122,13 +123,13 @@ public BenchmarkQueryResult execute(Suite suite, ClientSession session, Benchmar\n         double[] queryCpuTimeNanos = new double[runs];\n         for (int i = 0; i < runs; ) {\n             try {\n-                long startCpuTime = getTotalCpuTime();\n+                long startCpuTime = getTotalCpuTime(user);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3NDIzNA==", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r484574234", "bodyText": "BenchmarkQueryRunner does not have the clientSession inside. Do you mean we can pass the clientSession to BenchmarkQueryRunner instead of passing server and user configuration respectively?", "author": "Lewuathe", "createdAt": "2020-09-07T21:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExODcwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI2NjU3MA==", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r485266570", "bodyText": "wondering about using session.getUser() here as opposed to a new member variable user.\n\n^ for this, I just meant getting session.getUser in the execute method.\n\nIn future, we can probably provide a different pre-configured \"super-user\" in this constructor invocation from BenchmarkDriver, instead of clientSession.getUser.\n\n^ for this, I meant passing in a different user in BenchmarkQueryRunner constructor.", "author": "phd3", "createdAt": "2020-09-09T00:26:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExODcwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTA2Mg==", "url": "https://github.com/trinodb/trino/pull/5079#discussion_r484121062", "bodyText": "this might be easier to read with multi-line formatting, and extracting out request preparation.\n            Request request = prepareGet()\n                    .setHeader(PrestoHeaders.PRESTO_USER, user)\n                    .setUri(uriBuilderFrom(server)\n                            .replacePath(\"/v1/jmx/mbean/java.lang:type=OperatingSystem/ProcessCpuTime\")\n                            .build())\n                    .build();\n            String data = httpClient.execute(request, createStringResponseHandler()).getBody();", "author": "phd3", "createdAt": "2020-09-06T22:28:31Z", "path": "presto-benchmark-driver/src/main/java/io/prestosql/benchmark/driver/BenchmarkQueryRunner.java", "diffHunk": "@@ -261,12 +262,12 @@ public void handleFailure(Exception e)\n         }\n     }\n \n-    private long getTotalCpuTime()\n+    private long getTotalCpuTime(String user)\n     {\n         long totalCpuTime = 0;\n         for (URI server : nodes) {\n             URI addressUri = uriBuilderFrom(server).replacePath(\"/v1/jmx/mbean/java.lang:type=OperatingSystem/ProcessCpuTime\").build();\n-            String data = httpClient.execute(prepareGet().setUri(addressUri).build(), createStringResponseHandler()).getBody();\n+            String data = httpClient.execute(prepareGet().setHeader(PrestoHeaders.PRESTO_USER, user).setUri(addressUri).build(), createStringResponseHandler()).getBody();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9a01d1f1321501627ef7141904d0d49e7483e5f9", "url": "https://github.com/trinodb/trino/commit/9a01d1f1321501627ef7141904d0d49e7483e5f9", "message": "Set X-Presto-User header to retrieve CPU usage", "committedDate": "2020-09-07T22:05:44Z", "type": "commit"}, {"oid": "9a01d1f1321501627ef7141904d0d49e7483e5f9", "url": "https://github.com/trinodb/trino/commit/9a01d1f1321501627ef7141904d0d49e7483e5f9", "message": "Set X-Presto-User header to retrieve CPU usage", "committedDate": "2020-09-07T22:05:44Z", "type": "forcePushed"}]}