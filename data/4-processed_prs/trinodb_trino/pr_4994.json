{"pr_number": 4994, "pr_title": "Fix IndexOutOfBounds non-nested-loop joins with no columns on build side", "pr_createdAt": "2020-08-27T00:06:05Z", "pr_url": "https://github.com/trinodb/trino/pull/4994", "timeline": [{"oid": "6197db4176718820b9c8ab0380268418b70fa2f9", "url": "https://github.com/trinodb/trino/commit/6197db4176718820b9c8ab0380268418b70fa2f9", "message": "Fix IndexOutOfBounds non-nested-loop joins with no columns on build side\n\nQueries that involve an outer join or are pure non-equi joins get planned\nas regular lookup joins. If the right side doesn't contain any columns (i.e.,\ndue to column pruning), calls to PagesIndex.compact() will fail with\nArrayIndexOutOfBounds -- this can happen if there's not enough local memory\navailable and the operator attempts to optimize the organization of the\nPagesIndex.", "committedDate": "2020-08-27T00:05:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxOTg2MA==", "url": "https://github.com/trinodb/trino/pull/4994#discussion_r478719860", "bodyText": "Seems like a shame to add this memory overhead in all cases when in practice it's only necessary for empty channels. Maybe we only use this when channels.length == 0? It'll definitely make the code uglier but it seems maybe worthwhile to avoid the extra memory penalty when it can be avoided.", "author": "pettyjamesm", "createdAt": "2020-08-27T22:00:24Z", "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -84,8 +85,10 @@\n     private final List<Type> types;\n     private final LongArrayList valueAddresses;\n     private final ObjectArrayList<Block>[] channels;\n+    private final IntArrayList positionCounts;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ0ODExMw==", "url": "https://github.com/trinodb/trino/pull/4994#discussion_r479448113", "bodyText": "I know, but it shouldn't be much overhead -- roughly an int per page.", "author": "martint", "createdAt": "2020-08-28T17:42:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxOTg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAwNjk4OA==", "url": "https://github.com/trinodb/trino/pull/4994#discussion_r480006988", "bodyText": "please update io.prestosql.operator.PagesIndex#calculateEstimatedSize method too", "author": "sopel39", "createdAt": "2020-08-31T09:27:14Z", "path": "presto-main/src/main/java/io/prestosql/operator/PagesIndex.java", "diffHunk": "@@ -112,6 +115,8 @@ private PagesIndex(\n             channels[i] = ObjectArrayList.wrap(new Block[1024], 0);\n         }\n \n+        positionCounts = new IntArrayList(1024);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "url": "https://github.com/trinodb/trino/commit/4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "message": "Fix IndexOutOfBounds when spilling lookup join with no build-side columns\n\nThis can happen for non-nested-loop joins (outer joins or non-equi joins)\nwith no columns on the build side due to column pruning when the system\ndecides to spill the PagesIndex", "committedDate": "2020-09-01T22:44:22Z", "type": "commit"}, {"oid": "4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "url": "https://github.com/trinodb/trino/commit/4c2cb15ff0d75094bb49ec5a0358e2e39f28e0f1", "message": "Fix IndexOutOfBounds when spilling lookup join with no build-side columns\n\nThis can happen for non-nested-loop joins (outer joins or non-equi joins)\nwith no columns on the build side due to column pruning when the system\ndecides to spill the PagesIndex", "committedDate": "2020-09-01T22:44:22Z", "type": "forcePushed"}]}