{"pr_number": 3284, "pr_title": "Base JDBC code cleanup", "pr_createdAt": "2020-03-30T14:07:13Z", "pr_url": "https://github.com/trinodb/trino/pull/3284", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5Njk3MQ==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400396971", "bodyText": "Where execute is defined?", "author": "kokosing", "createdAt": "2020-03-30T18:16:10Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -622,29 +621,18 @@ public void renameColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColu\n     @Override\n     public void dropColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColumnHandle column)\n     {\n-        try (Connection connection = connectionFactory.openConnection(identity)) {\n-            String sql = format(\n-                    \"ALTER TABLE %s DROP COLUMN %s\",\n-                    quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n-                    column.getColumnName());\n-            execute(connection, sql);\n-        }\n-        catch (SQLException e) {\n-            throw new PrestoException(JDBC_ERROR, e);\n-        }\n+        String sql = format(\n+                \"ALTER TABLE %s DROP COLUMN %s\",\n+                quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n+                column.getColumnName());\n+        execute(identity, sql);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMjI0Nw==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400512247", "bodyText": "in BaseJdbcClient", "author": "findepi", "createdAt": "2020-03-30T21:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5Njk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5NzY0Nw==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400397647", "bodyText": "Maybe add logging to execute method so it could log all queries.", "author": "kokosing", "createdAt": "2020-03-30T18:17:18Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcClient.java", "diffHunk": "@@ -622,29 +621,18 @@ public void renameColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColu\n     @Override\n     public void dropColumn(JdbcIdentity identity, JdbcTableHandle handle, JdbcColumnHandle column)\n     {\n-        try (Connection connection = connectionFactory.openConnection(identity)) {\n-            String sql = format(\n-                    \"ALTER TABLE %s DROP COLUMN %s\",\n-                    quoted(handle.getCatalogName(), handle.getSchemaName(), handle.getTableName()),\n-                    column.getColumnName());\n-            execute(connection, sql);\n-        }\n-        catch (SQLException e) {\n-            throw new PrestoException(JDBC_ERROR, e);\n-        }\n+        String sql = format(", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxNDA3Mg==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400514072", "bodyText": "it's already there", "author": "findepi", "createdAt": "2020-03-30T21:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5NzY0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNTk3MA==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400405970", "bodyText": "Undo?", "author": "kokosing", "createdAt": "2020-03-30T18:30:57Z", "path": "presto-redshift/src/main/java/io/prestosql/plugin/redshift/RedshiftClient.java", "diffHunk": "@@ -44,7 +44,7 @@ public RedshiftClient(BaseJdbcConfig config, ConnectionFactory connectionFactory\n     protected void renameTable(JdbcIdentity identity, String catalogName, String schemaName, String tableName, SchemaTableName newTable)\n     {\n         if (!schemaName.equals(newTable.getSchemaName())) {\n-            throw new PrestoException(NOT_SUPPORTED, \"Table rename across schemas is not supported in Redshift\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMjY3OQ==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400512679", "bodyText": "Intentional. We usually don't mention connector name in exception messages, so this is for consistency.", "author": "findepi", "createdAt": "2020-03-30T21:43:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNTk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNjMwMg==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400406302", "bodyText": "Separate commit, test?", "author": "kokosing", "createdAt": "2020-03-30T18:31:30Z", "path": "presto-sqlserver/src/main/java/io/prestosql/plugin/sqlserver/SqlServerClient.java", "diffHunk": "@@ -72,6 +74,10 @@ public SqlServerClient(BaseJdbcConfig config, ConnectionFactory connectionFactor\n     @Override\n     protected void renameTable(JdbcIdentity identity, String catalogName, String schemaName, String tableName, SchemaTableName newTable)\n     {\n+        if (!schemaName.equals(newTable.getSchemaName())) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMjkzMQ==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400512931", "bodyText": "Yes, that was intended as a separate commit.", "author": "findepi", "createdAt": "2020-03-30T21:44:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNjMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxNDM5Mw==", "url": "https://github.com/trinodb/trino/pull/3284#discussion_r400514393", "bodyText": "i would like to test this in a generic manner, but we don't have two schemas set up. Let's me pause on this.", "author": "findepi", "createdAt": "2020-03-30T21:47:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNjMwMg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "73c1a98cd8ffa5807bdfbf3db8c8b7c94fb20821", "url": "https://github.com/trinodb/trino/commit/73c1a98cd8ffa5807bdfbf3db8c8b7c94fb20821", "message": "Report actual query when DDL fails", "committedDate": "2020-03-30T23:02:09Z", "type": "commit"}, {"oid": "21f47345fb8399429b2936f040bd96b2f8643c5f", "url": "https://github.com/trinodb/trino/commit/21f47345fb8399429b2936f040bd96b2f8643c5f", "message": "Extract short-hand execute() method", "committedDate": "2020-03-30T23:02:10Z", "type": "commit"}, {"oid": "9aa102abb149833430e1ca5844db9f4fa79477a1", "url": "https://github.com/trinodb/trino/commit/9aa102abb149833430e1ca5844db9f4fa79477a1", "message": "Reject impossible rename", "committedDate": "2020-03-30T23:02:11Z", "type": "commit"}, {"oid": "097c2d396bd499546fbb242d5c2c0db45bc62e84", "url": "https://github.com/trinodb/trino/commit/097c2d396bd499546fbb242d5c2c0db45bc62e84", "message": "Extract charReadFunction", "committedDate": "2020-03-30T23:02:12Z", "type": "commit"}, {"oid": "5138b2d2784c85c69ccb1f0c2806d303206b0869", "url": "https://github.com/trinodb/trino/commit/5138b2d2784c85c69ccb1f0c2806d303206b0869", "message": "Simplify test", "committedDate": "2020-03-30T23:02:13Z", "type": "commit"}, {"oid": "5138b2d2784c85c69ccb1f0c2806d303206b0869", "url": "https://github.com/trinodb/trino/commit/5138b2d2784c85c69ccb1f0c2806d303206b0869", "message": "Simplify test", "committedDate": "2020-03-30T23:02:13Z", "type": "forcePushed"}]}