{"pr_number": 6428, "pr_title": "Support JWK with certificate chain", "pr_createdAt": "2020-12-23T10:59:47Z", "pr_url": "https://github.com/trinodb/trino/pull/6428", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkxMDM5Nw==", "url": "https://github.com/trinodb/trino/pull/6428#discussion_r547910397", "bodyText": "static import?", "author": "s2lomon", "createdAt": "2020-12-23T11:22:24Z", "path": "presto-main/src/main/java/io/prestosql/server/security/jwt/JwkDecoder.java", "diffHunk": "@@ -52,84 +56,104 @@ private JwkDecoder() {}\n                 .collect(toImmutableMap(JwkPublicKey::getKeyId, Function.identity()));\n     }\n \n-    public static Optional<? extends JwkPublicKey> tryDecodeJwkKey(Map<String, String> properties)\n+    public static Optional<? extends JwkPublicKey> tryDecodeJwkKey(Key key)\n     {\n-        String keyId = properties.get(\"kid\");\n-        if (Strings.isNullOrEmpty(keyId)) {\n-            // key id is required to index the key\n+        // key id is required to index the key\n+        if (key.getKid().filter(Predicate.not(String::isEmpty)).isEmpty()) {\n             return Optional.empty();\n         }\n-\n-        String keyType = properties.get(\"kty\");\n-        switch (keyType) {\n+        switch (key.getKty()) {\n             case \"RSA\":\n-                return tryDecodeRsaKey(keyId, properties);\n+                return tryDecodeRsaKey(key.getKid().get(), key);\n             case \"EC\":\n-                return tryDecodeEcKey(keyId, properties);\n+                return tryDecodeEcKey(key.getKid().get(), key);\n             default:\n                 // ignore non unknown keys\n                 return Optional.empty();\n         }\n     }\n \n-    public static Optional<JwkRsaPublicKey> tryDecodeRsaKey(String keyId, Map<String, String> properties)\n+    public static Optional<JwkRsaPublicKey> tryDecodeRsaKey(String keyId, Key key)\n     {\n         // alg field is optional so not verified\n         // use field is optional so not verified\n \n-        String encodedModulus = properties.get(\"n\");\n-        if (Strings.isNullOrEmpty(encodedModulus)) {\n+        Object encodedModulus = key.getOther().get(\"n\");\n+        if (!(encodedModulus instanceof String)) {\n+            log.error(\"JWK RSA key %s contains invalid value '%s' for modulus field 'n'\", keyId, encodedModulus);\n+            return Optional.empty();\n+        }\n+        if (Strings.isNullOrEmpty((String) encodedModulus)) {\n             log.error(\"JWK RSA key %s does not contain the required modulus field 'n'\", keyId);\n             return Optional.empty();\n         }\n-        String encodedExponent = properties.get(\"e\");\n-        if (Strings.isNullOrEmpty(encodedExponent)) {\n+\n+        Object encodedExponent = key.getOther().get(\"e\");\n+        if (!(encodedExponent instanceof String)) {\n+            log.error(\"JWK RSA key %s contains invalid value '%s' for exponent field 'e'\", keyId, encodedExponent);\n+            return Optional.empty();\n+        }\n+        if (Strings.isNullOrEmpty((String) encodedExponent)) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkxNTgwMg==", "url": "https://github.com/trinodb/trino/pull/6428#discussion_r547915802", "bodyText": "if(key.getKid().map(String::isEmpty).orElse(true)) maybe? I find calculating the boolean from Optional state after filter a bit too convoluted for me.\nActually, why not inlining it?\n    Optional<String> kid = key.getKid().filter(not(String::isEmpty)));\n    switch (key.getKty()) {\n          case \"RSA\":  \n               return kid.map(k -> tryDecodeRsaKey(k, key));\n          case \"EC\":\n               return kid.map(k -> tryDecodeEcKey(k, key))\n          default:\n              // ignore non unknown keys\n              return Optional.empty();\n      }", "author": "s2lomon", "createdAt": "2020-12-23T11:37:29Z", "path": "presto-main/src/main/java/io/prestosql/server/security/jwt/JwkDecoder.java", "diffHunk": "@@ -52,84 +56,104 @@ private JwkDecoder() {}\n                 .collect(toImmutableMap(JwkPublicKey::getKeyId, Function.identity()));\n     }\n \n-    public static Optional<? extends JwkPublicKey> tryDecodeJwkKey(Map<String, String> properties)\n+    public static Optional<? extends JwkPublicKey> tryDecodeJwkKey(Key key)\n     {\n-        String keyId = properties.get(\"kid\");\n-        if (Strings.isNullOrEmpty(keyId)) {\n-            // key id is required to index the key\n+        // key id is required to index the key\n+        if (key.getKid().filter(Predicate.not(String::isEmpty)).isEmpty()) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1MDI2Ng==", "url": "https://github.com/trinodb/trino/pull/6428#discussion_r548050266", "bodyText": "I'm guessing you already tried, but can this be a constructor argument?", "author": "dain", "createdAt": "2020-12-23T16:50:22Z", "path": "presto-main/src/main/java/io/prestosql/server/security/jwt/JwkDecoder.java", "diffHunk": "@@ -259,17 +283,55 @@ public String getFormat()\n \n     public static class Keys\n     {\n-        private final List<Map<String, String>> keys;\n+        private final List<Key> keys;\n \n         @JsonCreator\n-        public Keys(@JsonProperty(\"keys\") List<Map<String, String>> keys)\n+        public Keys(@JsonProperty(\"keys\") List<Key> keys)\n         {\n             this.keys = ImmutableList.copyOf(requireNonNull(keys, \"keys is null\"));\n         }\n \n-        public List<Map<String, String>> getKeys()\n+        public List<Key> getKeys()\n         {\n             return keys;\n         }\n     }\n+\n+    public static class Key\n+    {\n+        private final String kty;\n+        private final Optional<String> kid;\n+        private final Map<String, Object> other = new HashMap<>();\n+\n+        @JsonCreator\n+        public Key(\n+                @JsonProperty(\"kty\") String kty,\n+                @JsonProperty(\"kid\") Optional<String> kid)\n+        {\n+            this.kty = requireNonNull(kty, \"kty is null\");\n+            this.kid = requireNonNull(kid, \"kid is null\");\n+        }\n+\n+        public String getKty()\n+        {\n+            return kty;\n+        }\n+\n+        public Optional<String> getKid()\n+        {\n+            return kid;\n+        }\n+\n+        @JsonAnyGetter\n+        public Map<String, Object> getOther()\n+        {\n+            return other;\n+        }\n+\n+        @JsonAnySetter\n+        public void set(String name, Object value)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIzNDY4NA==", "url": "https://github.com/trinodb/trino/pull/6428#discussion_r548234684", "bodyText": "I looked and couldn't find a way to do this. I think you need to use a factory method if you want the class to be immutable (but that's overkill for this usage)", "author": "electrum", "createdAt": "2020-12-23T21:02:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1MDI2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1MzgzNA==", "url": "https://github.com/trinodb/trino/pull/6428#discussion_r548053834", "bodyText": "I don't think you need this annotation because the class not designed for writing (for example the kty and kid fields don't write)", "author": "dain", "createdAt": "2020-12-23T16:58:57Z", "path": "presto-main/src/main/java/io/prestosql/server/security/jwt/JwkDecoder.java", "diffHunk": "@@ -259,17 +283,55 @@ public String getFormat()\n \n     public static class Keys\n     {\n-        private final List<Map<String, String>> keys;\n+        private final List<Key> keys;\n \n         @JsonCreator\n-        public Keys(@JsonProperty(\"keys\") List<Map<String, String>> keys)\n+        public Keys(@JsonProperty(\"keys\") List<Key> keys)\n         {\n             this.keys = ImmutableList.copyOf(requireNonNull(keys, \"keys is null\"));\n         }\n \n-        public List<Map<String, String>> getKeys()\n+        public List<Key> getKeys()\n         {\n             return keys;\n         }\n     }\n+\n+    public static class Key\n+    {\n+        private final String kty;\n+        private final Optional<String> kid;\n+        private final Map<String, Object> other = new HashMap<>();\n+\n+        @JsonCreator\n+        public Key(\n+                @JsonProperty(\"kty\") String kty,\n+                @JsonProperty(\"kid\") Optional<String> kid)\n+        {\n+            this.kty = requireNonNull(kty, \"kty is null\");\n+            this.kid = requireNonNull(kid, \"kid is null\");\n+        }\n+\n+        public String getKty()\n+        {\n+            return kty;\n+        }\n+\n+        public Optional<String> getKid()\n+        {\n+            return kid;\n+        }\n+\n+        @JsonAnyGetter", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1NTgxOQ==", "url": "https://github.com/trinodb/trino/pull/6428#discussion_r548055819", "bodyText": "It looks like every usage of this is of the form:\nObject encodedY = key.getOther().get(\"y\");\nif (!(encodedY instanceof String)) {\n    log.error(\"something about property being an invalid value\");\n    return Optional.empty();\n}\nif (isNullOrEmpty((String) encodedY)) {\n    log.error(\"something the key not containing a required property\");\n    return Optional.empty();\n}\n\nI just added the extra detailed logging because it was easy.\nI suggest we simplify this code to a method on the getter that tests if the value is a non empty string.  If it is not we return Optional.empty() otherwise we return the value.  Something like:\npublic Optional<String> getStringProperty(String name) {\n    Object value = other.get(name);\n    if (value instanceof String && !((String)value).isEmpty) {\n        return Optional.of(value);\n    }\n    return Optional.empty();\n}", "author": "dain", "createdAt": "2020-12-23T17:04:01Z", "path": "presto-main/src/main/java/io/prestosql/server/security/jwt/JwkDecoder.java", "diffHunk": "@@ -259,17 +283,55 @@ public String getFormat()\n \n     public static class Keys\n     {\n-        private final List<Map<String, String>> keys;\n+        private final List<Key> keys;\n \n         @JsonCreator\n-        public Keys(@JsonProperty(\"keys\") List<Map<String, String>> keys)\n+        public Keys(@JsonProperty(\"keys\") List<Key> keys)\n         {\n             this.keys = ImmutableList.copyOf(requireNonNull(keys, \"keys is null\"));\n         }\n \n-        public List<Map<String, String>> getKeys()\n+        public List<Key> getKeys()\n         {\n             return keys;\n         }\n     }\n+\n+    public static class Key\n+    {\n+        private final String kty;\n+        private final Optional<String> kid;\n+        private final Map<String, Object> other = new HashMap<>();\n+\n+        @JsonCreator\n+        public Key(\n+                @JsonProperty(\"kty\") String kty,\n+                @JsonProperty(\"kid\") Optional<String> kid)\n+        {\n+            this.kty = requireNonNull(kty, \"kty is null\");\n+            this.kid = requireNonNull(kid, \"kid is null\");\n+        }\n+\n+        public String getKty()\n+        {\n+            return kty;\n+        }\n+\n+        public Optional<String> getKid()\n+        {\n+            return kid;\n+        }\n+\n+        @JsonAnyGetter\n+        public Map<String, Object> getOther()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "00414e61c20334b3770e01bb2f3c7fb28e7992aa", "url": "https://github.com/trinodb/trino/commit/00414e61c20334b3770e01bb2f3c7fb28e7992aa", "message": "Support JWK with certificate chain", "committedDate": "2021-01-07T09:47:59Z", "type": "commit"}, {"oid": "00414e61c20334b3770e01bb2f3c7fb28e7992aa", "url": "https://github.com/trinodb/trino/commit/00414e61c20334b3770e01bb2f3c7fb28e7992aa", "message": "Support JWK with certificate chain", "committedDate": "2021-01-07T09:47:59Z", "type": "forcePushed"}]}