{"pr_number": 2949, "pr_title": "Fail parsing dates beyond a representable range", "pr_createdAt": "2020-02-26T08:12:38Z", "pr_url": "https://github.com/trinodb/trino/pull/2949", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMjU3MA==", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384332570", "bodyText": "This should be INVALID_CAST_ARGUMENT as well", "author": "findepi", "createdAt": "2020-02-26T08:21:56Z", "path": "presto-main/src/main/java/io/prestosql/type/DateOperators.java", "diffHunk": "@@ -156,6 +157,9 @@ public static long castFromSlice(@SqlType(\"varchar(x)\") Slice value)\n         catch (IllegalArgumentException e) {\n             throw new PrestoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to date: \" + value.toStringUtf8(), e);\n         }\n+        catch (ArithmeticException e) {\n+            throw new PrestoException(DATE_OUT_OF_RANGE, \"Out of range for Date: \" + value.toStringUtf8(), e);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMjgwMQ==", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384332801", "bodyText": "not needed, use INVALID_CAST_ARGUMENT instead", "author": "findepi", "createdAt": "2020-02-26T08:22:28Z", "path": "presto-spi/src/main/java/io/prestosql/spi/StandardErrorCode.java", "diffHunk": "@@ -106,6 +106,7 @@\n     NULL_TREATMENT_NOT_ALLOWED(83, USER_ERROR),\n     INVALID_ROW_FILTER(84, USER_ERROR),\n     INVALID_COLUMN_MASK(85, USER_ERROR),\n+    DATE_OUT_OF_RANGE(86, USER_ERROR),            // caught by TRY", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMzA1Mw==", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384333053", "bodyText": "What happens if we exceed long range in DateTimeUtils parseDate?", "author": "findepi", "createdAt": "2020-02-26T08:23:08Z", "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "diffHunk": "@@ -251,6 +252,13 @@ public void testIsDistinctFrom()\n         assertFunction(\"DATE '2013-10-27' IS DISTINCT FROM NULL\", BOOLEAN, true);\n     }\n \n+    @Test\n+    public void testDateCastFromVarchar()\n+    {\n+        assertFunction(\"DATE '2013-02-02'\", DATE, toDate(new DateTime(2013, 2, 2, 0, 0, 0, 0, UTC)));\n+        assertInvalidFunction(\"DATE '5881580-07-12'\", DATE_OUT_OF_RANGE, \"Out of range for Date: 5881580-07-12\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzNzEwNg==", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384337106", "bodyText": "It throws INVALID_CAST_ARGUMENT", "author": "Praveen2112", "createdAt": "2020-02-26T08:32:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1MDAxMA==", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384350010", "bodyText": "can you add a test case for this?", "author": "findepi", "createdAt": "2020-02-26T08:58:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMzA1Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxMjg1OQ==", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384412859", "bodyText": "Can you also include a test case when value fails within DATE_FORMATTER.parseMillis(value) method (due to overflow)?", "author": "findepi", "createdAt": "2020-02-26T10:45:39Z", "path": "presto-main/src/test/java/io/prestosql/type/TestDateTimeOperatorsBase.java", "diffHunk": "@@ -251,6 +252,13 @@ public void testIsDistinctFrom()\n         assertFunction(\"DATE '2013-10-27' IS DISTINCT FROM NULL\", BOOLEAN, true);\n     }\n \n+    @Test\n+    public void testDateCastFromVarchar()\n+    {\n+        assertFunction(\"DATE '2013-02-02'\", DATE, toDate(new DateTime(2013, 2, 2, 0, 0, 0, 0, UTC)));\n+        assertInvalidFunction(\"DATE '5881580-07-12'\", INVALID_CAST_ARGUMENT, \"Value cannot be cast to date: 5881580-07-12\");\n+    }", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyODAxOQ==", "url": "https://github.com/trinodb/trino/pull/2949#discussion_r384528019", "bodyText": "have applied it", "author": "Praveen2112", "createdAt": "2020-02-26T14:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxMjg1OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "a2508eb11f42fe8ca5a3baa72ccecd19aa2f8350", "url": "https://github.com/trinodb/trino/commit/a2508eb11f42fe8ca5a3baa72ccecd19aa2f8350", "message": "Fail parsing dates beyond a representable range", "committedDate": "2020-02-27T01:54:42Z", "type": "commit"}, {"oid": "a2508eb11f42fe8ca5a3baa72ccecd19aa2f8350", "url": "https://github.com/trinodb/trino/commit/a2508eb11f42fe8ca5a3baa72ccecd19aa2f8350", "message": "Fail parsing dates beyond a representable range", "committedDate": "2020-02-27T01:54:42Z", "type": "forcePushed"}]}