{"pr_number": 4719, "pr_title": "Product tests environments startup hardening", "pr_createdAt": "2020-08-06T21:05:36Z", "pr_url": "https://github.com/trinodb/trino/pull/4719", "timeline": [{"oid": "d9fa3413e1644dd0f9d4b3d06563698b5edf7b50", "url": "https://github.com/trinodb/trino/commit/d9fa3413e1644dd0f9d4b3d06563698b5edf7b50", "message": "Use unshaded classes", "committedDate": "2020-08-06T19:10:49Z", "type": "commit"}, {"oid": "4a4852e7e66bb611621e7bc9fea0d56e2e5bb863", "url": "https://github.com/trinodb/trino/commit/4a4852e7e66bb611621e7bc9fea0d56e2e5bb863", "message": "Replace deprecated method calls", "committedDate": "2020-08-06T19:13:20Z", "type": "commit"}, {"oid": "6156c4c0b9f1f74b9b3af549935a372658aff6a2", "url": "https://github.com/trinodb/trino/commit/6156c4c0b9f1f74b9b3af549935a372658aff6a2", "message": "Simplify product tests startup order", "committedDate": "2020-08-06T21:08:22Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NjM4NQ==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876385", "bodyText": "Use something more readable than 300000, Maybe MINUTES.of(5).toMillis()?", "author": "kokosing", "createdAt": "2020-08-07T07:42:20Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -129,20 +141,21 @@ public Execution(EnvironmentFactory environmentFactory, PathResolver pathResolve\n             this.testArguments = ImmutableList.copyOf(requireNonNull(testRunOptions.testArguments, \"testOptions.testArguments is null\"));\n             this.environment = requireNonNull(testRunOptions.environment, \"testRunOptions.environment is null\");\n             this.reportsDir = testRunOptions.reportsDir;\n+            this.startupTimeout = requireNonNull(testRunOptions.startupTimeout, \"testRunOptions.startupTimeout is null\");\n+            this.startupRetries = testRunOptions.startupRetries;\n         }\n \n         @Override\n         public void run()\n         {\n             try (UncheckedCloseable ignore = this::cleanUp) {\n-                log.info(\"Pruning old environment(s)\");\n-                Environments.pruneEnvironment();\n-\n-                Environment environment = getEnvironment();\n-\n-                log.info(\"Starting the environment '%s'\", environment);\n-                environment.start();\n-                log.info(\"Environment '%s' started\", environment);\n+                Environment environment = Failsafe.with(new RetryPolicy<>()\n+                        .withMaxRetries(startupRetries)\n+                        .withBackoff(100, 300000, ChronoUnit.MILLIS) // exponential backoff from 100 ms to 5 min", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NjU4NA==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876584", "bodyText": "Don't you need to setup max duration for failsafe?", "author": "kokosing", "createdAt": "2020-08-07T07:42:43Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -129,20 +141,21 @@ public Execution(EnvironmentFactory environmentFactory, PathResolver pathResolve\n             this.testArguments = ImmutableList.copyOf(requireNonNull(testRunOptions.testArguments, \"testOptions.testArguments is null\"));\n             this.environment = requireNonNull(testRunOptions.environment, \"testRunOptions.environment is null\");\n             this.reportsDir = testRunOptions.reportsDir;\n+            this.startupTimeout = requireNonNull(testRunOptions.startupTimeout, \"testRunOptions.startupTimeout is null\");\n+            this.startupRetries = testRunOptions.startupRetries;\n         }\n \n         @Override\n         public void run()\n         {\n             try (UncheckedCloseable ignore = this::cleanUp) {\n-                log.info(\"Pruning old environment(s)\");\n-                Environments.pruneEnvironment();\n-\n-                Environment environment = getEnvironment();\n-\n-                log.info(\"Starting the environment '%s'\", environment);\n-                environment.start();\n-                log.info(\"Environment '%s' started\", environment);\n+                Environment environment = Failsafe.with(new RetryPolicy<>()\n+                        .withMaxRetries(startupRetries)\n+                        .withBackoff(100, 300000, ChronoUnit.MILLIS) // exponential backoff from 100 ms to 5 min\n+                        .onFailedAttempt(event -> log.warn(\"Could not start environment '%s': %s\", this.environment, event.getLastFailure()))\n+                        .onRetry(event -> log.info(\"Trying to start environment '%s', %d failed attempt(s)\", this.environment, event.getAttemptCount() + 1))\n+                        .onSuccess(event -> log.info(\"Environment '%s' started in %s, %d attempt(s)\", this.environment, event.getElapsedTime(), event.getAttemptCount())))\n+                        .get(() -> tryStartEnvironment(startupTimeout));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5NTg4OQ==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466895889", "bodyText": "Not exactly. I have several attempts + timeout for a single startup. I'll add max duration to the failsafe as well", "author": "wendigo", "createdAt": "2020-08-07T08:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NjU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3Njc0NA==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876744", "bodyText": "Extract retry policy as variable", "author": "kokosing", "createdAt": "2020-08-07T07:43:02Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -129,20 +141,21 @@ public Execution(EnvironmentFactory environmentFactory, PathResolver pathResolve\n             this.testArguments = ImmutableList.copyOf(requireNonNull(testRunOptions.testArguments, \"testOptions.testArguments is null\"));\n             this.environment = requireNonNull(testRunOptions.environment, \"testRunOptions.environment is null\");\n             this.reportsDir = testRunOptions.reportsDir;\n+            this.startupTimeout = requireNonNull(testRunOptions.startupTimeout, \"testRunOptions.startupTimeout is null\");\n+            this.startupRetries = testRunOptions.startupRetries;\n         }\n \n         @Override\n         public void run()\n         {\n             try (UncheckedCloseable ignore = this::cleanUp) {\n-                log.info(\"Pruning old environment(s)\");\n-                Environments.pruneEnvironment();\n-\n-                Environment environment = getEnvironment();\n-\n-                log.info(\"Starting the environment '%s'\", environment);\n-                environment.start();\n-                log.info(\"Environment '%s' started\", environment);\n+                Environment environment = Failsafe.with(new RetryPolicy<>()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NjkwNQ==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466876905", "bodyText": "undo", "author": "kokosing", "createdAt": "2020-08-07T07:43:23Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -179,15 +204,14 @@ private Environment getEnvironment()\n                         // the test jar is hundreds MB and file system bind is much more efficient\n                         .withFileSystemBind(pathResolver.resolvePlaceholders(testJar).getPath(), \"/docker/test.jar\", READ_ONLY)\n                         .withCommand(ImmutableList.<String>builder()\n-                                .add(\n-                                        \"/usr/lib/jvm/zulu-11/bin/java\",\n-                                        \"-Xmx1g\",\n-                                        // Force Parallel GC to ensure MaxHeapFreeRatio is respected\n-                                        \"-XX:+UseParallelGC\",\n-                                        \"-XX:MinHeapFreeRatio=10\",\n-                                        \"-XX:MaxHeapFreeRatio=10\",\n-                                        \"-Djava.util.logging.config.file=/docker/presto-product-tests/conf/tempto/logging.properties\",\n-                                        \"-Duser.timezone=Asia/Kathmandu\")\n+                                .add(\"/usr/lib/jvm/zulu-11/bin/java\",", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NzIxMA==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466877210", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    catch (ExecutionException e) {\n          \n          \n            \n                    catch (ExecutionException | TimeoutException e) {", "author": "kokosing", "createdAt": "2020-08-07T07:43:59Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -67,6 +70,9 @@ public void start()\n         catch (ExecutionException e) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "123cdc472299c0088fa604b0cec7daed9a558dd2", "url": "https://github.com/trinodb/trino/commit/123cdc472299c0088fa604b0cec7daed9a558dd2", "message": "Try starting test environment multiple times before failing", "committedDate": "2020-08-07T08:43:20Z", "type": "commit"}, {"oid": "14b7b939d3959d8a7985bde23c7eb00b727c50b9", "url": "https://github.com/trinodb/trino/commit/14b7b939d3959d8a7985bde23c7eb00b727c50b9", "message": "Wait for tests to start before marking environment as running", "committedDate": "2020-08-07T09:00:58Z", "type": "commit"}, {"oid": "14b7b939d3959d8a7985bde23c7eb00b727c50b9", "url": "https://github.com/trinodb/trino/commit/14b7b939d3959d8a7985bde23c7eb00b727c50b9", "message": "Wait for tests to start before marking environment as running", "committedDate": "2020-08-07T09:00:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2MTkzNg==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r466961936", "bodyText": "I would inline these, they are used in single place.", "author": "kokosing", "createdAt": "2020-08-07T10:39:50Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -110,13 +121,20 @@ public Module toModule()\n     {\n         private static final String CONTAINER_REPORTS_DIR = \"/docker/test-reports\";\n \n+        // CI steps fail after 2h, starting environment should not take more than 30m\n+        private static final long TEST_RUN_STARTUP_TIMEOUT = Duration.valueOf(\"30m\").toMillis();\n+        private static final long BACKOFF_MIN = 100L;\n+        private static final long BACKOFF_MAX = Duration.valueOf(\"5m\").toMillis();", "originalCommit": "123cdc472299c0088fa604b0cec7daed9a558dd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MjU1OQ==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467272559", "bodyText": "5m is too little and env up should have the same timeout (currently env up has 10m and this has 5m).\nbut, Idk why we need a startup timeout now, that we didn't before. Did you experience startup freeze?\nhow often does it happen?", "author": "findepi", "createdAt": "2020-08-07T21:17:03Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -94,6 +99,12 @@ public void run()\n         @Option(name = \"--reports-dir\", title = \"reports dir\", description = \"location of the reports directory\")\n         public String reportsDir;\n \n+        @Option(name = \"--startup-timeout\", title = \"startup timeout\", description = \"environment startup timeout\")\n+        public Duration startupTimeout = Duration.valueOf(\"5m\");", "originalCommit": "123cdc472299c0088fa604b0cec7daed9a558dd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwNzI5NA==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467307294", "bodyText": "5 min is enough for every environment that we use. I agree that test run and env up should have the same timeout. I'll open followup PR", "author": "wendigo", "createdAt": "2020-08-07T22:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MjU1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwNTU2Ng==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467505566", "bodyText": "it's not, if you factor in image downloads.\nespecially that this can be run on GHA, but also locally.\n10 or even 15m would feel much safer", "author": "findepi", "createdAt": "2020-08-08T21:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MjU1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwNTY4Ng==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467505686", "bodyText": "in fact, i'd rather not have a timeout on individual attempt, until this is proven necessary.\ni don't remember seeing a startup hang", "author": "findepi", "createdAt": "2020-08-08T21:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MjU1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3Mjk2OQ==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467272969", "bodyText": "5m is very generous. What backoff is supposed to help with?\nSupposedly we're the only player in the system.", "author": "findepi", "createdAt": "2020-08-07T21:18:24Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -110,13 +121,20 @@ public Module toModule()\n     {\n         private static final String CONTAINER_REPORTS_DIR = \"/docker/test-reports\";\n \n+        // CI steps fail after 2h, starting environment should not take more than 30m\n+        private static final long TEST_RUN_STARTUP_TIMEOUT = Duration.valueOf(\"30m\").toMillis();\n+        private static final long BACKOFF_MIN = 100L;\n+        private static final long BACKOFF_MAX = Duration.valueOf(\"5m\").toMillis();", "originalCommit": "123cdc472299c0088fa604b0cec7daed9a558dd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwNzkzNA==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467307934", "bodyText": "This backoff is only to put some delay between retries. As delay doubles on every retry it won't reach 5 minutes in default configuration.", "author": "wendigo", "createdAt": "2020-08-07T22:11:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3Mjk2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MzQ4OQ==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467273489", "bodyText": "Please add a code comment why we want to do so.", "author": "findepi", "createdAt": "2020-08-07T21:19:49Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -234,7 +235,8 @@ private Environment getEnvironment()\n                                                 .build()))\n                                 .addAll(testArguments)\n                                 .addAll(reportsDirOptions(reportsDir))\n-                                .build().toArray(new String[0]));\n+                                .build().toArray(new String[0]))\n+                        .waitingFor(new LogMessageWaitStrategy().withRegEx(\".*\\\\[TestNG] Running.*\"));", "originalCommit": "14b7b939d3959d8a7985bde23c7eb00b727c50b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwODA3OA==", "url": "https://github.com/trinodb/trino/pull/4719#discussion_r467308078", "bodyText": "Sure. I'll open up followup PR", "author": "wendigo", "createdAt": "2020-08-07T22:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI3MzQ4OQ=="}], "type": "inlineReview"}]}