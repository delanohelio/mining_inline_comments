{"pr_number": 4551, "pr_title": "Update Rubix version to 0.3.16", "pr_createdAt": "2020-07-23T16:01:04Z", "pr_url": "https://github.com/trinodb/trino/pull/4551", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzOTIxMQ==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r459839211", "bodyText": "Test was looking at request counts earlier, \"Cached_rrc_requests\" would give those here. \"MB_read_from_cache\" might be zero if tests read very small data", "author": "shubhamtagra", "createdAt": "2020-07-24T03:47:02Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/rubix/TestRubixCaching.java", "diffHunk": "@@ -564,7 +564,7 @@ private long getRemoteReadsCount()\n     private long getCachedReadsCount()\n     {\n         try {\n-            return (long) BEAN_SERVER.getAttribute(new ObjectName(\"rubix:name=stats,catalog=catalog\"), \"CachedReads\");\n+            return (long) BEAN_SERVER.getAttribute(new ObjectName(\"rubix:name=stats,catalog=catalog\"), \"MB_read_from_cache\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg0MDgzNw==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r459840837", "bodyText": "we should use \"Remote_rrc_requests\" + \"Direct_rrc_requests\" instead of dataSize\nAlso, \"MB_read_from_source\" includes data read from source for async mode (via direct-reads size)", "author": "shubhamtagra", "createdAt": "2020-07-24T03:56:19Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/rubix/TestRubixCaching.java", "diffHunk": "@@ -554,7 +552,9 @@ private Path getStoragePath(String path)\n     private long getRemoteReadsCount()\n     {\n         try {\n-            return (long) BEAN_SERVER.getAttribute(new ObjectName(\"rubix:name=stats,catalog=catalog\"), \"RemoteReads\");\n+            long remoteReadsReadThrough = (long) BEAN_SERVER.getAttribute(new ObjectName(\"rubix:name=stats,catalog=catalog\"), \"MB_read_from_source\"); // updated in READ-THROUGH mode", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg0MTIyMg==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r459841222", "bodyText": "this is fine but existing one would have continued to work", "author": "shubhamtagra", "createdAt": "2020-07-24T03:58:40Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/rubix/TestRubixCaching.java", "diffHunk": "@@ -578,7 +578,7 @@ private long getAsyncDownloadedMb(ReadMode readMode)\n         }\n \n         try {\n-            return (long) BEAN_SERVER.getAttribute(new ObjectName(\"metrics:name=rubix.bookkeeper.count.async_downloaded_mb\"), \"Count\");\n+            return (long) BEAN_SERVER.getAttribute(new ObjectName(\"rubix:name=stats,type=detailed,catalog=catalog\"), \"BKS_data_downloaded_in_parallel_warmup\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg0MTQyNQ==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r459841425", "bodyText": "here too requestCounts are now replaced by dataSizes", "author": "shubhamtagra", "createdAt": "2020-07-24T03:59:52Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveCaching.java", "diffHunk": "@@ -121,8 +136,11 @@ private void testReadFromTable(String tableNameSuffix)\n \n     private QueryResult getCacheStats()\n     {\n-        return query(\"SELECT sum(cachedreads) as cachedreads, sum(remotereads) as remotereads, sum(nonlocalreads) as nonlocalreads FROM \" +\n-                \"jmx.current.\\\"rubix:catalog=hive,name=stats\\\"\");\n+        return query(\"SELECT \" +\n+                \"  sum(mb_read_from_cache) as cachedreads, \" +", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzE5Mw==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r459913193", "bodyText": "I think we would get empty QueryResult for stats when FS is not yet initialised. We could handle that case and return 0 from getRemoteReads and other methods to avoid running queries to warmup.", "author": "shubhamtagra", "createdAt": "2020-07-24T08:15:37Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveCaching.java", "diffHunk": "@@ -95,6 +98,18 @@ private void testReadFromTable(String tableNameSuffix)\n         query(\"DROP TABLE \" + nonCachedTableName);\n     }\n \n+    private void initializeRubixStats()\n+    {\n+        // TODO this is needed for now because Rubix JMX statistis are only registered lazily", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzMDE4Ng==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r459930186", "bodyText": "Actually the queries fail as the table does not have expected columns yet. We can work around that in test, reacting for query failure. But I think proper fix would be on Rubix side. So all the jmx stats are registered as soon as Rubix is started up.", "author": "losipiuk", "createdAt": "2020-07-24T08:53:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4NDM1Mw==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r459984353", "bodyText": "Lazy initialisation of stats in Rubix came out of a requirement. We now return stats from Rubix daemons too and needed Configuration object to talk to those daemons.\nFor embedded mode, one way could be Presto passes the Configuration object in setLocalBookKeeper call (change needed on Rubix side) and Rubix initialises stats using this.", "author": "shubhamtagra", "createdAt": "2020-07-24T10:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAxMjc5OQ==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r460012799", "bodyText": "PR idea qubole/rubix#434", "author": "losipiuk", "createdAt": "2020-07-24T12:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzE5Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2MzY5NQ==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r460763695", "bodyText": "This can lead to imx query failures as DummyBookKeeper is used when hive.cache.start-server-on-coordinator=false which is the default value. Better return an empty map here.", "author": "shubhamtagra", "createdAt": "2020-07-27T09:29:12Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/DummyBookKeeper.java", "diffHunk": "@@ -44,7 +45,14 @@ public void setAllCached(String remotePath, long fileLength, long lastModified,\n     }\n \n     @Override\n-    public boolean readData(String remotePath, long offset, int length, long fileSize, long lastModified, int clusterType)\n+    public Map<String, Long> getReadRequestChainStats()\n+            throws TException\n+    {\n+        throw new UnsupportedOperationException();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2MzcxMQ==", "url": "https://github.com/trinodb/trino/pull/4551#discussion_r462563711", "bodyText": "Interestingly, product tests seem to pass. I think com.qubole.rubix.core.ReadRequestChainStats#getBookKeeperStats is resilient for that case", "author": "sopel39", "createdAt": "2020-07-29T20:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2MzY5NQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "8365af12cd59b9d4f7c6d227ef27a657f4ad0678", "url": "https://github.com/trinodb/trino/commit/8365af12cd59b9d4f7c6d227ef27a657f4ad0678", "message": "Update Rubix version to 0.3.16\n\nNew version is a bugfix release. Among other it includes fix for\nhttps://github.com/prestosql/presto/issues/3580", "committedDate": "2020-08-14T13:02:04Z", "type": "commit"}, {"oid": "8365af12cd59b9d4f7c6d227ef27a657f4ad0678", "url": "https://github.com/trinodb/trino/commit/8365af12cd59b9d4f7c6d227ef27a657f4ad0678", "message": "Update Rubix version to 0.3.16\n\nNew version is a bugfix release. Among other it includes fix for\nhttps://github.com/prestosql/presto/issues/3580", "committedDate": "2020-08-14T13:02:04Z", "type": "forcePushed"}]}