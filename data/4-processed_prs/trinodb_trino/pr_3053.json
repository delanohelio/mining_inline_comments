{"pr_number": 3053, "pr_title": "Disable incorrect pushdown in Mongo connector", "pr_createdAt": "2020-03-10T09:16:58Z", "pr_url": "https://github.com/trinodb/trino/pull/3053", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "819ffe733d57c457949ba4131a29a3570946b4d0", "url": "https://github.com/trinodb/trino/commit/819ffe733d57c457949ba4131a29a3570946b4d0", "message": "Start MongoQueryRunner on 8080", "committedDate": "2020-03-14T20:11:32Z", "type": "commit"}, {"oid": "d1ef2abe36311f471cdfe87025167841f95ed296", "url": "https://github.com/trinodb/trino/commit/d1ef2abe36311f471cdfe87025167841f95ed296", "message": "Fix types in test\n\nCOL1 is of type BIGINT, so should not be used with varchar-typed domain.\nAdd another varchar column.", "committedDate": "2020-03-14T20:11:33Z", "type": "commit"}, {"oid": "c7d22498a655be911a9fee6beb801ad7d46bb6c0", "url": "https://github.com/trinodb/trino/commit/c7d22498a655be911a9fee6beb801ad7d46bb6c0", "message": "Fix Mongo type mappings", "committedDate": "2020-03-14T20:11:34Z", "type": "commit"}, {"oid": "c8e55be9596e8d32911d9eb1020c0c2c94d62406", "url": "https://github.com/trinodb/trino/commit/c8e55be9596e8d32911d9eb1020c0c2c94d62406", "message": "Disable incorrect pushdown in Mongo connector", "committedDate": "2020-03-14T20:11:35Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMTk2Mg==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392701962", "bodyText": "I think you might want to use io.prestosql.testing.sql.TestTable.randomTableSuffix. Sometimes ATDQ is run in parallel for some connectors with several different configurations and then such test becomes flaky due table name conflict.", "author": "kokosing", "createdAt": "2020-03-15T18:59:10Z", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1169,4 +1178,152 @@ public void testInsertForDefaultColumn()\n     }\n \n     protected abstract TestTable createTableWithDefaultColumns();\n+\n+    @Test(dataProvider = \"testDataMappingSmokeTestDataProvider\")\n+    public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n+    {\n+        String prestoTypeName = dataMappingTestSetup.getPrestoTypeName();\n+        String sampleValueLiteral = dataMappingTestSetup.getSampleValueLiteral();\n+        String highValueLiteral = dataMappingTestSetup.getHighValueLiteral();\n+\n+        String tableName = \"test_data_mapping_smoke_test_\" + prestoTypeName.replaceAll(\"[^a-zA-Z0-9]\", \"_\");\n+\n+        Runnable setup = () -> {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxNzI2Mg==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392717262", "bodyText": "Done", "author": "findepi", "createdAt": "2020-03-15T22:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMTk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjI2Mw==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392702263", "bodyText": "s/setup::run/setup?", "author": "kokosing", "createdAt": "2020-03-15T19:02:48Z", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1169,4 +1178,152 @@ public void testInsertForDefaultColumn()\n     }\n \n     protected abstract TestTable createTableWithDefaultColumns();\n+\n+    @Test(dataProvider = \"testDataMappingSmokeTestDataProvider\")\n+    public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n+    {\n+        String prestoTypeName = dataMappingTestSetup.getPrestoTypeName();\n+        String sampleValueLiteral = dataMappingTestSetup.getSampleValueLiteral();\n+        String highValueLiteral = dataMappingTestSetup.getHighValueLiteral();\n+\n+        String tableName = \"test_data_mapping_smoke_test_\" + prestoTypeName.replaceAll(\"[^a-zA-Z0-9]\", \"_\");\n+\n+        Runnable setup = () -> {\n+            String createTable = format(\"CREATE TABLE %s(id bigint, value %s)\", tableName, prestoTypeName);\n+            assertUpdate(createTable);\n+            assertUpdate(\n+                    format(\"INSERT INTO %s VALUES (10000, NULL), (10001, %s), (99999, %s)\", tableName, sampleValueLiteral, highValueLiteral),\n+                    3);\n+        };\n+        if (dataMappingTestSetup.isUnsupportedType()) {\n+            String typeNameBase = prestoTypeName.replaceFirst(\"\\\\(.*\", \"\");\n+            String expectedMessagePart = format(\"(%1$s.*not (yet )?supported)|((?i)unsupported.*%1$s)|((?i)not supported.*%1$s)\", Pattern.quote(typeNameBase));\n+            assertThatThrownBy(setup::run)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxNzMwMg==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392717302", "bodyText": "ThrowingCallable is not assignable from Runnable", "author": "findepi", "createdAt": "2020-03-15T22:02:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjM0MA==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392702340", "bodyText": "10000 -> 1, 10001 -> 2, 99999 -> 3", "author": "kokosing", "createdAt": "2020-03-15T19:03:41Z", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1169,4 +1178,152 @@ public void testInsertForDefaultColumn()\n     }\n \n     protected abstract TestTable createTableWithDefaultColumns();\n+\n+    @Test(dataProvider = \"testDataMappingSmokeTestDataProvider\")\n+    public void testDataMappingSmokeTest(DataMappingTestSetup dataMappingTestSetup)\n+    {\n+        String prestoTypeName = dataMappingTestSetup.getPrestoTypeName();\n+        String sampleValueLiteral = dataMappingTestSetup.getSampleValueLiteral();\n+        String highValueLiteral = dataMappingTestSetup.getHighValueLiteral();\n+\n+        String tableName = \"test_data_mapping_smoke_test_\" + prestoTypeName.replaceAll(\"[^a-zA-Z0-9]\", \"_\");\n+\n+        Runnable setup = () -> {\n+            String createTable = format(\"CREATE TABLE %s(id bigint, value %s)\", tableName, prestoTypeName);\n+            assertUpdate(createTable);\n+            assertUpdate(\n+                    format(\"INSERT INTO %s VALUES (10000, NULL), (10001, %s), (99999, %s)\", tableName, sampleValueLiteral, highValueLiteral),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxNzMyOQ==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392717329", "bodyText": "Why?", "author": "findepi", "createdAt": "2020-03-15T22:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgwMTU4NQ==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392801585", "bodyText": "That way it is a bit easier. It is just nit.", "author": "kokosing", "createdAt": "2020-03-16T06:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0MjMwNQ==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392842305", "bodyText": "IMO contrary -- 10001 or 99999 are easier to find than 1,2", "author": "findepi", "createdAt": "2020-03-16T08:08:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0NjIwNA==", "url": "https://github.com/trinodb/trino/pull/3053#discussion_r392846204", "bodyText": "This depends on what you are optimizing for.", "author": "kokosing", "createdAt": "2020-03-16T08:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjM0MA=="}], "type": "inlineReview"}, {"oid": "9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "url": "https://github.com/trinodb/trino/commit/9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "message": "Add generic data type & pushdown test", "committedDate": "2020-03-16T08:07:11Z", "type": "commit"}, {"oid": "9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "url": "https://github.com/trinodb/trino/commit/9b59e1cf8dee14ad6b3eb8c1fee1ff547139a309", "message": "Add generic data type & pushdown test", "committedDate": "2020-03-16T08:07:11Z", "type": "forcePushed"}]}