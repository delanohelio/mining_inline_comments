{"pr_number": 6302, "pr_title": "Validate connection-url format for JDBC connectors", "pr_createdAt": "2020-12-11T13:05:13Z", "pr_url": "https://github.com/trinodb/trino/pull/6302", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r540966726", "bodyText": "Are we sure this is really sattisfied by all databases? I would rather not break someones deployment by over-strict validation.", "author": "losipiuk", "createdAt": "2020-12-11T14:00:37Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkyNjE0OQ==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541926149", "bodyText": "Per JDBC 4.3 spec: 9.4 The DriverManager Class section", "author": "wendigo", "createdAt": "2020-12-13T13:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwMjI0Mg==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542202242", "bodyText": "@wendigo  are you convinced all drivers adhere to JDBC specification?", "author": "findepi", "createdAt": "2020-12-14T08:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyNDM3NQ==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542324375", "bodyText": "I can go through every JDBC connector that we use.", "author": "wendigo", "createdAt": "2020-12-14T11:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyOTk1MQ==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542329951", "bodyText": "Driver\nPrefix\n\n\n\n\nMysql\njdbc:mysql:// jdbc:mysql:mxj:// jdbc:mysql:loadbalance:// jdbc:mysql:replication://\n\n\nH2\njdbc:h2:\n\n\nPostgreSQL\njdbc:postgresql:\n\n\nHive\njdbc:hive2://\n\n\nOracle\njdbc:oracle:\n\n\nPhoenix\njdbc:phoenix:\n\n\nSQL Server\njdbc:sqlserver://\n\n\nApache Calcite\njdbc:calcite:\n\n\nApache dbcp2\njdbc:apache:commons:dbcp:", "author": "wendigo", "createdAt": "2020-12-14T11:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk2NjcyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NzY0MA==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541087640", "bodyText": "This should be done with a regex validator", "author": "findepi", "createdAt": "2020-12-11T16:54:45Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkyNjIwNw==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541926207", "bodyText": "Why? Please elaborate", "author": "wendigo", "createdAt": "2020-12-13T13:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4NzY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4ODA0OA==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541088048", "bodyText": "I do not know whether this is safe to assume. Looks reasonable, but let's not add this without more testing.", "author": "findepi", "createdAt": "2020-12-11T16:55:21Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +51,23 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue\n+    public boolean isConnectionUrlValid()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        if (!connectionUrl.startsWith(\"jdbc:\")) {\n+            return false;\n+        }\n+\n+        try {\n+            URI.create(connectionUrl.substring(5));\n+            return true;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkyNjI1Mw==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r541926253", "bodyText": "Please look at https://github.com/prestosql/presto/pull/6302/files#r541926149", "author": "wendigo", "createdAt": "2020-12-13T13:31:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4ODA0OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3MzcyNw==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542173727", "bodyText": "Use @javax.validation.constraints.Pattern", "author": "findepi", "createdAt": "2020-12-14T07:49:07Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +50,18 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue(message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Mzg5Mw==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542173893", "bodyText": ".* doesn't match everything. While new lines are probably invalid, let's not validate that. you can use (?s:.*) to match everything, or you can use javax.validation.constraints.Pattern(flag=...) for that\nthe braces are redundant\nthe ? is redundant\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (connectionUrl.matches(\"^jdbc:([a-zA-Z0-9]+):.*?$\")) {\n          \n          \n            \n                    if (connectionUrl.matches(\"^jdbc:[a-zA-Z0-9]+:(?s:.*)$\")) {", "author": "findepi", "createdAt": "2020-12-14T07:49:27Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -49,6 +50,18 @@ public BaseJdbcConfig setConnectionUrl(String connectionUrl)\n         return this;\n     }\n \n+    @AssertTrue(message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")\n+    public boolean isConnectionUrlValidJdbcUri()\n+    {\n+        String connectionUrl = getConnectionUrl();\n+        // Per JDBC 4.3 section 9.4 JDBC url must follow format jdbc:<protocol>:<subname>\n+        if (connectionUrl.matches(\"^jdbc:([a-zA-Z0-9]+):.*?$\")) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542355993", "bodyText": "I didn't know about the case insensitivity.  Also, it feels like not needed, since it matters for jdbc prefix only, but whatever.\nWhat about using a shorter pattern, like:\njdbc:(?:.*)\n\ni intentionally omitted the subprotocol part\nalso, the ^ and $ are not required, as pattern is matched\nthen you can also omit the message, as the auto-generated one should be usable (is it?)", "author": "findepi", "createdAt": "2020-12-14T12:46:41Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: has not jdbc:<subprotocol>:<subname> format.\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc2ODExOA==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542768118", "bodyText": "This will accept url jdbc: which is invalid from the spec perspective.", "author": "wendigo", "createdAt": "2020-12-14T20:49:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc2ODQ5OA==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542768498", "bodyText": "I've adjusted message to include regexp and wording from original Pattern message", "author": "wendigo", "createdAt": "2020-12-14T20:49:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4MTIwMw==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542781203", "bodyText": "nice, i didnt know you can do {regex}\nAnd what would happen if you do not specify message at all?\nI remember i didn't have to do into some other project, but maybe there was something extra done there", "author": "findepi", "createdAt": "2020-12-14T21:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4NTgxNA==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r542785814", "bodyText": "The default message will be used which is {javax.validation.constraints.Pattern.message} which interpolates to must match the following regular expression: {regexp}", "author": "wendigo", "createdAt": "2020-12-14T21:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTk5Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwODI3MQ==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r543108271", "bodyText": "The default message is good enough:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: must match the following regular expression {regexp}\")\n          \n          \n            \n                @Pattern(regexp = \"jdbc:[a-z0-9]+:(?s:.*)\", flags = CASE_INSENSITIVE)", "author": "findepi", "createdAt": "2020-12-15T07:30:36Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/BaseJdbcConfig.java", "diffHunk": "@@ -37,6 +39,8 @@\n     private boolean cacheMissing;\n \n     @NotNull\n+    // Some drivers match case insensitive in Driver.acceptURL\n+    @Pattern(regexp = \"^jdbc:[a-z0-9]+:(?s:.*)$\", flags = CASE_INSENSITIVE, message = \"Invalid JDBC URL: must match the following regular expression {regexp}\")", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwODQ1OA==", "url": "https://github.com/trinodb/trino/pull/6302#discussion_r543108458", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .hasMessageContaining(\"Invalid JDBC URL: must match the following regular expression ^jdbc:[a-z0-9]+:(?s:.*)$\");\n          \n          \n            \n                            .hasMessageContaining(\"Invalid configuration property connection-url: must match the following regular expression: jdbc:[a-z0-9]+:(?s:.*)\");", "author": "findepi", "createdAt": "2020-12-15T07:31:00Z", "path": "presto-base-jdbc/src/test/java/io/prestosql/plugin/jdbc/TestBaseJdbcConfig.java", "diffHunk": "@@ -65,4 +67,21 @@ public void testExplicitPropertyMappings()\n \n         assertEquals(expected.getJdbcTypesMappedToVarchar(), ImmutableSet.of(\"mytype\", \"struct_type1\"));\n     }\n+\n+    @Test\n+    public void testConnectionUrlIsValid()\n+    {\n+        assertThatThrownBy(() -> buildConfig(ImmutableMap.of(\"connection-url\", \"jdbc:\")))\n+                .hasMessageContaining(\"Invalid JDBC URL: must match the following regular expression ^jdbc:[a-z0-9]+:(?s:.*)$\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "url": "https://github.com/trinodb/trino/commit/988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "message": "Validate connection-url format for JDBC connectors", "committedDate": "2020-12-15T13:25:19Z", "type": "commit"}, {"oid": "988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "url": "https://github.com/trinodb/trino/commit/988fbfefb02a9eb5d93cb5669c2a5b5f6b79355f", "message": "Validate connection-url format for JDBC connectors", "committedDate": "2020-12-15T13:25:19Z", "type": "forcePushed"}]}