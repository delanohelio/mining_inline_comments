{"pr_number": 5248, "pr_title": "Simplify dynamic filter matching in plans", "pr_createdAt": "2020-09-21T19:20:39Z", "pr_url": "https://github.com/trinodb/trino/pull/5248", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwOTAyNw==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r492609027", "bodyText": "testNestedDynamicFiltersRemoval supposedly tests that the filter got removed\nbut, with anyTree here, we can't really know, can we?", "author": "findepi", "createdAt": "2020-09-22T09:50:03Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -254,8 +261,8 @@ public void testNestedDynamicFiltersRemoval()\n                                 INNER,\n                                 ImmutableList.of(equiJoinClause(\"ORDERS_CK\", \"ORDERS_CK6\")),\n                                 ImmutableMap.of(\"ORDERS_CK\", \"ORDERS_CK6\"),\n-                                Optional.empty(),\n-                                tableScan(\"orders\", ImmutableMap.of(\"ORDERS_CK\", \"clerk\")),\n+                                anyTree(", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgxNjEzMw==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r492816133", "bodyText": "In JoinMatcher#matchDynamicFilters we perform a traversal on left side of join looking for dynamic filters in FilterNode. So in all the tests in this file even though anyTree is given on probe side, matchDynamicFilters should fail when expectations around presence of dynamic filter are violated.\nBut if it's clearer to explicitly check for FilterNode, I'll make the change to add that.", "author": "raunaqmorarka", "createdAt": "2020-09-22T15:11:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwOTAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMjg4Nw==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r492612887", "bodyText": "Could we collect Symbol -> DynamicFilterId mapping instead (like actualSymbolToFilterId)? That would correspond to direction from expectedDynamicFilterAliases and won't require multimap", "author": "sopel39", "createdAt": "2020-09-22T09:56:46Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/assertions/JoinMatcher.java", "diffHunk": "@@ -116,11 +131,48 @@ public MatchResult detailMatches(PlanNode node, StatsProvider stats, Session ses\n             return NO_MATCH;\n         }\n \n-        if (dynamicFilter.isPresent() && !dynamicFilter.get().match(joinNode, symbolAliases).isMatch()) {\n-            return NO_MATCH;\n+        return new MatchResult(matchDynamicFilters(joinNode, symbolAliases));\n+    }\n+\n+    private boolean matchDynamicFilters(JoinNode joinNode, SymbolAliases symbolAliases)\n+    {\n+        if (expectedDynamicFilterAliases.isEmpty()) {\n+            return true;\n+        }\n+        Set<DynamicFilterId> dynamicFilterIds = joinNode.getDynamicFilters().keySet();\n+        Multimap<DynamicFilterId, Symbol> idToProbeSymbolMultiMap = searchFrom(joinNode.getLeft())", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4MjM5OQ==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r493382399", "bodyText": "Yes, that's cleaner approach, I've made this change now", "author": "raunaqmorarka", "createdAt": "2020-09-23T09:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMjg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMDYxMQ==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r492630611", "bodyText": "I think this test requires some comment. As I read it now, I'm not sure what nested DF this test is about.", "author": "sopel39", "createdAt": "2020-09-22T10:30:07Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -254,8 +261,8 @@ public void testNestedDynamicFiltersRemoval()\n                                 INNER,\n                                 ImmutableList.of(equiJoinClause(\"ORDERS_CK\", \"ORDERS_CK6\")),\n                                 ImmutableMap.of(\"ORDERS_CK\", \"ORDERS_CK6\"),\n-                                Optional.empty(),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM5MTI3NA==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r493391274", "bodyText": "This was done to fix #2355\nWe made changes to remove DFs which became part of nested expressions due to predicate pushdown.", "author": "raunaqmorarka", "createdAt": "2020-09-23T09:53:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMDYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MzA4Mg==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r493443082", "bodyText": "How does it become part of nested expression? I don't see this.", "author": "sopel39", "createdAt": "2020-09-23T10:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMDYxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMjMzMQ==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r492632331", "bodyText": "nit: we could use DynamicFilters#createDynamicFilterExpression as in  TestRemoveUnsupportedDynamicFilters#testDynamicFilterConsumedOnBuildSide to be little more explicit\nAt least please validate that there is filter node above table scan", "author": "sopel39", "createdAt": "2020-09-22T10:33:29Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -101,8 +103,8 @@ public void testJoin()\n                                 INNER,\n                                 ImmutableList.of(equiJoinClause(\"ORDERS_OK\", \"LINEITEM_OK\")),\n                                 ImmutableMap.of(\"ORDERS_OK\", \"LINEITEM_OK\"),\n-                                Optional.empty(),\n-                                tableScan(\"orders\", ImmutableMap.of(\"ORDERS_OK\", \"orderkey\")),\n+                                anyTree(", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMDIzOA==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r492820238", "bodyText": "If the filter is not there then JoinMatcher#matchDynamicFilters should fail. The semi-join DF tests are also on the same lines. I can add the FilterNode explicitly here if that's better.", "author": "raunaqmorarka", "createdAt": "2020-09-22T15:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMjMzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4NjQyNw==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r493386427", "bodyText": "Also, using createDynamicFilterExpression would require knowing the DynamicFilterId. We are able to do that in TestRemoveUnsupportedDynamicFilters as the PlanNode is manually created in those tests.", "author": "raunaqmorarka", "createdAt": "2020-09-23T09:49:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMjMzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMjgyMg==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r492632822", "bodyText": "could we enhance io.prestosql.sql.planner.optimizations.TestRemoveUnsupportedDynamicFilters tests as part of this PR. Currently, these tests don't validate that joins no longer have DF.", "author": "sopel39", "createdAt": "2020-09-22T10:34:22Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -72,6 +72,7 @@ public void testNonInnerJoin()\n                         join(", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM4MTE1MQ==", "url": "https://github.com/trinodb/trino/pull/5248#discussion_r493381151", "bodyText": "done", "author": "raunaqmorarka", "createdAt": "2020-09-23T09:43:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMjgyMg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "967449042ad649e4f288c4695793559329735377", "url": "https://github.com/trinodb/trino/commit/967449042ad649e4f288c4695793559329735377", "message": "Simplify dynamic filter matching in plans", "committedDate": "2020-09-23T09:46:28Z", "type": "commit"}, {"oid": "967449042ad649e4f288c4695793559329735377", "url": "https://github.com/trinodb/trino/commit/967449042ad649e4f288c4695793559329735377", "message": "Simplify dynamic filter matching in plans", "committedDate": "2020-09-23T09:46:28Z", "type": "forcePushed"}]}