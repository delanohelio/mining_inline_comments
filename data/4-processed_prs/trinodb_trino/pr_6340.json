{"pr_number": 6340, "pr_title": "Allow implementations of AbstractRowEncoder to support Structural type", "pr_createdAt": "2020-12-15T07:58:21Z", "pr_url": "https://github.com/trinodb/trino/pull/6340", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NzkzNQ==", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r543147935", "bodyText": "This error message could be extracted to separate commit.", "author": "kokosing", "createdAt": "2020-12-15T08:39:11Z", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -118,8 +122,17 @@ else if (type instanceof TimestampType) {\n         else if (type instanceof TimestampWithTimeZoneType) {\n             appendSqlTimestampWithTimeZone((SqlTimestampWithTimeZone) type.getObjectValue(session, block, position));\n         }\n+        else if (type instanceof ArrayType) {\n+            appendArray((List<Object>) type.getObjectValue(session, block, position));\n+        }\n+        else if (type instanceof MapType) {\n+            appendMap((Map<Object, Object>) type.getObjectValue(session, block, position));\n+        }\n+        else if (type instanceof RowType) {\n+            appendRow((List<Object>) type.getObjectValue(session, block, position));\n+        }\n         else {\n-            throw new UnsupportedOperationException(format(\"Column '%s' does not support 'null' value\", columnHandles.get(currentColumnIndex).getName()));\n+            throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", type, columnHandles.get(currentColumnIndex).getName()));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0OTAyMQ==", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r543149021", "bodyText": "Commit message is a bit misleading. You didn't add support for structural types, but you allowed to implementations of AbstractRowEncoder to support them.\n[optional] It would be nice use it, how about insert of structural types in Avro for Kafka?", "author": "kokosing", "createdAt": "2020-12-15T08:40:47Z", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -18,6 +18,9 @@\n import com.google.common.primitives.SignedBytes;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAwNjc2OA==", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r544006768", "bodyText": "[optional] It would be nice use it, how about insert of structural types in Avro for Kafka?\n\nWill be raising a follow up PR for implementation in Avro and JSON", "author": "Praveen2112", "createdAt": "2020-12-16T06:07:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0OTAyMQ=="}], "type": "inlineReview"}, {"oid": "1e48a9449ded9f9ce26d21ad9df18e352a76c881", "url": "https://github.com/trinodb/trino/commit/1e48a9449ded9f9ce26d21ad9df18e352a76c881", "message": "Fix error message", "committedDate": "2020-12-16T06:03:33Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29", "url": "https://github.com/trinodb/trino/commit/73e5750f768d52a0189de6d803f089d8535c2d29", "message": "Allow implementations of AbstractRowEncoder to support Structural type", "committedDate": "2020-12-16T06:11:05Z", "type": "commit"}, {"oid": "73e5750f768d52a0189de6d803f089d8535c2d29", "url": "https://github.com/trinodb/trino/commit/73e5750f768d52a0189de6d803f089d8535c2d29", "message": "Allow implementations of AbstractRowEncoder to support Structural type", "committedDate": "2020-12-16T06:11:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNzg1NQ==", "url": "https://github.com/trinodb/trino/pull/6340#discussion_r544117855", "bodyText": "you could extract a method in separate PR, as this would change the entire convention in this clas", "author": "kokosing", "createdAt": "2020-12-16T08:51:32Z", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/encoder/AbstractRowEncoder.java", "diffHunk": "@@ -201,6 +214,21 @@ protected void appendSqlTimestampWithTimeZone(SqlTimestampWithTimeZone value)\n         throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n     }\n \n+    protected void appendArray(List<Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n+    }\n+\n+    protected void appendMap(Map<Object, Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));\n+    }\n+\n+    protected void appendRow(List<Object> value)\n+    {\n+        throw new UnsupportedOperationException(format(\"Unsupported type '%s' for column '%s'\", value.getClass().getName(), columnHandles.get(currentColumnIndex).getName()));", "originalCommit": "73e5750f768d52a0189de6d803f089d8535c2d29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}