{"pr_number": 2528, "pr_title": "Enable CBO on by default", "pr_createdAt": "2020-01-16T16:01:50Z", "pr_url": "https://github.com/trinodb/trino/pull/2528", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTg0Mg==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367815842", "bodyText": "JoinReorderingStrategy.NONE.name() would be preferred", "author": "findepi", "createdAt": "2020-01-17T08:24:42Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLocalDynamicFilter.java", "diffHunk": "@@ -54,6 +55,7 @@ public TestLocalDynamicFilter()\n     {\n         super(ImmutableMap.of(\n                 FORCE_SINGLE_NODE_OUTPUT, \"false\",\n+                JOIN_REORDERING_STRATEGY, \"NONE\",", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTkxMA==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367815910", "bodyText": "JoinReorderingStrategy.NONE.name() would be preferred", "author": "findepi", "createdAt": "2020-01-17T08:24:56Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -47,7 +49,10 @@\n     TestDynamicFilter()\n     {\n         // in order to test testUncorrelatedSubqueries with Dynamic Filtering, enable it\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(\n+                ENABLE_DYNAMIC_FILTERING, \"true\",\n+                JOIN_REORDERING_STRATEGY, \"NONE\",", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNjExMA==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367816110", "bodyText": "please use the opportunity and make the ctor public", "author": "findepi", "createdAt": "2020-01-17T08:25:32Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -47,7 +49,10 @@\n     TestDynamicFilter()\n     {\n         // in order to test testUncorrelatedSubqueries with Dynamic Filtering, enable it\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNzA5Mg==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r367817092", "bodyText": "Also update docs for optimizer.join-reordering-strategy", "author": "findepi", "createdAt": "2020-01-17T08:28:04Z", "path": "presto-docs/src/main/sphinx/admin/properties.rst", "diffHunk": "@@ -18,7 +18,7 @@ General Properties\n \n     * **Type:** ``string``\n     * **Allowed values:** ``AUTOMATIC``, ``PARTITIONED``, ``BROADCAST``\n-    * **Default value:** ``PARTITIONED``\n+    * **Default value:** ``AUTOMATIC``", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMTczOQ==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368421739", "bodyText": "Please format this this way:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\", disableCbo(),\n          \n          \n            \n                    assertPlan(\n          \n          \n            \n                    \"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\",\n          \n          \n            \n                     disableCbo(),", "author": "findepi", "createdAt": "2020-01-20T08:40:27Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -140,13 +143,13 @@ public void testTableScan()\n     @Test\n     public void testJoinMatcher()\n     {\n-        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\",\n+        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\", disableCbo(),", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMTc5Mw==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368421793", "bodyText": "as above", "author": "findepi", "createdAt": "2020-01-20T08:40:36Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -240,13 +243,13 @@ public void testStrictProjectExtraSymbols()\n     @Test(expectedExceptions = IllegalStateException.class, expectedExceptionsMessageRegExp = \".*already bound to expression.*\")\n     public void testDuplicateAliases()\n     {\n-        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\",\n+        assertPlan(\"SELECT o.orderkey FROM orders o, lineitem l WHERE l.orderkey = o.orderkey\", disableCbo(),", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMjE1OA==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368422158", "bodyText": "If this method is supposed to disable CBO, it should also set JOIN_REORDERING_STRATEGY= to eg NONE", "author": "findepi", "createdAt": "2020-01-20T08:41:36Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -257,4 +260,11 @@ public void testProjectLimitsScope()\n                         project(ImmutableMap.of(\"EXPRESSION\", expression(\"CAST(1 AS bigint) + ORDERKEY\")),\n                                 tableScan(\"lineitem\", ImmutableMap.of(\"ORDERKEY\", \"orderkey\")))));\n     }\n+\n+    private Session disableCbo()\n+    {\n+        return Session.builder(getQueryRunner().getDefaultSession())\n+                .setSystemProperty(JOIN_DISTRIBUTION_TYPE, JoinNode.DistributionType.PARTITIONED.name())", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMzU3Mw==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368423573", "bodyText": "This class is a general planner test. It should use default settings.\nSome test methods, however, would fail.\nLet's introduce noJoinReordering method and use it in these tests.", "author": "findepi", "createdAt": "2020-01-20T08:45:12Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLogicalPlanner.java", "diffHunk": "@@ -122,6 +124,13 @@\n public class TestLogicalPlanner\n         extends BasePlanTest\n {\n+    public TestLogicalPlanner()\n+    {\n+        super(ImmutableMap.of(\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1NjUzOA==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368456538", "bodyText": "Got it.", "author": "wendigo", "createdAt": "2020-01-20T09:55:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMzU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNjQwOA==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368426408", "bodyText": "rename to noJoinReordering (as in https://github.com/prestosql/presto/blob/90833ad2484a2206ce7f572eb911611be9cacf0d/presto-testing/src/main/java/io/prestosql/testing/AbstractTestJoinQueries.java#L2278-L2284)", "author": "findepi", "createdAt": "2020-01-20T08:51:55Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPlanMatchingFramework.java", "diffHunk": "@@ -257,4 +260,11 @@ public void testProjectLimitsScope()\n                         project(ImmutableMap.of(\"EXPRESSION\", expression(\"CAST(1 AS bigint) + ORDERKEY\")),\n                                 tableScan(\"lineitem\", ImmutableMap.of(\"ORDERKEY\", \"orderkey\")))));\n     }\n+\n+    private Session disableCbo()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNjk4Mw==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368426983", "bodyText": "Remove these and try to fix the two failing tests by updating the expected plans.", "author": "findepi", "createdAt": "2020-01-20T08:53:21Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestPredicatePushdown.java", "diffHunk": "@@ -52,9 +56,12 @@\n {\n     private final Metadata metadata = createTestMetadataManager();\n \n-    TestPredicatePushdown()\n+    public TestPredicatePushdown()\n     {\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),\n+                JOIN_DISTRIBUTION_TYPE, JoinDistributionType.PARTITIONED.name(),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ4OTI0NQ==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368489245", "bodyText": "Done.", "author": "wendigo", "createdAt": "2020-01-20T11:03:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNjk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyNzYwNQ==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368427605", "bodyText": "remove and use disableCbo in the only failing test", "author": "findepi", "createdAt": "2020-01-20T08:54:48Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestAddExchangesPlans.java", "diffHunk": "@@ -214,6 +224,7 @@ private Session spillEnabledWithJoinDistributionType(JoinDistributionType joinDi\n     {\n         return Session.builder(getQueryRunner().getDefaultSession())\n                 .setSystemProperty(JOIN_DISTRIBUTION_TYPE, joinDistributionType.toString())\n+                .setSystemProperty(JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name())", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyODA2Nw==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368428067", "bodyText": "For this test, it seems to make sense to use JOIN_REORDERING_STRATEGY=NONE.\nThen the variable: disableCbo -> noJoinReordering.", "author": "findepi", "createdAt": "2020-01-20T08:55:53Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestWindow.java", "diffHunk": "@@ -117,8 +119,14 @@ public void testWindow()\n     @Test\n     public void testWindowAfterJoin()\n     {\n+        Session disableCbo = Session.builder(getQueryRunner().getDefaultSession())\n+                .setSystemProperty(JOIN_DISTRIBUTION_TYPE, PARTITIONED.name())\n+                .setSystemProperty(JOIN_REORDERING_STRATEGY, ELIMINATE_CROSS_JOINS.name())", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1MTA2MQ==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368451061", "bodyText": "I don't think:\nJOIN_DISTRIBUTION_TYPE, JoinDistributionType.BROADCAST.name())\n\nis needed. Could you try remove it?", "author": "sopel39", "createdAt": "2020-01-20T09:44:45Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestDynamicFilter.java", "diffHunk": "@@ -44,10 +48,13 @@\n {\n     private final Metadata metadata = createTestMetadataManager();\n \n-    TestDynamicFilter()\n+    public TestDynamicFilter()\n     {\n         // in order to test testUncorrelatedSubqueries with Dynamic Filtering, enable it\n-        super(ImmutableMap.of(ENABLE_DYNAMIC_FILTERING, \"true\"));\n+        super(ImmutableMap.of(\n+                ENABLE_DYNAMIC_FILTERING, \"true\",\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),\n+                JOIN_DISTRIBUTION_TYPE, JoinDistributionType.BROADCAST.name()));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1ODI1MQ==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368458251", "bodyText": "Sure. Removed.I've removed it along with JOIN_REORDERING_STRATEGY moving it to a Session used in test-cases when needed.", "author": "wendigo", "createdAt": "2020-01-20T09:58:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1MTA2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2MDc4Mg==", "url": "https://github.com/trinodb/trino/pull/2528#discussion_r368460782", "bodyText": "Moved it to a noJoinReordering() method (used in test-cases when needed)", "author": "wendigo", "createdAt": "2020-01-20T10:03:39Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestLocalDynamicFilter.java", "diffHunk": "@@ -48,13 +49,12 @@\n public class TestLocalDynamicFilter\n         extends BasePlanTest\n {\n-    private static final Metadata METADATA = createTestMetadataManager();\n-\n     public TestLocalDynamicFilter()\n     {\n         super(ImmutableMap.of(\n                 FORCE_SINGLE_NODE_OUTPUT, \"false\",\n-                JOIN_DISTRIBUTION_TYPE, \"BROADCAST\",\n+                JOIN_REORDERING_STRATEGY, JoinReorderingStrategy.NONE.name(),", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "567469f83b1be050debe37943560c8c8cddc0714", "url": "https://github.com/trinodb/trino/commit/567469f83b1be050debe37943560c8c8cddc0714", "message": "Set CBO on by default", "committedDate": "2020-01-21T09:39:14Z", "type": "commit"}, {"oid": "567469f83b1be050debe37943560c8c8cddc0714", "url": "https://github.com/trinodb/trino/commit/567469f83b1be050debe37943560c8c8cddc0714", "message": "Set CBO on by default", "committedDate": "2020-01-21T09:39:14Z", "type": "forcePushed"}]}