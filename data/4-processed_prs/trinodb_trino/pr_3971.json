{"pr_number": 3971, "pr_title": "Verify that dynamic filters in plan are above table scan", "pr_createdAt": "2020-06-08T23:38:24Z", "pr_url": "https://github.com/trinodb/trino/pull/3971", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ==", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437229285", "bodyText": "nit: each argument in newline", "author": "sopel39", "createdAt": "2020-06-09T08:30:06Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,39 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\"LINEITEM_OK > 0\",", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMDIwMA==", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437230200", "bodyText": "You should use io.prestosql.sql.planner.assertions.PlanMatchPattern#filter(io.prestosql.sql.tree.Expression, io.prestosql.sql.tree.Expression, io.prestosql.sql.planner.assertions.PlanMatchPattern) instead. This filter method doesn't validate dynamic filters.", "author": "sopel39", "createdAt": "2020-06-09T08:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0ODg2MA==", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437248860", "bodyText": "Done", "author": "raunaqmorarka", "createdAt": "2020-06-09T08:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTI4NQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDIyOQ==", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437254229", "bodyText": "static import expression", "author": "sopel39", "createdAt": "2020-06-09T09:05:42Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/optimizations/TestRemoveUnsupportedDynamicFilters.java", "diffHunk": "@@ -182,6 +182,41 @@ public void testUnmatchedDynamicFilter()\n                                         tableScan(\"lineitem\", ImmutableMap.of(\"LINEITEM_OK\", \"orderkey\"))))));\n     }\n \n+    @Test\n+    public void testRemoveDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),\n+                                        createDynamicFilterExpression(metadata, \"DF\", BIGINT, ordersOrderKeySymbol.toSymbolReference())),\n+                                builder.values(lineitemOrderKeySymbol)),\n+                        ordersTableScanNode,\n+                        ImmutableList.of(new JoinNode.EquiJoinClause(lineitemOrderKeySymbol, ordersOrderKeySymbol)),\n+                        ImmutableList.of(),\n+                        ImmutableList.of(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        Optional.empty(),\n+                        ImmutableMap.of(\"DF\", ordersOrderKeySymbol)));\n+        assertPlan(\n+                removeUnsupportedDynamicFilters(root),\n+                output(\n+                        join(\n+                                INNER,\n+                                ImmutableList.of(equiJoinClause(\"LINEITEM_OK\", \"ORDERS_OK\")),\n+                                filter(\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3MjI1OQ==", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437272259", "bodyText": "done", "author": "raunaqmorarka", "createdAt": "2020-06-09T09:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDMxMQ==", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437254311", "bodyText": "static import expression", "author": "sopel39", "createdAt": "2020-06-09T09:05:48Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/sanity/TestDynamicFiltersChecker.java", "diffHunk": "@@ -140,6 +140,31 @@ public void testUnmatchedDynamicFilter()\n         validatePlan(root);\n     }\n \n+    @Test(expectedExceptions = VerifyException.class, expectedExceptionsMessageRegExp = \"Dynamic filters \\\\[Descriptor\\\\{id=DF, input=\\\"ORDERS_OK\\\"\\\\}\\\\] present in filter predicate whose source is not a table scan.\")\n+    public void testDynamicFilterNotAboveTableScan()\n+    {\n+        PlanNode root = builder.output(\n+                ImmutableList.of(),\n+                ImmutableList.of(),\n+                builder.join(\n+                        INNER,\n+                        builder.filter(\n+                                combineConjuncts(\n+                                        metadata,\n+                                        PlanBuilder.expression(\"LINEITEM_OK > 0\"),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3MjM0NQ==", "url": "https://github.com/trinodb/trino/pull/3971#discussion_r437272345", "bodyText": "done", "author": "raunaqmorarka", "createdAt": "2020-06-09T09:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NDMxMQ=="}], "type": "inlineReview"}, {"oid": "f01be4feb5e2acfe7c5ce7f312cf79a829a9011a", "url": "https://github.com/trinodb/trino/commit/f01be4feb5e2acfe7c5ce7f312cf79a829a9011a", "message": "Verify dynamic filters are above table scan in DynamicFiltersChecker", "committedDate": "2020-06-09T09:28:16Z", "type": "commit"}, {"oid": "24bf458ea534f2ec6302fab5aec6a87580a98a09", "url": "https://github.com/trinodb/trino/commit/24bf458ea534f2ec6302fab5aec6a87580a98a09", "message": "Add test to verify that dynamic filters not above table scan are removed", "committedDate": "2020-06-09T09:28:21Z", "type": "commit"}, {"oid": "24bf458ea534f2ec6302fab5aec6a87580a98a09", "url": "https://github.com/trinodb/trino/commit/24bf458ea534f2ec6302fab5aec6a87580a98a09", "message": "Add test to verify that dynamic filters not above table scan are removed", "committedDate": "2020-06-09T09:28:21Z", "type": "forcePushed"}]}