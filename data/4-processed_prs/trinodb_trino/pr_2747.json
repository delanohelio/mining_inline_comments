{"pr_number": 2747, "pr_title": "Keep tailing containers output in Launcher `env up`", "pr_createdAt": "2020-02-06T11:12:17Z", "pr_url": "https://github.com/trinodb/trino/pull/2747", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1Mjc3OA==", "url": "https://github.com/trinodb/trino/pull/2747#discussion_r376352778", "bodyText": "EnvironmentUpOptions", "author": "findepi", "createdAt": "2020-02-07T11:51:34Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -60,21 +64,37 @@ public void run()\n                         .add(new LauncherModule())\n                         .add(new EnvironmentModule(additionalEnvironments))\n                         .add(environmentOptions.toModule())\n+                        .add(envUpOptions.toModule())\n                         .build(),\n                 EnvironmentUp.Execution.class);\n     }\n \n+    public static class EnvUpOptions", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NDc1Mw==", "url": "https://github.com/trinodb/trino/pull/2747#discussion_r376464753", "bodyText": "you didn't save much. Saving the flag would require less typing and nobody would ask for a comment ;)", "author": "kokosing", "createdAt": "2020-02-07T15:52:07Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -96,13 +116,38 @@ public void run()\n             environment.start();\n             log.info(\"Environment '%s' started\", selectedEnvironmentProvider.getEnvironmentName());\n \n+            if (background) {\n+                killContainersReaperContainer();\n+                return;\n+            }\n+\n+            sleepUntilInterrupted();\n+            log.info(\"Exiting, the containers will exit too\");\n+        }\n+\n+        private void killContainersReaperContainer()\n+        {\n             try (DockerClient dockerClient = DockerClientFactory.lazyClient()) {\n                 log.info(\"Killing the testcontainers reaper container (Ryuk) so that environment can stay alive\");\n-                killContainersReaperContainer(dockerClient);\n+                TestcontainersUtil.killContainersReaperContainer(dockerClient);\n             }\n             catch (IOException e) {\n                 throw new UncheckedIOException(e);\n             }\n         }\n+\n+        private void sleepUntilInterrupted()\n+        {\n+            try {\n+                //noinspection InfiniteLoopStatement\n+                while (true) {\n+                    Thread.sleep(Long.MAX_VALUE);\n+                }\n+            }\n+            catch (InterruptedException e) {\n+                log.info(\"Interrupted\");\n+                // It's OK not to restore interrupt flag here. When we return we're exiting the process.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NTc3NA==", "url": "https://github.com/trinodb/trino/pull/2747#discussion_r376695774", "bodyText": "Right. But this wouldn't be really correct. We're responding to interrupt and no-one higher up the stack is going to respond.\nSo it would still require a comment :)", "author": "findepi", "createdAt": "2020-02-08T08:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NDc1Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "cd226eaef57b0e65c54cc5be9b385700f1f2da11", "url": "https://github.com/trinodb/trino/commit/cd226eaef57b0e65c54cc5be9b385700f1f2da11", "message": "Keep tailing containers output in Launcher `env up`", "committedDate": "2020-02-09T21:13:43Z", "type": "commit"}, {"oid": "cd226eaef57b0e65c54cc5be9b385700f1f2da11", "url": "https://github.com/trinodb/trino/commit/cd226eaef57b0e65c54cc5be9b385700f1f2da11", "message": "Keep tailing containers output in Launcher `env up`", "committedDate": "2020-02-09T21:13:43Z", "type": "forcePushed"}]}