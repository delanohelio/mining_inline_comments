{"pr_number": 5848, "pr_title": "Update to testcontainers to fix running tests on Mac", "pr_createdAt": "2020-11-05T20:58:00Z", "pr_url": "https://github.com/trinodb/trino/pull/5848", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MDk0NQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518540945", "bodyText": "Is this a known issue for testcontainers?", "author": "kokosing", "createdAt": "2020-11-06T06:05:15Z", "path": "pom.xml", "diffHunk": "@@ -1289,11 +1290,25 @@\n             <dependency>\n                 <groupId>org.testcontainers</groupId>\n                 <artifactId>testcontainers-bom</artifactId>\n-                <version>1.14.3</version>\n+                <!-- TODO update to released version. The update to RC was urgently needed due to https://github.com/testcontainers/testcontainers-java/issues/3166 -->\n+                <version>${dep.testcontainers.version}</version>\n                 <type>pom</type>\n                 <scope>import</scope>\n             </dependency>\n \n+            <dependency>\n+                <groupId>org.testcontainers</groupId>\n+                <artifactId>testcontainers</artifactId>\n+                <version>${dep.testcontainers.version}</version>\n+            </dependency>\n+\n+            <dependency>\n+                <!-- org.testcontainers:testcontainer's dependencies pull two different versions of this artifact and this is to negotiate the version -->", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NTMxMA==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518575310", "bodyText": "this i do not know", "author": "findepi", "createdAt": "2020-11-06T07:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MDk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NDM4MQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518644381", "bodyText": "i mentioned this to @bsideup over slack", "author": "findepi", "createdAt": "2020-11-06T10:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MDk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0OTg5OQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518649899", "bodyText": "FTR reporting an issue (so that it can be tracked and even picked up by the community) is always preferred over mentioning things on Slack :)", "author": "bsideup", "createdAt": "2020-11-06T10:10:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MDk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTI4Mw==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518541283", "bodyText": "method reference?", "author": "kokosing", "createdAt": "2020-11-06T06:06:33Z", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestPasswordAuthentication.java", "diffHunk": "@@ -79,9 +82,14 @@ public TestPasswordAuthentication()\n     public final void destroy()\n             throws IOException\n     {\n-        assertions.close();\n-        elasticsearch.stop();\n-        client.close();\n+        Closeables.closeAll(\n+                () -> assertions.close(),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NTU4Mg==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518575582", "bodyText": "no, because i want the closeAll to be invoked even if one of the references is null", "author": "findepi", "createdAt": "2020-11-06T07:50:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTI4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTMxMA==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518541310", "bodyText": "static import", "author": "kokosing", "createdAt": "2020-11-06T06:06:38Z", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestPasswordAuthentication.java", "diffHunk": "@@ -79,9 +82,14 @@ public TestPasswordAuthentication()\n     public final void destroy()\n             throws IOException\n     {\n-        assertions.close();\n-        elasticsearch.stop();\n-        client.close();\n+        Closeables.closeAll(", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTY4OQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518541689", "bodyText": "shouldn't this be squashed with previous commit?", "author": "kokosing", "createdAt": "2020-11-06T06:08:07Z", "path": "presto-atop/src/test/java/io/prestosql/plugin/atop/TestAtopSecurity.java", "diffHunk": "@@ -36,10 +36,10 @@\n \n     @BeforeClass\n     public void setUp()\n-            throws IOException\n+            throws Exception\n     {\n         Path atopExecutable = Files.createTempFile(null, null);\n-        String path = Resources.getResource(getClass(), \"security.json\").getPath();\n+        String path = new File(Resources.getResource(getClass(), \"security.json\").toURI()).getPath();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NTk1Nw==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518575957", "bodyText": "Why would it be?", "author": "findepi", "createdAt": "2020-11-06T07:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxNjc2Ng==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518616766", "bodyText": "What is the difference? What is returned by Resources.getResource(getClass(), \"security.json\").getPath();? Does it return file://..? And your change here is to cut it off? Am I right?", "author": "kokosing", "createdAt": "2020-11-06T09:12:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTY4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NTg1OQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518645859", "bodyText": "Resources.getResource  / getClass().getResouce / ClassLoader.getResouce returns an URL.\nURL.getPath returns ... well, path component of the URL, regardless whether it was file:, jar:, http: or myurl:. Also, getPath can be something slightly different then FS path, since (i think) it can contain URL escape sequences. Going thru new File(URI) addresses those issues.", "author": "findepi", "createdAt": "2020-11-06T10:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTY4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTc2MQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518541761", "bodyText": "why it changed?", "author": "kokosing", "createdAt": "2020-11-06T06:08:22Z", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestElasticsearch7IntegrationSmokeTest.java", "diffHunk": "@@ -20,7 +20,7 @@\n {\n     public TestElasticsearch7IntegrationSmokeTest()\n     {\n-        super(\"elasticsearch:7.0.0\");\n+        super(\"docker.elastic.co/elasticsearch/elasticsearch:7.0.0\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2MDEyMQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518560121", "bodyText": "Indeed. If I recall correctly, the images from docker.elastic.co are the commercial images, so the choice to use the official docker images from dockerhub was intentional.", "author": "martint", "createdAt": "2020-11-06T07:10:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTc2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU1ODkyNg==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518558926", "bodyText": "\"Move resource allocation out of test constructor\"\n\nWhy?", "author": "martint", "createdAt": "2020-11-06T07:06:58Z", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/TestPasswordAuthentication.java", "diffHunk": "@@ -19,6 +19,7 @@\n import com.google.common.collect.ImmutableMap;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3Njk1MQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518576951", "bodyText": "Because\n\nresources allocated in constructor are held during all tests' execution duration, not only when tests from given class are being executed\nfailure to allocate them is nicely swallowed by surefire, so you do not know what happened", "author": "findepi", "createdAt": "2020-11-06T07:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU1ODkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwMTg2MA==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518801860", "bodyText": "Ok, please add that to the commit message", "author": "martint", "createdAt": "2020-11-06T14:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU1ODkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNjc4MQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518806781", "bodyText": "added", "author": "findepi", "createdAt": "2020-11-06T15:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU1ODkyNg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "954eedde0ad828bb5703b338b004eb147b0bc932", "url": "https://github.com/trinodb/trino/commit/954eedde0ad828bb5703b338b004eb147b0bc932", "message": "Do not allocate resources within test constructor\n\nMaven surefire plugin does not report full exception when it happens\nduring test class constructor call.", "committedDate": "2020-11-06T15:00:49Z", "type": "commit"}, {"oid": "2f68e750a383ff76215aec28b70ad362aa9ae545", "url": "https://github.com/trinodb/trino/commit/2f68e750a383ff76215aec28b70ad362aa9ae545", "message": "Report resource name when missing", "committedDate": "2020-11-06T15:00:54Z", "type": "commit"}, {"oid": "9f819dacd918c523282ee31461a95a6a1e1e91b4", "url": "https://github.com/trinodb/trino/commit/9f819dacd918c523282ee31461a95a6a1e1e91b4", "message": "Fix resource URI to file system path conversion", "committedDate": "2020-11-06T15:00:54Z", "type": "commit"}, {"oid": "ed4d9a2d691a992988b7d4157684e794c2c91905", "url": "https://github.com/trinodb/trino/commit/ed4d9a2d691a992988b7d4157684e794c2c91905", "message": "Flatten unnecessary packages\n\n`TestDynamicTable` was in separate package for no apparent, important reason.\n`util` package did not contain e.g. `MetadataUtil` class.", "committedDate": "2020-11-06T15:00:54Z", "type": "commit"}, {"oid": "07e7ca73442f077c0d9699588d599231fe3758a1", "url": "https://github.com/trinodb/trino/commit/07e7ca73442f077c0d9699588d599231fe3758a1", "message": "Adjusts CI timeouts\n\nMaven checks can legitimately take 30 minutes.\nAssumption is that same applies to Error Prone checks.", "committedDate": "2020-11-06T15:00:54Z", "type": "commit"}, {"oid": "276458bb0e303292048c068985d02c0e464ed281", "url": "https://github.com/trinodb/trino/commit/276458bb0e303292048c068985d02c0e464ed281", "message": "Do not close DockerClientFactory.lazyClient()\n\n`DockerClientFactory.lazyClient` is a singleton, does not need to be\nclosed. Currently, the `close()` is delegated and eventually ignored in\n`com.github.dockerjava.okhttp.OkHttpDockerCmdExecFactory`. `close()` will be\nexplicitly rejected in future testcontainers version.", "committedDate": "2020-11-06T15:00:54Z", "type": "commit"}, {"oid": "ae2be0cc5b281c11051c098c513f5c01b86a40bd", "url": "https://github.com/trinodb/trino/commit/ae2be0cc5b281c11051c098c513f5c01b86a40bd", "message": "Declare shared network explicitly\n\nPinot tests (`TestMinimalFunctionality`) depend on the fact that Kafka\ncontainer created by `TestingKafka` and Pinot container created by\n`TestingPinotCluster` are on the same network. This is currently\nimplicitly the case, as `KafkaContainer` sets `Network.SHARED` in its\nconstructor, but it won't be so in a future version of testcontainers.", "committedDate": "2020-11-06T15:00:54Z", "type": "commit"}, {"oid": "3defb197f8a76ccd5c190b83162544d0e8dcfce2", "url": "https://github.com/trinodb/trino/commit/3defb197f8a76ccd5c190b83162544d0e8dcfce2", "message": "Update to testcontainers to fix running tests on Mac\n\nThe RC2 version contains a fix for\nhttps://github.com/testcontainers/testcontainers-java/issues/3166.", "committedDate": "2020-11-06T15:00:54Z", "type": "commit"}, {"oid": "3defb197f8a76ccd5c190b83162544d0e8dcfce2", "url": "https://github.com/trinodb/trino/commit/3defb197f8a76ccd5c190b83162544d0e8dcfce2", "message": "Update to testcontainers to fix running tests on Mac\n\nThe RC2 version contains a fix for\nhttps://github.com/testcontainers/testcontainers-java/issues/3166.", "committedDate": "2020-11-06T15:00:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyOTAzMQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518829031", "bodyText": "What\u2019s this?", "author": "martint", "createdAt": "2020-11-06T15:34:01Z", "path": "presto-elasticsearch/src/test/java/io/prestosql/elasticsearch/ElasticsearchServer.java", "diffHunk": "@@ -35,7 +36,8 @@\n     public ElasticsearchServer(String image, Map<String, String> configurationFiles)\n             throws IOException\n     {\n-        container = new ElasticsearchContainer(image);\n+        DockerImageName dockerImageName = DockerImageName.parse(image).asCompatibleSubstituteFor(\"docker.elastic.co/elasticsearch/elasticsearch\");", "originalCommit": "3defb197f8a76ccd5c190b83162544d0e8dcfce2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzMDAwNQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518830005", "bodyText": "see \"Add image compatibility checks\" in release notes at https://github.com/testcontainers/testcontainers-java/releases/tag/1.15.0", "author": "findepi", "createdAt": "2020-11-06T15:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyOTAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzMzI1OQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518833259", "bodyText": "Not sure I understand why we need it here, though. The official images for the open source version of ES are the ones in docker hub.", "author": "martint", "createdAt": "2020-11-06T15:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyOTAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0MTM5MQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518841391", "bodyText": "This is called with\n\nelasticsearch:7.8.0 from  TestPasswordAuthentication\nelasticsearch:7.0.0 from TestElasticsearch7IntegrationSmokeTest\ndocker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0 from TestElasticsearch6IntegrationSmokeTest", "author": "findepi", "createdAt": "2020-11-06T15:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyOTAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0NDk4OQ==", "url": "https://github.com/trinodb/trino/pull/5848#discussion_r518844989", "bodyText": "The last one is because there's no 6.0.0 available in docker hub", "author": "martint", "createdAt": "2020-11-06T15:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyOTAzMQ=="}], "type": "inlineReview"}]}