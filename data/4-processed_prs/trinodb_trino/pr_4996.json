{"pr_number": 4996, "pr_title": "Attach product test execution to existing environment", "pr_createdAt": "2020-08-27T06:08:48Z", "pr_url": "https://github.com/trinodb/trino/pull/4996", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE2NDYxMw==", "url": "https://github.com/trinodb/trino/pull/4996#discussion_r478164613", "bodyText": "Of course this needs some cleanup yet.", "author": "findepi", "createdAt": "2020-08-27T06:09:22Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -167,20 +176,48 @@ public void run()\n \n         private Environment tryStartEnvironment()\n         {\n-            log.info(\"Pruning old environment(s)\");\n-            Environments.pruneEnvironment();\n-\n             Environment environment = getEnvironment();\n-            log.info(\"Starting the environment '%s'\", environment);\n-            environment.start();\n+\n+            if (!attach) {\n+                log.info(\"Pruning old environment(s)\");\n+                Environments.pruneEnvironment();\n+\n+                log.info(\"Starting the environment '%s'\", environment);\n+                environment.start();\n+            }\n+            else {\n+                DockerContainer tests = (DockerContainer) environment.getContainer(\"tests\");\n+                tests.clearDependencies();\n+                tests.setNetwork(new Network()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTc2Mg==", "url": "https://github.com/trinodb/trino/pull/4996#discussion_r481995762", "bodyText": "you can also enumerate networks using DockerClient: DockerClientFactory.instance().client().listNetworksCmd().withIdFilter(PRODUCT_TEST_LAUNCHER_NETWORK).exec()", "author": "wendigo", "createdAt": "2020-09-02T11:25:29Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -168,21 +175,32 @@ public void run()\n \n         private Environment tryStartEnvironment()\n         {\n-            log.info(\"Pruning old environment(s)\");\n-            Environments.pruneEnvironment();\n-\n-            log.info(\"Creating environment '%s' with configuration %s\", environment, environmentConfig);\n             Environment environment = getEnvironment();\n-            log.info(\"Starting the environment '%s'\", environment);\n-            environment.start();\n+\n+            if (!attach) {\n+                log.info(\"Pruning old environment(s)\");\n+                Environments.pruneEnvironment();\n+\n+                log.info(\"Starting the environment '%s' with configuration %s\", this.environment, environmentConfig);\n+                environment.start();\n+            }\n+            else {\n+                DockerContainer tests = (DockerContainer) environment.getContainer(\"tests\");\n+                tests.clearDependencies();\n+                tests.setNetwork(new ExistingNetwork(Environment.PRODUCT_TEST_LAUNCHER_NETWORK));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTk2NA==", "url": "https://github.com/trinodb/trino/pull/4996#discussion_r481995964", "bodyText": "That way you will be sure that network exists", "author": "wendigo", "createdAt": "2020-09-02T11:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTc2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0ODczMw==", "url": "https://github.com/trinodb/trino/pull/4996#discussion_r483548733", "bodyText": "This adds validation (partial - network may exist but nothing else), but i won't free me from having ExistingNetwork class.\nI need org.testcontainers.containers.Network and not com.github.dockerjava.api.model.Network\ni am tempted to leave as is", "author": "findepi", "createdAt": "2020-09-04T11:07:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTc2Mg=="}], "type": "inlineReview"}, {"oid": "a8360813e5133e79d90810722115755505b799d1", "url": "https://github.com/trinodb/trino/commit/a8360813e5133e79d90810722115755505b799d1", "message": "Attach product test execution to existing environment\n\nAllow running product tests against environment brought up with `env\nup`.\n\n1. start environment with `env up`\n2. run tests with `test run`, adding `--attach` parameter", "committedDate": "2020-09-04T11:09:30Z", "type": "commit"}, {"oid": "a8360813e5133e79d90810722115755505b799d1", "url": "https://github.com/trinodb/trino/commit/a8360813e5133e79d90810722115755505b799d1", "message": "Attach product test execution to existing environment\n\nAllow running product tests against environment brought up with `env\nup`.\n\n1. start environment with `env up`\n2. run tests with `test run`, adding `--attach` parameter", "committedDate": "2020-09-04T11:09:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1MTIzMA==", "url": "https://github.com/trinodb/trino/pull/4996#discussion_r483551230", "bodyText": "maybe use it as message to the exception", "author": "kokosing", "createdAt": "2020-09-04T11:13:16Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/testcontainers/ExistingNetwork.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.tests.product.launcher.testcontainers;\n+\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+import org.testcontainers.containers.Network;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public final class ExistingNetwork\n+        implements Network\n+{\n+    private final String networkId;\n+\n+    public ExistingNetwork(String networkId)\n+    {\n+        this.networkId = requireNonNull(networkId, \"networkId is null\");\n+    }\n+\n+    @Override\n+    public String getId()\n+    {\n+        return networkId;\n+    }\n+\n+    @Override\n+    public void close() {}\n+\n+    @Override\n+    public Statement apply(Statement statement, Description description)\n+    {\n+        // junit4 integration", "originalCommit": "a8360813e5133e79d90810722115755505b799d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4MDU5Nw==", "url": "https://github.com/trinodb/trino/pull/4996#discussion_r483580597", "bodyText": "i tend to disagree with this.\nif someone uses this w junit4, they should just get unsupported exc", "author": "findepi", "createdAt": "2020-09-04T12:21:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1MTIzMA=="}], "type": "inlineReview"}]}