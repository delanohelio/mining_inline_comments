{"pr_number": 5590, "pr_title": "Introduce ResourceProvider", "pr_createdAt": "2020-10-18T19:22:20Z", "pr_url": "https://github.com/trinodb/trino/pull/5590", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4MzM1OA==", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507683358", "bodyText": "file -> relativePath", "author": "findepi", "createdAt": "2020-10-19T11:49:48Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -130,4 +141,9 @@ public static Path createTemporaryDirectoryForDocker()\n         }));\n         return temporaryDirectoryForDocker;\n     }\n+\n+    public interface HostDirectory\n+    {\n+        String getPath(String file);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4NDY0OQ==", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507684649", "bodyText": "The implementation is tied to a host directory, but the abstraction defined by the interface could be better described as \"file provider\" or \"resource provider\", not imposing implementation constraints.\nin such a case this could be\ninterface ResourceProvider {\n String getPathOnHost(String resourceName)\n}", "author": "findepi", "createdAt": "2020-10-19T11:52:06Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -130,4 +141,9 @@ public static Path createTemporaryDirectoryForDocker()\n         }));\n         return temporaryDirectoryForDocker;\n     }\n+\n+    public interface HostDirectory", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5MDAyOQ==", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507690029", "bodyText": "interface ResourceProvider {\n String getPath(String resourceName)\n}\n\n?", "author": "kokosing", "createdAt": "2020-10-19T12:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4NDY0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5MzA3NQ==", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r507693075", "bodyText": "Can be, although getPathOnHost was intentional.\nYou could also make the method reutrn Path, but that would not play as nice with TC APIs.\nup to you", "author": "findepi", "createdAt": "2020-10-19T12:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4NDY0OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQwNzEyMQ==", "url": "https://github.com/trinodb/trino/pull/5590#discussion_r508407121", "bodyText": "should public synchronized String getDockerFilesHostPath() above also return Path?", "author": "findepi", "createdAt": "2020-10-20T11:00:05Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/DockerFiles.java", "diffHunk": "@@ -70,12 +70,12 @@ public synchronized String getDockerFilesHostPath()\n         return dockerFilesHostPath.toString();\n     }\n \n-    public String getDockerFilesHostPath(String file)\n+    public Path getDockerFilesHostPath(String file)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c1ba7783622b100bfb89edb1206eed613d2743e8", "url": "https://github.com/trinodb/trino/commit/c1ba7783622b100bfb89edb1206eed613d2743e8", "message": "Return Path from getDockerFilesHostPath", "committedDate": "2020-10-20T14:19:26Z", "type": "commit"}, {"oid": "ed2af8c666ec73a0018f0aded6940600fbc20281", "url": "https://github.com/trinodb/trino/commit/ed2af8c666ec73a0018f0aded6940600fbc20281", "message": "Introduce ResourceProvider\n\nThat way it is possible to extract a common directory for many files and\nstill be sure that each file that is accessed exists.", "committedDate": "2020-10-20T14:19:26Z", "type": "commit"}, {"oid": "ed2af8c666ec73a0018f0aded6940600fbc20281", "url": "https://github.com/trinodb/trino/commit/ed2af8c666ec73a0018f0aded6940600fbc20281", "message": "Introduce ResourceProvider\n\nThat way it is possible to extract a common directory for many files and\nstill be sure that each file that is accessed exists.", "committedDate": "2020-10-20T14:19:26Z", "type": "forcePushed"}]}