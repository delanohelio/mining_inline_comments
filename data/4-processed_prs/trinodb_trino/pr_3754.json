{"pr_number": 3754, "pr_title": "Add join distribution type to live plan", "pr_createdAt": "2020-05-15T18:20:59Z", "pr_url": "https://github.com/trinodb/trino/pull/3754", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk5Nzk2OA==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r425997968", "bodyText": "Why did these versions get updated?", "author": "aalbu", "createdAt": "2020-05-15T19:11:35Z", "path": "presto-main/src/main/resources/webapp/src/package.json", "diffHunk": "@@ -10,14 +10,14 @@\n     \"babel-preset-flow\": \"^6.23.0\",\n     \"babel-preset-react\": \"^6.24.1\",\n     \"flow-bin\": \"^0.85.0\",\n-    \"webpack\": \"^4.16.0\",\n+    \"webpack\": \"^4.43.0\",", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAwODM2NQ==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r426008365", "bodyText": "I'm not sure. It looks like I'm using webpack v4.16.3 to build the js files. I changed the version back to 4.16 in package.json.", "author": "charlesjmorgan", "createdAt": "2020-05-15T19:35:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk5Nzk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk5OTk1OQ==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r425999959", "bodyText": "I think that including the unprocessed content of the details field in the pop-up is more in line with the current UI (keeping 'business logic' out of the view).  But as you pointed out, that also has drawbacks.", "author": "aalbu", "createdAt": "2020-05-15T19:16:13Z", "path": "presto-main/src/main/resources/webapp/src/components/LivePlan.jsx", "diffHunk": "@@ -125,10 +125,17 @@ class PlanNode extends React.Component<PlanNodeProps, PlanNodeState> {\n     }\n \n     render() {\n+        const details = this.props.details;\n+        if (details.includes(\"Distribution\")) {\n+            var index = details.indexOf(\"Distribution\");\n+            var distribution = details.slice(index, details.length).split(\"\\n\")[0];", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyNjY1Mw==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r426026653", "bodyText": "I agree, it fits the style better. I added a screenshot in another comment that I think is a good compromise.", "author": "charlesjmorgan", "createdAt": "2020-05-15T20:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk5OTk1OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxNTY0MQ==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r427715641", "bodyText": "Since the result should only have one row containing one column, you can use result.getOnlyValue().", "author": "aalbu", "createdAt": "2020-05-20T03:04:51Z", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -3391,6 +3391,18 @@ public void testLogicalExplain()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Test\n+    public void testJoinDistribution()\n+    {\n+        String query = \"SELECT c.custkey\\n\" +\n+                       \"FROM customer c JOIN nation n\\n\" +\n+                       \"  ON n.nationkey = c.nationkey\\n\" +\n+                       \"WHERE n.name = 'UNITED STATES'\\n\" +\n+                       \"LIMIT 5\";\n+        MaterializedResult result = computeActual(\"EXPLAIN (FORMAT TEXT) \" + query);\n+        assertThat(result.getMaterializedRows().get(0).toString()).matches(\"(?s).*Distribution:.*\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxNjkwNQ==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r427716905", "bodyText": "Let's add a comment explaining why we're adding the test (the UI depends on the distribution type being part of the details and rendered as Distribution: <type>.  Without that context the test doesn't make much sense.", "author": "aalbu", "createdAt": "2020-05-20T03:10:15Z", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -3391,6 +3391,18 @@ public void testLogicalExplain()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Test\n+    public void testJoinDistribution()\n+    {\n+        String query = \"SELECT c.custkey\\n\" +\n+                       \"FROM customer c JOIN nation n\\n\" +\n+                       \"  ON n.nationkey = c.nationkey\\n\" +\n+                       \"WHERE n.name = 'UNITED STATES'\\n\" +\n+                       \"LIMIT 5\";\n+        MaterializedResult result = computeActual(\"EXPLAIN (FORMAT TEXT) \" + query);\n+        assertThat(result.getMaterializedRows().get(0).toString()).matches(\"(?s).*Distribution:.*\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxNzkwNg==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r427717906", "bodyText": "We should preserve the value coming from the server and not change capitalization.", "author": "aalbu", "createdAt": "2020-05-20T03:14:40Z", "path": "presto-main/src/main/resources/webapp/src/components/LivePlan.jsx", "diffHunk": "@@ -125,10 +125,19 @@ class PlanNode extends React.Component<PlanNodeProps, PlanNodeState> {\n     }\n \n     render() {\n+        const details = this.props.details;\n+        var distribution = \"\";\n+\n+        if (details.includes(\"Distribution\")) {\n+            var index = details.indexOf(\"Distribution\");\n+            var distribution = details.slice(index, details.length).split(\"\\n\")[0].split(\" \")[1];\n+            distribution = \" (\" + distribution.slice(0,1) + distribution.slice(1, distribution.length).toLowerCase() + \")\";", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcyMDk5OQ==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r427720999", "bodyText": "Perhaps you can try matching against a regex and get the distribution type from a match group.", "author": "aalbu", "createdAt": "2020-05-20T03:28:10Z", "path": "presto-main/src/main/resources/webapp/src/components/LivePlan.jsx", "diffHunk": "@@ -125,10 +125,19 @@ class PlanNode extends React.Component<PlanNodeProps, PlanNodeState> {\n     }\n \n     render() {\n+        const details = this.props.details;\n+        var distribution = \"\";\n+\n+        if (details.includes(\"Distribution\")) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwODgzMw==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r428408833", "bodyText": "Nice.  Use a more generic regex (something like [a-zA-Z]+) to match the distribution type (no need to hard-code the possible values).  And you can inline the regex.", "author": "aalbu", "createdAt": "2020-05-21T02:18:29Z", "path": "presto-main/src/main/resources/webapp/src/components/LivePlan.jsx", "diffHunk": "@@ -125,10 +125,20 @@ class PlanNode extends React.Component<PlanNodeProps, PlanNodeState> {\n     }\n \n     render() {\n+        // get join distribution type by matching details to a regular expression\n+        const details = this.props.details;\n+        var distribution = \"\";\n+        var distributionRE = /Distribution:\\s(REPLICATED|PARTITIONED)/;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUzODg1NA==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r428538854", "bodyText": "var distributionPattern = /Distribution:\\s+(\\w+)/;\n\n\nvar name\n\\w+ -- since we use enum name here, an _  or a digit could also appear here\ngenerally, when you allow some space (\\s), you either mean \"exactly space\" ( ), or \"some amount of whitespace\" (\\s+)", "author": "findepi", "createdAt": "2020-05-21T09:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwODgzMw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNjM2Ng==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r429136366", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testJoinDistribution()\n          \n          \n            \n                public void testExplainJoinDistribution()", "author": "findepi", "createdAt": "2020-05-22T09:17:24Z", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -3393,6 +3393,23 @@ public void testLogicalExplain()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Test\n+    public void testJoinDistribution()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNzEwNA==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r429137104", "bodyText": "We lean towards // comments. I am not sure there is a good reason, but worth staying consistent.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    /*\n          \n          \n            \n                        This test makes sure that the query plan includes the distribution info for joins.\n          \n          \n            \n                        The webui live plan displays the distribution type for joins, and the plan details\n          \n          \n            \n                        need to be structured like 'Distribution: <type>' for this feature to work.\n          \n          \n            \n                    */\n          \n          \n            \n                    // This test makes sure that the query plan includes the distribution info for joins.\n          \n          \n            \n                    // The webui live plan displays the distribution type for joins, and the plan details\n          \n          \n            \n                    //  need to be structured like 'Distribution: <type>' for this feature to work.", "author": "findepi", "createdAt": "2020-05-22T09:18:39Z", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -3393,6 +3393,23 @@ public void testLogicalExplain()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Test\n+    public void testJoinDistribution()\n+    {\n+        /*\n+            This test makes sure that the query plan includes the distribution info for joins.\n+            The webui live plan displays the distribution type for joins, and the plan details\n+            need to be structured like 'Distribution: <type>' for this feature to work.\n+        */", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzODY4Nw==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r429138687", "bodyText": "avoid \\n as they don't slightly reduce readability, use spaces instead\nalso, you can make the lines a bit longer and remove unnecessary WHERE, LIMIT\nthen you can inline the variable:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String query = \"SELECT c.custkey\\n\" +\n          \n          \n            \n                                   \"FROM customer c JOIN nation n\\n\" +\n          \n          \n            \n                                   \"  ON n.nationkey = c.nationkey\\n\" +\n          \n          \n            \n                                   \"WHERE n.name = 'UNITED STATES'\\n\" +\n          \n          \n            \n                                   \"LIMIT 5\";\n          \n          \n            \n                    MaterializedResult result = computeActual(\"EXPLAIN (FORMAT TEXT) \" + query);\n          \n          \n            \n                    MaterializedResult result = computeActual(\"EXPLAIN (FORMAT TEXT) SELECT c.custkey FROM customer c JOIN nation n ON n.nationkey = c.nationkey\");", "author": "findepi", "createdAt": "2020-05-22T09:21:57Z", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -3393,6 +3393,23 @@ public void testLogicalExplain()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Test\n+    public void testJoinDistribution()\n+    {\n+        /*\n+            This test makes sure that the query plan includes the distribution info for joins.\n+            The webui live plan displays the distribution type for joins, and the plan details\n+            need to be structured like 'Distribution: <type>' for this feature to work.\n+        */\n+        String query = \"SELECT c.custkey\\n\" +\n+                       \"FROM customer c JOIN nation n\\n\" +\n+                       \"  ON n.nationkey = c.nationkey\\n\" +\n+                       \"WHERE n.name = 'UNITED STATES'\\n\" +\n+                       \"LIMIT 5\";\n+        MaterializedResult result = computeActual(\"EXPLAIN (FORMAT TEXT) \" + query);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzOTUzMA==", "url": "https://github.com/trinodb/trino/pull/3754#discussion_r429139530", "bodyText": "avoid Object#toString, it can mask problems, use cast instead:\nassertThat((String) result.getOnlyValue()) ....", "author": "findepi", "createdAt": "2020-05-22T09:23:35Z", "path": "presto-tests/src/test/java/io/prestosql/tests/AbstractTestEngineOnlyQueries.java", "diffHunk": "@@ -3393,6 +3393,23 @@ public void testLogicalExplain()\n         assertEquals(getOnlyElement(result.getOnlyColumnAsSet()), getExplainPlan(query, LOGICAL));\n     }\n \n+    @Test\n+    public void testJoinDistribution()\n+    {\n+        /*\n+            This test makes sure that the query plan includes the distribution info for joins.\n+            The webui live plan displays the distribution type for joins, and the plan details\n+            need to be structured like 'Distribution: <type>' for this feature to work.\n+        */\n+        String query = \"SELECT c.custkey\\n\" +\n+                       \"FROM customer c JOIN nation n\\n\" +\n+                       \"  ON n.nationkey = c.nationkey\\n\" +\n+                       \"WHERE n.name = 'UNITED STATES'\\n\" +\n+                       \"LIMIT 5\";\n+        MaterializedResult result = computeActual(\"EXPLAIN (FORMAT TEXT) \" + query);\n+        assertThat(result.getOnlyValue().toString()).matches(\"(?s).*Distribution:.*\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4705f76e777ac68ae754c28d16d63496f2c37daa", "url": "https://github.com/trinodb/trino/commit/4705f76e777ac68ae754c28d16d63496f2c37daa", "message": "show join distribution type in webui live plan", "committedDate": "2020-05-22T15:22:24Z", "type": "commit"}, {"oid": "4705f76e777ac68ae754c28d16d63496f2c37daa", "url": "https://github.com/trinodb/trino/commit/4705f76e777ac68ae754c28d16d63496f2c37daa", "message": "show join distribution type in webui live plan", "committedDate": "2020-05-22T15:22:24Z", "type": "forcePushed"}]}