{"pr_number": 2377, "pr_title": "Use dockerized Cassandra in tests", "pr_createdAt": "2020-01-01T12:42:35Z", "pr_url": "https://github.com/trinodb/trino/pull/2377", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDAxOQ==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362324019", "bodyText": "When this is merged, we should archive the https://github.com/prestosql/presto-cassandra-server repository.", "author": "findepi", "createdAt": "2020-01-01T13:44:36Z", "path": "presto-cassandra/pom.xml", "diffHunk": "@@ -160,8 +160,8 @@\n         </dependency>\n \n         <dependency>\n-            <groupId>io.prestosql.cassandra</groupId>\n-            <artifactId>cassandra-server</artifactId>", "originalCommit": "705b923103e9f6dca122761d2ef1d67bf0684d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUwNzY5OA==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362507698", "bodyText": "Also remove this:\nhttps://github.com/prestosql/presto/blob/c1e0d245787b503142a8b8dfc9733a34d0441017/pom.xml#L1190-L1200", "author": "findepi", "createdAt": "2020-01-02T15:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDAxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDI4OA==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362324288", "bodyText": "i am thinking it could make sense to convert CassandraServer to normal object, rather than having it a static instance.\n-- are we benefiting from the reuse of single cassandra instance across test classes?\nFWIW cassandra module runs tests single threaded today (https://github.com/prestosql/presto/blob/7aaa0f5fac1454b23e4bd2ac3a511d749bd00fbe/presto-cassandra/pom.xml#L17)\n\nthis means we don't need to worry about increased mem usage from multiple tests runs now\nhaving CassandraServer as an object could allow us to run the tests in 2 threads (memory permitting)", "author": "findepi", "createdAt": "2020-01-01T13:49:41Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/CassandraQueryRunner.java", "diffHunk": "@@ -44,16 +44,16 @@ public static synchronized DistributedQueryRunner createCassandraQueryRunner()\n \n         queryRunner.installPlugin(new CassandraPlugin());\n         queryRunner.createCatalog(\"cassandra\", \"cassandra\", ImmutableMap.of(\n-                \"cassandra.contact-points\", EmbeddedCassandra.getHost(),\n-                \"cassandra.native-protocol-port\", Integer.toString(EmbeddedCassandra.getPort()),\n+                \"cassandra.contact-points\", CassandraServer.getHost(),", "originalCommit": "705b923103e9f6dca122761d2ef1d67bf0684d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDQyNg==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362324426", "bodyText": "how long does it take to start cassandra?", "author": "findepi", "createdAt": "2020-01-01T13:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNTI0NQ==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362325245", "bodyText": "It takes about:\n\n37s when the image does not exist in the environment (+data load)\n17s when the image already exist in the environment (+data load)\n\nLet me check the performance with normal object version.", "author": "ebyhr", "createdAt": "2020-01-01T14:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyOTgwNA==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362329804", "bodyText": "Making CassandraServer non-static with 2 threads will extend the test time for a few minutes.\n14m 34s \u2192 16m 58s", "author": "ebyhr", "createdAt": "2020-01-01T15:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzOTg0Mg==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362339842", "bodyText": "I think it's worth it, since it brings more isolation.\n17 minutes is still a decent run time for a test configuration.\n(BTW Are there any test classes that could be easily merged?)", "author": "findepi", "createdAt": "2020-01-01T19:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM1OTI4MA==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362359280", "bodyText": "I think so too. Let me push the additional commit.\nCurrently, dockerized CassandraServer is called from 4 places.\n\nTestCassandraDistributedQueries\nTestCassandraIntegrationSmokeTest\nTestCassandraConnector\nTestCassandraTokenSplitManager\n\nWe could merge 3 & 4 technically, but I would keep the current implementation.", "author": "ebyhr", "createdAt": "2020-01-02T02:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNDI4OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM5MzU3OA==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362393578", "bodyText": "You want to retain ref to CassandraServer so that you close the docker container in @AfterClass\nit may be simpler to write if CassandraQueryRunner remains a utility class and simply takes the server as a param:\nprotected QueryRunner createQueryRunner()\n{ \n  this.server = new CassandraServer();\n  return CassandraQueryRunner.createCassandraQueryRunner(server);\n}\n\n@AfterClass(alwaysRun=true)\npublic void tearDown()\n{\n  this.server.close();\n}", "author": "findepi", "createdAt": "2020-01-02T08:09:49Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraDistributedQueries.java", "diffHunk": "@@ -32,7 +32,7 @@\n     protected QueryRunner createQueryRunner()\n             throws Exception\n     {\n-        return CassandraQueryRunner.createCassandraQueryRunner();\n+        return new CassandraQueryRunner().createCassandraQueryRunner();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM5NDAzNg==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362394036", "bodyText": "Add @AfterClass(alwaysRun=true) to clean this up", "author": "findepi", "createdAt": "2020-01-02T08:12:28Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraTokenSplitManager.java", "diffHunk": "@@ -30,15 +30,16 @@\n     private static final String KEYSPACE = \"test_cassandra_token_split_manager_keyspace\";\n     private static final int PARTITION_COUNT = 1000;\n \n+    private CassandraServer cassandraServer;\n     private CassandraSession session;\n     private CassandraTokenSplitManager splitManager;\n \n     @BeforeClass\n     public void setUp()\n             throws Exception\n     {\n-        CassandraServer.start();\n-        session = CassandraServer.getSession();\n+        cassandraServer = new CassandraServer();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUwODQxNQ==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362508415", "bodyText": "Was cassandra-foreground and cassandra.native.epoll.enabled something important?", "author": "findepi", "createdAt": "2020-01-02T15:16:07Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/CassandraServer.java", "diffHunk": "@@ -70,18 +68,16 @@ public static synchronized void start()\n \n         log.info(\"Starting cassandra...\");\n \n-        System.setProperty(\"cassandra.config\", \"file:\" + prepareCassandraYaml());\n-        System.setProperty(\"cassandra-foreground\", \"true\");\n-        System.setProperty(\"cassandra.native.epoll.enabled\", \"false\");", "originalCommit": "705b923103e9f6dca122761d2ef1d67bf0684d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2NzA3MA==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r363067070", "bodyText": "Yes, we couldn't run tests without these properties on EmbeddedCassandra.", "author": "ebyhr", "createdAt": "2020-01-05T03:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUwODQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUwOTUxOQ==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362509519", "bodyText": "We can probably save some time by limiting this to only the tables we need (some test classes need 1-2 tables). This is how we do for eg Postgres.\n(no change requested; might be a follow-up)", "author": "findepi", "createdAt": "2020-01-02T15:18:48Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/CassandraQueryRunner.java", "diffHunk": "@@ -30,32 +30,25 @@\n {\n     private CassandraQueryRunner() {}\n \n-    private static boolean tpchLoaded;\n-\n-    public static synchronized DistributedQueryRunner createCassandraQueryRunner()\n+    public static DistributedQueryRunner createCassandraQueryRunner(CassandraServer server)\n             throws Exception\n     {\n-        CassandraServer.start();\n-\n         DistributedQueryRunner queryRunner = new DistributedQueryRunner(createCassandraSession(\"tpch\"), 4);\n \n         queryRunner.installPlugin(new TpchPlugin());\n         queryRunner.createCatalog(\"tpch\", \"tpch\");\n \n         queryRunner.installPlugin(new CassandraPlugin());\n         queryRunner.createCatalog(\"cassandra\", \"cassandra\", ImmutableMap.of(\n-                \"cassandra.contact-points\", CassandraServer.getHost(),\n-                \"cassandra.native-protocol-port\", Integer.toString(CassandraServer.getPort()),\n+                \"cassandra.contact-points\", server.getHost(),\n+                \"cassandra.native-protocol-port\", Integer.toString(server.getPort()),\n                 \"cassandra.allow-drop-table\", \"true\"));\n \n-        if (!tpchLoaded) {\n-            createKeyspace(CassandraServer.getSession(), \"tpch\");\n-            List<TpchTable<?>> tables = TpchTable.getTables();\n-            copyTpchTables(queryRunner, \"tpch\", TINY_SCHEMA_NAME, createCassandraSession(\"tpch\"), tables);\n-            for (TpchTable<?> table : tables) {\n-                CassandraServer.refreshSizeEstimates(\"tpch\", table.getTableName());\n-            }\n-            tpchLoaded = true;\n+        createKeyspace(server.getSession(), \"tpch\");\n+        List<TpchTable<?>> tables = TpchTable.getTables();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUxMDgxNg==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362510816", "bodyText": "\ud83d\ude04", "author": "findepi", "createdAt": "2020-01-02T15:22:12Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/CassandraTestingUtils.java", "diffHunk": "@@ -132,7 +132,7 @@ public static void createTableClusteringKeysInequality(CassandraSession session,\n \n     public static void insertIntoTableClusteringKeysInequality(CassandraSession session, SchemaTableName table, Date date, int rowsCount)\n     {\n-        for (Integer rowNumber = 1; rowNumber <= rowsCount; rowNumber++) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUxMTg2Ng==", "url": "https://github.com/trinodb/trino/pull/2377#discussion_r362511866", "bodyText": "Let's see if this comment is still applicable.", "author": "findepi", "createdAt": "2020-01-02T15:25:07Z", "path": "presto-cassandra/src/test/java/io/prestosql/plugin/cassandra/TestCassandraDistributedQueries.java", "diffHunk": "@@ -17,15 +17,11 @@\n import io.prestosql.testing.MaterializedResult;\n import io.prestosql.testing.QueryRunner;\n import org.testng.annotations.AfterClass;\n-import org.testng.annotations.Test;\n \n import static io.prestosql.spi.type.VarcharType.VARCHAR;\n import static io.prestosql.testing.MaterializedResult.resultBuilder;\n import static io.prestosql.testing.assertions.Assert.assertEquals;\n \n-//Integrations tests fail when parallel, due to a bug or configuration error in the embedded\n-//cassandra instance. This problem results in either a hang in Thrift calls or broken sockets.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1c3720455c233082627d2d71503e242fc4c312d9", "url": "https://github.com/trinodb/trino/commit/1c3720455c233082627d2d71503e242fc4c312d9", "message": "Use dockerized Cassandra in tests", "committedDate": "2020-01-05T03:04:19Z", "type": "commit"}, {"oid": "8baacf724d7bcdab396521294d01adbf6de0fc13", "url": "https://github.com/trinodb/trino/commit/8baacf724d7bcdab396521294d01adbf6de0fc13", "message": "Make CassandraServer non-static", "committedDate": "2020-01-05T03:04:19Z", "type": "commit"}, {"oid": "2738fefe3be6c77f1185e0e82f5f91971ab79c10", "url": "https://github.com/trinodb/trino/commit/2738fefe3be6c77f1185e0e82f5f91971ab79c10", "message": "Run Cassandra tests with two threads", "committedDate": "2020-01-05T03:04:19Z", "type": "commit"}, {"oid": "f79bb4412ffe849078632383d990c70fb4a4e1f7", "url": "https://github.com/trinodb/trino/commit/f79bb4412ffe849078632383d990c70fb4a4e1f7", "message": "Fix syntax warning in Cassandra test", "committedDate": "2020-01-05T03:04:19Z", "type": "commit"}, {"oid": "f79bb4412ffe849078632383d990c70fb4a4e1f7", "url": "https://github.com/trinodb/trino/commit/f79bb4412ffe849078632383d990c70fb4a4e1f7", "message": "Fix syntax warning in Cassandra test", "committedDate": "2020-01-05T03:04:19Z", "type": "forcePushed"}]}