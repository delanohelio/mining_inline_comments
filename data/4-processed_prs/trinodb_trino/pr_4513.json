{"pr_number": 4513, "pr_title": "Make skip.header.line.count=1 files splittable", "pr_createdAt": "2020-07-21T11:37:31Z", "pr_url": "https://github.com/trinodb/trino/pull/4513", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0Mzk3NQ==", "url": "https://github.com/trinodb/trino/pull/4513#discussion_r458043975", "bodyText": "Move the comment below, or restructure like this:\nboolean splittable = true;\nif (s3SelectPushdownEnabled) {\n    // S3 Select pushdown works at the granularity of individual S3 objects\n    splittable = false;\n}\nif (getFooterCount(schema) != 0 || (getHeaderCount(schema) != 0 && getHeaderCount(schema) != 1)) {\n    // Files with skip.header.line.count/skip.foter.line.count are not splittable, except for skip.header.line.count = 1\n    // In that case, second split will not try to process header line as data anyway.\n    splittable = false;\n}", "author": "findepi", "createdAt": "2020-07-21T12:03:15Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/BackgroundHiveSplitLoader.java", "diffHunk": "@@ -490,7 +490,7 @@ private void invokeNoMoreSplitsIfNecessary()\n \n         // S3 Select pushdown works at the granularity of individual S3 objects,\n         // therefore we must not split files when it is enabled.\n-        boolean splittable = getHeaderCount(schema) == 0 && getFooterCount(schema) == 0 && !s3SelectPushdownEnabled;\n+        boolean splittable = !s3SelectPushdownEnabled && getFooterCount(schema) == 0 && getHeaderCount(schema) <= 1; // single header line files are still splittable", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NTAwNA==", "url": "https://github.com/trinodb/trino/pull/4513#discussion_r458045004", "bodyText": "Update io.prestosql.plugin.hive.TestBackgroundHiveSplitLoader#testCsv", "author": "findepi", "createdAt": "2020-07-21T12:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0Mzk3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTY0Nw==", "url": "https://github.com/trinodb/trino/pull/4513#discussion_r458051647", "bodyText": "Good catch, thanks.", "author": "pettyjamesm", "createdAt": "2020-07-21T12:17:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0Mzk3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDQzMA==", "url": "https://github.com/trinodb/trino/pull/4513#discussion_r458044430", "bodyText": "When headerCount > 1 then verify(start == 0 would be appropriate.", "author": "findepi", "createdAt": "2020-07-21T12:04:16Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/util/HiveUtil.java", "diffHunk": "@@ -256,7 +256,8 @@ private HiveUtil()\n             RecordReader<WritableComparable, Writable> recordReader = (RecordReader<WritableComparable, Writable>) inputFormat.getRecordReader(fileSplit, jobConf, Reporter.NULL);\n \n             int headerCount = getHeaderCount(schema);\n-            if (headerCount > 0) {\n+            //  Files with only a single header row are considered splittable and should only skip the first record on the first split\n+            if ((start == 0 && headerCount == 1) || headerCount > 1) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1MTU2OA==", "url": "https://github.com/trinodb/trino/pull/4513#discussion_r458051568", "bodyText": "Giving this some thought, I think maybe a better formulation is:\nif (start == 0 && headerCount > 0) {\n\nBasically decoupling the knowledge of the special case from the handling here and saying that only splits at the beginning of the file will be considered for header skipping and it's up to the split generator to know when it's safe or not safe to split the file. Thoughts?", "author": "pettyjamesm", "createdAt": "2020-07-21T12:17:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2NjEwMA==", "url": "https://github.com/trinodb/trino/pull/4513#discussion_r458066100", "bodyText": "Sounds good to me.", "author": "findepi", "createdAt": "2020-07-21T12:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0Njc3NA==", "url": "https://github.com/trinodb/trino/pull/4513#discussion_r458046774", "bodyText": "I guess you can avoid adding an overload, if you define 100 bytes as the const\nand use that in test code. This way test code is slightly more complicated (bad),\nbut common code remains simpler.", "author": "findepi", "createdAt": "2020-07-21T12:08:39Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestHiveSplitSource.java", "diffHunk": "@@ -286,17 +315,22 @@ private TestSplit(int id)\n         }\n \n         private TestSplit(int id, OptionalInt bucketNumber)\n+        {\n+            this(id, bucketNumber, DataSize.ofBytes(100));\n+        }\n+\n+        private TestSplit(int id, OptionalInt bucketNumber, DataSize fileSize)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8ea0dff17022018a3944ce5e1e427bac671abdd9", "url": "https://github.com/trinodb/trino/commit/8ea0dff17022018a3944ce5e1e427bac671abdd9", "message": "Make skip.header.line.count=1 files splittable\n\nIn general, files with arbitrarily many header lines are not\ncurrently considered splittable because the hive record reading\nlogic does not work when rows might span over multiple splits.\nHowever, the relatively common case of having a single header\nrow to skip is actually safe and can be considered splittable.\nObserve:\n- when skip.header.line.count = 1, the hive split boundary handling\n  works even if the header line extends into the subsequent split\n  because the reader of the next split will only process rows that\n  start within the boundary of the split, not rows that extend\n  into the split from the previous one. No additional logic required.\n- when skip.header.line.count > 1 and the header rows extend past\n  the first split end boundary, it becomes for a reader to know which\n  rows should be skipped without reading from the beginning. This\n  is still considered unsplittable.", "committedDate": "2020-07-21T12:27:58Z", "type": "commit"}, {"oid": "28d64d45da18f56439ee9590ba6b89a5d11e810e", "url": "https://github.com/trinodb/trino/commit/28d64d45da18f56439ee9590ba6b89a5d11e810e", "message": "Add unit test for split boundary logic", "committedDate": "2020-07-21T12:27:58Z", "type": "commit"}, {"oid": "28d64d45da18f56439ee9590ba6b89a5d11e810e", "url": "https://github.com/trinodb/trino/commit/28d64d45da18f56439ee9590ba6b89a5d11e810e", "message": "Add unit test for split boundary logic", "committedDate": "2020-07-21T12:27:58Z", "type": "forcePushed"}]}