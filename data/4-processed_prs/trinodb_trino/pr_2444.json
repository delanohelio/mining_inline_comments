{"pr_number": 2444, "pr_title": "Handle common disk failures in the spill code path", "pr_createdAt": "2020-01-09T00:28:20Z", "pr_url": "https://github.com/trinodb/trino/pull/2444", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU2NjgyOA==", "url": "https://github.com/trinodb/trino/pull/2444#discussion_r364566828", "bodyText": "Please use ofMinutes(5)", "author": "kokosing", "createdAt": "2020-01-09T05:41:24Z", "path": "presto-main/src/main/java/io/prestosql/spiller/FileSingleStreamSpillerFactory.java", "diffHunk": "@@ -60,6 +69,7 @@\n     @VisibleForTesting\n     static final String SPILL_FILE_SUFFIX = \".bin\";\n     private static final String SPILL_FILE_GLOB = \"spill*.bin\";\n+    private static final Duration SPILL_PATH_HEALTH_EXPIRY_INTERVAL = Duration.ofSeconds(300);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU2Njk3MA==", "url": "https://github.com/trinodb/trino/pull/2444#discussion_r364566970", "bodyText": "please inline cacheLoader", "author": "kokosing", "createdAt": "2020-01-09T05:42:11Z", "path": "presto-main/src/main/java/io/prestosql/spiller/FileSingleStreamSpillerFactory.java", "diffHunk": "@@ -106,13 +117,18 @@ public FileSingleStreamSpillerFactory(\n             catch (IOException e) {\n                 throw new IllegalArgumentException(format(\"could not create spill path %s; adjust %s config property or filesystem permissions\", path, SPILLER_SPILL_PATH), e);\n             }\n-            if (!path.toFile().canWrite()) {\n-                throw new IllegalArgumentException(format(\"spill path %s is not writable; adjust %s config property or filesystem permissions\", path, SPILLER_SPILL_PATH));\n+            if (!isAccessible(path)) {\n+                throw new IllegalArgumentException(format(\"spill path %s is not accessible, it must be +rwx; adjust %s config property or filesystem permissions\", path, SPILLER_SPILL_PATH));\n             }\n         });\n         this.maxUsedSpaceThreshold = maxUsedSpaceThreshold;\n         this.spillEncryptionEnabled = spillEncryptionEnabled;\n         this.roundRobinIndex = 0;\n+\n+        CacheLoader<Path, Boolean> cacheLoader = CacheLoader.from(path -> isAccessible(path) && isSeeminglyHealthy(path));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2f2ba5985b4e817de75593df0234048b01faa2fe", "url": "https://github.com/trinodb/trino/commit/2f2ba5985b4e817de75593df0234048b01faa2fe", "message": "Handle common disk failures in the spill code path\n\nIn a JBOD setup disk failures are quite common. In the absence of basic failure\nhandling, a presto worker will not recover until a config is changed and process\nis restarted -- which is difficult to handle operationally.\n\nSpill path discovery routine already handles the case when one or more paths\nare out of free space, this change adds couple of additional checks to cover\nout of band disk failures.", "committedDate": "2020-01-09T16:46:55Z", "type": "commit"}, {"oid": "2f2ba5985b4e817de75593df0234048b01faa2fe", "url": "https://github.com/trinodb/trino/commit/2f2ba5985b4e817de75593df0234048b01faa2fe", "message": "Handle common disk failures in the spill code path\n\nIn a JBOD setup disk failures are quite common. In the absence of basic failure\nhandling, a presto worker will not recover until a config is changed and process\nis restarted -- which is difficult to handle operationally.\n\nSpill path discovery routine already handles the case when one or more paths\nare out of free space, this change adds couple of additional checks to cover\nout of band disk failures.", "committedDate": "2020-01-09T16:46:55Z", "type": "forcePushed"}]}