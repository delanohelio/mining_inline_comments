{"pr_number": 3557, "pr_title": "Properly initialize Hdfs configuration in RubixInitializer", "pr_createdAt": "2020-04-27T12:37:42Z", "pr_url": "https://github.com/trinodb/trino/pull/3557", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2NDgxMg==", "url": "https://github.com/trinodb/trino/pull/3557#discussion_r416064812", "bodyText": "uppercase \"HDFS\" (same in cmt msg)", "author": "findepi", "createdAt": "2020-04-27T18:50:37Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -84,14 +88,14 @@ public void initializeRubix(NodeManager nodeManager)\n                         rubixConfigurationInitializer.setMasterAddress(master.getHostAndPort());\n                         rubixConfigurationInitializer.setCurrentNodeAddress(nodeManager.getCurrentNode().getHost());\n \n-                        Configuration configuration = new Configuration(false);\n-                        for (ConfigurationInitializer configurationInitializer : configurationInitializers) {\n-                            configurationInitializer.initializeConfiguration(configuration);\n-                        }\n-\n-                        // RubixConfigurationInitializer.initializeConfiguration will not update configurations yet as it has not been fully initialized\n-                        // Apply configurations from it by skipping init check\n+                        Configuration configuration = getInitialConfiguration();\n+                        // Perform standard hdfs configuration initialization.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2NjAyNQ==", "url": "https://github.com/trinodb/trino/pull/3557#discussion_r416066025", "bodyText": "dependency cycle... do you see a way to avoid it?", "author": "findepi", "createdAt": "2020-04-27T18:52:13Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -84,14 +88,14 @@ public void initializeRubix(NodeManager nodeManager)\n                         rubixConfigurationInitializer.setMasterAddress(master.getHostAndPort());\n                         rubixConfigurationInitializer.setCurrentNodeAddress(nodeManager.getCurrentNode().getHost());\n \n-                        Configuration configuration = new Configuration(false);\n-                        for (ConfigurationInitializer configurationInitializer : configurationInitializers) {\n-                            configurationInitializer.initializeConfiguration(configuration);\n-                        }\n-\n-                        // RubixConfigurationInitializer.initializeConfiguration will not update configurations yet as it has not been fully initialized\n-                        // Apply configurations from it by skipping init check\n+                        Configuration configuration = getInitialConfiguration();\n+                        // Perform standard hdfs configuration initialization.\n+                        // This will also call out to RubixConfigurationInitializer but this will be no-op because", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE2MTE0Mw==", "url": "https://github.com/trinodb/trino/pull/3557#discussion_r416161143", "bodyText": "Not sure if that is possible really (at least I do not see any simple way to do that). The dependency on other ConfigurationInitializers we have here is not just of technical nature. We cannot just drop it. We really need to run all those initializers before we can start-up Rubix infrastructure. Theoretically we could try to create Provider<RubixConfigurationInitializer> and do initialization there, but I do not believe it would fly:\na) how can we inject other ConfigurationInitializers to provider?\nb) Rubix initialization require node to be part of the cluster. I would expect guice bootstrapping happens before that....", "author": "losipiuk", "createdAt": "2020-04-27T21:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2NjAyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2NjU2MQ==", "url": "https://github.com/trinodb/trino/pull/3557#discussion_r416066561", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    // cacheReady is not yet changed to true.\n          \n          \n            \n                                    // cacheReady is not yet set.", "author": "findepi", "createdAt": "2020-04-27T18:52:57Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/rubix/RubixInitializer.java", "diffHunk": "@@ -91,9 +91,9 @@ public void initializeRubix(NodeManager nodeManager)\n                         Configuration configuration = getInitialConfiguration();\n                         // Perform standard hdfs configuration initialization.\n                         // This will also call out to RubixConfigurationInitializer but this will be no-op because\n-                        // cacheNotReady is not yet changed to false.\n+                        // cacheReady is not yet changed to true.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "22af8ff744d90a41bdcfcf22bc73f2c3b5b4ad0c", "url": "https://github.com/trinodb/trino/commit/22af8ff744d90a41bdcfcf22bc73f2c3b5b4ad0c", "message": "Properly initialize HDFS configuration in RubixInitializer", "committedDate": "2020-04-27T21:18:18Z", "type": "commit"}, {"oid": "ca8bb4ab2f5167c1d2526a83b837d92b4bc42d5f", "url": "https://github.com/trinodb/trino/commit/ca8bb4ab2f5167c1d2526a83b837d92b4bc42d5f", "message": "Rename variable", "committedDate": "2020-04-27T21:18:24Z", "type": "commit"}, {"oid": "ca8bb4ab2f5167c1d2526a83b837d92b4bc42d5f", "url": "https://github.com/trinodb/trino/commit/ca8bb4ab2f5167c1d2526a83b837d92b4bc42d5f", "message": "Rename variable", "committedDate": "2020-04-27T21:18:24Z", "type": "forcePushed"}]}