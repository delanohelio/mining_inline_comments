{"pr_number": 5249, "pr_title": "Test RDBMS connectos large IN capabilities", "pr_createdAt": "2020-09-21T20:30:07Z", "pr_url": "https://github.com/trinodb/trino/pull/5249", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzMzg0MQ==", "url": "https://github.com/trinodb/trino/pull/5249#discussion_r492333841", "bodyText": "am i right this test fails (as per comment above)?", "author": "findepi", "createdAt": "2020-09-21T20:41:58Z", "path": "presto-mysql/src/test/java/io/prestosql/plugin/mysql/TestMySqlIntegrationSmokeTest.java", "diffHunk": "@@ -31,4 +34,16 @@ protected QueryRunner createQueryRunner()\n         mysqlServer = new TestingMySqlServer(false);\n         return createMySqlQueryRunner(mysqlServer, CUSTOMER, NATION, ORDERS, REGION);\n     }\n+\n+    @Test\n+    public void testNativeLargeIn()\n+    {\n+        // 200_000 causes error:\n+        // \"com.mysql.jdbc.PacketTooBigException: Packet for query is too large (1488946 > 1048576).\n+        //  You can change this value on the server by setting the max_allowed_packet' variable.\"\n+        String longValues = range(0, 100_000)\n+                .mapToObj(Integer::toString)\n+                .collect(joining(\", \"));\n+        mysqlServer.execute(\"SELECT count(*) FROM tpch.orders WHERE orderkey IN (\" + longValues + \")\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNDA5Nw==", "url": "https://github.com/trinodb/trino/pull/5249#discussion_r492334097", "bodyText": "for 100_000 it works. it fails with 200_000", "author": "sopel39", "createdAt": "2020-09-21T20:42:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzMzg0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNTIxNg==", "url": "https://github.com/trinodb/trino/pull/5249#discussion_r492335216", "bodyText": "I'd rather see this as a predicate pushdown test that exercises Presto MySQL connector too.\n(the connector can block large push downs, and then the test would become irrelevant to Presto codebase)", "author": "findepi", "createdAt": "2020-09-21T20:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzMzg0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzODExMw==", "url": "https://github.com/trinodb/trino/pull/5249#discussion_r492338113", "bodyText": "I'd rather see this as a predicate pushdown test that exercises Presto MySQL connector too.\n\nIt's very difficult to make tuple domain so large to be pushed to connector. Planning IN with 100_000 values takes forever in Presto.\n\n(the connector can block large push downs, and then the test would become irrelevant to Presto codebase)\n\nI think it's still relevant as it's base for choosing what the threshold for tuple domain simplification should be (link to test case case be part of commit message).\nPerhaps someone would like to increase the threshold, then he can rerun the native test with large IN list.", "author": "sopel39", "createdAt": "2020-09-21T20:50:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzMzg0MQ=="}], "type": "inlineReview"}, {"oid": "8935a215677639b928660effe9c0271be8a32ad6", "url": "https://github.com/trinodb/trino/commit/8935a215677639b928660effe9c0271be8a32ad6", "message": "Test RDBMS connectos large IN capabilities", "committedDate": "2020-09-22T14:42:01Z", "type": "commit"}, {"oid": "8935a215677639b928660effe9c0271be8a32ad6", "url": "https://github.com/trinodb/trino/commit/8935a215677639b928660effe9c0271be8a32ad6", "message": "Test RDBMS connectos large IN capabilities", "committedDate": "2020-09-22T14:42:01Z", "type": "forcePushed"}]}