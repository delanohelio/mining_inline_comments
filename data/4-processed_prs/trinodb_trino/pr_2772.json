{"pr_number": 2772, "pr_title": "Use JAX-RS HttpHeaders in HttpRequestSessionContext", "pr_createdAt": "2020-02-09T09:28:03Z", "pr_url": "https://github.com/trinodb/trino/pull/2772", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5MjE2MA==", "url": "https://github.com/trinodb/trino/pull/2772#discussion_r376792160", "bodyText": "I don't think this method does what you think:\n     * @return the HTTP header value. If the HTTP header is not present then\n     *         {@code null} is returned. If the HTTP header is present but has no\n     *         value then the empty string is returned. If the HTTP header is present\n     *         more than once then the values of joined together and separated by a ','\n     *         character.\n\nI think you want headers.getRequestHeaders().getFirst(name)", "author": "dain", "createdAt": "2020-02-09T15:23:32Z", "path": "presto-main/src/main/java/io/prestosql/server/HttpRequestSessionContext.java", "diffHunk": "@@ -109,32 +109,32 @@\n     private final boolean clientTransactionSupport;\n     private final String clientInfo;\n \n-    public HttpRequestSessionContext(HeaderSupport forwardedHeaderSupport, HttpServletRequest servletRequest)\n+    public HttpRequestSessionContext(HeaderSupport forwardedHeaderSupport, HttpHeaders headers, String remoteAddress, Optional<Identity> authenticatedIdentity)\n             throws WebApplicationException\n     {\n-        catalog = trimEmptyToNull(servletRequest.getHeader(PRESTO_CATALOG));\n-        schema = trimEmptyToNull(servletRequest.getHeader(PRESTO_SCHEMA));\n-        path = trimEmptyToNull(servletRequest.getHeader(PRESTO_PATH));\n+        catalog = trimEmptyToNull(headers.getHeaderString(PRESTO_CATALOG));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwMDAzNQ==", "url": "https://github.com/trinodb/trino/pull/2772#discussion_r376800035", "bodyText": "Maybe we should have a helper method that fails if the header is specified multiple times.", "author": "electrum", "createdAt": "2020-02-09T17:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5MjE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwMTY3Mw==", "url": "https://github.com/trinodb/trino/pull/2772#discussion_r376801673", "bodyText": "That would be a backwards incompatible change since the current code does \"If there are multiple headers with the same name, this method returns the first head in the request.\"", "author": "dain", "createdAt": "2020-02-09T17:48:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5MjE2MA=="}], "type": "inlineReview"}, {"oid": "55c7425cbddb138687cd942864d4b73b5a0d3563", "url": "https://github.com/trinodb/trino/commit/55c7425cbddb138687cd942864d4b73b5a0d3563", "message": "Use JAX-RS HttpHeaders in HttpRequestSessionContext", "committedDate": "2020-02-09T19:43:02Z", "type": "commit"}, {"oid": "55c7425cbddb138687cd942864d4b73b5a0d3563", "url": "https://github.com/trinodb/trino/commit/55c7425cbddb138687cd942864d4b73b5a0d3563", "message": "Use JAX-RS HttpHeaders in HttpRequestSessionContext", "committedDate": "2020-02-09T19:43:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwOTk5MQ==", "url": "https://github.com/trinodb/trino/pull/2772#discussion_r376809991", "bodyText": "consider inlining this", "author": "dain", "createdAt": "2020-02-09T19:46:59Z", "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -150,13 +154,18 @@ public Response postStatement(\n             String statement,\n             @HeaderParam(X_FORWARDED_PROTO) String xForwardedProto,\n             @Context HttpServletRequest servletRequest,\n+            @Context HttpHeaders httpHeaders,\n             @Context UriInfo uriInfo)\n     {\n         if (isNullOrEmpty(statement)) {\n             throw badRequest(BAD_REQUEST, \"SQL statement is empty\");\n         }\n \n-        SessionContext sessionContext = new HttpRequestSessionContext(forwardedHeaderSupport, servletRequest);\n+        String remoteAddress = servletRequest.getRemoteAddr();\n+        Optional<Identity> identity = Optional.ofNullable((Identity) servletRequest.getAttribute(AUTHENTICATED_IDENTITY));\n+        MultivaluedMap<String, String> headers = httpHeaders.getRequestHeaders();", "originalCommit": "55c7425cbddb138687cd942864d4b73b5a0d3563", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}