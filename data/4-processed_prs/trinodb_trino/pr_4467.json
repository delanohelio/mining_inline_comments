{"pr_number": 4467, "pr_title": "Handle NaN in Parquet statistics", "pr_createdAt": "2020-07-15T21:02:41Z", "pr_url": "https://github.com/trinodb/trino/pull/4467", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzNDU0MQ==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456034541", "bodyText": "why not just\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (isFloatingPointNaN(type, min) || isFloatingPointNaN(type, max)) {\n          \n          \n            \n                        if (Float.isNaN(floatStatistics.getMin()) || Float.isNaN(floatStatistics.getMax())) {\n          \n      \n    \n    \n  \n\n?", "author": "findepi", "createdAt": "2020-07-16T19:44:54Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/predicate/TupleDomainParquetPredicate.java", "diffHunk": "@@ -192,9 +193,12 @@ public static Domain getDomain(Type type, long rowCount, Statistics<?> statistic\n                 return Domain.create(ValueSet.all(type), hasNullValue);\n             }\n \n-            ParquetIntegerStatistics parquetStatistics = new ParquetIntegerStatistics(\n-                    (long) floatToRawIntBits(floatStatistics.getMin()),\n-                    (long) floatToRawIntBits(floatStatistics.getMax()));\n+            long min = floatToIntBits(floatStatistics.getMin());\n+            long max = floatToIntBits(floatStatistics.getMax());\n+            if (isFloatingPointNaN(type, min) || isFloatingPointNaN(type, max)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEwMTA1MA==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456101050", "bodyText": "Silly.  The first version was trying to do it more generically and when I refactored, I copied/pasted.", "author": "aalbu", "createdAt": "2020-07-16T21:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzNDU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzNDcxOA==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456034718", "bodyText": "as above", "author": "findepi", "createdAt": "2020-07-16T19:45:07Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/predicate/TupleDomainParquetPredicate.java", "diffHunk": "@@ -205,6 +209,10 @@ public static Domain getDomain(Type type, long rowCount, Statistics<?> statistic\n                 failWithCorruptionException(failOnCorruptedParquetStatistics, column, id, doubleStatistics);\n                 return Domain.create(ValueSet.all(type), hasNullValue);\n             }\n+            if (isFloatingPointNaN(type, doubleStatistics.genericGetMin()) || isFloatingPointNaN(type, doubleStatistics.genericGetMax())) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzNTA0NA==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456035044", "bodyText": "Double.isNaN", "author": "findepi", "createdAt": "2020-07-16T19:45:33Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/predicate/TupleDomainParquetPredicate.java", "diffHunk": "@@ -316,6 +324,9 @@ public static Domain getDomain(Type type, DictionaryDescriptor dictionaryDescrip\n         if (type.equals(DOUBLE) && columnDescriptor.getPrimitiveType().getPrimitiveTypeName() == PrimitiveTypeName.DOUBLE) {\n             List<Domain> domains = new ArrayList<>();\n             for (int i = 0; i < dictionarySize; i++) {\n+                if (isFloatingPointNaN(type, dictionary.decodeToDouble(i))) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAzNTExMQ==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456035111", "bodyText": "probably same", "author": "findepi", "createdAt": "2020-07-16T19:45:39Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/predicate/TupleDomainParquetPredicate.java", "diffHunk": "@@ -325,6 +336,9 @@ public static Domain getDomain(Type type, DictionaryDescriptor dictionaryDescrip\n         if (type.equals(DOUBLE) && columnDescriptor.getPrimitiveType().getPrimitiveTypeName() == PrimitiveTypeName.FLOAT) {\n             List<Domain> domains = new ArrayList<>();\n             for (int i = 0; i < dictionarySize; i++) {\n+                if (isFloatingPointNaN(type, dictionary.decodeToFloat(i))) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTk2OA==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456271968", "bodyText": "why the switch? Should not matter as for non-NaNs behaviour is the same. Yet I am curious.", "author": "losipiuk", "createdAt": "2020-07-17T07:37:23Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/predicate/TupleDomainParquetPredicate.java", "diffHunk": "@@ -191,11 +191,13 @@ public static Domain getDomain(Type type, long rowCount, Statistics<?> statistic\n                 failWithCorruptionException(failOnCorruptedParquetStatistics, column, id, floatStatistics);\n                 return Domain.create(ValueSet.all(type), hasNullValue);\n             }\n+            if (floatStatistics.genericGetMin().isNaN() || floatStatistics.genericGetMax().isNaN()) {\n+                return Domain.create(ValueSet.all(type), hasNullValue);\n+            }\n \n             ParquetIntegerStatistics parquetStatistics = new ParquetIntegerStatistics(\n-                    (long) floatToRawIntBits(floatStatistics.getMin()),\n-                    (long) floatToRawIntBits(floatStatistics.getMax()));\n-\n+                    (long) floatToIntBits(floatStatistics.getMin()),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQyODExMA==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456428110", "bodyText": "Simply because we know that the value isn't NaN.  It isn't a necessary change, so I can roll it back.", "author": "aalbu", "createdAt": "2020-07-17T13:03:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTk2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQyOTg4Mw==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456429883", "bodyText": "Actually if we know that value is not NaN calling to floatToRawIntBits seems more natural. As this is floatToIntBits which has NaN handling.\nHere is code of floatToIntBits():\n    public static int floatToIntBits(float value) {\n        if (!isNaN(value)) {\n            return floatToRawIntBits(value);\n        }\n        return 0x7fc00000;\n    }", "author": "losipiuk", "createdAt": "2020-07-17T13:07:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTk2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0NzUxNQ==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456447515", "bodyText": "Thanks, I got my wires crossed there.", "author": "aalbu", "createdAt": "2020-07-17T13:37:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3MTk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3Njc5MQ==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456276791", "bodyText": "extract dictionary.decodeToDouble(i) as variable\n(shouldn't matter in practice but still)", "author": "findepi", "createdAt": "2020-07-17T07:47:16Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/predicate/TupleDomainParquetPredicate.java", "diffHunk": "@@ -316,6 +322,9 @@ public static Domain getDomain(Type type, DictionaryDescriptor dictionaryDescrip\n         if (type.equals(DOUBLE) && columnDescriptor.getPrimitiveType().getPrimitiveTypeName() == PrimitiveTypeName.DOUBLE) {\n             List<Domain> domains = new ArrayList<>();\n             for (int i = 0; i < dictionarySize; i++) {\n+                if (Double.isNaN(dictionary.decodeToDouble(i))) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3Njg0Mg==", "url": "https://github.com/trinodb/trino/pull/4467#discussion_r456276842", "bodyText": "variable", "author": "findepi", "createdAt": "2020-07-17T07:47:21Z", "path": "presto-parquet/src/main/java/io/prestosql/parquet/predicate/TupleDomainParquetPredicate.java", "diffHunk": "@@ -325,6 +334,9 @@ public static Domain getDomain(Type type, DictionaryDescriptor dictionaryDescrip\n         if (type.equals(DOUBLE) && columnDescriptor.getPrimitiveType().getPrimitiveTypeName() == PrimitiveTypeName.FLOAT) {\n             List<Domain> domains = new ArrayList<>();\n             for (int i = 0; i < dictionarySize; i++) {\n+                if (Float.isNaN(dictionary.decodeToFloat(i))) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2235b45d4c40e1029fbd0b7d6cbbbe0f62e3966e", "url": "https://github.com/trinodb/trino/commit/2235b45d4c40e1029fbd0b7d6cbbbe0f62e3966e", "message": "Handle NaN in Parquet statistics", "committedDate": "2020-07-17T19:36:06Z", "type": "commit"}, {"oid": "2235b45d4c40e1029fbd0b7d6cbbbe0f62e3966e", "url": "https://github.com/trinodb/trino/commit/2235b45d4c40e1029fbd0b7d6cbbbe0f62e3966e", "message": "Handle NaN in Parquet statistics", "committedDate": "2020-07-17T19:36:06Z", "type": "forcePushed"}]}