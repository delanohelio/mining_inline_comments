{"pr_number": 4143, "pr_title": "Extend null_format support to Rctext and Sequencefile formats", "pr_createdAt": "2020-06-22T13:41:39Z", "pr_url": "https://github.com/trinodb/trino/pull/4143", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4NTY4Ng==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443785686", "bodyText": "wrap on each comma or keep it single line.", "author": "losipiuk", "createdAt": "2020-06-22T19:44:33Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveStorageFormats.java", "diffHunk": "@@ -299,12 +299,13 @@ private static StorageFormat storageFormat(String name)\n \n     private static StorageFormat storageFormat(String name, Map<String, String> sessionProperties)\n     {\n-        return new StorageFormat(name, ImmutableMap.of(), sessionProperties);\n+        return new StorageFormat(name, sessionProperties, ImmutableMap.of());\n     }\n \n-    private static StorageFormat storageFormat(String name, Map<String, String> properties, Map<String, String> sessionProperties)\n+    private static StorageFormat storageFormat(\n+            String name, Map<String, String> sessionProperties, Map<String, String> properties)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4NTczNg==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443785736", "bodyText": "wrap on each comma or keep it single line.", "author": "losipiuk", "createdAt": "2020-06-22T19:44:41Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveStorageFormats.java", "diffHunk": "@@ -313,7 +314,8 @@ private static StorageFormat storageFormat(String name, Map<String, String> prop\n         private final Map<String, String> properties;\n         private final Map<String, String> sessionProperties;\n \n-        private StorageFormat(String name, Map<String, String> properties, Map<String, String> sessionProperties)\n+        private StorageFormat(\n+                String name, Map<String, String> sessionProperties, Map<String, String> properties)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MTU3Ng==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443791576", "bodyText": "interesting. I though it would be escaped :)", "author": "losipiuk", "createdAt": "2020-06-22T19:57:15Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveStorageFormats.java", "diffHunk": "@@ -185,6 +200,37 @@ public void testInsertIntoPartitionedTable(StorageFormat storageFormat)\n         query(format(\"DROP TABLE %s\", tableName));\n     }\n \n+    @Test(dataProvider = \"storage_formats_with_null_format\", groups = STORAGE_FORMATS)\n+    public void testInsertIntoTableWithNullFormat(StorageFormat storageFormat)\n+    {\n+        String tableName = format(\"storage_format_%s_with_null_format\", storageFormat.getName());\n+        String nullFormat = \"null_value\";\n+\n+        query(format(\"CREATE TABLE %s (name VARCHAR) \" +\n+                        \"WITH (format = '%s', null_format = '%s')\",\n+                tableName,\n+                storageFormat.getName(),\n+                nullFormat));\n+\n+        // \\N is the default null format\n+        String[] values = new String[] {nullFormat, null, \"non-null\", \"\", \"\\\\N\"};\n+\n+        Row[] storedValues = Arrays.stream(values).map(Row::row).toArray(Row[]::new);\n+        // If you try to put the null format in a table, it will come out as null.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjAxNw==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443792017", "bodyText": "put this one in finally", "author": "losipiuk", "createdAt": "2020-06-22T19:58:05Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveStorageFormats.java", "diffHunk": "@@ -185,6 +200,37 @@ public void testInsertIntoPartitionedTable(StorageFormat storageFormat)\n         query(format(\"DROP TABLE %s\", tableName));\n     }\n \n+    @Test(dataProvider = \"storage_formats_with_null_format\", groups = STORAGE_FORMATS)\n+    public void testInsertIntoTableWithNullFormat(StorageFormat storageFormat)\n+    {\n+        String tableName = format(\"storage_format_%s_with_null_format\", storageFormat.getName());\n+        String nullFormat = \"null_value\";\n+\n+        query(format(\"CREATE TABLE %s (name VARCHAR) \" +\n+                        \"WITH (format = '%s', null_format = '%s')\",\n+                tableName,\n+                storageFormat.getName(),\n+                nullFormat));\n+\n+        // \\N is the default null format\n+        String[] values = new String[] {nullFormat, null, \"non-null\", \"\", \"\\\\N\"};\n+\n+        Row[] storedValues = Arrays.stream(values).map(Row::row).toArray(Row[]::new);\n+        // If you try to put the null format in a table, it will come out as null.\n+        storedValues[0] = row((Object) null);\n+\n+        String placeholders = String.join(\", \", Collections.nCopies(values.length, \"(?)\"));\n+\n+        query(format(\"INSERT INTO %s VALUES %s\", tableName, placeholders),\n+                Arrays.stream(values)\n+                        .map(value -> param(JDBCType.VARCHAR, value))\n+                        .toArray(QueryParam[]::new));\n+\n+        assertThat(query(format(\"SELECT * FROM %s\", tableName))).containsOnly(storedValues);\n+\n+        onHive().executeQuery(format(\"DROP TABLE %s\", tableName));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkwMzQ1Mw==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443903453", "bodyText": "Almost all of the product tests don't include that step; should I add it throughout this file?", "author": "jirassimok", "createdAt": "2020-06-23T00:59:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3MTI2Mg==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r444071262", "bodyText": "No never mind. Keep it as is. It does not matter much and code in finally can actually make it harder to debug test by masking the exception which caused original failure.", "author": "losipiuk", "createdAt": "2020-06-23T08:59:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjAxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjU3Ng==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443792576", "bodyText": "can you also add another test which inserts using hive (or extend this one)?", "author": "losipiuk", "createdAt": "2020-06-22T19:59:16Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveStorageFormats.java", "diffHunk": "@@ -185,6 +200,37 @@ public void testInsertIntoPartitionedTable(StorageFormat storageFormat)\n         query(format(\"DROP TABLE %s\", tableName));\n     }\n \n+    @Test(dataProvider = \"storage_formats_with_null_format\", groups = STORAGE_FORMATS)\n+    public void testInsertIntoTableWithNullFormat(StorageFormat storageFormat)\n+    {\n+        String tableName = format(\"storage_format_%s_with_null_format\", storageFormat.getName());\n+        String nullFormat = \"null_value\";\n+\n+        query(format(\"CREATE TABLE %s (name VARCHAR) \" +\n+                        \"WITH (format = '%s', null_format = '%s')\",\n+                tableName,\n+                storageFormat.getName(),\n+                nullFormat));\n+\n+        // \\N is the default null format\n+        String[] values = new String[] {nullFormat, null, \"non-null\", \"\", \"\\\\N\"};\n+\n+        Row[] storedValues = Arrays.stream(values).map(Row::row).toArray(Row[]::new);\n+        // If you try to put the null format in a table, it will come out as null.\n+        storedValues[0] = row((Object) null);\n+\n+        String placeholders = String.join(\", \", Collections.nCopies(values.length, \"(?)\"));\n+\n+        query(format(\"INSERT INTO %s VALUES %s\", tableName, placeholders),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkxNDE2NA==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443914164", "bodyText": "This sounds simple, but I'm running into some unusual issues with it\u2014Hive seems to be insert all of 'null_value', null, and '\\N' as null, which is not what I expected, and seems less-correct than the behavior for inserting from Presto. I'm not quite sure what to do about this.", "author": "jirassimok", "createdAt": "2020-06-23T01:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2OTU4MA==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r444069580", "bodyText": "This is not what I am seeing:\nOn hive:\ncreate table t2 (x string) tblproperties('serialization.null.format'='nullvalue');\ninsert into table t2 values ('\\\\N');\ninsert into table t2 values ('nullvalue');\nselect * from t2;\n+-------+\n| t2.x  |\n+-------+\n| \\N    |\n| NULL  |\n+-------+\n\nIs that happening for all the fileformats? Which environment are you running against. I run against HDP3. Are we triggering some Hive bug?", "author": "losipiuk", "createdAt": "2020-06-23T08:56:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0MDA0NQ==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r444240045", "bodyText": "It doesn't seem to work when you specify a format that respects serialization.null.format.\ncreate table t3 (x string) stored as textfile tblproperties('serialization.null.format'='null_value');\ninsert into t3 values ('null_value'), ('\\\\N');\nselect * from t3;\n\n+-------+--+\n| t3.x  |\n+-------+--+\n| NULL  |\n| NULL  |\n+-------+--+\n\nI'm thinking this isn't a Presto issue, so the solution is to test this a different way (e.g. making it an external table and using a static file, but that's hard except for textfile format, and the integration tests test that).", "author": "jirassimok", "createdAt": "2020-06-23T13:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0NDMwOA==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r444244308", "bodyText": "it is textfile by default.", "author": "losipiuk", "createdAt": "2020-06-23T13:56:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMxNzEwMA==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r444317100", "bodyText": "I tried to work around it in old Hive but I failed. The only idea I have is to guard this assertion with hive version. So we do not check it for old hive versions which seem buggy.", "author": "losipiuk", "createdAt": "2020-06-23T15:33:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1MTMyMg==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r444551322", "bodyText": "After thinking for a bit, I think the best solution is to just change the test to avoid this issue entirely, so I've just pushed that. It's a bug in Hive, not Presto, and Presto never saw anything wrong, so these tests cover Presto just as well. As an added benefit, the tests are a bit simpler now.", "author": "jirassimok", "createdAt": "2020-06-23T22:52:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5MjkxNQ==", "url": "https://github.com/trinodb/trino/pull/4143#discussion_r443792915", "bodyText": "squash this commit with commit which introduces functionality (Allow null_format for ...)", "author": "losipiuk", "createdAt": "2020-06-22T19:59:57Z", "path": "presto-product-tests/src/main/java/io/prestosql/tests/hive/TestHiveStorageFormats.java", "diffHunk": "@@ -185,6 +200,37 @@ public void testInsertIntoPartitionedTable(StorageFormat storageFormat)\n         query(format(\"DROP TABLE %s\", tableName));\n     }\n \n+    @Test(dataProvider = \"storage_formats_with_null_format\", groups = STORAGE_FORMATS)\n+    public void testInsertIntoTableWithNullFormat(StorageFormat storageFormat)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d132854f601a591941c5fe85b42cce5b0f904f1a", "url": "https://github.com/trinodb/trino/commit/d132854f601a591941c5fe85b42cce5b0f904f1a", "message": "Change parameter order for declaring storage formats in Hive tests\n\nThis gives the overloads of storageFormat a consistent parameter order.", "committedDate": "2020-06-23T14:46:15Z", "type": "commit"}, {"oid": "76576fe98b0de8cdfc64a3f9053b508d4717c87c", "url": "https://github.com/trinodb/trino/commit/76576fe98b0de8cdfc64a3f9053b508d4717c87c", "message": "Rename TestHiveStorageFormats.assertSelect to be more descriptive\n\nAlso add a brief documentation comment.", "committedDate": "2020-06-23T14:46:27Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "766880f541a75381922afa3b4451079664942b97", "url": "https://github.com/trinodb/trino/commit/766880f541a75381922afa3b4451079664942b97", "message": "Allow null_format for rctext and sequencefile formats", "committedDate": "2020-06-23T22:46:02Z", "type": "commit"}, {"oid": "a64a2ff08e47f8269bb57038f776aa9c9e4e4d46", "url": "https://github.com/trinodb/trino/commit/a64a2ff08e47f8269bb57038f776aa9c9e4e4d46", "message": "Add default null format to Hive integration tests", "committedDate": "2020-06-23T22:46:05Z", "type": "commit"}, {"oid": "a64a2ff08e47f8269bb57038f776aa9c9e4e4d46", "url": "https://github.com/trinodb/trino/commit/a64a2ff08e47f8269bb57038f776aa9c9e4e4d46", "message": "Add default null format to Hive integration tests", "committedDate": "2020-06-23T22:46:05Z", "type": "forcePushed"}]}