{"pr_number": 5210, "pr_title": "Add 342 release notes", "pr_createdAt": "2020-09-18T03:43:25Z", "pr_url": "https://github.com/trinodb/trino/pull/5210", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzA4MQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491833081", "bodyText": "Maybe w should describe it in terms of SQL syntax, not internal operator.\nSth like:\nImprove performance of queries which use ``expression IN SELECT ...`` filters. This is achieved via additional support for dynamic filtering an dynamic partition pruning.", "author": "losipiuk", "createdAt": "2020-09-21T07:16:33Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzUxMQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491833511", "bodyText": "Reduce dynamic partition pruning overhead?", "author": "losipiuk", "createdAt": "2020-09-21T07:17:37Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MjQ5Ng==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492562496", "bodyText": "i think \"latency\" is an important aspect\nbut, this could be expressed more from end-user perspective\n\"Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters.\"\n(i know it's repetitive but i think it's important to stick \"dynamic filters\" here, as this is the recognized feature name)", "author": "findepi", "createdAt": "2020-09-22T08:33:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzUxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzgwMA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491833800", "bodyText": "I think this one requires explanation what it actually means for the user.", "author": "losipiuk", "createdAt": "2020-09-21T07:18:24Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NDM2MQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492564361", "bodyText": "is this a SPI change? @sopel39", "author": "findepi", "createdAt": "2020-09-22T08:36:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTYyMw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492599623", "bodyText": "this should be in SPI notes", "author": "sopel39", "createdAt": "2020-09-22T09:33:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzgwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNDkxNA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491834914", "bodyText": "It feels to me that we are using dynamic partition pruning and dynamic filtering interchangeably without consequence. I think for changes which relate to both we should stick to dynamic filtering, as this is more general feature and only use dynamic partition pruning for specific cases.", "author": "losipiuk", "createdAt": "2020-09-21T07:20:56Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDExMA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492600110", "bodyText": "makes sense, let's stick to dynamic filtering", "author": "sopel39", "createdAt": "2020-09-22T09:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNDkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNTM0OQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491835349", "bodyText": "I do not understand what matching mean in this context (or rather I would not know if I did not read the PR).", "author": "losipiuk", "createdAt": "2020-09-21T07:22:07Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NjkyMw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492566923", "bodyText": "@losipiuk the wording is based on how we announced the change in 341:\n(341)\n* Match the existing user and group of the table or partition when creating new files on HDFS. ({issue}`4414`)\n\ni am not saying this is readable though", "author": "findepi", "createdAt": "2020-09-22T08:40:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNTM0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNjA3Mg==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r491836072", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Improve performance of `INSERT` statement when MySQL instance isn't running with GTID mode. ({issue}`4995`)\n          \n          \n            \n            * Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)", "author": "losipiuk", "createdAt": "2020-09-21T07:23:46Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve query performance by adding support for dynamic filtering and dynamic\n+  partition pruning to semi-join relational operator. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running with GTID mode. ({issue}`4995`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MTMzMQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492561331", "bodyText": "\"the decimal\"\nalso \"decimal\" or \"decimal\"?", "author": "findepi", "createdAt": "2020-09-22T08:31:35Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2Mzk0OQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492563949", "bodyText": "\"inaccurate\" or \"incomplete\"?\nalso, it's a table who has missing stats, not the cost-based optimizer, so:\n\"Improve performance of queries joining tables with missing or incomplete column statistics when the cost-based optimizer is enabled (which is the default).\"\n(doesn't sound great....)", "author": "findepi", "createdAt": "2020-09-22T08:35:50Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTM3MA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492599370", "bodyText": "also, it's a table who has missing stats, not the cost-based optimizer, so:\n\ntechnically, intermediate cbo-stats stats can be inaccurate too. I'm fine with your version too", "author": "sopel39", "createdAt": "2020-09-22T09:33:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2Mzk0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NTYwNA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492565604", "bodyText": "\"Allow specifying\" is a bit of overstatement, as this was existing feature that we made more configurable.\nBTW @losipiuk @kokosing why did we not deprecate the hive.immutable-partitions?", "author": "findepi", "createdAt": "2020-09-22T08:38:39Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwNDU0MQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493104541", "bodyText": "That flag allows the admin disable modification of existing partitions in a way that can not be overridden by end users.", "author": "dain", "createdAt": "2020-09-23T00:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NTYwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NjI2Mw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492566263", "bodyText": "is there mention this is also configurable with session dynamic_filtering_probe_blocking_timeout", "author": "findepi", "createdAt": "2020-09-22T08:39:43Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzIxMg==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492567212", "bodyText": "lowercase VARCHAR and VARBINARY", "author": "findepi", "createdAt": "2020-09-22T08:41:20Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzMyMg==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492567322", "bodyText": "lowercase the types", "author": "findepi", "createdAt": "2020-09-22T08:41:30Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` ", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2NTEyMQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493365121", "bodyText": "@findepi We are not super consistent in the documentation but most of the time we use uppercase. Was there a decision made to switch to lowercase?\ncc: @mosabua", "author": "losipiuk", "createdAt": "2020-09-23T09:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxNjQzMA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493616430", "bodyText": "i don't think there was \"a switch\". i know we [tried to] use[d] lowercase for presto type names in release notes before.\nmaybe we just need to re-decide and write the decision down somewhere?\ncc @electrum", "author": "findepi", "createdAt": "2020-09-23T13:59:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzUwNQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492567505", "bodyText": "\"when JSON encoder is in use\" -> \"when using JSON encoder\"", "author": "findepi", "createdAt": "2020-09-22T08:41:51Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492568893", "bodyText": "isn't -> is not\n(or even present simple)\nor maybe \" .... (unless MySQL instance runs in GTID mode)\" -- assuming GTID is an unusual configuration?", "author": "findepi", "createdAt": "2020-09-22T08:44:01Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwODk2NQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493108965", "bodyText": "I prefer latter as GTID is special setting.", "author": "ebyhr", "createdAt": "2020-09-23T00:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2MTg5MA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493361890", "bodyText": "According to documentation guidelines isn't is preferred over is not (https://developers.google.com/style/contractions#negation-contractions)", "author": "losipiuk", "createdAt": "2020-09-23T09:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2MjcyNw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493362727", "bodyText": "Yet I also prefer the version with unless", "author": "losipiuk", "createdAt": "2020-09-23T09:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4ODM5Ng==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493988396", "bodyText": "@findepi, are you suggesting \"Improve performance of INSERT statement unless MySQL instance runs in GTID mode\"? That's doesn't read well.\nMaybe something like this:\n\"Improve performance of INSERT queries when GTID mode is disabled in MySQL\".", "author": "martint", "createdAt": "2020-09-24T01:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjMzMA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006330", "bodyText": "Contractions should generally only be used in friendly, informal writing. That's not how we currently write most of the documentation, including release notes.", "author": "electrum", "createdAt": "2020-09-24T02:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjg0MQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006841", "bodyText": "I like @martint's phrasing", "author": "electrum", "createdAt": "2020-09-24T02:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIzOTE0Mg==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494239142", "bodyText": "\"Improve performance of INSERT queries when GTID mode is disabled in MySQL\".\n\n@martint i read this as \"if i disabled GTID mode my inserts will be faster now\".", "author": "findepi", "createdAt": "2020-09-24T11:30:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ1NTg3Mg==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494455872", "bodyText": "Isn't that what the original text implied?", "author": "martint", "createdAt": "2020-09-24T16:32:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODg5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTAwMA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492569000", "bodyText": "lowercase the types\nwould s/variadic/parametric/ be acceptable (in the interest of making this easier to understand)?", "author": "findepi", "createdAt": "2020-09-22T08:44:10Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwNTU4Mg==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493105582", "bodyText": "I would say \"with precision\" instead of a technical term like variadic", "author": "dain", "createdAt": "2020-09-23T00:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2MzMxMw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493363313", "bodyText": "TIMESTAMP WITH ZONE -> TIMESTAMP WITH TIME ZONE", "author": "losipiuk", "createdAt": "2020-09-23T09:25:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4ODczNA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493988734", "bodyText": "Yes, and \"variadic\" is the wrong term. It means \"variable number of arguments\". It should be \"variable precision\"", "author": "martint", "createdAt": "2020-09-24T01:34:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTAwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTUxNA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492569514", "bodyText": "lowercase varbinary", "author": "findepi", "createdAt": "2020-09-22T08:44:53Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzExMw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007113", "bodyText": "We've been using uppercase in the others, so we should be consistent", "author": "electrum", "createdAt": "2020-09-24T02:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MzYxNw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494243617", "bodyText": "@electrum @martint i see us using lowercase or uppercase depending which release it is\nAlso, it is very mixed today across docs.\nCan we have an agreement & write it down?", "author": "findepi", "createdAt": "2020-09-24T11:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2OTUxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDAzNw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492570037", "bodyText": "This is a change in engine's behavior, but is it really a SPI change?\n@sopel39", "author": "findepi", "createdAt": "2020-09-22T08:45:40Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Make dynamic filter futures resilient to cancellation. ({issue}`5099`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDg1Mw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492600853", "bodyText": "It would be too technical for general change. It's mostly relevant to SPI", "author": "sopel39", "createdAt": "2020-09-22T09:36:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwNjQyMA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492606420", "bodyText": "Is it relevant to a connector's implementor?\nif not, maybe we just remove it from here? @sopel39 ?", "author": "findepi", "createdAt": "2020-09-22T09:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzNjE3NQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492636175", "bodyText": "I haven't seen people complaining :) about this issue. OK to remove it", "author": "sopel39", "createdAt": "2020-09-22T10:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDM0OA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492570348", "bodyText": "remove \"via future\" (or add information what future this is ref'ing to)", "author": "findepi", "createdAt": "2020-09-22T08:46:09Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve dynamic partition pruning and query performance by reducing latency of dynamic filters collection. ({issue}`4988`)\n+* Improve join performance when cost-based optimizer has missing or inaccurate stats. ({issue}`5141`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Hive Connector Changes\n+\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic partition pruning can be performed more efficiently. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+    \n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(VARCHAR, array(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when JSON encoder is in use. ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variadic `TIMESTAMP` and `TIMESTAMP WITH ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Make dynamic filter futures resilient to cancellation. ({issue}`5099`)\n+* Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be\n+  awaited for via future. ({issue}`5043`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMTUxNw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492601517", "bodyText": "Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be\n  awaited for using `DynamicFilter#isBlocked`. ({issue}`5043`)\n\n?", "author": "sopel39", "createdAt": "2020-09-22T09:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MDM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5Nzg1NA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r492597854", "bodyText": "Improve performance or", "author": "sopel39", "createdAt": "2020-09-22T09:30:54Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,52 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Improve performance of queries that use decimal type. ({issue}`4886`)\n+* Improve of queries involving `IN` with subqueries by extending support for dynamic", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM1NzM4Nw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493357387", "bodyText": "TODO", "author": "losipiuk", "createdAt": "2020-09-23T09:19:38Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Release 342 (XX Sep 2020)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5MjEwOA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r493992108", "bodyText": "This doesn't format well. The issue link is attached to the last item in this list.", "author": "martint", "createdAt": "2020-09-24T01:48:26Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjY4NQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006685", "bodyText": "Maybe put it at the after the : before the list", "author": "electrum", "createdAt": "2020-09-24T02:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5MjEwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzMxNA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003314", "bodyText": "What does \"partition pruning\" mean in the context of the engine?", "author": "electrum", "createdAt": "2020-09-24T02:33:14Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA4MTQyOA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494081428", "bodyText": "Let's maybe use just dynamic filtering as an umbrella keyword.", "author": "sopel39", "createdAt": "2020-09-24T06:59:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzM1OA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003358", "bodyText": "Same question as above", "author": "electrum", "createdAt": "2020-09-24T02:33:25Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY1MA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003650", "bodyText": "We don't use the phrase \"cost-based optimizer\" in the documentation (since it's not correct)\n\nwhen cost based optimization is enabled", "author": "electrum", "createdAt": "2020-09-24T02:34:35Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MTAzMw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494241033", "bodyText": "I know it is not strictly correct. We used \"cost-based optimizer\" and \"cost based optimizer\" in the past, even though the correct term is \"cost-based optimizations\". -- It's because all the users understand \"cost-based optimizer\" and this is how they refer to this set of features (\"lingua franca\")", "author": "findepi", "createdAt": "2020-09-24T11:33:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwNDc3OQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494404779", "bodyText": "We should just check what is grammatically correct and follows the style guide we use and then just update all the docs in one sweep", "author": "mosabua", "createdAt": "2020-09-24T15:19:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0MTI0MA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494441240", "bodyText": "@findepi, on the other hand, we should break that habit. We shouldn't call the cost-based optimizer as if it were a separate thing. There's only one optimizer in Presto, with the ability to do cost-based optimizations for some plan shapes.", "author": "martint", "createdAt": "2020-09-24T16:10:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0NzkxMQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494447911", "bodyText": "There's only one optimizer in Presto\n\nthat's true (assuming we don't count PlanOptimizer subclasses but rather PlanOptimizers class as a whole)\nBut that is also something users are not interested in.\nAnyway, I am OK with the term \"cost-based optimizations\" (people will still read this as \"cost-based optimizer\" \ud83d\ude09)", "author": "findepi", "createdAt": "2020-09-24T16:20:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMzY5Nw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494003697", "bodyText": "Reduce latency for queries that perform a broadcast join of a large table.", "author": "electrum", "createdAt": "2020-09-24T02:34:44Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDEyMA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004120", "bodyText": "\"with the xxx configuration property\"", "author": "electrum", "createdAt": "2020-09-24T02:36:17Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDc2Nw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004767", "bodyText": "Allow overwrite on insert by default using the xxx configuration property.", "author": "electrum", "createdAt": "2020-09-24T02:39:01Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. ", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNTMxNQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494005315", "bodyText": "Allow delaying table scans until dynamic filtering can be performed more efficiently. This can be enabled using the xxx configuration property or the xxx session property.", "author": "electrum", "createdAt": "2020-09-24T02:41:16Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNTYyOA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494005628", "bodyText": "It can be enabled using the xxx configuration property.", "author": "electrum", "createdAt": "2020-09-24T02:42:33Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNTc1MQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494005751", "bodyText": "Improve performance when reading small files in RCTEXT or RCBINARY format.", "author": "electrum", "createdAt": "2020-09-24T02:43:05Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNjUyNA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494006524", "bodyText": "Remove JSON decoder support for nonsensical combinations of input-format-type / data-type. The following combinations are no longer supported:", "author": "electrum", "createdAt": "2020-09-24T02:46:12Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzAwMQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007001", "bodyText": "I'm not sure what \"extend type mapping\" means. That sounds like an implementation detail. What is the user visible effect?", "author": "electrum", "createdAt": "2020-09-24T02:48:20Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MjA2MA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494242060", "bodyText": "@electrum end user -- timestamp(p) in PostgreSQL is now exposed as timestamp(p) in Presto (instead of timestamp(3) it used to be)", "author": "findepi", "createdAt": "2020-09-24T11:35:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzNjQ5Ng==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494436496", "bodyText": "Maybe rephrase as this, then?\n\nAdd support for variable-precision TIMESTAMP and TIMESTAMP WITH TIME ZONE types.", "author": "martint", "createdAt": "2020-09-24T16:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzE3Mw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007173", "bodyText": "to -> into a", "author": "electrum", "createdAt": "2020-09-24T02:48:57Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzMyOA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007328", "bodyText": "Improve performance of aggregation queries by pushing aggregations into SQL Server.", "author": "electrum", "createdAt": "2020-09-24T02:49:30Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MjQ5Ng==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494242496", "bodyText": "@electrum i copied this exact wording from 337 RNs.", "author": "findepi", "createdAt": "2020-09-24T11:36:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzMyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzM3Nw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007377", "bodyText": "DynamicFilter.isAwaitable()", "author": "electrum", "createdAt": "2020-09-24T02:49:40Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzg0Nw==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007847", "bodyText": "Add DynamicFilter.isAwaitable() method that returns whether or not the dynamic filter is complete and can be awaited for using the isBlocked() method.", "author": "electrum", "createdAt": "2020-09-24T02:51:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzM3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNzg5NA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494007894", "bodyText": "join -> joins", "author": "electrum", "createdAt": "2020-09-24T02:51:36Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+# Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `map(varchar, array(varbinary))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* In JSON decoder drop decoding support for temporal types for nonsensical combinations of input-format-type/data-type.\n+  Following combination are no longer supported:\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  ({issue}`4743`)\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Extend type mapping to support variable-precision `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` to `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)\n+\n+## SPI Changes\n+\n+* Add `DynamicFilter#isAwaitable` method that returns whether dynamic filter is not complete and can be\n+  awaited for using `DynamicFilter#isBlocked`. ({issue}`5043`)\n+* Enable connectors to wait for dynamic filters derived from replicated join before generating splits. ({issue}`4685`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwMDYzOA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494000638", "bodyText": "Oh that should be of reading small files in...", "author": "dain", "createdAt": "2020-09-24T02:22:25Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDU3NA==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004574", "bodyText": "Maybe This can be reenabled by setting the hive.fs.new-file-inherit-ownership...", "author": "dain", "createdAt": "2020-09-24T02:38:09Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDc1MQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494004751", "bodyText": "This wrapping seem a bit aggressive", "author": "dain", "createdAt": "2020-09-24T02:38:56Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Release 342 (XX Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic\n+  filtering and dynamic partition pruning. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic partition pruning with dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  the cost-based optimizer is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries where broadcast join is used and broadcasted table is large. ({issue}`5237`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with `hive.timestamp-precision`\n+  connector configuration property. ({issue}`4953`)\n+* Allow specifying what happens if data is inserted into existing Hive partition. \n+  This can be done using `hive.insert-existing-partitions-behavior` config property. ({issue}`4999`)\n+* Add property (`hive.dynamic-filtering-probe-blocking-timeout`) for delaying table scans\n+  until dynamic filtering can be performed more efficiently. This can also be set via the `dynamic_filtering_probe_blocking_timeout`\n+  session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. You can enable it with `hive.fs.new-file-inherit-ownership`\n+  configuration property. ({issue}`5187`)\n+* Improve performance of reading small file in RCFile format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on\n+  partition columns when using the Glue metastore. ({issue}`5060`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU1MTIxNQ==", "url": "https://github.com/trinodb/trino/pull/5210#discussion_r494551215", "bodyText": "Single backticks", "author": "electrum", "createdAt": "2020-09-24T19:10:46Z", "path": "presto-docs/src/main/sphinx/release/release-342.md", "diffHunk": "@@ -0,0 +1,76 @@\n+# Release 342 (23 Sep 2020)\n+\n+## General Changes\n+\n+* Add {func}`from_iso8601_timestamp_nanos` function. ({issue}`5048`)\n+* Improve performance of queries that use the `DECIMAL` type. ({issue}`4886`)\n+* Improve performance of queries involving `IN` with subqueries by extending support for dynamic filtering. ({issue}`5017`)\n+* Improve performance and latency of queries leveraging dynamic filters. ({issue}`4988`)\n+* Improve performance of queries joining tables with missing or incomplete column statistics when\n+  when cost based optimization is enabled (which is the default). ({issue}`5141`)\n+* Reduce latency for queries that perform a broadcast join of a large table. ({issue}`5237`)\n+* Allow collection of dynamic filters for joins with large build side using the\n+  `enable-large-dynamic-filters` configuration property or the `enable_large_dynamic_filters`\n+  session property. ({issue}`5262`)\n+* Fix query failure when lambda expression references a table column containing a dot. ({issue}`5087`)\n+\n+## Atop Connector Changes\n+\n+* Fix incorrect query results when query contains predicates on `start_time` or `end_time` column. ({issue}`5125`)\n+\n+## Elasticsearch Connector Changes\n+\n+* Allow reading boolean values stored as strings. ({issue}`5269`)\n+\n+## Hive Connector Changes\n+\n+* Add support for S3 encrypted files. ({issue}`2536`)\n+* Add support for ABFS OAuth authentication. ({issue}`5052`)\n+* Support reading timestamp with microsecond or nanosecond precision. This can be enabled with the \n+  `hive.timestamp-precision` configuration property. ({issue}`4953`)\n+* Allow overwrite on insert by default using the `hive.insert-existing-partitions-behavior` configuration property. ({issue}`4999`)\n+* Allow delaying table scans until dynamic filtering can be performed more efficiently. This can be enabled \n+  using the `hive.dynamic-filtering-probe-blocking-timeout` configuration property or the \n+  `dynamic_filtering_probe_blocking_timeout` session property. ({issue}`4991`)\n+* Disable matching the existing user and group of the table or partition when creating new files on HDFS.\n+  The functionality was added in 341 and is now disabled by default. It can be enabled using the \n+  `hive.fs.new-file-inherit-ownership` configuration property. ({issue}`5187`)\n+* Improve performance when reading small files in `RCTEXT` or `RCBINARY` format. ({issue}`2536`)\n+* Improve planning time for queries with non-equality filters on partition columns when using the Glue metastore. ({issue}`5060`)\n+* Improve performance when reading `JSON` and `CSV` file formats. ({issue}`5142`)\n+    \n+## Iceberg Connector Changes\n+\n+* Fix partition transforms for temporal columns for dates before 1970. ({issue}`5273`)\n+\n+## Kafka Connector Changes\n+\n+* Expose message headers as a `_headers` column of `MAP(VARCHAR, ARRAY(VARBINARY))` type. ({issue}`4462`)\n+* Add write support for `TIME`, `TIME WITH TIME ZONE`, `TIMESTAMP` and `TIMESTAMP WITH TIME ZONE` \n+  for Kafka connector when using the JSON encoder. ({issue}`4743`)\n+* Remove JSON decoder support for nonsensical combinations of input-format-type / data-type. The following \n+  combinations are no longer supported: ({issue}`4743`)\n+  - `rfc2822`:  `DATE`, `TIME`, `TIME WITH TIME ZONE`\n+  - `milliseconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  - `seconds-since-epoch`: `TIME WITH TIME ZONE`, `TIMESTAMP WITH TIME ZONE`\n+  \n+## MySQL Connector Changes\n+\n+* Improve performance of `INSERT` statement when MySQL instance isn't running in GTID mode. ({issue}`4995`)\n+\n+## PostgreSQL Connector Changes\n+\n+* Add support for variable-precision TIMESTAMP and TIMESTAMP WITH TIME ZONE types. ({issue}`5124`, {issue}`5105`)\n+\n+## SQL Server Connector Changes\n+\n+* Fix failure when inserting `NULL` into a `VARBINARY` column. ({issue}`4846`)\n+* Improve performance of aggregation queries by computing aggregations within SQL Server database.\n+  Currently, the following aggregate functions are eligible for pushdown:\n+  ``count``,  ``min``, ``max``, ``sum`` and ``avg``. ({issue}`4139`)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "244fe75ce738e4fe714240e86d908f77e9f460c6", "url": "https://github.com/trinodb/trino/commit/244fe75ce738e4fe714240e86d908f77e9f460c6", "message": "Add 342 release notes", "committedDate": "2020-09-24T19:30:39Z", "type": "commit"}, {"oid": "244fe75ce738e4fe714240e86d908f77e9f460c6", "url": "https://github.com/trinodb/trino/commit/244fe75ce738e4fe714240e86d908f77e9f460c6", "message": "Add 342 release notes", "committedDate": "2020-09-24T19:30:39Z", "type": "forcePushed"}]}