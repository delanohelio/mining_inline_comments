{"pr_number": 3629, "pr_title": "Allow SystemAccessControl to listen to events", "pr_createdAt": "2020-05-05T16:31:08Z", "pr_url": "https://github.com/trinodb/trino/pull/3629", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNTgwNw==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421315807", "bodyText": "I would change commit message to:\nAllow SystemAccessControl to provide to event listeners\n\n\nenhancing event driven communicaiton about\nexecuting queries in the system to SystemLevelAccessControl\n\nI would drop this.", "author": "kokosing", "createdAt": "2020-05-07T08:04:52Z", "path": "presto-main/src/main/java/io/prestosql/security/AccessControlManager.java", "diffHunk": "@@ -20,6 +20,7 @@\n import io.airlift.log.Logger;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNTk1NQ==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421315955", "bodyText": "final", "author": "kokosing", "createdAt": "2020-05-07T08:05:07Z", "path": "presto-main/src/main/java/io/prestosql/security/AccessControlManager.java", "diffHunk": "@@ -82,6 +84,7 @@\n     private static final String NAME_PROPERTY = \"access-control.name\";\n \n     private final TransactionManager transactionManager;\n+    private EventListenerManager eventListenerManager;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNjgwMQ==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421316801", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .flatMap(eventListeners -> StreamSupport.stream(eventListeners.spliterator(), false))\n          \n          \n            \n                            .flatMap(eventListeners -> ImmutableSet.of(eventListeners).stream())", "author": "kokosing", "createdAt": "2020-05-07T08:06:40Z", "path": "presto-main/src/main/java/io/prestosql/security/AccessControlManager.java", "diffHunk": "@@ -141,6 +145,11 @@ public void loadSystemAccessControl()\n                 .map(this::createSystemAccessControl)\n                 .collect(toImmutableList());\n \n+        systemAccessControls.stream()\n+                .map(SystemAccessControl::getEventListeners)\n+                .flatMap(eventListeners -> StreamSupport.stream(eventListeners.spliterator(), false))", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQyNw==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421317427", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static TestingEventListenerManager emptyConfigManager()\n          \n          \n            \n                public static TestingEventListenerManager testingEventListenerManager()\n          \n      \n    \n    \n  \n\n?\nemptyConfigManager sounds like a manager of empty config o_O", "author": "kokosing", "createdAt": "2020-05-07T08:07:49Z", "path": "presto-main/src/main/java/io/prestosql/testing/TestingEventListenerManager.java", "diffHunk": "@@ -30,6 +31,11 @@\n public class TestingEventListenerManager\n         extends EventListenerManager\n {\n+    public static TestingEventListenerManager emptyConfigManager()", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwNDgwOA==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r427204808", "bodyText": "But that's exactly the case, it's an EventLitenerManager with empty config of event listeners, so with no event listeners configured. Maybe noListenersConfiguredConfigManager()? As testingEventListenerManager is too broad as it's not giving any hint of its state (which is important for the tests).", "author": "s2lomon", "createdAt": "2020-05-19T10:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwOTg5Mg==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r427209892", "bodyText": "emptyEventListenerManager?", "author": "kokosing", "createdAt": "2020-05-19T10:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI3OTIxMA==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r427279210", "bodyText": "hm you are right, it's better :)", "author": "s2lomon", "createdAt": "2020-05-19T12:55:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxOTUxMw==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421319513", "bodyText": "extract \"event-listening-sac\" as variable in this method", "author": "kokosing", "createdAt": "2020-05-07T08:11:28Z", "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -307,6 +320,21 @@ public void testAllowExecuteProcedure()\n                 });\n     }\n \n+    @Test\n+    public void testRegisterEventListeners()\n+            throws IOException\n+    {\n+        EventListener expectedListener = new EventListener() {};\n+        TestingEventListenerManager eventListenerManager = emptyConfigManager();\n+        AccessControlManager accessControlManager = createAccessControlManage(eventListenerManager, ImmutableList.of(\"access-control.name=event-listening-sac\"));\n+        accessControlManager.addSystemAccessControlFactory(eventListeningSystemAccessControlFactory(\"event-listening-sac\", expectedListener));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxOTc4MA==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421319780", "bodyText": "Can you also add a test where you register two event listeners.", "author": "kokosing", "createdAt": "2020-05-07T08:11:56Z", "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -307,6 +320,21 @@ public void testAllowExecuteProcedure()\n                 });\n     }\n \n+    @Test\n+    public void testRegisterEventListeners()\n+            throws IOException\n+    {\n+        EventListener expectedListener = new EventListener() {};", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMDYyMQ==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r421320621", "bodyText": "Why you had to implement this?", "author": "kokosing", "createdAt": "2020-05-07T08:13:24Z", "path": "presto-main/src/test/java/io/prestosql/security/TestAccessControlManager.java", "diffHunk": "@@ -378,6 +406,57 @@ public void testAllowExecuteFunction()\n                 });\n     }\n \n+    private AccessControlManager createAccessControlManage(TestingEventListenerManager eventListenerManager, List<String> systemAccessControlProperties)\n+            throws IOException\n+    {\n+        Path systemAccessControlConfig = createTempFile(\"access-manager-config-file\", \".properties\");\n+        Files.write(systemAccessControlConfig, systemAccessControlProperties, TRUNCATE_EXISTING, CREATE, WRITE);\n+\n+        return createAccessControlManager(eventListenerManager, new AccessControlConfig()\n+                .setAccessControlFiles(systemAccessControlConfig.toFile()\n+                        .getAbsolutePath()));\n+    }\n+\n+    private AccessControlManager createAccessControlManager(TransactionManager testTransactionManager)\n+    {\n+        return new AccessControlManager(testTransactionManager, emptyConfigManager(), new AccessControlConfig());\n+    }\n+\n+    private AccessControlManager createAccessControlManager(EventListenerManager eventListenerManager, AccessControlConfig config)\n+    {\n+        return new AccessControlManager(createTestTransactionManager(), eventListenerManager, config);\n+    }\n+\n+    private SystemAccessControlFactory eventListeningSystemAccessControlFactory(String name, EventListener eventListener)\n+    {\n+        return new SystemAccessControlFactory()\n+        {\n+            @Override\n+            public String getName()\n+            {\n+                return name;\n+            }\n+\n+            @Override\n+            public SystemAccessControl create(Map<String, String> config)\n+            {\n+                return new SystemAccessControl()\n+                {\n+                    @Override\n+                    public void checkCanSetSystemSessionProperty(SystemSecurityContext context, String propertyName)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyODMyMQ==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r427228321", "bodyText": "Because it does not have its default implementation, maybe it should?", "author": "s2lomon", "createdAt": "2020-05-19T11:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMDYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyODg4OQ==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r427228889", "bodyText": "I think it should like everything else.", "author": "kokosing", "createdAt": "2020-05-19T11:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMDYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI3OTcyOA==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r427279728", "bodyText": "hm, so maybe in different commit in same pr? or a separate pr?", "author": "s2lomon", "createdAt": "2020-05-19T12:56:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMDYyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5Nzk1OQ==", "url": "https://github.com/trinodb/trino/pull/3629#discussion_r427297959", "bodyText": "different commit in same pr\n\n\ud83d\udc4d\nActually, both ways are good to me. Up to you.", "author": "kokosing", "createdAt": "2020-05-19T13:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMDYyMQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "5813b3f618d5103832f543b0f61eb90f599022c1", "url": "https://github.com/trinodb/trino/commit/5813b3f618d5103832f543b0f61eb90f599022c1", "message": "Allow SystemAccessControl to provide to event listeners", "committedDate": "2020-05-25T13:34:29Z", "type": "commit"}, {"oid": "5813b3f618d5103832f543b0f61eb90f599022c1", "url": "https://github.com/trinodb/trino/commit/5813b3f618d5103832f543b0f61eb90f599022c1", "message": "Allow SystemAccessControl to provide to event listeners", "committedDate": "2020-05-25T13:34:29Z", "type": "forcePushed"}]}