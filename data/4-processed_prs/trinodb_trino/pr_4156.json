{"pr_number": 4156, "pr_title": "Derive effective predicate unconditionally", "pr_createdAt": "2020-06-22T21:09:28Z", "pr_url": "https://github.com/trinodb/trino/pull/4156", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg2MjkyMg==", "url": "https://github.com/trinodb/trino/pull/4156#discussion_r443862922", "bodyText": "This comment seems wrong now", "author": "electrum", "createdAt": "2020-06-22T22:36:41Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/EffectivePredicateExtractor.java", "diffHunk": "@@ -224,7 +224,7 @@ public Expression visitTableScan(TableScanNode node, Void context)\n             Map<ColumnHandle, Symbol> assignments = ImmutableBiMap.copyOf(node.getAssignments()).inverse();\n \n             TupleDomain<ColumnHandle> predicate = node.getEnforcedConstraint();\n-            if (useTableProperties && !node.getEnforcedConstraint().isAll()) {\n+            if (useTableProperties) {\n                 // extract table properties only when predicate has been pushed to table scan at least once", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "1fd49efbcb8a30548a7b2a4a634b2aadb11186ec", "url": "https://github.com/trinodb/trino/commit/1fd49efbcb8a30548a7b2a4a634b2aadb11186ec", "message": "Derive effective predicate unconditionally\n\nFor queries without where clause, the enforced predicate associated\nwith the table scan is always ALL, as there's nothing to push down.\nThis prevents deriving a predicate from the properties of the table.\nE.g., if the table is partitioned.", "committedDate": "2020-06-23T05:09:13Z", "type": "commit"}, {"oid": "1fd49efbcb8a30548a7b2a4a634b2aadb11186ec", "url": "https://github.com/trinodb/trino/commit/1fd49efbcb8a30548a7b2a4a634b2aadb11186ec", "message": "Derive effective predicate unconditionally\n\nFor queries without where clause, the enforced predicate associated\nwith the table scan is always ALL, as there's nothing to push down.\nThis prevents deriving a predicate from the properties of the table.\nE.g., if the table is partitioned.", "committedDate": "2020-06-23T05:09:13Z", "type": "forcePushed"}]}