{"pr_number": 6078, "pr_title": "Simplify loading columns into cache in CachingJdbcClient", "pr_createdAt": "2020-11-24T17:32:26Z", "pr_url": "https://github.com/trinodb/trino/pull/6078", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzMjMyMA==", "url": "https://github.com/trinodb/trino/pull/6078#discussion_r529932320", "bodyText": "Use built-in thread safe cache loading for columns\n\nThe commit may be read as if the previous code was not thread safe, while i think it was.\nam i missing something?\nif it is just a refactor, then perhaps name the commit as such, eg\nSimplify loading columns into cache in CachingJdbcClient\n\nUtilize `cache.get` with a loader, to simplify control flow.", "author": "findepi", "createdAt": "2020-11-24T22:19:20Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/CachingJdbcClient.java", "diffHunk": "@@ -106,15 +106,8 @@ public boolean schemaExists(JdbcIdentity identity, String schema)\n         if (tableHandle.getColumns().isPresent()) {\n             return tableHandle.getColumns().get();\n         }\n-\n         ColumnsCacheKey key = new ColumnsCacheKey(JdbcIdentity.from(session), tableHandle.getSchemaTableName());\n-        List<JdbcColumnHandle> columns = columnsCache.getIfPresent(key);\n-        if (columns != null) {\n-            return columns;\n-        }\n-        columns = delegate.getColumns(session, tableHandle);\n-        columnsCache.put(key, columns);\n-        return columns;\n+        return get(columnsCache, key, () -> delegate.getColumns(session, tableHandle));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1OTc3OQ==", "url": "https://github.com/trinodb/trino/pull/6078#discussion_r530259779", "bodyText": "I understand it in this way:\n\ngetColumns method does not have any synchronisation so two concurrent clients can invoke it.\ncolumnsCache.getIfPresent(key) returns false for both clients.\ndelegate.getColumns(session, tableHandle) is invoked for each of the clients\n\nIn any case I can update message.", "author": "ssheikin", "createdAt": "2020-11-25T10:19:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzMjMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI2MzcxOQ==", "url": "https://github.com/trinodb/trino/pull/6078#discussion_r530263719", "bodyText": "the previous code was not thread safe\n\nIt was thread safe, but not optimal. There was a case where we could load the same cache entry concurrently by several threads. Not it should be fixed.\n@zaz968m Can you please add a test for that?", "author": "kokosing", "createdAt": "2020-11-25T10:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzMjMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMwNDYyNw==", "url": "https://github.com/trinodb/trino/pull/6078#discussion_r530304627", "bodyText": "It was thread safe, but not optimal. There was a case where we could load the same cache entry concurrently by several threads. Not it should be fixed.\n\nthis is not a problem.\nactually, the new version could be seen as introducing unnecessary contention/synchronization. I do not think it is an actual problem either, but i do insist we are not fixing any problem other than code readability and so this should be reflected in cmt msg appropriately.", "author": "findepi", "createdAt": "2020-11-25T11:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzMjMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM5Nzc4Mg==", "url": "https://github.com/trinodb/trino/pull/6078#discussion_r530397782", "bodyText": "@kokosing as agreed, test will be delivered in separate pr.", "author": "ssheikin", "createdAt": "2020-11-25T14:05:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzMjMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ3ODU5Mg==", "url": "https://github.com/trinodb/trino/pull/6078#discussion_r530478592", "bodyText": "@findepi commit message is updated. Please AC.", "author": "ssheikin", "createdAt": "2020-11-25T15:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkzMjMyMA=="}], "type": "inlineReview"}, {"oid": "bc696438c95cdd217077ab653b0586a79b171733", "url": "https://github.com/trinodb/trino/commit/bc696438c95cdd217077ab653b0586a79b171733", "message": "Simplify loading columns into cache in CachingJdbcClient\n\nUtilize `cache.get` with a loader, to simplify control flow.\nloader is able to handle external context, which addresses constraint:\ncolumns depend on session and session cannot be used in cache key", "committedDate": "2020-11-25T11:07:15Z", "type": "commit"}, {"oid": "bc696438c95cdd217077ab653b0586a79b171733", "url": "https://github.com/trinodb/trino/commit/bc696438c95cdd217077ab653b0586a79b171733", "message": "Simplify loading columns into cache in CachingJdbcClient\n\nUtilize `cache.get` with a loader, to simplify control flow.\nloader is able to handle external context, which addresses constraint:\ncolumns depend on session and session cannot be used in cache key", "committedDate": "2020-11-25T11:07:15Z", "type": "forcePushed"}]}