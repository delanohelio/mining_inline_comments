{"pr_number": 6030, "pr_title": "Add test when filter domain type is different then target column type", "pr_createdAt": "2020-11-20T11:26:33Z", "pr_url": "https://github.com/trinodb/trino/pull/6030", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2OTA3Mw==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527669073", "bodyText": "you moved ApplyTableScanRedirection to last. why?", "author": "findepi", "createdAt": "2020-11-20T12:48:12Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -550,8 +550,9 @@ public PlanOptimizers(\n                         statsCalculator,\n                         estimatedExchangesCostCalculator,\n                         ImmutableSet.of(\n-                                new ApplyTableScanRedirection(metadata),\n-                                new PushPredicateIntoTableScan(metadata, typeOperators, typeAnalyzer))));\n+                                new PushProjectionIntoTableScan(metadata, typeAnalyzer),\n+                                new PushPredicateIntoTableScan(metadata, typeOperators, typeAnalyzer),\n+                                new ApplyTableScanRedirection(metadata))));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk3NjczNQ==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527976735", "bodyText": "Rule execution order doesn't matter, but I moved it back", "author": "sopel39", "createdAt": "2020-11-20T21:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2OTA3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2OTQ2NA==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527669464", "bodyText": "is this a TODO comment? maybe link to the issue regardless", "author": "findepi", "createdAt": "2020-11-20T12:49:02Z", "path": "presto-main/src/test/java/io/prestosql/sql/planner/TestTableScanRedirectionWithPushdown.java", "diffHunk": "@@ -193,7 +194,8 @@ public void testRedirectAfterColumnPruningOnPushedDownPredicate()\n                             ImmutableList.of(\"DEST_COL_B\"),\n                             tableScan(\n                                     equalTo(new MockConnectorTableHandle(destinationTable)),\n-                                    TupleDomain.withColumnDomains(ImmutableMap.of(equalTo(destinationColumnHandleA), singleValue(INTEGER, 1L))),\n+                                    // PushProjectionIntoTableScan does not preserve enforced constraint\n+                                    TupleDomain.all(),", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MTE0Mw==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527671143", "bodyText": "why validate again? is it guaranteed by sourceType.equals(redirectedType)) above?\nbut this is good catch anyone, would be great to have not only a unit test, but also an integration test where redirect occurs after predicate pushdown, and query completes correctly. This would be very useful especially should we ever relax the sourceType.equals(redirectedType)) condition above", "author": "findepi", "createdAt": "2020-11-20T12:52:14Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/ApplyTableScanRedirection.java", "diffHunk": "@@ -145,10 +143,23 @@ public Result apply(TableScanNode scanNode, Captures captures, Context context)\n                 // symbol should be mapped in redirected table scan\n                 return symbol;\n             }\n-            // Column pruning after PPD into table scan can remove assignments for filter columns from the scan node\n+\n+            // validate that redirected types match source types\n             Type domainType = requiredFilter.getDomains().get().get(destinationColumn).getType();\n-            symbol = context.getSymbolAllocator().newSymbol(destinationColumn, domainType);\n             ColumnHandle destinationColumnHandle = destinationColumnHandles.get(destinationColumn);\n+            Type redirectedType = metadata.getColumnMetadata(context.getSession(), destinationTableHandle.get(), destinationColumnHandle).getType();\n+            if (!domainType.equals(redirectedType)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcwNjgwNQ==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527706805", "bodyText": "@findepi I think we're repeating the check here because in the earlier piece of code it is looking at table scan node assignments. Here we are looking at columns which are used in a filter but their assignment has been pruned from table can node.", "author": "raunaqmorarka", "createdAt": "2020-11-20T13:57:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MTE0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4MjA1Ng==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527982056", "bodyText": "@findepi the check is needed. Consider scenario:\nOutput(a)\n|\nFilter(b>10)\n|\nTS(a,b)\n\nthen predicate is pushed into TS:\nOutput(a)\n|\nTS(a,b)\n\nthen column pruning happens:\nOutput(a)\n|\nTS(a)\n\nthen redirection happens:\nOutput(a)\n|\nFilter(redirected_b>10)\n|\nTS(a,redirected_b)\n\nredirected_b is a new symbol therefore type compatibility was not checked in sourceType.equals(redirectedType))\n\nbut this is good catch anyone, would be great to have not only a unit test, but also an integration test where redirect occurs after predicate pushdown, and query completes correctly.\n\nThere is such integration test: io.prestosql.tests.TestTpchTableScanRedirection#testTableScanRedirection.", "author": "sopel39", "createdAt": "2020-11-20T21:32:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MTE0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MTY1Ng==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527671656", "bodyText": "PPD is a wrong term here. \"pushing predicates\"\nagain, is this a bug/problem?", "author": "findepi", "createdAt": "2020-11-20T12:53:18Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/ApplyTableScanRedirection.java", "diffHunk": "@@ -145,10 +143,23 @@ public Result apply(TableScanNode scanNode, Captures captures, Context context)\n                 // symbol should be mapped in redirected table scan\n                 return symbol;\n             }\n-            // Column pruning after PPD into table scan can remove assignments for filter columns from the scan node\n+\n+            // validate that redirected types match source types\n             Type domainType = requiredFilter.getDomains().get().get(destinationColumn).getType();\n-            symbol = context.getSymbolAllocator().newSymbol(destinationColumn, domainType);\n             ColumnHandle destinationColumnHandle = destinationColumnHandles.get(destinationColumn);\n+            Type redirectedType = metadata.getColumnMetadata(context.getSession(), destinationTableHandle.get(), destinationColumnHandle).getType();\n+            if (!domainType.equals(redirectedType)) {\n+                throwTypeMismatchException(\n+                        destinationTable,\n+                        destinationColumn,\n+                        redirectedType,\n+                        scanNode.getTable(),\n+                        sourceColumnHandle,\n+                        domainType);\n+            }\n+\n+            // Column pruning after PPD into table scan can remove assignments for filter columns from the scan node", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcxMDk1Mw==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527710953", "bodyText": "I don't think it's a problem. If redirection runs after a predicate is pushed down into table scan and some of the columns from the filter get pruned from table scan assignments due to column pruning rules, then the redirection rule has to do extra work to \"undo\" those operations by producing (Project + Filter) nodes and allow the destination connector to handle the projection and predicate pushdowns as supported by it.", "author": "raunaqmorarka", "createdAt": "2020-11-20T14:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MTY1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk4MzE3MA==", "url": "https://github.com/trinodb/trino/pull/6030#discussion_r527983170", "bodyText": "Updated comment.\nThis is expected behavior. Once predicate is fully pushed into table scan, assignments for symbols that were part of predicate might potentially be pruned.", "author": "sopel39", "createdAt": "2020-11-20T21:34:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MTY1Ng=="}], "type": "inlineReview"}, {"oid": "08265a6daa7bb82ba24e6484573e3273cf495e85", "url": "https://github.com/trinodb/trino/commit/08265a6daa7bb82ba24e6484573e3273cf495e85", "message": "Fix testRedirectAfterColumnPruningOnPushedDownPredicate test\n\nPreviously column pruning happened after redirection, which\nmade test with redirected filter incomplete\n(filter columns did not introduce new symbols).", "committedDate": "2020-11-20T21:26:54Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "a1f28760519f36f1d7083eedc1460ed401e522b9", "url": "https://github.com/trinodb/trino/commit/a1f28760519f36f1d7083eedc1460ed401e522b9", "message": "Add test when filter domain type is different then target column type", "committedDate": "2020-11-23T22:46:08Z", "type": "commit"}, {"oid": "a1f28760519f36f1d7083eedc1460ed401e522b9", "url": "https://github.com/trinodb/trino/commit/a1f28760519f36f1d7083eedc1460ed401e522b9", "message": "Add test when filter domain type is different then target column type", "committedDate": "2020-11-23T22:46:08Z", "type": "forcePushed"}]}