{"pr_number": 4601, "pr_title": "Support parameter in FETCH FIRST and OFFSET clauses", "pr_createdAt": "2020-07-27T16:14:16Z", "pr_url": "https://github.com/trinodb/trino/pull/4601", "timeline": [{"oid": "d3edb608430abc451fa9b996714b7d28b4b3c2b4", "url": "https://github.com/trinodb/trino/commit/d3edb608430abc451fa9b996714b7d28b4b3c2b4", "message": "Add test for type mismatch in LIMIT parameter", "committedDate": "2020-07-27T11:22:42Z", "type": "commit"}, {"oid": "a396fe82f244d5611580fd8d23af1dd96b0f399b", "url": "https://github.com/trinodb/trino/commit/a396fe82f244d5611580fd8d23af1dd96b0f399b", "message": "Fix formatting", "committedDate": "2020-07-27T11:22:42Z", "type": "commit"}, {"oid": "179524322ae69581d0c8da3cb3b0f2773baeba06", "url": "https://github.com/trinodb/trino/commit/179524322ae69581d0c8da3cb3b0f2773baeba06", "message": "Extract parser rule for rowCount", "committedDate": "2020-07-27T11:22:43Z", "type": "commit"}, {"oid": "01385457a4936d80a46b133ae79f812767b99533", "url": "https://github.com/trinodb/trino/commit/01385457a4936d80a46b133ae79f812767b99533", "message": "Extract method for analyzing parameter as row count", "committedDate": "2020-07-27T11:22:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NTgwNA==", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461175804", "bodyText": "nonConstantErrorContext isn't defined anywhere in this commit or prior to it, so this will produce a compile-time error.", "author": "martint", "createdAt": "2020-07-27T21:17:58Z", "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -2747,18 +2747,23 @@ private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope\n                 // validate parameter index\n                 analyzeExpression(parameter, scope);\n                 Expression providedValue = analysis.getParameters().get(NodeRef.of(parameter));\n+                Object value;\n                 try {\n-                    return OptionalLong.of((long) ExpressionInterpreter.evaluateConstantExpression(\n+                    value = ExpressionInterpreter.evaluateConstantExpression(\n                             providedValue,\n                             BIGINT,\n                             metadata,\n                             session,\n                             accessControl,\n-                            analysis.getParameters()));\n+                            analysis.getParameters());\n                 }\n                 catch (VerifyException e) {\n                     throw semanticException(INVALID_ARGUMENTS, parameter, \"Non constant parameter value for LIMIT: %s\", providedValue);\n                 }\n+                if (value == null) {\n+                    throw semanticException(INVALID_ARGUMENTS, parameter, \"Parameter value provided for %s is NULL: %s\", nonConstantErrorContext, providedValue);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU2Nzc5Mw==", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461567793", "bodyText": "I messed the order of commits during rebase.", "author": "kasiafi", "createdAt": "2020-07-28T13:12:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NTgwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3ODQ0MQ==", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461178441", "bodyText": "What does \"non constant\" refer to in nonConstantErrorContext?", "author": "martint", "createdAt": "2020-07-27T21:23:29Z", "path": "presto-main/src/main/java/io/prestosql/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -2736,7 +2738,7 @@ else if (node.getRowCount() instanceof LongLiteral) {\n             return false;\n         }\n \n-        private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope)\n+        private OptionalLong analyzeParameterAsRowCount(Parameter parameter, Scope scope, String nonConstantErrorContext)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU2NzM1MQ==", "url": "https://github.com/trinodb/trino/pull/4601#discussion_r461567351", "bodyText": "It refers to a failure to resolve expression as a constant of a given type. I'll rename it to context.", "author": "kasiafi", "createdAt": "2020-07-28T13:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3ODQ0MQ=="}], "type": "inlineReview"}, {"oid": "41e31bc2e060c479412e48039f02bf303fc45570", "url": "https://github.com/trinodb/trino/commit/41e31bc2e060c479412e48039f02bf303fc45570", "message": "Handle null passed for parameter in LIMIT", "committedDate": "2020-07-28T13:23:30Z", "type": "commit"}, {"oid": "95e0fc2a23c2779e7568d50e3682de1e2359c82a", "url": "https://github.com/trinodb/trino/commit/95e0fc2a23c2779e7568d50e3682de1e2359c82a", "message": "Support parameter in FETCH FIRST clause", "committedDate": "2020-07-28T13:30:05Z", "type": "commit"}, {"oid": "11eb3f2aa38a0bf5e41d7d0eca9e772fa10208c6", "url": "https://github.com/trinodb/trino/commit/11eb3f2aa38a0bf5e41d7d0eca9e772fa10208c6", "message": "Support parameter in OFFSET clause", "committedDate": "2020-07-28T13:30:16Z", "type": "commit"}, {"oid": "6814888999d177d4b75c6bd00e9ee8393cd48dba", "url": "https://github.com/trinodb/trino/commit/6814888999d177d4b75c6bd00e9ee8393cd48dba", "message": "Add parser label for LIMIT value", "committedDate": "2020-07-28T13:30:16Z", "type": "commit"}, {"oid": "6814888999d177d4b75c6bd00e9ee8393cd48dba", "url": "https://github.com/trinodb/trino/commit/6814888999d177d4b75c6bd00e9ee8393cd48dba", "message": "Add parser label for LIMIT value", "committedDate": "2020-07-28T13:30:16Z", "type": "forcePushed"}]}