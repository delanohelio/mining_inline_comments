{"pr_number": 3768, "pr_title": "Various code cleanups", "pr_createdAt": "2020-05-18T05:15:03Z", "pr_url": "https://github.com/trinodb/trino/pull/3768", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTE5OQ==", "url": "https://github.com/trinodb/trino/pull/3768#discussion_r429131199", "bodyText": "source is already a String\ndid you mean firstNonNull(source, \"null\")?", "author": "findepi", "createdAt": "2020-05-22T09:06:24Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/TestOrcPageSourceMemoryTracking.java", "diffHunk": "@@ -749,9 +749,7 @@ public Object getWriteValue()\n         {\n             StringBuilder builder = new StringBuilder();\n             String source = writeValue.get();\n-            for (int i = 0; i < counter / step; i++) {\n-                builder.append(source);\n-            }\n+            builder.append(String.valueOf(source).repeat(Math.max(0, counter / step)));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1MjUwMw==", "url": "https://github.com/trinodb/trino/pull/3768#discussion_r450452503", "bodyText": "Thanks, this got added somehow", "author": "electrum", "createdAt": "2020-07-06T20:07:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTkyOA==", "url": "https://github.com/trinodb/trino/pull/3768#discussion_r429131928", "bodyText": "hm... BigQueryOptions seemed more appropriate (i don;t know the design behind BigQueryOptions vs generic ServiceOptions though)", "author": "findepi", "createdAt": "2020-05-22T09:08:01Z", "path": "presto-bigquery/src/main/java/io/prestosql/plugin/bigquery/BigQueryConnectorModule.java", "diffHunk": "@@ -94,6 +95,6 @@ static String calculateBillingProjectId(Optional<String> configParentProjectId,\n             return ((ServiceAccountCredentials) credentials.get()).getProjectId();\n         }\n         // 3. No configuration was provided, so get the default from the environment\n-        return BigQueryOptions.getDefaultProjectId();\n+        return ServiceOptions.getDefaultProjectId();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1MTM1Mg==", "url": "https://github.com/trinodb/trino/pull/3768#discussion_r450451352", "bodyText": "I'll drop this commit", "author": "electrum", "createdAt": "2020-07-06T20:04:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMjEwMg==", "url": "https://github.com/trinodb/trino/pull/3768#discussion_r429132102", "bodyText": "Qualifying with BigintType was more appropriate.", "author": "findepi", "createdAt": "2020-05-22T09:08:22Z", "path": "presto-main/src/main/java/io/prestosql/operator/BigintGroupByHash.java", "diffHunk": "@@ -200,7 +200,7 @@ public boolean contains(int position, Page page, int[] hashChannels)\n     @Override\n     public long getRawHash(int groupId)\n     {\n-        return BigintType.hash(valuesByGroupId.get(groupId));\n+        return AbstractLongType.hash(valuesByGroupId.get(groupId));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMjI1OA==", "url": "https://github.com/trinodb/trino/pull/3768#discussion_r429132258", "bodyText": "nit: does not belong to Access static methods on declared class\n(same in TestPinotClient)", "author": "findepi", "createdAt": "2020-05-22T09:08:44Z", "path": "presto-main/src/test/java/io/prestosql/operator/TestOperatorAssertion.java", "diffHunk": "@@ -52,7 +52,7 @@ public void testToPagesWithBlockedOperator()\n     {\n         Operator operator = new BlockedOperator(Duration.valueOf(\"15 ms\"));\n         List<Page> pages = OperatorAssertion.toPages(operator, emptyIterator());\n-        Assert.assertEquals(pages, ImmutableList.of());\n+        assertEquals(pages, ImmutableList.of());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9fa98c8999a9ce4700db64605eb2ea676050b130", "url": "https://github.com/trinodb/trino/commit/9fa98c8999a9ce4700db64605eb2ea676050b130", "message": "Use diamond operator", "committedDate": "2020-07-06T20:09:34Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "6c14d360fabb71411ad719bc90b45ce5e316bfac", "url": "https://github.com/trinodb/trino/commit/6c14d360fabb71411ad719bc90b45ce5e316bfac", "message": "Replace anonymous class with lambda", "committedDate": "2020-07-06T20:50:28Z", "type": "commit"}, {"oid": "0e035fcea0f125174a08c9de3aba89fc6a810514", "url": "https://github.com/trinodb/trino/commit/0e035fcea0f125174a08c9de3aba89fc6a810514", "message": "Replace Collections.sort with List.sort", "committedDate": "2020-07-06T20:50:28Z", "type": "commit"}, {"oid": "46b23c3f2c6e70467884730b5749b7e3cc8b8adb", "url": "https://github.com/trinodb/trino/commit/46b23c3f2c6e70467884730b5749b7e3cc8b8adb", "message": "Use Comparator factory methods", "committedDate": "2020-07-06T20:50:29Z", "type": "commit"}, {"oid": "952ce02abe1a8d8e03c828433510328c35283491", "url": "https://github.com/trinodb/trino/commit/952ce02abe1a8d8e03c828433510328c35283491", "message": "Use setProperty method on Properties", "committedDate": "2020-07-06T20:50:29Z", "type": "commit"}, {"oid": "0d23758b3286e509730465fb3818bddaef404184", "url": "https://github.com/trinodb/trino/commit/0d23758b3286e509730465fb3818bddaef404184", "message": "Replace lambda with method reference", "committedDate": "2020-07-06T20:50:29Z", "type": "commit"}, {"oid": "821ec755ac3f0f12303b82890b54e5de08724cf1", "url": "https://github.com/trinodb/trino/commit/821ec755ac3f0f12303b82890b54e5de08724cf1", "message": "Iterate over multimap values", "committedDate": "2020-07-06T20:50:29Z", "type": "commit"}, {"oid": "538b973734b7667d44b4fc0adff7a3faed9e8db3", "url": "https://github.com/trinodb/trino/commit/538b973734b7667d44b4fc0adff7a3faed9e8db3", "message": "Use String.repeat", "committedDate": "2020-07-06T20:50:29Z", "type": "commit"}, {"oid": "00c7a9e552d9df3a231d0f3417bbac078e9ffc79", "url": "https://github.com/trinodb/trino/commit/00c7a9e552d9df3a231d0f3417bbac078e9ffc79", "message": "Remove unnecessary final", "committedDate": "2020-07-06T20:50:29Z", "type": "commit"}, {"oid": "5a7b50e2cce854e360298c7e4882cf4d44f428c6", "url": "https://github.com/trinodb/trino/commit/5a7b50e2cce854e360298c7e4882cf4d44f428c6", "message": "Fix warnings in Decimals", "committedDate": "2020-07-06T20:50:29Z", "type": "commit"}, {"oid": "5a7b50e2cce854e360298c7e4882cf4d44f428c6", "url": "https://github.com/trinodb/trino/commit/5a7b50e2cce854e360298c7e4882cf4d44f428c6", "message": "Fix warnings in Decimals", "committedDate": "2020-07-06T20:50:29Z", "type": "forcePushed"}]}