{"pr_number": 3621, "pr_title": "Prevent OutputBufferMemoryManager from becoming negative", "pr_createdAt": "2020-05-04T23:47:21Z", "pr_url": "https://github.com/trinodb/trino/pull/3621", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0MDk4OA==", "url": "https://github.com/trinodb/trino/pull/3621#discussion_r419940988", "bodyText": "it's no longer atomic. Use accumulateAndGet instead, placing the check inside the method.\nlong currentBufferedBytes = bufferedBytes.accumulateAndGet(bytesAdded, OutputBufferMemoryManager::addNonNegative);", "author": "findepi", "createdAt": "2020-05-05T08:23:05Z", "path": "presto-main/src/main/java/io/prestosql/execution/buffer/OutputBufferMemoryManager.java", "diffHunk": "@@ -81,7 +81,11 @@ public synchronized void updateMemoryUsage(long bytesAdded)\n             return;\n         }\n \n-        long currentBufferedBytes = bufferedBytes.addAndGet(bytesAdded);\n+        long localBufferedBytes = bufferedBytes.get();\n+        long currentBufferedBytes = localBufferedBytes + bytesAdded;\n+        checkArgument(currentBufferedBytes >= 0, \"bufferedBytes (%s) plus delta (%s) would be negative\", localBufferedBytes, bytesAdded);\n+        bufferedBytes.set(currentBufferedBytes);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk1NDE5MA==", "url": "https://github.com/trinodb/trino/pull/3621#discussion_r419954190", "bodyText": "It doesn\u2019t need to be atomic. This is the only write and it is guarded by a lock. We use atomic for visibility, to allow reads without a lock.", "author": "electrum", "createdAt": "2020-05-05T08:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0MDk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2MTQzNg==", "url": "https://github.com/trinodb/trino/pull/3621#discussion_r419961436", "bodyText": "Thanks for checking.\nI think it could still be more readable my way, but up to you", "author": "findepi", "createdAt": "2020-05-05T08:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0MDk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3ODk1Mw==", "url": "https://github.com/trinodb/trino/pull/3621#discussion_r426178953", "bodyText": "Agreed. I switched to updateAndGet() with a lambda so that the error message was localized to the operation. Much nicer than what I had before. Thanks", "author": "electrum", "createdAt": "2020-05-16T18:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0MDk4OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "12bd779d3d749aefd090574ff3e37411b96558fb", "url": "https://github.com/trinodb/trino/commit/12bd779d3d749aefd090574ff3e37411b96558fb", "message": "Prevent OutputBufferMemoryManager from becoming negative\n\nThis should never occur, but if it does, we should prevent the object\nfrom entering an invalid state, as this breaks stats using DataSize.", "committedDate": "2020-05-16T18:29:51Z", "type": "commit"}, {"oid": "12bd779d3d749aefd090574ff3e37411b96558fb", "url": "https://github.com/trinodb/trino/commit/12bd779d3d749aefd090574ff3e37411b96558fb", "message": "Prevent OutputBufferMemoryManager from becoming negative\n\nThis should never occur, but if it does, we should prevent the object\nfrom entering an invalid state, as this breaks stats using DataSize.", "committedDate": "2020-05-16T18:29:51Z", "type": "forcePushed"}]}