{"pr_number": 4660, "pr_title": "Add push down documentation", "pr_createdAt": "2020-07-31T22:43:20Z", "pr_url": "https://github.com/trinodb/trino/pull/4660", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI2NzgwOQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r464267809", "bodyText": "I would also mention reduce network traffic and reduced load on remote database (in case of predicate pushdown for example)", "author": "sopel39", "createdAt": "2020-08-03T08:29:41Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,133 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing. An improved overall", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1NTMyNA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r464555324", "bodyText": "Rejigged to be a list of benefits", "author": "mosabua", "createdAt": "2020-08-03T17:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI2NzgwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI2ODIzNw==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r464268237", "bodyText": "Aggregat -> Aggregate", "author": "sopel39", "createdAt": "2020-08-03T08:30:28Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,133 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing. An improved overall\n+query performance can be the result of this push down.\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::\n+\n+    EXPLAIN\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+The explain plan for this query does not show any ``count`` operation as\n+``Aggregate`` in Presto. This is the result of a successful push down.\n+\n+.. code-block:: none\n+\n+    Fragment 0 [SINGLE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        Output[regionkey, _col1]\n+        \u2502   Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: ?}\n+        \u2502   regionkey := regionkey_0\n+        \u2502   _col1 := _presto_generated_1\n+        \u2514\u2500 RemoteSource[1]\n+                Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+\n+    Fragment 1 [SOURCE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        TableScan[postgresql:tpch.nation tpch.nation columns=[regionkey:bigint:int8, count(*):_presto_generated_1:bigint:bigint] groupingSets=[[regionkey:bigint:int8]], gro\n+            Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+            Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: 0B}\n+            _presto_generated_1 := count(*):_presto_generated_1:bigint:bigint\n+            regionkey_0 := regionkey:bigint:int8\n+\n+A number of factors can prevent a push down:\n+\n+* adding a condition to the query\n+* using a different aggregate function without push down support\n+* using a connector without the specific function push down support\n+\n+As a result the explain plan shows the ``Aggregat`` operation being performed by Presto, as a sign that now push down is performed:", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI2ODg0MA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r464268840", "bodyText": "as a sign that now push down is performed this sentence is not clear. Should it be:\nas a sign that now push down is not performed\n\n?", "author": "sopel39", "createdAt": "2020-08-03T08:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI2ODIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYxOTg4OA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r464619888", "bodyText": "Fixed and made more explicit.", "author": "mosabua", "createdAt": "2020-08-03T19:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI2ODIzNw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyMDQ3OA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r464920478", "bodyText": "Maybe:\nreduced load on the remote database", "author": "sopel39", "createdAt": "2020-08-04T09:25:44Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyMTIwOA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r464921208", "bodyText": "This suggest pushdown is for aggregations. Should it be mentioned in subsection? Maybe there should be a dedicated section for aggregation pushdown?\nMaybe we should also mention what parts of query we can pushdown? We pushdown:\n\nfilters\naggregations\nlimit", "author": "sopel39", "createdAt": "2020-08-04T09:27:03Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0OTcwMA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465249700", "bodyText": "This sentence is removed so no need to detail more of this for now.", "author": "mosabua", "createdAt": "2020-08-04T18:33:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyMTIwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTQwNA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465209404", "bodyText": "Some grammar changes. Also, use a more term name than \"database\"\n\nPresto can push down the processing of queries, or parts of queries, into the connected data source. This means that a specific function or other operation is passed through to the underlying database or storage system for processing.", "author": "electrum", "createdAt": "2020-08-04T17:22:40Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0MzQxOA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465243418", "bodyText": "Done", "author": "mosabua", "createdAt": "2020-08-04T18:22:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTQwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTYwNA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465209604", "bodyText": "database -> data source", "author": "electrum", "createdAt": "2020-08-04T17:23:00Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxMDQxNA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465210414", "bodyText": "database -> data source", "author": "electrum", "createdAt": "2020-08-04T17:24:21Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxMjczMA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465212730", "bodyText": "This isn't really correct. Any aggregate that operates directly on a connector column is eligible for pushdown. As a consequence, it would have to be on a type supported by the connector, but that's not the specific reason it is eligible. The function also has to have the same semantics (or the connector might choose to ignore those differences ... such as numeric overflow).\nProbably just remove this sentence.", "author": "electrum", "createdAt": "2020-08-04T17:28:17Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NDM1OQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465244359", "bodyText": "Removed.. I just got that info from @findepi originally.", "author": "mosabua", "createdAt": "2020-08-04T18:24:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxMjczMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxNDcxNg==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465214716", "bodyText": "We use the term \"pushdown\" 59 places, and \"push down\"  in only 13 places. Words generally become combined at some point, and I think \"pushdown\" is already there. Consider e-mail vs email.\nExample: https://docs.microsoft.com/en-us/sql/relational-databases/polybase/polybase-pushdown-computation\nExisting usage in session properties:\n\npredicate_pushdown_use_table_properties\ns3_select_pushdown_enabled\nprojection_pushdown_enabled", "author": "electrum", "createdAt": "2020-08-04T17:31:38Z", "path": "presto-docs/src/main/sphinx/connector/postgresql.rst", "diffHunk": "@@ -89,6 +89,18 @@ Finally, you can access the ``clicks`` table in the ``web`` schema::\n If you used a different name for your catalog properties file, use\n that catalog name instead of ``postgresql`` in the above examples.\n \n+Push down", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NDY4NQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465244685", "bodyText": "So should I change it across it all?", "author": "mosabua", "createdAt": "2020-08-04T18:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxNDcxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI2NjQ2MA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465266460", "bodyText": "As a separate commit, yes", "author": "electrum", "createdAt": "2020-08-04T19:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxNDcxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxODcyMw==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465218723", "bodyText": "I'm not sure what the difference between these two items are. I think we can remove this section, since attempts to rephrase basicly result in \"things can be pushed down if the connector supports it\".", "author": "electrum", "createdAt": "2020-08-04T17:38:49Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM1MDQwOQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465350409", "bodyText": "From what I know there are various aspects that need to be in place.\n\nPresto framework needs to support push down of that function\nconnector needs to support that push down\nunderlying data source needs to actually have a function equivalent\n\nSo its not just that the connector needs to support it ..", "author": "mosabua", "createdAt": "2020-08-04T21:50:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxODcyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM1MDY5OQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465350699", "bodyText": "The list has these various cases imho .. but I am happy to improve with any suggestions", "author": "mosabua", "createdAt": "2020-08-04T21:51:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxODcyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxOTcxNQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465219715", "bodyText": "Remove comma", "author": "electrum", "createdAt": "2020-08-04T17:40:31Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMDA3Nw==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465220077", "bodyText": "operations -> operation\nfunction -> \"function is\"", "author": "electrum", "createdAt": "2020-08-04T17:41:07Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMDkxNg==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465220916", "bodyText": "As an example, we loaded the TPCH data set into a PostgreSQL database\nand then queried it using the PostgreSQL connector::", "author": "electrum", "createdAt": "2020-08-04T17:42:35Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMTU5MA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465221590", "bodyText": "Let's remove this USE statement, since it's explained in the above that this is querying the PostgreSQL connector. It's not something a user could use as-is without full steps to load into exactly this schema and table.", "author": "electrum", "createdAt": "2020-08-04T17:43:41Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0ODYwMg==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465348602", "bodyText": "Sure .. having it in the example just makes it more explicit ... personally I would leave it but I am removing", "author": "mosabua", "createdAt": "2020-08-04T21:46:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMTU5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMTk5OA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465221998", "bodyText": "How about\nYou can get the explain plan by prepending the above query with ``EXPLAIN``::", "author": "electrum", "createdAt": "2020-08-04T17:44:21Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMjU5OQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465222599", "bodyText": "Use GROUP BY regionkey since GROUP BY 1 is non-standard syntax that we shouldn't promote. It's also not easily understandable by the casual user (e.g., an admin reading about pushdown).", "author": "electrum", "createdAt": "2020-08-04T17:45:14Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0OTE2Mw==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465349163", "bodyText": "done in both queries", "author": "mosabua", "createdAt": "2020-08-04T21:47:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMjU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMzI3MA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465223270", "bodyText": "How about\nThe explain plan for this query does not show any ``Aggregate`` operator with\nthe ``count`` function, as this operation is now performed by the connector.\nWe can see the ``count(*)`` function as part of the PostgreSQL ``TableScan`` operator.\nThis shows us that the pushdown was successful.", "author": "electrum", "createdAt": "2020-08-04T17:46:19Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::\n+\n+    EXPLAIN\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+The explain plan for this query does not show any ``count`` operation as", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0OTYyMg==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465349622", "bodyText": "Adopted with minor updates", "author": "mosabua", "createdAt": "2020-08-04T21:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMzI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNTE5MQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465225191", "bodyText": "As above, the last two items seem similar. How about rephrasing as\nA number of factors can prevent pushdown, including adding a ``WHERE`` clause\ncondition or using an aggregation function not supported by the connector.", "author": "electrum", "createdAt": "2020-08-04T17:49:45Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::\n+\n+    EXPLAIN\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+The explain plan for this query does not show any ``count`` operation as\n+``Aggregate`` in Presto. This is the result of a successful push down.\n+\n+.. code-block:: none\n+\n+    Fragment 0 [SINGLE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        Output[regionkey, _col1]\n+        \u2502   Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: ?}\n+        \u2502   regionkey := regionkey_0\n+        \u2502   _col1 := _presto_generated_1\n+        \u2514\u2500 RemoteSource[1]\n+                Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+\n+    Fragment 1 [SOURCE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        TableScan[postgresql:tpch.nation tpch.nation columns=[regionkey:bigint:int8, count(*):_presto_generated_1:bigint:bigint] groupingSets=[[regionkey:bigint:int8]], gro\n+            Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+            Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: 0B}\n+            _presto_generated_1 := count(*):_presto_generated_1:bigint:bigint\n+            regionkey_0 := regionkey:bigint:int8\n+\n+A number of factors can prevent a push down:\n+\n+* adding a condition to the query\n+* using a different aggregate function without push down support", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NzY3OA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465247678", "bodyText": "Reworded but left as list since this is clearer.", "author": "mosabua", "createdAt": "2020-08-04T18:30:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNTE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNTM0MQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465225341", "bodyText": "Comma after \"result\"", "author": "electrum", "createdAt": "2020-08-04T17:49:57Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::\n+\n+    EXPLAIN\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+The explain plan for this query does not show any ``count`` operation as\n+``Aggregate`` in Presto. This is the result of a successful push down.\n+\n+.. code-block:: none\n+\n+    Fragment 0 [SINGLE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        Output[regionkey, _col1]\n+        \u2502   Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: ?}\n+        \u2502   regionkey := regionkey_0\n+        \u2502   _col1 := _presto_generated_1\n+        \u2514\u2500 RemoteSource[1]\n+                Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+\n+    Fragment 1 [SOURCE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        TableScan[postgresql:tpch.nation tpch.nation columns=[regionkey:bigint:int8, count(*):_presto_generated_1:bigint:bigint] groupingSets=[[regionkey:bigint:int8]], gro\n+            Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+            Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: 0B}\n+            _presto_generated_1 := count(*):_presto_generated_1:bigint:bigint\n+            regionkey_0 := regionkey:bigint:int8\n+\n+A number of factors can prevent a push down:\n+\n+* adding a condition to the query\n+* using a different aggregate function without push down support\n+* using a connector without the specific function push down support\n+\n+As a result the explain plan shows the ``Aggregate`` operation being performed", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNTgwMg==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465225802", "bodyText": "We seem to be missing an example query here for the query that's not pushed down. Maybe show adding a condition.", "author": "electrum", "createdAt": "2020-08-04T17:50:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNTM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0ODEzNA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465248134", "bodyText": "From what @findepi said its the same query but on a connector without push down support... see discussion in the old PR this one repalces.", "author": "mosabua", "createdAt": "2020-08-04T18:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNTM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0ODM0OQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465248349", "bodyText": "comma added", "author": "mosabua", "createdAt": "2020-08-04T18:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNTM0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNjU0NA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465226544", "bodyText": "* complex grouping operations such as ``ROLLUP``, ``CUBE``, or ``GROUPING SETS``", "author": "electrum", "createdAt": "2020-08-04T17:52:01Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::\n+\n+    EXPLAIN\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+The explain plan for this query does not show any ``count`` operation as\n+``Aggregate`` in Presto. This is the result of a successful push down.\n+\n+.. code-block:: none\n+\n+    Fragment 0 [SINGLE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        Output[regionkey, _col1]\n+        \u2502   Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: ?}\n+        \u2502   regionkey := regionkey_0\n+        \u2502   _col1 := _presto_generated_1\n+        \u2514\u2500 RemoteSource[1]\n+                Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+\n+    Fragment 1 [SOURCE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        TableScan[postgresql:tpch.nation tpch.nation columns=[regionkey:bigint:int8, count(*):_presto_generated_1:bigint:bigint] groupingSets=[[regionkey:bigint:int8]], gro\n+            Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+            Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: 0B}\n+            _presto_generated_1 := count(*):_presto_generated_1:bigint:bigint\n+            regionkey_0 := regionkey:bigint:int8\n+\n+A number of factors can prevent a push down:\n+\n+* adding a condition to the query\n+* using a different aggregate function without push down support\n+* using a connector without the specific function push down support\n+\n+As a result the explain plan shows the ``Aggregate`` operation being performed\n+by Presto. This is a clear sign that now push down to the database is not\n+performed, and instead Presto performs the aggregate processing.\n+\n+.. code-block:: none\n+\n+ Fragment 0 [SINGLE]\n+     Output layout: [regionkey, count]\n+     Output partitioning: SINGLE []\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Output[regionkey, _col1]\n+     \u2502   Layout: [regionkey:bigint, count:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   _col1 := count\n+     \u2514\u2500 RemoteSource[1]\n+            Layout: [regionkey:bigint, count:bigint]\n+\n+ Fragment 1 [HASH]\n+     Output layout: [regionkey, count]\n+     Output partitioning: SINGLE []\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Aggregate(FINAL)[regionkey]\n+     \u2502   Layout: [regionkey:bigint, count:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   count := count(\"count_0\")\n+     \u2514\u2500 LocalExchange[HASH][$hashvalue] (\"regionkey\")\n+        \u2502   Layout: [regionkey:bigint, count_0:bigint, $hashvalue:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+        \u2514\u2500 RemoteSource[2]\n+               Layout: [regionkey:bigint, count_0:bigint, $hashvalue_1:bigint]\n+\n+ Fragment 2 [SOURCE]\n+     Output layout: [regionkey, count_0, $hashvalue_2]\n+     Output partitioning: HASH [regionkey][$hashvalue_2]\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Project[]\n+     \u2502   Layout: [regionkey:bigint, count_0:bigint, $hashvalue_2:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   $hashvalue_2 := combine_hash(bigint '0', COALESCE(\"$operator$hash_code\"(\"regionkey\"), 0))\n+     \u2514\u2500 Aggregate(PARTIAL)[regionkey]\n+        \u2502   Layout: [regionkey:bigint, count_0:bigint]\n+        \u2502   count_0 := count(*)\n+        \u2514\u2500 TableScan[tpch:nation:sf0.01, grouped = false]\n+               Layout: [regionkey:bigint]\n+               Estimates: {rows: 25 (225B), cpu: 225, memory: 0B, network: 0B}\n+               regionkey := tpch:regionkey\n+\n+Limitations\n+-----------\n+\n+Push down does not support a number of more complex statements:\n+\n+* complex grouping sets such as ``GROUP BY GOUPING SETS``, ``ROLLUP`` or", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNzE4Nw==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465227187", "bodyText": "* expressions inside the aggregation function call: ``sum(a * b)``", "author": "electrum", "createdAt": "2020-08-04T17:53:10Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::\n+\n+    EXPLAIN\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+The explain plan for this query does not show any ``count`` operation as\n+``Aggregate`` in Presto. This is the result of a successful push down.\n+\n+.. code-block:: none\n+\n+    Fragment 0 [SINGLE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        Output[regionkey, _col1]\n+        \u2502   Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: ?}\n+        \u2502   regionkey := regionkey_0\n+        \u2502   _col1 := _presto_generated_1\n+        \u2514\u2500 RemoteSource[1]\n+                Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+\n+    Fragment 1 [SOURCE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        TableScan[postgresql:tpch.nation tpch.nation columns=[regionkey:bigint:int8, count(*):_presto_generated_1:bigint:bigint] groupingSets=[[regionkey:bigint:int8]], gro\n+            Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+            Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: 0B}\n+            _presto_generated_1 := count(*):_presto_generated_1:bigint:bigint\n+            regionkey_0 := regionkey:bigint:int8\n+\n+A number of factors can prevent a push down:\n+\n+* adding a condition to the query\n+* using a different aggregate function without push down support\n+* using a connector without the specific function push down support\n+\n+As a result the explain plan shows the ``Aggregate`` operation being performed\n+by Presto. This is a clear sign that now push down to the database is not\n+performed, and instead Presto performs the aggregate processing.\n+\n+.. code-block:: none\n+\n+ Fragment 0 [SINGLE]\n+     Output layout: [regionkey, count]\n+     Output partitioning: SINGLE []\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Output[regionkey, _col1]\n+     \u2502   Layout: [regionkey:bigint, count:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   _col1 := count\n+     \u2514\u2500 RemoteSource[1]\n+            Layout: [regionkey:bigint, count:bigint]\n+\n+ Fragment 1 [HASH]\n+     Output layout: [regionkey, count]\n+     Output partitioning: SINGLE []\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Aggregate(FINAL)[regionkey]\n+     \u2502   Layout: [regionkey:bigint, count:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   count := count(\"count_0\")\n+     \u2514\u2500 LocalExchange[HASH][$hashvalue] (\"regionkey\")\n+        \u2502   Layout: [regionkey:bigint, count_0:bigint, $hashvalue:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+        \u2514\u2500 RemoteSource[2]\n+               Layout: [regionkey:bigint, count_0:bigint, $hashvalue_1:bigint]\n+\n+ Fragment 2 [SOURCE]\n+     Output layout: [regionkey, count_0, $hashvalue_2]\n+     Output partitioning: HASH [regionkey][$hashvalue_2]\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Project[]\n+     \u2502   Layout: [regionkey:bigint, count_0:bigint, $hashvalue_2:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   $hashvalue_2 := combine_hash(bigint '0', COALESCE(\"$operator$hash_code\"(\"regionkey\"), 0))\n+     \u2514\u2500 Aggregate(PARTIAL)[regionkey]\n+        \u2502   Layout: [regionkey:bigint, count_0:bigint]\n+        \u2502   count_0 := count(*)\n+        \u2514\u2500 TableScan[tpch:nation:sf0.01, grouped = false]\n+               Layout: [regionkey:bigint]\n+               Estimates: {rows: 25 (225B), cpu: 225, memory: 0B, network: 0B}\n+               regionkey := tpch:regionkey\n+\n+Limitations\n+-----------\n+\n+Push down does not support a number of more complex statements:\n+\n+* complex grouping sets such as ``GROUP BY GOUPING SETS``, ``ROLLUP`` or\n+    ``CUBE``\n+* expressions, like ``sum(a * b)``", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyOTQwOQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465229409", "bodyText": "* coercions: ``sum(integer_column)``\n\nThis one is non-obvious and is arguably a limitation that we need to fix.", "author": "electrum", "createdAt": "2020-08-04T17:57:07Z", "path": "presto-docs/src/main/sphinx/optimizer/push-down.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+=========\n+Push down\n+=========\n+\n+Presto can push down processing queries, or segments of queries, down to the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database for processing.\n+\n+The results of this push down can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the database\n+* reduced load on the database\n+\n+Support for push down is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Every Presto aggregate function is eligible for push down, as long as it\n+operates on types supported by the given connector.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Push down depends on a number of factors:\n+\n+* generic support for push down in the connector\n+* function or operation specific support for push down in the connector\n+* query that allows the detection of the function to push down\n+\n+The best way to analyze if push down for a specific query is performed, is to\n+take a closer look at the :doc:`EXPLAIN plan </sql/explain>` of the query. If an\n+operations such as an aggregate function successfully pushed down to the\n+connector, the explain plan does **not** show that operator. The explain plan\n+only shows the operations that are performed by Presto.\n+\n+Here is an example query using the TPCH data, which was pushed into a PostgreSQL\n+database and it now queried with the PostgreSQL connector::\n+\n+    USE postgresql.tpch.tiny;\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+You can get the explain plan with the following statement::\n+\n+    EXPLAIN\n+    SELECT regionkey, count(*)\n+    FROM nation\n+    GROUP BY 1;\n+\n+The explain plan for this query does not show any ``count`` operation as\n+``Aggregate`` in Presto. This is the result of a successful push down.\n+\n+.. code-block:: none\n+\n+    Fragment 0 [SINGLE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        Output[regionkey, _col1]\n+        \u2502   Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: ?}\n+        \u2502   regionkey := regionkey_0\n+        \u2502   _col1 := _presto_generated_1\n+        \u2514\u2500 RemoteSource[1]\n+                Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+\n+    Fragment 1 [SOURCE]\n+        Output layout: [regionkey_0, _presto_generated_1]\n+        Output partitioning: SINGLE []\n+        Stage Execution Strategy: UNGROUPED_EXECUTION\n+        TableScan[postgresql:tpch.nation tpch.nation columns=[regionkey:bigint:int8, count(*):_presto_generated_1:bigint:bigint] groupingSets=[[regionkey:bigint:int8]], gro\n+            Layout: [regionkey_0:bigint, _presto_generated_1:bigint]\n+            Estimates: {rows: ? (?), cpu: ?, memory: 0B, network: 0B}\n+            _presto_generated_1 := count(*):_presto_generated_1:bigint:bigint\n+            regionkey_0 := regionkey:bigint:int8\n+\n+A number of factors can prevent a push down:\n+\n+* adding a condition to the query\n+* using a different aggregate function without push down support\n+* using a connector without the specific function push down support\n+\n+As a result the explain plan shows the ``Aggregate`` operation being performed\n+by Presto. This is a clear sign that now push down to the database is not\n+performed, and instead Presto performs the aggregate processing.\n+\n+.. code-block:: none\n+\n+ Fragment 0 [SINGLE]\n+     Output layout: [regionkey, count]\n+     Output partitioning: SINGLE []\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Output[regionkey, _col1]\n+     \u2502   Layout: [regionkey:bigint, count:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   _col1 := count\n+     \u2514\u2500 RemoteSource[1]\n+            Layout: [regionkey:bigint, count:bigint]\n+\n+ Fragment 1 [HASH]\n+     Output layout: [regionkey, count]\n+     Output partitioning: SINGLE []\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Aggregate(FINAL)[regionkey]\n+     \u2502   Layout: [regionkey:bigint, count:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   count := count(\"count_0\")\n+     \u2514\u2500 LocalExchange[HASH][$hashvalue] (\"regionkey\")\n+        \u2502   Layout: [regionkey:bigint, count_0:bigint, $hashvalue:bigint]\n+        \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+        \u2514\u2500 RemoteSource[2]\n+               Layout: [regionkey:bigint, count_0:bigint, $hashvalue_1:bigint]\n+\n+ Fragment 2 [SOURCE]\n+     Output layout: [regionkey, count_0, $hashvalue_2]\n+     Output partitioning: HASH [regionkey][$hashvalue_2]\n+     Stage Execution Strategy: UNGROUPED_EXECUTION\n+     Project[]\n+     \u2502   Layout: [regionkey:bigint, count_0:bigint, $hashvalue_2:bigint]\n+     \u2502   Estimates: {rows: ? (?), cpu: ?, memory: ?, network: ?}\n+     \u2502   $hashvalue_2 := combine_hash(bigint '0', COALESCE(\"$operator$hash_code\"(\"regionkey\"), 0))\n+     \u2514\u2500 Aggregate(PARTIAL)[regionkey]\n+        \u2502   Layout: [regionkey:bigint, count_0:bigint]\n+        \u2502   count_0 := count(*)\n+        \u2514\u2500 TableScan[tpch:nation:sf0.01, grouped = false]\n+               Layout: [regionkey:bigint]\n+               Estimates: {rows: 25 (225B), cpu: 225, memory: 0B, network: 0B}\n+               regionkey := tpch:regionkey\n+\n+Limitations\n+-----------\n+\n+Push down does not support a number of more complex statements:\n+\n+* complex grouping sets such as ``GROUP BY GOUPING SETS``, ``ROLLUP`` or\n+    ``CUBE``\n+* expressions, like ``sum(a * b)``\n+* coercions, like ``sum(integer_column)``", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0ODg3MQ==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r465248871", "bodyText": "sure ... but until its fixed it should be documented like this.", "author": "mosabua", "createdAt": "2020-08-04T18:32:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyOTQwOQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "790aaeb552212956fdea46b55787bc95a06da3df", "url": "https://github.com/trinodb/trino/commit/790aaeb552212956fdea46b55787bc95a06da3df", "message": "Add push down documentation", "committedDate": "2020-08-04T21:53:23Z", "type": "commit"}, {"oid": "790aaeb552212956fdea46b55787bc95a06da3df", "url": "https://github.com/trinodb/trino/commit/790aaeb552212956fdea46b55787bc95a06da3df", "message": "Add push down documentation", "committedDate": "2020-08-04T21:53:23Z", "type": "forcePushed"}, {"oid": "deaaf3e118962e829dbdfdff86589d9b0d1d5113", "url": "https://github.com/trinodb/trino/commit/deaaf3e118962e829dbdfdff86589d9b0d1d5113", "message": "Use pushdown as feature name", "committedDate": "2020-08-04T22:03:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDE1Ng==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r533404156", "bodyText": "This should talk explicitly about aggregation pushdown, since we do not have any other kind of function pushdown  yet. And then, there is nothing specific about particular functions from Presto perspective, is there? It's still up to connector to support particular pushdown.", "author": "findepi", "createdAt": "2020-12-01T13:25:37Z", "path": "presto-docs/src/main/sphinx/optimizer/pushdown.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+========\n+Pushdown\n+========\n+\n+Presto can push down the processing of queries, or parts of queries, into the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database or storage system for processing.\n+\n+The results of this pushdown can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the data source\n+* reduced load on the remote data source\n+\n+Support for pushdown is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Pushdown depends on a number of factors:\n+\n+* generic support for pushdown for that function in Presto", "originalCommit": "deaaf3e118962e829dbdfdff86589d9b0d1d5113", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1ODczOA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r534358738", "bodyText": "Not sure what to do with this remark in terms of actual changes to the document. Lets discuss this more in #6179", "author": "mosabua", "createdAt": "2020-12-02T17:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDE1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDk1MA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r533404950", "bodyText": "The connector needs to \"implement\" the function, but it can do it with a combination of expressions.\nFor example, avg can be pushed down (simplifying) as sum/count.\nWe can remove this bullet as \"function or operation specific support for pushdown in the connector\" above covers it.", "author": "findepi", "createdAt": "2020-12-01T13:26:56Z", "path": "presto-docs/src/main/sphinx/optimizer/pushdown.rst", "diffHunk": "@@ -0,0 +1,140 @@\n+========\n+Pushdown\n+========\n+\n+Presto can push down the processing of queries, or parts of queries, into the\n+connected data source. This means that a specific function, or other operation,\n+is passed through to the underlying database or storage system for processing.\n+\n+The results of this pushdown can include the following benefits:\n+\n+* improved overall query performance\n+* reduced network traffic between Presto and the data source\n+* reduced load on the remote data source\n+\n+Support for pushdown is specific to each connector and the relevant underlying\n+database or storage system.\n+\n+Analysis and Confirmation\n+-------------------------\n+\n+Pushdown depends on a number of factors:\n+\n+* generic support for pushdown for that function in Presto\n+* function or operation specific support for pushdown in the connector\n+* query that allows the detection of the function to push down\n+* function needs to exist in the underlying system so it can process the\n+  pushdown", "originalCommit": "deaaf3e118962e829dbdfdff86589d9b0d1d5113", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1ODQxNA==", "url": "https://github.com/trinodb/trino/pull/4660#discussion_r534358414", "bodyText": "#6179", "author": "mosabua", "createdAt": "2020-12-02T17:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDk1MA=="}], "type": "inlineReview"}]}