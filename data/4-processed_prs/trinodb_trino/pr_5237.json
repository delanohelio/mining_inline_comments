{"pr_number": 5237, "pr_title": "Update task status on broadcast buffer blocking", "pr_createdAt": "2020-09-21T11:45:28Z", "pr_url": "https://github.com/trinodb/trino/pull/5237", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NzYzNA==", "url": "https://github.com/trinodb/trino/pull/5237#discussion_r491977634", "bodyText": "should we check for isFull or the logic we use at coordinator (> 50% util.)?", "author": "rohangarg", "createdAt": "2020-09-21T11:46:46Z", "path": "presto-main/src/main/java/io/prestosql/execution/buffer/BroadcastOutputBuffer.java", "diffHunk": "@@ -231,6 +237,11 @@ public void enqueue(List<SerializedPage> pages)\n \n         // drop the initial reference\n         serializedPageReferences.forEach(SerializedPageReference::dereferencePage);\n+\n+        // if the buffer is full for first time, update the task status\n+        if (!hasBlockedBefore.get() && !isFull().isDone() && hasBlockedBefore.compareAndSet(false, true)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1MTI1NA==", "url": "https://github.com/trinodb/trino/pull/5237#discussion_r492651254", "bodyText": "Let's use isFull, 50% condition is opportunistic when there is no notification", "author": "sopel39", "createdAt": "2020-09-22T11:10:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NzYzNA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1MjU2OA==", "url": "https://github.com/trinodb/trino/pull/5237#discussion_r492652568", "bodyText": "please add some more rationale why we do this (for future readers)", "author": "sopel39", "createdAt": "2020-09-22T11:13:03Z", "path": "presto-main/src/main/java/io/prestosql/execution/buffer/BroadcastOutputBuffer.java", "diffHunk": "@@ -231,6 +237,11 @@ public void enqueue(List<SerializedPage> pages)\n \n         // drop the initial reference\n         serializedPageReferences.forEach(SerializedPageReference::dereferencePage);\n+\n+        // if the buffer is full for first time, update the task status", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY3ODE4Mw==", "url": "https://github.com/trinodb/trino/pull/5237#discussion_r492678183", "bodyText": "Added a better comment and also added a check in the condition for canAddBuffers (updated test too). request to please check it once as well", "author": "rohangarg", "createdAt": "2020-09-22T12:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1MjU2OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNzk2OA==", "url": "https://github.com/trinodb/trino/pull/5237#discussion_r492717968", "bodyText": "Please add another test case where you make sure notification count is still 0 when no more buffers state is reached, but buffer is full", "author": "sopel39", "createdAt": "2020-09-22T13:07:36Z", "path": "presto-main/src/test/java/io/prestosql/execution/buffer/TestBroadcastOutputBuffer.java", "diffHunk": "@@ -316,6 +317,40 @@ public void testSharedBufferFull()\n         enqueuePage(buffer, createPage(3));\n     }\n \n+    @Test\n+    public void testNotifyStatusOnBufferFull()\n+    {\n+        AtomicInteger notifyCount = new AtomicInteger();\n+        BroadcastOutputBuffer buffer = createBroadcastBuffer(\n+                createInitialEmptyOutputBuffers(BROADCAST).withBuffer(FIRST, BROADCAST_PARTITION_ID),\n+                sizeOfPages(1),\n+                notifyCount::incrementAndGet);\n+\n+        // Add a page to the buffer\n+        addPage(buffer, createPage(1));\n+        assertTrue(buffer.isFull().isDone());\n+        assertEquals(notifyCount.get(), 0);\n+\n+        // Add another page to block\n+        ListenableFuture<?> future = enqueuePage(buffer, createPage(2));\n+        assertFalse(future.isDone());\n+        assertEquals(notifyCount.get(), 1);\n+\n+        // Set no more buffers", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc4ODI2Mw==", "url": "https://github.com/trinodb/trino/pull/5237#discussion_r492788263", "bodyText": "done", "author": "rohangarg", "createdAt": "2020-09-22T14:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNzk2OA=="}], "type": "inlineReview"}, {"oid": "6d85564d12bdc8c058bd8ceedfdeeedeb55ae897", "url": "https://github.com/trinodb/trino/commit/6d85564d12bdc8c058bd8ceedfdeeedeb55ae897", "message": "Update task status on broadcast buffer blocking", "committedDate": "2020-09-22T14:33:56Z", "type": "commit"}, {"oid": "6d85564d12bdc8c058bd8ceedfdeeedeb55ae897", "url": "https://github.com/trinodb/trino/commit/6d85564d12bdc8c058bd8ceedfdeeedeb55ae897", "message": "Update task status on broadcast buffer blocking", "committedDate": "2020-09-22T14:33:56Z", "type": "forcePushed"}]}