{"pr_number": 3906, "pr_title": "Add column-pruning rules for SpatialJoinNode", "pr_createdAt": "2020-06-02T15:30:53Z", "pr_url": "https://github.com/trinodb/trino/pull/3906", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "971420ade0bf4a9f691da7b6a234cf8ef1292e54", "url": "https://github.com/trinodb/trino/commit/971420ade0bf4a9f691da7b6a234cf8ef1292e54", "message": "Add project-off rule for SpatialJoinNode", "committedDate": "2020-06-05T15:45:18Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNzQzNA==", "url": "https://github.com/trinodb/trino/pull/3906#discussion_r436217434", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return restrictChildOutputs(\n          \n          \n            \n                            context.getIdAllocator(),\n          \n          \n            \n                            spatialJoinNode,\n          \n          \n            \n                            leftInputs.build(),\n          \n          \n            \n                            rightInputs.build())\n          \n          \n            \n                            .map(Result::ofPlanNode)\n          \n          \n            \n                            .orElse(Result.empty());\n          \n          \n            \n                    return restrictChildOutputs(context.getIdAllocator(), spatialJoinNode, leftInputs.build(), rightInputs.build())\n          \n          \n            \n                            .map(Result::ofPlanNode)\n          \n          \n            \n                            .orElse(Result.empty());", "author": "martint", "createdAt": "2020-06-06T00:39:20Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/iterative/rule/PruneSpatialJoinChildrenColumns.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.sql.planner.iterative.rule;\n+\n+import com.google.common.collect.ImmutableSet;\n+import io.prestosql.matching.Captures;\n+import io.prestosql.matching.Pattern;\n+import io.prestosql.sql.planner.Symbol;\n+import io.prestosql.sql.planner.SymbolsExtractor;\n+import io.prestosql.sql.planner.iterative.Rule;\n+import io.prestosql.sql.planner.plan.SpatialJoinNode;\n+\n+import java.util.Set;\n+\n+import static io.prestosql.sql.planner.iterative.rule.Util.restrictChildOutputs;\n+import static io.prestosql.sql.planner.plan.Patterns.spatialJoin;\n+\n+public class PruneSpatialJoinChildrenColumns\n+        implements Rule<SpatialJoinNode>\n+{\n+    private static final Pattern<SpatialJoinNode> PATTERN = spatialJoin();\n+\n+    @Override\n+    public Pattern<SpatialJoinNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(SpatialJoinNode spatialJoinNode, Captures captures, Context context)\n+    {\n+        Set<Symbol> requiredOutputAndFilterSymbols = ImmutableSet.<Symbol>builder()\n+                .addAll(spatialJoinNode.getOutputSymbols())\n+                .addAll(SymbolsExtractor.extractUnique(spatialJoinNode.getFilter()))\n+                .build();\n+\n+        ImmutableSet.Builder<Symbol> leftInputs = ImmutableSet.<Symbol>builder()\n+                .addAll(requiredOutputAndFilterSymbols);\n+        spatialJoinNode.getLeftPartitionSymbol()\n+                .ifPresent(leftInputs::add);\n+\n+        ImmutableSet.Builder<Symbol> rightInputs = ImmutableSet.<Symbol>builder()\n+                .addAll(requiredOutputAndFilterSymbols);\n+        spatialJoinNode.getRightPartitionSymbol()\n+                .ifPresent(rightInputs::add);\n+\n+        return restrictChildOutputs(\n+                context.getIdAllocator(),\n+                spatialJoinNode,\n+                leftInputs.build(),\n+                rightInputs.build())\n+                .map(Result::ofPlanNode)\n+                .orElse(Result.empty());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fed9c4ad02efb6510b6fa4e0adeb9e3e71d51223", "url": "https://github.com/trinodb/trino/commit/fed9c4ad02efb6510b6fa4e0adeb9e3e71d51223", "message": "Add children-pruning rule for SpatialJoinNode", "committedDate": "2020-06-06T11:16:36Z", "type": "commit"}, {"oid": "fed9c4ad02efb6510b6fa4e0adeb9e3e71d51223", "url": "https://github.com/trinodb/trino/commit/fed9c4ad02efb6510b6fa4e0adeb9e3e71d51223", "message": "Add children-pruning rule for SpatialJoinNode", "committedDate": "2020-06-06T11:16:36Z", "type": "forcePushed"}]}