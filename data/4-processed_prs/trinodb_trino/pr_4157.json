{"pr_number": 4157, "pr_title": "Add documentation for timestamp with time zone with precision", "pr_createdAt": "2020-06-22T21:15:25Z", "pr_url": "https://github.com/trinodb/trino/pull/4157", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzNTY5NQ==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r443835695", "bodyText": "remove", "author": "martint", "createdAt": "2020-06-22T21:26:16Z", "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -217,8 +217,19 @@ See also :doc:`/functions/datetime` and :doc:`/language/timestamp`\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-    Instant in time that includes the date and time of day with a time zone.\n-    Values of this type are rendered using the time zone from the value.\n+``TIMESTAMP``\n+^^^^^^^^^^^^^", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODQ2OA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444978468", "bodyText": "done", "author": "mosabua", "createdAt": "2020-06-24T15:24:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzNTY5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3NDczMg==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444974732", "bodyText": "precision ``p``", "author": "martint", "createdAt": "2020-06-24T15:19:53Z", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -100,26 +101,28 @@ Date and Time Functions\n         SELECT from_iso8601_date('2020-123');\n         -- 2020-05-02\n \n-.. function:: at_timezone(timestamp, zone) -> timestamp with time zone\n+.. function:: at_timezone(timestamp(p), zone) -> timestamp(p) with time zone\n \n-    Change the time zone component of ``timestamp`` to ``zone`` while preserving the instant in time.\n+    Change the time zone component of ``timestamp`` with precision ``p`` to\n+    ``zone`` while preserving the instant in time.\n \n-.. function:: with_timezone(timestamp, zone) -> timestamp with time zone\n+.. function:: with_timezone(timestamp(p), zone) -> timestamp(p) with time zone\n \n-    Returns a timestamp with time zone from ``timestamp`` and ``zone``.\n+    Returns a timestamp with time zone from ``timestamp`` with precision(p) and", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3NjMyNg==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444976326", "bodyText": "This is not quite true. TIMESTAMP and TIMESTAMP WITH TIMEZONE are different types with different semantics. In standard SQL, TIMESTAMP is more like DATE, with additional precision that includes hour/minute/second/fraction. TIMESTAMP W/ TZ represents an instant with an attached time zone.", "author": "martint", "createdAt": "2020-06-24T15:22:01Z", "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -217,8 +217,18 @@ See also :doc:`/functions/datetime` and :doc:`/language/timestamp`\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-    Instant in time that includes the date and time of day with a time zone.\n-    Values of this type are rendered using the time zone from the value.\n+    ``TIMESTAMP WITH TIME ZONE`` is an alias for ``TIMESTAMP(3) WITH TIME ZONE``\n+    (millisecond precision).\n+\n+``TIMESTAMP(P) WITH TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day with ``P`` digits of\n+    precision for the fraction of seconds and with a time zone. Values of this\n+    type are rendered using the time zone from the user session.\n+\n+    Other behavior and usage is identical to :ref:`TIMESTAMP\n+    <timestamp-data-type>`.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3Nzg0NQ==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444977845", "bodyText": "So then we should probably expand hat section with relevant info and add more examples. Do you know what we should add specifically", "author": "mosabua", "createdAt": "2020-06-24T15:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3NjMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NTk2NA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445195964", "bodyText": "It's complicated due to the fact that we support a legacy form of timestamp that doesn't follow standard SQL semantics. Maybe we need to call that out explicitly and explain how legacy timestamps work in Presto. @electrum, thoughts?", "author": "martint", "createdAt": "2020-06-24T21:59:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3NjMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1Njg0MA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445756840", "bodyText": "We removed the sentence altogether for now.", "author": "mosabua", "createdAt": "2020-06-25T18:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3NjMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODUwMw==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444978503", "bodyText": "This function now allows the form current_timestamp(precision), similar to localtimestamp(precision)", "author": "martint", "createdAt": "2020-06-24T15:25:01Z", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -55,7 +55,8 @@ Date and Time Functions\n \n .. data:: current_timestamp\n \n-    Returns the current timestamp with time zone as of the start of the query.\n+    Returns the current timestamp(3) with time zone as of the start of the", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3OTEwMA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444979100", "bodyText": "presto:tiny> select current_timestamp(6);\n                     _col0\n------------------------------------------------\n 2020-06-24 08:25:31.759993 America/Los_Angeles\n(1 row)", "author": "martint", "createdAt": "2020-06-24T15:25:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4MzU4NA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444983584", "bodyText": "This is currently a phrase, not a type, so it shouldn't have a precision. Let's do it like localtimestamp where we say\n\n, with 3 digits of subsecond precision.", "author": "electrum", "createdAt": "2020-06-24T15:31:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NDE2Nw==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444984167", "bodyText": "We'll need to add a current_timestamp(p) function as @martin mentions. Copy localtimestamp as much as possible.", "author": "electrum", "createdAt": "2020-06-24T15:32:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAyODEwNw==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445028107", "bodyText": "All done", "author": "mosabua", "createdAt": "2020-06-24T16:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjMxMg==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444986312", "bodyText": "The timestamp argument should not change since this is an argument name, not a type. The only change should be adding precision to the return type. The description should not change.\n.. function:: at_timezone(timestamp, zone) -> timestamp(p) with time zone", "author": "electrum", "createdAt": "2020-06-24T15:35:51Z", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -100,26 +101,28 @@ Date and Time Functions\n         SELECT from_iso8601_date('2020-123');\n         -- 2020-05-02\n \n-.. function:: at_timezone(timestamp, zone) -> timestamp with time zone\n+.. function:: at_timezone(timestamp(p), zone) -> timestamp(p) with time zone", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMDc1Mg==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445030752", "bodyText": "So at this stage it doesnt seem clear if this supports the data type \"TIMESTAMP WITH TIME ZONE\" or \"TIMESTAMP WITHOUT TIME ZONE\" or both ... what is actually supported and how do we best communicate that. I think it only supports timestamp with time zone .. but I am not sure. E.g. it could do a conversion ... @martint ? @electrum ?", "author": "mosabua", "createdAt": "2020-06-24T16:45:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE2NDg5NA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445164894", "bodyText": "at_timezone applies to timestamp with time zone, not to timestamp, so the current description is a little confusing.", "author": "martint", "createdAt": "2020-06-24T20:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE2OTQwNg==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445169406", "bodyText": "Great.. so you are confirming that it only applies to timestamp with time zone .. so we should rename the input parameter to make that clear .. any preference for name timestampt_with_time_zone or so @electrum ?", "author": "mosabua", "createdAt": "2020-06-24T21:01:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0MDk2NA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445740964", "bodyText": "Discussed with @electrum and we will leave this simple for now. As a follow up we might need to document the implicit type coercion how it applies to function and specifically also timestamp with and without time zone..", "author": "mosabua", "createdAt": "2020-06-25T18:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjU5MQ==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444986591", "bodyText": "Same as at_timezone, only change the return type, not the argument name or description.", "author": "electrum", "createdAt": "2020-06-24T15:36:15Z", "path": "presto-docs/src/main/sphinx/functions/datetime.rst", "diffHunk": "@@ -100,26 +101,28 @@ Date and Time Functions\n         SELECT from_iso8601_date('2020-123');\n         -- 2020-05-02\n \n-.. function:: at_timezone(timestamp, zone) -> timestamp with time zone\n+.. function:: at_timezone(timestamp(p), zone) -> timestamp(p) with time zone\n \n-    Change the time zone component of ``timestamp`` to ``zone`` while preserving the instant in time.\n+    Change the time zone component of ``timestamp`` with precision ``p`` to\n+    ``zone`` while preserving the instant in time.\n \n-.. function:: with_timezone(timestamp, zone) -> timestamp with time zone\n+.. function:: with_timezone(timestamp(p), zone) -> timestamp(p) with time zone", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMTE5Nw==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445031197", "bodyText": "I have done that now in both cases but the above concerns about it not being clear what timestamp data type is supported as input parameter remains.", "author": "mosabua", "createdAt": "2020-06-24T16:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NzE4Mw==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r444987183", "bodyText": "No need to wrap here", "author": "electrum", "createdAt": "2020-06-24T15:37:06Z", "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -217,8 +217,18 @@ See also :doc:`/functions/datetime` and :doc:`/language/timestamp`\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-    Instant in time that includes the date and time of day with a time zone.\n-    Values of this type are rendered using the time zone from the value.\n+    ``TIMESTAMP WITH TIME ZONE`` is an alias for ``TIMESTAMP(3) WITH TIME ZONE``\n+    (millisecond precision).\n+\n+``TIMESTAMP(P) WITH TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day with ``P`` digits of\n+    precision for the fraction of seconds and with a time zone. Values of this\n+    type are rendered using the time zone from the user session.\n+\n+    Other behavior and usage is identical to :ref:`TIMESTAMP", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMTM4MA==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445031380", "bodyText": "This will change anyway.", "author": "mosabua", "createdAt": "2020-06-24T16:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NzE4Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0MTE0Nw==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445741147", "bodyText": "Typo \"simi\"", "author": "electrum", "createdAt": "2020-06-25T18:02:52Z", "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -214,11 +214,23 @@ See also :doc:`/functions/datetime` and :doc:`/language/timestamp`\n         SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(12));\n         -- 2020-06-10 15:55:23.383345000000\n \n+.. _timestamp-with-time-zone-data-type:\n+\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-    Instant in time that includes the date and time of day with a time zone.\n-    Values of this type are rendered using the time zone from the value.\n+    ``TIMESTAMP WITH TIME ZONE`` is an alias for ``TIMESTAMP(3) WITH TIME ZONE``\n+    (millisecond precision).\n+\n+``TIMESTAMP(P) WITH TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day with ``P`` digits of\n+    precision for the fraction of seconds and with a time zone. Values of this\n+    type are rendered using the time zone from the user session.\n+\n+    Other behavior and usage is simi to", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1NjkzNg==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445756936", "bodyText": "Removed", "author": "mosabua", "createdAt": "2020-06-25T18:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0MTE0Nw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTc4NQ==", "url": "https://github.com/trinodb/trino/pull/4157#discussion_r445841785", "bodyText": "Second sentence is copy/pasted wrong. Should be\n\nValues of this type are rendered using the time zone from the value.", "author": "electrum", "createdAt": "2020-06-25T21:14:09Z", "path": "presto-docs/src/main/sphinx/language/types.rst", "diffHunk": "@@ -214,11 +214,20 @@ See also :doc:`/functions/datetime` and :doc:`/language/timestamp`\n         SELECT cast(TIMESTAMP '2020-06-10 15:55:23.383345' as TIMESTAMP(12));\n         -- 2020-06-10 15:55:23.383345000000\n \n+.. _timestamp-with-time-zone-data-type:\n+\n ``TIMESTAMP WITH TIME ZONE``\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-    Instant in time that includes the date and time of day with a time zone.\n-    Values of this type are rendered using the time zone from the value.\n+    ``TIMESTAMP WITH TIME ZONE`` is an alias for ``TIMESTAMP(3) WITH TIME ZONE``\n+    (millisecond precision).\n+\n+``TIMESTAMP(P) WITH TIME ZONE``\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    Instant in time that includes the date and time of day with ``P`` digits of\n+    precision for the fraction of seconds and with a time zone. Values of this", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3490162a6f6e4d0edc4cd712f9714d9805162578", "url": "https://github.com/trinodb/trino/commit/3490162a6f6e4d0edc4cd712f9714d9805162578", "message": "Add documentation for timestamp with time zone with precision", "committedDate": "2020-06-25T21:20:34Z", "type": "commit"}, {"oid": "3490162a6f6e4d0edc4cd712f9714d9805162578", "url": "https://github.com/trinodb/trino/commit/3490162a6f6e4d0edc4cd712f9714d9805162578", "message": "Add documentation for timestamp with time zone with precision", "committedDate": "2020-06-25T21:20:34Z", "type": "forcePushed"}]}