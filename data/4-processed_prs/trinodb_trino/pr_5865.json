{"pr_number": 5865, "pr_title": "Fix incorrect result when aggregating count BigQuery view", "pr_createdAt": "2020-11-07T11:37:43Z", "pr_url": "https://github.com/trinodb/trino/pull/5865", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA2ODg5Mg==", "url": "https://github.com/trinodb/trino/pull/5865#discussion_r522068892", "bodyText": "Can you please add two rows to a table, so the expected count(*) with and without filters is different?", "author": "losipiuk", "createdAt": "2020-11-12T12:27:43Z", "path": "presto-bigquery/src/test/java/io/prestosql/plugin/bigquery/TestBigQueryIntegrationSmokeTest.java", "diffHunk": "@@ -105,6 +105,33 @@ public void testPredicatePushdownPrunnedColumns()\n                 \"VALUES (1)\");\n     }\n \n+    @Test(description = \"regression test for https://github.com/prestosql/presto/issues/5635\")\n+    public void testCountAggregationView()\n+    {\n+        BigQuery client = createBigQueryClient();\n+\n+        String tableName = \"test.count_aggregation_table\";\n+        String viewName = \"test.count_aggregation_view\";\n+\n+        executeBigQuerySql(client, \"DROP TABLE IF EXISTS \" + tableName);\n+        executeBigQuerySql(client, \"DROP VIEW IF EXISTS \" + viewName);\n+        executeBigQuerySql(client, \"CREATE TABLE \" + tableName + \" (a INT64, b INT64, c INT64)\");\n+        executeBigQuerySql(client, \"INSERT INTO \" + tableName + \" VALUES (1, 2, 3)\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxNTU4Mw==", "url": "https://github.com/trinodb/trino/pull/5865#discussion_r543715583", "bodyText": "Notice that unless there's some caching on the materialized tables references, then any call to count(*) will trigger a new query and create a new table - incurring additional costs on the users. Another approach is to trigger a sql SELECT COUNT(*) FROM view and use the result, which will give BigQuery the option to use some optimizations.", "author": "davidrabinowitz", "createdAt": "2020-12-15T21:57:00Z", "path": "presto-bigquery/src/main/java/io/prestosql/plugin/bigquery/BigQuerySplitManager.java", "diffHunk": "@@ -124,8 +128,22 @@ private static boolean emptyProjectionIsRequired(Optional<List<ColumnHandle>> pr\n                 numberOfRows = result.iterateAll().iterator().next().get(0).getLongValue();\n             }\n             else {\n-                // no filters, so we can take the value from the table info\n-                numberOfRows = bigQueryClient.getTable(tableId).getNumRows().longValue();\n+                // no filters, so we can take the value from the table info when the object is TABLE\n+                TableInfo tableInfo = bigQueryClient.getTable(tableId);\n+                if (tableInfo.getDefinition().getType() == TABLE) {\n+                    numberOfRows = tableInfo.getNumRows().longValue();\n+                }\n+                else if (tableInfo.getDefinition().getType() == VIEW) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwNzMwOA==", "url": "https://github.com/trinodb/trino/pull/5865#discussion_r543807308", "bodyText": "Thanks. As I left to PR description, I considered your \"another\" approach as well. If BigQuery optimizes the aggregation query internally, I would choose COUNT(*) query approach.", "author": "ebyhr", "createdAt": "2020-12-16T01:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxNTU4Mw=="}], "type": "inlineReview"}, {"oid": "62739698fc5778f2dbec2ad829c805c3b25c29bd", "url": "https://github.com/trinodb/trino/commit/62739698fc5778f2dbec2ad829c805c3b25c29bd", "message": "Fix incorrect result when aggregating count BigQuery view", "committedDate": "2020-12-16T01:09:39Z", "type": "commit"}, {"oid": "62739698fc5778f2dbec2ad829c805c3b25c29bd", "url": "https://github.com/trinodb/trino/commit/62739698fc5778f2dbec2ad829c805c3b25c29bd", "message": "Fix incorrect result when aggregating count BigQuery view", "committedDate": "2020-12-16T01:09:39Z", "type": "forcePushed"}]}