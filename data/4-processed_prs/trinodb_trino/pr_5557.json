{"pr_number": 5557, "pr_title": "Improve AesSpillCipher performance and reduce internal allocations", "pr_createdAt": "2020-10-14T18:45:40Z", "pr_url": "https://github.com/trinodb/trino/pull/5557", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM1ODAzMQ==", "url": "https://github.com/trinodb/trino/pull/5557#discussion_r505358031", "bodyText": "The gist of the information from the commit message should be also captured as a code comment.\notherwise it's too easy for someone to roll this back into single doFinal in a remove \"redundant update call\" cleanup commit.", "author": "findepi", "createdAt": "2020-10-15T08:47:39Z", "path": "presto-main/src/main/java/io/prestosql/spiller/AesSpillCipher.java", "diffHunk": "@@ -69,7 +69,8 @@ public int encrypt(byte[] data, int inputOffset, int length, byte[] destination,\n         Cipher cipher = createEncryptCipher(key);\n         System.arraycopy(cipher.getIV(), 0, destination, destinationOffset, ivBytes);\n         try {\n-            return ivBytes + cipher.doFinal(data, inputOffset, length, destination, destinationOffset + ivBytes);\n+            int n = cipher.update(data, inputOffset, length, destination, destinationOffset + ivBytes);\n+            return ivBytes + n + cipher.doFinal(destination, destinationOffset + ivBytes + n);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUyMTE1NQ==", "url": "https://github.com/trinodb/trino/pull/5557#discussion_r505521155", "bodyText": "Done", "author": "pettyjamesm", "createdAt": "2020-10-15T13:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM1ODAzMQ=="}], "type": "inlineReview"}, {"oid": "caf4a438860cce5fa3f539df8e2e01b86333669d", "url": "https://github.com/trinodb/trino/commit/caf4a438860cce5fa3f539df8e2e01b86333669d", "message": "Improve AesSpillCipher performance and reduce internal allocations\n\nThe JDK Cipher implementation for AES leveraged by the AesSpillCipher\nbehaves differently when doFinal is called than it does inside of the\nupdate method. Notably, a single doFinal compared to an update + doFinal\nwill:\n- Take much longer for the AES hardware accelerated intrinsics to be used\nsince the 10,000 invocation threshold for C2 compilation will require 10,000\nSpillCipher calls\n- Allocate a buffer larger than the output length in a attempt to strip out\nthe padding, ultimately doubling the memory usage", "committedDate": "2020-10-15T12:59:25Z", "type": "commit"}, {"oid": "caf4a438860cce5fa3f539df8e2e01b86333669d", "url": "https://github.com/trinodb/trino/commit/caf4a438860cce5fa3f539df8e2e01b86333669d", "message": "Improve AesSpillCipher performance and reduce internal allocations\n\nThe JDK Cipher implementation for AES leveraged by the AesSpillCipher\nbehaves differently when doFinal is called than it does inside of the\nupdate method. Notably, a single doFinal compared to an update + doFinal\nwill:\n- Take much longer for the AES hardware accelerated intrinsics to be used\nsince the 10,000 invocation threshold for C2 compilation will require 10,000\nSpillCipher calls\n- Allocate a buffer larger than the output length in a attempt to strip out\nthe padding, ultimately doubling the memory usage", "committedDate": "2020-10-15T12:59:25Z", "type": "forcePushed"}]}