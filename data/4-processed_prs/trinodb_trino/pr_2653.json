{"pr_number": 2653, "pr_title": "Allow setting identity for insecure connections with passwordless basic auth", "pr_createdAt": "2020-01-28T17:29:26Z", "pr_url": "https://github.com/trinodb/trino/pull/2653", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg0MzM0Ng==", "url": "https://github.com/trinodb/trino/pull/2653#discussion_r373843346", "bodyText": "From an API perspective, it's cleaner to pass in the header value, as that would make testing or other reuse easier (single string vs full request object).", "author": "electrum", "createdAt": "2020-02-02T12:47:54Z", "path": "presto-main/src/main/java/io/prestosql/server/security/BasicAuthCredentials.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.server.security;\n+\n+import com.google.common.base.Splitter;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import java.util.Base64;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.google.common.base.Strings.emptyToNull;\n+import static com.google.common.base.Strings.nullToEmpty;\n+import static com.google.common.net.HttpHeaders.AUTHORIZATION;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.util.Objects.requireNonNull;\n+\n+public class BasicAuthCredentials\n+{\n+    private final String user;\n+    private final Optional<String> password;\n+\n+    public static Optional<BasicAuthCredentials> extractBasicAuthCredentials(HttpServletRequest request)\n+            throws AuthenticationException\n+    {\n+        // This handles HTTP basic auth per RFC 7617. The header contains the\n+        // case-insensitive \"Basic\" scheme followed by a Base64 encoded \"user:pass\".\n+        String header = nullToEmpty(request.getHeader(AUTHORIZATION));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "703be7ba8aec624a284177068e4de01af2c13efa", "url": "https://github.com/trinodb/trino/commit/703be7ba8aec624a284177068e4de01af2c13efa", "message": "Move basic auth credentials extraction to top level class", "committedDate": "2020-02-02T16:03:16Z", "type": "commit"}, {"oid": "7e4c309dedcc7c45c5c7f3b65dbb95b422d12ccd", "url": "https://github.com/trinodb/trino/commit/7e4c309dedcc7c45c5c7f3b65dbb95b422d12ccd", "message": "Allow setting identity for insecure connections\n\nFor insecure connections, allow HTTP basic auth with no password for setting identity", "committedDate": "2020-02-02T16:03:18Z", "type": "commit"}, {"oid": "7e4c309dedcc7c45c5c7f3b65dbb95b422d12ccd", "url": "https://github.com/trinodb/trino/commit/7e4c309dedcc7c45c5c7f3b65dbb95b422d12ccd", "message": "Allow setting identity for insecure connections\n\nFor insecure connections, allow HTTP basic auth with no password for setting identity", "committedDate": "2020-02-02T16:03:18Z", "type": "forcePushed"}]}