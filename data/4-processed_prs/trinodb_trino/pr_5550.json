{"pr_number": 5550, "pr_title": "Inject CatalogName in jdbc connectors", "pr_createdAt": "2020-10-14T08:10:53Z", "pr_url": "https://github.com/trinodb/trino/pull/5550", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMDg5MA==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r504500890", "bodyText": "should we hide constructors (make them protected) of JdbcConnectorFactory and use static method instead? It's not obvious why module should be wrapped in withCredentialProvider and this commit changes mechanics of JdbcConnectorFactory", "author": "sopel39", "createdAt": "2020-10-14T08:36:44Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -40,9 +40,14 @@\n \n     public JdbcConnectorFactory(String name, Module module)\n     {\n-        this(name, JdbcModuleProvider.withCredentialProvider(module));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyNjQ2OA==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r504526468", "bodyText": "Hiding constructors is quite invasive change.\nYou should use withCredentialProvider when connector expects user should pass user and password in config properties.\nIt is a typical jdbc connector behaviour. Notice that typically connector extend io.prestosql.plugin.jdbc.JdbcPlugin and from that point of view nothing changes.", "author": "kokosing", "createdAt": "2020-10-14T09:15:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMDg5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIzODY4Ng==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r506238686", "bodyText": "add /** @deprecated  and tell what to use instead.\nalso the commit message (\"Deprecate JdbcModuleProvider\") could indicate  a hint as well", "author": "findepi", "createdAt": "2020-10-16T09:53:58Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -83,14 +88,14 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         return injector.getInstance(JdbcConnector.class);\n     }\n \n+    @Deprecated", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjIzODkzNA==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r506238934", "bodyText": "make it into @deprecated", "author": "findepi", "createdAt": "2020-10-16T09:54:13Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -40,9 +40,14 @@\n \n     public JdbcConnectorFactory(String name, Module module)\n     {\n-        this(name, JdbcModuleProvider.withCredentialProvider(module));\n+        this(name, catalogName -> module);\n     }\n \n+    /**\n+     * Prefer {@link JdbcConnectorFactory#JdbcConnectorFactory(String, Module)}.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0MDcwOA==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r506240708", "bodyText": "this is still the constructor (with the other one delegating here).\nWill we have this deprecated staying here & being used for ever?", "author": "findepi", "createdAt": "2020-10-16T09:55:43Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -40,9 +40,14 @@\n \n     public JdbcConnectorFactory(String name, Module module)\n     {\n-        this(name, JdbcModuleProvider.withCredentialProvider(module));\n+        this(name, catalogName -> module);\n     }\n \n+    /**\n+     * Prefer {@link JdbcConnectorFactory#JdbcConnectorFactory(String, Module)}.\n+     * Notice that {@link io.prestosql.plugin.base.CatalogName} is available in guice context.\n+     */\n+    @Deprecated", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NzU0OQ==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r506657549", "bodyText": "Once we start to use the other constructor widely, we could remove this one and then we could refactor this class and remove JdbcModuleProvider.", "author": "kokosing", "createdAt": "2020-10-16T18:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0MDcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0MjQ4Ng==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r506242486", "bodyText": "You're not maintaining compatibility (the FQN name of the method changed), so you can as well remove this method altogether (inline). I think we should rather pull CredentialProviderModule explicitly.", "author": "findepi", "createdAt": "2020-10-16T09:57:18Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcConnectorFactory.java", "diffHunk": "@@ -83,14 +88,14 @@ public Connector create(String catalogName, Map<String, String> requiredConfig,\n         return injector.getInstance(JdbcConnector.class);\n     }\n \n+    @Deprecated\n     public interface JdbcModuleProvider\n     {\n         Module getModule(String catalogName);\n+    }\n \n-        static JdbcModuleProvider withCredentialProvider(Module module)\n-        {\n-            requireNonNull(module, \"module is null\");\n-            return catalogName -> combine(new CredentialProviderModule(), module);\n-        }\n+    public static Module withCredentialProvider(Module module)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0Mzk3OA==", "url": "https://github.com/trinodb/trino/pull/5550#discussion_r506243978", "bodyText": "Squash with Inject CatalogName in JDBC connectors?\nthe Inject CatalogName in JDBC connectors commit looks so void on its own", "author": "findepi", "createdAt": "2020-10-16T09:58:39Z", "path": "presto-base-jdbc/src/main/java/io/prestosql/plugin/jdbc/JdbcDiagnosticModule.java", "diffHunk": "@@ -28,35 +30,28 @@\n \n import static com.google.common.reflect.Reflection.newProxy;\n import static java.lang.String.format;\n-import static java.util.Objects.requireNonNull;\n import static org.weakref.jmx.guice.ExportBinder.newExporter;\n \n public class JdbcDiagnosticModule\n         implements Module\n {\n-    private final String catalogName;\n-\n-    public JdbcDiagnosticModule(String catalogName)\n-    {\n-        this.catalogName = requireNonNull(catalogName, \"catalogName is null\");\n-    }\n-\n     @Override\n     public void configure(Binder binder)\n     {\n         binder.install(new MBeanServerModule());\n         binder.install(new MBeanModule());\n \n+        Provider<CatalogName> catalogName = binder.getProvider(CatalogName.class);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12e34e7a3785655f54e00b56ba67697e63e81c6a", "url": "https://github.com/trinodb/trino/commit/12e34e7a3785655f54e00b56ba67697e63e81c6a", "message": "Avoid using deprecated method", "committedDate": "2020-10-16T18:47:28Z", "type": "commit"}, {"oid": "94bc38824af47480f5cd59466984797ead35c8d3", "url": "https://github.com/trinodb/trino/commit/94bc38824af47480f5cd59466984797ead35c8d3", "message": "Inject CatalogName in JDBC connectors", "committedDate": "2020-10-16T18:47:29Z", "type": "commit"}, {"oid": "e7850a78be82b9fa67284e74e13ca5aa4e515b09", "url": "https://github.com/trinodb/trino/commit/e7850a78be82b9fa67284e74e13ca5aa4e515b09", "message": "Deprecate JdbcModuleProvider\n\nPrefer using JdbcConnectorFactory#JdbcConnectorFactory(String, Module)\ninstead. Notice that CatalogName is available in guice context so there\nis no point of getting that information from JdbcModuleProvider.", "committedDate": "2020-10-16T18:47:30Z", "type": "commit"}, {"oid": "e7850a78be82b9fa67284e74e13ca5aa4e515b09", "url": "https://github.com/trinodb/trino/commit/e7850a78be82b9fa67284e74e13ca5aa4e515b09", "message": "Deprecate JdbcModuleProvider\n\nPrefer using JdbcConnectorFactory#JdbcConnectorFactory(String, Module)\ninstead. Notice that CatalogName is available in guice context so there\nis no point of getting that information from JdbcModuleProvider.", "committedDate": "2020-10-16T18:47:30Z", "type": "forcePushed"}]}