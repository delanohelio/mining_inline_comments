{"pr_number": 3301, "pr_title": "Add extension point for Glue custom request headers", "pr_createdAt": "2020-04-01T11:11:11Z", "pr_url": "https://github.com/trinodb/trino/pull/3301", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgyNzI2Nw==", "url": "https://github.com/trinodb/trino/pull/3301#discussion_r401827267", "bodyText": "Let's just remove this null check. We can trust that createAsyncGlueClient doesn't return null since it's private code to this class.", "author": "electrum", "createdAt": "2020-04-01T18:36:54Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java", "diffHunk": "@@ -165,24 +166,27 @@ public GlueHiveMetastore(\n             HdfsEnvironment hdfsEnvironment,\n             GlueHiveMetastoreConfig glueConfig,\n             GlueColumnStatisticsProvider columnStatisticsProvider,\n-            @ForGlueHiveMetastore Executor executor)\n+            @ForGlueHiveMetastore Executor executor,\n+            @ForGlueHiveMetastore Optional<RequestHandler2> requestHandler)\n     {\n         this.hdfsEnvironment = requireNonNull(hdfsEnvironment, \"hdfsEnvironment is null\");\n         this.hdfsContext = new HdfsContext(ConnectorIdentity.ofUser(DEFAULT_METASTORE_USER));\n-        this.glueClient = requireNonNull(createAsyncGlueClient(glueConfig), \"glueClient is null\");\n+        this.glueClient = requireNonNull(createAsyncGlueClient(glueConfig, requestHandler), \"glueClient is null\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgyODA1NA==", "url": "https://github.com/trinodb/trino/pull/3301#discussion_r401828054", "bodyText": "This null check isn't needed, as we'll provide an NPE directly to the caller.\nIf you feel strongly that we should have an explicit check, then move it to the top so that it's standalone, as that seems cleaner than picking the first usage (there are other usages of it here). Do it as the first commit in this PR (before adding new code).", "author": "electrum", "createdAt": "2020-04-01T18:38:20Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueHiveMetastore.java", "diffHunk": "@@ -171,7 +171,7 @@ public GlueHiveMetastore(\n     {\n         this.hdfsEnvironment = requireNonNull(hdfsEnvironment, \"hdfsEnvironment is null\");\n         this.hdfsContext = new HdfsContext(ConnectorIdentity.ofUser(DEFAULT_METASTORE_USER));\n-        this.glueClient = requireNonNull(createAsyncGlueClient(glueConfig, requestHandler), \"glueClient is null\");\n+        this.glueClient = createAsyncGlueClient(requireNonNull(glueConfig, \"glueConfig is null\"), requestHandler);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4ODk2Nw==", "url": "https://github.com/trinodb/trino/pull/3301#discussion_r402188967", "bodyText": "If you feel strongly that we should have an explicit check, then move it to the top so that it's standalone\n\nMoved to bottom", "author": "sopel39", "createdAt": "2020-04-02T09:49:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgyODA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgyODQ3Mg==", "url": "https://github.com/trinodb/trino/pull/3301#discussion_r401828472", "bodyText": "Do this cleanup commit first, so that we don't add new code and then immediately modify it", "author": "electrum", "createdAt": "2020-04-01T18:38:58Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/metastore/glue/GlueMetastoreModule.java", "diffHunk": "@@ -50,10 +50,10 @@ protected void setup(Binder binder)\n     {\n         configBinder(binder).bindConfig(GlueHiveMetastoreConfig.class);\n \n-        OptionalBinder.newOptionalBinder(binder, GlueColumnStatisticsProvider.class)\n+        newOptionalBinder(binder, GlueColumnStatisticsProvider.class)\n                 .setDefault().to(DisabledGlueColumnStatisticsProvider.class).in(Scopes.SINGLETON);\n \n-        OptionalBinder.newOptionalBinder(binder, Key.get(RequestHandler2.class, ForGlueHiveMetastore.class));\n+        newOptionalBinder(binder, Key.get(RequestHandler2.class, ForGlueHiveMetastore.class));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9eb9cdfe2425e8685d95bd33c17cd1a2ec02fc78", "url": "https://github.com/trinodb/trino/commit/9eb9cdfe2425e8685d95bd33c17cd1a2ec02fc78", "message": "Fix Glue config null check", "committedDate": "2020-04-02T09:52:50Z", "type": "commit"}, {"oid": "57a7865567d5eae34affb1f9b0cf29425d4abc67", "url": "https://github.com/trinodb/trino/commit/57a7865567d5eae34affb1f9b0cf29425d4abc67", "message": "Static import newOptionalBinder", "committedDate": "2020-04-02T09:53:12Z", "type": "commit"}, {"oid": "d10a10b24d8ac90db6174ecae724d6a995708401", "url": "https://github.com/trinodb/trino/commit/d10a10b24d8ac90db6174ecae724d6a995708401", "message": "Add support for custom Glue request handlers", "committedDate": "2020-04-02T09:53:49Z", "type": "commit"}, {"oid": "d10a10b24d8ac90db6174ecae724d6a995708401", "url": "https://github.com/trinodb/trino/commit/d10a10b24d8ac90db6174ecae724d6a995708401", "message": "Add support for custom Glue request handlers", "committedDate": "2020-04-02T09:53:49Z", "type": "forcePushed"}]}