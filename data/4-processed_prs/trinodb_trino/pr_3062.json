{"pr_number": 3062, "pr_title": "Precompute probe row size estimate once", "pr_createdAt": "2020-03-10T22:17:25Z", "pr_url": "https://github.com/trinodb/trino/pull/3062", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw==", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391103603", "bodyText": "Can you great greatly off estimates when initial data is outlier?", "author": "findepi", "createdAt": "2020-03-11T16:33:14Z", "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxMzY2NQ==", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391313665", "bodyText": "the estimate per row is always the same. It was always the same previously too.\nblock.getSizeInBytes() / block.getPositionCount(); takes into account entire block size", "author": "sopel39", "createdAt": "2020-03-11T22:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2OTgwNg==", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391469806", "bodyText": "i missed the reset call, thanks", "author": "findepi", "createdAt": "2020-03-12T08:41:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzYwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MDM1Ng==", "url": "https://github.com/trinodb/trino/pull/3062#discussion_r391470356", "bodyText": "i'd prefer to use a local var and populate the class state (field) only when fully calculated.\n(one variable more, but makes code easier to reason about)", "author": "findepi", "createdAt": "2020-03-12T08:42:27Z", "path": "presto-main/src/main/java/io/prestosql/operator/LookupJoinPageBuilder.java", "diffHunk": "@@ -179,11 +181,23 @@ private void appendProbeIndex(JoinProbe probe)\n         if (previousPosition == position) {\n             return;\n         }\n+        estimatedProbeBlockBytes += getEstimatedProbeRowSize(probe);\n+    }\n+\n+    private int getEstimatedProbeRowSize(JoinProbe probe)\n+    {\n+        if (estimatedProbeRowSize != -1) {\n+            return estimatedProbeRowSize;\n+        }\n+\n+        estimatedProbeRowSize = 0;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0732f3f8ace40f27acd3765fbbc535fc444efc2c", "url": "https://github.com/trinodb/trino/commit/0732f3f8ace40f27acd3765fbbc535fc444efc2c", "message": "Precompute probe row size estimate once\n\nDon't enumerate probe blocks for every appended\njoin row.", "committedDate": "2020-03-12T10:13:36Z", "type": "commit"}, {"oid": "0732f3f8ace40f27acd3765fbbc535fc444efc2c", "url": "https://github.com/trinodb/trino/commit/0732f3f8ace40f27acd3765fbbc535fc444efc2c", "message": "Precompute probe row size estimate once\n\nDon't enumerate probe blocks for every appended\njoin row.", "committedDate": "2020-03-12T10:13:36Z", "type": "forcePushed"}]}