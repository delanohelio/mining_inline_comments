{"pr_number": 2932, "pr_title": "Add identity destroy to free up authenticator resources", "pr_createdAt": "2020-02-25T01:19:49Z", "pr_url": "https://github.com/trinodb/trino/pull/2932", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwOTg3MQ==", "url": "https://github.com/trinodb/trino/pull/2932#discussion_r383609871", "bodyText": "Check for null (technically redundant, but looks better)", "author": "electrum", "createdAt": "2020-02-25T01:22:46Z", "path": "presto-spi/src/main/java/io/prestosql/spi/security/Identity.java", "diffHunk": "@@ -186,9 +195,38 @@ public Builder withAdditionalExtraCredentials(Map<String, String> extraCredentia\n             return this;\n         }\n \n+        public void withOnDestroy(Runnable onDestroy)\n+        {\n+            requireNonNull(onDestroy, \"onDestroy is null\");\n+            if (this.onDestroy.isPresent()) {\n+                throw new IllegalStateException(\"Destroy callback already set\");\n+            }\n+            this.onDestroy = Optional.of(new InvokeOnceRunnable(onDestroy));\n+        }\n+\n         public Identity build()\n         {\n-            return new Identity(user, principal, roles, extraCredentials);\n+            return new Identity(user, principal, roles, extraCredentials, onDestroy);\n+        }\n+    }\n+\n+    private static final class InvokeOnceRunnable\n+            implements Runnable\n+    {\n+        private final Runnable delegate;\n+        private final AtomicBoolean invoked = new AtomicBoolean();\n+\n+        public InvokeOnceRunnable(Runnable delegate)\n+        {\n+            this.delegate = delegate;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxMDQwNA==", "url": "https://github.com/trinodb/trino/pull/2932#discussion_r383610404", "bodyText": "This seems to be unused", "author": "electrum", "createdAt": "2020-02-25T01:24:52Z", "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -386,6 +389,11 @@ public synchronized void cancel()\n             querySubmissionFuture.addListener(() -> dispatchManager.cancelQuery(queryId), directExecutor());\n         }\n \n+        public void destroy()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE5ODUwNA==", "url": "https://github.com/trinodb/trino/pull/2932#discussion_r384198504", "bodyText": "This should either be RuntimeException, since destroy() doesn't throw checked exceptions, or be Throwable to guarantee we catch everything.", "author": "electrum", "createdAt": "2020-02-25T23:54:09Z", "path": "presto-main/src/main/java/io/prestosql/dispatcher/QueuedStatementResource.java", "diffHunk": "@@ -129,7 +129,16 @@ public QueuedStatementResource(\n \n                             // forget about this query if the query manager is no longer tracking it\n                             if (!dispatchManager.isQueryRegistered(entry.getKey())) {\n-                                queries.remove(entry.getKey());\n+                                Query query = queries.remove(entry.getKey());\n+                                if (query != null) {\n+                                    try {\n+                                        query.destroy();\n+                                    }\n+                                    catch (Exception e) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "16a867814eef68517fb6d7b253110c187bf3a63b", "url": "https://github.com/trinodb/trino/commit/16a867814eef68517fb6d7b253110c187bf3a63b", "message": "Add identity destroy to free up authenticator resources", "committedDate": "2020-02-26T03:48:53Z", "type": "commit"}, {"oid": "16a867814eef68517fb6d7b253110c187bf3a63b", "url": "https://github.com/trinodb/trino/commit/16a867814eef68517fb6d7b253110c187bf3a63b", "message": "Add identity destroy to free up authenticator resources", "committedDate": "2020-02-26T03:48:53Z", "type": "forcePushed"}]}