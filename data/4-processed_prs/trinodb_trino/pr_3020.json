{"pr_number": 3020, "pr_title": "Add Like predicate to SHOW COLUMNS", "pr_createdAt": "2020-03-06T07:36:17Z", "pr_url": "https://github.com/trinodb/trino/pull/3020", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2ODE1Mg==", "url": "https://github.com/trinodb/trino/pull/3020#discussion_r388868152", "bodyText": "This row would match even without ESCAPE. It would be nice to have a test that would actually verify that ESCAPE works.\nLike having columns: a_ and aa then LIKE 'a$_' ESCAPE '$' would only match a_. Can you write such test?", "author": "kokosing", "createdAt": "2020-03-06T12:09:00Z", "path": "presto-main/src/test/java/io/prestosql/sql/query/TestShowQueries.java", "diffHunk": "@@ -91,4 +91,23 @@ public void testListingEmptyCatalogs()\n             assertions.getQueryRunner().getAccessControl().reset();\n         });\n     }\n+\n+    @Test\n+    public void testShowColumnsLike()\n+    {\n+        assertions.assertQuery(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 'node%'\",\n+                \"VALUES \" +\n+                        \"(CAST('node_id' AS VARCHAR), CAST('varchar' AS VARCHAR) , CAST('' AS VARCHAR), CAST('' AS VARCHAR)),\" +\n+                        \"(CAST('node_version' AS VARCHAR), CAST('varchar' AS VARCHAR) , CAST('' AS VARCHAR), CAST('' AS VARCHAR))\");\n+    }\n+\n+    @Test\n+    public void testShowColumnsWithLikeWithEscape()\n+    {\n+        assertions.assertFails(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 't$_%' ESCAPE ''\", \"Escape string must be a single character\");\n+        assertions.assertFails(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 't$_%' ESCAPE '$$'\", \"Escape string must be a single character\");\n+        assertions.assertQuery(\n+                \"SHOW COLUMNS FROM system.runtime.nodes LIKE '%ode$_id' ESCAPE '$'\",\n+                \"VALUES (CAST('node_id' AS VARCHAR), CAST('varchar' AS VARCHAR), CAST('' AS VARCHAR), CAST('' AS VARCHAR))\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2ODI4NA==", "url": "https://github.com/trinodb/trino/pull/3020#discussion_r388868284", "bodyText": "can you add tests for SHOW COLUMNS:\n\nwithout LIKE\nwith LIKE but with no wildcards\nempty and null LIKE\nempty, null and incorrect ESCAPE\nwith wrong types given for LIKE and ESCAPE\nwithout LIKE and with ESCAPE (this one in TestSqlParser)", "author": "kokosing", "createdAt": "2020-03-06T12:09:23Z", "path": "presto-main/src/test/java/io/prestosql/sql/query/TestShowQueries.java", "diffHunk": "@@ -91,4 +91,23 @@ public void testListingEmptyCatalogs()\n             assertions.getQueryRunner().getAccessControl().reset();\n         });\n     }\n+\n+    @Test\n+    public void testShowColumnsLike()\n+    {\n+        assertions.assertQuery(\"SHOW COLUMNS FROM system.runtime.nodes LIKE 'node%'\",", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "b651bcf69d7ef13aa264746b419f2f178b876d33", "url": "https://github.com/trinodb/trino/commit/b651bcf69d7ef13aa264746b419f2f178b876d33", "message": "Add Like predicate to SHOW COLUMNS", "committedDate": "2020-04-28T11:58:19Z", "type": "commit"}, {"oid": "b651bcf69d7ef13aa264746b419f2f178b876d33", "url": "https://github.com/trinodb/trino/commit/b651bcf69d7ef13aa264746b419f2f178b876d33", "message": "Add Like predicate to SHOW COLUMNS", "committedDate": "2020-04-28T11:58:19Z", "type": "forcePushed"}]}