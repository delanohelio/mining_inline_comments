{"pr_number": 4473, "pr_title": "Ensure to pushdown the aggregation for count(const)", "pr_createdAt": "2020-07-16T11:54:20Z", "pr_url": "https://github.com/trinodb/trino/pull/4473", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1NTcyNg==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r455855726", "bodyText": "Can you add one with an empty count too, count()?", "author": "alexjo2144", "createdAt": "2020-07-16T15:02:43Z", "path": "presto-postgresql/src/test/java/io/prestosql/plugin/postgresql/TestPostgreSqlIntegrationSmokeTest.java", "diffHunk": "@@ -296,6 +296,7 @@ public void testAggregationPushdown()\n         // TODO support aggregation over expressions\n \n         assertPushedDown(\"SELECT count(*) FROM nation\");\n+        assertPushedDown(\"SELECT count(1) FROM nation\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIzNjI3Nw==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r456236277", "bodyText": "Adding empty count makes test failed. Presto supports empty count but PostgreSQL (or JDBC?) seems not.\nCaused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement \"SELECT COUNT()[*] FROM NATION\"; expected \"*, DISTINCT, ALL, NOT, EXISTS, INTERSECTS, UNIQUE\"; SQL statement:\nSELECT count() FROM nation [42001-200]\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:453)\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:429)\n\tat org.h2.message.DbException.getSyntaxError(DbException.java:243)\n\tat org.h2.command.Parser.getSyntaxError(Parser.java:1053)\n\tat org.h2.command.Parser.readTerm(Parser.java:4479)", "author": "Lewuathe", "createdAt": "2020-07-17T06:04:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1NTcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIzNjk1OA==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r456236958", "bodyText": "The error comes from H2, which is used as a reference\nFor now you can add a second param like this, to use a different query for H2:\nassertPushedDown(\"SELECT count() FROM nation\",  \"SELECT count(*) FROM nation\");\n\nThis won't be needed after #4466", "author": "findepi", "createdAt": "2020-07-17T06:07:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1NTcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MjE3MQ==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r456242171", "bodyText": "@findepi Thanks a lot! It did work as we expected. I didn't know such usage of assertPushedDown.", "author": "Lewuathe", "createdAt": "2020-07-17T06:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1NTcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE2ODQzNw==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r458168437", "bodyText": "#4466 was merged so you may need a rebase", "author": "alexjo2144", "createdAt": "2020-07-21T15:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1NTcyNg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMzODQ3OA==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r456338478", "bodyText": "Instead of adding new IterativeOptimizer, maybe you could add this rule to existing one. Maybe here: https://github.com/prestosql/presto/pull/4473/files#diff-ac936e954fdd13abb49900e706ea17fcL391?", "author": "kokosing", "createdAt": "2020-07-17T09:45:56Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -460,6 +466,7 @@ public PlanOptimizers(\n                                 new ImplementIntersectAsUnion(metadata),\n                                 new ImplementExceptAsUnion(metadata))),\n                 new LimitPushDown(), // Run the LimitPushDown after flattening set operators to make it easier to do the set flattening\n+                simplifyCountOverConstantOptimizer, // Run SimplifyCountOverConstant before column pruning to ensure the aggregation pushdown to connectors.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0NDg2OQ==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r456344869", "bodyText": "@kokosing  The link doesn't seem to work for me.", "author": "findepi", "createdAt": "2020-07-17T09:58:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMzODQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1MTcwOQ==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r456351709", "bodyText": "It works, but you don't see it. It marks the line that is hidden.", "author": "kokosing", "createdAt": "2020-07-17T10:12:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMzODQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1MjAyMw==", "url": "https://github.com/trinodb/trino/pull/4473#discussion_r456352023", "bodyText": "Thanks for (not) noticing this and letting me know.", "author": "kokosing", "createdAt": "2020-07-17T10:12:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMzODQ3OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "d95dbe2973db24e8e2216bf1cf435061cb6cd7e4", "url": "https://github.com/trinodb/trino/commit/d95dbe2973db24e8e2216bf1cf435061cb6cd7e4", "message": "Ensure to pushdown the aggregation for count(const)\n\nAggregate pushdown should be enabled even with count(const) query. Since\nSimplifyCountOverConstant is applied after PushAggregationIntoTableScan,\nthe aggregation pushdown does not treat count(*) and count(const)\nuniformally.", "committedDate": "2020-07-22T11:13:37Z", "type": "commit"}, {"oid": "d95dbe2973db24e8e2216bf1cf435061cb6cd7e4", "url": "https://github.com/trinodb/trino/commit/d95dbe2973db24e8e2216bf1cf435061cb6cd7e4", "message": "Ensure to pushdown the aggregation for count(const)\n\nAggregate pushdown should be enabled even with count(const) query. Since\nSimplifyCountOverConstant is applied after PushAggregationIntoTableScan,\nthe aggregation pushdown does not treat count(*) and count(const)\nuniformally.", "committedDate": "2020-07-22T11:13:37Z", "type": "forcePushed"}]}