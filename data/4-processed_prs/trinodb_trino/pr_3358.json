{"pr_number": 3358, "pr_title": "Add EventListener to HiveConnector", "pr_createdAt": "2020-04-06T14:25:32Z", "pr_url": "https://github.com/trinodb/trino/pull/3358", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNjY1OA==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404306658", "bodyText": "Why not to toImmutableSet()?", "author": "kokosing", "createdAt": "2020-04-06T18:38:22Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -133,6 +139,10 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                     classLoader);\n             Set<Procedure> procedures = injector.getInstance(Key.get(new TypeLiteral<Set<Procedure>>() {}));\n             Set<SystemTable> systemTables = injector.getInstance(Key.get(new TypeLiteral<Set<SystemTable>>() {}));\n+            List<EventListener> eventListeners = injector.getInstance(Key.get(new TypeLiteral<Set<EventListener>>() {}))\n+                    .stream()\n+                    .map(listener -> new ClassLoaderSafeEventListener(listener, classLoader))\n+                    .collect(toImmutableList());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4NTI5Ng==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404385296", "bodyText": "there is not point to even attempt any deduplication", "author": "findepi", "createdAt": "2020-04-06T21:00:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNjY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMTA2Mg==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404621062", "bodyText": "I had two points, none of them serious:\n\ninjector.getInstance(Key.get(new TypeLiteral<Set<EventListener>>() {})) returns a set, so why do we change this?\nUsing list here could make a false impression that this could contain duplicates (set still can, but it is less obvious). I don't see a reason why one would need even thing about it.\n\nAny way, I will it leave up to author.", "author": "kokosing", "createdAt": "2020-04-07T08:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNjY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyNjMzOQ==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404626339", "bodyText": "Since ClassLoaderSafeEventListener doesn't (and shouldn't) implement equals, using set is pointless.", "author": "findepi", "createdAt": "2020-04-07T08:22:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNjY1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzQ4OQ==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404307489", "bodyText": "Just add newSetBinder(binder, EventListener.class); here. I don't see a need for defaultEventListenerModule() method.", "author": "kokosing", "createdAt": "2020-04-06T18:39:46Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -104,6 +109,7 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                         binder.bind(PageSorter.class).toInstance(context.getPageSorter());\n                         binder.bind(CatalogName.class).toInstance(new CatalogName(catalogName));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3ODUzNg==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404678536", "bodyText": "better reading experience along with expressing the intention of it, so that the reader doesn't have to guess that it's a necessary default Event Listener.", "author": "s2lomon", "createdAt": "2020-04-07T09:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNjI0Nw==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404706247", "bodyText": "It is a matter of taste. I would prefer not to over-optimize reading experience, but rather follow the current layout.", "author": "kokosing", "createdAt": "2020-04-07T10:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4MzAzMQ==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404983031", "bodyText": "Agreed, we should just bind an empty set here.", "author": "electrum", "createdAt": "2020-04-07T17:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMTc2OQ==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r405501769", "bodyText": "ok", "author": "s2lomon", "createdAt": "2020-04-08T12:55:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODE4OQ==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404308189", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ClassLoaderSafeEventListener(EventListener delegate, ClassLoader classLoader)\n          \n          \n            \n                public ClassLoaderSafeEventListener(@ForClassLoaderSafe  EventListener delegate, ClassLoader classLoader)", "author": "kokosing", "createdAt": "2020-04-06T18:41:01Z", "path": "presto-plugin-toolkit/src/main/java/io/prestosql/plugin/base/classloader/ClassLoaderSafeEventListener.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.base.classloader;\n+\n+import io.prestosql.spi.classloader.ThreadContextClassLoader;\n+import io.prestosql.spi.eventlistener.EventListener;\n+import io.prestosql.spi.eventlistener.QueryCompletedEvent;\n+import io.prestosql.spi.eventlistener.QueryCreatedEvent;\n+import io.prestosql.spi.eventlistener.SplitCompletedEvent;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ClassLoaderSafeEventListener\n+        implements EventListener\n+{\n+    private final EventListener delegate;\n+    private final ClassLoader classLoader;\n+\n+    public ClassLoaderSafeEventListener(EventListener delegate, ClassLoader classLoader)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NzgzOQ==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404677839", "bodyText": "What would that annotation do? This class is used as a decorator inside a stream/for-loop operation. Nothing will be injected into it through guice, as there are potentially many EventListeners etc. For me adding it there would be misleading, but maybe I don't get the full purpose.", "author": "s2lomon", "createdAt": "2020-04-07T09:44:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODE4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNTgwMg==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404705802", "bodyText": "ClassLoaderSafe* classes are also designed to be used with guice. I wanted to add this annotation to make sure it follows the convention and behaves like any other ClassLoaderSafe* class.", "author": "kokosing", "createdAt": "2020-04-07T10:31:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODE4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNzI5Nw==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404707297", "bodyText": "Please don't get me wrong. I don't want you to use it ;)", "author": "kokosing", "createdAt": "2020-04-07T10:34:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODE4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc1NTIwNw==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404755207", "bodyText": "ok I get it :)", "author": "s2lomon", "createdAt": "2020-04-07T12:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODE4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODQ3Nw==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404308477", "bodyText": "I would add it in separate commit.\nAdd a test for this class to io.prestosql.plugin.base.classloader.TestClassLoaderSafeWrappers", "author": "kokosing", "createdAt": "2020-04-06T18:41:30Z", "path": "presto-plugin-toolkit/src/main/java/io/prestosql/plugin/base/classloader/ClassLoaderSafeEventListener.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.prestosql.plugin.base.classloader;\n+\n+import io.prestosql.spi.classloader.ThreadContextClassLoader;\n+import io.prestosql.spi.eventlistener.EventListener;\n+import io.prestosql.spi.eventlistener.QueryCompletedEvent;\n+import io.prestosql.spi.eventlistener.QueryCreatedEvent;\n+import io.prestosql.spi.eventlistener.SplitCompletedEvent;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ClassLoaderSafeEventListener", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NTUzNA==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404675534", "bodyText": "ok i can add it in a separate commit with a test.", "author": "s2lomon", "createdAt": "2020-04-07T09:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwOTQ0OA==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404309448", "bodyText": "I would simply write Allow HiveConnector to return EventListener for commit message.\nTerms like external event listeners or hive plugin ecosystem are a bit misleading. Maybe this just a matter of taste.", "author": "kokosing", "createdAt": "2020-04-06T18:43:11Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/HiveConnector.java", "diffHunk": "@@ -28,6 +28,7 @@\n import io.prestosql.spi.connector.ConnectorSplitManager;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NTQ5NQ==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404675495", "bodyText": "sure", "author": "s2lomon", "createdAt": "2020-04-07T09:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwOTQ0OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0NDU2NA==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404744564", "bodyText": "static import", "author": "kokosing", "createdAt": "2020-04-07T11:44:05Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -152,4 +162,12 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                     classLoader);\n         }\n     }\n+\n+    private static Module defaultEventListenerModule()\n+    {\n+        return binder -> {\n+            Multibinder.newSetBinder(binder, EventListener.class)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a8e7518045ed50931350dadcbaf2e37357717baf", "url": "https://github.com/trinodb/trino/commit/a8e7518045ed50931350dadcbaf2e37357717baf", "message": "Add ClassLoader safe Event Listener", "committedDate": "2020-04-07T12:03:03Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NDUwMw==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r404984503", "bodyText": "There's no need to create a no-op listener. The default implementation of Connector.getEventListeners() returns an empty set, so empty iterable is legal. We just need to create the set binder.", "author": "electrum", "createdAt": "2020-04-07T17:26:05Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/InternalHiveConnectorFactory.java", "diffHunk": "@@ -152,4 +162,12 @@ public static Connector createConnector(String catalogName, Map<String, String>\n                     classLoader);\n         }\n     }\n+\n+    private static Module defaultEventListenerModule()\n+    {\n+        return binder -> {\n+            newSetBinder(binder, EventListener.class)\n+                    .addBinding().toInstance(new EventListener() {});", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwMTY5MA==", "url": "https://github.com/trinodb/trino/pull/3358#discussion_r405501690", "bodyText": "fair point", "author": "s2lomon", "createdAt": "2020-04-08T12:54:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4NDUwMw=="}], "type": "inlineReview"}, {"oid": "ef9202da64d589eac52c2de8731ddd8807cd088f", "url": "https://github.com/trinodb/trino/commit/ef9202da64d589eac52c2de8731ddd8807cd088f", "message": "Allow HiveConnector to return EventListener", "committedDate": "2020-04-08T13:09:16Z", "type": "commit"}, {"oid": "ef9202da64d589eac52c2de8731ddd8807cd088f", "url": "https://github.com/trinodb/trino/commit/ef9202da64d589eac52c2de8731ddd8807cd088f", "message": "Allow HiveConnector to return EventListener", "committedDate": "2020-04-08T13:09:16Z", "type": "forcePushed"}]}