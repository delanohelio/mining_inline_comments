{"pr_number": 6119, "pr_title": "Fix terminal width detection in the CLI", "pr_createdAt": "2020-11-27T11:40:16Z", "pr_url": "https://github.com/trinodb/trino/pull/6119", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NjcyMw==", "url": "https://github.com/trinodb/trino/pull/6119#discussion_r531586723", "bodyText": "private?", "author": "findepi", "createdAt": "2020-11-27T12:56:31Z", "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "diffHunk": "@@ -14,30 +14,53 @@\n package io.prestosql.cli;\n \n import org.jline.terminal.Terminal;\n+import org.jline.terminal.TerminalBuilder;\n \n import java.io.IOException;\n-\n-import static org.jline.terminal.TerminalBuilder.terminal;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.Charset;\n \n public class TerminalUtils\n {\n-    private static final boolean REAL_TERMINAL = detectRealTerminal();\n+    private static final Terminal TERMINAL_INSTANCE = createTerminal();\n \n     private TerminalUtils() {}\n \n+    public static boolean isRealTerminal(Terminal terminal)\n+    {\n+        return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n+                !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+    }\n+\n     public static boolean isRealTerminal()\n     {\n-        return REAL_TERMINAL;\n+        return isRealTerminal(getTerminal());\n+    }\n+\n+    public static int terminalWidth()\n+    {\n+        return getTerminal().getWidth();\n     }\n \n-    private static boolean detectRealTerminal()\n+    public static Charset terminalEncoding()\n     {\n-        try (Terminal terminal = terminal()) {\n-            return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n-                    !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        return getTerminal().encoding();\n+    }\n+\n+    public static Terminal createTerminal()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NzE1OQ==", "url": "https://github.com/trinodb/trino/pull/6119#discussion_r531587159", "bodyText": "i'd place getTerminal, and createTerminal at the top, close to the singleton declaration", "author": "findepi", "createdAt": "2020-11-27T12:57:21Z", "path": "presto-cli/src/main/java/io/prestosql/cli/TerminalUtils.java", "diffHunk": "@@ -14,30 +14,53 @@\n package io.prestosql.cli;\n \n import org.jline.terminal.Terminal;\n+import org.jline.terminal.TerminalBuilder;\n \n import java.io.IOException;\n-\n-import static org.jline.terminal.TerminalBuilder.terminal;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.Charset;\n \n public class TerminalUtils\n {\n-    private static final boolean REAL_TERMINAL = detectRealTerminal();\n+    private static final Terminal TERMINAL_INSTANCE = createTerminal();\n \n     private TerminalUtils() {}\n \n+    public static boolean isRealTerminal(Terminal terminal)\n+    {\n+        return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n+                !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+    }\n+\n     public static boolean isRealTerminal()\n     {\n-        return REAL_TERMINAL;\n+        return isRealTerminal(getTerminal());\n+    }\n+\n+    public static int terminalWidth()\n+    {\n+        return getTerminal().getWidth();\n     }\n \n-    private static boolean detectRealTerminal()\n+    public static Charset terminalEncoding()\n     {\n-        try (Terminal terminal = terminal()) {\n-            return !Terminal.TYPE_DUMB.equals(terminal.getType()) &&\n-                    !Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        return getTerminal().encoding();\n+    }\n+\n+    public static Terminal createTerminal()\n+    {\n+        try {\n+            return TerminalBuilder.builder()\n+                    .name(\"Presto\")\n+                    .build();\n         }\n         catch (IOException e) {\n-            return false;\n+            throw new UncheckedIOException(e);\n         }\n     }\n+\n+    public static Terminal getTerminal()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9f6ec1a60e20cec408559d3d772405711fe7174c", "url": "https://github.com/trinodb/trino/commit/9f6ec1a60e20cec408559d3d772405711fe7174c", "message": "Fix terminal width detection in CLI\n\nSince JLine 3.14.0 only one system Terminal can exist at once.\nWhen trying to create another system Terminal instance, a dumb terminal will be created instead\nthat reports its width as zero. To avoid that, we create a Terminal instance only once.\n\nThis behavior was introduced in https://github.com/jline/jline3/commit/c3317", "committedDate": "2020-11-27T13:48:56Z", "type": "commit"}, {"oid": "9f6ec1a60e20cec408559d3d772405711fe7174c", "url": "https://github.com/trinodb/trino/commit/9f6ec1a60e20cec408559d3d772405711fe7174c", "message": "Fix terminal width detection in CLI\n\nSince JLine 3.14.0 only one system Terminal can exist at once.\nWhen trying to create another system Terminal instance, a dumb terminal will be created instead\nthat reports its width as zero. To avoid that, we create a Terminal instance only once.\n\nThis behavior was introduced in https://github.com/jline/jline3/commit/c3317", "committedDate": "2020-11-27T13:48:56Z", "type": "forcePushed"}]}