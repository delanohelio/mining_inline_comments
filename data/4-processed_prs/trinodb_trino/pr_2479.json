{"pr_number": 2479, "pr_title": "Inject class loader safe classes with guice in Kafka", "pr_createdAt": "2020-01-12T19:29:50Z", "pr_url": "https://github.com/trinodb/trino/pull/2479", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYxNDI5OA==", "url": "https://github.com/trinodb/trino/pull/2479#discussion_r365614298", "bodyText": "The canonical way is\nbinder.bind(ConnectorSplitManager.class).annotatedWith(ForClassLoaderSafe.class).to(KafkaSplitManager.class).in(Scopes.SINGLETON);", "author": "electrum", "createdAt": "2020-01-12T22:00:13Z", "path": "presto-kafka/src/main/java/io/prestosql/plugin/kafka/KafkaConnectorModule.java", "diffHunk": "@@ -36,9 +43,12 @@\n     @Override\n     public void configure(Binder binder)\n     {\n-        binder.bind(KafkaMetadata.class).in(Scopes.SINGLETON);\n-        binder.bind(KafkaSplitManager.class).in(Scopes.SINGLETON);\n-        binder.bind(KafkaRecordSetProvider.class).in(Scopes.SINGLETON);\n+        binder.bind(ConnectorMetadata.class).to(KafkaMetadata.class).in(Scopes.SINGLETON);\n+        binder.bind(Key.get(ConnectorSplitManager.class, ForClassLoaderSafe.class)).to(KafkaSplitManager.class).in(Scopes.SINGLETON);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5ODI5MQ==", "url": "https://github.com/trinodb/trino/pull/2479#discussion_r365698291", "bodyText": "The canonical way is\n\nI didn't know. Let me help memoize this :) #2483", "author": "findepi", "createdAt": "2020-01-13T09:11:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYxNDI5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkzODgzOA==", "url": "https://github.com/trinodb/trino/pull/2479#discussion_r365938838", "bodyText": "\"canonical\" refers to the usage of Key.get vs annotatedWith, but we've historically formatted them across multiple lines when they get that long (I think it's more readable that way, too).", "author": "martint", "createdAt": "2020-01-13T17:46:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYxNDI5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYxNDY3MQ==", "url": "https://github.com/trinodb/trino/pull/2479#discussion_r365614671", "bodyText": "I'm thinking we should drop the For here. I can sort of see why we started it, but I'm not sure it provides any value here. @martint thoughts?", "author": "electrum", "createdAt": "2020-01-12T22:06:35Z", "path": "presto-spi/src/main/java/io/prestosql/spi/connector/classloader/ForClassLoaderSafe.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.prestosql.spi.connector.classloader;\n+\n+import javax.inject.Qualifier;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import static java.lang.annotation.ElementType.FIELD;\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.ElementType.PARAMETER;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+@Retention(RUNTIME)\n+@Target({FIELD, PARAMETER, METHOD})\n+@Qualifier\n+public @interface ForClassLoaderSafe", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxNDg5Mg==", "url": "https://github.com/trinodb/trino/pull/2479#discussion_r365714892", "bodyText": "I like For. It clearly says that is dedicated for guice. Also it mention that given component is going to be used by something. Without For it would say that given component has such \"property\".\nbinder.bind(ConnectorSplitManager.class)\n    .annotatedWith(ForClassLoaderSafe.class)\n    .to(KafkaSplitManager.class)\n    .in(Scopes.SINGLETON);\n\nvs\nbinder.bind(ConnectorSplitManager.class)\n    .annotatedWith(ClassLoaderSafe.class)\n    .to(KafkaSplitManager.class)\n    .in(Scopes.SINGLETON);\n\nFirst example clearly states that KafkaSplitManager will be consumed by ForClassLoaderSafe component. While the second example misleads saying that KafkaSplitManager is  ClassLoaderSafe.", "author": "kokosing", "createdAt": "2020-01-13T09:50:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYxNDY3MQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "abef34e538b242883fb765ed9cbf0a4026328f89", "url": "https://github.com/trinodb/trino/commit/abef34e538b242883fb765ed9cbf0a4026328f89", "message": "Move ClassLoaderSafe* clases to presto-plugin-toolkit", "committedDate": "2020-01-21T18:09:29Z", "type": "commit"}, {"oid": "7580fc078fc18dd640d559a22f1ed65a34700a09", "url": "https://github.com/trinodb/trino/commit/7580fc078fc18dd640d559a22f1ed65a34700a09", "message": "Add ForClassLoaderSafe annotation", "committedDate": "2020-01-21T18:09:30Z", "type": "commit"}, {"oid": "82ef74ff17b4b78d1a25e17f2659cd9508c960ac", "url": "https://github.com/trinodb/trino/commit/82ef74ff17b4b78d1a25e17f2659cd9508c960ac", "message": "Inject class loader safe classes with guice in Kafka", "committedDate": "2020-01-21T18:09:31Z", "type": "commit"}, {"oid": "82ef74ff17b4b78d1a25e17f2659cd9508c960ac", "url": "https://github.com/trinodb/trino/commit/82ef74ff17b4b78d1a25e17f2659cd9508c960ac", "message": "Inject class loader safe classes with guice in Kafka", "committedDate": "2020-01-21T18:09:31Z", "type": "forcePushed"}]}