{"pr_number": 4931, "pr_title": "Allow to use cluster default role in hive S3 Security Mapping", "pr_createdAt": "2020-08-21T20:58:28Z", "pr_url": "https://github.com/trinodb/trino/pull/4931", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNjY2NA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475416664", "bodyText": "no need to extract this function", "author": "kokosing", "createdAt": "2020-08-24T08:12:39Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/s3/S3SecurityMappingConfigurationProvider.java", "diffHunk": "@@ -90,7 +90,12 @@ public void updateConfiguration(Configuration configuration, HdfsContext context\n \n         S3SecurityMapping mapping = mappings.get().getMapping(context.getIdentity(), uri)\n                 .orElseThrow(() -> new AccessDeniedException(\"No matching S3 security mapping\"));\n+        if (mapping.isUseClusterDefault()) return;\n+        updateConfiguration(configuration, context, mapping);\n+    }\n \n+    private void updateConfiguration(Configuration configuration, HdfsContext context, S3SecurityMapping mapping)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ1MTgwMA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475451800", "bodyText": "In my opinion such extraction helps to separate logic related to\n\nselecting appropriate mapping\nupdating mapping configuration itself\n\nDuring reading the code in case if one is not interested in digging into second option could just skip it.\n@kokosing what do you think?", "author": "ssheikin", "createdAt": "2020-08-24T09:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNjY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMzkyNA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475523924", "bodyText": "This refactor is not related to the actual change and I am not sure its value in general. Let's keep it as it was.", "author": "kokosing", "createdAt": "2020-08-24T11:08:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNjY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5NTIzNA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475595234", "bodyText": "Ok.", "author": "ssheikin", "createdAt": "2020-08-24T13:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNjY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNzAwNg==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475417006", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (mapping.isUseClusterDefault()) return;\n          \n          \n            \n                    if (mapping.isUseClusterDefault()) {\n          \n          \n            \n                         return;\n          \n          \n            \n                     }\n          \n      \n    \n    \n  \n\nPlease always use curly brackets.", "author": "kokosing", "createdAt": "2020-08-24T08:13:18Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/s3/S3SecurityMappingConfigurationProvider.java", "diffHunk": "@@ -90,7 +90,12 @@ public void updateConfiguration(Configuration configuration, HdfsContext context\n \n         S3SecurityMapping mapping = mappings.get().getMapping(context.getIdentity(), uri)\n                 .orElseThrow(() -> new AccessDeniedException(\"No matching S3 security mapping\"));\n+        if (mapping.isUseClusterDefault()) return;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNzc3NA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475417774", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void mappingWithoutRoleCredentialsFallbackShouldFail()\n          \n          \n            \n                public void testMappingWithoutRoleCredentialsFallbackShouldFail()", "author": "kokosing", "createdAt": "2020-08-24T08:14:48Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/s3/TestS3SecurityMapping.java", "diffHunk": "@@ -195,6 +196,69 @@ public void testMapping()\n                 role(\"danny_hq_role\"));\n     }\n \n+    @Test\n+    public void testMappingWithFallbackToClusterDefault()\n+    {\n+        S3SecurityMappingConfig mappingConfig = new S3SecurityMappingConfig()\n+                .setConfigFile(new File(getResource(getClass(), \"security-mapping-with-fallback-to-cluster-default.json\").getPath()));\n+\n+        DynamicConfigurationProvider provider = new S3SecurityMappingConfigurationProvider(mappingConfig);\n+\n+        // matches prefix - returns role from the mapping\n+        assertMapping(\n+                provider,\n+                path(\"s3://bar/abc/data/test.csv\"),\n+                role(\"arn:aws:iam::123456789101:role/allow_path\"));\n+\n+        // doesn't match any rule except default rule at the end\n+        assertMapping(\n+                provider,\n+                empty(),\n+                clusterDefaultRole());\n+    }\n+\n+    @Test\n+    public void testMappingWithoutFallback()\n+    {\n+        S3SecurityMappingConfig mappingConfig = new S3SecurityMappingConfig()\n+                .setConfigFile(new File(getResource(getClass(), \"security-mapping-without-fallback.json\").getPath()));\n+\n+        DynamicConfigurationProvider provider = new S3SecurityMappingConfigurationProvider(mappingConfig);\n+\n+        // matches prefix - returns role from the mapping\n+        assertMapping(\n+                provider,\n+                path(\"s3://bar/abc/data/test.csv\"),\n+                role(\"arn:aws:iam::123456789101:role/allow_path\"));\n+\n+        // doesn't match any rule\n+        assertMappingFails(\n+                provider,\n+                empty(),\n+                \"No matching S3 security mapping\");\n+    }\n+\n+    @Test\n+    public void mappingWithoutRoleCredentialsFallbackShouldFail()", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ0NzEwNg==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475447106", "bodyText": "Do I have to stick to convention that each test method annotated with @test should have prefix 'test'?", "author": "ssheikin", "createdAt": "2020-08-24T09:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNzc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMzY1Mw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475523653", "bodyText": "Yes, please", "author": "kokosing", "createdAt": "2020-08-24T11:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNzc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5NDk1Mg==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475594952", "bodyText": "done", "author": "ssheikin", "createdAt": "2020-08-24T13:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNzc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNzg5NQ==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475417895", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void mappingWithRoleAndFallbackShouldFail()\n          \n          \n            \n                public void testMappingWithRoleAndFallbackShouldFail()", "author": "kokosing", "createdAt": "2020-08-24T08:14:57Z", "path": "presto-hive/src/test/java/io/prestosql/plugin/hive/s3/TestS3SecurityMapping.java", "diffHunk": "@@ -195,6 +196,69 @@ public void testMapping()\n                 role(\"danny_hq_role\"));\n     }\n \n+    @Test\n+    public void testMappingWithFallbackToClusterDefault()\n+    {\n+        S3SecurityMappingConfig mappingConfig = new S3SecurityMappingConfig()\n+                .setConfigFile(new File(getResource(getClass(), \"security-mapping-with-fallback-to-cluster-default.json\").getPath()));\n+\n+        DynamicConfigurationProvider provider = new S3SecurityMappingConfigurationProvider(mappingConfig);\n+\n+        // matches prefix - returns role from the mapping\n+        assertMapping(\n+                provider,\n+                path(\"s3://bar/abc/data/test.csv\"),\n+                role(\"arn:aws:iam::123456789101:role/allow_path\"));\n+\n+        // doesn't match any rule except default rule at the end\n+        assertMapping(\n+                provider,\n+                empty(),\n+                clusterDefaultRole());\n+    }\n+\n+    @Test\n+    public void testMappingWithoutFallback()\n+    {\n+        S3SecurityMappingConfig mappingConfig = new S3SecurityMappingConfig()\n+                .setConfigFile(new File(getResource(getClass(), \"security-mapping-without-fallback.json\").getPath()));\n+\n+        DynamicConfigurationProvider provider = new S3SecurityMappingConfigurationProvider(mappingConfig);\n+\n+        // matches prefix - returns role from the mapping\n+        assertMapping(\n+                provider,\n+                path(\"s3://bar/abc/data/test.csv\"),\n+                role(\"arn:aws:iam::123456789101:role/allow_path\"));\n+\n+        // doesn't match any rule\n+        assertMappingFails(\n+                provider,\n+                empty(),\n+                \"No matching S3 security mapping\");\n+    }\n+\n+    @Test\n+    public void mappingWithoutRoleCredentialsFallbackShouldFail()\n+    {\n+        assertThatThrownBy(() ->\n+                new S3SecurityMapping(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty()))\n+                .isInstanceOf(IllegalArgumentException.class)\n+                .hasMessage(\"must either allow useClusterDefault role or provide role and/or credentials\");\n+    }\n+\n+    @Test\n+    public void mappingWithRoleAndFallbackShouldFail()", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5NTA0Mw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r475595043", "bodyText": "done", "author": "ssheikin", "createdAt": "2020-08-24T13:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQxNzg5NQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3Mjg3Nw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r476372877", "bodyText": "this checkArgument seems to be covered by the below, and so could be removed", "author": "kokosing", "createdAt": "2020-08-25T11:24:15Z", "path": "presto-hive/src/main/java/io/prestosql/plugin/hive/s3/S3SecurityMapping.java", "diffHunk": "@@ -71,7 +73,11 @@ public S3SecurityMapping(\n         checkArgument(accessKey.isPresent() == secretKey.isPresent(), \"accessKey and secretKey must be provided together\");\n         this.credentials = accessKey.map(access -> new BasicAWSCredentials(access, secretKey.get()));\n \n-        checkArgument(!this.allowedIamRoles.isEmpty() || iamRole.isPresent() || credentials.isPresent(), \"must provide role and/or credentials\");\n+        this.useClusterDefault = requireNonNull(useClusterDefault, \"useClusterDefault is null\")\n+                .orElse(false);\n+        boolean roleOrCredentialsArePresent = !this.allowedIamRoles.isEmpty() || iamRole.isPresent() || credentials.isPresent();\n+        checkArgument(this.useClusterDefault || roleOrCredentialsArePresent, \"must either allow useClusterDefault role or provide role and/or credentials\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5NDc3Nw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r478494777", "bodyText": "You are right. Below condition with message from this one would be grammatically correct in english.", "author": "ssheikin", "createdAt": "2020-08-27T15:12:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3Mjg3Nw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk5Nzc5OA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r479997798", "bodyText": "This is not true, default configuration could contain a dedicated role or credentials or it could contain useClusterDefault.\nPlease all mention when is going to happen where is no default configuration.", "author": "kokosing", "createdAt": "2020-08-31T09:09:05Z", "path": "presto-docs/src/main/sphinx/connector/hive-s3.rst", "diffHunk": "@@ -158,6 +158,9 @@ For example, the mapping list might have URL prefix ``s3://abc/xyz/`` followed b\n ``s3://abc/`` to allow different configuration for a specific path within a bucket\n than for other paths within the bucket. You can set default configuration by not\n including any match criteria for the last entry in the list.\n+The default configuration could contain only one property", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0MDU0OQ==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r480040549", "bodyText": "changed", "author": "ssheikin", "createdAt": "2020-08-31T10:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk5Nzc5OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NjQyMA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r480476420", "bodyText": "Start a new paragraph for this, so add empty line above. Also\nIn addition to the rules above, the default mapping can contain the ``userClusterDefault`` property set to ``true``. This causes the the default cluster role to be used as a fallback option. It can not be used with the  following configuration properties:\n\n- ``accessKey``\n...", "author": "mosabua", "createdAt": "2020-08-31T23:45:11Z", "path": "presto-docs/src/main/sphinx/connector/hive-s3.rst", "diffHunk": "@@ -158,6 +158,15 @@ For example, the mapping list might have URL prefix ``s3://abc/xyz/`` followed b\n ``s3://abc/`` to allow different configuration for a specific path within a bucket\n than for other paths within the bucket. You can set default configuration by not\n including any match criteria for the last entry in the list.\n+In addition to rules above the default mapping could contain", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE4MzQ0MQ==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r481183441", "bodyText": "done.", "author": "ssheikin", "createdAt": "2020-09-01T14:32:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NjQyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3Njc5Nw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r480476797", "bodyText": "If no mapping entry matches and no default is configured, an error AccessDeniedException: Access Denied: No matching S3 security mapping occurs.", "author": "mosabua", "createdAt": "2020-08-31T23:46:30Z", "path": "presto-docs/src/main/sphinx/connector/hive-s3.rst", "diffHunk": "@@ -158,6 +158,15 @@ For example, the mapping list might have URL prefix ``s3://abc/xyz/`` followed b\n ``s3://abc/`` to allow different configuration for a specific path within a bucket\n than for other paths within the bucket. You can set default configuration by not\n including any match criteria for the last entry in the list.\n+In addition to rules above the default mapping could contain\n+``\"useClusterDefault\": \"true\"`` configuration property\n+to use the default cluster role as a fallback option.\n+``useClusterDefault`` could not be used together with other configuration properties\n+(``accessKey``, ``secretKey``, ``iamRole``, ``allowedIamRoles``).\n+In case there is no any mapping entry that fits requirements and no default", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE4MzIzMw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r481183233", "bodyText": "done", "author": "ssheikin", "createdAt": "2020-09-01T14:32:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3Njc5Nw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzOTIzOA==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r481239238", "bodyText": "It can be set to false as well. Did you mean 'property when set to'?", "author": "kokosing", "createdAt": "2020-09-01T15:40:16Z", "path": "presto-docs/src/main/sphinx/connector/hive-s3.rst", "diffHunk": "@@ -159,6 +159,19 @@ For example, the mapping list might have URL prefix ``s3://abc/xyz/`` followed b\n than for other paths within the bucket. You can set default configuration by not\n including any match criteria for the last entry in the list.\n \n+In addition to the rules above, the default mapping can contain the\n+``userClusterDefault`` property set to ``true``. This causes the the default", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxMTkyNw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r481811927", "bodyText": "I've extended the description.", "author": "ssheikin", "createdAt": "2020-09-02T07:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzOTIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzOTk4OQ==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r481239989", "bodyText": "I don't think we should document exact error message. It can easily make docs obsolete.", "author": "kokosing", "createdAt": "2020-09-01T15:41:25Z", "path": "presto-docs/src/main/sphinx/connector/hive-s3.rst", "diffHunk": "@@ -159,6 +159,19 @@ For example, the mapping list might have URL prefix ``s3://abc/xyz/`` followed b\n than for other paths within the bucket. You can set default configuration by not\n including any match criteria for the last entry in the list.\n \n+In addition to the rules above, the default mapping can contain the\n+``userClusterDefault`` property set to ``true``. This causes the the default\n+cluster role to be used as a fallback option. It can not be used with the\n+following configuration properties:\n+\n+- ``accessKey``\n+- ``secretKey``\n+- ``iamRole``\n+- ``allowedIamRoles``\n+\n+If no mapping entry matches and no default is configured, an error\n+``AccessDeniedException: Access Denied: No matching S3 security mapping`` occurs.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxMjE1Mw==", "url": "https://github.com/trinodb/trino/pull/4931#discussion_r481812153", "bodyText": "done.", "author": "ssheikin", "createdAt": "2020-09-02T07:05:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzOTk4OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "2b2507c4cb9a0bfb8196b50c276c1359254d2034", "url": "https://github.com/trinodb/trino/commit/2b2507c4cb9a0bfb8196b50c276c1359254d2034", "message": "Allow to use cluster default role in hive S3 Security Mapping", "committedDate": "2020-09-02T07:11:05Z", "type": "commit"}, {"oid": "2b2507c4cb9a0bfb8196b50c276c1359254d2034", "url": "https://github.com/trinodb/trino/commit/2b2507c4cb9a0bfb8196b50c276c1359254d2034", "message": "Allow to use cluster default role in hive S3 Security Mapping", "committedDate": "2020-09-02T07:11:05Z", "type": "forcePushed"}]}