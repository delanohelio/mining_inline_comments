{"pr_number": 3676, "pr_title": "Clean up planning of set operations", "pr_createdAt": "2020-05-09T00:33:16Z", "pr_url": "https://github.com/trinodb/trino/pull/3676", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMzg2Nw==", "url": "https://github.com/trinodb/trino/pull/3676#discussion_r452813867", "bodyText": "should you use: io.prestosql.sql.analyzer.Analysis#getTypeOnlyCoercions here?", "author": "sopel39", "createdAt": "2020-07-10T12:32:56Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/QueryPlanner.java", "diffHunk": "@@ -797,6 +797,38 @@ public static Expression coerceIfNecessary(Analysis analysis, Expression origina\n                 analysis.isTypeOnlyCoercion(original));\n     }\n \n+    public static NodeAndMappings coerce(PlanNode node, List<Symbol> fields, List<Type> types, SymbolAllocator symbolAllocator, PlanNodeIdAllocator idAllocator)\n+    {\n+        Assignments.Builder assignments = Assignments.builder();\n+\n+        ImmutableList.Builder<Symbol> mappings = ImmutableList.builder();\n+        for (int i = 0; i < types.size(); i++) {\n+            Symbol input = fields.get(i);\n+            Type type = types.get(i);\n+\n+            if (!symbolAllocator.getTypes().get(input).equals(type)) {\n+                Symbol coerced = symbolAllocator.newSymbol(input.getName(), type);\n+                assignments.put(coerced, new Cast(input.toSymbolReference(), toSqlType(type)));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExMzY2Nw==", "url": "https://github.com/trinodb/trino/pull/3676#discussion_r453113667", "bodyText": "Type-only coercions don't do anything anymore. They are only used to short-circuit the invocation of the cast in the generated bytecode, but since type-only coercions are just identity methods, that doesn't provide any value -- the JIT will inline the method and remove the call.", "author": "martint", "createdAt": "2020-07-10T23:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMzg2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxNTEzMQ==", "url": "https://github.com/trinodb/trino/pull/3676#discussion_r452815131", "bodyText": "check argument that types.size() == fields.size()", "author": "sopel39", "createdAt": "2020-07-10T12:35:32Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/QueryPlanner.java", "diffHunk": "@@ -797,6 +797,38 @@ public static Expression coerceIfNecessary(Analysis analysis, Expression origina\n                 analysis.isTypeOnlyCoercion(original));\n     }\n \n+    public static NodeAndMappings coerce(PlanNode node, List<Symbol> fields, List<Type> types, SymbolAllocator symbolAllocator, PlanNodeIdAllocator idAllocator)\n+    {\n+        Assignments.Builder assignments = Assignments.builder();\n+\n+        ImmutableList.Builder<Symbol> mappings = ImmutableList.builder();\n+        for (int i = 0; i < types.size(); i++) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyMDUxNw==", "url": "https://github.com/trinodb/trino/pull/3676#discussion_r452820517", "bodyText": "preserve processAndCoerceIfNecessary name. It was more accurate.", "author": "sopel39", "createdAt": "2020-07-10T12:46:38Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/QueryPlanner.java", "diffHunk": "@@ -797,6 +797,38 @@ public static Expression coerceIfNecessary(Analysis analysis, Expression origina\n                 analysis.isTypeOnlyCoercion(original));\n     }\n \n+    public static NodeAndMappings coerce(PlanNode node, List<Symbol> fields, List<Type> types, SymbolAllocator symbolAllocator, PlanNodeIdAllocator idAllocator)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExMjU3NA==", "url": "https://github.com/trinodb/trino/pull/3676#discussion_r453112574", "bodyText": "\"process\" is not accurate. This just adds coercions (or identity projections if coercions are not needed). I'll rename to coerceIfNecessary", "author": "martint", "createdAt": "2020-07-10T22:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyMDUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExNTA4MQ==", "url": "https://github.com/trinodb/trino/pull/3676#discussion_r453115081", "bodyText": "Actually, no, I won't do that. The reason I went with this name is that there's already another method called coerceIfNecessary in RelationPlanner that conflicts with this one and requires qualifying the invocation with the class name", "author": "martint", "createdAt": "2020-07-10T23:08:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyMDUxNw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "865589b12a774d3acc63400c2510c4e9e323d601", "url": "https://github.com/trinodb/trino/commit/865589b12a774d3acc63400c2510c4e9e323d601", "message": "Fix formatting", "committedDate": "2020-07-11T01:11:19Z", "type": "commit"}, {"oid": "3c92ab1566a2d1d1c84f95eb3bd6649a6ba7658c", "url": "https://github.com/trinodb/trino/commit/3c92ab1566a2d1d1c84f95eb3bd6649a6ba7658c", "message": "Use List instead of array", "committedDate": "2020-07-11T01:11:19Z", "type": "commit"}, {"oid": "f96475f2274e3de3d7c99c062ae3ccbccfb7a3f6", "url": "https://github.com/trinodb/trino/commit/f96475f2274e3de3d7c99c062ae3ccbccfb7a3f6", "message": "Clean up set operation planning", "committedDate": "2020-07-11T01:11:19Z", "type": "commit"}, {"oid": "f96475f2274e3de3d7c99c062ae3ccbccfb7a3f6", "url": "https://github.com/trinodb/trino/commit/f96475f2274e3de3d7c99c062ae3ccbccfb7a3f6", "message": "Clean up set operation planning", "committedDate": "2020-07-11T01:11:19Z", "type": "forcePushed"}]}