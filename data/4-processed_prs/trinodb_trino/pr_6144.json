{"pr_number": 6144, "pr_title": "Supplement type mappings in JDBC connectors", "pr_createdAt": "2020-11-29T19:19:33Z", "pr_url": "https://github.com/trinodb/trino/pull/6144", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "c1dc1418cffed2cc083fd5618f527111fdab135d", "url": "https://github.com/trinodb/trino/commit/c1dc1418cffed2cc083fd5618f527111fdab135d", "message": "Replace IFs with a SWITCH", "committedDate": "2020-11-29T21:48:19Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMzA1NA==", "url": "https://github.com/trinodb/trino/pull/6144#discussion_r532833054", "bodyText": "issue?", "author": "losipiuk", "createdAt": "2020-11-30T19:08:28Z", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -274,15 +309,56 @@ protected String getTableSchemaName(ResultSet resultSet)\n     @Override\n     public Optional<ColumnMapping> toPrestoType(ConnectorSession session, Connection connection, JdbcTypeHandle typeHandle)\n     {\n+        int columnSize = typeHandle.getColumnSize();\n         switch (typeHandle.getJdbcType()) {\n+            case Types.BOOLEAN:\n+                return Optional.of(booleanColumnMapping());\n+\n+            case Types.TINYINT:\n+                return Optional.of(tinyintColumnMapping());\n+\n+            case Types.SMALLINT:\n+                return Optional.of(smallintColumnMapping());\n+\n+            case Types.INTEGER:\n+                return Optional.of(integerColumnMapping());\n+\n+            case Types.BIGINT:\n+                return Optional.of(bigintColumnMapping());\n+\n+            case Types.FLOAT:\n+                return Optional.of(realColumnMapping());\n+\n+            case Types.DOUBLE:\n+                return Optional.of(doubleColumnMapping());\n+\n+            case Types.DECIMAL:\n+                int decimalDigits = typeHandle.getDecimalDigits().orElseThrow(() -> new IllegalStateException(\"decimal digits not present\"));\n+                // TODO does phoenix support negative scale?", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkwNTA5Nw==", "url": "https://github.com/trinodb/trino/pull/6144#discussion_r532905097", "bodyText": "i don't think it would help act on TODO, unless someone works on this connector explicitly. and then TODO should be fine.", "author": "findepi", "createdAt": "2020-11-30T21:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMzA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMzEyMA==", "url": "https://github.com/trinodb/trino/pull/6144#discussion_r532833120", "bodyText": "issue?", "author": "losipiuk", "createdAt": "2020-11-30T19:08:36Z", "path": "presto-phoenix/src/main/java/io/prestosql/plugin/phoenix/PhoenixClient.java", "diffHunk": "@@ -314,12 +389,60 @@ protected String getTableSchemaName(ResultSet resultSet)\n     @Override\n     public WriteMapping toWriteMapping(ConnectorSession session, Type type)\n     {\n-        if (DOUBLE.equals(type)) {\n-            return WriteMapping.doubleMapping(\"double\", doubleWriteFunction());\n+        if (type == BOOLEAN) {\n+            return WriteMapping.booleanMapping(\"boolean\", booleanWriteFunction());\n         }\n-        if (REAL.equals(type)) {\n+\n+        if (type == TINYINT) {\n+            return WriteMapping.longMapping(\"tinyint\", tinyintWriteFunction());\n+        }\n+        if (type == SMALLINT) {\n+            return WriteMapping.longMapping(\"smallint\", smallintWriteFunction());\n+        }\n+        if (type == INTEGER) {\n+            return WriteMapping.longMapping(\"integer\", integerWriteFunction());\n+        }\n+        if (type == BIGINT) {\n+            return WriteMapping.longMapping(\"bigint\", bigintWriteFunction());\n+        }\n+        if (type == REAL) {\n             return WriteMapping.longMapping(\"float\", realWriteFunction());\n         }\n+        if (type == DOUBLE) {\n+            return WriteMapping.doubleMapping(\"double\", doubleWriteFunction());\n+        }\n+\n+        if (type instanceof DecimalType) {\n+            DecimalType decimalType = (DecimalType) type;\n+            String dataType = format(\"decimal(%s, %s)\", decimalType.getPrecision(), decimalType.getScale());\n+            if (decimalType.isShort()) {\n+                return WriteMapping.longMapping(dataType, shortDecimalWriteFunction(decimalType));\n+            }\n+            return WriteMapping.sliceMapping(dataType, longDecimalWriteFunction(decimalType));\n+        }\n+\n+        if (type instanceof CharType) {\n+            return WriteMapping.sliceMapping(\"char(\" + ((CharType) type).getLength() + \")\", charWriteFunction());\n+        }\n+        if (type instanceof VarcharType) {\n+            VarcharType varcharType = (VarcharType) type;\n+            String dataType;\n+            if (varcharType.isUnbounded()) {\n+                // TODO does Phoenix support unparameterized varchar?", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkwMzU5OA==", "url": "https://github.com/trinodb/trino/pull/6144#discussion_r532903598", "bodyText": "i need to remove this TODO, per #6121 (comment)", "author": "findepi", "createdAt": "2020-11-30T21:06:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMzEyMA=="}], "type": "inlineReview"}, {"oid": "da4a71793e08b9039f0a34f8ea9a63073527f3cb", "url": "https://github.com/trinodb/trino/commit/da4a71793e08b9039f0a34f8ea9a63073527f3cb", "message": "Supplement type mappings in JDBC connectors", "committedDate": "2020-11-30T21:11:40Z", "type": "commit"}, {"oid": "da4a71793e08b9039f0a34f8ea9a63073527f3cb", "url": "https://github.com/trinodb/trino/commit/da4a71793e08b9039f0a34f8ea9a63073527f3cb", "message": "Supplement type mappings in JDBC connectors", "committedDate": "2020-11-30T21:11:40Z", "type": "forcePushed"}]}