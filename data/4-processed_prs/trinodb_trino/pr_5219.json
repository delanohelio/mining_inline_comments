{"pr_number": 5219, "pr_title": "Hadoop and Presto containers health checks", "pr_createdAt": "2020-09-18T18:55:25Z", "pr_url": "https://github.com/trinodb/trino/pull/5219", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NDI2Nw==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491844267", "bodyText": "I don't like exception in non-exceptional flow of code. Can you just make container.isHealthy() return true when no healthcheck is defined. Or alternatively make isHealthy return Optional<Boolean> if you feel it is beneficial to know when we are in unknown state.", "author": "losipiuk", "createdAt": "2020-09-21T07:41:01Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -217,6 +224,32 @@ public void close()\n         stop();\n     }\n \n+    private boolean allContainersHealthy()\n+    {\n+        List<Container> containers = ImmutableList.copyOf(getContainers());\n+        return containers.stream().allMatch(Environment::containerIsHealthy);\n+    }\n+\n+    private static boolean containerIsHealthy(Container container)\n+    {\n+        try {\n+            if (!container.isHealthy()) {\n+                log.warn(\"Container %s is not healthy\", container.getContainerName());\n+                return false;\n+            }\n+        }\n+        catch (RuntimeException ignored) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NTM0NA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491845344", "bodyText": "This file is added by Interrupt tests on unhealthy environment commit but not used here.", "author": "losipiuk", "createdAt": "2020-09-21T07:43:03Z", "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/common/hadoop/supervisorctl-status.sh", "diffHunk": "@@ -0,0 +1,11 @@\n+#!/usr/bin/env bash", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2Mzk1OA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491863958", "bodyText": "Also it is removed in the next commit", "author": "losipiuk", "createdAt": "2020-09-21T08:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NTM0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NjE5Ng==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491846196", "bodyText": "rename container variable to testContainer.", "author": "losipiuk", "createdAt": "2020-09-21T07:44:46Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -170,7 +172,12 @@ public long awaitTestsCompletion()\n \n         try {\n             while (container.isRunning()) {\n-                Thread.sleep(1000);\n+                Thread.sleep(10000); // check every 10 seconds\n+\n+                if (!allContainersHealthy()) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1MzYwOA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491853608", "bodyText": "why not extend DockerContainer with this method?", "author": "losipiuk", "createdAt": "2020-09-21T07:58:48Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/docker/ContainerUtil.java", "diffHunk": "@@ -80,4 +86,22 @@ public static void exposePort(DockerContainer container, int port)\n         container.addExposedPort(port);\n         container.withFixedExposedPort(port, port);\n     }\n+\n+    public static DockerContainer withHealthChecks(DockerContainer container, DockerFiles dockerFiles)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1NDc0OQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491854749", "bodyText": "Then probably it should be parametrized with health-chack script name.", "author": "losipiuk", "createdAt": "2020-09-21T08:00:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1MzYwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1NTMxNg==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491855316", "bodyText": "changes here should be moved to previous commit.", "author": "losipiuk", "createdAt": "2020-09-21T08:02:09Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -167,24 +167,27 @@ public void awaitContainersStopped()\n \n     public long awaitTestsCompletion()\n     {\n-        Container<?> container = getContainer(TESTS);\n+        Container<?> testContainer = getContainer(TESTS);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1NTUwNw==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491855507", "bodyText": "this changes too", "author": "losipiuk", "createdAt": "2020-09-21T08:02:33Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/Environment.java", "diffHunk": "@@ -224,10 +227,9 @@ public void close()\n         stop();\n     }\n \n-    private boolean allContainersHealthy()\n+    private static boolean allContainersHealthy(Iterable<Container<?>> containers)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MTAzOQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491861039", "bodyText": "general comment: mix of refactorings and changes makes it harder to review.", "author": "losipiuk", "createdAt": "2020-09-21T08:13:35Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Hadoop.java", "diffHunk": "@@ -68,30 +88,20 @@ public void extendEnvironment(Environment.Builder builder)\n     }\n \n     @SuppressWarnings(\"resource\")\n-    private DockerContainer createHadoopMaster()\n+    public static DockerContainer createHadoopContainer(DockerFiles dockerFiles, String dockerImage, String logicalName)\n     {\n-        DockerContainer container = new DockerContainer(hadoopBaseImage + \":\" + hadoopImagesVersion, HADOOP)\n+        DockerContainer container = new DockerContainer(dockerImage, logicalName)\n                 // TODO HIVE_PROXY_PORT:1180\n-                .withCopyFileToContainer(forHostPath(dockerFiles.getDockerFilesHostPath()), \"/docker/presto-product-tests\")\n-                .withExposedLogPaths(\"/var/log/hadoop-yarn\", \"/var/log/hadoop-hdfs\", \"/var/log/hive\")\n+                .withCopyFileToContainer(forHostPath(dockerFiles.getDockerFilesHostPath()), CONTAINER_CONF_ROOT)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MjkwMQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491862901", "bodyText": "run some SQL to check if it actually works?", "author": "losipiuk", "createdAt": "2020-09-21T08:16:50Z", "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/health-checks/presto-health-check.sh", "diffHunk": "@@ -0,0 +1,10 @@\n+#!/usr/bin/env bash\n+set -euo pipefail\n+\n+if test $# -gt 0; then\n+    echo \"$0 does not accept arguments\" >&2\n+    exit 32\n+fi\n+\n+# Check if PrestoServer is listed as running Java process\n+jps | grep -q PrestoServer", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyMzYwNg==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491923606", "bodyText": "I don't think that it's possible in a generic way (Kerberos auth in Presto etc)", "author": "wendigo", "createdAt": "2020-09-21T10:00:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MjkwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MzEyNA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491863124", "bodyText": "what does it mean? comment?", "author": "losipiuk", "createdAt": "2020-09-21T08:17:19Z", "path": "presto-product-tests-launcher/src/main/resources/docker/presto-product-tests/health-checks/hadoop-health-check.sh", "diffHunk": "@@ -0,0 +1,21 @@\n+#!/usr/bin/env bash\n+set -euo pipefail\n+\n+if test $# -gt 0; then\n+    echo \"$0 does not accept arguments\" >&2\n+    exit 32\n+fi\n+\n+if ! test -f /tmp/supervisor.sock; then", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2OTk5Mg==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491869992", "bodyText": "Can you extend it to separate PR. Also maybe rename extendEnvironment to getEnvironmentExtender.", "author": "losipiuk", "createdAt": "2020-09-21T08:30:00Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/EnvironmentUp.java", "diffHunk": "@@ -145,7 +145,9 @@ public Integer call()\n                 builder.configureContainers(Standard::enablePrestoJavaDebugger);\n             }\n \n+            environmentConfig.extendEnvironment(this.environment).ifPresent(extender -> extender.extendEnvironment(builder));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3MDE2NQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r491870165", "bodyText": "nit: constant", "author": "losipiuk", "createdAt": "2020-09-21T08:30:21Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -269,7 +270,8 @@ private Environment getEnvironment()\n                                 .addAll(reportsDirOptions(reportsDirBase))\n                                 .build().toArray(new String[0]))\n                         // this message marks that environment has started and tests are running\n-                        .waitingFor(new LogMessageWaitStrategy().withRegEx(\".*\\\\[TestNG] Running.*\"));\n+                        .waitingFor(new LogMessageWaitStrategy().withRegEx(\".*\\\\[TestNG] Running.*\")\n+                                .withStartupTimeout(ofMinutes(15)));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA4OTc0OA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r492089748", "bodyText": "unrelated to Interrupt tests on unhealthy environment?", "author": "losipiuk", "createdAt": "2020-09-21T14:24:41Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/TestRun.java", "diffHunk": "@@ -200,6 +201,7 @@ private Integer tryExecuteTests()\n \n         private Environment startEnvironment()\n         {\n+            pruneEnvironment();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA5MTU4OA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r492091588", "bodyText": "merge with call chain above", "author": "losipiuk", "createdAt": "2020-09-21T14:27:00Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/Hadoop.java", "diffHunk": "@@ -68,30 +87,20 @@ public void extendEnvironment(Environment.Builder builder)\n     }\n \n     @SuppressWarnings(\"resource\")\n-    private DockerContainer createHadoopMaster()\n+    public static DockerContainer createHadoopContainer(DockerFiles dockerFiles, String dockerImage, String logicalName)\n     {\n-        DockerContainer container = new DockerContainer(hadoopBaseImage + \":\" + hadoopImagesVersion, HADOOP)\n+        DockerContainer container = new DockerContainer(dockerImage, logicalName)\n                 // TODO HIVE_PROXY_PORT:1180\n-                .withCopyFileToContainer(forHostPath(dockerFiles.getDockerFilesHostPath()), \"/docker/presto-product-tests\")\n-                .withExposedLogPaths(\"/var/log/hadoop-yarn\", \"/var/log/hadoop-hdfs\", \"/var/log/hive\")\n+                .withCopyFileToContainer(forHostPath(dockerFiles.getDockerFilesHostPath()), CONTAINER_CONF_ROOT)\n+                .withCopyFileToContainer(forHostPath(dockerFiles.getDockerFilesHostPath(\"health-checks/hadoop-health-check.sh\")), CONTAINER_HEALTH_D + \"hadoop-health-check.sh\")\n+                .withCopyFileToContainer(forHostPath(dockerFiles.getDockerFilesHostPath(\"common/hadoop/hadoop-run.sh\")), \"/usr/local/hadoop-run.sh\")\n+                .withCopyFileToContainer(forHostPath(dockerFiles.getDockerFilesHostPath(\"common/hadoop/apply-config-overrides.sh\")), CONTAINER_HADOOP_INIT_D + \"00-apply-config-overrides.sh\")\n+                .withCommand(\"/usr/local/hadoop-run.sh\")\n+                .withExposedLogPaths(\"/var/log/hadoop-yarn\", \"/var/log/hadoop-hdfs\", \"/var/log/hive\", \"/var/log/container-health.log\")\n                 .withStartupCheckStrategy(new IsRunningStartupCheckStrategy())\n                 .waitingFor(new SelectedPortWaitStrategy(10000)) // HiveServer2\n                 .withStartupTimeout(Duration.ofMinutes(5));\n \n-        portBinder.exposePort(container, 1180);  // socks proxy\n-        // TODO portBinder.exposePort(container, 5006); // debug port\n-        portBinder.exposePort(container, 8020);\n-        portBinder.exposePort(container, 8042);\n-        portBinder.exposePort(container, 8088);\n-        portBinder.exposePort(container, 9000);\n-        portBinder.exposePort(container, 9083); // Metastore Thrift\n-        portBinder.exposePort(container, 9864); // DataNode Web UI since Hadoop 3\n-        portBinder.exposePort(container, 9870); // NameNode Web UI since Hadoop 3\n-        portBinder.exposePort(container, 10000); // HiveServer2\n-        portBinder.exposePort(container, 19888);\n-        portBinder.exposePort(container, 50070); // NameNode Web UI prior to Hadoop 3\n-        portBinder.exposePort(container, 50075); // DataNode Web UI prior to Hadoop 3\n-\n-        return container;\n+        return container.withHealthCheck(dockerFiles.getDockerFilesHostPath(\"health-checks/health.sh\"));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3ODA3Ng==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493478076", "bodyText": "this name is misleading to me. Why not extendEnvironment?", "author": "losipiuk", "createdAt": "2020-09-23T11:30:16Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentConfig.java", "diffHunk": "@@ -46,8 +45,13 @@ default String getConfigName()\n         return nameForConfigClass(getClass());\n     }\n \n-    default Optional<EnvironmentExtender> extendEnvironment(String environmentName)\n+    default EnvironmentExtender getEnvironmentExtender(String environmentName)\n     {\n-        return Optional.empty();\n+        return builder -> builder;\n+    }\n+\n+    default Environment.Builder applyToEnvironment(String environmentName, Environment.Builder builder)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUyODIxMg==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493528212", "bodyText": "\ud83d\udc4d\ud83c\udffb", "author": "wendigo", "createdAt": "2020-09-23T12:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3ODA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3ODE5NA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493478194", "bodyText": "Why do we need environmentName here?", "author": "losipiuk", "createdAt": "2020-09-23T11:30:28Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/EnvironmentConfig.java", "diffHunk": "@@ -46,8 +45,13 @@ default String getConfigName()\n         return nameForConfigClass(getClass());\n     }\n \n-    default Optional<EnvironmentExtender> extendEnvironment(String environmentName)\n+    default EnvironmentExtender getEnvironmentExtender(String environmentName)", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMzE2NQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493503165", "bodyText": "Because config applies to multiple environments and sometimes there is a need for config to configure only selected environment(s). EnvironmentExtender accepts Environment.Builder which does not expose environment name.", "author": "wendigo", "createdAt": "2020-09-23T11:58:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3ODE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3ODkwOQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493478909", "bodyText": "I would rather expect the method to take list of extenders and return an extender", "author": "losipiuk", "createdAt": "2020-09-23T11:31:36Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/common/EnvironmentExtender.java", "diffHunk": "@@ -15,7 +15,20 @@\n \n import io.prestosql.tests.product.launcher.env.Environment;\n \n+import java.util.List;\n+\n public interface EnvironmentExtender\n {\n-    void extendEnvironment(Environment.Builder builder);\n+    Environment.Builder extendEnvironment(Environment.Builder builder);\n+\n+    static Environment.Builder compose(Environment.Builder builder, List<EnvironmentExtender> extenders)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ4MjI3NA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493482274", "bodyText": "You are runnint tryStop as:\n        // Allow containers to take up to 5 minutes to stop\n        Timeout<Object> timeout = Timeout.of(ofMinutes(5))\n                .withCancel(true);\n\n        RetryPolicy retry = new RetryPolicy()\n                .withMaxAttempts(3);\n\n        FailsafeExecutor<Object> executor = Failsafe.with(timeout, retry);\nSo there is max retries == 3 and timout.\nWill the retries be made every timeout/maxretrycount seconds?", "author": "losipiuk", "createdAt": "2020-09-23T11:35:48Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -312,6 +313,8 @@ public void tryStop()\n         catch (Exception e) {\n             log.warn(\"Could not stop container correctly: %s\", getStackTraceAsString(e));\n         }\n+", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ4NDk4Nw==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493484987", "bodyText": "If above is the case we will almost always wait almost 2 minutes for containers to stop as threre is no significant time window between calling stop() in tryStop(), and checking if container actually stopped with isRunning()", "author": "losipiuk", "createdAt": "2020-09-23T11:38:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ4MjI3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5OTU3MQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493499571", "bodyText": "It is not obvious to me why we need cast here. Someone stupid. Either me or java compiler.", "author": "losipiuk", "createdAt": "2020-09-23T11:54:59Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/env/DockerContainer.java", "diffHunk": "@@ -252,7 +262,9 @@ private void copyFileFromContainer(String filename, Path rootHostPath)\n         try (DockerClient client = DockerClientFactory.lazyClient()) {\n             InvocationBuilder.AsyncResultCallback<Statistics> callback = new InvocationBuilder.AsyncResultCallback<>();\n             client.statsCmd(getContainerId()).exec(callback);\n-            return Optional.ofNullable(callback.awaitResult());\n+\n+            return Optional.ofNullable(executor.get(callback::awaitResult))\n+                    .map(Statistics.class::cast);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwNDI3Mg==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493504272", "bodyText": "executor is FailsafeExecutor (thus .get() returns Object", "author": "wendigo", "createdAt": "2020-09-23T12:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5OTU3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU1NjI4MQ==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493556281", "bodyText": "Not really:", "author": "losipiuk", "createdAt": "2020-09-23T12:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5OTU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5OTgyNw==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r493499827", "bodyText": "not reviewing this one", "author": "losipiuk", "createdAt": "2020-09-23T11:55:15Z", "path": "presto-product-tests-launcher/src/main/java/io/prestosql/tests/product/launcher/cli/DeadLockDetector.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "b8027d7cb862c3539aaf52ff3590e41e22c73045", "url": "https://github.com/trinodb/trino/commit/b8027d7cb862c3539aaf52ff3590e41e22c73045", "message": "Interrupt tests on unhealthy environment", "committedDate": "2020-09-25T09:43:41Z", "type": "commit"}, {"oid": "bef261c7ae9ee7d6afd0b67bca43217f307bc62d", "url": "https://github.com/trinodb/trino/commit/bef261c7ae9ee7d6afd0b67bca43217f307bc62d", "message": "Define health checks for presto and hadoop containers", "committedDate": "2020-09-25T09:43:41Z", "type": "commit"}, {"oid": "055db57b7e96215a43e532178bdf4bbecfcd5d5a", "url": "https://github.com/trinodb/trino/commit/055db57b7e96215a43e532178bdf4bbecfcd5d5a", "message": "Correct presto init script dir for HDP3", "committedDate": "2020-09-25T09:43:41Z", "type": "commit"}, {"oid": "067714779965c4fd098721e3c5b430ddfc26cda7", "url": "https://github.com/trinodb/trino/commit/067714779965c4fd098721e3c5b430ddfc26cda7", "message": "Fix applying environment config on env up command", "committedDate": "2020-09-25T09:43:42Z", "type": "commit"}, {"oid": "98c62de2d19764ae8413377b885917073b3a5812", "url": "https://github.com/trinodb/trino/commit/98c62de2d19764ae8413377b885917073b3a5812", "message": "Increase tests container startup timeout", "committedDate": "2020-09-25T09:43:42Z", "type": "commit"}, {"oid": "4d8aedeebfbafd7386bb152a30094fe12c9ed0b6", "url": "https://github.com/trinodb/trino/commit/4d8aedeebfbafd7386bb152a30094fe12c9ed0b6", "message": "Refactor EnvironmentExtender usage", "committedDate": "2020-09-25T09:43:42Z", "type": "commit"}, {"oid": "155da6fc1130004d85dee1c8fdc3891abf8ca5d7", "url": "https://github.com/trinodb/trino/commit/155da6fc1130004d85dee1c8fdc3891abf8ca5d7", "message": "Do not wait for containers shutdown on environment stop", "committedDate": "2020-09-25T09:43:42Z", "type": "commit"}, {"oid": "23e2a8b20aa82bd4a0e4e666a960148845c05dfa", "url": "https://github.com/trinodb/trino/commit/23e2a8b20aa82bd4a0e4e666a960148845c05dfa", "message": "Do not try to stop already stopped container", "committedDate": "2020-09-25T09:43:42Z", "type": "commit"}, {"oid": "de1b77612ab818ab774c5926f09898b17954bdd2", "url": "https://github.com/trinodb/trino/commit/de1b77612ab818ab774c5926f09898b17954bdd2", "message": "Check if container is running before checking its health", "committedDate": "2020-09-25T09:43:42Z", "type": "commit"}, {"oid": "7b4226cfe39a612b45591370042349c377127006", "url": "https://github.com/trinodb/trino/commit/7b4226cfe39a612b45591370042349c377127006", "message": "Do not execute operations on stopped container", "committedDate": "2020-09-25T09:43:43Z", "type": "commit"}, {"oid": "51fea77afdbae81005fa4bf5da1d05ad4e0d2e73", "url": "https://github.com/trinodb/trino/commit/51fea77afdbae81005fa4bf5da1d05ad4e0d2e73", "message": "Use DockerContainer instead of generic Container class", "committedDate": "2020-09-25T09:43:43Z", "type": "commit"}, {"oid": "fdaa8da5d84d55147998beec86d0ecd81ec8fe41", "url": "https://github.com/trinodb/trino/commit/fdaa8da5d84d55147998beec86d0ecd81ec8fe41", "message": "Wrap docker operations with failsafe executor", "committedDate": "2020-09-25T09:43:43Z", "type": "commit"}, {"oid": "b574777d836d9c513ea64221418795cfb4fd709e", "url": "https://github.com/trinodb/trino/commit/b574777d836d9c513ea64221418795cfb4fd709e", "message": "Display environment containers list on startup", "committedDate": "2020-09-25T09:43:43Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwOTIyNw==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r494909227", "bodyText": "Isn't that too much? How big are the log files?", "author": "losipiuk", "createdAt": "2020-09-25T10:55:00Z", "path": "presto-product-tests-launcher/config/launcher-logging.properties", "diffHunk": "@@ -0,0 +1,3 @@\n+org.testcontainers=DEBUG\n+com.github.dockerjava=DEBUG\n+io.prestosql=DEBUG", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkzNDYzOA==", "url": "https://github.com/trinodb/trino/pull/5219#discussion_r494934638", "bodyText": "I've dropped that commit", "author": "wendigo", "createdAt": "2020-09-25T11:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwOTIyNw=="}], "type": "inlineReview"}, {"oid": "da723d5392e1dc339fe26b555f50d5e744c153bb", "url": "https://github.com/trinodb/trino/commit/da723d5392e1dc339fe26b555f50d5e744c153bb", "message": "Allow to pass configuration to launcher process", "committedDate": "2020-09-25T11:49:37Z", "type": "commit"}, {"oid": "da723d5392e1dc339fe26b555f50d5e744c153bb", "url": "https://github.com/trinodb/trino/commit/da723d5392e1dc339fe26b555f50d5e744c153bb", "message": "Allow to pass configuration to launcher process", "committedDate": "2020-09-25T11:49:37Z", "type": "forcePushed"}]}