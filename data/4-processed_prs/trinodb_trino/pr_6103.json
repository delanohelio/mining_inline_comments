{"pr_number": 6103, "pr_title": "Drop extra query-completed event for queries failing during preparation", "pr_createdAt": "2020-11-26T12:00:32Z", "pr_url": "https://github.com/trinodb/trino/pull/6103", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMzE0OQ==", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531113149", "bodyText": "Add a comment why we're doing this, otherwise the first impression is \"flaky!\" and the second is \"let's fix that\"", "author": "findepi", "createdAt": "2020-11-26T15:48:06Z", "path": "presto-tests/src/test/java/io/prestosql/execution/EventsAwaitingQueries.java", "diffHunk": "@@ -64,7 +67,7 @@ MaterializedResult runQueryAndWaitForEvents(@Language(\"SQL\") String sql, int num\n         }\n \n         eventsCollector.waitForEvents(10);\n-\n+        Thread.sleep(extraWaitTime.toMillis());", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMzQ0Nw==", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531113447", "bodyText": "if you added 1s everywhere, then maybe we do not need this parametric and we can do 1s unconditionally?", "author": "findepi", "createdAt": "2020-11-26T15:48:36Z", "path": "presto-tests/src/test/java/io/prestosql/execution/TestEventListenerWithSplits.java", "diffHunk": "@@ -90,7 +91,7 @@ protected QueryRunner createQueryRunner()\n         queryRunner.getCoordinator().getResourceGroupManager().get()\n                 .setConfigurationManager(\"file\", ImmutableMap.of(\"resource-groups.config-file\", getResourceFilePath(\"resource_groups_config_simple.json\")));\n \n-        queries = new EventsAwaitingQueries(generatedEvents, queryRunner);\n+        queries = new EventsAwaitingQueries(generatedEvents, queryRunner, Duration.ofSeconds(1));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE2MDE5OQ==", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531160199", "bodyText": "Maybe. Let's leave it though. There are not many calls to this constructor.", "author": "losipiuk", "createdAt": "2020-11-26T17:24:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMzQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExNDI4OA==", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531114288", "bodyText": "maybe\nassertFailedQuery(\"This is NOT a SQL statement and will fail to parse\",", "author": "findepi", "createdAt": "2020-11-26T15:50:08Z", "path": "presto-tests/src/test/java/io/prestosql/execution/TestEventListenerBasic.java", "diffHunk": "@@ -131,6 +131,13 @@ public void testAnalysisFailure()\n         assertFailedQuery(\"EXPLAIN (TYPE IO) SELECT sum(bogus) FROM lineitem\", \"line 1:30: Column 'bogus' cannot be resolved\");\n     }\n \n+    @Test\n+    public void testParseError()\n+            throws Exception\n+    {\n+        assertFailedQuery(\"describe formatted table blah\", \"line 1:20: mismatched input 'table'. Expecting: '.', <EOF>\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE2MDgxOQ==", "url": "https://github.com/trinodb/trino/pull/6103#discussion_r531160819", "bodyText": "I used \"You shall not parse!\"", "author": "losipiuk", "createdAt": "2020-11-26T17:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExNDI4OA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "3cacc7e845e7e6889904b983b8de55033a040c8b", "url": "https://github.com/trinodb/trino/commit/3cacc7e845e7e6889904b983b8de55033a040c8b", "message": "Add extra wait time for query Events in tests", "committedDate": "2020-11-26T17:24:46Z", "type": "commit"}, {"oid": "cac3b664b6d2b214d9420695c3259f9192c4dc61", "url": "https://github.com/trinodb/trino/commit/cac3b664b6d2b214d9420695c3259f9192c4dc61", "message": "Drop extra query-completed event for queries failing during preparation", "committedDate": "2020-11-26T17:27:06Z", "type": "commit"}, {"oid": "cac3b664b6d2b214d9420695c3259f9192c4dc61", "url": "https://github.com/trinodb/trino/commit/cac3b664b6d2b214d9420695c3259f9192c4dc61", "message": "Drop extra query-completed event for queries failing during preparation", "committedDate": "2020-11-26T17:27:06Z", "type": "forcePushed"}]}