{"pr_number": 1924, "pr_title": "ReadableByteChannelPublisher executor leak", "pr_createdAt": "2020-06-02T15:52:12Z", "pr_url": "https://github.com/oracle/helidon/pull/1924", "timeline": [{"oid": "1fb703c0b21bc4f2c13a1865919996479e12090e", "url": "https://github.com/oracle/helidon/commit/1fb703c0b21bc4f2c13a1865919996479e12090e", "message": "LazyValue now has a method to check if it was loaded and has an optimized constructor when pre-loaded.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:19Z", "type": "commit"}, {"oid": "825812c0b283dda20b5382a191a68762eb6e891e", "url": "https://github.com/oracle/helidon/commit/825812c0b283dda20b5382a191a68762eb6e891e", "message": "ReadableByteChannelPublisher now correctly closes executor.\nUsing a builder and static factory methods\nDeprecated public constructor\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:19Z", "type": "commit"}, {"oid": "242bb9174f1c5daf761846a265f0d597f3455649", "url": "https://github.com/oracle/helidon/commit/242bb9174f1c5daf761846a265f0d597f3455649", "message": "Checkstyle fix.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:19Z", "type": "commit"}, {"oid": "e79c7fbde6a9c206625b00310d18b192f3448134", "url": "https://github.com/oracle/helidon/commit/e79c7fbde6a9c206625b00310d18b192f3448134", "message": "Copyright fix.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:47Z", "type": "commit"}, {"oid": "245c061fa7782f840b34b397923447ebdc452e83", "url": "https://github.com/oracle/helidon/commit/245c061fa7782f840b34b397923447ebdc452e83", "message": "Remove usage of deprecated constructor.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:47Z", "type": "commit"}, {"oid": "979daedf536ed0f421e5d900f11e1e6fc6519f3b", "url": "https://github.com/oracle/helidon/commit/979daedf536ed0f421e5d900f11e1e6fc6519f3b", "message": "Tmp\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:47Z", "type": "commit"}, {"oid": "e348aba2df302cd6526aa11c3cad46ed03fa3987", "url": "https://github.com/oracle/helidon/commit/e348aba2df302cd6526aa11c3cad46ed03fa3987", "message": "- Byte channel publisher now part of IoMulti\n- renamed methods in IoMulti\n- RetrySchema now sent around only when customized\n- Deprecated old methods and classes\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:47Z", "type": "commit"}, {"oid": "8c07d02541ec75301e4794893643a06787e98ad1", "url": "https://github.com/oracle/helidon/commit/8c07d02541ec75301e4794893643a06787e98ad1", "message": "Private constructor in Builder.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:47Z", "type": "commit"}, {"oid": "5d7872b3cd3b9f8a066df95116ca98237f543b90", "url": "https://github.com/oracle/helidon/commit/5d7872b3cd3b9f8a066df95116ca98237f543b90", "message": "Renamed class to align builder, method and class name.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:47Z", "type": "commit"}, {"oid": "5d7872b3cd3b9f8a066df95116ca98237f543b90", "url": "https://github.com/oracle/helidon/commit/5d7872b3cd3b9f8a066df95116ca98237f543b90", "message": "Renamed class to align builder, method and class name.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T08:46:47Z", "type": "forcePushed"}, {"oid": "2eab338a10d04769011748708649cb82a683dc5a", "url": "https://github.com/oracle/helidon/commit/2eab338a10d04769011748708649cb82a683dc5a", "message": "Reverting to public.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T11:24:15Z", "type": "commit"}, {"oid": "459f5956cf5ce789da7d1deeeab1dc51f2beb6a4", "url": "https://github.com/oracle/helidon/commit/459f5956cf5ce789da7d1deeeab1dc51f2beb6a4", "message": "Added test for MultiFromByteChannel.\nFixed compilation issue caused by refactoring.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T12:38:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzMzE4MQ==", "url": "https://github.com/oracle/helidon/pull/1924#discussion_r435333181", "bodyText": "{@link ReadableByteChannel}", "author": "danielkec", "createdAt": "2020-06-04T15:08:47Z", "path": "common/reactive/src/main/java/io/helidon/common/reactive/IoMulti.java", "diffHunk": "@@ -67,23 +103,175 @@ static OutputStreamMultiBuilder builderOutputStream() {\n      * @param inputStream the Stream to publish\n      * @return Multi\n      * @throws NullPointerException if {@code stream} is {@code null}\n+     * @deprecated please use {@link #multiFromStream(java.io.InputStream)}\n      */\n+    @Deprecated(since = \"2.0.0\", forRemoval = true)\n     static Multi<ByteBuffer> createInputStream(final InputStream inputStream) {\n         return IoMulti.builderInputStream(inputStream)\n                 .build();\n     }\n \n+    /**\n+     * Create a {@link Multi} instance that publishes {@link ByteBuffer}s from\n+     * the given {@link InputStream}.\n+     * <p>\n+     * {@link InputStream} is trusted not to block on read operations, in case\n+     * it can't be assured use builder to specify executor for asynchronous waiting\n+     * for blocking reads. {@code IoMulti.builder(is).executor(executorService).build()}.\n+     *\n+     * @param inputStream the Stream to publish\n+     * @return Multi\n+     */\n+    static Multi<ByteBuffer> multiFromStream(final InputStream inputStream) {\n+        return IoMulti.builderInputStream(inputStream)\n+                .build();\n+    }\n+\n     /**\n      * Creates a builder of the {@link Multi} from supplied {@link java.io.InputStream}.\n      *\n      * @param inputStream the Stream to publish\n      * @return the builder\n+     * @deprecated Please use {@link #multiFromStreamBuilder(java.io.InputStream)}\n      */\n+    @Deprecated(since = \"2.0.0\", forRemoval = true)\n     static MultiFromInputStreamBuilder builderInputStream(final InputStream inputStream) {\n         Objects.requireNonNull(inputStream);\n         return new MultiFromInputStreamBuilder(inputStream);\n     }\n \n+    /**\n+     * Creates a builder of the {@link Multi} from supplied {@link java.io.InputStream}.\n+     *\n+     * @param inputStream the Stream to publish\n+     * @return the builder\n+     */\n+    static MultiFromInputStreamBuilder multiFromStreamBuilder(final InputStream inputStream) {\n+        Objects.requireNonNull(inputStream);\n+        return new MultiFromInputStreamBuilder(inputStream);\n+    }\n+\n+    /**\n+     * Creates a multi that reads data from the provided byte channel.\n+     * The multi uses an executor service to process asynchronous reads.\n+     * You can provide a custom executor service using\n+     * {@link #multiFromByteChannelBuilder(java.nio.channels.ReadableByteChannel)}.\n+     *\n+     * @param byteChannel readable byte channel with data\n+     * @return publisher of data from the provided channel\n+     */\n+    static Multi<ByteBuffer> multiFromByteChannel(ReadableByteChannel byteChannel) {\n+        return multiFromByteChannelBuilder(byteChannel).build();\n+    }\n+\n+    /**\n+     * Creates a builder of {@link Multi} from provided {@link java.nio.channels.ReadableByteChannel}.\n+     *\n+     * @param byteChannel readable byte channel with data\n+     * @return fluent API builder to configure additional details\n+     */\n+    static MultiFromByteChannelBuilder multiFromByteChannelBuilder(ReadableByteChannel byteChannel) {\n+        return new MultiFromByteChannelBuilder(Objects.requireNonNull(byteChannel));\n+    }\n+\n+    /**\n+     * Fluent API builder for creating a {@link io.helidon.common.reactive.Multi} from an\n+     * {@link java.io.InputStream}.", "originalCommit": "459f5956cf5ce789da7d1deeeab1dc51f2beb6a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0ODE3Mg==", "url": "https://github.com/oracle/helidon/pull/1924#discussion_r435348172", "bodyText": "Not sure I understand the comment?\nIn general it is preferable to use fully qualified class names in Javadoc, so you do not import a class only referenced in Javadoc", "author": "tomas-langer", "createdAt": "2020-06-04T15:29:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzMzE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2ODk1Mg==", "url": "https://github.com/oracle/helidon/pull/1924#discussion_r435368952", "bodyText": "Its just its on MultiFromByteChannelBuilder so it should be from ReadableByteChannel not from InputStream", "author": "danielkec", "createdAt": "2020-06-04T15:55:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzMzE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3MDIzNg==", "url": "https://github.com/oracle/helidon/pull/1924#discussion_r435370236", "bodyText": "Fixed.", "author": "tomas-langer", "createdAt": "2020-06-04T15:57:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzMzE4MQ=="}], "type": "inlineReview"}, {"oid": "55eadc5650288fbed765d4c97b5c8506655183fb", "url": "https://github.com/oracle/helidon/commit/55eadc5650288fbed765d4c97b5c8506655183fb", "message": "Javadoc fix\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-06-04T15:57:10Z", "type": "commit"}]}