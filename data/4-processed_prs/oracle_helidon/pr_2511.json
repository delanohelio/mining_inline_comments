{"pr_number": 2511, "pr_title": "Support for overriding configuration of security providers", "pr_createdAt": "2020-11-09T20:39:03Z", "pr_url": "https://github.com/oracle/helidon/pull/2511", "timeline": [{"oid": "f474f1e51492720359ccf22f8e4237842dd9629b", "url": "https://github.com/oracle/helidon/commit/f474f1e51492720359ccf22f8e4237842dd9629b", "message": "Support for overriding configuration of security providers using simple properties.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-11-09T20:35:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5ODg4Ng==", "url": "https://github.com/oracle/helidon/pull/2511#discussion_r522198886", "bodyText": "Assert something?", "author": "danielkec", "createdAt": "2020-11-12T15:35:53Z", "path": "tests/integration/security/gh2455/src/test/java/io/helidon/tests/integration/security/gh2455/TestProviderOverrides.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.tests.integration.security.gh2455;\n+\n+import java.util.Map;\n+\n+import io.helidon.config.Config;\n+import io.helidon.config.ConfigSources;\n+import io.helidon.security.Security;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class TestProviderOverrides {\n+    @Test\n+    void testOverride() {\n+        Map<String, String> map = Map.of(\n+                \"security.providers.1.type\", \"header-atn\",\n+                \"security.providers.1.header-atn.authenticate\", \"false\"\n+        );\n+        Config config = Config.builder()\n+                .addSource(ConfigSources.create(map))\n+                .addSource(ConfigSources.classpath(\"application.yaml\"))\n+                .disableEnvironmentVariablesSource()\n+                .disableSystemPropertiesSource()\n+                .build();\n+\n+        Security security = Security.create(config.get(\"security\"));\n+    }", "originalCommit": "f474f1e51492720359ccf22f8e4237842dd9629b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2ODQ1NA==", "url": "https://github.com/oracle/helidon/pull/2511#discussion_r522268454", "bodyText": "Asserting that Security.create does not throw an exception, which it did before the fix", "author": "tomas-langer", "createdAt": "2020-11-12T17:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5ODg4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI4NzkzMg==", "url": "https://github.com/oracle/helidon/pull/2511#discussion_r522287932", "bodyText": "make sense thx", "author": "danielkec", "createdAt": "2020-11-12T17:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5ODg4Ng=="}], "type": "inlineReview"}]}