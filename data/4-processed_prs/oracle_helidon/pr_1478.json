{"pr_number": 1478, "pr_title": "JPA and JTA for native image", "pr_createdAt": "2020-03-09T14:51:06Z", "pr_url": "https://github.com/oracle/helidon/pull/1478", "timeline": [{"oid": "5c8cb79df780f8fc70d3e11d46441e0530d00c23", "url": "https://github.com/oracle/helidon/commit/5c8cb79df780f8fc70d3e11d46441e0530d00c23", "message": "JPA and JTA for native image.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-03-09T14:55:51Z", "type": "forcePushed"}, {"oid": "2834aadf7ea3daa171c72a396d05f900e34e1961", "url": "https://github.com/oracle/helidon/commit/2834aadf7ea3daa171c72a396d05f900e34e1961", "message": "JPA and JTA for native image.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-03-09T15:18:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMzcwOA==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391303708", "bodyText": "JtaPlatform is inherently a Hibernate construct, so renaming this to HibernateJtaPlatform is redundant.", "author": "ljnelson", "createdAt": "2020-03-11T22:20:39Z", "path": "integrations/cdi/hibernate-cdi/src/main/java/io/helidon/integrations/cdi/hibernate/HibernateJtaPlatform.java", "diffHunk": "@@ -29,13 +29,13 @@\n  * An {@link AbstractJtaPlatform} that is an {@link ApplicationScoped}\n  * CDI managed bean that supplies {@link TransactionManager} and\n  * {@link UserTransaction} instances that are supplied to it at\n- * {@linkplain #CDISEJtaPlatform(TransactionManager, UserTransaction)\n+ * {@linkplain #HibernateJtaPlatform(TransactionManager, UserTransaction)\n  * construction time}.\n  *\n  * @see AbstractJtaPlatform\n  */\n @ApplicationScoped\n-public class CDISEJtaPlatform extends AbstractJtaPlatform {\n+public class HibernateJtaPlatform extends AbstractJtaPlatform {", "originalCommit": "2834aadf7ea3daa171c72a396d05f900e34e1961", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNzc1MQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391327751", "bodyText": "I will change it back and refresh the PR", "author": "tomas-langer", "createdAt": "2020-03-11T23:32:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMzcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2MzQ4Mg==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391563482", "bodyText": "Reverted", "author": "tomas-langer", "createdAt": "2020-03-12T11:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMzcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMzk1Mg==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391303952", "bodyText": "JtaPlatformProvider is inherently a Hibernate construct so renaming this to HibernateJtaPlatformProvider is redundant.", "author": "ljnelson", "createdAt": "2020-03-11T22:21:22Z", "path": "integrations/cdi/hibernate-cdi/src/main/java/io/helidon/integrations/cdi/hibernate/HibernateJtaPlatformProvider.java", "diffHunk": "@@ -30,14 +30,13 @@\n  *\n  * @see JtaPlatform\n  *\n- * @see CDISEJtaPlatform\n+ * @see HibernateJtaPlatform\n  */\n-public final class CDISEJtaPlatformProvider implements JtaPlatformProvider {\n-\n+public final class HibernateJtaPlatformProvider implements JtaPlatformProvider {\n   /**\n-   * Creates a new {@link CDISEJtaPlatformProvider}.\n+   * Creates a new {@link HibernateJtaPlatformProvider}.", "originalCommit": "2834aadf7ea3daa171c72a396d05f900e34e1961", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2MzM2NQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391563365", "bodyText": "Reverted", "author": "tomas-langer", "createdAt": "2020-03-12T11:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMzk1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNDM0OA==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391304348", "bodyText": "As noted earlier in the review, renames like this should be reverted.", "author": "ljnelson", "createdAt": "2020-03-11T22:22:20Z", "path": "integrations/cdi/hibernate-cdi/src/main/resources/META-INF/services/org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformProvider", "diffHunk": "@@ -11,4 +11,5 @@\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n-io.helidon.integrations.cdi.hibernate.CDISEJtaPlatformProvider\n\\ No newline at end of file\n+\n+io.helidon.integrations.cdi.hibernate.HibernateJtaPlatformProvider", "originalCommit": "2834aadf7ea3daa171c72a396d05f900e34e1961", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2MzQzMQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391563431", "bodyText": "Reverted", "author": "tomas-langer", "createdAt": "2020-03-12T11:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNDM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391305187", "bodyText": "I'd prefer keeping the HelidonFeatures stuff out of this extension as right now it is capable of being a generic CDI portable extension usable by any CDI implementation in any product.  Perhaps this could be located elsewhere?", "author": "ljnelson", "createdAt": "2020-03-11T22:24:50Z", "path": "integrations/cdi/jta-cdi/src/main/java/io/helidon/integrations/jta/cdi/NarayanaExtension.java", "diffHunk": "@@ -54,13 +57,14 @@\n  * 2.0 SE environment</a>.\n  */\n public final class NarayanaExtension implements Extension {\n-\n+    static {\n+        HelidonFeatures.register(HelidonFlavor.MP, \"JTA\");", "originalCommit": "2834aadf7ea3daa171c72a396d05f900e34e1961", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNzYxMQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391327611", "bodyText": "I am not sure how to handle this - we need to list the features on startup, and JTA, JPA and Hibernate/Eclipse link are kind of required here.\nAnd I do not like the idea of creating a new module for each of these that would be Helidon specific.\nThis would just bring a dependency on helidon-common module and give us consistency.\nAlso this is Helidon product, so I do not understand why we should not have a dependency on our common module.\nIt still would work with any CDI implementation, as it would just ignore this class...", "author": "tomas-langer", "createdAt": "2020-03-11T23:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMzNTMwOQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391335309", "bodyText": "Could you move class construction/instantiation for all features into the HelidonFeatures class directly, and read some sort of descriptor out of META-INF?", "author": "ljnelson", "createdAt": "2020-03-11T23:58:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NDkwNQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391474905", "bodyText": "Not really. I want the features listed only when used, not just when on classpath.", "author": "tomas-langer", "createdAt": "2020-03-12T08:51:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2Mzk5Mw==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r391563993", "bodyText": "I am not sure about your concern. Is it that we add one library to dependencies?", "author": "tomas-langer", "createdAt": "2020-03-12T11:41:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQwMjIxMQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r392402211", "bodyText": "Here are some of my concerns:\n\nWhat is a Helidon feature (particularly with respect to CDI)?  Is it a portable extension?  Is it many?  Is it a bean archive?  How are they defined?  What granularity do they have?  Why this extension?  What happens if I add another extension in this package?\nWhy must they be registered in a static singleton?  Why must they be pushed?  Why must this coupling be tight?  Suppose HelidonFeatures grows and becomes complicated and the static call in the static initializer fails and this class doesn't load.  Is it straightforward to debug?\nSo far this is the only compile-time io.helidon dependency in all of the integrations we have on anything outside of the integrations area.  Everything else is pure MicroProfile dependencies.  These integrations have proven to be separate from the rest of Helidon because of course they are runtime components that can be deployed, or not, as people see fit, within any MicroProfile application.  I personally would like to keep it this way.\nCDI has an event mechanism for broadcasting things of interest that facilitates loose coupling (yay) rather than tight coupling (boo).  It seems to me that any Helidon features facility should be built on top of it (at least in the CDI/MicroProfile area) since the extension in this case doesn't care.  Perhaps extensions could simply do event.fire(this) on the initialization of the application scope and then some collector in the Helidon-specific container could sort out how to make features out of this.\nAnyway those are some that I can think of right now.", "author": "ljnelson", "createdAt": "2020-03-13T18:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNjM3NQ==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r392416375", "bodyText": "The HelidonFeatures needs to be re-worked, but, this is a must have for all components. The CDI / Microprofile pureness (TM) is nice but somewhat irrelevant to the Helidon product.", "author": "romain-grecourt", "createdAt": "2020-03-13T19:01:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNzE3Mg==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r392507172", "bodyText": "You're welcome to approve this PR; I don't feel comfortable doing that.", "author": "ljnelson", "createdAt": "2020-03-13T22:05:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk2NzQ5Ng==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r392967496", "bodyText": "Helidon Features is a cross SE/MP feature, so it cannot utilize CDI at all.\nWe may add a way to read features from a descriptor file (such as META-INF/helidon/feature.json or similar). It must be aligned with our CLI work.\nWe can talk about it on our meeting.\nNevertheless the \"pureness\" of our integrations implementations is not a design goal of Helidon, so using Helidon specific APIs is not forbidden and in case it is easier, it is actually recommended.", "author": "tomas-langer", "createdAt": "2020-03-16T12:02:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMxMDE2Mw==", "url": "https://github.com/oracle/helidon/pull/1478#discussion_r393310163", "bodyText": "Removed from this PR, we will re-introduce features to integrations once we agree on how to hanle it.", "author": "tomas-langer", "createdAt": "2020-03-16T21:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTE4Nw=="}], "type": "inlineReview"}, {"oid": "c9957e384e31a64e59fadfc4ead86389032a20db", "url": "https://github.com/oracle/helidon/commit/c9957e384e31a64e59fadfc4ead86389032a20db", "message": "Support for features that cannot use static initialization.", "committedDate": "2020-03-12T11:23:59Z", "type": "commit"}, {"oid": "96adf3e17b7fc177e6715f3f891ff135138fa1d8", "url": "https://github.com/oracle/helidon/commit/96adf3e17b7fc177e6715f3f891ff135138fa1d8", "message": "JPA and JTA for native image.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-03-12T11:23:59Z", "type": "commit"}, {"oid": "77959a50f9f81ff57bcb68f919842947ef8256cf", "url": "https://github.com/oracle/helidon/commit/77959a50f9f81ff57bcb68f919842947ef8256cf", "message": "Reverted names.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-03-12T11:39:00Z", "type": "commit"}, {"oid": "77959a50f9f81ff57bcb68f919842947ef8256cf", "url": "https://github.com/oracle/helidon/commit/77959a50f9f81ff57bcb68f919842947ef8256cf", "message": "Reverted names.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-03-12T11:39:00Z", "type": "forcePushed"}, {"oid": "2a245c24652ed9c5cae283331a09c8cba221e7cd", "url": "https://github.com/oracle/helidon/commit/2a245c24652ed9c5cae283331a09c8cba221e7cd", "message": "Removed feature support until we resolve how to handle it.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-03-16T21:05:13Z", "type": "commit"}]}