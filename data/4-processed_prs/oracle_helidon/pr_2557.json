{"pr_number": 2557, "pr_title": "MySQL driver support for JPA/Hibernate in native image", "pr_createdAt": "2020-12-01T13:18:14Z", "pr_url": "https://github.com/oracle/helidon/pull/2557", "timeline": [{"oid": "3a933314ecd84ce2b5c001f883f506344bc26090", "url": "https://github.com/oracle/helidon/commit/3a933314ecd84ce2b5c001f883f506344bc26090", "message": "MySQL, MariaDB and PostgreSQL driver support for JPA/Hibernate.\nMySQL integration test added as parallel stage to Jenkinsfile.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-01T13:23:02Z", "type": "forcePushed"}, {"oid": "b457d7dae305d4aa15115ead13917f9cb22e9451", "url": "https://github.com/oracle/helidon/commit/b457d7dae305d4aa15115ead13917f9cb22e9451", "message": "MySQL, MariaDB and PostgreSQL driver support for JPA/Hibernate.\nMySQL integration test added as parallel stage to Jenkinsfile.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-01T13:30:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MzkxNQ==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538353915", "bodyText": "ojdbc should not be part of this PR", "author": "tomas-langer", "createdAt": "2020-12-08T13:14:24Z", "path": "dependencies/pom.xml", "diffHunk": "@@ -100,7 +100,8 @@\n         <version.lib.mockito>2.23.4</version.lib.mockito>\n         <version.lib.mongodb.reactivestreams>1.11.0</version.lib.mongodb.reactivestreams>\n         <version.lib.mssql-jdbc>8.4.1.jre8</version.lib.mssql-jdbc>\n-        <version.lib.mysql-connector-java>8.0.11</version.lib.mysql-connector-java>\n+        <version.lib.oracle.ojdbc10>19.3.0.0</version.lib.oracle.ojdbc10>", "originalCommit": "a74b9b6c786a273f9e9e596c15f4fa412231ff21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3MzUwNQ==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538373505", "bodyText": "Removed", "author": "Tomas-Kraus", "createdAt": "2020-12-08T13:33:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1MzkxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1NDEzNA==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538354134", "bodyText": "This is unrelated to this PR", "author": "tomas-langer", "createdAt": "2020-12-08T13:14:35Z", "path": "etc/dependency-check-suppression.xml", "diffHunk": "@@ -123,4 +123,29 @@\n    <vulnerabilityName>CVE-2020-15250</vulnerabilityName>\n </suppress>\n \n+<!-- grpc -->", "originalCommit": "a74b9b6c786a273f9e9e596c15f4fa412231ff21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2NjY1Nw==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538366657", "bodyText": "Yes, this is my fault. I copied master version here to remove all my changes. Unfortunately someone changed it since I made my fork.", "author": "Tomas-Kraus", "createdAt": "2020-12-08T13:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1NDEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1NjIxOA==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538356218", "bodyText": "This is not very useful - please add ex as parameter to log statement, so we get a stack trace when running in fine or finest log level", "author": "tomas-langer", "createdAt": "2020-12-08T13:16:44Z", "path": "tests/integration/dbclient/jdbc/src/test/java/io/helidon/tests/integration/dbclient/jdbc/init/CheckIT.java", "diffHunk": "@@ -71,10 +76,15 @@ public void accept(Config config) {\n                     connected = true;\n                     return;\n                 } catch (SQLException ex) {\n-                    LOGGER.info(() -> String.format(\"Connection check: %s\", ex.getMessage()));\n+                    LOGGER.fine(() -> String.format(\"Connection check: %s\", ex.getMessage()));", "originalCommit": "a74b9b6c786a273f9e9e596c15f4fa412231ff21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3Mjg3Mg==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538372872", "bodyText": "Done.", "author": "Tomas-Kraus", "createdAt": "2020-12-08T13:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1NjIxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1NzgyMw==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538357823", "bodyText": "This seems too complicated.\nMaybe extract to method and catch the NoSuchMethodException just once?", "author": "tomas-langer", "createdAt": "2020-12-08T13:18:15Z", "path": "tests/integration/jpa/appl/src/main/java/io/helidon/tests/integration/jpa/appl/Dispatcher.java", "diffHunk": "@@ -106,44 +110,48 @@ private Handle getHandle(final String name) {\n         }\n         final String className = name.substring(0, serpPos);\n         final String methodName = name.substring(serpPos + 1, nameLen);\n-        if (\"InsertIT\".equals(className)) {\n-            try {\n-                return new Handle(\n-                        insertIt,\n-                        InsertIT.class.getDeclaredMethod(methodName, TestResult.class),\n-                        result);\n-            } catch (NoSuchMethodException ex) {\n-                result.throwed(ex);\n-            }\n-        } else if (\"UpdateIT\".equals(className)) {\n-            try {\n-                return new Handle(\n-                        updateIt,\n-                        UpdateIT.class.getDeclaredMethod(methodName, TestResult.class),\n-                        result);\n-            } catch (NoSuchMethodException ex) {\n-                result.throwed(ex);\n-            }\n-        } else if (\"DeleteIT\".equals(className)) {\n-            try {\n-                return new Handle(\n-                        deleteIt,\n-                        DeleteIT.class.getDeclaredMethod(methodName, TestResult.class),\n-                        result);\n-            } catch (NoSuchMethodException ex) {\n-                result.throwed(ex);\n-            }\n-        } else if (\"QueryIT\".equals(className)) {\n-            try {\n-                return new Handle(\n-                        queryIt,\n-                        QueryIT.class.getDeclaredMethod(methodName, TestResult.class),\n-                        result);\n-            } catch (NoSuchMethodException ex) {\n-                result.throwed(ex);\n-            }\n-        } else {\n+        if (null == className) {\n             result.fail(\"Unknown test class: \" + className);\n+        } else switch (className) {\n+            case \"InsertIT\":", "originalCommit": "a74b9b6c786a273f9e9e596c15f4fa412231ff21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3ODM1Ng==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538378356", "bodyText": "This will be completely redesigned when I'll be writing native image tests for DB Client. In this case I just wanted to find some working solution to simply run tests in MP application environment and return results.\nNext step is to make it jUnit like as much as possible and scan all classes for specific annotated classes/methods so this whole piece of code will be removed.\nI'll extract method for now to make it better readable.", "author": "Tomas-Kraus", "createdAt": "2020-12-08T13:38:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1NzgyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1OTQxNg==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538359416", "bodyText": "please remove the commented out text", "author": "tomas-langer", "createdAt": "2020-12-08T13:19:44Z", "path": "tests/integration/jpa/appl/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -17,7 +17,14 @@\n mp.initializer.allow=true\n mp.initializer.no-warn=true\n features.print-details=true\n-javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:9092/test\n-javax.sql.DataSource.test.dataSource.user=sa\n-javax.sql.DataSource.test.dataSource.password=\n-javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n\\ No newline at end of file\n+javax.sql.DataSource.test.dataSource.url=${db.url}\n+javax.sql.DataSource.test.dataSource.user=${db.user}\n+javax.sql.DataSource.test.dataSource.password=${db.password}\n+javax.sql.DataSource.test.dataSourceClassName=${db.datasource}\n+\n+#        \"org.postgresql.xa.PGXADataSource\",", "originalCommit": "a74b9b6c786a273f9e9e596c15f4fa412231ff21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM3NDU0NQ==", "url": "https://github.com/oracle/helidon/pull/2557#discussion_r538374545", "bodyText": "Done.", "author": "Tomas-Kraus", "createdAt": "2020-12-08T13:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1OTQxNg=="}], "type": "inlineReview"}, {"oid": "b78a342aa6804cb63748a279acb30365cc9f943f", "url": "https://github.com/oracle/helidon/commit/b78a342aa6804cb63748a279acb30365cc9f943f", "message": "MySQL driver support for JPA/Hibernate. MySQL integration test added as parallel stage to Jenkinsfile.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-08T16:09:32Z", "type": "commit"}, {"oid": "b78a342aa6804cb63748a279acb30365cc9f943f", "url": "https://github.com/oracle/helidon/commit/b78a342aa6804cb63748a279acb30365cc9f943f", "message": "MySQL driver support for JPA/Hibernate. MySQL integration test added as parallel stage to Jenkinsfile.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-08T16:09:32Z", "type": "forcePushed"}, {"oid": "e65e858e1d45e938c9d88507602612416f6e7ac7", "url": "https://github.com/oracle/helidon/commit/e65e858e1d45e938c9d88507602612416f6e7ac7", "message": "Added Graal VM and native image profile to test.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-08T19:31:44Z", "type": "commit"}, {"oid": "4f98eb357b71a8a38699341d8113e8e5571d5423", "url": "https://github.com/oracle/helidon/commit/4f98eb357b71a8a38699341d8113e8e5571d5423", "message": "Test initialization and cleanup implemented using BeforeAllCallback, ExtensionContext.Store.CloseableResource\nTest execution modified to run both Java VM and native image setups.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-09T15:55:10Z", "type": "commit"}, {"oid": "5004cc18f4144003bf3350cbbd61f672c8ffe46d", "url": "https://github.com/oracle/helidon/commit/5004cc18f4144003bf3350cbbd61f672c8ffe46d", "message": "Fixed rebase issue.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-09T18:14:10Z", "type": "commit"}, {"oid": "2ae600fbc437a2aea9bc18652aa51b27a65fbbd3", "url": "https://github.com/oracle/helidon/commit/2ae600fbc437a2aea9bc18652aa51b27a65fbbd3", "message": "Fixed formating issue.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-09T18:18:47Z", "type": "commit"}, {"oid": "095d6e47553e0f526f13966b9f2f73bdc3b4649b", "url": "https://github.com/oracle/helidon/commit/095d6e47553e0f526f13966b9f2f73bdc3b4649b", "message": "Added verify goal to failsafe configuration.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>", "committedDate": "2020-12-09T18:28:40Z", "type": "commit"}]}