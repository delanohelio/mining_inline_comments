{"pr_number": 2065, "pr_title": "DB Archetypes: README updates for native support", "pr_createdAt": "2020-06-19T14:52:23Z", "pr_url": "https://github.com/oracle/helidon/pull/2065", "timeline": [{"oid": "4a7143ed270f609dd0cffce3be42476cba63a176", "url": "https://github.com/oracle/helidon/commit/4a7143ed270f609dd0cffce3be42476cba63a176", "message": "Updates to README and related files with a section describing how to run database-se using an external H2 database and GraalVM native.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>", "committedDate": "2020-06-19T13:45:34Z", "type": "commit"}, {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22", "url": "https://github.com/oracle/helidon/commit/0b150bd37058582f8129dea34fb0eb2b1e496a22", "message": "Updates to README and related files with a section describing how to run database-mp using an external H2 database and GraalVM native.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>", "committedDate": "2020-06-19T14:50:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDAzMw==", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442940033", "bodyText": "The first dependency is for Oracle JDBC, not needed for h2", "author": "tomas-langer", "createdAt": "2020-06-19T16:34:45Z", "path": "archetypes/database-mp/src/main/resources/README.md.mustache", "diffHunk": "@@ -38,4 +38,54 @@ curl -s -X GET http://localhost:8080/metrics\n curl -H 'Accept: application/json' -X GET http://localhost:8080/metrics\n {\"base\":...\n . . .\n-```\n\\ No newline at end of file\n+```\n+\n+## GraalVM Native Support\n+\n+The generation of native binaries requires an installation of GraalVM 20.0.0+. For more\n+information about the steps necessary to use GraalVM with Helidon\n+see https://helidon.io/docs/v2/#/mp/guides/36_graalnative.\n+\n+The H2 Database when configured to use the in-memory mode is currently _not compatible_\n+with GraalVM native.\n+In order to produce a native binary, you must run the H2 Database as a separate process\n+and use a network connection for access. The simplest way to do this is by starting a Docker\n+container as follows:\n+\n+```\n+docker run -d -p 1521:1521 -p 81:81 -e H2_OPTIONS='-ifNotExists' --name=h2 oscarfonts/h2\n+```\n+\n+The resulting container will listen to port 1521 for network connections.\n+Switch property `javax.sql.DataSource.test.dataSource.url` in `microprofile-config.properties`\n+to use a TCP connection:\n+\n+```\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE\n+```\n+\n+Next, uncomment the following dependencies in your project's pom file:\n+\n+```\n+<dependency>", "originalCommit": "0b150bd37058582f8129dea34fb0eb2b1e496a22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MzQ1NA==", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442943454", "bodyText": "Ok, got it.", "author": "spericas", "createdAt": "2020-06-19T16:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDAzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDMyOA==", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442940328", "bodyText": "If you use the dependency above, this one is not needed (and you do not need to comment out anything for native image)", "author": "tomas-langer", "createdAt": "2020-06-19T16:35:23Z", "path": "archetypes/database-mp/src/main/resources/pom.xml.mustache", "diffHunk": "@@ -43,6 +43,14 @@\n             <groupId>jakarta.transaction</groupId>\n             <artifactId>jakarta.transaction-api</artifactId>\n         </dependency>\n+        <!-- dependency>\n+            <groupId>io.helidon.integrations.db</groupId>\n+            <artifactId>ojdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.db</groupId>\n+            <artifactId>h2</artifactId>\n+        </dependency -->\n         <dependency>\n             <groupId>com.h2database</groupId>", "originalCommit": "0b150bd37058582f8129dea34fb0eb2b1e496a22", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDg3MA==", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442940870", "bodyText": "ifexists is not needed here, sufficient on server side", "author": "tomas-langer", "createdAt": "2020-06-19T16:36:34Z", "path": "archetypes/database-mp/src/main/resources/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -1,8 +1,8 @@\n \n # Datasource properties\n javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n-#javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE\n javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\n+#javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE", "originalCommit": "0b150bd37058582f8129dea34fb0eb2b1e496a22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MzU4MQ==", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442943581", "bodyText": "That's odd, had issues without it. Will re-try.", "author": "spericas", "createdAt": "2020-06-19T16:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MTE3MA==", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442941170", "bodyText": "Same as above - only one of them is needed (h2), the other one is for Oracle JDBC", "author": "tomas-langer", "createdAt": "2020-06-19T16:37:17Z", "path": "archetypes/database-se/src/main/resources/README.md.mustache", "diffHunk": "@@ -38,4 +38,52 @@ curl -s -X GET http://localhost:8080/metrics\n curl -H 'Accept: application/json' -X GET http://localhost:8080/metrics\n {\"base\":...\n . . .\n-```\n\\ No newline at end of file\n+```\n+\n+## GraalVM Native Support\n+\n+The generation of native binaries requires an installation of GraalVM 20.0.0+. For more\n+information about the steps necessary to use GraalVM with Helidon\n+see https://helidon.io/docs/v2/#/se/guides/36_graalnative.\n+\n+The H2 Database when configured to use the in-memory mode is currently _not compatible_\n+with GraalVM native.\n+In order to produce a native binary, you must run the H2 Database as a separate process\n+and use a network connection for access. The simplest way to do this is by starting a Docker\n+container as follows:\n+\n+```\n+docker run -d -p 1521:1521 -p 81:81 -e H2_OPTIONS='-ifNotExists' --name=h2 oscarfonts/h2\n+```\n+\n+The resulting container will listen to port 1521 for network connections.\n+Switch the `url` in `application.yaml` to use a TCP connection:\n+\n+```\n+url: jdbc:h2:tcp://localhost:1521/test;DB_CLOSE_DELAY=-1\n+```\n+\n+Next, uncomment the following dependencies in your project's pom file:\n+\n+```", "originalCommit": "0b150bd37058582f8129dea34fb0eb2b1e496a22", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8e8d0a8291678f958fe966cde0fbc73378f8bcd2", "url": "https://github.com/oracle/helidon/commit/8e8d0a8291678f958fe966cde0fbc73378f8bcd2", "message": "Removed unnecessary dependency and cleaned up DB URLs.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>", "committedDate": "2020-06-19T16:55:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAwOTg2Mg==", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r443009862", "bodyText": "I think you are missing microprofile health and metrics:\n        <dependency>\n            <groupId>io.helidon.microprofile.metrics</groupId>\n            <artifactId>helidon-microprofile-metrics</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.helidon.microprofile.health</groupId>\n            <artifactId>helidon-microprofile-health</artifactId>\n            <scope>runtime</scope>\n        </dependency>", "author": "barchetta", "createdAt": "2020-06-19T19:26:37Z", "path": "archetypes/database-mp/src/main/resources/pom.xml.mustache", "diffHunk": "@@ -43,6 +43,10 @@\n             <groupId>jakarta.transaction</groupId>\n             <artifactId>jakarta.transaction-api</artifactId>\n         </dependency>", "originalCommit": "8e8d0a8291678f958fe966cde0fbc73378f8bcd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}