{"pr_number": 2411, "pr_title": "Secure static content", "pr_createdAt": "2020-10-05T17:25:21Z", "pr_url": "https://github.com/oracle/helidon/pull/2411", "timeline": [{"oid": "4a237517a0ddd15cc2a16fe396e8a8c798a1de95", "url": "https://github.com/oracle/helidon/commit/4a237517a0ddd15cc2a16fe396e8a8c798a1de95", "message": "Securing static content.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-10-05T16:43:53Z", "type": "commit"}, {"oid": "4e6a63b4f6cf7ee54365cfd7ec21dba31158cd41", "url": "https://github.com/oracle/helidon/commit/4e6a63b4f6cf7ee54365cfd7ec21dba31158cd41", "message": "Documentation update.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-10-05T17:24:03Z", "type": "commit"}, {"oid": "9380a5a03e48e27c012d9c2fd4c98cc642fc08c8", "url": "https://github.com/oracle/helidon/commit/9380a5a03e48e27c012d9c2fd4c98cc642fc08c8", "message": "Checkstyle fixes.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-10-05T18:00:46Z", "type": "commit"}, {"oid": "c6f4a5ed3184f10b34f341a88d7b191b30ec007e", "url": "https://github.com/oracle/helidon/commit/c6f4a5ed3184f10b34f341a88d7b191b30ec007e", "message": "Copyright fix\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-10-05T22:12:13Z", "type": "commit"}, {"oid": "1c8654a1572f01ca143c7d3fb9c49e9f703c4a33", "url": "https://github.com/oracle/helidon/commit/1c8654a1572f01ca143c7d3fb9c49e9f703c4a33", "message": "Fixed copy/paste error\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>", "committedDate": "2020-10-08T11:18:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MDgwMw==", "url": "https://github.com/oracle/helidon/pull/2411#discussion_r501680803", "bodyText": "the config encryption filter is", "author": "ljamen", "createdAt": "2020-10-08T12:29:17Z", "path": "docs/mp/security/03_configuration-secrets.adoc", "diffHunk": "@@ -27,35 +27,7 @@ When security requires a configuration with repeating complex elements, use Heli\n This example configures a basic authentication provider and\n  protects static content on the web server. It also includes annotations in Jersey.\n \n-== Protecting Static Content\n-\n-[source,yaml]\n-.application.yaml\n-----\n-security:\n-  providers:\n-    # Attribute based access control, validates roles\n-    - abac:\n-    # HTTP Basic authentication provider\n-    - http-basic-auth:\n-        realm: \"helidon\"\n-        users:\n-          - login: \"jack\"\n-            password: \"password\"\n-            roles: [\"user\", \"admin\"]\n-          - login: \"jill\"\n-            password: \"password\"\n-            roles: [\"user\"]\n-          - login: \"john\"\n-            password: \"password\"\n-  # Protect static content - require authenticated user\n-  web-server:\n-    paths:\n-      - path: \"/static-cp[/{*}]\"\n-        authenticate: true\n-----\n-\n-=== Protecting Configuration Secrets \n+== Protecting Configuration Secrets\n \n In Helidon MP, the config encryption filter ** enabled by default**. However, if you don't configure it, the filter", "originalCommit": "1c8654a1572f01ca143c7d3fb9c49e9f703c4a33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MzM4OQ==", "url": "https://github.com/oracle/helidon/pull/2411#discussion_r501683389", "bodyText": "The following shows an example we will explain in detail:", "author": "ljamen", "createdAt": "2020-10-08T12:33:36Z", "path": "docs/shared/security/helidon-endpoints.adoc", "diffHunk": "@@ -0,0 +1,87 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+=== Protecting Helidon endpoints\n+:description: Helidon Security Endpoints\n+:keywords: helidon, security, static, content, health, openapi, metrics\n+\n+There are several endpoints provided by Helidon services, such as:\n+\n+- Health endpoint (`/health`)\n+- Metrics endpoint (`/metrics`)\n+- OpenAPI endpoint (`/openapi`)\n+- Configured static content (can use any path configured)\n+\n+These endpoints are all implemented using Helidon reactive WebServer and as such\n+can be protected only through Security integration with WebServer.\n+\n+The following section describes configuration of such protection using configuration files,\n+ in this case using a `yaml` file, as it provides a tree structure.\n+\n+==== Configuring endpoint protection\n+\n+The configuration is usually placed under `security.web-server` (this can be\n+customized in Helidon SE).\n+\n+The following example shows an example we will explain in detail:", "originalCommit": "1c8654a1572f01ca143c7d3fb9c49e9f703c4a33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4NDI0OA==", "url": "https://github.com/oracle/helidon/pull/2411#discussion_r501684248", "bodyText": "such as microprofile-config.properties,", "author": "ljamen", "createdAt": "2020-10-08T12:35:00Z", "path": "docs/shared/security/helidon-endpoints.adoc", "diffHunk": "@@ -0,0 +1,87 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+=== Protecting Helidon endpoints\n+:description: Helidon Security Endpoints\n+:keywords: helidon, security, static, content, health, openapi, metrics\n+\n+There are several endpoints provided by Helidon services, such as:\n+\n+- Health endpoint (`/health`)\n+- Metrics endpoint (`/metrics`)\n+- OpenAPI endpoint (`/openapi`)\n+- Configured static content (can use any path configured)\n+\n+These endpoints are all implemented using Helidon reactive WebServer and as such\n+can be protected only through Security integration with WebServer.\n+\n+The following section describes configuration of such protection using configuration files,\n+ in this case using a `yaml` file, as it provides a tree structure.\n+\n+==== Configuring endpoint protection\n+\n+The configuration is usually placed under `security.web-server` (this can be\n+customized in Helidon SE).\n+\n+The following example shows an example we will explain in detail:\n+\n+[source,yaml]\n+.application.yaml\n+----\n+security:\n+  providers:\n+    - abac: # <1>\n+    - provider-key: # <2>\n+  web-server:\n+    defaults:\n+      authenticate: true # <3>\n+    paths:\n+      - path: \"/metrics[/{*}]\" # <4>\n+        roles-allowed: \"admin\"\n+      - path: \"/health[/{*}]\" # <5>\n+        roles-allowed: \"monitor\"\n+      - path: \"/openapi[/{*}]\" # <6>\n+        abac:\n+          scopes: [\"openapi\"]\n+      - path: \"/static[/{*}]\" # <7>\n+        roles-allowed: [\"user\", \"monitor\"]\n+----\n+\n+<1> Attribute based access control provider that checks roles and scopes\n+<2> The provider(s) used in your application, such as `oidc`\n+<3> Default configuration for all configured paths\n+<4> Protection of `/metrics` and all nested paths with `admin` role required\n+<5> Protection of `/health` and all nested paths with `monitor` role required\n+<6> Protection of `/openapi` and all nested paths with `openapi` scope required\n+<7> Protection of static content configured on `/static` path with either `user` or `monitor` role required\n+\n+If you need to use a properties file, such as for `microprofile-config.properties`, you", "originalCommit": "1c8654a1572f01ca143c7d3fb9c49e9f703c4a33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4Njc1NA==", "url": "https://github.com/oracle/helidon/pull/2411#discussion_r501686754", "bodyText": "Web Server", "author": "ljamen", "createdAt": "2020-10-08T12:38:56Z", "path": "examples/security/basic-auth-with-static-content/README.md", "diffHunk": "@@ -0,0 +1,31 @@\n+# Web Server Integration and Basic Authentication\n+\n+This example demonstrates Integration of WebServer", "originalCommit": "1c8654a1572f01ca143c7d3fb9c49e9f703c4a33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}