{"pr_number": 2245, "pr_title": "Add support for MP Metrics 2.3", "pr_createdAt": "2020-08-11T21:01:15Z", "pr_url": "https://github.com/oracle/helidon/pull/2245", "timeline": [{"oid": "b37bc4a8bb90080d13d180c15292433af9436f7e", "url": "https://github.com/oracle/helidon/commit/b37bc4a8bb90080d13d180c15292433af9436f7e", "message": "First impl of and tests for HelidonSimpleTimer", "committedDate": "2020-07-08T20:54:00Z", "type": "commit"}, {"oid": "d9c4a1a701093d5ee3ca102afbed17a17b1b9490", "url": "https://github.com/oracle/helidon/commit/d9c4a1a701093d5ee3ca102afbed17a17b1b9490", "message": "MP changes for metrics 2.3.2", "committedDate": "2020-07-09T23:19:02Z", "type": "commit"}, {"oid": "ac7f14a541f05c2449e72bec1d18d342ba265cdc", "url": "https://github.com/oracle/helidon/commit/ac7f14a541f05c2449e72bec1d18d342ba265cdc", "message": "Fix incorrect JSON keys; add a few missing additions of new simple timer to data structures\n\nSigned-off-by: tim.quinn@oracle.com <tim.quinn@oracle.com>", "committedDate": "2020-07-10T15:21:40Z", "type": "commit"}, {"oid": "ae1f734b760c1f93125c6776b732b24e9508b2a0", "url": "https://github.com/oracle/helidon/commit/ae1f734b760c1f93125c6776b732b24e9508b2a0", "message": "Slight changes to fix omissions", "committedDate": "2020-07-10T20:35:12Z", "type": "commit"}, {"oid": "de43855921409eeca2a6e6c089108f63105901a8", "url": "https://github.com/oracle/helidon/commit/de43855921409eeca2a6e6c089108f63105901a8", "message": "Remove FinalRegistry and its use for the base registry; part of moving to MP metrics 2.3\n\nSigned-off-by: tim.quinn@oracle.com <tim.quinn@oracle.com>", "committedDate": "2020-07-17T15:35:37Z", "type": "commit"}, {"oid": "5b1d387f8eaeb64d4638df0cf2b33cf00e7d58a3", "url": "https://github.com/oracle/helidon/commit/5b1d387f8eaeb64d4638df0cf2b33cf00e7d58a3", "message": "First impl of and tests for HelidonSimpleTimer", "committedDate": "2020-07-17T16:10:40Z", "type": "commit"}, {"oid": "cfa18e73783b95ce8a24061adce58afd77c90c24", "url": "https://github.com/oracle/helidon/commit/cfa18e73783b95ce8a24061adce58afd77c90c24", "message": "MP changes for metrics 2.3.2", "committedDate": "2020-07-17T16:10:40Z", "type": "commit"}, {"oid": "8d0e593706d8812ccc8c37e1b5092eb5b87053a6", "url": "https://github.com/oracle/helidon/commit/8d0e593706d8812ccc8c37e1b5092eb5b87053a6", "message": "Fix incorrect JSON keys; add a few missing additions of new simple timer to data structures\n\nSigned-off-by: tim.quinn@oracle.com <tim.quinn@oracle.com>", "committedDate": "2020-07-17T16:10:41Z", "type": "commit"}, {"oid": "2297a0711b2d1763699fe68de89d4aa8532463f1", "url": "https://github.com/oracle/helidon/commit/2297a0711b2d1763699fe68de89d4aa8532463f1", "message": "Slight changes to fix omissions", "committedDate": "2020-07-17T16:10:41Z", "type": "commit"}, {"oid": "db9cb71ed6d88be14897a9f1ebcf0e2264033207", "url": "https://github.com/oracle/helidon/commit/db9cb71ed6d88be14897a9f1ebcf0e2264033207", "message": "Merge branch 'metrics-2.3' of github.com:tjquinno/helidon into metrics-2.3", "committedDate": "2020-07-17T16:11:04Z", "type": "commit"}, {"oid": "01ce3b8e845d2c08193f28525ed7415741ba9546", "url": "https://github.com/oracle/helidon/commit/01ce3b8e845d2c08193f28525ed7415741ba9546", "message": "Work-in-progress for triggering interceptor behavior for synthetically-annotated methods; not yet working", "committedDate": "2020-07-18T22:15:00Z", "type": "commit"}, {"oid": "2c5f7feb9975708aab74643f496b688e5a4f3c0a", "url": "https://github.com/oracle/helidon/commit/2c5f7feb9975708aab74643f496b688e5a4f3c0a", "message": "Concurrent changes", "committedDate": "2020-07-21T19:06:33Z", "type": "commit"}, {"oid": "108f9aa275f4772430abcf544cb8095fe526259c", "url": "https://github.com/oracle/helidon/commit/108f9aa275f4772430abcf544cb8095fe526259c", "message": "Changes to implement REST.request inferred metric on JAX-RS endpoints", "committedDate": "2020-07-24T19:51:20Z", "type": "commit"}, {"oid": "d82e90e9b4064e1ded4d36442cdb4e440e6d5286", "url": "https://github.com/oracle/helidon/commit/d82e90e9b4064e1ded4d36442cdb4e440e6d5286", "message": "Simplify logic for creating and updating synthetic REST.request SimpleTimer metric for each JAX-RS method", "committedDate": "2020-07-26T20:37:53Z", "type": "commit"}, {"oid": "86bff51d390d78d4070f8215184da33bdb9ce49f", "url": "https://github.com/oracle/helidon/commit/86bff51d390d78d4070f8215184da33bdb9ce49f", "message": "Fix synthetic simple metric name to include parameter types", "committedDate": "2020-07-27T04:03:04Z", "type": "commit"}, {"oid": "b09aafeab060b9a2c2661ef0b3a1d6aab76fd7d2", "url": "https://github.com/oracle/helidon/commit/b09aafeab060b9a2c2661ef0b3a1d6aab76fd7d2", "message": "Clarify synthetic, dynamically-added annotation added to JAX-RS endpoints to trigger REST.request SimpleTimer updates", "committedDate": "2020-07-27T22:17:53Z", "type": "commit"}, {"oid": "23ff3016eb540eaf89f5a72272e7b222070a2b68", "url": "https://github.com/oracle/helidon/commit/23ff3016eb540eaf89f5a72272e7b222070a2b68", "message": "A few improvements and comment changes", "committedDate": "2020-07-28T14:38:55Z", "type": "commit"}, {"oid": "f2026a82cfd1c0e6a4a4a78047ff73646397fa79", "url": "https://github.com/oracle/helidon/commit/f2026a82cfd1c0e6a4a4a78047ff73646397fa79", "message": "Add config control over synthetic SimplyTimed annos on JAX-RS endpoints; defaults to false", "committedDate": "2020-07-29T01:20:30Z", "type": "commit"}, {"oid": "a08d9c3ca2afd0ca95064e5a8182a8a7a992a6c8", "url": "https://github.com/oracle/helidon/commit/a08d9c3ca2afd0ca95064e5a8182a8a7a992a6c8", "message": "Some clean-up\n\nSigned-off-by: tim.quinn@oracle.com <tim.quinn@oracle.com>", "committedDate": "2020-07-29T02:37:06Z", "type": "commit"}, {"oid": "1c8af5df730c815ad6c0697763a8481498c7884a", "url": "https://github.com/oracle/helidon/commit/1c8af5df730c815ad6c0697763a8481498c7884a", "message": "Update the TCK pom", "committedDate": "2020-07-29T21:04:14Z", "type": "commit"}, {"oid": "1af2430c2cc8fe9d9507638578ef6514498a1579", "url": "https://github.com/oracle/helidon/commit/1af2430c2cc8fe9d9507638578ef6514498a1579", "message": "Slight revision in tests", "committedDate": "2020-07-29T21:05:48Z", "type": "commit"}, {"oid": "cabd20226410c7dfe4142ed031a5e36b81612281", "url": "https://github.com/oracle/helidon/commit/cabd20226410c7dfe4142ed031a5e36b81612281", "message": "Concurrent changes", "committedDate": "2020-08-05T15:40:00Z", "type": "commit"}, {"oid": "340b642c5eb0ddc4b81b3cc703d9033c381c3cc0", "url": "https://github.com/oracle/helidon/commit/340b642c5eb0ddc4b81b3cc703d9033c381c3cc0", "message": "Add non-public method to retrieve MetricID/HelidonMetric pairs given a name", "committedDate": "2020-08-06T20:26:12Z", "type": "commit"}, {"oid": "14c2c3c83e3c3a62c4a45d9792a6c12a053b23c1", "url": "https://github.com/oracle/helidon/commit/14c2c3c83e3c3a62c4a45d9792a6c12a053b23c1", "message": "Make sure TYPE is emitted to Prometheus/OpenMetrics output only when requested", "committedDate": "2020-08-06T20:27:27Z", "type": "commit"}, {"oid": "d79fc7b6e410b90c4598e869db3672dcec29b308", "url": "https://github.com/oracle/helidon/commit/d79fc7b6e410b90c4598e869db3672dcec29b308", "message": "Fix behavior of /metrics/registryName/metricName to report all matching metrics\n\nSigned-off-by: tim.quinn@oracle.com <tim.quinn@oracle.com>", "committedDate": "2020-08-06T20:28:28Z", "type": "commit"}, {"oid": "5cc67062b4168f3fcabc5377f1e5e88b92773dab", "url": "https://github.com/oracle/helidon/commit/5cc67062b4168f3fcabc5377f1e5e88b92773dab", "message": "Significant further steps in passing the 2.3 TCK", "committedDate": "2020-08-07T19:22:57Z", "type": "commit"}, {"oid": "de312fd47c9612aeee0751c1d55d04d9a42b4783", "url": "https://github.com/oracle/helidon/commit/de312fd47c9612aeee0751c1d55d04d9a42b4783", "message": "Undo temp change in module-info", "committedDate": "2020-08-07T19:27:11Z", "type": "commit"}, {"oid": "3901384030fc18c321baed4e47a1bf11e578e2d1", "url": "https://github.com/oracle/helidon/commit/3901384030fc18c321baed4e47a1bf11e578e2d1", "message": "Restore earlier blank in module-info", "committedDate": "2020-08-07T19:29:07Z", "type": "commit"}, {"oid": "54ff8bc8c18ff19f790e5c47f753a6ddcfd3fb46", "url": "https://github.com/oracle/helidon/commit/54ff8bc8c18ff19f790e5c47f753a6ddcfd3fb46", "message": "Concurrent changes", "committedDate": "2020-08-07T20:01:06Z", "type": "commit"}, {"oid": "25af2c9932de7f01c06aa3cec74d5f9f2f533437", "url": "https://github.com/oracle/helidon/commit/25af2c9932de7f01c06aa3cec74d5f9f2f533437", "message": "Move custom param converter and related logic from microprofile/metrics to microprofile/tests/tck/tck-metrics so it cannot even accidentally be used by developers", "committedDate": "2020-08-07T22:53:10Z", "type": "commit"}, {"oid": "46c1ab43818e7414357784a560f6c8b4fc160656", "url": "https://github.com/oracle/helidon/commit/46c1ab43818e7414357784a560f6c8b4fc160656", "message": "Expose a way to retrieve the current Helidon flavor from features", "committedDate": "2020-08-10T23:25:04Z", "type": "commit"}, {"oid": "043dcb9b11b1bf9b51570ac3ba955405e7957a1d", "url": "https://github.com/oracle/helidon/commit/043dcb9b11b1bf9b51570ac3ba955405e7957a1d", "message": "Add support for optional MP REST.request metrics from SE", "committedDate": "2020-08-10T23:32:45Z", "type": "commit"}, {"oid": "8ab874f5f6f70e1d37762f4a529ffc30327b5c96", "url": "https://github.com/oracle/helidon/commit/8ab874f5f6f70e1d37762f4a529ffc30327b5c96", "message": "Change config key used for controlling REST.request feature", "committedDate": "2020-08-10T23:34:49Z", "type": "commit"}, {"oid": "ea9e8ce468c2ec0989a1163e7d0026df2b9ff81d", "url": "https://github.com/oracle/helidon/commit/ea9e8ce468c2ec0989a1163e7d0026df2b9ff81d", "message": "Reflect change in config key controlling REST.request behavior", "committedDate": "2020-08-10T23:35:39Z", "type": "commit"}, {"oid": "4e3f9e2981abf7bf4d501d700942c5709468239a", "url": "https://github.com/oracle/helidon/commit/4e3f9e2981abf7bf4d501d700942c5709468239a", "message": "Update QuickStart examples for REST.request support", "committedDate": "2020-08-10T23:36:25Z", "type": "commit"}, {"oid": "22e2f49b9fa140b2ddc6f9edffaf4a6867e333e6", "url": "https://github.com/oracle/helidon/commit/22e2f49b9fa140b2ddc6f9edffaf4a6867e333e6", "message": "Fix typo in comments about which registry REST.request metrics appear in", "committedDate": "2020-08-10T23:57:36Z", "type": "commit"}, {"oid": "991884611213243ef8114d2491a2b4cd3bd2c7ad", "url": "https://github.com/oracle/helidon/commit/991884611213243ef8114d2491a2b4cd3bd2c7ad", "message": "Enable REST.request metrics in hello-world implicit and explicit examples", "committedDate": "2020-08-10T23:58:06Z", "type": "commit"}, {"oid": "e2ea732e73032cd01a987c4414e259016b6fa5fb", "url": "https://github.com/oracle/helidon/commit/e2ea732e73032cd01a987c4414e259016b6fa5fb", "message": "Update doc pages to reflect SimpleTimer and, for MP, SimplyTimed and REST.request metrics", "committedDate": "2020-08-11T16:41:16Z", "type": "commit"}, {"oid": "b7f7c56ffdd84cfafc4f74e249188316e1b5c3ce", "url": "https://github.com/oracle/helidon/commit/b7f7c56ffdd84cfafc4f74e249188316e1b5c3ce", "message": "Turn on REST.request support in MP quickstart archetype; remove SE quickstart uses of REST.request", "committedDate": "2020-08-11T16:44:05Z", "type": "commit"}, {"oid": "05b1916be7c080f321673f9573d21de451b21889", "url": "https://github.com/oracle/helidon/commit/05b1916be7c080f321673f9573d21de451b21889", "message": "Remove changes supporting SE implementation of REST.request convenience methods", "committedDate": "2020-08-11T16:52:36Z", "type": "commit"}, {"oid": "e5f9039ee5891cb338eab512cd10cc7a4cdba129", "url": "https://github.com/oracle/helidon/commit/e5f9039ee5891cb338eab512cd10cc7a4cdba129", "message": "Resolve deployment URI for Arquillian in optional TCK tests for REST.request tests", "committedDate": "2020-08-11T16:54:24Z", "type": "commit"}, {"oid": "6247ab017ba89c9bdb654dbe1d8d6b816731e9e0", "url": "https://github.com/oracle/helidon/commit/6247ab017ba89c9bdb654dbe1d8d6b816731e9e0", "message": "Fix incorrect change to HelidonFeatures; meant to remove the new method returning the current flavor but instead removed the method that sets the flavor -- which is essential", "committedDate": "2020-08-11T17:18:04Z", "type": "commit"}, {"oid": "5c527abaedbeddc793c914bab88bc337a80990d9", "url": "https://github.com/oracle/helidon/commit/5c527abaedbeddc793c914bab88bc337a80990d9", "message": "Remove now-unused setting for SE REST.request enable setting", "committedDate": "2020-08-11T17:27:47Z", "type": "commit"}, {"oid": "3ac7790b69c0c7d8eecf0ff9cc8ce2e854cf6384", "url": "https://github.com/oracle/helidon/commit/3ac7790b69c0c7d8eecf0ff9cc8ce2e854cf6384", "message": "Restore accidentally-removed exclusion", "committedDate": "2020-08-11T17:32:32Z", "type": "commit"}, {"oid": "58a19d6607160dee4be2fac1f5223a3ccbcded40", "url": "https://github.com/oracle/helidon/commit/58a19d6607160dee4be2fac1f5223a3ccbcded40", "message": "Fix typo in earlier correction", "committedDate": "2020-08-11T18:04:41Z", "type": "commit"}, {"oid": "fc4dc099ac04eba9aaf0340742ed16d948c95859", "url": "https://github.com/oracle/helidon/commit/fc4dc099ac04eba9aaf0340742ed16d948c95859", "message": "Explicitly disable REST.request support in MP examples and the MP bare archetype to emphasize that the feature is there without turning it on.", "committedDate": "2020-08-11T18:12:21Z", "type": "commit"}, {"oid": "433d336d8a5a131200adb13fa755be60e8e1535c", "url": "https://github.com/oracle/helidon/commit/433d336d8a5a131200adb13fa755be60e8e1535c", "message": "Some clean-up: remove unused code, etc.", "committedDate": "2020-08-11T18:56:22Z", "type": "commit"}, {"oid": "dd8b365c1398a10a6abac898a4d6d6cdf3083897", "url": "https://github.com/oracle/helidon/commit/dd8b365c1398a10a6abac898a4d6d6cdf3083897", "message": "Remove unused import", "committedDate": "2020-08-11T19:35:00Z", "type": "commit"}, {"oid": "5b08e3f8227db2f6679bbc4e0be54961aa7d4232", "url": "https://github.com/oracle/helidon/commit/5b08e3f8227db2f6679bbc4e0be54961aa7d4232", "message": "Fix typo in name", "committedDate": "2020-08-11T20:18:16Z", "type": "commit"}, {"oid": "2a32e1613fc1aba008ff211686b09d9e0bc7a648", "url": "https://github.com/oracle/helidon/commit/2a32e1613fc1aba008ff211686b09d9e0bc7a648", "message": "Fix missing blank line at end of file", "committedDate": "2020-08-11T21:42:04Z", "type": "commit"}, {"oid": "6c2db843037dffc8261e2c8f20bbc888ed794161", "url": "https://github.com/oracle/helidon/commit/6c2db843037dffc8261e2c8f20bbc888ed794161", "message": "Fix copyright errors", "committedDate": "2020-08-11T21:50:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg2OTIwMA==", "url": "https://github.com/oracle/helidon/pull/2245#discussion_r468869200", "bodyText": "Maybe a link here?", "author": "ljnelson", "createdAt": "2020-08-11T21:15:32Z", "path": "docs/mp/guides/05_metrics.adoc", "diffHunk": "@@ -166,6 +184,19 @@ curl -H \"Accept: application/json\"  http://localhost:8080/metrics/vendor/grpc.re\n \n NOTE: You cannot get the individual fields of a metric. For example, you cannot target http://localhost:8080/metrics/vendor/grpc.requests.meter.count.\n \n+==== Controlling `REST.request` metrics\n+Helidon implements the optional family of metrics, all with the name `REST.request`, as described in the", "originalCommit": "5b08e3f8227db2f6679bbc4e0be54961aa7d4232", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg5MzEyOA==", "url": "https://github.com/oracle/helidon/pull/2245#discussion_r468893128", "bodyText": "Sigh. I had started to include one and got distracted and forgot to. Adding it.", "author": "tjquinno", "createdAt": "2020-08-11T22:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg2OTIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTA2NA==", "url": "https://github.com/oracle/helidon/pull/2245#discussion_r468871064", "bodyText": "Dim recollection here that this is quite expensive to invoke with every call; I seem to recall some other class that can be cached statically to give you a new builder.", "author": "ljnelson", "createdAt": "2020-08-11T21:19:29Z", "path": "metrics/metrics/src/main/java/io/helidon/metrics/HelidonSimpleTimer.java", "diffHunk": "@@ -0,0 +1,257 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package io.helidon.metrics;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import javax.json.JsonObjectBuilder;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricID;\n+import org.eclipse.microprofile.metrics.MetricType;\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.SimpleTimer;\n+\n+/**\n+ * Implementation of {@link SimpleTimer}.\n+ */\n+final class HelidonSimpleTimer extends MetricImpl implements SimpleTimer {\n+    private final SimpleTimer delegate;\n+\n+    private HelidonSimpleTimer(String type, Metadata metadata, SimpleTimer delegate) {\n+        super(type, metadata);\n+        this.delegate = delegate;\n+    }\n+\n+    static HelidonSimpleTimer create(String repoType, Metadata metadata) {\n+        return create(repoType, metadata, Clock.system());\n+    }\n+\n+    static HelidonSimpleTimer create(String repoType, Metadata metadata, Clock clock) {\n+        return create(repoType, metadata, new SimpleTimerImpl(repoType, metadata.getName(), clock));\n+    }\n+\n+    static HelidonSimpleTimer create(String repoType, Metadata metadata, SimpleTimer metric) {\n+        return new HelidonSimpleTimer(repoType, metadata, metric);\n+    }\n+\n+    @Override\n+    public void update(Duration duration) {\n+        delegate.update(duration);\n+    }\n+\n+    @Override\n+    public <T> T time(Callable<T> event) throws Exception {\n+        return delegate.time(event);\n+    }\n+\n+    @Override\n+    public void time(Runnable event) {\n+        delegate.time(event);\n+    }\n+\n+    @Override\n+    public Context time() {\n+        return delegate.time();\n+    }\n+\n+    @Override\n+    public long getCount() {\n+        return delegate.getCount();\n+    }\n+\n+    @Override\n+    public Duration getElapsedTime() {\n+        return delegate.getElapsedTime();\n+    }\n+\n+    @Override\n+    public void prometheusData(StringBuilder sb, MetricID metricID, boolean withHelpType) {\n+        String promName;\n+        String name = metricID.getName();\n+        String tags = prometheusTags(metricID.getTags());\n+        promName = prometheusName(name) + \"_total\";\n+        if (withHelpType) {\n+            prometheusType(sb, promName, \"counter\");\n+            prometheusHelp(sb, promName);\n+        }\n+        sb.append(promName)\n+                .append(tags)\n+                .append(\" \")\n+                .append(getCount())\n+                .append(\"\\n\");\n+\n+        promName = prometheusNameWithUnits(name + \"_elapsedTime\", Optional.of(MetricUnits.SECONDS));\n+        if (withHelpType) {\n+            prometheusType(sb, promName, \"gauge\");\n+            // By spec, no help for the elapsedTime part of SimpleTimer.\n+        }\n+        sb.append(promName)\n+                .append(tags)\n+                .append(\" \")\n+                .append(elapsedTimeInSeconds())\n+                .append(\"\\n\");\n+    }\n+\n+    @Override\n+    public String prometheusValue() {\n+        throw new UnsupportedOperationException(\"Not supported.\");\n+    }\n+\n+    @Override\n+    public void jsonData(JsonObjectBuilder builder, MetricID metricID) {\n+        JsonObjectBuilder myBuilder = JSON.createObjectBuilder()", "originalCommit": "5b08e3f8227db2f6679bbc4e0be54961aa7d4232", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg5NDI5MA==", "url": "https://github.com/oracle/helidon/pull/2245#discussion_r468894290", "bodyText": "All of our metric implementations use the same pattern. The JSON field (somewhat misnamed) is declared this way:\nstatic final JsonBuilderFactory JSON = \n    Json.createBuilderFactory(Collections.emptyMap());\n\nIIRC the real performance drain was in the createBuilderFactory call but it probably would be good to review all uses of this pattern to see if we can speed things up.", "author": "tjquinno", "createdAt": "2020-08-11T22:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTA2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE0MzY1Nw==", "url": "https://github.com/oracle/helidon/pull/2245#discussion_r469143657", "bodyText": "This is the way to do it. We need to cache the builder factory. JsonObjectBuilder itself is mutable and cannot be used from more than one thread (as it builds a single JSON Object).", "author": "tomas-langer", "createdAt": "2020-08-12T09:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg4NTY0OQ==", "url": "https://github.com/oracle/helidon/pull/2245#discussion_r468885649", "bodyText": "This is probably good enough.  Note that strictly speaking a JAX-RS annotation is one that is, in turn, annotated with HttpMethod.  I'd probably leave this line alone anyway.", "author": "ljnelson", "createdAt": "2020-08-11T21:52:11Z", "path": "microprofile/metrics/src/main/java/io/helidon/microprofile/metrics/MetricsCdiExtension.java", "diffHunk": "@@ -91,14 +102,35 @@\n     private static final Logger LOGGER = Logger.getLogger(MetricsCdiExtension.class.getName());\n \n     private static final List<Class<? extends Annotation>> METRIC_ANNOTATIONS\n-            = Arrays.asList(Counted.class, Metered.class, Timed.class, Gauge.class, ConcurrentGauge.class);\n+            = Arrays.asList(Counted.class, Metered.class, Timed.class, Gauge.class, ConcurrentGauge.class,\n+                            SimplyTimed.class);\n+\n+    private static final List<Class<? extends Annotation>> JAX_RS_ANNOTATIONS", "originalCommit": "2a32e1613fc1aba008ff211686b09d9e0bc7a648", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg5OTEwNA==", "url": "https://github.com/oracle/helidon/pull/2245#discussion_r468899104", "bodyText": "I want to make sure I understand.\nI think you're suggesting that instead of iterating through the individual annotation classes {GET.class, etc.) to see if one is present on a given method we could look for HttpMethod.class`. Is that it?\nRelated, the @Observes @WithAnnotations clause currently lists the individual JAX-RS-related annotations (GET.class, etc.) in the method declaration. Could we also use  HttpMethod.class there?", "author": "tjquinno", "createdAt": "2020-08-11T22:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg4NTY0OQ=="}], "type": "inlineReview"}, {"oid": "41f4604809740699d097ff03bc2c53b29c0a3ffb", "url": "https://github.com/oracle/helidon/commit/41f4604809740699d097ff03bc2c53b29c0a3ffb", "message": "Add link to the metrics spec", "committedDate": "2020-08-11T22:27:20Z", "type": "commit"}, {"oid": "e5620d85766941ecf726f47fbbc2bd5faa80e290", "url": "https://github.com/oracle/helidon/commit/e5620d85766941ecf726f47fbbc2bd5faa80e290", "message": "Open microprofile/metrics to io.helidon.microprofile.cdi also", "committedDate": "2020-08-12T13:13:09Z", "type": "commit"}, {"oid": "8be8ca2ec8f98b2237886de9ad6f32e27d94a85b", "url": "https://github.com/oracle/helidon/commit/8be8ca2ec8f98b2237886de9ad6f32e27d94a85b", "message": "Fix module opens for integration tests", "committedDate": "2020-08-12T18:50:12Z", "type": "commit"}]}