{"pr_number": 3386, "pr_title": "Egeria feature openlineage", "pr_createdAt": "2020-07-27T08:46:15Z", "pr_url": "https://github.com/odpi/egeria/pull/3386", "timeline": [{"oid": "e57f5989f28ccbce6ac4a1957a2b7cac45f68c8f", "url": "https://github.com/odpi/egeria/commit/e57f5989f28ccbce6ac4a1957a2b7cac45f68c8f", "message": "Error handling improvement, simplified hosts configuration property, code cleanup.\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-07-13T10:43:01Z", "type": "commit"}, {"oid": "d70ed5157a5bf820b12113cbf3b4ac9ac12397f1", "url": "https://github.com/odpi/egeria/commit/d70ed5157a5bf820b12113cbf3b4ac9ac12397f1", "message": "Merge pull request #3335 from lpalashevski/egeria-feature-openlineage\n\nOLS, non functional improvements", "committedDate": "2020-07-13T12:00:07Z", "type": "commit"}, {"oid": "8fd0cd526d3fa35a8a91e551653d148aeba8bb20", "url": "https://github.com/odpi/egeria/commit/8fd0cd526d3fa35a8a91e551653d148aeba8bb20", "message": "adding jobIntervalInSeconds for OLS configuration\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-07-14T09:40:39Z", "type": "commit"}, {"oid": "b7a8c8b5b1062b6e95e537fd3ddf68fb09a8471c", "url": "https://github.com/odpi/egeria/commit/b7a8c8b5b1062b6e95e537fd3ddf68fb09a8471c", "message": "Merge pull request #3341 from lpalashevski/update-ansible-adminrole\n\nadding jobIntervalInSeconds for OLS configuration", "committedDate": "2020-07-14T10:14:22Z", "type": "commit"}, {"oid": "2eff0605c691bbab9025f824a170decc45895415", "url": "https://github.com/odpi/egeria/commit/2eff0605c691bbab9025f824a170decc45895415", "message": "OLS - Add Table Level Lineage\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-07-20T10:47:23Z", "type": "commit"}, {"oid": "cb389ecbed1f8f88b6f19e537847c636084639a7", "url": "https://github.com/odpi/egeria/commit/cb389ecbed1f8f88b6f19e537847c636084639a7", "message": "OLS - update unit test with use cases for table level lineage\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-07-20T11:54:22Z", "type": "commit"}, {"oid": "529075490222a1cad3c9d10d1b2466227b95c350", "url": "https://github.com/odpi/egeria/commit/529075490222a1cad3c9d10d1b2466227b95c350", "message": "OLS - update unit test with use cases for table level lineage\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-07-20T12:17:43Z", "type": "commit"}, {"oid": "647825348e136851f2c906fc089b58e1b25c4170", "url": "https://github.com/odpi/egeria/commit/647825348e136851f2c906fc089b58e1b25c4170", "message": "OLS - fix exceptions for querying lineage on unsupported types\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-07-20T13:28:28Z", "type": "commit"}, {"oid": "3268bbd8e2c7182e6e63fb04cc227235bfc3fea5", "url": "https://github.com/odpi/egeria/commit/3268bbd8e2c7182e6e63fb04cc227235bfc3fea5", "message": "OLS - Process optimization flag\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-07-20T17:07:55Z", "type": "commit"}, {"oid": "8985f4e8deecb2c5fbfba735b213d32b4fb85b95", "url": "https://github.com/odpi/egeria/commit/8985f4e8deecb2c5fbfba735b213d32b4fb85b95", "message": "Merge pull request #3360 from popa-raluca/table-lineage\n\nOLS - Add table level lineage", "committedDate": "2020-07-21T11:53:12Z", "type": "commit"}, {"oid": "ca7cf25fba6847a0f2ec437fb19b8b748c89081b", "url": "https://github.com/odpi/egeria/commit/ca7cf25fba6847a0f2ec437fb19b8b748c89081b", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into egeria-feature-openlineage\n\n\u0001 Conflicts:\n\u0001\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java", "committedDate": "2020-07-22T10:59:05Z", "type": "commit"}, {"oid": "b1ad507e9965720b59cece404e5ba43027027098", "url": "https://github.com/odpi/egeria/commit/b1ad507e9965720b59cece404e5ba43027027098", "message": "OLS - Process optimization flag\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-07-22T12:24:38Z", "type": "commit"}, {"oid": "119752a18e41e1809de4814d2cfa3c5d119f2314", "url": "https://github.com/odpi/egeria/commit/119752a18e41e1809de4814d2cfa3c5d119f2314", "message": "Merge pull request #3364 from lcpopa/egeria-feature-openlineage\n\nOLS - Process optimization flag", "committedDate": "2020-07-22T13:48:06Z", "type": "commit"}, {"oid": "5751f48c3b03eec87d2fdcf6fd73cc8a7c7bd899", "url": "https://github.com/odpi/egeria/commit/5751f48c3b03eec87d2fdcf6fd73cc8a7c7bd899", "message": "Merge branch 'master' of github.com:odpi/egeria into egeria-feature-openlineage\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>\n\n# Conflicts:\n#\topen-metadata-implementation/access-services/asset-lineage/asset-lineage-api/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/event/AssetLineageEventHeader.java\n#\topen-metadata-implementation/access-services/asset-lineage/asset-lineage-api/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/model/LineageRelationship.java\n#\topen-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/ClassificationHandler.java\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/pom.xml\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/factory/GraphFactory.java\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/factory/JanusFactoryBeans.java\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/utils/GraphConstants.java\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/test/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/maingraph/MainGraphConnectorTest.java\n#\topen-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/OpenLineageServerConfig.java\n#\topen-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-api/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/graph/LineageGraph.java\n#\topen-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-api/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/graph/LineageGraphConnectorBase.java\n#\topen-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/admin/OpenLineageServerOperationalServices.java\n#\topen-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/listeners/OpenLineageInTopicListener.java\n#\topen-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/scheduler/JobConfiguration.java\n#\topen-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/services/StoringServices.java\n#\topen-metadata-resources/open-metadata-deployment/ansible-egeria/roles/egeria-omag-server-admin/tasks/server.yml", "committedDate": "2020-07-23T06:38:32Z", "type": "commit"}, {"oid": "c3bd3444992b70ee90b6098599c61770278a5366", "url": "https://github.com/odpi/egeria/commit/c3bd3444992b70ee90b6098599c61770278a5366", "message": "Merge branch 'master' into egeria-feature-openlineage", "committedDate": "2020-07-23T07:23:11Z", "type": "commit"}, {"oid": "ee0490a03f34573034936fcb9cc743ef55440ce2", "url": "https://github.com/odpi/egeria/commit/ee0490a03f34573034936fcb9cc743ef55440ce2", "message": "Merge branch 'egeria-feature-openlineage' of github.com:odpi/egeria into egeria-feature-openlineage", "committedDate": "2020-07-23T07:32:47Z", "type": "commit"}, {"oid": "452e2a673cca76678bb3b609644b7a4f7a4e8efe", "url": "https://github.com/odpi/egeria/commit/452e2a673cca76678bb3b609644b7a4f7a4e8efe", "message": "Minor functional adjustment, rename of the flag property\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-07-23T12:46:33Z", "type": "commit"}, {"oid": "b0214ba96b85533abca7fef1cb02af77c2f113b0", "url": "https://github.com/odpi/egeria/commit/b0214ba96b85533abca7fef1cb02af77c2f113b0", "message": "Merge pull request #3377 from lpalashevski/egeria-feature-openlineage\n\nUpdates from master", "committedDate": "2020-07-23T13:41:18Z", "type": "commit"}, {"oid": "a6e83596ce367bc52f0e52b3330c182665e2b5e5", "url": "https://github.com/odpi/egeria/commit/a6e83596ce367bc52f0e52b3330c182665e2b5e5", "message": "Adding back the ansible playbooks removed by mistake during previous merge form master.\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-07-23T14:34:31Z", "type": "commit"}, {"oid": "98c387a030664b4b0d4db694ce715c7fee030afe", "url": "https://github.com/odpi/egeria/commit/98c387a030664b4b0d4db694ce715c7fee030afe", "message": "Merge pull request #3380 from lpalashevski/egeria-feature-openlineage\n\nAdding back the ansible playbooks removed by mistake", "committedDate": "2020-07-23T15:47:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMDQ3Ng==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461610476", "bodyText": "Generally rest api focusses on a noun (the resource) and a verb - only convention, but just stands out as a slightly odd name (minor)", "author": "planetf1", "createdAt": "2020-07-28T14:10:38Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-spring/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/server/spring/AssetLineageResource.java", "diffHunk": "@@ -5,18 +5,33 @@\n import io.swagger.v3.oas.annotations.ExternalDocumentation;\n import io.swagger.v3.oas.annotations.tags.Tag;\n import org.odpi.openmetadata.accessservices.assetlineage.server.AssetLineageRestServices;\n+import org.odpi.openmetadata.commonservices.ffdc.rest.GUIDListResponse;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RestController;\n \n \n @RestController\n @RequestMapping(\"/servers/{serverName}/open-metadata/access-services/asset-lineage/users/{userId}/\")\n \n-@Tag(name=\"Asset Lineage OMAS\", description=\"The Asset Lineage OMAS provides services to query the lineage of business terms and data assets.\", externalDocs=@ExternalDocumentation(description=\"Asset Lineage Open Metadata Access Service (OMAS)\",url=\"https://egeria.odpi.org/open-metadata-implementation/access-services/asset-lineage/\"))\n+@Tag(name = \"Asset Lineage OMAS\", description = \"The Asset Lineage OMAS provides services to query the lineage of business terms and data assets.\", externalDocs = @ExternalDocumentation(description = \"Asset Lineage Open Metadata Access Service (OMAS)\", url = \"https://egeria.odpi.org/open-metadata-implementation/access-services/asset-lineage/\"))\n public class AssetLineageResource {\n \n     private final AssetLineageRestServices restAPI = new AssetLineageRestServices();\n \n-\n-\n+    /**\n+     * Scan the cohort based on the given entity type\n+     *\n+     * @param serverName name of server instance to call\n+     * @param userId     the name of the calling user\n+     * @param entityType the name of the relationship type\n+     * @return a list of unique identifiers (guids) of the available entities with the given type provided as a response\n+     */\n+    @GetMapping(path = \"/initial-load-by-entity-type/{entityType}\")", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyNjg5NQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462926895", "bodyText": "@planetf1 agreed. Initial load and a get seems odd. How about a method name of getEntityGuids or getEntityGuidsByType.\nOn the url I would expect a segment with the name of the resource followed by a resource identifier. The urldoes not following this pattern. In this scheme I would expect the the entityType to be a query param not in the url. I suggest  /entity-guids?entityType={entityType}", "author": "davidradl", "createdAt": "2020-07-30T11:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMDQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzNTczNA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r463635734", "bodyText": "I agree that we can improve the action name for this endpoint. However, this is not regular get resource endpoint that returns result but a trigger to a processing operation that will in turn publish the results as events. It is more like action command endpoint. In its nature it is more close to async call but I am not sure if this is important for the naming/design convention. In absence of @danielaotelea  I suggest to change the name to something like /triggerInitialLoadByType/{entityType} or /initialLoadByType/{entityType}", "author": "lpalashevski", "createdAt": "2020-07-31T14:12:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMDQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzNzg2Ng==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r463637866", "bodyText": "or maybe /publishEntitiesByType/{entityType} ?", "author": "lpalashevski", "createdAt": "2020-07-31T14:16:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMDQ3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMzM3Mw==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461613373", "bodyText": "I note this is only required at runtime. At some point (but not for this PR) we should revisit what maven artifacts really are dependencies we want to capture / have as hard dependencies, always, and which are just down to specific configurations - in which case it's more a deployment activity (and helps to reduce explosion of dependencies). Here I can see we are adding to classpath so that we get the config we want (and files below support this) which is fine for now", "author": "planetf1", "createdAt": "2020-07-28T14:13:45Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/pom.xml", "diffHunk": "@@ -91,18 +86,28 @@\n         </dependency>\n \n \n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <!-- berkeley & lucene aren't compile dependencies, so need exception for maven dependency plugin -->\n         <dependency>\n             <groupId>org.janusgraph</groupId>\n             <artifactId>janusgraph-berkeleyje</artifactId>\n         </dependency>\n+        <!-- https://mvnrepository.com/artifact/org.janusgraph/janusgraph-inmemory -->\n+        <dependency>\n+            <groupId>org.janusgraph</groupId>\n+            <artifactId>janusgraph-inmemory</artifactId>", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY1MTAwNQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r463651005", "bodyText": "@marius-patrascu Let's check if we need to scope the dependency since this is only used during build/test cycle.", "author": "lpalashevski", "createdAt": "2020-07-31T14:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMzM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3MzMzNw==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r463673337", "bodyText": "Yes if only used by test, it would be good to scope to that.\nIf you do make this change it would be really nice if you could explain the change & how the inmemory dependency is used, as I'm in the process of adding a gradle build (poc) which will need changes in the 'build.gradle'.  Currently the inmemory repo is not actually referenced there, and the build runs (with default tests) but perhaps not all testcases or running. It's easier to keep changes in sync as the poms get updated\nBut this isn't a blocker - otherwise can do once the maven change is made, as there's a long way to go on the gradle side.", "author": "planetf1", "createdAt": "2020-07-31T15:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMzM3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxNTQ2OQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461615469", "bodyText": "I think this should be debug -- same for other instances", "author": "planetf1", "createdAt": "2020-07-28T14:15:41Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/factory/GraphGremlinBase.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.factory;\n+\n+import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource;\n+import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.apache.tinkerpop.gremlin.structure.util.GraphFactory;\n+import org.odpi.openmetadata.frameworks.connectors.properties.ConnectionProperties;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Map;\n+\n+\n+public class GraphGremlinBase {\n+\n+    private static final Logger log = LoggerFactory.getLogger(GraphGremlinBase.class);\n+\n+    protected Graph graph;\n+    protected GraphTraversalSource g;\n+    protected boolean supportingTransactions;\n+    protected Map<String,Object> properties;\n+\n+\n+    /**\n+     * Constructs a graph using the given properties.\n+     * @param connectionProperties the properties coming from the request\n+     */\n+    public GraphGremlinBase(ConnectionProperties connectionProperties){\n+        this.properties = connectionProperties.getConfigurationProperties();\n+    }\n+\n+\n+    /**\n+     * Opens the graph instance. If the graph instance does not exist, a new\n+     * graph instance will be initialized.\n+     */\n+    public GraphTraversalSource openGraph() {\n+        log.info(\"Trying to open the graph\");", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxNjMzNw==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461616337", "bodyText": "looks like debug to me? Any essential info should be audit log", "author": "planetf1", "createdAt": "2020-07-28T14:16:32Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/factory/IndexingFactory.java", "diffHunk": "@@ -26,13 +30,23 @@\n      * @param propertyKeyName - the property name that is stored in the graph\n      * @param unique - if the propery name is unique or not\n      * @param graph - graph instance to create the indexes\n+     * @param type - type\n      */\n     protected void createCompositeIndexForProperty(String propertyName,\n                                                    String propertyKeyName,\n                                                    boolean unique,\n                                                    JanusGraph graph,\n                                                    Class type) {\n-        String indexName = \"vertexIndexComposite\" + propertyKeyName;\n+\n+        String indexName = null;\n+        if(Vertex.class.equals(type)){\n+            indexName = \"vertexIndexComposite\" + propertyKeyName;\n+        }\n+        else if (Edge.class.equals(type)){\n+            indexName = \"edgeIndexComposite\" + propertyKeyName;\n+\n+        }\n+\n         log.info(\"INDEX to be created {}\", indexName);", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxNzUwNw==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461617507", "bodyText": "debug is fine, but for operational this needs to return to caller via exceptions & admin via audit events... I'l leave this as a general point and not comment further on other occurrances in the PR. The error handling here too shouldn't be based on ha", "author": "planetf1", "createdAt": "2020-07-28T14:17:50Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java", "diffHunk": "@@ -0,0 +1,753 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.graph;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource;\n+import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__;\n+import org.apache.tinkerpop.gremlin.structure.Column;\n+import org.apache.tinkerpop.gremlin.structure.Edge;\n+import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.apache.tinkerpop.gremlin.structure.Vertex;\n+import org.odpi.openmetadata.accessservices.assetlineage.model.GraphContext;\n+import org.odpi.openmetadata.accessservices.assetlineage.model.LineageEntity;\n+import org.odpi.openmetadata.accessservices.assetlineage.model.LineageRelationship;\n+import org.odpi.openmetadata.governanceservers.openlineage.ffdc.OpenLineageException;\n+import org.odpi.openmetadata.governanceservers.openlineage.ffdc.OpenLineageServerErrorCode;\n+import org.odpi.openmetadata.governanceservers.openlineage.graph.LineageGraphConnectorBase;\n+import org.odpi.openmetadata.governanceservers.openlineage.model.LineageVerticesAndEdges;\n+import org.odpi.openmetadata.governanceservers.openlineage.model.Scope;\n+import org.odpi.openmetadata.governanceservers.openlineage.responses.LineageResponse;\n+import org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.factory.GraphFactory;\n+import org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.model.JanusConnectorErrorCode;\n+import org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.model.ffdc.JanusConnectorException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.addE;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.addV;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.bothE;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.hasLabel;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.inE;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.inV;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.or;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.outV;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.unfold;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.ASSET_SCHEMA_TYPE;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.ATTRIBUTE_FOR_SCHEMA;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.DATA_FILE;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.LINEAGE_MAPPING;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.NESTED_SCHEMA_ATTRIBUTE;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.PORT_DELEGATION;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.PORT_IMPLEMENTATION;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.PORT_SCHEMA;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.PROCESS;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.PROCESS_PORT;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.RELATIONAL_COLUMN;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.RELATIONAL_TABLE;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.TABULAR_COLUMN;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_CLASSIFICATION;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_COLUMN_DATA_FLOW;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_INCLUDED_IN;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_TABLE_DATA_FLOW;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.NODE_LABEL_SUB_PROCESS;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_DISPLAY_NAME;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_CREATED_BY;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_CREATE_TIME;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_GUID;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_NODE_ID;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_UPDATED_BY;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_UPDATE_TIME;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_VERSION;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_INSTANCEPROP_DISPLAY_NAME;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_LABEL;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_METADATA_ID;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_PREFIX_ELEMENT;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_PREFIX_INSTANCE_PROPERTY;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_PROCESS_LINEAGE_COMPLETED_FLAG;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_RELATIONSHIP_GUID;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_NAME_PORT_TYPE;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_NAME_PROCESS_LINEAGE_COMPLETED_FLAG;\n+\n+public class LineageGraphConnector extends LineageGraphConnectorBase {\n+\n+    private static final Logger log = LoggerFactory.getLogger(LineageGraphConnector.class);\n+    private LineageGraphConnectorHelper helper;\n+    private GraphTraversalSource g;\n+    private GraphFactory graphFactory;\n+\n+    /**\n+     * Instantiates the graph based on the configuration passed.\n+     */\n+    public void initializeGraphDB() throws OpenLineageException {\n+\n+        try {\n+            graphFactory = new GraphFactory();\n+            this.g = graphFactory.openGraph(connectionProperties.getConnectorType().getConnectorProviderClassName(), connectionProperties);\n+            if (g == null) {\n+                log.error(\"The graphTraversal is empty connection with the graph is not established\");", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYyMzQzMg==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461623432", "bodyText": "How heavy are these tests? If they require additional components to start, we should run them as functional tests rather than unit tests -- ie using failsafe not surefire. Both in terms of build reliability and performance. All this would really need is a change in test case name - convention is IT.java ie 'GraphIT.java' like our FVTs -- the tests then run in the integration test lifecycle phase. (also possible to change in maven pom, but going by convention is easier). perhaps not needed if tests reliable/quick", "author": "planetf1", "createdAt": "2020-07-28T14:25:42Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/test/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/maingraph/LineageGraphConnectorHelperTest.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.maingraph;\n+\n+import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource;\n+import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.apache.tinkerpop.gremlin.structure.Vertex;\n+import org.janusgraph.core.JanusGraph;\n+import org.janusgraph.core.JanusGraphFactory;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.odpi.openmetadata.governanceservers.openlineage.model.LineageVertex;\n+import org.odpi.openmetadata.governanceservers.openlineage.model.LineageVerticesAndEdges;\n+import org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.graph.LineageGraphConnectorHelper;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.DATA_FILE;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.PROCESS;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.RELATIONAL_TABLE;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.Constants.TABULAR_COLUMN;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_COLUMN_DATA_FLOW;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_RELATED_TERM;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_SEMANTIC_ASSIGNMENT;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.EDGE_LABEL_TABLE_DATA_FLOW;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.NODE_LABEL_GLOSSARYTERM;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.NODE_LABEL_SUB_PROCESS;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_GUID;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_KEY_ENTITY_NODE_ID;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_VALUE_NODE_ID_CONDENSED_DESTINATION;\n+import static org.odpi.openmetadata.openconnectors.governancedaemonconnectors.openlineageconnectors.janusconnector.utils.GraphConstants.PROPERTY_VALUE_NODE_ID_CONDENSED_SOURCE;\n+\n+public class LineageGraphConnectorHelperTest {", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYyNjMwOA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461626308", "bodyText": "again this needs full handling", "author": "planetf1", "createdAt": "2020-07-28T14:29:27Z", "path": "open-metadata-implementation/governance-servers/data-engine-proxy-services/data-engine-proxy-connector/src/main/java/org/odpi/openmetadata/governanceservers/dataengineproxy/connectors/DataEngineConnectorBase.java", "diffHunk": "@@ -61,6 +61,17 @@ public void setChangesLastSynced(Date time) {\n         }\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Date getOldestChangeSince(Date time) {\n+        if (requiresPolling()) {", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYyODc2Ng==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461628766", "bodyText": "Good to have this explanation. Looks very prudent", "author": "planetf1", "createdAt": "2020-07-28T14:32:31Z", "path": "open-metadata-implementation/governance-servers/data-engine-proxy-services/data-engine-proxy-services-server/README.md", "diffHunk": "@@ -23,6 +23,42 @@ The sequence of changes is important to ensure that we build up the information\n bottom up, so that necessary pre-requisites for various relationships can be created via\n the Data Engine OMAS before attempting to create the relationships themselves.\n \n+## Proxy polling configuration\n+\n+The polling done by the proxy can be optimized through the following settings:\n+\n+- `pollIntervalInSeconds` defines how many seconds to sleep between polling intervals (and defaults\n+    to one minute (`60` seconds))\n+- `batchWindowInSeconds` defines the maximum span through which changes will be searched. This defaults\n+    to one day (`86400` seconds).\n+\n+Based on these settings, the polling operates as follows:\n+\n+1. Retrieves the last synchronization date from the connector (using its `getChangesLastSynced` method).\n+1. Retrieves the oldest change since (1) using the connector's `getOldestChangeSince` method.\n+    1. If there are changes, calculates a change window as the date and time from (2) + the `batchWindowInSeconds`.\n+    1. If there are not changes, retains the date and time retrieved from (1).\n+1. Calculates the current date and time.\n+    1. If there are changes, determines the lesser of this and (2i).\n+    1. If there are not changes, retains the current date and time.\n+1. Retrieves changes (in the order specified above) where (2) < change <= (4).\n+\n+These settings and logic ensure that:", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzMDEyNg==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461630126", "bodyText": "would this result in an audit log every 60s? I wonder if that makes it quite noisy - though maybe that's ok given we can control destination/filter", "author": "planetf1", "createdAt": "2020-07-28T14:34:10Z", "path": "open-metadata-implementation/governance-servers/data-engine-proxy-services/data-engine-proxy-services-server/src/main/java/org/odpi/openmetadata/governanceservers/dataengineproxy/auditlog/DataEngineProxyAuditCode.java", "diffHunk": "@@ -66,11 +61,17 @@\n             \"The user is not authorized for the Data Engine OMAS operation: {0}\",\n             \"The system is unable to process the operation due to the user not being authorized to do so.\",\n             \"Check your OMAS configuration and user authorizations.\"),\n-    UNKNOWN_ERROR(\"DATA-ENGINE-PROXY-0012\",\n-            OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"An unknown error occurred\",\n-            \"The system is unable to process the operation due to an unknown runtime error.\",\n-            \"Check your OMAS configuration and server logs to troubleshoot.\"),\n+    POLLING_TYPE_START(\"DATA-ENGINE-PROXY-0012\",", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNTMzOQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461635339", "bodyText": "might be worth mentioning the major version at least", "author": "planetf1", "createdAt": "2020-07-28T14:40:27Z", "path": "open-metadata-resources/open-metadata-deployment/ansible-egeria/README.md", "diffHunk": "@@ -0,0 +1,166 @@\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+# ODPi Egeria ansible playbooks\n+\n+## Introduction\n+\n+Ansible playbook suite for deploying and managing ODPi Egeria OMAG based applications on native Linux environments. Currently it is tested on RedHat Enterprise Linux distribution.", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNjk1OA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461636958", "bodyText": "we build a distribution and expect to run in that format. Specifically we place additional libs in server/lib. That may change, and also we place .p12 files in the assembly. For the docker image we extract the assembly an used, so just a heads up this will need maint updates as packaging changes (which may well happen soon)", "author": "planetf1", "createdAt": "2020-07-28T14:42:23Z", "path": "open-metadata-resources/open-metadata-deployment/ansible-egeria/README.md", "diffHunk": "@@ -0,0 +1,166 @@\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+# ODPi Egeria ansible playbooks\n+\n+## Introduction\n+\n+Ansible playbook suite for deploying and managing ODPi Egeria OMAG based applications on native Linux environments. Currently it is tested on RedHat Enterprise Linux distribution.\n+\n+### Playbooks\n+\n+Two main playbooks grouping logical sequence of tasks form the related roles.\n+\n+- `sites.yml` - deploy OMAG server application on site and configure it via admin-service.\n+\n+- `sites_cleanup.yml` - un-deploy/clean-up OMAG server application form site.\n+\n+Everything is configurable via set of variables representing one logical application group (i.e. OMAG server profile). For more advanced deployment configurations host groups can be used to configure/deploy multiple instances of OMAG server applications in integrated mode. See configuration and variables section or examples for more details below.\n+\n+>PRIVILEGE ESCALATION: \n+>With the current version of the playbooks it is assumed that the ansible user can do privilege escalation / sudo to manage system level changes like creating systemd configuration files and controlling (start/stop/restart) the service units. For long term the playbooks will be improved so this will become optional so the system changes can be done beforehand by system admins if needed.\n+\n+## Usage\n+\n+#### Deploy\n+\n+``` ansible-playbook site.yml -i inventories/sample -e target=omagserver1``` \n+\n+\n+This will trigger sequence of tasks to install, configure and start OMAG server instances on the target groups described as `omagserver1` under inventory.\n+\n+There is also an option to separately execute sequences by adding following self descriptive tags: `install`,`configure`,`start`.\n+\n+``` ansible-playbook site_cleanup.yml -i inventories/sample -e target=omagserver1 -t install,configure```\n+\n+This will install and configure the OMAG application but it will not start it.\n+\n+#### Un-deploy\n+\n+``` ansible-playbook site_cleanup.yml -i inventories/sample -e target=omagserver1```\n+\n+This will invoke sequence of tasks and remove all the files, logs and service related to the specific server application instance on the target systems described in the inventory as `omagserver1`.\n+\n+>Note that the target is just another input variable mapped to hosts so you can also assign multiple targets as comma separated list like `omagserver1`,`omagserver2` or use the predefined group `all`.\n+\n+## Roles\n+\n+### egeria-omag-server\n+\n+**Deployment** is handled by `egeria-omag-server` role. This is configurable role that will download all the artifacts needed to configure and start egeria OMAG server application. Once this role has been executed against target, specific version of the core Egeria application `server-chassis-spring.jar` will be installed on the pre-configured location. If configured additional Egeria plug-in libraries will be also installed and loaded. One example is `egeria-connector-ibm-information-server-package.jar` if available in the configuration will be downloaded under `libs` folder in the home install directory. System service with pre-configured application name will be also configured and started for you. See role specific configuration and variable section for more details.", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNzkyNg==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461637926", "bodyText": "may want to change these defaults to be 2.2-SNAPSHOT & also update ports to current standards ie 9443 & https", "author": "planetf1", "createdAt": "2020-07-28T14:43:33Z", "path": "open-metadata-resources/open-metadata-deployment/ansible-egeria/README.md", "diffHunk": "@@ -0,0 +1,166 @@\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+# ODPi Egeria ansible playbooks\n+\n+## Introduction\n+\n+Ansible playbook suite for deploying and managing ODPi Egeria OMAG based applications on native Linux environments. Currently it is tested on RedHat Enterprise Linux distribution.\n+\n+### Playbooks\n+\n+Two main playbooks grouping logical sequence of tasks form the related roles.\n+\n+- `sites.yml` - deploy OMAG server application on site and configure it via admin-service.\n+\n+- `sites_cleanup.yml` - un-deploy/clean-up OMAG server application form site.\n+\n+Everything is configurable via set of variables representing one logical application group (i.e. OMAG server profile). For more advanced deployment configurations host groups can be used to configure/deploy multiple instances of OMAG server applications in integrated mode. See configuration and variables section or examples for more details below.\n+\n+>PRIVILEGE ESCALATION: \n+>With the current version of the playbooks it is assumed that the ansible user can do privilege escalation / sudo to manage system level changes like creating systemd configuration files and controlling (start/stop/restart) the service units. For long term the playbooks will be improved so this will become optional so the system changes can be done beforehand by system admins if needed.\n+\n+## Usage\n+\n+#### Deploy\n+\n+``` ansible-playbook site.yml -i inventories/sample -e target=omagserver1``` \n+\n+\n+This will trigger sequence of tasks to install, configure and start OMAG server instances on the target groups described as `omagserver1` under inventory.\n+\n+There is also an option to separately execute sequences by adding following self descriptive tags: `install`,`configure`,`start`.\n+\n+``` ansible-playbook site_cleanup.yml -i inventories/sample -e target=omagserver1 -t install,configure```\n+\n+This will install and configure the OMAG application but it will not start it.\n+\n+#### Un-deploy\n+\n+``` ansible-playbook site_cleanup.yml -i inventories/sample -e target=omagserver1```\n+\n+This will invoke sequence of tasks and remove all the files, logs and service related to the specific server application instance on the target systems described in the inventory as `omagserver1`.\n+\n+>Note that the target is just another input variable mapped to hosts so you can also assign multiple targets as comma separated list like `omagserver1`,`omagserver2` or use the predefined group `all`.\n+\n+## Roles\n+\n+### egeria-omag-server\n+\n+**Deployment** is handled by `egeria-omag-server` role. This is configurable role that will download all the artifacts needed to configure and start egeria OMAG server application. Once this role has been executed against target, specific version of the core Egeria application `server-chassis-spring.jar` will be installed on the pre-configured location. If configured additional Egeria plug-in libraries will be also installed and loaded. One example is `egeria-connector-ibm-information-server-package.jar` if available in the configuration will be downloaded under `libs` folder in the home install directory. System service with pre-configured application name will be also configured and started for you. See role specific configuration and variable section for more details.\n+\n+The sequence of tasks: \n+- downloading the application artifacts; \n+- creating the application structure on the filesystem;\n+- downloading additional libraries;\n+- copying application properties/configuration files and \n+- creating system service and starting up. \n+\n+\n+### egeria-omag-server-admin\n+\n+**Administration** is handled by `egeria-omag-server-admin` role. It looks up for specific `admin_omag_*` set of configuration variables and calls server admin REST API endpoints to create/update the configuration documents for each Egeria component. See role specific configuration and variable section for more details.\n+\n+The sequence of tasks:\n+- Configure servers - uses `admin_omag_server_config` dictionary variable;\n+- Configure repositories - uses `admin_omag_repo_config` dictionary variable;\n+- Enable access services - uses `admin_omag_access_services_config` dictionary variable;\n+- Start server instance - uses `admin_omag_server_startup` list.\n+\n+Each of these sequences depends on the presence of of specific var. If not present or empty the specific configuration phase is skipped.\n+\n+>Currently the roles are embedded and maintained into this project. Once they get more stable and mature can be also available via ansible-galaxy for other ansible projects using Egeria.\n+\n+## Configuration and variables\n+\n+### egeria-omag-server\n+\n+`atr_artifactory_base` - Source Artifactory url. Default: `https://odpi.jfrog.io/odpi`\n+\n+`atr_repository` - Source Artifactory repository. Default: `egeria-snapshot-local`\n+\n+`home_dir` - Target server home directory (installation base). Default: `/opt/odpi/egeria`\n+\n+`app_host` - Application host address or dns name on the target server.\n+\n+`app_port` - Application port on the target server.\n+\n+`app_name` - Application name. Also used for systemd service name.\n+\n+`app_version`- Version of the egeria core executable (jar).\n+\n+`app_version_suffix` - Version suffix (helps for testing snapshot versions). <!--#TODO: add more details-->\n+\n+`app_force_replace` - Forces overwriting the destination artifacts. Useful for development and testing especially when snapshot versions are rebuilt.\n+\n+`app_extra_libs` - Additional egeria plugin library (i.e. connectors).\n+\n+`app_configs`-  Location of the application configuration files to be applied on the target server. <!--#TODO: add more details-->\n+\n+\n+### egeria-omag-server-admin\n+\n+`admin_omag_server_config` - OMAG Server core configuration object. \n+It can be used to define multiple server configurations (different logical servers). See Examples for details.\n+\n+<!--\n+#TODO: add more details on how mode works and possible options\n+-->\n+\n+`admin_omag_repo_config` - OMRS, repositories configuration object. You can define multiple repository configurations for servers. See Examples for details.\n+\n+`admin_omag_access_services_config` - OMAS, access services configuration object. You can define multiple access services to be enabled per server or simply enable 'all' available. See Examples for details.\n+\n+`admin_omag_server_startup` - List of services to initialize after configuration is performed. See Examples for details.\n+\n+\n+## Examples\n+\n+**Example A.** OMAG Server with Asset Catalog OMAS and Local Graph Repository\n+\n+```\n+app_port: 8080", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0MDkwOQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461640909", "bodyText": "version/ports etc -- occurs below also. will not refer to", "author": "planetf1", "createdAt": "2020-07-28T14:47:06Z", "path": "open-metadata-resources/open-metadata-deployment/ansible-egeria/roles/egeria-omag-server/defaults/main.yml", "diffHunk": "@@ -0,0 +1,74 @@\n+---\n+# SPDX-License-Identifier: Apache-2.0\n+# Copyright Contributors to the ODPi Egeria project.\n+\n+app_name: 'server-chassis-spring'\n+app_version: '1.5-SNAPSHOT'", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NDQyOQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461644429", "bodyText": "may be some call for running java at alt locations (tho this may be more in dev)", "author": "planetf1", "createdAt": "2020-07-28T14:51:21Z", "path": "open-metadata-resources/open-metadata-deployment/ansible-egeria/roles/egeria-omag-server/templates/app_service.j2", "diffHunk": "@@ -0,0 +1,47 @@\n+# SPDX-License-Identifier: Apache-2.0\n+# Copyright Contributors to the ODPi Egeria project.\n+\n+[Unit]\n+Description={{ app_name }}-{{ app_version }} service\n+After=network.target\n+\n+[Service]\n+\n+UMask=0027\n+User={{ app_user }}\n+Group={{ app_group }}\n+\n+{% if app_service_environment %}\n+{% for k, v in app_service_environment.items() %}\n+Environment=\"{{ k }}={{ v }}\"\n+{% endfor %}\n+{% endif %}\n+\n+WorkingDirectory={{ app_work_dir }}\n+\n+ExecStartPre=/bin/sh -c \"rm -fR {{ app_tmp_dir }}/*\"\n+ExecStart=/bin/sh -c \"/usr/bin/java\\", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3NDU1MQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r461674551", "bodyText": "up on line 16 site.yml is used (typo) (note not testing - just visual review)", "author": "planetf1", "createdAt": "2020-07-28T15:31:24Z", "path": "open-metadata-resources/open-metadata-deployment/ansible-egeria/README.md", "diffHunk": "@@ -0,0 +1,166 @@\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+# ODPi Egeria ansible playbooks\n+\n+## Introduction\n+\n+Ansible playbook suite for deploying and managing ODPi Egeria OMAG based applications on native Linux environments. Currently it is tested on RedHat Enterprise Linux distribution.\n+\n+### Playbooks\n+\n+Two main playbooks grouping logical sequence of tasks form the related roles.\n+\n+- `sites.yml` - deploy OMAG server application on site and configure it via admin-service.\n+\n+- `sites_cleanup.yml` - un-deploy/clean-up OMAG server application form site.\n+\n+Everything is configurable via set of variables representing one logical application group (i.e. OMAG server profile). For more advanced deployment configurations host groups can be used to configure/deploy multiple instances of OMAG server applications in integrated mode. See configuration and variables section or examples for more details below.\n+\n+>PRIVILEGE ESCALATION: \n+>With the current version of the playbooks it is assumed that the ansible user can do privilege escalation / sudo to manage system level changes like creating systemd configuration files and controlling (start/stop/restart) the service units. For long term the playbooks will be improved so this will become optional so the system changes can be done beforehand by system admins if needed.\n+\n+## Usage\n+\n+#### Deploy\n+\n+``` ansible-playbook site.yml -i inventories/sample -e target=omagserver1``` \n+\n+\n+This will trigger sequence of tasks to install, configure and start OMAG server instances on the target groups described as `omagserver1` under inventory.\n+\n+There is also an option to separately execute sequences by adding following self descriptive tags: `install`,`configure`,`start`.\n+\n+``` ansible-playbook site_cleanup.yml -i inventories/sample -e target=omagserver1 -t install,configure```\n+\n+This will install and configure the OMAG application but it will not start it.\n+\n+#### Un-deploy\n+\n+``` ansible-playbook site_cleanup.yml -i inventories/sample -e target=omagserver1```\n+\n+This will invoke sequence of tasks and remove all the files, logs and service related to the specific server application instance on the target systems described in the inventory as `omagserver1`.\n+\n+>Note that the target is just another input variable mapped to hosts so you can also assign multiple targets as comma separated list like `omagserver1`,`omagserver2` or use the predefined group `all`.\n+\n+## Roles\n+\n+### egeria-omag-server\n+\n+**Deployment** is handled by `egeria-omag-server` role. This is configurable role that will download all the artifacts needed to configure and start egeria OMAG server application. Once this role has been executed against target, specific version of the core Egeria application `server-chassis-spring.jar` will be installed on the pre-configured location. If configured additional Egeria plug-in libraries will be also installed and loaded. One example is `egeria-connector-ibm-information-server-package.jar` if available in the configuration will be downloaded under `libs` folder in the home install directory. System service with pre-configured application name will be also configured and started for you. See role specific configuration and variable section for more details.\n+\n+The sequence of tasks: \n+- downloading the application artifacts; \n+- creating the application structure on the filesystem;\n+- downloading additional libraries;\n+- copying application properties/configuration files and \n+- creating system service and starting up. \n+\n+\n+### egeria-omag-server-admin\n+\n+**Administration** is handled by `egeria-omag-server-admin` role. It looks up for specific `admin_omag_*` set of configuration variables and calls server admin REST API endpoints to create/update the configuration documents for each Egeria component. See role specific configuration and variable section for more details.\n+\n+The sequence of tasks:\n+- Configure servers - uses `admin_omag_server_config` dictionary variable;\n+- Configure repositories - uses `admin_omag_repo_config` dictionary variable;\n+- Enable access services - uses `admin_omag_access_services_config` dictionary variable;\n+- Start server instance - uses `admin_omag_server_startup` list.\n+\n+Each of these sequences depends on the presence of of specific var. If not present or empty the specific configuration phase is skipped.\n+\n+>Currently the roles are embedded and maintained into this project. Once they get more stable and mature can be also available via ansible-galaxy for other ansible projects using Egeria.\n+\n+## Configuration and variables\n+\n+### egeria-omag-server\n+\n+`atr_artifactory_base` - Source Artifactory url. Default: `https://odpi.jfrog.io/odpi`\n+\n+`atr_repository` - Source Artifactory repository. Default: `egeria-snapshot-local`\n+\n+`home_dir` - Target server home directory (installation base). Default: `/opt/odpi/egeria`\n+\n+`app_host` - Application host address or dns name on the target server.\n+\n+`app_port` - Application port on the target server.\n+\n+`app_name` - Application name. Also used for systemd service name.\n+\n+`app_version`- Version of the egeria core executable (jar).\n+\n+`app_version_suffix` - Version suffix (helps for testing snapshot versions). <!--#TODO: add more details-->\n+\n+`app_force_replace` - Forces overwriting the destination artifacts. Useful for development and testing especially when snapshot versions are rebuilt.\n+\n+`app_extra_libs` - Additional egeria plugin library (i.e. connectors).\n+\n+`app_configs`-  Location of the application configuration files to be applied on the target server. <!--#TODO: add more details-->\n+\n+\n+### egeria-omag-server-admin\n+\n+`admin_omag_server_config` - OMAG Server core configuration object. \n+It can be used to define multiple server configurations (different logical servers). See Examples for details.\n+\n+<!--\n+#TODO: add more details on how mode works and possible options\n+-->\n+\n+`admin_omag_repo_config` - OMRS, repositories configuration object. You can define multiple repository configurations for servers. See Examples for details.\n+\n+`admin_omag_access_services_config` - OMAS, access services configuration object. You can define multiple access services to be enabled per server or simply enable 'all' available. See Examples for details.\n+\n+`admin_omag_server_startup` - List of services to initialize after configuration is performed. See Examples for details.\n+\n+\n+## Examples\n+\n+**Example A.** OMAG Server with Asset Catalog OMAS and Local Graph Repository\n+\n+```\n+app_port: 8080\n+app_host: localhost\n+app_name: egeria_omas\n+app_version: 1.6-SNAPSHOT\n+app_version_suffix: 1.6-SNAPSHOT\n+app_extra_libs:\n+app_configs:\n+admin_omag_server_config:\n+  omas-server:\n+    mode: server-chassis\n+    url: \"http://{{ app_host }}:{{ app_port }}\"\n+    user: admin\n+    cohort: mycohort\n+    cohort_topic: mytopic\n+    consumer: kafkaserver:9092\n+    producer: kafkaserver:9092\n+    auditlog_destination: slf4j\n+    auditlog_severity: []    \n+admin_omag_repo_config:\n+  omas-server:\n+    mode: local-graph-repository\n+admin_omag_access_services_config:\n+  omas-server:\n+    # all:\n+    asset-catalog:\n+      body: \n+        supportedTypesForSearch:\n+          - Asset\n+          - RelationalColumn \n+admin_omag_server_startup:\n+- omas-server\n+```\n+\n+Check out the sample configuration `inventories/sample/hosts.yml` and adjust ansible_ vars to so you can connect to your target environment.\n+To deploy,configure and start the sample configuration run following command:\n+\n+```\n+ansible-playbook sites.yml -i inventories/sample -e target=omagserver1", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwODgxNQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462908815", "bodyText": "why is there no NEW_ENTITY_EVENT?", "author": "davidradl", "createdAt": "2020-07-30T10:40:39Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-api/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/event/AssetLineageEventType.java", "diffHunk": "@@ -17,21 +17,22 @@\n  * passed to the Asset Lineage OMAS at start up (a null value here means all zones).\n  */\n \n-@JsonAutoDetect(getterVisibility=PUBLIC_ONLY, setterVisibility=PUBLIC_ONLY, fieldVisibility=NONE)\n+@JsonAutoDetect(getterVisibility = PUBLIC_ONLY, setterVisibility = PUBLIC_ONLY, fieldVisibility = NONE)\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-@JsonIgnoreProperties(ignoreUnknown=true)\n+@JsonIgnoreProperties(ignoreUnknown = true)\n public enum AssetLineageEventType implements Serializable {\n \n-    PROCESS_CONTEXT_EVENT                   (0, \"ProcessContextEvent\", \"Has the full context for a Process\"),\n-    TECHNICAL_ELEMENT_CONTEXT_EVENT         (1, \"TechnicalElementContextEvent\", \"Has the full context for a technical element\"),\n-    CLASSIFICATION_CONTEXT_EVENT            (2, \"ClassificationContextEvent\", \"Has the full context for a classified element\"),\n-    UPDATE_ENTITY_EVENT                     (3, \"UpdateEvent\", \"Has the entity that is being updated\"),\n-    DELETE_ENTITY_EVENT                     (4, \"DeleteEvent\", \"Has the entity to be deleted\"),\n-    NEW_RELATIONSHIP_EVENT                  (5, \"NewRelationship\", \"Has the relationship that is being created\"),\n-    UPDATE_RELATIONSHIP_EVENT               (6, \"UpdateRelationship\", \"Has the relationship that is being updated\"),\n-    DELETE_RELATIONSHIP_EVENT               (7, \"DeleteRelationship\", \"Has the relationship to be deleted\"),\n-    DECLASSIFIED_ENTITY_EVENT               (8, \"DeclassifiedEntityEvent\", \"All relevant lineage classifications for this entity have been removed\"),\n-    UNKNOWN_ASSET_LINEAGE_EVENT             (100, \"UnknownAssetLineageEvent\", \"An AssetLineage OMAS event that is not recognized by the local handlers.\");\n+    PROCESS_CONTEXT_EVENT(0, \"ProcessContextEvent\", \"Has the full context for a Process\"),\n+    TECHNICAL_ELEMENT_CONTEXT_EVENT(1, \"TechnicalElementContextEvent\", \"Has the full context for a technical element\"),\n+    CLASSIFICATION_CONTEXT_EVENT(2, \"ClassificationContextEvent\", \"Has the full context for a classified element\"),\n+    UPDATE_ENTITY_EVENT(3, \"UpdateEvent\", \"Has the entity that is being updated\"),", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk2NzM1Mw==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r464967353", "bodyText": "AssetLineageEventType contains the event types that will be published to OLS by AL OMAS.\nIt listens on NEW_ENTITY_EVENTS in AssetLineageOMRSTopicListener and it creates the whole context for the new entity\n\nPROCESS_CONTEXT_EVENT containing the new process with all its lineage involved entities and relationships\nTECHNICAL_ELEMENT_CONTEXT_EVENT containing the whole asset context for the new TabularColumn/RelationalColumn\nThere is an issue open for sending more granular events to OLS - #3221, but this needs more investigations and will be handled in a future release", "author": "popa-raluca", "createdAt": "2020-08-04T10:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwODgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU1Mzk0Ng==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r465553946", "bodyText": "AssetLineageEventType contains the event types that will be published to OLS by AL OMAS.\nIt listens on NEW_ENTITY_EVENTS in AssetLineageOMRSTopicListener and it creates the whole context for the new entity\n\nPROCESS_CONTEXT_EVENT containing the new process with all its lineage involved entities and relationships\nTECHNICAL_ELEMENT_CONTEXT_EVENT containing the whole asset context for the new TabularColumn/RelationalColumn\nThere is an issue open for sending more granular events to OLS - #3221, but this needs more investigations and will be handled in a future release\n\n\nMakes sense- thanks for the explanation. I suggest adding comments along these lines, to help readers of the code.", "author": "davidradl", "createdAt": "2020-08-05T08:16:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwODgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMDczOQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462910739", "bodyText": "I am wondering why these are called first and second entity. I assume there is a direction to this relationship, maybe changing to something like sourceEntity and TargetEntity or downStreamEntity and upstreamEntity. If there is no direction to the relationship - I wonder why.", "author": "davidradl", "createdAt": "2020-07-30T10:44:50Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-api/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/model/LineageRelationship.java", "diffHunk": "@@ -8,43 +8,45 @@\n  * The lineage relationship represents the a lineage relationship in the lineage graph with self contained properties.\n  */\n public class LineageRelationship extends LineageEntity {\n-    private String firstEndGUID;\n-    private String secondEndGUID;\n+\n+    private LineageEntity firstEntity;\n+    private LineageEntity secondEntity;\n \n     /**\n-     * Gets the guid for the first end of the relationship\n+     * Gets the entity for the first end of the relationship\n      *\n      * @return the guid\n      */\n-    public String getFirstEndGUID() {\n-        return firstEndGUID;\n+    public LineageEntity getFirstEntity() {", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMjAyOA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462912028", "bodyText": "I am unsure what this method is called addLineageClassificationToContext. It does not seem to involve Classification. Maybe addMeaningToContext. Meaning being haw we often refer to Glossary terms.", "author": "davidradl", "createdAt": "2020-07-30T10:47:35Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/GlossaryHandler.java", "diffHunk": "@@ -75,57 +80,65 @@ public GlossaryHandler(InvalidParameterHandler invalidParameterHandler, OMRSRepo\n             getGlossary(userId, vertex.getGuid(), vertex.getTypeDefName());\n \n         return graph.getNeighbors();\n+    }\n+\n+    public Map<String, Set<GraphContext>> buildGlossaryTermContext(String userId, EntityDetail glossaryTerm) throws OCFCheckedExceptionBase {\n+        String methodName = \"buildGlossaryTermContext\";\n+        invalidParameterHandler.validateGUID(glossaryTerm.getGUID(), GUID_PARAMETER, methodName);\n+\n+        AssetContext glossaryContext = new AssetContext();\n+\n+        List<Relationship> semanticAssignments = getSemanticAssignments(userId, glossaryTerm.getGUID(), glossaryTerm.getType().getTypeDefName(), methodName);\n+        if (CollectionUtils.isEmpty(semanticAssignments)) {\n+            return null;\n+        }\n \n+        addSemanticAssignmentToContext(userId, glossaryTerm, glossaryContext, semanticAssignments.toArray(new Relationship[0]));\n+        handlerHelper.addLineageClassificationToContext(glossaryTerm, glossaryContext);", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk2Nzg5NA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r464967894", "bodyText": "The method addLineageClassificationToContext adds the classifications of an entity to the context. It is not specific to a type - in this place it is called for a glossaryTerm, but it is also called when building the context for a process or an asset.", "author": "popa-raluca", "createdAt": "2020-08-04T10:57:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMjAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMzA2NA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462913064", "bodyText": "The comment indicates that it is retrieving (not there is no return)\nThe method starts with get but is not a getter.\nThe method name getGlossary mismatches the comment which is talking about semantic assignments (which are relationships", "author": "davidradl", "createdAt": "2020-07-30T10:49:51Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/GlossaryHandler.java", "diffHunk": "@@ -75,57 +80,65 @@ public GlossaryHandler(InvalidParameterHandler invalidParameterHandler, OMRSRepo\n             getGlossary(userId, vertex.getGuid(), vertex.getTypeDefName());\n \n         return graph.getNeighbors();\n+    }\n+\n+    public Map<String, Set<GraphContext>> buildGlossaryTermContext(String userId, EntityDetail glossaryTerm) throws OCFCheckedExceptionBase {\n+        String methodName = \"buildGlossaryTermContext\";\n+        invalidParameterHandler.validateGUID(glossaryTerm.getGUID(), GUID_PARAMETER, methodName);\n+\n+        AssetContext glossaryContext = new AssetContext();\n+\n+        List<Relationship> semanticAssignments = getSemanticAssignments(userId, glossaryTerm.getGUID(), glossaryTerm.getType().getTypeDefName(), methodName);\n+        if (CollectionUtils.isEmpty(semanticAssignments)) {\n+            return null;\n+        }\n \n+        addSemanticAssignmentToContext(userId, glossaryTerm, glossaryContext, semanticAssignments.toArray(new Relationship[0]));\n+        handlerHelper.addLineageClassificationToContext(glossaryTerm, glossaryContext);\n+\n+        return glossaryContext.getNeighbors();\n     }\n \n     /**\n-     * Retrieves semantic assignments for an asset\n+     * Retrieves semantic assignments for a Glossary Term\n      *\n-     * @param userId      userId\n-     * @param assetGuid   guid of the asset that has been created.\n-     * @param typeDefName the typeName of the asset.\n-     * @return Glossary Term retrieved from the property server\n+     * @param userId           userId\n+     * @param glossaryTermGUID guid of the glossary term\n+     * @param typeDefName      the typeName of the asset.\n      */\n-    private void getGlossary(String userId, String assetGuid, String typeDefName) throws OCFCheckedExceptionBase {\n+    private void getGlossary(String userId, String glossaryTermGUID, String typeDefName) throws OCFCheckedExceptionBase {", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMzg5OA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462913898", "bodyText": "I suggest that there is a log entry if you find more than one semantic assignment associated with an asset.\nAs you are sending in only one semantic assignment - I wonder why you send a one element array rather than just the element.", "author": "davidradl", "createdAt": "2020-07-30T10:51:38Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/GlossaryHandler.java", "diffHunk": "@@ -75,57 +80,65 @@ public GlossaryHandler(InvalidParameterHandler invalidParameterHandler, OMRSRepo\n             getGlossary(userId, vertex.getGuid(), vertex.getTypeDefName());\n \n         return graph.getNeighbors();\n+    }\n+\n+    public Map<String, Set<GraphContext>> buildGlossaryTermContext(String userId, EntityDetail glossaryTerm) throws OCFCheckedExceptionBase {\n+        String methodName = \"buildGlossaryTermContext\";\n+        invalidParameterHandler.validateGUID(glossaryTerm.getGUID(), GUID_PARAMETER, methodName);\n+\n+        AssetContext glossaryContext = new AssetContext();\n+\n+        List<Relationship> semanticAssignments = getSemanticAssignments(userId, glossaryTerm.getGUID(), glossaryTerm.getType().getTypeDefName(), methodName);\n+        if (CollectionUtils.isEmpty(semanticAssignments)) {\n+            return null;\n+        }\n \n+        addSemanticAssignmentToContext(userId, glossaryTerm, glossaryContext, semanticAssignments.toArray(new Relationship[0]));\n+        handlerHelper.addLineageClassificationToContext(glossaryTerm, glossaryContext);\n+\n+        return glossaryContext.getNeighbors();\n     }\n \n     /**\n-     * Retrieves semantic assignments for an asset\n+     * Retrieves semantic assignments for a Glossary Term\n      *\n-     * @param userId      userId\n-     * @param assetGuid   guid of the asset that has been created.\n-     * @param typeDefName the typeName of the asset.\n-     * @return Glossary Term retrieved from the property server\n+     * @param userId           userId\n+     * @param glossaryTermGUID guid of the glossary term\n+     * @param typeDefName      the typeName of the asset.\n      */\n-    private void getGlossary(String userId, String assetGuid, String typeDefName) throws OCFCheckedExceptionBase {\n+    private void getGlossary(String userId, String glossaryTermGUID, String typeDefName) throws OCFCheckedExceptionBase {\n         final String methodName = \"getGlossary\";\n \n-        String typeGuid = handlerHelper.getTypeName(userId, SEMANTIC_ASSIGNMENT);\n-        List<Relationship> semanticAssignments = repositoryHandler.getRelationshipsByType(userId,\n-                assetGuid,\n-                typeDefName,\n-                typeGuid,\n-                SEMANTIC_ASSIGNMENT,\n-                methodName);\n+        EntityDetail glossaryTerm = repositoryHandler.getEntityByGUID(userId, glossaryTermGUID, \"guid\", typeDefName, methodName);\n+        handlerHelper.addLineageClassificationToContext(glossaryTerm, graph);\n \n-        if (semanticAssignments == null)\n-            return;\n+        List<Relationship> semanticAssignments = getSemanticAssignments(userId, glossaryTermGUID, typeDefName, methodName);\n+        if (semanticAssignments == null) return;\n \n-        addSemanticAssignmentToContext(userId, semanticAssignments.toArray(new Relationship[0]));\n+        addSemanticAssignmentToContext(userId, glossaryTerm, graph, semanticAssignments.toArray(new Relationship[0]));", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxNzE0NA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462917144", "bodyText": "I am not sure where the Asset has been created here?", "author": "davidradl", "createdAt": "2020-07-30T10:58:16Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/ProcessContextHandler.java", "diffHunk": "@@ -46,46 +58,37 @@\n     public ProcessContextHandler(InvalidParameterHandler invalidParameterHandler,\n                                  OMRSRepositoryHelper repositoryHelper,\n                                  RepositoryHandler repositoryHandler,\n-                                 List<String> supportedZones) {\n+                                 AssetContextHandler assetContextHandler,\n+                                 List<String> supportedZones,\n+                                 List<String> lineageClassificationTypes) {\n         this.invalidParameterHandler = invalidParameterHandler;\n-        this.repositoryHandler = repositoryHandler;\n-        this.handlerHelper = new HandlerHelper(invalidParameterHandler, repositoryHelper, repositoryHandler);\n+        this.handlerHelper = new HandlerHelper(invalidParameterHandler, repositoryHelper, repositoryHandler, lineageClassificationTypes);\n+        this.assetContextHandler = assetContextHandler;\n         this.supportedZones = supportedZones;\n+        this.superTypesRetriever = new SuperTypesRetriever(repositoryHelper);\n     }\n \n     /**\n      * Retrieves the full context for a Process\n      *\n-     * @param userId      String - userId of user making request.\n-     * @param processGuid guid of the asset that has been created\n+     * @param userId  String - userId of user making request.\n+     * @param process the asset that has been created", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxNzYyMA==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462917620", "bodyText": "I am not sure what parent mean here", "author": "davidradl", "createdAt": "2020-07-30T10:59:15Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/ProcessContextHandler.java", "diffHunk": "@@ -122,41 +124,62 @@ private boolean hasEntitiesLinkedWithProcessPort(String userId, EntityDetail ent\n         }\n \n         return hasRelationshipBasedOnType(entityDetails, userId);\n-\n     }\n \n \n     /**\n      * Retrieves the relationships of an Entity\n      *\n      * @param userId           String - userId of user making request.\n-     * @param guid             guid of parent entity\n+     * @param startEntity      parent entity", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMTIzNw==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462921237", "bodyText": "I am unsure what an End Relationship is and how it relates to the code.", "author": "davidradl", "createdAt": "2020-07-30T11:06:55Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/ProcessContextHandler.java", "diffHunk": "@@ -189,10 +212,8 @@ private boolean hasRelationshipBasedOnType(List<EntityDetail> entityDetails, Str\n     private boolean hasEndRelationship(List<EntityDetail> entityDetails, String userId) throws OCFCheckedExceptionBase {\n         List<EntityDetail> result = new ArrayList<>();", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMjAxMg==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462922012", "bodyText": "comments indicating what this is trying to do would be helpful.", "author": "davidradl", "createdAt": "2020-07-30T11:08:40Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/outtopic/AssetLineagePublisher.java", "diffHunk": "@@ -83,26 +83,44 @@ public void publishProcessContext(EntityDetail entityDetail) throws OCFCheckedEx\n \n     public void publishAssetContext(EntityDetail entityDetail) throws OCFCheckedExceptionBase, JsonProcessingException {\n         String technicalGuid = entityDetail.getGUID();\n-        AssetContext assetContext = this.assetContextHandler.getAssetContext(serverUserName, technicalGuid, entityDetail.getType().getTypeDefName());\n+        AssetContext assetContext = this.assetContextHandler.getAssetContext(serverUserName, entityDetail);\n+\n         Map<String, Set<GraphContext>> context = this.glossaryHandler.getGlossaryTerm(technicalGuid, serverUserName, assetContext, this.superTypesRetriever);\n         LineageEvent event = new LineageEvent();\n-        if (!context.isEmpty())\n+        if (!context.isEmpty()) {\n             event.setAssetContext(context);\n-        else\n+        } else {", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMjU4MQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462922581", "bodyText": "The code seems to related to initial load - not scanning the cohort.", "author": "davidradl", "createdAt": "2020-07-30T11:09:55Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/server/AssetLineageRestServices.java", "diffHunk": "@@ -24,5 +43,58 @@ public AssetLineageRestServices() {\n         instanceHandler.registerAccessService();\n     }\n \n+    /**\n+     * Scan the cohort for Glossary Terms available", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMzEyNQ==", "url": "https://github.com/odpi/egeria/pull/3386#discussion_r462923125", "bodyText": "I suggest explicitly checking for Asset and erroring if you get something else.", "author": "davidradl", "createdAt": "2020-07-30T11:11:04Z", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/server/AssetLineageRestServices.java", "diffHunk": "@@ -24,5 +43,58 @@ public AssetLineageRestServices() {\n         instanceHandler.registerAccessService();\n     }\n \n+    /**\n+     * Scan the cohort for Glossary Terms available\n+     * Publish the context for each Glossary Term on OMAS out Topic\n+     *\n+     * @param serverName name of server instance to call\n+     * @param userId     the name of the calling user\n+     * @return a list of unique identifiers (guids) of the available Glossary Terms as a response\n+     */\n+    public GUIDListResponse initialLoadByEntityType(String serverName, String userId, String entityType) {\n+        GUIDListResponse response = new GUIDListResponse();\n+\n+        String methodName = \"initialLoadByRelationshipType\";\n+        try {\n+            AssetContextHandler assetContextHandler = instanceHandler.getAssetContextHandler(userId, serverName, methodName);\n+            List<EntityDetail> entitiesByTypeName = assetContextHandler.getEntitiesByTypeName(userId, entityType);\n+            if (CollectionUtils.isEmpty(entitiesByTypeName)) {\n+                return response;\n+            }\n \n+            AssetLineagePublisher publisher = instanceHandler.getAssetLineagePublisher(userId, serverName, methodName);\n+            if (publisher == null) {\n+                log.debug(\"Asset Lineage Publisher is not available. \" +\n+                        \"The context event for {} could not be published on the Asset Lineage OMAS Out Topic.\", entityType);\n+                return response;\n+            }\n+            publishEntitiesContext(entityType, entitiesByTypeName, publisher);\n+\n+            response.setGUIDs(entitiesByTypeName.stream().map(InstanceHeader::getGUID).collect(Collectors.toList()));\n+        } catch (InvalidParameterException e) {\n+            restExceptionHandler.captureInvalidParameterException(response, e);\n+        } catch (UserNotAuthorizedException e) {\n+            restExceptionHandler.captureUserNotAuthorizedException(response, e);\n+        } catch (PropertyServerException e) {\n+            restExceptionHandler.capturePropertyServerException(response, e);\n+        }\n+\n+        return response;\n+    }\n+\n+    private void publishEntitiesContext(String typeName, List<EntityDetail> entitiesByType, AssetLineagePublisher publisher) {\n+        entitiesByType.forEach(entityDetail -> {\n+            try {\n+                if (GLOSSARY_TERM.equals(typeName)) {\n+                    publisher.publishGlossaryContext(entityDetail);\n+                } else if (PROCESS.equals(typeName)) {\n+                    publisher.publishProcessContext(entityDetail);\n+                } else {\n+                    publisher.publishAssetContext(entityDetail);", "originalCommit": "98c387a030664b4b0d4db694ce715c7fee030afe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "642aaa64f55440226da4bfa8016ee8c900c53418", "url": "https://github.com/odpi/egeria/commit/642aaa64f55440226da4bfa8016ee8c900c53418", "message": "OLS - Fix LineageMapping directions when querying for the output column based on the input column\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-08-03T10:38:41Z", "type": "commit"}, {"oid": "58baa28a294da72c42a7a674d28b46d5c7123477", "url": "https://github.com/odpi/egeria/commit/58baa28a294da72c42a7a674d28b46d5c7123477", "message": "Merge pull request #3431 from popa-raluca/ols\n\nOLS - Fix LineageMapping edge directions when querying for output column", "committedDate": "2020-08-03T12:02:08Z", "type": "commit"}, {"oid": "db79b1df79a43efe5ce57384c4079817deeb6452", "url": "https://github.com/odpi/egeria/commit/db79b1df79a43efe5ce57384c4079817deeb6452", "message": "Merge branch 'egeria-feature-openlineage' into lineagetest", "committedDate": "2020-08-03T12:56:10Z", "type": "commit"}, {"oid": "e740253cb7a0425c6ea288e6aedfbc771ebbf73f", "url": "https://github.com/odpi/egeria/commit/e740253cb7a0425c6ea288e6aedfbc771ebbf73f", "message": "Fix openlineage to build with gradle\n\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>", "committedDate": "2020-08-03T13:23:55Z", "type": "commit"}, {"oid": "1d1e5c43da5fecec2f51fadc77233b2e42c88c6f", "url": "https://github.com/odpi/egeria/commit/1d1e5c43da5fecec2f51fadc77233b2e42c88c6f", "message": "Merge pull request #3432 from planetf1/lineagetest\n\nrequired fix for #3386 (openlineage) for gradle build", "committedDate": "2020-08-03T14:47:00Z", "type": "commit"}, {"oid": "56dc5f004a9473857f70322ad339d21c76da0e52", "url": "https://github.com/odpi/egeria/commit/56dc5f004a9473857f70322ad339d21c76da0e52", "message": "AssetLineage OMAS - update javadoc & small refactoring after code review\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-08-04T11:25:45Z", "type": "commit"}, {"oid": "53bd42c09d1d670d7dde42ea1c37abdbec4835c9", "url": "https://github.com/odpi/egeria/commit/53bd42c09d1d670d7dde42ea1c37abdbec4835c9", "message": "AssetLineage OMAS - update javadoc & small refactoring after code review\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-08-04T11:47:46Z", "type": "commit"}, {"oid": "8f3c0564099647d4c2250ad8a103680078be5cae", "url": "https://github.com/odpi/egeria/commit/8f3c0564099647d4c2250ad8a103680078be5cae", "message": "AssetLineage OMAS - update endpoint name for the initial load\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-08-05T08:43:26Z", "type": "commit"}, {"oid": "d7081be36bfb136cfef7e6c13976e229aa4e5018", "url": "https://github.com/odpi/egeria/commit/d7081be36bfb136cfef7e6c13976e229aa4e5018", "message": "AssetLineage OMAS - update javadoc\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-08-05T08:53:04Z", "type": "commit"}, {"oid": "4fde2e4ea74fc863ba7da0f622faac341265d6ba", "url": "https://github.com/odpi/egeria/commit/4fde2e4ea74fc863ba7da0f622faac341265d6ba", "message": "AssetLineage OMAS - update javadoc & method rename\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-08-05T12:00:37Z", "type": "commit"}, {"oid": "6f1790a6a7378532d0ce55f4288443ab647705c2", "url": "https://github.com/odpi/egeria/commit/6f1790a6a7378532d0ce55f4288443ab647705c2", "message": "updated from upstream\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-06T07:38:50Z", "type": "commit"}, {"oid": "2d94a0bb4dff2f7b2377191ff6045793bb410e9e", "url": "https://github.com/odpi/egeria/commit/2d94a0bb4dff2f7b2377191ff6045793bb410e9e", "message": "Merge branch 'lineage' of https://github.com/popa-raluca/egeria into feature-open-lineage\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-06T07:43:10Z", "type": "commit"}, {"oid": "a156ec8216aef18a326675767c17b04f8e8cd9e3", "url": "https://github.com/odpi/egeria/commit/a156ec8216aef18a326675767c17b04f8e8cd9e3", "message": "Merge pull request #3445 from popa-raluca/lineage\n\nAssetLineage OMAS - changes after the review", "committedDate": "2020-08-06T20:35:26Z", "type": "commit"}, {"oid": "6a550a340166e04055f83d6eb98d4bc627768e8a", "url": "https://github.com/odpi/egeria/commit/6a550a340166e04055f83d6eb98d4bc627768e8a", "message": "added audit logging for janus graph connector\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-07T08:39:24Z", "type": "commit"}, {"oid": "9896f5a46f4c5c70b8ad1038b3e6e4ad383f44af", "url": "https://github.com/odpi/egeria/commit/9896f5a46f4c5c70b8ad1038b3e6e4ad383f44af", "message": "small changes & added audit logging for janus connector\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-07T09:07:31Z", "type": "commit"}, {"oid": "585b891a68a552a6637f25d4b831c30f9ceec33b", "url": "https://github.com/odpi/egeria/commit/585b891a68a552a6637f25d4b831c30f9ceec33b", "message": "Merge branch 'egeria-feature-openlineage' into enhancements-after-PR", "committedDate": "2020-08-07T10:07:25Z", "type": "commit"}, {"oid": "3520918db631acecf5dd960139097b38a473b502", "url": "https://github.com/odpi/egeria/commit/3520918db631acecf5dd960139097b38a473b502", "message": "added repo-services-api in gradle build\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-07T11:00:26Z", "type": "commit"}, {"oid": "0de808905577ec350b3813a4e8425317c56ff70c", "url": "https://github.com/odpi/egeria/commit/0de808905577ec350b3813a4e8425317c56ff70c", "message": "Merge remote-tracking branch 'origin/enhancements-after-PR' into enhancements-after-PR", "committedDate": "2020-08-07T11:01:01Z", "type": "commit"}, {"oid": "4d8e630c6c4465ac71d74cfe52e2113ab6c321d5", "url": "https://github.com/odpi/egeria/commit/4d8e630c6c4465ac71d74cfe52e2113ab6c321d5", "message": "Merge pull request #3465 from marius-patrascu/enhancements-after-PR\n\nsmall changes & added audit logging for janus connector", "committedDate": "2020-08-07T13:24:55Z", "type": "commit"}, {"oid": "99c128dc67f80c18eaa88aa51f96f1a8df499cde", "url": "https://github.com/odpi/egeria/commit/99c128dc67f80c18eaa88aa51f96f1a8df499cde", "message": "OLS - fix NPE when querying for a node that is not present in ols graph\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-08-10T11:57:49Z", "type": "commit"}, {"oid": "7ef81379a34520de32d916e9c28a6ea60273b60e", "url": "https://github.com/odpi/egeria/commit/7ef81379a34520de32d916e9c28a6ea60273b60e", "message": "Merge branch 'egeria-feature-openlineage' into lineage", "committedDate": "2020-08-10T11:59:35Z", "type": "commit"}, {"oid": "efa40c784390e483f8a169db3edf5bf7a5561ac8", "url": "https://github.com/odpi/egeria/commit/efa40c784390e483f8a169db3edf5bf7a5561ac8", "message": "Merge pull request #3470 from popa-raluca/lineage\n\nOLS - fix NPE when querying for a node that is not present in ols graph", "committedDate": "2020-08-10T13:52:25Z", "type": "commit"}, {"oid": "b82567281ae30b21066ea9e807d1ebbb7db3e28b", "url": "https://github.com/odpi/egeria/commit/b82567281ae30b21066ea9e807d1ebbb7db3e28b", "message": "Merge branch 'master' into egeria-feature-openlineage", "committedDate": "2020-08-11T07:16:22Z", "type": "commit"}, {"oid": "45aa2fc32ce2d43e90b587f245ef3761cd7bb2a7", "url": "https://github.com/odpi/egeria/commit/45aa2fc32ce2d43e90b587f245ef3761cd7bb2a7", "message": "Merge pull request #3473 from lpalashevski/egeria-feature-openlineage\n\nUpdate from master", "committedDate": "2020-08-11T08:13:14Z", "type": "commit"}, {"oid": "8c0ef9b30244c0bdcd8c40d1280808f7a56eb61b", "url": "https://github.com/odpi/egeria/commit/8c0ef9b30244c0bdcd8c40d1280808f7a56eb61b", "message": "Merge branch 'master' into egeria-feature-openlineage", "committedDate": "2020-08-12T14:01:44Z", "type": "commit"}, {"oid": "36d70d3ac98d5da6c57707eb99796b07e2148f2c", "url": "https://github.com/odpi/egeria/commit/36d70d3ac98d5da6c57707eb99796b07e2148f2c", "message": "Merge pull request #3480 from lpalashevski/egeria-feature-openlineage\n\nUpdates from master", "committedDate": "2020-08-12T14:43:59Z", "type": "commit"}, {"oid": "79e020b08f096ba388f7304c38104fe63ce2d31d", "url": "https://github.com/odpi/egeria/commit/79e020b08f096ba388f7304c38104fe63ce2d31d", "message": "Merge branch 'master' into egeria-feature-openlineage", "committedDate": "2020-08-13T09:57:16Z", "type": "commit"}, {"oid": "a085e6f1148b1ef54e05842b72e87ee0cebab9c4", "url": "https://github.com/odpi/egeria/commit/a085e6f1148b1ef54e05842b72e87ee0cebab9c4", "message": "Merge pull request #3484 from lpalashevski/egeria-feature-openlineage\n\nChanges from master", "committedDate": "2020-08-13T12:08:27Z", "type": "commit"}, {"oid": "4c40e5d649de10581e1ff256ddb9efaa5871508a", "url": "https://github.com/odpi/egeria/commit/4c40e5d649de10581e1ff256ddb9efaa5871508a", "message": "Return the process guid as nodeId for lineage subProcess nodes. Doing this allows the correct querying of the node from the UI both for type information but also for navigation from the graph.\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-14T14:07:33Z", "type": "commit"}, {"oid": "905d1938aae1fea57bc86898f4ef5859e60278ef", "url": "https://github.com/odpi/egeria/commit/905d1938aae1fea57bc86898f4ef5859e60278ef", "message": "merge with master\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-14T14:12:39Z", "type": "commit"}, {"oid": "1c6c56d8d7e53a69234a26a28a22a9eab344b96b", "url": "https://github.com/odpi/egeria/commit/1c6c56d8d7e53a69234a26a28a22a9eab344b96b", "message": "reverted changes to properties files\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-14T14:15:03Z", "type": "commit"}, {"oid": "3517205137363b9ab3137eaee6c09a2b254cf5a2", "url": "https://github.com/odpi/egeria/commit/3517205137363b9ab3137eaee6c09a2b254cf5a2", "message": "reverted changes to properties files\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-14T14:16:30Z", "type": "commit"}, {"oid": "c9e00bb71c3f02f77c8163022ff3ad3a58c37db8", "url": "https://github.com/odpi/egeria/commit/c9e00bb71c3f02f77c8163022ff3ad3a58c37db8", "message": "show type info for all nodes\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-14T14:18:45Z", "type": "commit"}, {"oid": "76077b7df0b1835e72081930a5daa17822ca1a1c", "url": "https://github.com/odpi/egeria/commit/76077b7df0b1835e72081930a5daa17822ca1a1c", "message": "fixed uint tests\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-08-14T15:20:11Z", "type": "commit"}, {"oid": "c056b14cf54dbb2c3052a7df9581e6e0828e72de", "url": "https://github.com/odpi/egeria/commit/c056b14cf54dbb2c3052a7df9581e6e0828e72de", "message": "Merge pull request #3492 from marius-patrascu/adjust-subProcess-nodes-to-have-process-guid\n\nAdjust sub process nodes to have process guid", "committedDate": "2020-08-17T08:26:31Z", "type": "commit"}, {"oid": "735f12f1c9d36192500d518cdfed4ffc0203dd28", "url": "https://github.com/odpi/egeria/commit/735f12f1c9d36192500d518cdfed4ffc0203dd28", "message": "Merge branch 'master' of https://github.com/odpi/egeria into lineage\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>\n\n# Conflicts:\n#\tpom.xml", "committedDate": "2020-08-17T08:48:54Z", "type": "commit"}, {"oid": "886fb3f59bb6544fe8dc19772a55279c531e56d0", "url": "https://github.com/odpi/egeria/commit/886fb3f59bb6544fe8dc19772a55279c531e56d0", "message": "Merge pull request #3494 from popa-raluca/lineage\n\nUpdates from master", "committedDate": "2020-08-17T09:27:35Z", "type": "commit"}, {"oid": "f2b6b97e5d6517f68838cb237db7f3c61c2ee31a", "url": "https://github.com/odpi/egeria/commit/f2b6b97e5d6517f68838cb237db7f3c61c2ee31a", "message": "Merge branch 'master' of https://github.com/odpi/egeria into lineage", "committedDate": "2020-08-18T06:24:58Z", "type": "commit"}, {"oid": "9b8b533d4d86e7f7b65cd02a13e1c1ee487741d8", "url": "https://github.com/odpi/egeria/commit/9b8b533d4d86e7f7b65cd02a13e1c1ee487741d8", "message": "Merge branch 'egeria-feature-openlineage' into lineage", "committedDate": "2020-08-18T06:26:45Z", "type": "commit"}, {"oid": "dfbfe7536efd0da2c82a40270dc505c99066b0e6", "url": "https://github.com/odpi/egeria/commit/dfbfe7536efd0da2c82a40270dc505c99066b0e6", "message": "Merge pull request #3496 from popa-raluca/lineage\n\nUpdates from master", "committedDate": "2020-08-18T07:30:57Z", "type": "commit"}, {"oid": "1877a754054b5609acc8f875755b365842367399", "url": "https://github.com/odpi/egeria/commit/1877a754054b5609acc8f875755b365842367399", "message": "created views for glossary terms and glossary categories that can be acceseed from glossary-view\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-05-03T12:00:30Z", "type": "commit"}, {"oid": "1e550c9519e094c3b073f56dc60ad8d403014c25", "url": "https://github.com/odpi/egeria/commit/1e550c9519e094c3b073f56dc60ad8d403014c25", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into lineage-omas", "committedDate": "2020-05-06T08:34:23Z", "type": "commit"}, {"oid": "733a6d31e3b023d7082a4e992e9fa15470f1ac75", "url": "https://github.com/odpi/egeria/commit/733a6d31e3b023d7082a4e992e9fa15470f1ac75", "message": "Asset Lineage OMAS - small refactoring\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-06T14:03:07Z", "type": "commit"}, {"oid": "7148e47c99d47453c1655444399235d6a1531dbb", "url": "https://github.com/odpi/egeria/commit/7148e47c99d47453c1655444399235d6a1531dbb", "message": "avoid NPE\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-06T14:36:04Z", "type": "commit"}, {"oid": "75f81f4bb328fefae2a027607049480c78c33bf2", "url": "https://github.com/odpi/egeria/commit/75f81f4bb328fefae2a027607049480c78c33bf2", "message": "delete unused constant\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-18T13:45:15Z", "type": "commit"}, {"oid": "7beadb6d5486115b52110a95606ed000f5de9a88", "url": "https://github.com/odpi/egeria/commit/7beadb6d5486115b52110a95606ed000f5de9a88", "message": "classifications handler changes\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-18T13:46:15Z", "type": "commit"}, {"oid": "13de1d87e7cff6b1f7f5e742ed431267c6517d9b", "url": "https://github.com/odpi/egeria/commit/13de1d87e7cff6b1f7f5e742ed431267c6517d9b", "message": "Schema Attribute is an entity types\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-18T13:48:01Z", "type": "commit"}, {"oid": "94de13f5a90f274647c7e972fff833130c6cd6ab", "url": "https://github.com/odpi/egeria/commit/94de13f5a90f274647c7e972fff833130c6cd6ab", "message": "ComplexSchemaTypes is an entity type\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-18T13:54:17Z", "type": "commit"}, {"oid": "5e7d27df65b68698b3a9d6313244afda4206cc38", "url": "https://github.com/odpi/egeria/commit/5e7d27df65b68698b3a9d6313244afda4206cc38", "message": "Relationship events should be consumed only if at least one end of the relationship is important from lineage\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-18T14:06:10Z", "type": "commit"}, {"oid": "a94f8aac456411f7484406f4c69160ec2617ba0e", "url": "https://github.com/odpi/egeria/commit/a94f8aac456411f7484406f4c69160ec2617ba0e", "message": "Merge remote-tracking branch 'upstream/egeria-feature-openlineage' into lineage-omas", "committedDate": "2020-05-19T13:44:07Z", "type": "commit"}, {"oid": "8d0ff7bf8fbb3c84db4686b803361f1444649610", "url": "https://github.com/odpi/egeria/commit/8d0ff7bf8fbb3c84db4686b803361f1444649610", "message": "WIP schema and indexing\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-05-20T10:37:30Z", "type": "commit"}, {"oid": "c509f0a2c49e2c6286b6b4e637bf6f2defc2e6ac", "url": "https://github.com/odpi/egeria/commit/c509f0a2c49e2c6286b6b4e637bf6f2defc2e6ac", "message": "Merge pull request #3077 from lpalashevski/egeria-feature-openlineage\n\nUpdates from master", "committedDate": "2020-05-21T10:27:05Z", "type": "commit"}, {"oid": "e6bec5568840ea3af6ef9447241143eff891cfca", "url": "https://github.com/odpi/egeria/commit/e6bec5568840ea3af6ef9447241143eff891cfca", "message": "Merge branch 'lineage-omas' into egeria-feature-openlineage", "committedDate": "2020-05-21T12:10:45Z", "type": "commit"}, {"oid": "d6ee6bc6c3d31b111f494e57d8ee1a3f40e13eb5", "url": "https://github.com/odpi/egeria/commit/d6ee6bc6c3d31b111f494e57d8ee1a3f40e13eb5", "message": "OLS - fix edge order for destination nodes\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-05-25T09:14:57Z", "type": "commit"}, {"oid": "6c30edc96128f11d861879d42814144c30453c2f", "url": "https://github.com/odpi/egeria/commit/6c30edc96128f11d861879d42814144c30453c2f", "message": "WIP indexing\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-05-25T10:29:33Z", "type": "commit"}, {"oid": "2e0dec14f318467f849bfad69a772efd07e15178", "url": "https://github.com/odpi/egeria/commit/2e0dec14f318467f849bfad69a772efd07e15178", "message": "Egeria feature openlineage (#3078)\n\n* Asset Lineage OMAS - small refactoring\r\n\r\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>\r\n\r\n* avoid NPE\r\n\r\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>\r\n\r\n* delete unused constant\r\n\r\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>\r\n\r\n* classifications handler changes\r\n\r\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>\r\n\r\n* Schema Attribute is an entity types\r\n\r\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>\r\n\r\n* ComplexSchemaTypes is an entity type\r\n\r\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>\r\n\r\n* Relationship events should be consumed only if at least one end of the relationship is important from lineage\r\n\r\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-25T11:31:55Z", "type": "commit"}, {"oid": "5ae2f974dbc8959739f07e2290ed205679cfaa78", "url": "https://github.com/odpi/egeria/commit/5ae2f974dbc8959739f07e2290ed205679cfaa78", "message": "OLS - update queries for ultimate source/destination, to retrieve the subGraph with all the nodes\n- filter result based on includeProcesses\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-05-25T13:20:20Z", "type": "commit"}, {"oid": "14524c9b939d2177da0945077fc45adcf27da104", "url": "https://github.com/odpi/egeria/commit/14524c9b939d2177da0945077fc45adcf27da104", "message": "OLS - fix ultimate source/destination for a single vertex\n- fix javadoc\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-05-25T13:37:32Z", "type": "commit"}, {"oid": "d7434237eca1f86b9a729d4228e4ed86d5868405", "url": "https://github.com/odpi/egeria/commit/d7434237eca1f86b9a729d4228e4ed86d5868405", "message": "Handle classification events in OLS\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-05-27T18:28:01Z", "type": "commit"}, {"oid": "8e90337bf008b869d06c4606975bc8c3f88ccee4", "url": "https://github.com/odpi/egeria/commit/8e90337bf008b869d06c4606975bc8c3f88ccee4", "message": "OLS - add condensation node for more than one process in the response\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-05-28T07:36:39Z", "type": "commit"}, {"oid": "5352ddc9d612b95c035d52e0f4cfd0720d4d9cce", "url": "https://github.com/odpi/egeria/commit/5352ddc9d612b95c035d52e0f4cfd0720d4d9cce", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into egeria-feature-openlineage", "committedDate": "2020-05-28T13:23:40Z", "type": "commit"}, {"oid": "25b93d1ca82c3c73adf09152250c312f373edb99", "url": "https://github.com/odpi/egeria/commit/25b93d1ca82c3c73adf09152250c312f373edb99", "message": "AL OMAS - updated entity event\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-05-28T13:26:33Z", "type": "commit"}, {"oid": "c61102c989c96a7d379632ef378eb195b2895698", "url": "https://github.com/odpi/egeria/commit/c61102c989c96a7d379632ef378eb195b2895698", "message": "Merge pull request #3117 from danielaotelea/egeria-feature-openlineage\n\nAL OMAS - Updated Entity Event", "committedDate": "2020-06-03T08:11:19Z", "type": "commit"}, {"oid": "7e73c4f5005d71a7ebf4cf9256f6d3823096b857", "url": "https://github.com/odpi/egeria/commit/7e73c4f5005d71a7ebf4cf9256f6d3823096b857", "message": "Merge branch 'egeria-feature-openlineage' into egeria-feature-openlineage", "committedDate": "2020-06-03T09:37:08Z", "type": "commit"}, {"oid": "21248c53890e80d977ba2d25611aa716b70406e8", "url": "https://github.com/odpi/egeria/commit/21248c53890e80d977ba2d25611aa716b70406e8", "message": "WIP update queries\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-06-03T13:19:21Z", "type": "commit"}, {"oid": "2bfbfe09cd003e11592e4ffc1c5a9ecfb164610b", "url": "https://github.com/odpi/egeria/commit/2bfbfe09cd003e11592e4ffc1c5a9ecfb164610b", "message": "handle semantic assignment in the graph connector\nmodified LineageRelationship to include the full entities from which vertexes will be created\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-06-04T13:01:23Z", "type": "commit"}, {"oid": "260fd3f413d04d55493abfd3e59e9e19588f5379", "url": "https://github.com/odpi/egeria/commit/260fd3f413d04d55493abfd3e59e9e19588f5379", "message": "Scheduler updated queries for remote gremlin\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-06-05T12:15:00Z", "type": "commit"}, {"oid": "629b2f643948a558a172644d8169d4890506b326", "url": "https://github.com/odpi/egeria/commit/629b2f643948a558a172644d8169d4890506b326", "message": "OLS - condense glossaryTerms that are not linked to source/destination or queried node\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-06-08T11:43:36Z", "type": "commit"}, {"oid": "56fb23296d0e17a8a8df4f2b9fda609fb1901ea3", "url": "https://github.com/odpi/egeria/commit/56fb23296d0e17a8a8df4f2b9fda609fb1901ea3", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into egeria-feature-openlineage", "committedDate": "2020-06-08T12:35:11Z", "type": "commit"}, {"oid": "1feee1b2faa7f714847151ecd98150489bc784c4", "url": "https://github.com/odpi/egeria/commit/1feee1b2faa7f714847151ecd98150489bc784c4", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/lcpopa/egeria into egeria-feature-openlineage", "committedDate": "2020-06-08T13:53:19Z", "type": "commit"}, {"oid": "fa9857c63f8fa161859e7169d49979d8165cea96", "url": "https://github.com/odpi/egeria/commit/fa9857c63f8fa161859e7169d49979d8165cea96", "message": "OLS - fix source & destination queries for getting the SemanticAssignments\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-06-08T14:47:21Z", "type": "commit"}, {"oid": "aadeb715d6fc4267a8c347e9d177ff0785fd4585", "url": "https://github.com/odpi/egeria/commit/aadeb715d6fc4267a8c347e9d177ff0785fd4585", "message": "Handle classification events in OLS\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-06-08T15:14:48Z", "type": "commit"}, {"oid": "634fbcf4a56d1688009bf8aeff9be51619ca0d42", "url": "https://github.com/odpi/egeria/commit/634fbcf4a56d1688009bf8aeff9be51619ca0d42", "message": "Handle classification events in OLS\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-06-08T17:05:56Z", "type": "commit"}, {"oid": "0472c64103097e496bff9fdd11419eb23aa25f4c", "url": "https://github.com/odpi/egeria/commit/0472c64103097e496bff9fdd11419eb23aa25f4c", "message": "OLS - fix ultimate source edges direction for queries with a single process\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-06-09T05:56:51Z", "type": "commit"}, {"oid": "e40a3c6605a7e20f914d51d3aa4a348255274557", "url": "https://github.com/odpi/egeria/commit/e40a3c6605a7e20f914d51d3aa4a348255274557", "message": "Merge pull request #3113 from lcpopa/egeria-feature-openlineage\n\nHandle classification events in OLS", "committedDate": "2020-06-09T05:59:46Z", "type": "commit"}, {"oid": "51d0c8085fcad7fe20f393dc549b84a532f200ae", "url": "https://github.com/odpi/egeria/commit/51d0c8085fcad7fe20f393dc549b84a532f200ae", "message": "Merge remote-tracking branch 'upstream/egeria-feature-openlineage' into lineage", "committedDate": "2020-06-09T08:35:53Z", "type": "commit"}, {"oid": "507b4d4eef110f75566acacc38bdce535070a74b", "url": "https://github.com/odpi/egeria/commit/507b4d4eef110f75566acacc38bdce535070a74b", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into lineage\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>\n\n# Conflicts:\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java", "committedDate": "2020-06-09T08:40:12Z", "type": "commit"}, {"oid": "6b24400bfa3d58e5cdc581f58a363547605b8d82", "url": "https://github.com/odpi/egeria/commit/6b24400bfa3d58e5cdc581f58a363547605b8d82", "message": "Merge pull request #3172 from popa-raluca/lineage\n\nOLS -lineage changes for ultimate source/destination tabs", "committedDate": "2020-06-09T10:09:12Z", "type": "commit"}, {"oid": "701db67a6d51dff17d1843323bca070f33ec34e5", "url": "https://github.com/odpi/egeria/commit/701db67a6d51dff17d1843323bca070f33ec34e5", "message": "Adjustments for remote queries.\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-06-10T10:14:12Z", "type": "commit"}, {"oid": "2185ff5772e4bdaca076f256f1e4aa3da6366133", "url": "https://github.com/odpi/egeria/commit/2185ff5772e4bdaca076f256f1e4aa3da6366133", "message": "AL OMAS - add classification to Lineage Events\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-06-10T18:05:42Z", "type": "commit"}, {"oid": "ee94090d9949ae221c81d7e58d54c743720798b7", "url": "https://github.com/odpi/egeria/commit/ee94090d9949ae221c81d7e58d54c743720798b7", "message": "changes for queries to work remote and embedded\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-06-11T11:12:39Z", "type": "commit"}, {"oid": "e2297c5dcbe29879cc593d148f39fc973d719c98", "url": "https://github.com/odpi/egeria/commit/e2297c5dcbe29879cc593d148f39fc973d719c98", "message": "Handle classification events in OLS\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-06-11T14:37:26Z", "type": "commit"}, {"oid": "550594d9eb5ae15eb88fbcefdc88ce97dba9c3bf", "url": "https://github.com/odpi/egeria/commit/550594d9eb5ae15eb88fbcefdc88ce97dba9c3bf", "message": "merged\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-06-11T17:40:56Z", "type": "commit"}, {"oid": "64447c3585e7e43af8a4631de5bb35daf01342d3", "url": "https://github.com/odpi/egeria/commit/64447c3585e7e43af8a4631de5bb35daf01342d3", "message": "Handle classification events in OLS\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-06-12T10:18:49Z", "type": "commit"}, {"oid": "a834b65b4a03c6a9af57e2d85ead4415eabbed59", "url": "https://github.com/odpi/egeria/commit/a834b65b4a03c6a9af57e2d85ead4415eabbed59", "message": "small fix\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-06-12T12:38:57Z", "type": "commit"}, {"oid": "cad71e42760b746730b769f7a19c8922ce336555", "url": "https://github.com/odpi/egeria/commit/cad71e42760b746730b769f7a19c8922ce336555", "message": "Merge pull request #3188 from lcpopa/egeria-feature-openlineage\n\nHandle classification events in OLS", "committedDate": "2020-06-12T13:20:19Z", "type": "commit"}, {"oid": "993df05f25a44b1acbf235b96ab1a26495fe2f15", "url": "https://github.com/odpi/egeria/commit/993df05f25a44b1acbf235b96ab1a26495fe2f15", "message": "Merge branch 'egeria-feature-openlineage' into egeria-feature-openlineage", "committedDate": "2020-06-12T14:21:38Z", "type": "commit"}, {"oid": "6a244d1242159230a3ee6273d0a51a5051787ec5", "url": "https://github.com/odpi/egeria/commit/6a244d1242159230a3ee6273d0a51a5051787ec5", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into egeria-feature-openlineage", "committedDate": "2020-06-12T14:24:28Z", "type": "commit"}, {"oid": "ec369b4d5f1166246dd1db4f3aa86a5d7eab978f", "url": "https://github.com/odpi/egeria/commit/ec369b4d5f1166246dd1db4f3aa86a5d7eab978f", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/danielaotelea/egeria into egeria-feature-openlineage", "committedDate": "2020-06-12T14:28:21Z", "type": "commit"}, {"oid": "114408e850a7f3d688c6396cafd6d4e73a1ca3b2", "url": "https://github.com/odpi/egeria/commit/114408e850a7f3d688c6396cafd6d4e73a1ca3b2", "message": "Avoid NPE for supertypes\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-06-12T14:34:01Z", "type": "commit"}, {"oid": "7fbc5ddce0dd612920b205354e42a9503d3b0ca1", "url": "https://github.com/odpi/egeria/commit/7fbc5ddce0dd612920b205354e42a9503d3b0ca1", "message": "AL OMAS - added column context to process event\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-06-12T14:36:16Z", "type": "commit"}, {"oid": "fa780184fbbed87e20dd0091eb7f2f99cedcf5fc", "url": "https://github.com/odpi/egeria/commit/fa780184fbbed87e20dd0091eb7f2f99cedcf5fc", "message": "Merge branch 'egeria-feature-openlineage' into semantic-assignment-feature-open-lineage", "committedDate": "2020-06-15T09:05:39Z", "type": "commit"}, {"oid": "afcf75c3fd76c0a9e030fb5240ea712178007a86", "url": "https://github.com/odpi/egeria/commit/afcf75c3fd76c0a9e030fb5240ea712178007a86", "message": "Merge pull request #3154 from marius-patrascu/semantic-assignment-feature-open-lineage\n\nhandle semantic assignment in the graph connector", "committedDate": "2020-06-15T09:35:20Z", "type": "commit"}, {"oid": "3bad113add5949fbbcfa5f9a5703783875064d27", "url": "https://github.com/odpi/egeria/commit/3bad113add5949fbbcfa5f9a5703783875064d27", "message": "Merge branch 'egeria-feature-openlineage' into egeria-feature-openlineage", "committedDate": "2020-06-15T09:53:09Z", "type": "commit"}, {"oid": "36df3a60e1ac752ad9d3385d6984082a97741943", "url": "https://github.com/odpi/egeria/commit/36df3a60e1ac752ad9d3385d6984082a97741943", "message": "Merge pull request #3191 from danielaotelea/egeria-feature-openlineage\n\nAL OMAS - add classification to Lineage Events", "committedDate": "2020-06-15T10:21:08Z", "type": "commit"}, {"oid": "7c6972ce6497c59d687dfe691d1458ed9fa33502", "url": "https://github.com/odpi/egeria/commit/7c6972ce6497c59d687dfe691d1458ed9fa33502", "message": "AL OMAS - scan the cohort for GTs and publish on AL OMAS Out Topic the context for those\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-06-15T13:56:22Z", "type": "commit"}, {"oid": "038c7c0d1f2230f93b5e9aa5bf277e366d6301c5", "url": "https://github.com/odpi/egeria/commit/038c7c0d1f2230f93b5e9aa5bf277e366d6301c5", "message": "Merge branch 'master' into refactoring-janusgraph\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-06-16T11:04:23Z", "type": "commit"}, {"oid": "9bb209118d8c179b6873d1a71a478165d1983398", "url": "https://github.com/odpi/egeria/commit/9bb209118d8c179b6873d1a71a478165d1983398", "message": "OLS - `Remove edge redirection\n\nSigned-off-by: Liviu Popa <liviu-constantin.popa@ing.com>", "committedDate": "2020-06-18T08:41:22Z", "type": "commit"}, {"oid": "dcd8194a5cd2172e51fa3d9701f55c96a070bc73", "url": "https://github.com/odpi/egeria/commit/dcd8194a5cd2172e51fa3d9701f55c96a070bc73", "message": "Merge pull request #3217 from lcpopa/egeria-feature-openlineage\n\nOLS - Remove edge redirection", "committedDate": "2020-06-18T10:59:10Z", "type": "commit"}, {"oid": "5b3faab6883efd789dadc96197b04ed9389cf46d", "url": "https://github.com/odpi/egeria/commit/5b3faab6883efd789dadc96197b04ed9389cf46d", "message": "minor adjustments after quit regression test.\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-06-18T14:30:25Z", "type": "commit"}, {"oid": "1b3b7c82568830674b9900231a0918ab141c8bed", "url": "https://github.com/odpi/egeria/commit/1b3b7c82568830674b9900231a0918ab141c8bed", "message": "WIP: Refactoring Remote connection provider\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-06-23T13:38:18Z", "type": "commit"}, {"oid": "f5dc746fabee1bcbe07694e47ace872ae2f57bbd", "url": "https://github.com/odpi/egeria/commit/f5dc746fabee1bcbe07694e47ace872ae2f57bbd", "message": "added creation of labels for edges & verices\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-06-24T10:26:54Z", "type": "commit"}, {"oid": "51106130952c0067b45738863d4bb25ec7eb36ae", "url": "https://github.com/odpi/egeria/commit/51106130952c0067b45738863d4bb25ec7eb36ae", "message": "Merge pull request #1 from marius-patrascu/refactoring-janus-marius\n\nadded creation of labels for edges & verices", "committedDate": "2020-06-24T12:51:03Z", "type": "commit"}, {"oid": "85a20380586073b90a9900747ff4a521e1c6fd6d", "url": "https://github.com/odpi/egeria/commit/85a20380586073b90a9900747ff4a521e1c6fd6d", "message": "added the code for creating indices for janusgraph server\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-06-25T07:58:32Z", "type": "commit"}, {"oid": "b93dcd7f09619f3cb3d2f048a811a0ea85ecb037", "url": "https://github.com/odpi/egeria/commit/b93dcd7f09619f3cb3d2f048a811a0ea85ecb037", "message": "Merge pull request #2 from marius-patrascu/refactoring-janus-marius\n\nadded the code for creating indices for janusgraph server", "committedDate": "2020-06-25T10:59:52Z", "type": "commit"}, {"oid": "c311a3e5039fd9211de6476b8d5d625361c6157f", "url": "https://github.com/odpi/egeria/commit/c311a3e5039fd9211de6476b8d5d625361c6157f", "message": "Minor updates on the index creation; cleanup.\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-06-25T15:23:11Z", "type": "commit"}, {"oid": "176815d023c4e8324ffde2bb3e0e159ab8671f72", "url": "https://github.com/odpi/egeria/commit/176815d023c4e8324ffde2bb3e0e159ab8671f72", "message": "refactoring graph factory\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-06-26T08:46:58Z", "type": "commit"}, {"oid": "d2fe6ecc1d45787f31b45c2519e420c89991c999", "url": "https://github.com/odpi/egeria/commit/d2fe6ecc1d45787f31b45c2519e420c89991c999", "message": "Merge branch 'refactoring-janusgraph' of https://github.com/DimitriosMaimaris/egeria into refactoring-janusgraph", "committedDate": "2020-06-26T08:50:29Z", "type": "commit"}, {"oid": "c7778a73c7bba8097191ce95529444b7c3683534", "url": "https://github.com/odpi/egeria/commit/c7778a73c7bba8097191ce95529444b7c3683534", "message": "Merged remote schema management changes, removed unused factory classes, doc and cleanup\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-06-26T12:03:15Z", "type": "commit"}, {"oid": "5bbf7be04bafd8c089cee8d41c48b65b1e4a9f79", "url": "https://github.com/odpi/egeria/commit/5bbf7be04bafd8c089cee8d41c48b65b1e4a9f79", "message": "Merge remote-tracking branch 'upstream/egeria-feature-openlineage' into refactoring-janusgraph\n\nSigned-off-by: Dimitrios (D.) Maimaris <dimitrios.maimaris@ing.com>", "committedDate": "2020-06-29T07:58:18Z", "type": "commit"}, {"oid": "0697f0f02b4f1bec9a0eae08f09ff94c2423447e", "url": "https://github.com/odpi/egeria/commit/0697f0f02b4f1bec9a0eae08f09ff94c2423447e", "message": "AL OMAS - add lineage mapping + fix the relationship directions\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-06-29T11:18:04Z", "type": "commit"}, {"oid": "d70cf8df6f93254bb7339b33798a865536457dfb", "url": "https://github.com/odpi/egeria/commit/d70cf8df6f93254bb7339b33798a865536457dfb", "message": "AL OMAS - merge graph neighbors\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-06-29T14:22:30Z", "type": "commit"}, {"oid": "3b4687d011c726fb6f16feb9fa9e687d70706d3e", "url": "https://github.com/odpi/egeria/commit/3b4687d011c726fb6f16feb9fa9e687d70706d3e", "message": "Merge pull request #3266 from DimitriosMaimaris/refactoring-janusgraph\n\nRefactoring janusgraph", "committedDate": "2020-06-30T08:03:30Z", "type": "commit"}, {"oid": "307e778d36d24e7da5c6d64cd69b8c5aa86b1be9", "url": "https://github.com/odpi/egeria/commit/307e778d36d24e7da5c6d64cd69b8c5aa86b1be9", "message": "OLS - update queries to reflect edge direction changes\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-07-01T12:41:09Z", "type": "commit"}, {"oid": "6b166cc5a1c587ee6dcf8ce7147f9c818647cb26", "url": "https://github.com/odpi/egeria/commit/6b166cc5a1c587ee6dcf8ce7147f9c818647cb26", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into egeria-feature-openlineage", "committedDate": "2020-07-02T07:58:46Z", "type": "commit"}, {"oid": "5d494f25f47f9691b866c13f686bf72d7915491f", "url": "https://github.com/odpi/egeria/commit/5d494f25f47f9691b866c13f686bf72d7915491f", "message": "AL OMAS - cleanup\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-07-02T09:07:26Z", "type": "commit"}, {"oid": "cf3374a4342704c7fc34794792d004f3144fc66c", "url": "https://github.com/odpi/egeria/commit/cf3374a4342704c7fc34794792d004f3144fc66c", "message": "refactored queries to not include glossary terms and classifications\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-02T12:07:39Z", "type": "commit"}, {"oid": "19d9ad96e0f6d17a66758d905adc5ab3f80533a0", "url": "https://github.com/odpi/egeria/commit/19d9ad96e0f6d17a66758d905adc5ab3f80533a0", "message": "re-added imports\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-02T12:33:41Z", "type": "commit"}, {"oid": "1e7eae37c985cb9ae46a028dc846207fd704cc60", "url": "https://github.com/odpi/egeria/commit/1e7eae37c985cb9ae46a028dc846207fd704cc60", "message": "AL OMAS - publish GT with semantic assigment\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-07-02T13:06:23Z", "type": "commit"}, {"oid": "db255627095e586b023ec20ee7f0ae422cf39d0b", "url": "https://github.com/odpi/egeria/commit/db255627095e586b023ec20ee7f0ae422cf39d0b", "message": "Merge branch 'egeria-feature-openlineage' of https://github.com/odpi/egeria into initial-load\n\n\u0001 Conflicts:\n\u0001\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java", "committedDate": "2020-07-02T13:11:48Z", "type": "commit"}, {"oid": "553687f6b3c4285e50e172a5b29724b1265602f3", "url": "https://github.com/odpi/egeria/commit/553687f6b3c4285e50e172a5b29724b1265602f3", "message": "OLS - fix NPE for null property values\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-07-02T14:03:11Z", "type": "commit"}, {"oid": "a3c255893edd929c6f45fcaa1c3dc18e70284b61", "url": "https://github.com/odpi/egeria/commit/a3c255893edd929c6f45fcaa1c3dc18e70284b61", "message": "OLS - fix NPE for null property values\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-07-03T09:17:54Z", "type": "commit"}, {"oid": "2a3bfb06c3fdcf91236ba607bde50aceff36ca38", "url": "https://github.com/odpi/egeria/commit/2a3bfb06c3fdcf91236ba607bde50aceff36ca38", "message": "AL OMAS - avoid using import wildcard\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-07-03T09:30:04Z", "type": "commit"}, {"oid": "bef4cb432e3281dbe117b70813966a2f9409a739", "url": "https://github.com/odpi/egeria/commit/bef4cb432e3281dbe117b70813966a2f9409a739", "message": "fixed small issues\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-06T07:28:58Z", "type": "commit"}, {"oid": "e13576de1424e7aab4c773c2ebbf729a4a91053c", "url": "https://github.com/odpi/egeria/commit/e13576de1424e7aab4c773c2ebbf729a4a91053c", "message": "Merge pull request #3293 from marius-patrascu/refactor-queries-to-exclude-glossaries-and-classfications\n\nRefactor queries to exclude glossaries and classfications", "committedDate": "2020-07-06T08:24:41Z", "type": "commit"}, {"oid": "519292b9d5880f31a37940a31e0d4e61c4a69e87", "url": "https://github.com/odpi/egeria/commit/519292b9d5880f31a37940a31e0d4e61c4a69e87", "message": "correct the method name, move the method implementation in Asset Context Handler\n\nSigned-off-by: Daniela Otelea <daniela-valentina.otelea@ing.com>", "committedDate": "2020-07-06T09:15:56Z", "type": "commit"}, {"oid": "213d7722dedafb363241fe5d6a5fd594ffc21fec", "url": "https://github.com/odpi/egeria/commit/213d7722dedafb363241fe5d6a5fd594ffc21fec", "message": "Merge remote-tracking branch 'upstream/egeria-feature-openlineage' into egeria-feature-openlineage", "committedDate": "2020-07-06T09:30:37Z", "type": "commit"}, {"oid": "4268f6418b6e9ff27dc898b52cdf07619cf8ea52", "url": "https://github.com/odpi/egeria/commit/4268f6418b6e9ff27dc898b52cdf07619cf8ea52", "message": "Merge branch 'egeria-feature-openlineage' into initial-load\n\n# Conflicts:\n#\topen-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java", "committedDate": "2020-07-06T09:36:05Z", "type": "commit"}, {"oid": "cd78d3c89a2bfd801a15c8cc7b8db28c03ecde68", "url": "https://github.com/odpi/egeria/commit/cd78d3c89a2bfd801a15c8cc7b8db28c03ecde68", "message": "Merge pull request #3296 from danielaotelea/initial-load\n\nInitial Load flow for Lineage #2924", "committedDate": "2020-07-06T11:06:42Z", "type": "commit"}, {"oid": "51760235e06c36974220994c72aef9f7a3e9451d", "url": "https://github.com/odpi/egeria/commit/51760235e06c36974220994c72aef9f7a3e9451d", "message": "added unit testing for some parts of the janus graph connector mar\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-06T13:52:04Z", "type": "commit"}, {"oid": "ffc6f1fd860ba62f4899d501ce281eeddc9bb737", "url": "https://github.com/odpi/egeria/commit/ffc6f1fd860ba62f4899d501ce281eeddc9bb737", "message": "Merge branch 'egeria-feature-openlineage' into refactor-queries-to-exclude-glossaries-and-classfications", "committedDate": "2020-07-06T13:55:19Z", "type": "commit"}, {"oid": "c8641b2d5865e9a2e0517997590ba96e193937cc", "url": "https://github.com/odpi/egeria/commit/c8641b2d5865e9a2e0517997590ba96e193937cc", "message": "removed commented code\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-07T07:24:41Z", "type": "commit"}, {"oid": "8ad164c52e99184f344aac1672f71b200b3ce2d3", "url": "https://github.com/odpi/egeria/commit/8ad164c52e99184f344aac1672f71b200b3ce2d3", "message": "Merge remote-tracking branch 'origin/refactor-queries-to-exclude-glossaries-and-classfications' into refactor-queries-to-exclude-glossaries-and-classfications", "committedDate": "2020-07-07T07:24:48Z", "type": "commit"}, {"oid": "2d5dceca002817d8b47108f1c6f9dfe86ae13aba", "url": "https://github.com/odpi/egeria/commit/2d5dceca002817d8b47108f1c6f9dfe86ae13aba", "message": "Merge pull request #3305 from marius-patrascu/refactor-queries-to-exclude-glossaries-and-classfications\n\nadded unit testing for some parts of the janus graph connector mar", "committedDate": "2020-07-07T08:35:19Z", "type": "commit"}, {"oid": "66135a52152ef46694de469e5e94be1badc67606", "url": "https://github.com/odpi/egeria/commit/66135a52152ef46694de469e5e94be1badc67606", "message": "Updated OLS configuration in server config. Using generic configurationProperties map in the role.\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-07-07T13:02:53Z", "type": "commit"}, {"oid": "dff950ccefd78776c87e73c3d160f06faa1149c0", "url": "https://github.com/odpi/egeria/commit/dff950ccefd78776c87e73c3d160f06faa1149c0", "message": "Merge pull request #3309 from lpalashevski/update-egeria-ansible\n\nUpdate egeria ansible admin role", "committedDate": "2020-07-07T14:47:37Z", "type": "commit"}, {"oid": "f575eb2a77edccbfec8dc3a2b9c1e6ec1ac27f5a", "url": "https://github.com/odpi/egeria/commit/f575eb2a77edccbfec8dc3a2b9c1e6ec1ac27f5a", "message": "OLS - use LinkedHashSet instead of HashSet to preserve the insertion order\n\nSigned-off-by: Raluca Popa <raluca.popa2@ing.com>", "committedDate": "2020-07-10T08:36:45Z", "type": "commit"}, {"oid": "a0d7e9f1089fee564109eb671dfc68c2882d7013", "url": "https://github.com/odpi/egeria/commit/a0d7e9f1089fee564109eb671dfc68c2882d7013", "message": "Merge branch 'egeria-feature-openlineage' into lineage_ols", "committedDate": "2020-07-10T08:39:25Z", "type": "commit"}, {"oid": "4cf32983136e6fe9780cf637509a72f680e24c7f", "url": "https://github.com/odpi/egeria/commit/4cf32983136e6fe9780cf637509a72f680e24c7f", "message": "Merge pull request #3319 from popa-raluca/lineage_ols\n\nOLS - Preserve the order of the nodes when querying for lineage", "committedDate": "2020-07-10T09:08:30Z", "type": "commit"}, {"oid": "2504f52c1cfca2e2f1762d0549571c39870ecddc", "url": "https://github.com/odpi/egeria/commit/2504f52c1cfca2e2f1762d0549571c39870ecddc", "message": "Externalized job interval as OLS configuration property jobIntervalInSeconds.\n\nSigned-off-by: Ljupcho Palashevski <ljupcho.palashevski@ing.com>", "committedDate": "2020-07-13T10:06:15Z", "type": "commit"}]}