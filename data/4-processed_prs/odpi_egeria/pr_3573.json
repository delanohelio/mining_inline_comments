{"pr_number": 3573, "pr_title": "#3543 Refactored UI Client and Server for Development", "pr_createdAt": "2020-09-05T17:16:35Z", "pr_url": "https://github.com/odpi/egeria/pull/3573", "timeline": [{"oid": "d81bf575255a36afc39c48504e2e8cb1d21c8976", "url": "https://github.com/odpi/egeria/commit/d81bf575255a36afc39c48504e2e8cb1d21c8976", "message": "created new cra directories\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-09-05T17:05:59Z", "type": "commit"}, {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235", "url": "https://github.com/odpi/egeria/commit/9379a6529bb35a009c33640e7a254b7dd7a98235", "message": "updated ReadMe\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-09-05T17:08:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NTAwNA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r483985004", "bodyText": "See #1490 for more references to the standard users we have... This list may need updating.. (ultimately we need to move to ldap , but understand that's down the line)", "author": "planetf1", "createdAt": "2020-09-05T20:24:35Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/db/users.js", "diffHunk": "@@ -0,0 +1,38 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+var records = [", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDE1OQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484454159", "bodyText": "added all the users referenced in that issue", "author": "jmmadsen", "createdAt": "2020-09-07T14:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NTAwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTQ2NA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484279464", "bodyText": "Quite a number of these files are already excluded by pattern (build, .vscode, *.log). Others may be included by minor modification to the existing patterns (package-lock?)\nNot critical for this pr, so could be in a later one, though I can take a look to suggest more specifics if I get the overall (dev - not maven!)  working for the PR in my environment", "author": "planetf1", "createdAt": "2020-09-07T08:37:46Z", "path": ".gitignore", "diffHunk": "@@ -115,6 +115,20 @@ open-metadata-implementation/user-interfaces/presentation-server/nodejs/yarn.loc\n open-metadata-implementation/user-interfaces/presentation-server/nodejs/node/**\n open-metadata-implementation/user-interfaces/presentation-server/nodejs/.env\n \n+open-metadata-implementation/user-interfaces/presentation-server/cra-client/node_modules", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDg0Mg==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484454842", "bodyText": "This makes sense, but I like your suggestion for leaving it to a later PR. Perhaps we can discuss in our meeting next week", "author": "jmmadsen", "createdAt": "2020-09-07T14:09:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3ODA5Mw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484478093", "bodyText": "#3575 opened to track", "author": "planetf1", "createdAt": "2020-09-07T14:53:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNTYxNw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484505617", "bodyText": "Addressed in #3577", "author": "jmmadsen", "createdAt": "2020-09-07T16:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTgzMw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484279833", "bodyText": "May be an idea to use ISO format dates YYYY-MM-DD as we have a global audience and this is US date format", "author": "planetf1", "createdAt": "2020-09-07T08:38:25Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -38,14 +38,6 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n-\n-## FOR NEW DEVELOPMENT (as of 8/2/2020)", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTMxNg==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484455316", "bodyText": "changed date format", "author": "jmmadsen", "createdAt": "2020-09-07T14:09:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTgzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MDQzMg==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484280432", "bodyText": "presumably from this directory - but also would require running yarn? might be worth adding a link even for this stage - though when we LATER do maven integration it shouldn't be needed (there we need to minimize any external dependencies)", "author": "planetf1", "createdAt": "2020-09-07T08:39:23Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -38,14 +38,6 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n-\n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTc0MA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484455740", "bodyText": "We are actually not using Yarn anymore. I had it in the first PR I had merged, but after discussing further with @davidradl we decided to stick with NPM instead and have removed all Yarn references.", "author": "jmmadsen", "createdAt": "2020-09-07T14:10:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MDQzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MDkyMA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484280920", "bodyText": "ISO date format", "author": "planetf1", "createdAt": "2020-09-07T08:40:13Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -54,6 +46,16 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n     \n+## FOR NEW DEVELOPMENT (as of 8/25/2020)", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTgxNA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484455814", "bodyText": "fixed", "author": "jmmadsen", "createdAt": "2020-09-07T14:11:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MDkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MTU4MA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484281580", "bodyText": "should be careful of terminology as we use 'server' to mean an egeria server, yet here I think you mean a 'process listening on a port' ie network server. We use the word platform. Not sure though that is best here. but client/server can be confusing given how much we have this all over egeria...\n(Note -- it's ok we refine the docs in a later PR - just general feedback)", "author": "planetf1", "createdAt": "2020-09-07T08:41:17Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -54,6 +46,16 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n     \n+## FOR NEW DEVELOPMENT (as of 8/25/2020)\n+ * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n+ * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n+ * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n+ * The new client is maintained in the cra-client directory.\n+ * The new server is maintained in the cra-server directory.", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1Njg5Mw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484456893", "bodyText": "I tried to clarify a little further in the Readme, but agreed we can refine the verbiage as we go on", "author": "jmmadsen", "createdAt": "2020-09-07T14:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MTU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzA3Mw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484283073", "bodyText": "What issues did you get? I will try later... it may be due to the way current versions of chrome do further validation. We hit some issues even for the base platform. Whilst the config work isn't complete, it does work (in chrome) and notes are at #1403. Specifically it could relate to the certificate you've used.\nOne option -- if we don't fix during PR, open up a new issue & fix it there", "author": "planetf1", "createdAt": "2020-09-07T08:43:52Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -54,6 +46,16 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n     \n+## FOR NEW DEVELOPMENT (as of 8/25/2020)\n+ * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n+ * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n+ * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n+ * The new client is maintained in the cra-client directory.\n+ * The new server is maintained in the cra-server directory.\n+ * Set up your environment by running `npm install` in both cra-client and cra-server.\n+ * Start the new UI by navigating into the cra-server directory, then running `npm start`.\n+ * Enter `https://localhost:3000/` to access the new UI in development mode.\n+ * Due to https, was only able to get it running properly using Firefox browser (no Chrome).", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzQ0OA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484457448", "bodyText": "We have a separate conversation regarding this in #3543, so will move topic to there.", "author": "jmmadsen", "createdAt": "2020-09-07T14:14:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzA3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzQzMA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484283430", "bodyText": "be good to add comments on what the files are for (I realise, but for benefit of others)", "author": "planetf1", "createdAt": "2020-09-07T08:44:30Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/.env.sample", "diffHunk": "@@ -0,0 +1,8 @@\n+# SPDX-License-Identifier: Apache-2.0 \n+# Copyright Contributors to the ODPi Egeria project. \n+\n+# This file is a sample .env file that can be used by developers.\n+# Copy this file to a file called .env and modify the values as required\n+HTTPS=true", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1ODcxMQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484458711", "bodyText": "add clarifying comments", "author": "jmmadsen", "createdAt": "2020-09-07T14:16:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzcyOQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484283729", "bodyText": "I've not tried the code - presume this will need changing when deployed?", "author": "planetf1", "createdAt": "2020-09-07T08:44:58Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/package.json", "diffHunk": "@@ -30,7 +30,8 @@\n     \"eject\": \"react-scripts eject\"\n   },\n   \"author\": \"Jacob Madsen\",\n-  \"license\": \"ISC\",\n+  \"license\": \"Apache-2.0\",\n+  \"proxy\": \"https://localhost:8091\",", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1ODk5MQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484458991", "bodyText": "I do not believe so. proxy is only used by React while running in development mode, and I believe it is ignored in production. We can check during more testing in the future though.", "author": "jmmadsen", "createdAt": "2020-09-07T14:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDE5Ng==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484284196", "bodyText": "Can we reuse one of the existing egeria logos and keep the files in the same place, so that our branding is kept together?\nIf requried the extra file can be brought into the build tree by a maven step once we integrate the build (getting resources)", "author": "planetf1", "createdAt": "2020-09-07T08:45:43Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/public/index.html", "diffHunk": "@@ -5,7 +5,7 @@\n   <head>\n     <meta charset=\"utf-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n-    <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n+    <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/egeria_logo.png\">", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MjI5OQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484462299", "bodyText": "@planetf1 How important would you say it is to keep this file in the same directory as all the others? It is a bit of pain to work with references in the index.html in React (but doable).\nI do think we should use the new logo. I think the color stands out the best on the browser tab compared to others, which are hard to make out.", "author": "jmmadsen", "createdAt": "2020-09-07T14:23:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4Mzk4NQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484483985", "bodyText": "I don't like the idea of duplication. the project as a whole should be coherent. The standard way of doing this would be - if needed - to copy in the required resources using maven (or gradle), probably better than relative links which can be problematic.\nAs such I suggest we defer to a seperate issue to resolve - leave as is for now.", "author": "planetf1", "createdAt": "2020-09-07T15:06:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4NDU2NQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484484565", "bodyText": "see #3576", "author": "planetf1", "createdAt": "2020-09-07T15:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDM5MQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484284391", "bodyText": "as above - can we reuse these icons from egeria core", "author": "planetf1", "createdAt": "2020-09-07T08:46:04Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/src/Frame.js", "diffHunk": "@@ -1,15 +1,17 @@\n /* SPDX-License-Identifier: Apache-2.0 */\n /* Copyright Contributors to the ODPi Egeria project. */\n-import React, { useContext } from \"react\";\n+import React, { useContext, useState } from \"react\";\n import Search20 from \"@carbon/icons-react/lib/search/20\";\n import Notification20 from \"@carbon/icons-react/lib/notification/20\";\n import AppSwitcher20 from \"@carbon/icons-react/lib/app-switcher/20\";\n+import { Logout32 } from \"@carbon/icons-react\";\n import HeaderContainer from \"carbon-components-react/lib/components/UIShell/HeaderContainer\";\n import { Content } from \"carbon-components-react/lib/components/UIShell\";\n import { Link, Route, Switch } from \"react-router-dom\";\n import Egeriawhite110 from \"./images/Egeria_logo_white_110\";", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2Mzc3Mg==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484463772", "bodyText": "Do you mind referencing where these are stored in the egeria core? I am not super familiar with the rest of the project yet. I see assets/img, but that directory does not seem to have these assets.", "author": "jmmadsen", "createdAt": "2020-09-07T14:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4NjI3Ng==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484486276", "bodyText": "good question ... my thought was to collect them together - so add if needed, but needs further discussion so let's consider in #3576", "author": "planetf1", "createdAt": "2020-09-07T15:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDM5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTU5Ng==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484285596", "bodyText": "is this intended for developer debugging or the end user debugging (both)? This looks ok - but need to be careful not to introduce any personally identifiable info (that isnt already obvious from the browser env)", "author": "planetf1", "createdAt": "2020-09-07T08:48:08Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/src/contexts/IdentificationContext.js", "diffHunk": "@@ -16,31 +17,28 @@ const IdentificationContextProvider = props => {\n    * Get the home url for the browser\n    */\n   const getBrowserURL = pageName => {\n-    if (process.env.NODE_ENV === \"development\") {\n-      return \"/\" + \"cocoView1\" + \"/\" + pageName;\n-    }\n     return \"/\" + serverName + \"/\" + pageName;\n   };\n   /**\n- * Get the url to use for rest calls \n- * @param {*} serviceName this is the viewservice name. \n- */\n-const getRestURL = (serviceName) => {\n-  const url =\n-    window.location.protocol +\n-    \"//\" +\n-    window.location.hostname +\n-    \":\" +\n-    window.location.port +\n-    \"/servers/\" +\n-    serverName +\n-    \"/\" +\n-    serviceName +\n-    \"/users/\" +\n-    userId;\n-    console.log(\"rest url is \", url);\n-  return url;\n-};\n+  * Get the url to use for rest calls \n+  * @param {*} serviceName this is the viewservice name. \n+  */\n+  const getRestURL = (serviceName) => {\n+    const url =\n+      window.location.protocol +\n+      \"//\" +\n+      window.location.hostname +\n+      \":\" +\n+      window.location.port +\n+      \"/servers/\" +\n+      serverName +\n+      \"/\" +\n+      serviceName +\n+      \"/users/\" +\n+      userId;\n+      console.log(\"rest url is \", url);", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2NDEwMQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484464101", "bodyText": "@davidradl can you provide any input? I did not develop this piece.", "author": "jmmadsen", "createdAt": "2020-09-07T14:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTU5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg5NzMyMQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484897321", "bodyText": "@planetf1 - this is part of the middleware that dos the multi-tenant support. I suggest we do not review the changes to the source code here unless there is a side effect .", "author": "davidradl", "createdAt": "2020-09-08T13:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NjA0MA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484286040", "bodyText": "When we build an image of this in a container, it should be easy to get this env var -- presumably that is all you are doing with .env. -- initializing the environment?", "author": "planetf1", "createdAt": "2020-09-07T08:48:55Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/.env_sample", "diffHunk": "@@ -0,0 +1,10 @@\n+# SPDX-License-Identifier: Apache-2.0 \n+# Copyright Contributors to the ODPi Egeria project. \n+\n+# This file is a sample .env file that can be used by developers.\n+# Copy this file to a file called .env and modify the values as required\n+# Each line configures a UI server (tenant) with the appropriate downstream server\n+#    \n+# In this example the first line configures a ui server called aaa with a remote server name of \"cocoView1\" and URL of \"https://localhost:9443\"\n+EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2NDk3OA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484464978", "bodyText": "Yes, I believe this is correct", "author": "jmmadsen", "createdAt": "2020-09-07T14:28:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NjA0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4Njk3Mw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484286973", "bodyText": "this is probably something we'll need to return to later (so we have consolidated certs/clear docs)- but should go with this for now", "author": "planetf1", "createdAt": "2020-09-07T08:50:31Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/index.js", "diffHunk": "@@ -0,0 +1,70 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+const express = require('express');\n+const fs = require(\"fs\");\n+const path = require(\"path\")\n+const session = require(\"express-session\");\n+const bodyParser = require(\"body-parser\");\n+let passport = require(\"passport\");\n+const https = require(\"https\");\n+const app = express();\n+require(\"dotenv\").config();\n+\n+const getServerInfoFromEnv = require('./functions/getServerInfoFromEnv');\n+const serverNameMiddleWare = require('./functions/serverNameMiddleware');\n+const passportConfiguration = require('./functions/passportConfiguration');\n+const loggedIn = require('./functions/loggedIn');\n+\n+const router = require('./router/routes');\n+\n+const PORT = process.env.PORT || 8091;\n+const env = process.env.NODE_ENV || 'development';\n+\n+\n+// ssl self signed certificate and key\n+const cert = fs.readFileSync(path.join(__dirname, '../') + \"/../presentation-server/ssl/keys/server.cert\");", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2NDY0MQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484464641", "bodyText": "agreed", "author": "jmmadsen", "createdAt": "2020-09-07T14:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4Njk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4MTk1Mw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484481953", "bodyText": "let's handle this in #1403", "author": "planetf1", "createdAt": "2020-09-07T15:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4Njk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNTIwNA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484505204", "bodyText": "#1403", "author": "jmmadsen", "createdAt": "2020-09-07T15:58:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4Njk3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzI3Nw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484287277", "bodyText": "the port 3000 is hardcoded in log msg - should be ${PORT} ?", "author": "planetf1", "createdAt": "2020-09-07T08:51:00Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/index.js", "diffHunk": "@@ -0,0 +1,70 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+const express = require('express');\n+const fs = require(\"fs\");\n+const path = require(\"path\")\n+const session = require(\"express-session\");\n+const bodyParser = require(\"body-parser\");\n+let passport = require(\"passport\");\n+const https = require(\"https\");\n+const app = express();\n+require(\"dotenv\").config();\n+\n+const getServerInfoFromEnv = require('./functions/getServerInfoFromEnv');\n+const serverNameMiddleWare = require('./functions/serverNameMiddleware');\n+const passportConfiguration = require('./functions/passportConfiguration');\n+const loggedIn = require('./functions/loggedIn');\n+\n+const router = require('./router/routes');\n+\n+const PORT = process.env.PORT || 8091;\n+const env = process.env.NODE_ENV || 'development';\n+\n+\n+// ssl self signed certificate and key\n+const cert = fs.readFileSync(path.join(__dirname, '../') + \"/../presentation-server/ssl/keys/server.cert\");\n+const key = fs.readFileSync(path.join(__dirname, '../') + \"/../presentation-server/ssl/keys/server.key\");\n+const options = {\n+  key: key,\n+  cert: cert,\n+};\n+app.set('key', key);\n+app.set('cert', cert);\n+\n+const servers = getServerInfoFromEnv();\n+app.set('servers', servers);\n+\n+// This middleware method takes off the first segment which is the serverName and puts it into a query parameter\n+app.use((req, res, next) => serverNameMiddleWare(req, res, next));\n+\n+// Initialize Passport and restore authentication state, if any, from the\n+// session.\n+app.use(session({ secret: \"cats\", resave: false, saveUninitialized: false }));\n+app.use(bodyParser.urlencoded({ extended: true }));\n+app.use(bodyParser.json());\n+app.use(passport.initialize());\n+app.use(passport.session());\n+\n+// passport configuration\n+passport = passportConfiguration(passport);\n+// make initialized object available to routes\n+app.set('passport', passport)\n+\n+if (env === 'development') {\n+  // use React proxy routing\n+  // organize routes in another file\n+  app.use('/', router);\n+} else {\n+  // use Web Server routing for production build\n+\n+  // app.use(express.static(`${__dirname}/client/build`));\n+  app.use(express.static(path.join(__dirname, '../cra-client/build')));\n+  // app.all('*', (req, res, next) => res.sendFile(`${__dirname}/client/build/index.html`));\n+  app.all('*', (req, res, next) => res.sendFile(path.join(__dirname, '../cra-client/build/index.html')));\n+}\n+\n+// create the https server\n+https.createServer(options, app).listen(PORT, () => {\n+  console.log(`Server listening on port: ${PORT}`);\n+  if (env === 'development') console.log(`React UI listening on port: 3000`);", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2NTg1MA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484465850", "bodyText": "Line 68 has ${PORT} to allow for a dynamic change on the server. 3000 refers to the port of the UI, which is started in parallel and runs on a different port. Agreed it is not ideal to hardcode this, but not sure of a simple method to dynamically determine the port of another app.", "author": "jmmadsen", "createdAt": "2020-09-07T14:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4NTUyOA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484485528", "bodyText": "maybe just reword to 'react UI listening on port (default 3000)' just to be clear, otherwise it's potentially misleading.\nThe ports will need to be configurable", "author": "planetf1", "createdAt": "2020-09-07T15:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzI3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzY0MA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484287640", "bodyText": "We should probably list it as 'Egeria contributors' or similar, we we do with the copyright", "author": "planetf1", "createdAt": "2020-09-07T08:51:39Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/package.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"name\": \"cra-server\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"Egeria Presentation Server\",\n+  \"main\": \"index.js\",\n+  \"scripts\": {\n+    \"start\": \"run-p start:server start:client\",\n+    \"start:server\": \"nodemon index.js\",\n+    \"start:client\": \"cd ../cra-client && npm start\",\n+    \"build\": \"cd ../cra-client && npm run build\",\n+    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n+  },\n+  \"author\": \"Jacob Madsen\",", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2NzE0OQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484467149", "bodyText": "Agreed, updated both package.json files", "author": "jmmadsen", "createdAt": "2020-09-07T14:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzY0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4NTExOQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484485119", "bodyText": "thanks", "author": "planetf1", "createdAt": "2020-09-07T15:09:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTQwMw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484289403", "bodyText": "we may need to guard this or remove it if any potential for personally identifiable information", "author": "planetf1", "createdAt": "2020-09-07T08:54:41Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/router/routes.js", "diffHunk": "@@ -0,0 +1,275 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+const express = require('express');\n+const router = express.Router();\n+const path = require('path');\n+const axios = require('axios');\n+\n+const getAxiosInstance = require('../functions/getAxiosInstance');\n+const validateURL = require('../validations/validateURL');\n+const validateAdminURL = require('../validations/validateAdminURL');\n+\n+\n+router.get('/', (req, res) => {\n+  res.send('Egeria server is live!');\n+})\n+\n+/**\n+ * Middleware to handle post requests that start with /login i.e. the login request. The tenant segment has been removed by previous middleware. \n+ * The login is performed using passport' local authentication (http://www.passportjs.org/docs/authenticate/). \n+ * TODO support other authentication style e.g oauth and ldap both of which passport supports.\n+ */\n+router.post(\"/login\", function (req, res, next) {\n+  console.log(\"/login\");\n+  // get passport instance from app\n+  const passport = (req.app.get('passport'));\n+  passport.authenticate(\"local\", function (err, user, next) {\n+    if (err) {\n+      return next(err);\n+    }\n+    if (!user) {\n+      return res.json({ status: \"failed\", error: \"Invalid credentials\" });\n+    }\n+\n+    // req / res held in closure\n+    req.logIn(user, function (err) {\n+      if (err) {\n+        return next(err);\n+      }\n+\n+      return res.json({ status: \"success\" });\n+    });\n+  })(req, res, next);\n+});\n+\n+/**\n+ * logout - destroy the session\n+ */\n+router.get(\"/logout\", function (req, res) {\n+  console.log(\"/logout\");\n+  req.session.destroy(function (err) {\n+    // https://stackoverflow.com/questions/13758207/why-is-passportjs-in-node-not-removing-session-on-logout\n+    //  explicity clear the cookie.\n+    res.clearCookie(\"connect.sid\");\n+    console.log(\"re direct to /loggedOut\");\n+    res.redirect(\"/\" + req.query.serverName + \"/login\");\n+  });\n+});\n+\n+const staticJoinedPath = path.join(__dirname, \"../../dist\");\n+router.use(express.static(staticJoinedPath, { index: false }));\n+const joinedPath = path.join(__dirname, \"../../dist\", \"index.html\");\n+/**\n+ * Process login url,\n+ */\n+router.get(\"/login\", (req, res) => {\n+  console.log(\"/login called \" + joinedPath);\n+  res.sendFile(joinedPath);\n+});\n+\n+router.post(\"/servers/*\", (req, res) => {\n+  const incomingUrl = req.url;\n+  console.log(\"/servers/* post called \" + incomingUrl);\n+  const body = req.body;\n+  console.log(\"Got body:\", body);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(incomingUrl, servers)) {\n+    const instance = getAxiosInstance(incomingUrl);\n+    instance\n+      .post(\"\", body)\n+      .then(function (response) {\n+        console.log(\"response.data\");\n+        console.log(response.data);\n+        const resBody = response.data;\n+        res.setHeader(\"Content-Type\", \"application/json\");\n+        res.json(resBody);\n+      })\n+      .catch(function (error) {\n+        console.log(error);\n+        res.status(400).send(error);\n+      })\n+      .then(function () {\n+        // always executed\n+      });\n+  } else {\n+    res.status(400).send(\"Error, invalid supplied URL: \" + incomingUrl);\n+  }\n+});\n+\n+/**\n+ * Middleware to proxy put requests that start with /servers.\n+ * The outbound call is made with https. \n+ */\n+router.put(\"/servers/*\", (req, res) => {\n+  const incomingUrl = req.url;\n+  console.log(\"/servers/* put called \" + incomingUrl);\n+  const body = req.body;\n+  console.log(\"Got body:\", body);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(incomingUrl, servers)) {\n+    const instance = getAxiosInstance(incomingUrl);\n+    instance\n+      .put(\"\", body)\n+      .then(function (response) {\n+        console.log(\"response.data\");\n+        console.log(response.data);\n+        const resBody = response.data;\n+        res.setHeader(\"Content-Type\", \"application/json\");\n+        res.json(resBody);\n+      })\n+      .catch(function (error) {\n+        console.log(error);\n+        res.status(400).send(error);\n+      })\n+      .then(function () {\n+        // always executed\n+      });\n+  } else {\n+    res.status(400).send(\"Error, invalid supplied URL: \" + incomingUrl);\n+  }\n+});\n+\n+/**\n+ * Middleware to proxy delete requests that start with /servers.\n+ * The outbound call is made with https. \n+ */\n+router.delete(\"/servers/*\", (req, res) => {\n+  const incomingUrl = req.url;\n+  console.log(\"/servers/* delete called \" + incomingUrl);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(incomingUrl, servers)) {\n+    const instance = getAxiosInstance(incomingUrl);\n+    instance\n+      .delete()\n+      .then(function (response) {\n+        console.log(\"response.data\");\n+        console.log(response.data);\n+        const resBody = response.data;\n+        res.setHeader(\"Content-Type\", \"application/json\");\n+        res.json(resBody);\n+      })\n+      .catch(function (error) {\n+        console.log(error);\n+        res.status(400).send(error);\n+      })\n+      .then(function () {\n+        // always executed\n+      });\n+  } else {\n+    res.status(400).send(\"Error, invalid supplied URL: \" + incomingUrl);\n+  }\n+});\n+\n+/**\n+ * Middleware to proxy get requests that start with /servers.\n+ * The outbound call is made with https. \n+ */\n+router.get(\"/servers/*\", (req, res) => {\n+  const url = req.url;\n+  console.log(\"/servers/* get called \" + url);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(url, servers)) {\n+    const instance = getAxiosInstance(url);\n+    instance\n+      .get()\n+      .then(function (response) {\n+        console.log(\"response\");", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4MjYyNw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484482627", "bodyText": "is anything in the response sensitive in any way? Who sees this log? is it just the user accessing the ui? or the server admin? The former is ok, the latter requires care.", "author": "planetf1", "createdAt": "2020-09-07T15:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4NDk4NQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484484985", "bodyText": "@davidradl ?", "author": "planetf1", "createdAt": "2020-09-07T15:08:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTQwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNTA2NQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484505065", "bodyText": "Commented out lines in question", "author": "jmmadsen", "createdAt": "2020-09-07T15:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTQwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTkwOA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484289908", "bodyText": "see comment above about certs - if we ship one may be useful to doc how. but can be later PR..", "author": "planetf1", "createdAt": "2020-09-07T08:55:32Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/ssl/keys/server.cert", "diffHunk": "@@ -0,0 +1,22 @@\n+-----BEGIN CERTIFICATE-----\n+MIIDnjCCAoYCCQDR7DKQq8tpSzANBgkqhkiG9w0BAQsFADCBkDESMBAGA1UECAwJ", "originalCommit": "9379a6529bb35a009c33640e7a254b7dd7a98235", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ4MjcxMQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484482711", "bodyText": "as above let's handle in #1403", "author": "planetf1", "createdAt": "2020-09-07T15:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTkwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNDczNQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484504735", "bodyText": "Agreed. Issue addressed in #1403", "author": "jmmadsen", "createdAt": "2020-09-07T15:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTkwOA=="}], "type": "inlineReview"}, {"oid": "1d15fbb03d91d1360c886c29a1377f4ad36ee7fd", "url": "https://github.com/odpi/egeria/commit/1d15fbb03d91d1360c886c29a1377f4ad36ee7fd", "message": "minor updates in accordance to Nigel's comments in the PR\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-09-07T14:34:15Z", "type": "commit"}, {"oid": "779cd429967a1bb2663d7fe9250c3d6a36b2556e", "url": "https://github.com/odpi/egeria/commit/779cd429967a1bb2663d7fe9250c3d6a36b2556e", "message": "Merge branch 'master' into craFixed", "committedDate": "2020-09-07T14:35:12Z", "type": "commit"}, {"oid": "c8306d0c9dd65aa4cbc65bfc28001063974f1b27", "url": "https://github.com/odpi/egeria/commit/c8306d0c9dd65aa4cbc65bfc28001063974f1b27", "message": "removed logging of potential PII\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-09-07T16:00:42Z", "type": "commit"}, {"oid": "6e351dc79310604bed860bfafd45a2e36ccffc12", "url": "https://github.com/odpi/egeria/commit/6e351dc79310604bed860bfafd45a2e36ccffc12", "message": "Merge branch 'craFixed' of https://github.com/jmmadsen/egeria into craFixed\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-09-07T16:01:03Z", "type": "commit"}, {"oid": "f7dab61b1d3901a7ae9347f7ad1315079995d943", "url": "https://github.com/odpi/egeria/commit/f7dab61b1d3901a7ae9347f7ad1315079995d943", "message": "Merge branch 'master' into craFixed", "committedDate": "2020-09-08T13:04:45Z", "type": "commit"}, {"oid": "4c41884216fd4304afecfb2182ea322b62b82259", "url": "https://github.com/odpi/egeria/commit/4c41884216fd4304afecfb2182ea322b62b82259", "message": "Merge remote-tracking branch 'upstream/master' into craFixed\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-10-01T19:41:14Z", "type": "commit"}, {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "url": "https://github.com/odpi/egeria/commit/e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "message": "updated security vulnerabilities. added self-signed cert fix\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-10-01T21:37:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0Njc1NA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499746754", "bodyText": "this is reintroducing a different key - we've just fixed this for 2.3 and are using the same key as the rest of the UI - for now. recommend this change is removed", "author": "planetf1", "createdAt": "2020-10-05T17:06:41Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/ssl/keys/server.key", "diffHunk": "@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----", "originalCommit": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MDg4Mg==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499750882", "bodyText": "or at least corrected to use same file\nit's also possible to copy the file by using the maven resources plugin in the pom - but that can be an optimization for later when we finess security", "author": "planetf1", "createdAt": "2020-10-05T17:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0Njc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2OTk4OQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501269989", "bodyText": "updated key to use one in master branch", "author": "jmmadsen", "createdAt": "2020-10-07T19:51:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0Njc1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NjgxMA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499746810", "bodyText": "this is reintroducing a different key - we've just fixed this for 2.3 and are using the same key as the rest of the UI - for now. recommend this change is removed", "author": "planetf1", "createdAt": "2020-10-05T17:06:48Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/ssl/keys/server.cert", "diffHunk": "@@ -0,0 +1,22 @@\n+-----BEGIN CERTIFICATE-----\n+MIIDnjCCAoYCCQDR7DKQq8tpSzANBgkqhkiG9w0BAQsFADCBkDESMBAGA1UECAwJ\n+SGFtcHNoaXJlMRAwDgYDVQQHDAdIdXJzbGV5MRkwFwYDVQQKDBBMaW51eCBGb3Vu", "originalCommit": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2OTg2MA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501269860", "bodyText": "updated key to use one in master branch", "author": "jmmadsen", "createdAt": "2020-10-07T19:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NjgxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzU0OQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499747549", "bodyText": "This should have the egeria contributor statement in not individuals", "author": "planetf1", "createdAt": "2020-10-05T17:08:11Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/package.json", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"name\": \"cra-server\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"Egeria Presentation Server\",\n+  \"main\": \"index.js\",\n+  \"scripts\": {\n+    \"start\": \"run-p start:server start:client\",\n+    \"start:server\": \"nodemon index.js\",\n+    \"start:client\": \"cd ../cra-client && npm start\",\n+    \"build\": \"cd ../cra-client && npm run build\",\n+    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n+  },\n+  \"contributors\": [\n+    {", "originalCommit": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MDA1MQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499750051", "bodyText": "search for 'webpack-build' in the pom.xml. This shows that currently we run webpack with the arguments --mode development --devtool inline-source-map in the nodejs directory. If this no longer works, those args/executions will need updating accordingly.\nthe file open-metadata-distribution/open-metadata-assemblies/src/main/assemblies/egeria-presentation-server.xml\nthen controls what gets put into an archive, which is then installed into a docker container which is defined in open-metadata-resources/open-metadata-deployment/docker/presentation-server . It is placed in /home/node/presentation-server & we start by running node src/server/index.js", "author": "planetf1", "createdAt": "2020-10-05T17:12:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MTgwMg==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499751802", "bodyText": "this is for a 'production' build. Obviously anything additional to aid in development turnaround is fine, and at least for a UI developer, I don't see the need to support in the POM (though possible if desired)", "author": "planetf1", "createdAt": "2020-10-05T17:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MDUzNQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501270535", "bodyText": "Updated contributor statement with standard Apache line. i am unsure about the second comment - perhaps we can discuss more after this merge? the production ready version of CRA is still not finalized yet, so i think this comment would be in line with those changes i plan on doing next", "author": "jmmadsen", "createdAt": "2020-10-07T19:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzcxMw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499747713", "bodyText": "is this the final name?", "author": "planetf1", "createdAt": "2020-10-05T17:08:31Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/package.json", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"name\": \"cra-server\",", "originalCommit": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MDY5NQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501270695", "bodyText": "updated names to presentation-server and presentation-server-client", "author": "jmmadsen", "createdAt": "2020-10-07T19:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzcxMw=="}], "type": "inlineReview"}, {"oid": "2a520bf41ccbfa93762e2d331d8209a050d6eb3a", "url": "https://github.com/odpi/egeria/commit/2a520bf41ccbfa93762e2d331d8209a050d6eb3a", "message": "updated based on commit comments from graham. name convention changes and updating keys\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-10-07T19:50:23Z", "type": "commit"}, {"oid": "e2d6c7afa6efd98a20586f71abeb79c4c76b6d39", "url": "https://github.com/odpi/egeria/commit/e2d6c7afa6efd98a20586f71abeb79c4c76b6d39", "message": "Merge branch 'master' into craFixed", "committedDate": "2020-10-08T10:27:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4MTQ4Nw==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501781487", "bodyText": "in the official documentation, here [0], it says that in order to deploy the generated build, production code, you should set up your favourite HTTP server and they offer an example using \"serve\" or a nodejs with express static folder approach.\nhaving this command [1] as a production command for starting the ui is actually starting a development server with HTTPS flag, adding --prod will also minify and uglify the code(as an example), but still, it is wrongly approached.\nreact-scripts should be used for development only and for bundling the code into production, like preparing the ENV variables and assets.\nit also tells here [2] that, and i quote,\n\nThis will simply start the basic, ExpressJS server included with the react-server package. It's not a total solution yet! Don't worry, we'll get there later in the guide.\n\nwhich means there should be at least another layer of nginx as they say in the tutorial later.\n[0] - https://create-react-app.dev/docs/deployment\n[1] - HTTPS=true react-scripts start\n[2] - https://react-server.io/docs/guides/production", "author": "sarbull", "createdAt": "2020-10-08T14:47:44Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/package.json", "diffHunk": "@@ -24,13 +24,18 @@\n   },\n   \"devDependencies\": {},\n   \"scripts\": {\n-    \"start\": \"react-scripts start\",\n+    \"start\": \"HTTPS=true react-scripts start\",", "originalCommit": "e2d6c7afa6efd98a20586f71abeb79c4c76b6d39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4NTk0NA==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501785944", "bodyText": "Just pushed an update to remove the HTTPS flag for now. The correct build approach is going to be implemented in the next PR", "author": "jmmadsen", "createdAt": "2020-10-08T14:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4MTQ4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4NzA1OQ==", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501787059", "bodyText": "The purpose of this PR is to implement react-scripts to enable more efficient development for the other UI authors before the build is finalized", "author": "jmmadsen", "createdAt": "2020-10-08T14:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4MTQ4Nw=="}], "type": "inlineReview"}, {"oid": "03032ab5b5d114c1bc5440580d8ec8cf2c2d297a", "url": "https://github.com/odpi/egeria/commit/03032ab5b5d114c1bc5440580d8ec8cf2c2d297a", "message": "removed HTTPS flag from start command in client\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-10-08T14:51:38Z", "type": "commit"}, {"oid": "256c3d489a6525bbfef89335d6f7f578dfed7fda", "url": "https://github.com/odpi/egeria/commit/256c3d489a6525bbfef89335d6f7f578dfed7fda", "message": "Merge branch 'craFixed' of https://github.com/jmmadsen/egeria into craFixed\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>", "committedDate": "2020-10-08T14:52:02Z", "type": "commit"}, {"oid": "0673f056188e4786fe612a322d9d25048e77b118", "url": "https://github.com/odpi/egeria/commit/0673f056188e4786fe612a322d9d25048e77b118", "message": "Merge branch 'master' into craFixed", "committedDate": "2020-10-08T16:10:24Z", "type": "commit"}, {"oid": "348fed7885cfbcc7797abfb76942db3920306961", "url": "https://github.com/odpi/egeria/commit/348fed7885cfbcc7797abfb76942db3920306961", "message": "Merge branch 'master' into craFixed", "committedDate": "2020-10-09T08:33:36Z", "type": "commit"}, {"oid": "f0a173af66a26e2f787f043565bb80c7d51bc9ba", "url": "https://github.com/odpi/egeria/commit/f0a173af66a26e2f787f043565bb80c7d51bc9ba", "message": "Merge branch 'master' into craFixed", "committedDate": "2020-10-09T09:36:07Z", "type": "commit"}]}