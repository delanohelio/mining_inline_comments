{"pr_number": 3733, "pr_title": "RELEASE 2.3 - update presentation server readme", "pr_createdAt": "2020-10-02T09:09:53Z", "pr_url": "https://github.com/odpi/egeria/pull/3733", "timeline": [{"oid": "3e1723cef667bf47d75f8fbb59ca9d8768366e56", "url": "https://github.com/odpi/egeria/commit/3e1723cef667bf47d75f8fbb59ca9d8768366e56", "message": "#3682 amend the presnetaion server readme for release 2.3\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>", "committedDate": "2020-10-02T08:41:15Z", "type": "commit"}, {"oid": "c9020a348d591b8861abe5dbcfc789b30a23d0cc", "url": "https://github.com/odpi/egeria/commit/c9020a348d591b8861abe5dbcfc789b30a23d0cc", "message": "#3682 add descriptions of the Ui capabilities\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>", "committedDate": "2020-10-02T08:41:23Z", "type": "commit"}, {"oid": "4040d389c2443e2b3497896f9f16e9b1afca655f", "url": "https://github.com/odpi/egeria/commit/4040d389c2443e2b3497896f9f16e9b1afca655f", "message": "#3682 correct typo\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>", "committedDate": "2020-10-02T08:41:31Z", "type": "commit"}, {"oid": "6893c9cb67b5a5bc69c820b5665f6006834409bb", "url": "https://github.com/odpi/egeria/commit/6893c9cb67b5a5bc69c820b5665f6006834409bb", "message": "#3683 additional updates for release 2.3\n\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>", "committedDate": "2020-10-02T09:03:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDQ1NQ==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498714455", "bodyText": "platform root ?", "author": "davidradl", "createdAt": "2020-10-02T09:28:36Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the server root url for the view server. ", "originalCommit": "6893c9cb67b5a5bc69c820b5665f6006834409bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxOTU1MA==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498719550", "bodyText": "yes!", "author": "planetf1", "createdAt": "2020-10-02T09:39:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDQ1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDk1Ng==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498714956", "bodyText": "It would be better to use faithbroker rather than faith. I think this is more widely used", "author": "davidradl", "createdAt": "2020-10-02T09:29:41Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the server root url for the view server. \n * An example of the environment variable you would specify for a UI tenant with server name `aaa` with a remote server name\n `  cocoView1` and remote URL of `https://localhost:9443 ` is\n  ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n-* To run the presentation server in production, use the presentation server assembly and specify the environment variables as required.   \n+* To run the Presentation Server in production, use the Presentation Server assembly and specify the environment variables as required.   \n \n ## For development\n  * Add the presentation-server folder into [Visual Studio Code](https://code.visualstudio.com/). It will create a new workspace.\n- * You can open a terminal in Visual Studio code to issue the npm commands\n+ * You can open a terminal in Visual Studio Code to issue the npm commands\n  * Set up your environment by running `npm install`\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n \n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.\n- * Enter `http://localhost:3000/` to access the new UI in development mode.\n- \n ## Access UI using the browser. \n- * Enter 'https://localhost:8091/<tenant-name>/' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n+ * Enter 'https://localhost:8091/<tenant-name>/login' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n  Coco Pharmaceutical personnas have been enabled here - use user 'faith' and password 'admin'. If there is an environment variable :", "originalCommit": "6893c9cb67b5a5bc69c820b5665f6006834409bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxODQzNw==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498718437", "bodyText": "actually see below -- I needed to use garygeeke for dino to work.. though that is demo specific. for now will change faith to faithbroker as I don't know implications for glossary -- and long term a better approach would suggest different users for the different UIs most likely?", "author": "planetf1", "createdAt": "2020-10-02T09:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxOTcyOQ==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498719729", "bodyText": "changed to faithbroker here and left clarification under the demo section. reopen if more is needed", "author": "planetf1", "createdAt": "2020-10-02T09:40:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDk1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNTQ5Mg==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498715492", "bodyText": "There is ongoing work to enable easy running of the new view services in a demo environment", "author": "davidradl", "createdAt": "2020-10-02T09:30:52Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the server root url for the view server. \n * An example of the environment variable you would specify for a UI tenant with server name `aaa` with a remote server name\n `  cocoView1` and remote URL of `https://localhost:9443 ` is\n  ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n-* To run the presentation server in production, use the presentation server assembly and specify the environment variables as required.   \n+* To run the Presentation Server in production, use the Presentation Server assembly and specify the environment variables as required.   \n \n ## For development\n  * Add the presentation-server folder into [Visual Studio Code](https://code.visualstudio.com/). It will create a new workspace.\n- * You can open a terminal in Visual Studio code to issue the npm commands\n+ * You can open a terminal in Visual Studio Code to issue the npm commands\n  * Set up your environment by running `npm install`\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n \n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.\n- * Enter `http://localhost:3000/` to access the new UI in development mode.\n- \n ## Access UI using the browser. \n- * Enter 'https://localhost:8091/<tenant-name>/' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n+ * Enter 'https://localhost:8091/<tenant-name>/login' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n  Coco Pharmaceutical personnas have been enabled here - use user 'faith' and password 'admin'. If there is an environment variable :\n   ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n-    \n-  \n+\n+## There is on-going work to enhance the development experience \n+ * The build described above is a production build; meaning everything is rebuilt each time a change is made.\n+ * There is ongoing work to allow developers to do be able to make changes and hot swap them into a running server.\n+ * The ongoing work is being tracked in issue [Git issue 3543](https://github.com/odpi/egeria/issues/3543)\n+ * The work involves using Create React App. This will be done iteratively.\n+ * The current latest client code is in the client folder.\n+ * The new work is being developed in the cra-client directory and may contain out of date Presentation Server source code. \n+\n+## There is ongoing work to enhance the ability to easily run the new services in a demo environment", "originalCommit": "6893c9cb67b5a5bc69c820b5665f6006834409bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMDU3Mw==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498720573", "bodyText": "I changed to 'Easy running of the new Presentation Server and view services in a demo environment' as the text was rather long when formatted. The text in this para already refers to work in progress, plus it's really PS that gives the end user function", "author": "planetf1", "createdAt": "2020-10-02T09:41:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNTQ5Mg=="}], "type": "inlineReview"}, {"oid": "f052015429017e55f064456550aab22f6074367b", "url": "https://github.com/odpi/egeria/commit/f052015429017e55f064456550aab22f6074367b", "message": "#3733 add review comments\n\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>", "committedDate": "2020-10-02T09:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODYzMg==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498728632", "bodyText": "sorry looking at it I think the aaa reference is a bit confusing. I suggest  then saying the sample .env file has this set to aaa.", "author": "davidradl", "createdAt": "2020-10-02T09:58:58Z", "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the platform root url for the view server. \n * An example of the environment variable you would specify for a UI tenant with server name `aaa` with a remote server name\n `  cocoView1` and remote URL of `https://localhost:9443 ` is\n  ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n-* To run the presentation server in production, use the presentation server assembly and specify the environment variables as required.   \n+* To run the Presentation Server in production, use the Presentation Server assembly and specify the environment variables as required.   \n \n ## For development\n  * Add the presentation-server folder into [Visual Studio Code](https://code.visualstudio.com/). It will create a new workspace.\n- * You can open a terminal in Visual Studio code to issue the npm commands\n+ * You can open a terminal in Visual Studio Code to issue the npm commands\n  * Set up your environment by running `npm install`\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n \n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.\n- * Enter `http://localhost:3000/` to access the new UI in development mode.\n- \n ## Access UI using the browser. \n- * Enter 'https://localhost:8091/<tenant-name>/' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n- Coco Pharmaceutical personnas have been enabled here - use user 'faith' and password 'admin'. If there is an environment variable :\n+ * Enter 'https://localhost:8091/<tenant-name>/login' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n+ Coco Pharmaceutical personnas have been enabled here - use user 'faithbroker' and password 'admin'. If there is an environment variable :\n   ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. ", "originalCommit": "f052015429017e55f064456550aab22f6074367b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyOTk1Nw==", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498729957", "bodyText": "I'm inclined to leave as is in 2.3 and go for more thorough updating later in master?", "author": "planetf1", "createdAt": "2020-10-02T10:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODYzMg=="}], "type": "inlineReview"}]}