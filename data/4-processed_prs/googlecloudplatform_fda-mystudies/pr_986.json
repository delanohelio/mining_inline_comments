{"pr_number": 986, "pr_title": "OAuth Scim Service - Fixed Issue #976 - accountStatus value is returned as null for auto sign-in scenario", "pr_createdAt": "2020-09-18T05:25:12Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/986", "timeline": [{"oid": "73052968efae5bfc5a3d196ed539c735058e966a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/73052968efae5bfc5a3d196ed539c735058e966a", "message": "Added ACCOUNT_STATUS_COOKIE for auto signin\n\nAdded ACCOUNT_STATUS_COOKIE for auto signin", "committedDate": "2020-09-16T09:52:33Z", "type": "commit"}, {"oid": "8fb9edc3444641bd9163a3763b2653b955a0efc4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8fb9edc3444641bd9163a3763b2653b955a0efc4", "message": "Added integration tests to validate the account status cookie\n\nAdded integration tests to validate the account status cookie", "committedDate": "2020-09-18T05:14:55Z", "type": "commit"}, {"oid": "59510ffe271234ef7d9af42843af8d19a16e1a49", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/59510ffe271234ef7d9af42843af8d19a16e1a49", "message": "Added shouldRedirectToLoginPageForInvalidTempRegIdForAutoSignIn test\n\nAdded shouldRedirectToLoginPageForInvalidTempRegIdForAutoSignIn test", "committedDate": "2020-09-18T05:22:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk2NTQ5Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/986#discussion_r490965493", "bodyText": "nit: rename to params", "author": "zohrehj", "createdAt": "2020-09-18T13:53:49Z", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginControllerTest.java", "diffHunk": "@@ -197,16 +200,91 @@ public void shouldReturnAutoLoginPage() throws Exception {\n     MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>();\n     queryParams.add(LOGIN_CHALLENGE, AUTO_LOGIN_LOGIN_CHALLENGE_VALUE);\n \n+    MvcResult result =\n+        mockMvc\n+            .perform(\n+                get(ApiEndpoint.LOGIN_PAGE.getPath())\n+                    .contextPath(getContextPath())\n+                    .queryParams(queryParams))\n+            .andDo(print())\n+            .andExpect(status().isOk())\n+            .andExpect(view().name(AUTO_LOGIN_VIEW_NAME))\n+            .andExpect(content().string(containsString(\"<title>Please wait</title>\")))\n+            .andReturn();\n+\n+    String accountStatus = result.getResponse().getCookie(ACCOUNT_STATUS_COOKIE).getValue();\n+    assertTrue(UserAccountStatus.ACTIVE.getStatus() == Integer.parseInt(accountStatus));\n+  }\n+\n+  @Test\n+  public void shouldRedirectToConsentPageForAutoSignIn() throws Exception {\n+    // Step-1 user registration\n+    UserEntity user = new UserEntity();\n+    user.setEmail(\"mockit_email@grr.la\");\n+    user.setAppId(\"MyStudies\");\n+    user.setStatus(UserAccountStatus.ACTIVE.getStatus());\n+    user.setTempRegId(TEMP_REG_ID_VALUE);\n+    // UserInfo JSON contains password hash & salt, password history etc\n+    ObjectNode userInfo = JsonUtils.getObjectNode().put(\"password\", PasswordGenerator.generate(12));\n+    user.setUserInfo(userInfo);\n+    userRepository.saveAndFlush(user);\n+\n+    // Step-2 redirect to auto login page after signup\n+    MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>();\n+\n+    Cookie appIdCookie = new Cookie(APP_ID_COOKIE, \"MyStudies\");\n+    Cookie loginChallenge = new Cookie(LOGIN_CHALLENGE_COOKIE, LOGIN_CHALLENGE_VALUE);\n+    Cookie mobilePlatformCookie =\n+        new Cookie(MOBILE_PLATFORM_COOKIE, MobilePlatform.UNKNOWN.getValue());\n+    Cookie tempRegId = new Cookie(TEMP_REG_ID_COOKIE, TEMP_REG_ID_VALUE);\n+\n+    MvcResult result =\n+        mockMvc\n+            .perform(\n+                post(ApiEndpoint.LOGIN_PAGE.getPath())\n+                    .contextPath(getContextPath())\n+                    .params(queryParams)\n+                    .cookie(appIdCookie, loginChallenge, mobilePlatformCookie, tempRegId))\n+            .andDo(print())\n+            .andExpect(status().is3xxRedirection())\n+            .andExpect(redirectedUrl(ApiEndpoint.CONSENT_PAGE.getUrl()))\n+            .andReturn();\n+\n+    String accountStatus = result.getResponse().getCookie(ACCOUNT_STATUS_COOKIE).getValue();\n+    assertTrue(UserAccountStatus.ACTIVE.getStatus() == Integer.parseInt(accountStatus));\n+  }\n+\n+  @Test\n+  public void shouldRedirectToLoginPageForInvalidTempRegIdForAutoSignIn() throws Exception {\n+    // Step-1 user registration\n+    UserEntity user = new UserEntity();\n+    user.setEmail(\"mockit_email@grr.la\");\n+    user.setAppId(\"MyStudies\");\n+    user.setStatus(UserAccountStatus.ACTIVE.getStatus());\n+    user.setTempRegId(IdGenerator.id());\n+    // UserInfo JSON contains password hash & salt, password history etc\n+    ObjectNode userInfo = JsonUtils.getObjectNode().put(\"password\", PasswordGenerator.generate(12));\n+    user.setUserInfo(userInfo);\n+    userRepository.saveAndFlush(user);\n+\n+    // Step-2 redirect to auto login page after signup\n+    MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>();\n+\n+    Cookie appIdCookie = new Cookie(APP_ID_COOKIE, \"MyStudies\");\n+    Cookie loginChallenge = new Cookie(LOGIN_CHALLENGE_COOKIE, LOGIN_CHALLENGE_VALUE);\n+    Cookie mobilePlatformCookie =\n+        new Cookie(MOBILE_PLATFORM_COOKIE, MobilePlatform.UNKNOWN.getValue());\n+    Cookie tempRegId = new Cookie(TEMP_REG_ID_COOKIE, TEMP_REG_ID_VALUE);\n+\n     mockMvc\n         .perform(\n-            get(ApiEndpoint.LOGIN_PAGE.getPath())\n+            post(ApiEndpoint.LOGIN_PAGE.getPath())\n                 .contextPath(getContextPath())\n-                .queryParams(queryParams))\n+                .params(queryParams)", "originalCommit": "59510ffe271234ef7d9af42843af8d19a16e1a49", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1c962e3cad7bb6404f97919fda18b30c0963f23f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1c962e3cad7bb6404f97919fda18b30c0963f23f", "message": "Merge branch 'develop' into account_status_issue_auto-signin-scenario", "committedDate": "2020-09-18T14:11:38Z", "type": "commit"}]}