{"pr_number": 674, "pr_title": "Participant manager service - GET /locations and /locations/{locationId} implementation with integration tests", "pr_createdAt": "2020-07-24T14:37:52Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674", "timeline": [{"oid": "8c1852c50e24eb4dcac054628178939161502694", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8c1852c50e24eb4dcac054628178939161502694", "message": "Get location API endpoint", "committedDate": "2020-07-24T14:33:11Z", "type": "commit"}, {"oid": "703a30e12bab6034cfcf85e95e45d9e142911eea", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/703a30e12bab6034cfcf85e95e45d9e142911eea", "message": "excludeStudyId not null check", "committedDate": "2020-07-24T15:20:56Z", "type": "commit"}, {"oid": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "message": "Integration test cases", "committedDate": "2020-07-24T16:16:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyMDU1Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r461320553", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              GET_LOCATION_SUCCESS(HttpStatus.OK, \"MSG-0008\", \"Get locations successfull\"),\n          \n          \n            \n            \n          \n          \n            \n              GET_LOCATION_FOR_SITE_SUCCESS(HttpStatus.OK, \"MSG-0009\", \"Get locations for site successfull\");\n          \n          \n            \n              GET_LOCATION_SUCCESS(HttpStatus.OK, \"MSG-0008\", \"Get locations successfully\"),\n          \n          \n            \n            \n          \n          \n            \n              GET_LOCATION_FOR_SITE_SUCCESS(HttpStatus.OK, \"MSG-0009\", \"Get locations for site successfulyl\");", "author": "saminguyen", "createdAt": "2020-07-28T05:06:23Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java", "diffHunk": "@@ -49,7 +49,11 @@\n \n   DECOMMISSION_SITE_SUCCESS(HttpStatus.OK, \"MSG-0014\", \"Site Decommissioned successfully\"),\n \n-  RECOMMISSION_SITE_SUCCESS(HttpStatus.OK, \"MSG-0015\", \"Site Recommissioned successfully\");\n+  RECOMMISSION_SITE_SUCCESS(HttpStatus.OK, \"MSG-0015\", \"Site Recommissioned successfully\"),\n+\n+  GET_LOCATION_SUCCESS(HttpStatus.OK, \"MSG-0008\", \"Get locations successfull\"),\n+\n+  GET_LOCATION_FOR_SITE_SUCCESS(HttpStatus.OK, \"MSG-0009\", \"Get locations for site successfull\");", "originalCommit": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc3Mjc5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462772794", "bodyText": "Changed to \"successfully\" from successfull.", "author": "madhurya-btc", "createdAt": "2020-07-30T06:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyMDU1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0NjQzNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462646437", "bodyText": "This is implying you are selecting Locations associated with this studyId. You should make clear in the name and comment here that you are filtering out this studyId specifically", "author": "saminguyen", "createdAt": "2020-07-29T23:27:00Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/LocationRepository.java", "diffHunk": "@@ -19,4 +22,12 @@\n     value = \"participant.manager.repository.enabled\",\n     havingValue = \"true\",\n     matchIfMissing = false)\n-public interface LocationRepository extends JpaRepository<LocationEntity, String> {}\n+public interface LocationRepository extends JpaRepository<LocationEntity, String> {\n+\n+  @Query(\n+      value =\n+          \"SELECT * FROM locations WHERE status = :status AND \"\n+              + \"id NOT IN (SELECT DISTINCT location_id FROM sites WHERE study_id = :studyId)\",\n+      nativeQuery = true)\n+  public List<LocationEntity> findByStatusAndStudyId(Integer status, String studyId);", "originalCommit": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc3NDcwMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462774700", "bodyText": "Changed name to findByStatusAndExcludeStudyId().", "author": "madhurya-btc", "createdAt": "2020-07-30T06:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0NjQzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0Nzc0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462647749", "bodyText": "Make a method for LocationDetails -> LocationEntity mapper method here instead and when you call it you can use the stream() method", "author": "saminguyen", "createdAt": "2020-07-29T23:31:11Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/LocationMapper.java", "diffHunk": "@@ -40,4 +44,18 @@ public static LocationEntity fromLocationRequest(LocationRequest locationRequest\n     locationEntity.setIsDefault(NO);\n     return locationEntity;\n   }\n+\n+  public static List<LocationDetails> toLocations(List<LocationEntity> locations) {", "originalCommit": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MDEyNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462650127", "bodyText": "make this method private", "author": "saminguyen", "createdAt": "2020-07-29T23:39:06Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -153,4 +164,104 @@ private ErrorCode validateUpdateLocationRequest(\n \n     return null;\n   }\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse getLocations(String userId) {\n+    logger.entry(\"begin getLocations()\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminUser = userRegAdminRepository.findById(userId);\n+    UserRegAdminEntity adminUser = optUserRegAdminUser.get();\n+    if (Permission.NO_PERMISSION == Permission.fromValue(adminUser.getEditPermission())) {\n+      logger.exit(ErrorCode.LOCATION_ACCESS_DENIED);\n+      return new LocationResponse(ErrorCode.LOCATION_ACCESS_DENIED);\n+    }\n+\n+    List<LocationEntity> locations =\n+        (List<LocationEntity>) CollectionUtils.emptyIfNull(locationRepository.findAll());\n+    List<String> locationIds =\n+        locations.stream().map(LocationEntity::getId).distinct().collect(Collectors.toList());\n+    Map<String, List<String>> locationStudies = getStudiesAndGroupByLocationId(locationIds);\n+\n+    List<LocationDetails> locationDetailsList = LocationMapper.toLocations(locations);\n+    for (LocationDetails locationDetails : locationDetailsList) {\n+      List<String> studies = locationStudies.get(locationDetails.getLocationId());\n+      locationDetails.getStudyNames().addAll(studies);\n+      locationDetails.setStudiesCount(locationDetails.getStudyNames().size());\n+    }\n+    LocationResponse locationResponse =\n+        new LocationResponse(MessageCode.GET_LOCATION_SUCCESS, locationDetailsList);\n+    logger.exit(String.format(\"locations size=%d\", locationResponse.getLocations().size()));\n+    return locationResponse;\n+  }\n+\n+  public Map<String, List<String>> getStudiesAndGroupByLocationId(List<String> locationIds) {", "originalCommit": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc3NTAyMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462775022", "bodyText": "Changed method scope to private.", "author": "madhurya-btc", "createdAt": "2020-07-30T06:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MDEyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4NjM4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462686380", "bodyText": "You should add the studyEntity here to verify it is actually excluded in the response", "author": "saminguyen", "createdAt": "2020-07-30T01:47:28Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/LocationControllerTest.java", "diffHunk": "@@ -300,10 +321,166 @@ public void shouldUpdateToReactiveLocation() throws Exception {\n     locationRepository.deleteById(locationId);\n   }\n \n+  @Test\n+  public void shouldReturnForbiddenForLocationAccessDeniedOfGetLocations() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocations() throws Exception {\n+    // Step 1: Set studies for location\n+    SiteEntity siteEntity = testDataHelper.newSiteEntity();\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    // Step 2: Call API and expect GET_LOCATION_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n+        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n+        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")))\n+        .andExpect(jsonPath(\"$.locations[0].studyNames\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].studyNames[0]\", is(\"LIMITJP001\")))\n+        .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_SUCCESS.getMessage())));\n+  }\n+\n+  @Test\n+  public void shouldReturnForbiddenForLocationForSiteAccessDenied() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocationsForSite() throws Exception {\n+    // Step 1: Set studies for location\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");", "originalCommit": "85315626cd01e46c1a504d9f2d85b0766aa2ac8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc3NTc2MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r462775761", "bodyText": "Added studyEntity.", "author": "madhurya-btc", "createdAt": "2020-07-30T06:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY4NjM4MA=="}], "type": "inlineReview"}, {"oid": "f620aca34bd1ac1c422094ecb1a4cfe5aecfabcc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f620aca34bd1ac1c422094ecb1a4cfe5aecfabcc", "message": "comment fixes", "committedDate": "2020-07-30T05:06:47Z", "type": "commit"}, {"oid": "2079a62c84f2f5291794a5c0e532a1c44b1343de", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2079a62c84f2f5291794a5c0e532a1c44b1343de", "message": "PR comment fixes", "committedDate": "2020-07-30T06:45:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzMDU0OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r463830548", "bodyText": "I think you should make this a separate test case, maybe shouldNoLocationsForSite_excludedByStudyId (or sth like that), and keep the old test case also.", "author": "saminguyen", "createdAt": "2020-07-31T20:50:53Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/LocationControllerTest.java", "diffHunk": "@@ -410,9 +410,7 @@ public void shouldReturnLocationsForSite() throws Exception {\n         .andExpect(\n             jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_FOR_SITE_SUCCESS.getMessage())))\n         .andExpect(jsonPath(\"$.locations\").isArray())\n-        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n-        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n-        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")));\n+        .andExpect(jsonPath(\"$.locations\", hasSize(0)));", "originalCommit": "2079a62c84f2f5291794a5c0e532a1c44b1343de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE5ODE3OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r464198178", "bodyText": "Kept old test case and renamed the above one to shouldReturnNoLocationsForSiteExcludedByStudyId().", "author": "madhurya-btc", "createdAt": "2020-08-03T05:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzMDU0OA=="}], "type": "inlineReview"}, {"oid": "3a9c89772f289d303122f9f34367894a156cd418", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3a9c89772f289d303122f9f34367894a156cd418", "message": "PR comment fixes", "committedDate": "2020-08-03T05:09:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3OTg5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r465779899", "bodyText": "replace with CUSTOM_LOCATION_ID?", "author": "saminguyen", "createdAt": "2020-08-05T14:44:11Z", "path": "participant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/LocationControllerTest.java", "diffHunk": "@@ -300,10 +321,193 @@ public void shouldUpdateToReactiveLocation() throws Exception {\n     locationRepository.deleteById(locationId);\n   }\n \n+  @Test\n+  public void shouldReturnForbiddenForLocationAccessDeniedOfGetLocations() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocations() throws Exception {\n+    // Step 1: Set studies for location\n+    SiteEntity siteEntity = testDataHelper.newSiteEntity();\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    // Step 2: Call API and expect GET_LOCATION_SUCCESS message\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath()).headers(headers).contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n+        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n+        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")))\n+        .andExpect(jsonPath(\"$.locations[0].studyNames\").isArray())\n+        .andExpect(jsonPath(\"$.locations[0].studyNames[0]\", is(\"LIMITJP001\")))\n+        .andExpect(jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_SUCCESS.getMessage())));\n+  }\n+\n+  @Test\n+  public void shouldReturnForbiddenForLocationForSiteAccessDenied() throws Exception {\n+    // Step 1: change editPermission to null\n+    userRegAdminEntity.setEditPermission(Permission.NO_PERMISSION.value());\n+    userRegAdminRepository.saveAndFlush(userRegAdminEntity);\n+\n+    // Step 2: Call API and expect error message LOCATION_ACCESS_DENIED\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isForbidden())\n+        .andExpect(jsonPath(\"$.error_description\", is(LOCATION_ACCESS_DENIED.getDescription())));\n+  }\n+\n+  @Test\n+  public void shouldReturnNoLocationsForSiteExcludedByStudyId() throws Exception {\n+    // Step 1: Set studies for location\n+    siteEntity.setStudy(studyEntity);\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    // Step 2: Call API and expect message GET_LOCATION_FOR_SITE_SUCCESS\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(\n+            jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_FOR_SITE_SUCCESS.getMessage())))\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations\", hasSize(0)));\n+  }\n+\n+  @Test\n+  public void shouldReturnLocationsForSite() throws Exception {\n+    // Step 1: Set studies for location\n+    siteEntity.setStudy(testDataHelper.newStudyEntity());\n+    siteEntity.getStudy().setName(\"LIMITJP001\");\n+    locationEntity.addSiteEntity(siteEntity);\n+    testDataHelper.getLocationRepository().save(locationEntity);\n+\n+    HttpHeaders headers = testDataHelper.newCommonHeaders();\n+    headers.set(USER_ID_HEADER, userRegAdminEntity.getId());\n+    // Step 2: Call API and expect message GET_LOCATION_FOR_SITE_SUCCESS\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.GET_LOCATIONS.getPath())\n+                .queryParam(\"excludeStudyId\", studyEntity.getId())\n+                .queryParam(\"status\", String.valueOf(CommonConstants.ACTIVE_STATUS))\n+                .content(asJsonString(getLocationRequest()))\n+                .headers(headers)\n+                .contextPath(getContextPath()))\n+        .andDo(print())\n+        .andExpect(status().isOk())\n+        .andExpect(\n+            jsonPath(\"$.message\", is(MessageCode.GET_LOCATION_FOR_SITE_SUCCESS.getMessage())))\n+        .andExpect(jsonPath(\"$.locations\").isArray())\n+        .andExpect(jsonPath(\"$.locations\", hasSize(1)))\n+        .andExpect(jsonPath(\"$.locations[0].locationId\", notNullValue()))\n+        .andExpect(jsonPath(\"$.locations[0].customId\", is(\"OpenStudy02\")));", "originalCommit": "3a9c89772f289d303122f9f34367894a156cd418", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2ODY3OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/674#discussion_r466968679", "bodyText": "Replaced with CUSTOM_LOCATION_ID.", "author": "madhurya-btc", "createdAt": "2020-08-07T10:55:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3OTg5OQ=="}], "type": "inlineReview"}, {"oid": "01b6773cfd749c8a4818781a417e335d52f05360", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/01b6773cfd749c8a4818781a417e335d52f05360", "message": "PR comment fixes", "committedDate": "2020-08-07T10:55:25Z", "type": "commit"}, {"oid": "b1130cb37c018c6be4d7896cac260b422e3f7e13", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b1130cb37c018c6be4d7896cac260b422e3f7e13", "message": "Merge branch 'develop' into participant-manager-getlocations-endpoint\n\n# Conflicts:\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/CommonConstants.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/Permission.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/LocationRepository.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/LocationController.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationService.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/common/ApiEndpoint.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/SitesControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "committedDate": "2020-08-14T05:08:24Z", "type": "commit"}, {"oid": "88c23e0a351e1275d63596e9cfce9a52f9bc0274", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/88c23e0a351e1275d63596e9cfce9a52f9bc0274", "message": "Merge branch 'develop' of https://github.com/GoogleCloudPlatform/fda-mystudies into participant-manager-getlocations-endpoint\n\n# Conflicts:\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/CommonConstants.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MessageCode.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/StudyRepository.java\n#\tcommon-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/repository/UserDetailsRepository.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/controller/LocationController.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/LocationMapper.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/ParticipantMapper.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AppServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationService.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/SiteServiceImpl.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/common/ApiEndpoint.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/AppControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/SitesControllerTest.java\n#\tparticipant-manager-module/participant-manager-service/src/test/java/com/google/cloud/healthcare/fdamystudies/helper/TestDataHelper.java", "committedDate": "2020-08-14T05:19:22Z", "type": "commit"}]}