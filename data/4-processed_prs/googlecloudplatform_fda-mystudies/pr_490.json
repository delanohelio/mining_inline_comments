{"pr_number": 490, "pr_title": "Integration test for enroll mgmt for remaining api", "pr_createdAt": "2020-06-10T18:29:10Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490", "timeline": [{"oid": "f8acd98411cbc1da5f052278761b0a29f5e314ae", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f8acd98411cbc1da5f052278761b0a29f5e314ae", "message": "code commit for another set of integration test for enroll mgmt", "committedDate": "2020-06-10T18:25:44Z", "type": "commit"}, {"oid": "432f37811a39c73a26164c26e84331b8d766ddf6", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/432f37811a39c73a26164c26e84331b8d766ddf6", "message": "Merge branch 'early-access' into early-access-enroll-mgmt-integration-test-change", "committedDate": "2020-06-10T18:32:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MDM0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438870340", "bodyText": "Use underscores to separate words.", "author": "nikklassen", "createdAt": "2020-06-11T15:27:52Z", "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";", "originalCommit": "432f37811a39c73a26164c26e84331b8d766ddf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczOTk2MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r439739961", "bodyText": "changed as per suggestion.", "author": "aswinijena100", "createdAt": "2020-06-13T13:37:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MDM0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MTI2NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438871264", "bodyText": "Don't add this header if you're going to replace it right afterwards.", "author": "nikklassen", "createdAt": "2020-06-11T15:28:48Z", "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+  }\n+\n+  @Test\n+  public void updateStudyStateFailure() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);", "originalCommit": "432f37811a39c73a26164c26e84331b8d766ddf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MDAwMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r439740000", "bodyText": "removed this header", "author": "aswinijena100", "createdAt": "2020-06-13T13:38:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MTI2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MTk1NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438871955", "bodyText": "You can just reuse the same variable.", "author": "nikklassen", "createdAt": "2020-06-11T15:29:32Z", "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+  }\n+\n+  @Test\n+  public void updateStudyStateFailure() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    // not valid user id\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // empty studylist\n+    List<StudiesBean> listStudies1 = new ArrayList<StudiesBean>();", "originalCommit": "432f37811a39c73a26164c26e84331b8d766ddf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MDAyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r439740026", "bodyText": "changed as per suggestion.", "author": "aswinijena100", "createdAt": "2020-06-13T13:38:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MTk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MzQ2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r438873465", "bodyText": "Shouldn't there be some assertion on the database to see this change? I'd like to see something added to the rest of these tests that shows we didn't just return OK and not do anything", "author": "nikklassen", "createdAt": "2020-06-11T15:31:01Z", "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAWFROMSTUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+  }\n+\n+  @Test\n+  public void updateStudyStateFailure() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    // not valid user id\n+    headers.set(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+\n+    // empty studylist\n+    List<StudiesBean> listStudies1 = new ArrayList<StudiesBean>();\n+    requestJson = getStudyStateJson(listStudies1);\n+    headers.set(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, \"\", BAD_REQUEST);\n+  }\n+\n+  @Test\n+  public void getStudyStateSuccess() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performGet(STUDY_STATE_PATH, headers, Constants.SUCCESS.toUpperCase(), OK);\n+  }\n+\n+  @Test\n+  public void getStudyStateUnauthorizedUserId() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.INVALID_USER_ID);\n+    performGet(STUDY_STATE_PATH, headers, \"\", UNAUTHORIZED);\n+  }\n+\n+  @Test\n+  public void withdrawFromStudySuccess() throws Exception {\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    String requestJson =\n+        getWithDrawJson(\n+            Constants.PARTICIPANT_ID, Constants.STUDY_ID_OF_PARTICIPANT, Constants.DELETE);\n+    performPost(WITHDRAWFROMSTUDY_PATH, requestJson, headers, Constants.SUCCESS.toUpperCase(), OK);", "originalCommit": "432f37811a39c73a26164c26e84331b8d766ddf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MDUzMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r439740532", "bodyText": "Added below code snippet to check whether the database data got changed or not .    Please check and let us know if understanding is correct on this point.\nMvcResult result = performGet(STUDY_STATE_PATH, headers, Constants.SUCCESS.toUpperCase(), OK);\nList<Map<String, String>> studyList =\nJsonPath.read(result.getResponse().getContentAsString(), \"$.studies[*]\");\nfor (Map<String, String> studyMap : studyList) {\nif (studyMap.get(\"participantId\").equals(Constants.PARTICIPANT_ID)) {\nassertTrue(studyMap.get(\"status\").equals(AppConstants.WITHDRAWN));\nbreak;\n}\n}", "author": "aswinijena100", "createdAt": "2020-06-13T13:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MzQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3OTQ1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r440379452", "bodyText": "Yes, this looks ok. But I would prefer you use the objectMapper to convert the response into a List<StudyStateBean>, it's much less brittle than using this JsonPath library.", "author": "nikklassen", "createdAt": "2020-06-15T18:53:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MzQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODMwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r440748305", "bodyText": "changed the logic to assert the response , instead of asserting inside the loop.", "author": "aswinijena100", "createdAt": "2020-06-16T10:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MzQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg3OTk2Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r440879966", "bodyText": "I mean to use Java to write the more complex assertion. I think jsonPath is ok for simple property checks, but Java works well for more complex logic.\n    StudyStateResponse response = getObjectMapper().readValue(result.getResponse().getContentAsString(),\n        StudyStateResponse.class);\n    Optional<StudyStateBean> study = response.getStudies().stream()\n        .filter(s -> s.getParticipantId().equals(Constants.PARTICIPANT_ID))\n        .findFirst();\n\n    assertTrue(study.isPresent());\n    assertEquals(AppConstants.WITHDRAWN, study.get().getStatus());", "author": "nikklassen", "createdAt": "2020-06-16T14:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MzQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2MjYxNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r442862614", "bodyText": "As suggested, used objectMapper instead of jsonPath", "author": "madhurya-btc", "createdAt": "2020-06-19T14:09:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MzQ2NQ=="}], "type": "inlineReview"}, {"oid": "bba0abc3de4932be2c2a09dcc8dac9029c2276db", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bba0abc3de4932be2c2a09dcc8dac9029c2276db", "message": "PR review comments fixes.", "committedDate": "2020-06-13T13:34:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4MDA2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r440380069", "bodyText": "else fail the test? You don't expect other studies do you?", "author": "nikklassen", "createdAt": "2020-06-15T18:55:00Z", "path": "user-registration-server-ws/enroll-mgmt/src/test/java/com/google/cloud/healthcare/fdamystudies/controller/tests/StudyStateControllerTest.java", "diffHunk": "@@ -0,0 +1,171 @@\n+package com.google.cloud.healthcare.fdamystudies.controller.tests;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.test.web.servlet.MvcResult;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudiesBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.StudyStateReqBean;\n+import com.google.cloud.healthcare.fdamystudies.beans.WithdrawFromStudyBean;\n+import com.google.cloud.healthcare.fdamystudies.common.BaseMockIT;\n+import com.google.cloud.healthcare.fdamystudies.controller.StudyStateController;\n+import com.google.cloud.healthcare.fdamystudies.service.StudyStateService;\n+import com.google.cloud.healthcare.fdamystudies.testutils.Constants;\n+import com.google.cloud.healthcare.fdamystudies.testutils.TestUtils;\n+import com.google.cloud.healthcare.fdamystudies.util.AppConstants;\n+import com.jayway.jsonpath.JsonPath;\n+\n+public class StudyStateControllerTest extends BaseMockIT {\n+\n+  private static final String WITHDRAW_FROM_STUDY_PATH = \"/withdrawfromstudy\";\n+  private static final String STUDY_STATE_PATH = \"/studyState\";\n+  private static final String UPDATE_STUDY_STATE_PATH = \"/updateStudyState\";\n+  @Autowired private StudyStateController controller;\n+  @Autowired private StudyStateService studyStateService;\n+\n+  @Test\n+  public void contextLoads() {\n+    assertNotNull(controller);\n+    assertNotNull(mockMvc);\n+    assertNotNull(studyStateService);\n+  }\n+\n+  @Test\n+  public void updateStudyStateSuccess() throws Exception {\n+\n+    StudiesBean studiesBean =\n+        new StudiesBean(\n+            Constants.STUDYOF_HEALTH,\n+            Constants.BOOKMARKED,\n+            Constants.COMPLETION,\n+            Constants.ADHERENCE);\n+\n+    List<StudiesBean> listStudies = new ArrayList<StudiesBean>();\n+    listStudies.add(studiesBean);\n+\n+    String requestJson = getStudyStateJson(listStudies);\n+\n+    HttpHeaders headers = TestUtils.getCommonHeaders();\n+    headers.add(Constants.USER_ID_HEADER, Constants.VALID_USER_ID);\n+\n+    performPost(UPDATE_STUDY_STATE_PATH, requestJson, headers, Constants.SUCCESS, OK);\n+\n+    MvcResult result = performGet(STUDY_STATE_PATH, headers, Constants.SUCCESS.toUpperCase(), OK);\n+    List<Map<String, Object>> studyList =\n+        JsonPath.read(result.getResponse().getContentAsString(), \"$.studies[*]\");\n+    for (Map<String, Object> studyMap : studyList) {\n+      if (studyMap.get(\"studyId\").equals(Constants.STUDYOF_HEALTH)) {\n+        assertTrue((boolean) studyMap.get(\"bookmarked\").equals(Constants.BOOKMARKED));\n+        assertTrue((int) studyMap.get(\"completion\") == Constants.COMPLETION);\n+        assertTrue((int) studyMap.get(\"adherence\") == Constants.ADHERENCE);\n+        break;\n+      }", "originalCommit": "bba0abc3de4932be2c2a09dcc8dac9029c2276db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0ODg4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/490#discussion_r440748888", "bodyText": "changed the logic to assert the response , instead of asserting inside the loop.", "author": "aswinijena100", "createdAt": "2020-06-16T10:28:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4MDA2OQ=="}], "type": "inlineReview"}, {"oid": "78cfb87af8dfc9184a9edec5675dadda3d5e15bf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/78cfb87af8dfc9184a9edec5675dadda3d5e15bf", "message": "PR review comment issue fixes", "committedDate": "2020-06-16T10:23:40Z", "type": "commit"}, {"oid": "c6428a35750269804fdcbff8f1ac1e4fbb0939fd", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c6428a35750269804fdcbff8f1ac1e4fbb0939fd", "message": "object mapper used", "committedDate": "2020-06-19T13:16:35Z", "type": "commit"}, {"oid": "ae29298e40f689f9d8627db65dd7f90304921067", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ae29298e40f689f9d8627db65dd7f90304921067", "message": "Merge branch 'early-access' into early-access-enroll-mgmt-integration-test-change", "committedDate": "2020-06-19T15:31:50Z", "type": "commit"}]}