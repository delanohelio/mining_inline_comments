{"pr_number": 851, "pr_title": "Response Server: Integration with OAuth Scim Service for Token Introspection", "pr_createdAt": "2020-08-28T16:53:01Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851", "timeline": [{"oid": "aa0a19f51f4ed2b5bbdcef2c8f4c5b1270e2aa4f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/aa0a19f51f4ed2b5bbdcef2c8f4c5b1270e2aa4f", "message": "Response-server Token-introspect\n\nResponse-server Token-introspect", "committedDate": "2020-08-28T16:51:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDEwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r479424107", "bodyText": "[response-server Checks] reported by reviewdog \ud83d\udc36\n'package' should be separated from previous statement.", "author": "github-actions", "createdAt": "2020-08-28T16:53:46Z", "path": "response-server-module/response-server-service/src/test/java/com/google/cloud/healthcare/fdamystudies/common/AppConfigTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+package com.google.cloud.healthcare.fdamystudies.common;", "originalCommit": "aa0a19f51f4ed2b5bbdcef2c8f4c5b1270e2aa4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1MzUwNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r479453506", "bodyText": "please fix", "author": "zohrehj", "createdAt": "2020-08-28T17:54:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDEwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg5OTExOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r479899118", "bodyText": "Fixed the comment", "author": "navya-BTC", "createdAt": "2020-08-31T05:43:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDExMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r479424110", "bodyText": "[response-server Checks] reported by reviewdog \ud83d\udc36\nMissing a Javadoc comment.", "author": "github-actions", "createdAt": "2020-08-28T16:53:46Z", "path": "response-server-module/response-server-service/src/main/java/com/google/cloud/healthcare/fdamystudies/filter/TokenIntrospectionFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.filter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.annotation.PostConstruct;\n+import javax.servlet.ServletContext;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Order(2)\n+public class TokenIntrospectionFilter extends BaseTokenIntrospectionFilter {\n+\n+  private Map<String, String[]> uriTemplateAndMethods = new HashMap<>();\n+\n+  @Autowired ServletContext context;\n+\n+  @PostConstruct", "originalCommit": "aa0a19f51f4ed2b5bbdcef2c8f4c5b1270e2aa4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a5769a16385c481b62a8488b26bf536ceed30776", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a5769a16385c481b62a8488b26bf536ceed30776", "message": "sourse format\n\nsourse format", "committedDate": "2020-08-28T16:57:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4ODQyMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r480188421", "bodyText": "what are these URI's from? and why are they being set here?\nA few other areas of concern:\n\nURL should not be hardcoded here within the code\nthey should follow the rest patterns, e.g. POST .../participants to create one, instead of .../participant/add", "author": "zohrehj", "createdAt": "2020-08-31T14:59:01Z", "path": "response-server-module/response-server-service/src/main/java/com/google/cloud/healthcare/fdamystudies/filter/TokenIntrospectionFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.filter;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.annotation.PostConstruct;\n+import javax.servlet.ServletContext;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Order(2)\n+public class TokenIntrospectionFilter extends BaseTokenIntrospectionFilter {\n+\n+  private Map<String, String[]> uriTemplateAndMethods = new HashMap<>();\n+\n+  @Autowired ServletContext context;\n+\n+  @PostConstruct\n+  public void init() {\n+\n+    uriTemplateAndMethods.put(\n+        String.format(\"%s/participant/add\", context.getContextPath()),", "originalCommit": "a5769a16385c481b62a8488b26bf536ceed30776", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIyMTEyNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r481221127", "bodyText": "Created an Issue #860 to change the endpoint. This review comment will be addressed in follow-up PR.\nURIs configured in this filter matches with RequestMapping's in Controller classes. This is same approach followed in other services for  token introspection.", "author": "dhanyak-btc", "createdAt": "2020-09-01T15:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4ODQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MTI0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r480191240", "bodyText": "what is this value? please add better comment to describe what this value should be?\nalso this does not follow the URI we are using for our deployments script in tf-deployment.yaml files. I would suggest using the same URL to keep things consistent.", "author": "zohrehj", "createdAt": "2020-08-31T15:03:28Z", "path": "response-server-module/response-server-service/src/main/resources/application.properties", "diffHunk": "@@ -27,7 +27,7 @@ spring.datasource.hikari.minimum-idle=5\n spring.datasource.hikari.maximum-pool-size=50\n \n # EMBEDDED SERVER CONFIGURATION\n-server.servlet.contextPath=/mystudies-response-server\n+server.servlet.context-path=/mystudies-response-server", "originalCommit": "a5769a16385c481b62a8488b26bf536ceed30776", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIyMzI3OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r481223278", "bodyText": "We noticed the spring boot context path property was incorrect, hence changed it. Spring Boot Change Context Path", "author": "dhanyak-btc", "createdAt": "2020-09-01T15:17:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MTI0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2OTY5Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r482169692", "bodyText": "Approach makes sense, but both in the test URLs and here, I would suggest using the same value that's used in the tf-deployment config and in our deployment strategy.\nsee response-server's tf-deployment.yaml\nThe whole idea is to minimize the amount of changes users need to do when deploying this platform.", "author": "zohrehj", "createdAt": "2020-09-02T15:38:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5MTI0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5Mjk5Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r480192992", "bodyText": "maybe move http://localhost:8004 to a variable to make future edits easier", "author": "zohrehj", "createdAt": "2020-08-31T15:06:20Z", "path": "response-server-module/response-server-service/src/test/java/com/google/cloud/healthcare/fdamystudies/common/ApiEndpoint.java", "diffHunk": "@@ -12,7 +12,24 @@\n import java.net.URL;\n \n public enum ApiEndpoint {\n-  HEALTH(\"http://localhost:8004/mystudies-response-server/healthCheck\");\n+  HEALTH(\"http://localhost:8004/mystudies-response-server/healthCheck\"),", "originalCommit": "a5769a16385c481b62a8488b26bf536ceed30776", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIyOTIyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/851#discussion_r481229224", "bodyText": "Initially, we used TestRestTemplate for writing integration tests, so we added complete URL in ApiEndpoint.  After few PR's Nik suggested us to use MockMVC  which requires only the path, so added a method to extract the Path from URL : URL(url).getPath()\nI agree with your comment, but we've followed the same pattern in all the services for integration tests.", "author": "dhanyak-btc", "createdAt": "2020-09-01T15:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5Mjk5Mg=="}], "type": "inlineReview"}, {"oid": "8e6312cdfb8d8e7e8983146e1814953522ac7c1c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8e6312cdfb8d8e7e8983146e1814953522ac7c1c", "message": "Merge branch 'develop' into response-server-token-introspect", "committedDate": "2020-09-03T14:04:14Z", "type": "commit"}]}