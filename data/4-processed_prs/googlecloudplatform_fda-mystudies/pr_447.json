{"pr_number": 447, "pr_title": "Urwebapp dataservice implementation", "pr_createdAt": "2020-06-04T17:06:22Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447", "timeline": [{"oid": "a7f76fc5df3198775275b5a32707dd1011cb5691", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a7f76fc5df3198775275b5a32707dd1011cb5691", "message": "dataservice has been implemented", "committedDate": "2020-06-04T17:03:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNjI0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436816247", "bodyText": "This file should be named data.service.ts.", "author": "nikklassen", "createdAt": "2020-06-08T15:57:42Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTUyNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325527", "bodyText": "Changed the file name to entity.service.ts", "author": "rohithd-btc", "createdAt": "2020-06-10T18:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNjI0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNDE5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436824196", "bodyText": "Unused", "author": "nikklassen", "createdAt": "2020-06-08T16:09:16Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTQ4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325489", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyNDE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTU5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436865591", "bodyText": "If this is going to be a \"base\" for all other entity services you should call it something like EntityService (data is too general). Also, this service should be generic, not use any.", "author": "nikklassen", "createdAt": "2020-06-08T17:15:23Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTQ1NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325454", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:25:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NTU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2ODYzOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436868639", "bodyText": "This should also be done with an HttpInterceptor. In fact, you probably don't even need this service.", "author": "nikklassen", "createdAt": "2020-06-08T17:20:12Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTM3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325370", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:25:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2ODYzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTEzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436869136", "bodyText": "This can be done with an https://angular.io/api/common/http/HttpInterceptor", "author": "nikklassen", "createdAt": "2020-06-08T17:20:57Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTI0NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325245", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:25:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTEzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTc4Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436869787", "bodyText": "These methods names are overly verbose. get(...) is sufficient.", "author": "nikklassen", "createdAt": "2020-06-08T17:21:51Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTE4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325184", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:25:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2OTc4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3MDAwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436870007", "bodyText": "remove", "author": "nikklassen", "createdAt": "2020-06-08T17:22:08Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTEwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325107", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:24:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3MDAwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTQ0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436879449", "bodyText": "All of these should be added by default by HttpClient.", "author": "nikklassen", "createdAt": "2020-06-08T17:36:51Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNTA0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438325047", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3OTQ0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDUxMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436880513", "bodyText": "Prefer Location.joinWithSlash", "author": "nikklassen", "createdAt": "2020-06-08T17:38:47Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNDk1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438324952", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDUxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDYxMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r436880611", "bodyText": "unneeded.", "author": "nikklassen", "createdAt": "2020-06-08T17:38:59Z", "path": "UR-web-app/src/app/service/dataService.ts", "diffHunk": "@@ -0,0 +1,132 @@\n+import {Injectable} from '@angular/core';\n+import {Observable, throwError} from 'rxjs';\n+import {HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n+import {HttpClient} from '@angular/common/http';\n+import {catchError, finalize} from 'rxjs/operators';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {Router} from '@angular/router';\n+import {ConnectionService} from 'ng-connection-service';\n+\n+const httpOptions = {\n+  headers: new HttpHeaders({\n+    'Content-Type': 'application/json',\n+    'Accept': 'application/json',\n+    'Access-Control-Allow-Origin': '*',\n+    'Access-Control-Allow-Credentials': 'true',\n+    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n+  }),\n+};\n+\n+@Injectable()\n+export class DataService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  headersFromService: {};\n+  serviceUrl: string;\n+  constructor(\n+    private connectionService: ConnectionService,\n+    private router: Router,\n+    private http: HttpClient,\n+    private spinner: NgxSpinnerService,\n+  ) {}\n+\n+  httpPostRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.post<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  httpGetRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = '';\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.get<any>(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpDeleteRequest(urlpath: string, headers: string): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+    return this.http.delete(this.serviceUrl, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+  httpPutRequest(\n+      bodydata: any,\n+      urlpath: string,\n+      headers: string,\n+  ): Observable<any> {\n+    this.spinner.show();\n+    this.serviceUrl = this.baseUrl + urlpath;\n+    this.prepareHeadrers(headers);\n+\n+    return this.http.put<any>(this.serviceUrl, bodydata, httpOptions).pipe(\n+        catchError((err: HttpErrorResponse) => {\n+          if (err.status == 401) {\n+            window.localStorage.clear();\n+            this.router.navigate(['/login']);\n+          }\n+          return throwError(err);\n+        }),\n+        finalize(() => {\n+          this.spinner.hide();\n+        }),\n+    );\n+  }\n+\n+  prepareHeadrers(headers) {", "originalCommit": "a7f76fc5df3198775275b5a32707dd1011cb5691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNDg3NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438324875", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-10T18:24:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDYxMQ=="}], "type": "inlineReview"}, {"oid": "6076a2ab73548f09b3654d92233061a8979eb83a", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6076a2ab73548f09b3654d92233061a8979eb83a", "message": "Code review comments has been resolved", "committedDate": "2020-06-10T17:10:32Z", "type": "commit"}, {"oid": "ca74fab7e08e603bbe6f1f499826f544d3ffa72c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ca74fab7e08e603bbe6f1f499826f544d3ffa72c", "message": "User Entity has been added", "committedDate": "2020-06-10T17:36:55Z", "type": "commit"}, {"oid": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "message": "Build issue has been fixed", "committedDate": "2020-06-10T18:20:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438381153", "bodyText": "What purpose does this serve?", "author": "nikklassen", "createdAt": "2020-06-10T20:12:03Z", "path": "UR-web-app/src/app/http-interceptors/noop-interceptor.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+import {Injectable} from '@angular/core';\n+import {\n+  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n+} from '@angular/common/http';\n+\n+import {Observable} from 'rxjs';\n+\n+@Injectable()\n+export class NoopInterceptor implements HttpInterceptor {", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMzU0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438903549", "bodyText": "Wen we generated the interceptor automatically the Noopinterceptor is added.Here is a do-nothing noop interceptor that simply passes the request through without touching it.", "author": "rohithd-btc", "createdAt": "2020-06-11T16:07:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NzU1OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438947559", "bodyText": "Please remove.", "author": "nikklassen", "createdAt": "2020-06-11T17:22:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NTYxOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439385618", "bodyText": "Removed", "author": "rohithd-btc", "createdAt": "2020-06-12T12:22:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438381384", "bodyText": "This is already set by the framework", "author": "nikklassen", "createdAt": "2020-06-10T20:12:32Z", "path": "UR-web-app/src/app/http-interceptors/Auth-Interceptor.ts", "diffHunk": "@@ -0,0 +1,35 @@\n+import {AuthService} from '../service/auth.service';\n+import {Injectable} from '@angular/core';\n+import {NgxSpinnerService} from 'ngx-spinner';\n+import {\n+  HttpInterceptor,\n+  HttpHandler,\n+  HttpRequest,\n+} from '@angular/common/http';\n+import {finalize} from 'rxjs/operators';\n+\n+@Injectable()\n+export class AuthInterceptor implements HttpInterceptor {\n+  constructor(private auth: AuthService, private spinner: NgxSpinnerService) {}\n+\n+  intercept(req: HttpRequest<any>, next: HttpHandler) {\n+    this.spinner.show();\n+    const userId = this.auth.getUserId();\n+    const authUserId = this.auth.getAuthUserId();\n+    const authToken = this.auth.getAuthorizationToken();\n+    if (userId != null && authUserId != null && authToken != null) {\n+      const headers = req.headers\n+          .set('Content-Type', 'application/json')", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNzE5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438907196", "bodyText": "Yes.But when we tested in our code we are getting errors related to that content type so we have included that in the header.", "author": "rohithd-btc", "createdAt": "2020-06-11T16:13:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0ODI4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438948288", "bodyText": "Can you elaborate on the error? Something else is probably going wrong.", "author": "nikklassen", "createdAt": "2020-06-11T17:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1MDM5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439350390", "bodyText": "This is the error we are getting in HTTP POST/PUT request\nerror: \"Unsupported Media Type\"\nmessage: \"Content type 'text/plain;charset=UTF-8' not supported\"\npath: \"/urwebappws/locations\"\nstatus: 415", "author": "rohithd-btc", "createdAt": "2020-06-12T10:56:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MTM4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438382231", "bodyText": "index is only used in certain circumstances. Use a different name.", "author": "nikklassen", "createdAt": "2020-06-10T20:14:19Z", "path": "UR-web-app/src/app/app.module.ts", "diffHunk": "@@ -1,11 +1,14 @@\n import {BrowserModule} from '@angular/platform-browser';\n import {NgModule} from '@angular/core';\n import {AppComponent} from './app.component';\n-import {DataService} from './service/dataService';\n+import {EntityService} from './service/entity.service';\n+import {AuthService} from '../app/service/auth.service';\n+import {httpInterceptorProviders} from './http-interceptors/index';", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNjAyMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438906022", "bodyText": "While including the http-interceptor that will default  include index.ts .We have updated with different name.", "author": "rohithd-btc", "createdAt": "2020-06-11T16:11:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0OTUwOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438949509", "bodyText": "My apologies. Index should be used, but you don't need to add it to the end of the file path (which is why I was confused). Please go back to index, but just import from './http-interceptors';", "author": "nikklassen", "createdAt": "2020-06-11T17:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTc5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439389794", "bodyText": "Reverted back to Index.According to your comment we changed this import from './http-interceptors'; but buid is failing in github.", "author": "rohithd-btc", "createdAt": "2020-06-12T12:31:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MjIzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDU4MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438384581", "bodyText": "duplicate code", "author": "nikklassen", "createdAt": "2020-06-10T20:19:12Z", "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMjExNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438902116", "bodyText": "updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-11T16:05:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDYyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438384623", "bodyText": "duplicate code", "author": "nikklassen", "createdAt": "2020-06-10T20:19:17Z", "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {\n+    this.authToken = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.authToken = this.user.authToken.toString();\n+    }\n+    return this.authToken;\n+  }\n+\n+  getUserId(): string {\n+    this.userId = '';\n+    this.user=JSON.parse(localStorage.getItem('currentUser')!);\n+    if (this.user && this.user != null &&\n+      this.user != undefined &&\n+      Object.keys(this.user).length > 0) {\n+      this.userId = this.user.id.toString();\n+    }\n+    return this.userId;\n+  }\n+\n+  getAuthUserId(): string {", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMjA0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438902047", "bodyText": "updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-11T16:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NDYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387050", "bodyText": "Instead of returning undefined here, add a method that returns if the user is logged in. Then use a canActivate guard to make sure that the user is always logged in when these methods are called.", "author": "nikklassen", "createdAt": "2020-06-10T20:24:02Z", "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';\n+  authUserId:string = '';\n+  authToken:string = '';\n+  ngOnInit() {}\n+\n+  getAuthorizationToken(): string | undefined {", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMTk0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438901943", "bodyText": "Thanks for the suggestion.We will look in to this point while releasing the auth-guard PR", "author": "rohithd-btc", "createdAt": "2020-06-11T16:05:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MDQwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438950401", "bodyText": "I won't be accepting code that is going to be changed later if it doesn't do anything now. Please remove this service from this PR then.", "author": "nikklassen", "createdAt": "2020-06-11T17:27:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTg5Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439389893", "bodyText": "Removed", "author": "rohithd-btc", "createdAt": "2020-06-12T12:31:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzE4Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387186", "bodyText": "Don't construct a user if we don't have one.", "author": "nikklassen", "createdAt": "2020-06-10T20:24:18Z", "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMTE3OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438901179", "bodyText": "updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-11T16:04:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzU5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387596", "bodyText": "you're not using these properties, you just overwrite them every time the methods are called.", "author": "nikklassen", "createdAt": "2020-06-10T20:25:08Z", "path": "UR-web-app/src/app/service/auth.service.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+import {Injectable} from '@angular/core';\n+import {User} from '../entity/User';\n+@Injectable()\n+export class AuthService {\n+  authUserID: string | undefined;\n+  user: User = new User;\n+  userId:string = '';", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMDk3Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438900977", "bodyText": "updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-11T16:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438387832", "bodyText": "Don't use any.", "author": "nikklassen", "createdAt": "2020-06-10T20:25:37Z", "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -0,0 +1,28 @@\n+import {Injectable} from '@angular/core';\n+import {Observable} from 'rxjs';\n+import {HttpClient} from '@angular/common/http';\n+import {Location} from '@angular/common';\n+\n+@Injectable()\n+export class EntityService {\n+  baseUrl = 'http://<IP>:<port>/urwebapp';\n+  serviceUrl: string = '';\n+  constructor(private http: HttpClient) {}\n+\n+  post(bodydata: any, urlpath: string): Observable<any> {", "originalCommit": "ec8b868b8b6af258a4f6ae403a1eb2327962d5e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwMDY5Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438900697", "bodyText": "Since this method is getting called from overall the project for adding/updating the data.We do not know the type of body data.(For ex. addlocation,addsites,updateuser etc is calling the same method)", "author": "rohithd-btc", "createdAt": "2020-06-11T16:03:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MTIxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r438951217", "bodyText": "That's when you use generics. I have added a linter rule that will be merged soon that prevents the use of any, so I can't accept this code.", "author": "nikklassen", "createdAt": "2020-06-11T17:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTk4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/447#discussion_r439389984", "bodyText": "Updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-12T12:32:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzgzMg=="}], "type": "inlineReview"}, {"oid": "2970eb6f8f30ac223a513e9926ba96be812ef884", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2970eb6f8f30ac223a513e9926ba96be812ef884", "message": " Updated PR suggestions", "committedDate": "2020-06-11T15:50:24Z", "type": "commit"}, {"oid": "c2d3f6723a5a9cb3a5946261550595bd421bc9b4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c2d3f6723a5a9cb3a5946261550595bd421bc9b4", "message": "Merge branch 'develop' into urwebapp-dataservice-implementation", "committedDate": "2020-06-11T17:34:53Z", "type": "commit"}, {"oid": "86e57bd355f6a70b25b25168b1c05d0e47e44ef4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/86e57bd355f6a70b25b25168b1c05d0e47e44ef4", "message": "Code review comments has been resolved", "committedDate": "2020-06-12T11:54:17Z", "type": "commit"}, {"oid": "4f6d434aea4edf58dc925bb8933db3f956245138", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4f6d434aea4edf58dc925bb8933db3f956245138", "message": "Index causes import error", "committedDate": "2020-06-12T12:17:47Z", "type": "commit"}]}