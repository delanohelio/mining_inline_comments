{"pr_number": 899, "pr_title": "OAuth Scim Service - Audit Log Implementation with integration tests", "pr_createdAt": "2020-09-07T13:13:49Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899", "timeline": [{"oid": "42e521ce91a19066ff9b8b918036fc964c513945", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/42e521ce91a19066ff9b8b918036fc964c513945", "message": "oauth service audit log\n\noauth service audit log", "committedDate": "2020-09-04T13:58:02Z", "type": "commit"}, {"oid": "5d83cbd658f534230309dc257e8a6e32de37ee48", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/5d83cbd658f534230309dc257e8a6e32de37ee48", "message": "audit\n\naudit", "committedDate": "2020-09-06T07:26:20Z", "type": "commit"}, {"oid": "19507adea27c1aef0d1b94523a86e30e2e75ebe0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/19507adea27c1aef0d1b94523a86e30e2e75ebe0", "message": "updated audit logs\n\nupdated audit logs", "committedDate": "2020-09-06T11:12:11Z", "type": "commit"}, {"oid": "12ad566e1616e0ed0d138addf3131530625a9e43", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/12ad566e1616e0ed0d138addf3131530625a9e43", "message": "Updated audit logs\n\nUpdated audit logs", "committedDate": "2020-09-06T11:50:27Z", "type": "commit"}, {"oid": "97ccec6366c757ecce9f95328c7639a16cff5700", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/97ccec6366c757ecce9f95328c7639a16cff5700", "message": "audit log test updated\n\naudit log test updated", "committedDate": "2020-09-06T14:16:09Z", "type": "commit"}, {"oid": "2567472c48f49aaa6b58185967627a4772e9b061", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2567472c48f49aaa6b58185967627a4772e9b061", "message": "audit logs update\n\naudit logs update", "committedDate": "2020-09-06T14:38:08Z", "type": "commit"}, {"oid": "da8fa4dbc1a44ff0f6650b6a0bcce66711e48979", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/da8fa4dbc1a44ff0f6650b6a0bcce66711e48979", "message": "audit log update\n\naudit log update", "committedDate": "2020-09-06T15:17:30Z", "type": "commit"}, {"oid": "1c27e203dd6eac3eb2d85af5f476d1d3491cc488", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1c27e203dd6eac3eb2d85af5f476d1d3491cc488", "message": "update\n\nupdate", "committedDate": "2020-09-06T20:08:42Z", "type": "commit"}, {"oid": "312c6dc5dabd0bccc2c46053f2cad038c33a2778", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/312c6dc5dabd0bccc2c46053f2cad038c33a2778", "message": "audit logs update\n\naudit logs update", "committedDate": "2020-09-07T04:29:21Z", "type": "commit"}, {"oid": "c0be070e49601cf1eb11102bd60d0093a354ee66", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c0be070e49601cf1eb11102bd60d0093a354ee66", "message": "audit log updates\n\naudit log updates", "committedDate": "2020-09-07T04:36:18Z", "type": "commit"}, {"oid": "e44c72651710d2f6b740b4bd4b39db538a863725", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e44c72651710d2f6b740b4bd4b39db538a863725", "message": "audit log test case\n\naudit log test case", "committedDate": "2020-09-07T06:45:04Z", "type": "commit"}, {"oid": "dcf034c9c219ade5eba1d56005c4ae2a8c52a281", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/dcf034c9c219ade5eba1d56005c4ae2a8c52a281", "message": "updated test case\n\nupdated test case", "committedDate": "2020-09-07T08:17:12Z", "type": "commit"}, {"oid": "99bfd9cb2bb42bf47971ffe76be8e618109055f4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/99bfd9cb2bb42bf47971ffe76be8e618109055f4", "message": "Audit Log Implementation for OAuth Scim Service\n\nAudit Log Implementation for OAuth Scim Service\n\nRemoved <scope> for guava library to fix:\nCaused by: java.lang.ClassNotFoundException: com.google.common.base.Ascii", "committedDate": "2020-09-07T09:54:58Z", "type": "commit"}, {"oid": "dfe057f07ab0fce4ddde4fd2be68e9dbcdd70b04", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/dfe057f07ab0fce4ddde4fd2be68e9dbcdd70b04", "message": "Audit log test case update\n\nAudit log test case  update", "committedDate": "2020-09-07T10:06:32Z", "type": "commit"}, {"oid": "4f21ef981a4feb208894e5719c2742a8472f6d09", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4f21ef981a4feb208894e5719c2742a8472f6d09", "message": "Update AuthScimEvent\n\nUpdate AuthScimEvent", "committedDate": "2020-09-07T11:22:11Z", "type": "commit"}, {"oid": "92ba443573d64ac753e60e2c9d8809f2ab5b9d3d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/92ba443573d64ac753e60e2c9d8809f2ab5b9d3d", "message": "Added test for SIGNIN_FAILED, Code Format + Organize Imports\n\nAdded test for SIGNIN_FAILED, Code Format + Organize Imports", "committedDate": "2020-09-07T11:46:58Z", "type": "commit"}, {"oid": "3b591a8348b1eea2271b45ff3f14b136872a0a24", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3b591a8348b1eea2271b45ff3f14b136872a0a24", "message": "Added Audit log test cases\n\nAdded Audit log test cases", "committedDate": "2020-09-07T13:09:49Z", "type": "commit"}, {"oid": "f7fc91a1df1139e152dde98feff615a57cb278f7", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f7fc91a1df1139e152dde98feff615a57cb278f7", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-07T13:19:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzODcyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r486438724", "bodyText": "remove please", "author": "zohrehj", "createdAt": "2020-09-10T15:33:28Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginController.java", "diffHunk": "@@ -279,21 +293,27 @@ private String redirectToLoginOrAutoLoginPage(\n     if (StringUtils.isNotEmpty(tempRegId)) {\n       Optional<UserEntity> optUser = userService.findUserByTempRegId(tempRegId);\n       if (optUser.isPresent()) {\n+        // log TEMPORARY_PASSWORD_SUCCEEDED audit log event", "originalCommit": "f7fc91a1df1139e152dde98feff615a57cb278f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyMTAyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r490821024", "bodyText": "Fixed review comment.", "author": "harisboston", "createdAt": "2020-09-18T09:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzODcyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzOTQyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r486439420", "bodyText": "this looks out of scope, shouldn't it be moved to line 304?", "author": "zohrehj", "createdAt": "2020-09-10T15:34:28Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/LoginController.java", "diffHunk": "@@ -279,21 +293,27 @@ private String redirectToLoginOrAutoLoginPage(\n     if (StringUtils.isNotEmpty(tempRegId)) {\n       Optional<UserEntity> optUser = userService.findUserByTempRegId(tempRegId);\n       if (optUser.isPresent()) {\n+        // log TEMPORARY_PASSWORD_SUCCEEDED audit log event\n+\n         UserEntity user = optUser.get();\n         logger.exit(\"tempRegId is valid, return to auto login page\");\n         cookieHelper.addCookie(response, USER_ID_COOKIE, user.getUserId());\n         cookieHelper.addCookie(response, TEMP_REG_ID_COOKIE, tempRegId);\n         return AUTO_LOGIN_VIEW_NAME;\n       }\n-\n       logger.exit(\"tempRegId is invalid, return to login page\");\n       return LOGIN_VIEW_NAME;\n     }\n+    auditHelper.logEvent(SIGNIN_FAILED_INVALID_TEMPORARY_PASSWORD, auditRequest);", "originalCommit": "f7fc91a1df1139e152dde98feff615a57cb278f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyMjU5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r490822599", "bodyText": "This is a duplicate event as event SIGNIN_WITH_TEMPORARY_PASSWORD_FAILED is already logged in UserServiceImpl.\nSo, removed this event SIGNIN_FAILED_INVALID_TEMPORARY_PASSWORD.", "author": "harisboston", "createdAt": "2020-09-18T09:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzOTQyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1MzE4Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r486453186", "bodyText": "put Instant.now().toEpochMilli() in a variable and use it for audit log.", "author": "zohrehj", "createdAt": "2020-09-10T15:53:46Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -360,31 +401,29 @@ private AuthenticationResponse updateInvalidLoginAttempts(\n       sendAccountLockedEmail(userEntity, tempPassword);\n       userEntity.setStatus(UserAccountStatus.ACCOUNT_LOCKED.getStatus());\n       userInfo.put(ACCOUNT_LOCK_EMAIL_TIMESTAMP, Instant.now().toEpochMilli());", "originalCommit": "f7fc91a1df1139e152dde98feff615a57cb278f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyNDAyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r490824020", "bodyText": "Fixed review comment.", "author": "harisboston", "createdAt": "2020-09-18T09:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1MzE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1NTE1OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r486455159", "bodyText": "why was this part removed?\nAnything other than audit log integration is outside of the scope of this PR and should be remove to a separate PR with proper description and test coverage.", "author": "zohrehj", "createdAt": "2020-09-10T15:56:35Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -360,31 +401,29 @@ private AuthenticationResponse updateInvalidLoginAttempts(\n       sendAccountLockedEmail(userEntity, tempPassword);\n       userEntity.setStatus(UserAccountStatus.ACCOUNT_LOCKED.getStatus());\n       userInfo.put(ACCOUNT_LOCK_EMAIL_TIMESTAMP, Instant.now().toEpochMilli());\n+\n+      Map<String, String> placeHolders = new HashMap<>();\n+      placeHolders.put(\"lock_time\", Instant.now().toString());\n+      placeHolders.put(\"failed_attempts\", String.valueOf(loginAttempts));\n+      auditHelper.logEvent(ACCOUNT_LOCKED, auditRequest, placeHolders);\n     }\n \n     userEntity.setUserInfo(userInfo);\n     userEntity = repository.saveAndFlush(userEntity);\n \n-    errorCode =\n+    ErrorCode errorCode =\n         UserAccountStatus.ACCOUNT_LOCKED.equals(UserAccountStatus.valueOf(userEntity.getStatus()))\n             ? ErrorCode.ACCOUNT_LOCKED\n-            : errorCode;\n+            : ErrorCode.INVALID_LOGIN_CREDENTIALS;\n \n     throw new ErrorCodeException(errorCode);\n   }\n \n   private AuthenticationResponse updateLoginAttemptsAndAuthenticationTime(\n-      UserEntity userEntity, JsonNode userInfoJsonNode) {\n+      UserEntity userEntity, JsonNode userInfoJsonNode, AuditLogEventRequest auditRequest) {\n+    int accountStatus = userEntity.getStatus();\n     ObjectNode passwordNode = (ObjectNode) userInfoJsonNode.get(PASSWORD);\n-    UserAccountStatus status = UserAccountStatus.valueOf(userEntity.getStatus());\n     passwordNode.remove(EXPIRE_TIMESTAMP);\n-    if (UserAccountStatus.PASSWORD_RESET.equals(status)\n-        || UserAccountStatus.ACCOUNT_LOCKED.equals(status)) {\n-      passwordNode.remove(EXPIRE_TIMESTAMP);\n-      passwordNode.put(OTP_USED, true);\n-    } else {\n-      passwordNode.remove(OTP_USED);\n-    }", "originalCommit": "f7fc91a1df1139e152dde98feff615a57cb278f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzMjE5Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r490832197", "bodyText": "My bad, I have reverted the changes.", "author": "harisboston", "createdAt": "2020-09-18T09:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1NTE1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1NjIwOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r486456209", "bodyText": "why is this related to signin with temporary password?", "author": "zohrehj", "createdAt": "2020-09-10T15:58:08Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -395,26 +434,40 @@ private AuthenticationResponse updateLoginAttemptsAndAuthenticationTime(\n     userEntity.setUserInfo(userInfo);\n     userEntity = repository.saveAndFlush(userEntity);\n \n+    if (UserAccountStatus.ACTIVE.getStatus() != accountStatus) {\n+      auditHelper.logEvent(SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED, auditRequest);\n+    }", "originalCommit": "f7fc91a1df1139e152dde98feff615a57cb278f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0NjE1Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r490846153", "bodyText": "As per the requirement, SIGNIN_SUCCEEDED event is logged is account status is ACTIVE otherwise SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED event is logged on successful login consent flow completion.\nThis code has been moved to LoginController class.", "author": "harisboston", "createdAt": "2020-09-18T10:14:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1NjIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1NjkwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r486456901", "bodyText": "code change is out of scope of this PR, please move to a separate PR with detailed description + test coverage.", "author": "zohrehj", "createdAt": "2020-09-10T15:59:04Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -395,26 +434,40 @@ private AuthenticationResponse updateLoginAttemptsAndAuthenticationTime(\n     userEntity.setUserInfo(userInfo);\n     userEntity = repository.saveAndFlush(userEntity);\n \n+    if (UserAccountStatus.ACTIVE.getStatus() != accountStatus) {\n+      auditHelper.logEvent(SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED, auditRequest);\n+    }\n+\n     AuthenticationResponse authenticationResponse = new AuthenticationResponse();\n     authenticationResponse.setUserId(userEntity.getUserId());\n     authenticationResponse.setAccountStatus(userEntity.getStatus());\n     authenticationResponse.setHttpStatusCode(HttpStatus.OK.value());\n     return authenticationResponse;\n   }\n \n-  private ErrorCode validatePasswordExpiryAndAccountStatus(\n-      UserEntity userEntity, JsonNode userInfo) {\n+  private void validatePasswordExpiryAndAccountStatus(\n+      UserEntity userEntity, JsonNode userInfo, AuditLogEventRequest auditRequest) {\n     JsonNode passwordNode = userInfo.get(PASSWORD);\n+    boolean passwordExpired = isPasswordExpired(passwordNode);\n     UserAccountStatus accountStatus = UserAccountStatus.valueOf(userEntity.getStatus());\n     switch (accountStatus) {\n       case DEACTIVATED:\n-        return ErrorCode.ACCOUNT_DEACTIVATED;\n+        throw new ErrorCodeException(ErrorCode.ACCOUNT_DEACTIVATED);\n       case ACCOUNT_LOCKED:\n-        return isPasswordExpired(passwordNode) ? ErrorCode.TEMP_PASSWORD_EXPIRED : null;\n+        if (passwordExpired) {\n+          auditHelper.logEvent(SIGNIN_FAILED_EXPIRED_TEMPORARY_PASSWORD, auditRequest);\n+          throw new ErrorCodeException(ErrorCode.TEMP_PASSWORD_EXPIRED);\n+        }\n       case PASSWORD_RESET:\n-        return isPasswordExpired(passwordNode) ? ErrorCode.TEMP_PASSWORD_EXPIRED : null;\n+        if (passwordExpired) {\n+          auditHelper.logEvent(SIGNIN_FAILED_EXPIRED_TEMPORARY_PASSWORD, auditRequest);\n+          throw new ErrorCodeException(ErrorCode.TEMP_PASSWORD_EXPIRED);\n+        }\n       default:\n-        return isPasswordExpired(passwordNode) ? ErrorCode.PASSWORD_EXPIRED : null;\n+        if (passwordExpired) {\n+          auditHelper.logEvent(SIGNIN_FAILED_EXPIRED_PASSWORD, auditRequest);\n+          throw new ErrorCodeException(ErrorCode.PASSWORD_EXPIRED);\n+        }", "originalCommit": "f7fc91a1df1139e152dde98feff615a57cb278f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NjMxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r490856317", "bodyText": "Added shouldReturnPasswordExpiredErrorCode() and shouldReturnTempPasswordExpiredErrorCode() test in LoginControllerTest class.\nThis is not out of scope, small refactoring needed for audit log events.", "author": "harisboston", "createdAt": "2020-09-18T10:34:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1NjkwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1ODAxNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r486458016", "bodyText": "Is there no validation that these values match our components?\nplease file a bug to add proper validation for enum values.", "author": "zohrehj", "createdAt": "2020-09-10T16:00:44Z", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/ConsentControllerTest.java", "diffHunk": "@@ -65,9 +73,37 @@ public void shouldReturnLoginPage() throws Exception {\n         .andReturn();\n   }\n \n+  @Test\n+  public void shouldReturnErrorPage() throws Exception {\n+    MultiValueMap<String, String> queryParams = new LinkedMultiValueMap<>();\n+    mockMvc\n+        .perform(\n+            get(ApiEndpoint.CONSENT_PAGE.getPath())\n+                .headers(getCommonHeaders())\n+                .contextPath(getContextPath())\n+                .queryParams(queryParams))\n+        .andDo(print())\n+        .andExpect(view().name(ERROR_VIEW_NAME));\n+\n+    verifyAuditEventCall(SIGNIN_FAILED);\n+  }\n+\n   private MultiValueMap<String, String> getConsentQSParams() {\n     MultiValueMap<String, String> requestParams = new LinkedMultiValueMap<>();\n     requestParams.add(CONSENT_CHALLENGE, CONSENT_CHALLENGE_VALUE);\n     return requestParams;\n   }\n+\n+  private HttpHeaders getCommonHeaders() {\n+    HttpHeaders headers = new HttpHeaders();\n+    headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));\n+    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=UTF-8\");\n+    headers.add(AUTHORIZATION, VALID_BEARER_TOKEN);\n+    headers.add(\"appVersion\", \"1.0\");\n+    headers.add(\"appId\", \"GCPMS001\");\n+    headers.add(\"studyId\", \"MyStudies\");\n+    headers.add(\"source\", \"IntegrationTests\");", "originalCommit": "f7fc91a1df1139e152dde98feff615a57cb278f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1ODQ1MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r490858451", "bodyText": "Changed appId to SCIM AUTH SERVER", "author": "harisboston", "createdAt": "2020-09-18T10:38:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1ODAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1NTk4Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r492255982", "bodyText": "That doesn't address the underlying issue, and validation is still needed. Please file the bug.", "author": "zohrehj", "createdAt": "2020-09-21T18:16:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1ODAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0NzEzMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r494447132", "bodyText": "Added validation code in AuditEventMapper, PlatformComponent and BaseMockIT class.\nAccordingly modified the value of source for other modules as well.", "author": "harisboston", "createdAt": "2020-09-24T16:19:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ1ODAxNg=="}], "type": "inlineReview"}, {"oid": "48e7d4544b58fc75b4e77bbe7b2d19010d3f43fa", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/48e7d4544b58fc75b4e77bbe7b2d19010d3f43fa", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-18T09:10:15Z", "type": "commit"}, {"oid": "34bb2c82525ab220a18fea2bae0a7b7965c1f8cf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/34bb2c82525ab220a18fea2bae0a7b7965c1f8cf", "message": "Added systemTime\n\nsystemTime variable", "committedDate": "2020-09-18T09:20:32Z", "type": "commit"}, {"oid": "8678e744678450e8750a9f1a242b186235e5c7f6", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8678e744678450e8750a9f1a242b186235e5c7f6", "message": "Modified as per PR 899, comment\n\nModified as per PR 899, comment.\nModified appid,\nRemoved duplicate event,\nSetting all required header values in one common method getCommonHeaders();", "committedDate": "2020-09-21T14:39:36Z", "type": "commit"}, {"oid": "9e130ba3506f8fc6d016831508fbd7c7501468cf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9e130ba3506f8fc6d016831508fbd7c7501468cf", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-21T14:46:23Z", "type": "commit"}, {"oid": "b873375b90d3341ff8c43c194985aa1d85b8c3d3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b873375b90d3341ff8c43c194985aa1d85b8c3d3", "message": "Added import MvcResult\n\nAdded import MvcResult", "committedDate": "2020-09-21T14:54:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1NjYyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r492256624", "bodyText": "description seems redundant", "author": "zohrehj", "createdAt": "2020-09-21T18:17:17Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -18,19 +18,111 @@\n \n @Getter\n public enum AuthScimEvent implements AuditLogEvent {\n-  PASSWORD_RESET_SUCCESS(\n+  SIGNIN_SUCCEEDED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_SUCCEEDED\"),\n+\n+  SIGNIN_FAILED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED\"),\n+\n+  SIGNIN_FAILED_UNREGISTERED_USER(\n+      null,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n+      \"Sign-in failure due to unregistered username.\",\n+      \"SIGNIN_FAILED_UNREGISTERED_USER\"),\n+\n+  SIGNIN_FAILED_INVALID_PASSWORD(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED_INVALID_PASSWORD\"),\n+\n+  SIGNIN_FAILED_EXPIRED_PASSWORD(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED_EXPIRED_PASSWORD\"),\n+\n+  PASSWORD_HELP_REQUESTED(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_REQUESTED\"),\n+\n+  PASSWORD_HELP_REQUESTED_FOR_UNREGISTERED_USERNAME(\n+      null,\n+      SCIM_AUTH_SERVER,\n       PARTICIPANT_DATASTORE,\n+      null,\n+      \"PASSWORD_HELP_REQUESTED_FOR_UNREGISTERED_USERNAME\"),\n+\n+  PASSWORD_HELP_EMAIL_SENT(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_EMAIL_SENT\"),\n+\n+  PASSWORD_HELP_EMAIL_FAILED(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_EMAIL_FAILED\"),\n+\n+  SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED(\n+      null,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n+      \"User signed in with temporary password.\",\n+      \"SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED\"),\n+\n+  SIGNIN_WITH_TEMPORARY_PASSWORD_FAILED(\n+      null,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n+      \"Sign-in with temporary password failed.\",", "originalCommit": "b873375b90d3341ff8c43c194985aa1d85b8c3d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE4Nzk2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r494187969", "bodyText": "Fixed review comment.", "author": "harisboston", "createdAt": "2020-09-24T09:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1NjYyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1Njc1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r492256758", "bodyText": "description seems redundant.", "author": "zohrehj", "createdAt": "2020-09-21T18:17:32Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -18,19 +18,111 @@\n \n @Getter\n public enum AuthScimEvent implements AuditLogEvent {\n-  PASSWORD_RESET_SUCCESS(\n+  SIGNIN_SUCCEEDED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_SUCCEEDED\"),\n+\n+  SIGNIN_FAILED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED\"),\n+\n+  SIGNIN_FAILED_UNREGISTERED_USER(\n+      null,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n+      \"Sign-in failure due to unregistered username.\",\n+      \"SIGNIN_FAILED_UNREGISTERED_USER\"),\n+\n+  SIGNIN_FAILED_INVALID_PASSWORD(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED_INVALID_PASSWORD\"),\n+\n+  SIGNIN_FAILED_EXPIRED_PASSWORD(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED_EXPIRED_PASSWORD\"),\n+\n+  PASSWORD_HELP_REQUESTED(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_REQUESTED\"),\n+\n+  PASSWORD_HELP_REQUESTED_FOR_UNREGISTERED_USERNAME(\n+      null,\n+      SCIM_AUTH_SERVER,\n       PARTICIPANT_DATASTORE,\n+      null,\n+      \"PASSWORD_HELP_REQUESTED_FOR_UNREGISTERED_USERNAME\"),\n+\n+  PASSWORD_HELP_EMAIL_SENT(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_EMAIL_SENT\"),\n+\n+  PASSWORD_HELP_EMAIL_FAILED(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_EMAIL_FAILED\"),\n+\n+  SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED(\n+      null,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n+      \"User signed in with temporary password.\",", "originalCommit": "b873375b90d3341ff8c43c194985aa1d85b8c3d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE4ODE0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r494188140", "bodyText": "Fixed review comment.", "author": "harisboston", "createdAt": "2020-09-24T09:56:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1Njc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1NjkyMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r492256922", "bodyText": "description is redundant.", "author": "zohrehj", "createdAt": "2020-09-21T18:17:48Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -18,19 +18,111 @@\n \n @Getter\n public enum AuthScimEvent implements AuditLogEvent {\n-  PASSWORD_RESET_SUCCESS(\n+  SIGNIN_SUCCEEDED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_SUCCEEDED\"),\n+\n+  SIGNIN_FAILED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED\"),\n+\n+  SIGNIN_FAILED_UNREGISTERED_USER(\n+      null,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n+      \"Sign-in failure due to unregistered username.\",", "originalCommit": "b873375b90d3341ff8c43c194985aa1d85b8c3d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE4ODIxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r494188217", "bodyText": "Fixed review comment.", "author": "harisboston", "createdAt": "2020-09-24T09:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1NjkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1OTEzMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r492259133", "bodyText": "to me it seems like PASSWORD_RESET_SUCCEEDED should only be posted when a password has been reset successfully by the user. from the code it seems like we are logging this event when the account is still locked and/or not properly setup.", "author": "zohrehj", "createdAt": "2020-09-21T18:21:43Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -193,17 +212,26 @@ public ResetPasswordResponse resetPassword(\n     EmailResponse emailResponse = sendPasswordResetEmail(resetPasswordRequest, tempPassword);\n \n     if (HttpStatus.ACCEPTED.value() == emailResponse.getHttpStatusCode()) {\n-\n       ObjectNode userInfo = (ObjectNode) userEntity.getUserInfo();\n       setPasswordAndPasswordHistoryFields(tempPassword, userInfo, userEntity.getStatus());\n       userEntity.setUserInfo(userInfo);\n       repository.saveAndFlush(userEntity);\n+      auditHelper.logEvent(PASSWORD_HELP_EMAIL_SENT, auditRequest);\n+      if (userEntity.getStatus() == UserAccountStatus.ACCOUNT_LOCKED.getStatus()) {\n+        auditHelper.logEvent(PASSWORD_RESET_EMAIL_SENT_FOR_LOCKED_ACCOUNT, auditRequest);\n+      }\n+\n+      auditHelper.logEvent(PASSWORD_RESET_SUCCEEDED, auditRequest);", "originalCommit": "b873375b90d3341ff8c43c194985aa1d85b8c3d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1OTcwMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r494359702", "bodyText": "Moved PASSWORD_RESET_SUCCEEDED event to UserController class.\nLogging PASSWORD_RESET_SUCCEEDED event after validating resetPasswordResponse.", "author": "harisboston", "createdAt": "2020-09-24T14:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1OTEzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1OTQ3NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r492259474", "bodyText": "remove redundant comment", "author": "zohrehj", "createdAt": "2020-09-21T18:22:16Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -291,13 +322,16 @@ private ErrorCode validateChangePasswordRequest(\n \n   @Override\n   @Transactional(noRollbackFor = ErrorCodeException.class)\n-  public AuthenticationResponse authenticate(UserRequest user) throws JsonProcessingException {\n+  public AuthenticationResponse authenticate(UserRequest user, AuditLogEventRequest auditRequest)\n+      throws JsonProcessingException {\n     logger.entry(\"begin authenticate(user)\");\n     // check if the email present in the database\n     Optional<UserEntity> optUserEntity =\n         repository.findByAppIdAndEmail(user.getAppId(), user.getEmail());\n \n     if (!optUserEntity.isPresent()) {\n+      // log SIGNIN_FAILED_UNREGISTERED_USER event", "originalCommit": "b873375b90d3341ff8c43c194985aa1d85b8c3d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5MDU4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r492490588", "bodyText": "Fixed review comment", "author": "harisboston", "createdAt": "2020-09-22T06:03:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1OTQ3NA=="}], "type": "inlineReview"}, {"oid": "aa4fed52122a98c34425862f486641d51e005011", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/aa4fed52122a98c34425862f486641d51e005011", "message": "Removed Redundant description and commented lines\n\nRemoved Redundant description and commented lines", "committedDate": "2020-09-22T10:31:46Z", "type": "commit"}, {"oid": "2196534a2143a23af3bbccd4c09409b003928685", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2196534a2143a23af3bbccd4c09409b003928685", "message": "Added validation for mobilePlatform and source component value\n\nAdded validation for mobilePlatform and source component value", "committedDate": "2020-09-24T09:11:48Z", "type": "commit"}, {"oid": "00f46d9ee0dc8df4f930bc0e475d14d05e4ce131", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/00f46d9ee0dc8df4f930bc0e475d14d05e4ce131", "message": "Fixed build issue\n\nFixed build issue", "committedDate": "2020-09-24T09:52:42Z", "type": "commit"}, {"oid": "30a91858d81d26f0456c3f3bbaa3ba5f401ba94c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/30a91858d81d26f0456c3f3bbaa3ba5f401ba94c", "message": "Merge branch 'oauth-service-audit-log-impl' of https://github.com/GoogleCloudPlatform/fda-mystudies into oauth-service-audit-log-impl", "committedDate": "2020-09-24T10:09:38Z", "type": "commit"}, {"oid": "6167934943ada197bb1032c2c42270e361ead1e8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6167934943ada197bb1032c2c42270e361ead1e8", "message": "Fixed build issues for OAuth Scim Service\n\nFixed build issues for OAuth Scim Service", "committedDate": "2020-09-24T11:48:30Z", "type": "commit"}, {"oid": "41eeba0717508e3a8033b3b4fb3dc06781b264a3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/41eeba0717508e3a8033b3b4fb3dc06781b264a3", "message": "Merge branch 'oauth-service-audit-log-impl' of https://github.com/GoogleCloudPlatform/fda-mystudies into oauth-service-audit-log-impl", "committedDate": "2020-09-24T11:58:30Z", "type": "commit"}, {"oid": "257756ea117ee73ef27e97408f1934b2d5af2428", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/257756ea117ee73ef27e97408f1934b2d5af2428", "message": "Moved audit log event to usercontroller\n\nMoved audit log event to usercontroller\n+ modified source of different modules.", "committedDate": "2020-09-24T12:14:37Z", "type": "commit"}, {"oid": "cd728d4f59b29f9507c55464eb1a8c6da29b4982", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cd728d4f59b29f9507c55464eb1a8c6da29b4982", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-24T13:22:29Z", "type": "commit"}, {"oid": "f46fb239ad3f5cd9853f702ebfb3e112d37d64a6", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f46fb239ad3f5cd9853f702ebfb3e112d37d64a6", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-24T14:10:55Z", "type": "commit"}, {"oid": "f0b20b73e90bb6b6fa1adf5bf26873caa15ce95d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f0b20b73e90bb6b6fa1adf5bf26873caa15ce95d", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-24T15:47:56Z", "type": "commit"}, {"oid": "a949b1c6e93086bf5619ac93d4cfa93cb938d4ac", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a949b1c6e93086bf5619ac93d4cfa93cb938d4ac", "message": "Updated correct source for response server\n\nUpdated correct source for response server", "committedDate": "2020-09-24T16:07:30Z", "type": "commit"}, {"oid": "1c09955e39871980761bbb846f31cea1a7f02a9d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1c09955e39871980761bbb846f31cea1a7f02a9d", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T07:08:59Z", "type": "commit"}, {"oid": "1522c2be5a45fac676ed8ca3c5e7141b1d2a0b12", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1522c2be5a45fac676ed8ca3c5e7141b1d2a0b12", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T10:48:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4Nzc4Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r495087782", "bodyText": "description is redundant.", "author": "zohrehj", "createdAt": "2020-09-25T16:04:54Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -18,19 +18,103 @@\n \n @Getter\n public enum AuthScimEvent implements AuditLogEvent {\n-  PASSWORD_RESET_SUCCESS(\n+  SIGNIN_SUCCEEDED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_SUCCEEDED\"),\n+\n+  SIGNIN_FAILED(null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED\"),\n+\n+  SIGNIN_FAILED_UNREGISTERED_USER(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED_UNREGISTERED_USER\"),\n+\n+  SIGNIN_FAILED_INVALID_PASSWORD(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED_INVALID_PASSWORD\"),\n+\n+  SIGNIN_FAILED_EXPIRED_PASSWORD(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_FAILED_EXPIRED_PASSWORD\"),\n+\n+  PASSWORD_HELP_REQUESTED(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_REQUESTED\"),\n+\n+  PASSWORD_HELP_REQUESTED_FOR_UNREGISTERED_USERNAME(\n+      null,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n+      null,\n+      \"PASSWORD_HELP_REQUESTED_FOR_UNREGISTERED_USERNAME\"),\n+\n+  PASSWORD_HELP_EMAIL_SENT(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_EMAIL_SENT\"),\n+\n+  PASSWORD_HELP_EMAIL_FAILED(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"PASSWORD_HELP_EMAIL_FAILED\"),\n+\n+  SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED(\n+      null,\n+      SCIM_AUTH_SERVER,\n       PARTICIPANT_DATASTORE,\n+      null,\n+      \"SIGNIN_WITH_TEMPORARY_PASSWORD_SUCCEEDED\"),\n+\n+  SIGNIN_WITH_TEMPORARY_PASSWORD_FAILED(\n+      null, SCIM_AUTH_SERVER, PARTICIPANT_DATASTORE, null, \"SIGNIN_WITH_TEMPORARY_PASSWORD_FAILED\"),\n+\n+  SIGNIN_FAILED_EXPIRED_TEMPORARY_PASSWORD(\n+      null,\n       SCIM_AUTH_SERVER,\n       PARTICIPANT_DATASTORE,\n-      \"Password reset successful.\",\n-      \"PASSWORD_RESET_SUCCESS\"),\n+      \"Sign-in failure due to expired temporary password.\",", "originalCommit": "1522c2be5a45fac676ed8ca3c5e7141b1d2a0b12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExMjcxOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r495112718", "bodyText": "Fixed review comment", "author": "harisboston", "createdAt": "2020-09-25T16:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4Nzc4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5MDczNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r495090737", "bodyText": "do we need to log both PASSWORD_HELP_EMAIL_FAILED and PASSWORD_HELP_EMAIL_FAILED for this case?\nand similarly for the success, do we need to log both PASSWORD_HELP_EMAIL_SENT and PASSWORD_RESET_EMAIL_SENT_FOR_LOCKED_ACCOUNT when account is locked?", "author": "zohrehj", "createdAt": "2020-09-25T16:10:10Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/UserServiceImpl.java", "diffHunk": "@@ -193,17 +211,25 @@ public ResetPasswordResponse resetPassword(\n     EmailResponse emailResponse = sendPasswordResetEmail(resetPasswordRequest, tempPassword);\n \n     if (HttpStatus.ACCEPTED.value() == emailResponse.getHttpStatusCode()) {\n-\n       ObjectNode userInfo = (ObjectNode) userEntity.getUserInfo();\n       setPasswordAndPasswordHistoryFields(tempPassword, userInfo, userEntity.getStatus());\n       userEntity.setUserInfo(userInfo);\n       repository.saveAndFlush(userEntity);\n+      auditHelper.logEvent(PASSWORD_HELP_EMAIL_SENT, auditRequest);\n+      if (userEntity.getStatus() == UserAccountStatus.ACCOUNT_LOCKED.getStatus()) {\n+        auditHelper.logEvent(PASSWORD_RESET_EMAIL_SENT_FOR_LOCKED_ACCOUNT, auditRequest);\n+      }\n+\n       logger.exit(MessageCode.PASSWORD_RESET_SUCCESS);\n-      auditHelper.logEvent(PASSWORD_RESET_SUCCESS, auditRequest);\n       return new ResetPasswordResponse(MessageCode.PASSWORD_RESET_SUCCESS);\n-    } else {\n-      auditHelper.logEvent(PASSWORD_RESET_FAILED, auditRequest);\n     }\n+\n+    auditHelper.logEvent(PASSWORD_HELP_EMAIL_FAILED, auditRequest);\n+    auditHelper.logEvent(PASSWORD_RESET_FAILED, auditRequest);\n+    if (userEntity.getStatus() == UserAccountStatus.ACCOUNT_LOCKED.getStatus()) {\n+      auditHelper.logEvent(PASSWORD_RESET_EMAIL_FAILED_FOR_LOCKED_ACCOUNT, auditRequest);", "originalCommit": "1522c2be5a45fac676ed8ca3c5e7141b1d2a0b12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExNTY0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/899#discussion_r495115640", "bodyText": "Confirmed with Shanthala,\nEvent PASSWORD_HELP_EMAIL_SENT will be logged for users whose account status is ACTIVE.\nEvent PASSWORD_RESET_EMAIL_SENT_FOR_LOCKED_ACCOUNT will be logged for users whose account status is LOCKED.\nAccordingly modified the code and added test case as well shouldSendPasswordResetEmail().", "author": "harisboston", "createdAt": "2020-09-25T16:56:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5MDczNw=="}], "type": "inlineReview"}, {"oid": "23bfe64f18d93ac12e16d848e1b616df26a1870f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/23bfe64f18d93ac12e16d848e1b616df26a1870f", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T16:14:58Z", "type": "commit"}, {"oid": "3de6e819fd414f0725ba0c739eb8c66d9ac635c6", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3de6e819fd414f0725ba0c739eb8c66d9ac635c6", "message": "added validation for (PASSWORD_HELP_EMAIL_SENT\n\nadded validation for ( (PASSWORD_HELP_EMAIL_SENT,\nand test cases.", "committedDate": "2020-09-25T16:48:25Z", "type": "commit"}, {"oid": "8613254e23da74ae7404edbc11eff90c62417f3e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8613254e23da74ae7404edbc11eff90c62417f3e", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T17:01:43Z", "type": "commit"}, {"oid": "31c85863e83998006a684d47b2d82ff290f365cc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/31c85863e83998006a684d47b2d82ff290f365cc", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T17:09:40Z", "type": "commit"}, {"oid": "6c3e95ca9ff74b39263d8ef8ed402bc1ef2850a5", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6c3e95ca9ff74b39263d8ef8ed402bc1ef2850a5", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T17:23:35Z", "type": "commit"}, {"oid": "bb822a3f2e2f09979dd7f7ff239272bf71e9683c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bb822a3f2e2f09979dd7f7ff239272bf71e9683c", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T17:42:26Z", "type": "commit"}, {"oid": "752d00dbcdf25850275e1977f3d7ef5dc045b04f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/752d00dbcdf25850275e1977f3d7ef5dc045b04f", "message": "Merge branch 'develop' into oauth-service-audit-log-impl", "committedDate": "2020-09-25T17:49:30Z", "type": "commit"}]}