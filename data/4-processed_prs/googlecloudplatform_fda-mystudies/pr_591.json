{"pr_number": 591, "pr_title": "UR Web App Dashboard header and Study list tab implementation", "pr_createdAt": "2020-07-03T16:20:26Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591", "timeline": [{"oid": "56febaf09864b70332d8db562379e015057241fa", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/56febaf09864b70332d8db562379e015057241fa", "message": "studies tab has been implemented", "committedDate": "2020-07-03T10:52:17Z", "type": "commit"}, {"oid": "608c8b24817dd9aacf12f3a1931c00f3382accfc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/608c8b24817dd9aacf12f3a1931c00f3382accfc", "message": "study-list.component.html,dashboard-header.component.html", "committedDate": "2020-07-03T12:22:08Z", "type": "commit"}, {"oid": "4d998a01b1f023fc8bfa422e56ca21fc633a8615", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4d998a01b1f023fc8bfa422e56ca21fc633a8615", "message": "added active class to tab", "committedDate": "2020-07-03T13:04:24Z", "type": "commit"}, {"oid": "09b9752bead30c718a126fb60256f0ec87bae013", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/09b9752bead30c718a126fb60256f0ec87bae013", "message": "dashboard header", "committedDate": "2020-07-03T14:45:12Z", "type": "commit"}, {"oid": "7c5680d75ec65382cf7200b031631c718070c4f4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7c5680d75ec65382cf7200b031631c718070c4f4", "message": "css", "committedDate": "2020-07-03T14:48:17Z", "type": "commit"}, {"oid": "76af7695843c37c086d3aed2a1d13ed15cba077d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/76af7695843c37c086d3aed2a1d13ed15cba077d", "message": "Initial Studylist test cases", "committedDate": "2020-07-03T14:55:53Z", "type": "commit"}, {"oid": "acd0c98f232a685bdc2c0621c9c8504434c76fdf", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/acd0c98f232a685bdc2c0621c9c8504434c76fdf", "message": "Merge branch 'dashboard-header-implementation' of https://github.com/GoogleCloudPlatform/fda-mystudies into dashboard-header-implementation", "committedDate": "2020-07-03T14:56:02Z", "type": "commit"}, {"oid": "c154f6341c86689678295d3a1ea9c915be0e2387", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c154f6341c86689678295d3a1ea9c915be0e2387", "message": "New Test Cases", "committedDate": "2020-07-03T15:25:21Z", "type": "commit"}, {"oid": "cae030755f1e58e67ce492ad84c72f148191d9c7", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cae030755f1e58e67ce492ad84c72f148191d9c7", "message": "Study list component with test cases", "committedDate": "2020-07-03T15:51:05Z", "type": "commit"}, {"oid": "383e946a2d80daa296162de29e818ceeb11a58c1", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/383e946a2d80daa296162de29e818ceeb11a58c1", "message": "Files has been  Formatting", "committedDate": "2020-07-03T16:18:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3ODI3OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449678279", "bodyText": "Can you update this one too?", "author": "nikklassen", "createdAt": "2020-07-03T18:30:12Z", "path": "UR-web-app/package.json", "diffHunk": "@@ -11,6 +11,7 @@\n     \"e2e\": \"ng e2e\",\n     \"build:prod\": \"ng build --prod\",\n     \"clean\": \"rimraf ./dist\",\n+    \"format:fix\": \"prettier --write \\\"**/*.{ts,js,json,scss,svg}\\\"\",\n     \"build:ci\": \"npm run clean && npm run lint && npm run format:check && npm run build:prod\",\n     \"format:check\": \"prettier --check \\\"**/*.{ts,js,json}\\\"\"", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0NjM5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450346396", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:38:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3ODI3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3OTk5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449679996", "bodyText": "What does this do?", "author": "nikklassen", "createdAt": "2020-07-03T18:39:52Z", "path": "UR-web-app/src/app/site-coordinator/dashboard-header/dashboard-header.component.html", "diffHunk": "@@ -0,0 +1,11 @@\n+<div class=\"subheader\">\n+    <ul *ngIf=\"showNavBar\" mat-tab-nav-bar class=\"max__w__1280 subheader__menu nav nav-tabs\">\n+        <li *ngFor=\"let link of navLinks\">\n+            <a mat-tab-link [routerLink]=\"link.link\" routerLinkActive=\"active\" #rla=\"routerLinkActive\"\n+                [active]=\"rla.isActive\">", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0NzI4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450347288", "bodyText": "Thanks for highlighting this point ,I have removed  #rla=\"routerLinkActive\" [active]=\"rla.isActive\" because having routerLinkActive=\"active\" is enough for adding active class to the active tab", "author": "firdosebtc1", "createdAt": "2020-07-06T16:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3OTk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDYzMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449680632", "bodyText": "What is this for?", "author": "nikklassen", "createdAt": "2020-07-03T18:43:30Z", "path": "UR-web-app/src/app/site-coordinator/dashboard-header/dashboard-header.component.ts", "diffHunk": "@@ -0,0 +1,49 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+export interface NavLink {\n+  label: string;\n+  link: string;\n+  index: number;\n+}\n+@Component({\n+  selector: 'app-dashboard-header',\n+  templateUrl: './dashboard-header.component.html',\n+  styleUrls: ['./dashboard-header.component.scss'],\n+})\n+export class DashboardHeaderComponent implements OnInit {\n+  navLinks: NavLink[];\n+  activeLinkIndex = 0;\n+  showNavBar = true;\n+  constructor(private readonly router: Router) {\n+    this.navLinks = [\n+      {\n+        label: 'Sites',\n+        link: '/coordinator/studies/sites',\n+        index: 0,\n+      },\n+      {\n+        label: 'Studies',\n+        link: '/coordinator/studies',\n+        index: 1,\n+      },\n+      {\n+        label: 'Apps',\n+        link: '/coordinator/apps',\n+        index: 2,\n+      },\n+    ];\n+  }\n+  ngOnInit(): void {\n+    this.router.events.subscribe(() => {\n+      for (const navLink of this.navLinks) {\n+        if (navLink.link === this.router.url) {\n+          this.showNavBar = true;\n+          this.activeLinkIndex = this.navLinks.indexOf(navLink);", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0Nzc3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450347776", "bodyText": "Thanks for highlighting this point ,I have removed this.activeLinkIndex = this.navLinks.indexOf(navLink);", "author": "firdosebtc1", "createdAt": "2020-07-06T16:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDYzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDg0Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449680842", "bodyText": "If the URL doesn't match any of the navLinks how did we get to this page?", "author": "nikklassen", "createdAt": "2020-07-03T18:44:46Z", "path": "UR-web-app/src/app/site-coordinator/dashboard-header/dashboard-header.component.ts", "diffHunk": "@@ -0,0 +1,49 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+export interface NavLink {\n+  label: string;\n+  link: string;\n+  index: number;\n+}\n+@Component({\n+  selector: 'app-dashboard-header',\n+  templateUrl: './dashboard-header.component.html',\n+  styleUrls: ['./dashboard-header.component.scss'],\n+})\n+export class DashboardHeaderComponent implements OnInit {\n+  navLinks: NavLink[];\n+  activeLinkIndex = 0;\n+  showNavBar = true;\n+  constructor(private readonly router: Router) {\n+    this.navLinks = [\n+      {\n+        label: 'Sites',\n+        link: '/coordinator/studies/sites',\n+        index: 0,\n+      },\n+      {\n+        label: 'Studies',\n+        link: '/coordinator/studies',\n+        index: 1,\n+      },\n+      {\n+        label: 'Apps',\n+        link: '/coordinator/apps',\n+        index: 2,\n+      },\n+    ];\n+  }\n+  ngOnInit(): void {\n+    this.router.events.subscribe(() => {\n+      for (const navLink of this.navLinks) {\n+        if (navLink.link === this.router.url) {\n+          this.showNavBar = true;\n+          this.activeLinkIndex = this.navLinks.indexOf(navLink);\n+          break;\n+        } else {", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0OTA0MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450349041", "bodyText": "I have added this code for hiding navBar in studyDetails, siteDetails and appDetails page and we will be having custom back button in studyDetails, siteDetails and appDetails pages to come back to dashboard page", "author": "firdosebtc1", "createdAt": "2020-07-06T16:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDg0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2Nzk3Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450367972", "bodyText": "I think I'd rather always have the navbar. A back button assumes the users always want to go to the studies list page again before, say apps, which I don't think is a great experience.", "author": "nikklassen", "createdAt": "2020-07-06T17:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDg0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzgxMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450377810", "bodyText": "Yeah but according to the Invision diagram we need to hide the  navbar in the details page ,I have attched the invision screen of study details (study participant list ) page for your refrence,", "author": "firdosebtc1", "createdAt": "2020-07-06T17:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDg0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NTA2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450385069", "bodyText": "I don't know how your design process works, but I would expect things to change as we implement them. It's just my opinion though, if someone disagrees we can keep it as-is", "author": "nikklassen", "createdAt": "2020-07-06T17:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MDg0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MTk1OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449681959", "bodyText": "Dashboard isn't the right name for this. It isn't the data for displaying a dashboard (as far as I can tell).", "author": "nikklassen", "createdAt": "2020-07-03T18:51:02Z", "path": "UR-web-app/src/app/site-coordinator/studies/shared/dashboard.model.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+export interface DashboardModel {", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0OTE5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450349191", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:43:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MTk1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjIyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682229", "bodyText": "You only need one error test", "author": "nikklassen", "createdAt": "2020-07-03T18:52:34Z", "path": "UR-web-app/src/app/site-coordinator/studies/shared/studies.service.spec.ts", "diffHunk": "@@ -0,0 +1,140 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from './studies.service';\n+\n+describe('StudiesService', () => {\n+  let studiesService: StudiesService;\n+  const expectedStudies = [\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'NewStudyTest',\n+      enrolledCount: 41,\n+      enrollmentPercentage: 38,\n+      id: 1,\n+      invitedCount: 0,\n+      name: 'New Study Test',\n+      sites: [],\n+      studyPermission: 0,\n+      totalSitesCount: 16,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'OpenStudy',\n+      enrolledCount: 5,\n+      enrollmentPercentage: 0,\n+      id: 12,\n+      invitedCount: 9,\n+      name: 'Open Study 02',\n+      sites: [],\n+      studyPermission: 1,\n+      totalSitesCount: 5,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'ClosedStudy',\n+      enrolledCount: 54,\n+      enrollmentPercentage: 17,\n+      id: 14,\n+      invitedCount: 0,\n+      name: 'Closed Study',\n+      sites: [],\n+      studyPermission: 2,\n+      totalSitesCount: 6,\n+      type: 'CLOSE',\n+    },\n+  ];\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [StudiesService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: StudiesService = TestBed.get(\n+      StudiesService,\n+    ) as StudiesService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Studies List', () => {\n+    const entityServicespy = jasmine.createSpyObj<\n+      EntityService<DashboardModel>\n+    >('EntityService', ['getCollection']);\n+    studiesService = new StudiesService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(of(expectedStudies));\n+    studiesService\n+      .getStudies()\n+      .subscribe(\n+        (Studies) =>\n+          expect(Studies).toEqual(expectedStudies, 'expected StudiesList'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+  it('should return an error when the server returns a 401', fakeAsync(() => {\n+    const entityServicespy = jasmine.createSpyObj<\n+      EntityService<DashboardModel>\n+    >('EntityService', ['getCollection']);\n+    studiesService = new StudiesService(entityServicespy);\n+    const errorResponse: ApiResponse = {\n+      error: {\n+        userMessage: 'User does not exist',\n+        type: 'error',\n+        detailMessage: '404 Cant able to get the details',\n+      },\n+    };\n+\n+    entityServicespy.getCollection.and.returnValue(throwError(errorResponse));\n+\n+    studiesService.getStudies().subscribe(\n+      () => fail('expected an error'),\n+      (error: ApiResponse) => {\n+        expect(error.error.userMessage).toContain('User does not exist');\n+      },\n+    );\n+  }));\n+\n+  it('should return an error when the server returns a 400', fakeAsync(() => {", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0OTM1MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450349351", "bodyText": "Removed.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjMwMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682300", "bodyText": "I believe that this needs fakeAsync", "author": "nikklassen", "createdAt": "2020-07-03T18:53:01Z", "path": "UR-web-app/src/app/site-coordinator/studies/shared/studies.service.spec.ts", "diffHunk": "@@ -0,0 +1,140 @@\n+import {TestBed, fakeAsync, tick} from '@angular/core/testing';\n+import {HttpClientTestingModule} from '@angular/common/http/testing';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {EntityService} from '../../../service/entity.service';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from './studies.service';\n+\n+describe('StudiesService', () => {\n+  let studiesService: StudiesService;\n+  const expectedStudies = [\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'NewStudyTest',\n+      enrolledCount: 41,\n+      enrollmentPercentage: 38,\n+      id: 1,\n+      invitedCount: 0,\n+      name: 'New Study Test',\n+      sites: [],\n+      studyPermission: 0,\n+      totalSitesCount: 16,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'OpenStudy',\n+      enrolledCount: 5,\n+      enrollmentPercentage: 0,\n+      id: 12,\n+      invitedCount: 9,\n+      name: 'Open Study 02',\n+      sites: [],\n+      studyPermission: 1,\n+      totalSitesCount: 5,\n+      type: 'OPEN',\n+    },\n+    {\n+      appId: '',\n+      appInfoId: 0,\n+      customId: 'ClosedStudy',\n+      enrolledCount: 54,\n+      enrollmentPercentage: 17,\n+      id: 14,\n+      invitedCount: 0,\n+      name: 'Closed Study',\n+      sites: [],\n+      studyPermission: 2,\n+      totalSitesCount: 6,\n+      type: 'CLOSE',\n+    },\n+  ];\n+  beforeEach(() => {\n+    TestBed.configureTestingModule({\n+      imports: [\n+        HttpClientTestingModule,\n+        SiteCoordinatorModule,\n+        RouterTestingModule.withRoutes([]),\n+      ],\n+      schemas: [NO_ERRORS_SCHEMA],\n+      providers: [StudiesService, EntityService],\n+    });\n+  });\n+\n+  it('should be created', () => {\n+    const service: StudiesService = TestBed.get(\n+      StudiesService,\n+    ) as StudiesService;\n+    expect(service).toBeTruthy();\n+  });\n+\n+  it('should return expected Studies List', () => {", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0OTUwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450349501", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:43:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjMwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjM1NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682354", "bodyText": "EntityService<Study>", "author": "nikklassen", "createdAt": "2020-07-03T18:53:20Z", "path": "UR-web-app/src/app/site-coordinator/studies/shared/studies.service.ts", "diffHunk": "@@ -0,0 +1,13 @@\n+import {Injectable} from '@angular/core';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {Observable} from 'rxjs';\n+\n+@Injectable({\n+  providedIn: 'root',\n+})\n+export class StudiesService {\n+  constructor(private readonly entityService: EntityService<unknown>) {}", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0OTcwMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450349703", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4Mjg0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682840", "bodyText": "Test data should come from the server, not be hard-coded into the page.", "author": "nikklassen", "createdAt": "2020-07-03T18:55:45Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0OTc2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450349769", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4Mjg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjkxNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682914", "bodyText": "New line after <span>", "author": "nikklassen", "createdAt": "2020-07-03T18:56:10Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM0OTg4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450349883", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:44:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjkyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449682929", "bodyText": "New line", "author": "nikklassen", "createdAt": "2020-07-03T18:56:17Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n+                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MDA1MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450350050", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:44:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MjkyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzQzMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683430", "bodyText": "I get a network error when I try to visit this page after replacing baseUrl in entity.service.ts with 35.222.67.4:8086", "author": "nikklassen", "createdAt": "2020-07-03T18:59:31Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1Mjc4Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450352786", "bodyText": "As login functionality has not yet implemented you also need to hardcode userId in header as mentioned in the attached image to make web service work", "author": "firdosebtc1", "createdAt": "2020-07-06T16:48:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NjMwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450386308", "bodyText": "I don't want to have to edit your code to get the app working, it makes it impossible to review unless you tell me what changes to make. Please create a follow up PR that makes all the existing code work without other developers making changes.", "author": "nikklassen", "createdAt": "2020-07-06T17:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzU2Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683567", "bodyText": "This would be more readable as a function", "author": "nikklassen", "createdAt": "2020-07-03T19:00:13Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n+                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>\n+                                        </div>\n+                                    </div>\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"mb__width__100\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"mb__width__100\">\n+                                    <div class=\"col-xs-12 p-none lh__6\">\n+                                        <div class=\"prog\">\n+                                            <div *ngIf=\"study.invitedCount != 0\" class=\"pro__base\">\n+                                                <div class=\"pro__top\" [style.width.%]=\"study.enrollmentPercentage\">\n+                                                </div>\n+                                            </div>\n+                                            <div class=\"progress-label font__bold\" [ngClass]=\"", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MTIyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450351226", "bodyText": "Can you please explain this point,I'm not able to understand", "author": "firdosebtc1", "createdAt": "2020-07-06T16:46:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzU2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NjczNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450386735", "bodyText": "Move this logic to the controller and then change this to <div class=\"progress-label font__bold\" [ngClass]=\"progressBarColor(study)\">", "author": "nikklassen", "createdAt": "2020-07-06T17:53:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzY3MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683671", "bodyText": "Newline", "author": "nikklassen", "createdAt": "2020-07-03T19:00:52Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -0,0 +1,72 @@\n+<div class=\"max__w__1280\">\n+    <div class=\"tab-content\">\n+        <ng-container *ngIf=\"study$ | async as studies\">\n+            <div *ngIf=\"studies.length != 0\">\n+                <div *ngFor=\"let study of studies\"\n+                    class=\"bg__white cards cards__var box__shadow-cmn ml-none mr-none studies_row\">\n+                    <div (click)=\"navigateToParticipantList('study', study.id)\"\n+                        class=\"flex__justify__space-between flex__wrap\">\n+                        <div class=\"\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"img__container__left\">\n+                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n+                                        alt=\"A Study for Pregnant Women\" />\n+                                </div>\n+                                <div>\n+                                    <div class=\"blue__text__md text-capitalize\">\n+                                        {{ study.customId }}\n+                                    </div>\n+                                    <div class=\"col-xs-12 col-md-12 p-none dashboard-card__title cursor__pointer\">\n+                                        {{ study.name }}\n+                                    </div>\n+                                    <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n+                                        <div class=\"col-xs-6 col-md-12 p-none\">\n+                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n+                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>\n+                                        </div>\n+                                    </div>\n+                                </div>\n+                            </div>\n+                        </div>\n+                        <div class=\"mb__width__100\">\n+                            <div class=\"flex__ flex__row align__items__center\">\n+                                <div class=\"mb__width__100\">\n+                                    <div class=\"col-xs-12 p-none lh__6\">\n+                                        <div class=\"prog\">\n+                                            <div *ngIf=\"study.invitedCount != 0\" class=\"pro__base\">\n+                                                <div class=\"pro__top\" [style.width.%]=\"study.enrollmentPercentage\">\n+                                                </div>\n+                                            </div>\n+                                            <div class=\"progress-label font__bold\" [ngClass]=\"\n+                          study.enrollmentPercentage < 30\n+                            ? 'red__text__sm'\n+                            : study.enrollmentPercentage < 70\n+                            ? 'orange__text__sm'\n+                            : 'green__text__sm'\n+                        \">\n+                                                <span *ngIf=\"study.invitedCount != 0\">{{ study.enrolledCount }} /\n+                                                    {{ study.invitedCount }}</span><span\n+                                                    *ngIf=\"study.invitedCount == 0\">N/A</span>\n+                                            </div>\n+                                        </div>\n+                                    </div>\n+                                </div>\n+                                <div class=\"text-right progress__bar__next\">\n+                                    <div class=\"progress-bar-next__title\">\n+                                        <span\n+                                            *ngIf=\"study.invitedCount != 0\">{{ study.enrollmentPercentage | number: \".2-2\" }}%</span><span\n+                                            *ngIf=\"study.invitedCount == 0\">N/A</span>\n+                                    </div>\n+                                    <div class=\"text-grey__sm\">\n+                                        <span *ngIf=\"study.type != 'OPEN'\">Enrolled / Invited</span><span", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MTMyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450351325", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4Mzc5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683796", "bodyText": "This test doesn't really add anything. Please remove.", "author": "nikklassen", "createdAt": "2020-07-03T19:01:38Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,153 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+import {StudyListComponent} from './study-list.component';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of, Observable} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {StudiesModule} from '../studies.module';\n+import {StudiesService} from '../shared/studies.service';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+\n+describe('StudyListComponent', () => {\n+  let component: StudyListComponent;\n+  let fixture: ComponentFixture<StudyListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const studyServiceSpy = jasmine.createSpyObj<StudiesService>(\n+      'StudiesService',\n+      ['getStudies'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [StudyListComponent],\n+      imports: [\n+        SiteCoordinatorModule,\n+        BrowserAnimationsModule,\n+        StudiesModule,\n+        NoopAnimationsModule,\n+        HttpClientModule,\n+        RouterTestingModule.withRoutes([]),\n+        ModalModule.forRoot(),\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: StudiesService, useValue: studyServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(StudyListComponent);\n+        component = fixture.componentInstance;\n+        const expectedStudyList: Observable<DashboardModel[]> = of([\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'NewStudyTest',\n+            enrolledCount: 41,\n+            enrollmentPercentage: 38,\n+            id: 1,\n+            invitedCount: 0,\n+            name: 'New Study Test',\n+            sites: [],\n+            studyPermission: 0,\n+            totalSitesCount: 16,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'OpenStudy',\n+            enrolledCount: 5,\n+            enrollmentPercentage: 0,\n+            id: 12,\n+            invitedCount: 9,\n+            name: 'Open Study 02',\n+            sites: [],\n+            studyPermission: 1,\n+            totalSitesCount: 5,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'ClosedStudy',\n+            enrolledCount: 54,\n+            enrollmentPercentage: 17,\n+            id: 14,\n+            invitedCount: 0,\n+            name: 'Closed Study',\n+            sites: [],\n+            studyPermission: 2,\n+            totalSitesCount: 6,\n+            type: 'CLOSE',\n+          },\n+        ]);\n+        studyServiceSpy.getStudies.and.returnValue(expectedStudyList);\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should NOT have studies before ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies before ngOnInit',\n+    );\n+  });\n+  it('should NOT have studies immediately after ngOnInit', () => {", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MTUzNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450351535", "bodyText": "Removed.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:46:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4Mzc5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzkxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449683917", "bodyText": "There isn't any search box in this component. Please remove", "author": "nikklassen", "createdAt": "2020-07-03T19:02:18Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,153 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+import {StudyListComponent} from './study-list.component';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of, Observable} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {StudiesModule} from '../studies.module';\n+import {StudiesService} from '../shared/studies.service';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+\n+describe('StudyListComponent', () => {\n+  let component: StudyListComponent;\n+  let fixture: ComponentFixture<StudyListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const studyServiceSpy = jasmine.createSpyObj<StudiesService>(\n+      'StudiesService',\n+      ['getStudies'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [StudyListComponent],\n+      imports: [\n+        SiteCoordinatorModule,\n+        BrowserAnimationsModule,\n+        StudiesModule,\n+        NoopAnimationsModule,\n+        HttpClientModule,\n+        RouterTestingModule.withRoutes([]),\n+        ModalModule.forRoot(),\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: StudiesService, useValue: studyServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(StudyListComponent);\n+        component = fixture.componentInstance;\n+        const expectedStudyList: Observable<DashboardModel[]> = of([\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'NewStudyTest',\n+            enrolledCount: 41,\n+            enrollmentPercentage: 38,\n+            id: 1,\n+            invitedCount: 0,\n+            name: 'New Study Test',\n+            sites: [],\n+            studyPermission: 0,\n+            totalSitesCount: 16,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'OpenStudy',\n+            enrolledCount: 5,\n+            enrollmentPercentage: 0,\n+            id: 12,\n+            invitedCount: 9,\n+            name: 'Open Study 02',\n+            sites: [],\n+            studyPermission: 1,\n+            totalSitesCount: 5,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'ClosedStudy',\n+            enrolledCount: 54,\n+            enrollmentPercentage: 17,\n+            id: 14,\n+            invitedCount: 0,\n+            name: 'Closed Study',\n+            sites: [],\n+            studyPermission: 2,\n+            totalSitesCount: 6,\n+            type: 'CLOSE',\n+          },\n+        ]);\n+        studyServiceSpy.getStudies.and.returnValue(expectedStudyList);\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should NOT have studies before ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies before ngOnInit',\n+    );\n+  });\n+  it('should NOT have studies immediately after ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies until service promise resolves',\n+    );\n+  });\n+  describe('after get studies', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+    it('should not have search box ', () => {", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MzU0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450353543", "bodyText": "Search Box will be part of sitecoordinator.component.html and it is a commonHeader for all the child components,We have removed this test case", "author": "firdosebtc1", "createdAt": "2020-07-06T16:50:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4MzkxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDA2OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449684068", "bodyText": "tests should be all lowercase. should display all studies", "author": "nikklassen", "createdAt": "2020-07-03T19:03:04Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.spec.ts", "diffHunk": "@@ -0,0 +1,153 @@\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+import {\n+  BrowserAnimationsModule,\n+  NoopAnimationsModule,\n+} from '@angular/platform-browser/animations';\n+import {StudyListComponent} from './study-list.component';\n+\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of, Observable} from 'rxjs';\n+import {BsModalService, BsModalRef, ModalModule} from 'ngx-bootstrap/modal';\n+\n+import {StudiesModule} from '../studies.module';\n+import {StudiesService} from '../shared/studies.service';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+\n+describe('StudyListComponent', () => {\n+  let component: StudyListComponent;\n+  let fixture: ComponentFixture<StudyListComponent>;\n+\n+  beforeEach(async(async () => {\n+    const studyServiceSpy = jasmine.createSpyObj<StudiesService>(\n+      'StudiesService',\n+      ['getStudies'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [StudyListComponent],\n+      imports: [\n+        SiteCoordinatorModule,\n+        BrowserAnimationsModule,\n+        StudiesModule,\n+        NoopAnimationsModule,\n+        HttpClientModule,\n+        RouterTestingModule.withRoutes([]),\n+        ModalModule.forRoot(),\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalService,\n+        BsModalRef,\n+        {provide: StudiesService, useValue: studyServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(StudyListComponent);\n+        component = fixture.componentInstance;\n+        const expectedStudyList: Observable<DashboardModel[]> = of([\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'NewStudyTest',\n+            enrolledCount: 41,\n+            enrollmentPercentage: 38,\n+            id: 1,\n+            invitedCount: 0,\n+            name: 'New Study Test',\n+            sites: [],\n+            studyPermission: 0,\n+            totalSitesCount: 16,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'OpenStudy',\n+            enrolledCount: 5,\n+            enrollmentPercentage: 0,\n+            id: 12,\n+            invitedCount: 9,\n+            name: 'Open Study 02',\n+            sites: [],\n+            studyPermission: 1,\n+            totalSitesCount: 5,\n+            type: 'OPEN',\n+          },\n+          {\n+            appId: '',\n+            appInfoId: 0,\n+            customId: 'ClosedStudy',\n+            enrolledCount: 54,\n+            enrollmentPercentage: 17,\n+            id: 14,\n+            invitedCount: 0,\n+            name: 'Closed Study',\n+            sites: [],\n+            studyPermission: 2,\n+            totalSitesCount: 6,\n+            type: 'CLOSE',\n+          },\n+        ]);\n+        studyServiceSpy.getStudies.and.returnValue(expectedStudyList);\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should NOT have studies before ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies before ngOnInit',\n+    );\n+  });\n+  it('should NOT have studies immediately after ngOnInit', () => {\n+    expect(component.studies.length).toBe(\n+      0,\n+      'should not have studies until service promise resolves',\n+    );\n+  });\n+  describe('after get studies', () => {\n+    beforeEach(async(() => {\n+      fixture.detectChanges();\n+      void fixture.whenStable().then(() => {\n+        fixture.detectChanges();\n+      });\n+    }));\n+    it('should not have search box ', () => {\n+      const compiled = fixture.nativeElement as HTMLElement;\n+      expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+        undefined,\n+        'should not have search box',\n+      );\n+    });\n+    it('should get the studies List via refresh function', fakeAsync(() => {\n+      component.study$.subscribe((studies) => {\n+        expect(studies.length).toEqual(3);\n+      });\n+    }));\n+    it('should DISPLAY All Studies', () => {", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MzYyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450353624", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-06T16:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDA2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDM4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449684389", "bodyText": "What if it isn't an ApiResponse? I ran into this issue with the page not loading. You should fall back to another error message if something else went wrong. I would also extract this into an HttpInterceptor, because I'm sure you're going to want to do this on every HTTP request", "author": "nikklassen", "createdAt": "2020-07-03T19:04:44Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {catchError, map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from '../shared/studies.service';\n+@Component({\n+  selector: 'app-study-list',\n+  templateUrl: './study-list.component.html',\n+  styleUrls: ['./study-list.component.scss'],\n+})\n+export class StudyListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  study$: Observable<DashboardModel[]> = of([]);\n+  studies: DashboardModel[] = [];\n+  constructor(\n+    private readonly studiesService: StudiesService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getStudies();\n+  }\n+\n+  getStudies(): void {\n+    this.study$ = combineLatest(\n+      this.studiesService.getStudies(),\n+      this.query$,\n+    ).pipe(\n+      catchError((error: ApiResponse) => {\n+        this.toastr.error(error.error.userMessage);", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MzczMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450353733", "bodyText": "Updated the HttpInterceptor,Please check and let us know if any other error needs to be handled", "author": "firdosebtc1", "createdAt": "2020-07-06T16:50:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDM4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDYxMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r449684611", "bodyText": "Use optional chaining instead\nstudy.name?.toLowerCase()?.includes(query.toLowerCase())", "author": "nikklassen", "createdAt": "2020-07-03T19:06:01Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import {Component, OnInit} from '@angular/core';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {throwError, BehaviorSubject, combineLatest, Observable} from 'rxjs';\n+import {catchError, map} from 'rxjs/operators';\n+import {of} from 'rxjs';\n+import {DashboardModel} from '../shared/dashboard.model';\n+import {StudiesService} from '../shared/studies.service';\n+@Component({\n+  selector: 'app-study-list',\n+  templateUrl: './study-list.component.html',\n+  styleUrls: ['./study-list.component.scss'],\n+})\n+export class StudyListComponent implements OnInit {\n+  query$ = new BehaviorSubject('');\n+  study$: Observable<DashboardModel[]> = of([]);\n+  studies: DashboardModel[] = [];\n+  constructor(\n+    private readonly studiesService: StudiesService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getStudies();\n+  }\n+\n+  getStudies(): void {\n+    this.study$ = combineLatest(\n+      this.studiesService.getStudies(),\n+      this.query$,\n+    ).pipe(\n+      catchError((error: ApiResponse) => {\n+        this.toastr.error(error.error.userMessage);\n+        return throwError(error);\n+      }),\n+      map(([studies, query]) => {\n+        this.studies = studies as DashboardModel[];\n+        return this.studies.filter(\n+          (study: DashboardModel) =>\n+            (study.name &&", "originalCommit": "383e946a2d80daa296162de29e818ceeb11a58c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1NTQ2NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450355464", "bodyText": "Changing it to the above code is giving error as mentioned in the image", "author": "firdosebtc1", "createdAt": "2020-07-06T16:53:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3ODkyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450378920", "bodyText": "Well if it isn't nullable then you don't need either. If it's an empty check the includes will always fail, so you don't need it in that case either.", "author": "nikklassen", "createdAt": "2020-07-06T17:37:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY4NDYxMQ=="}], "type": "inlineReview"}, {"oid": "c196e5da80ec1d66587d6caf62a519da9d87da33", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c196e5da80ec1d66587d6caf62a519da9d87da33", "message": "Code Review comments has been resolved", "committedDate": "2020-07-06T13:46:09Z", "type": "commit"}, {"oid": "fa0f04312e803ef0469484a19f9698c9189f17ae", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/fa0f04312e803ef0469484a19f9698c9189f17ae", "message": "Errors has been handled in HttpInterceptor", "committedDate": "2020-07-06T16:36:28Z", "type": "commit"}, {"oid": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "message": "Build issues has been fixed", "committedDate": "2020-07-06T16:59:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3MDAwNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450370004", "bodyText": "Exceptions aren't very common in TS? What are you expecting to be thrown here?", "author": "nikklassen", "createdAt": "2020-07-06T17:20:44Z", "path": "UR-web-app/src/app/http-interceptors/auth.interceptor.ts", "diffHunk": "@@ -40,9 +53,36 @@ export class AuthInterceptor implements HttpInterceptor {\n       .set('authUserId', user.urAdminAuthId);\n     const authReq = req.clone({headers});\n     return next.handle(authReq).pipe(\n+      catchError((err) => {\n+        this.handleError(err);\n+        return of(err);\n+      }),\n       finalize(() => {\n         void this.spinner.hide();\n       }),\n     );\n   }\n+\n+  handleError(err: unknown): void {\n+    if (err instanceof HttpErrorResponse) {\n+      try {\n+        if (err.error instanceof ErrorEvent) {\n+          this.toasterService.error(err.error.message);\n+        } else {\n+          const customError = err.error as Error;\n+          if (customError.userMessage) {\n+            this.toasterService.error(customError.userMessage);\n+          } else {\n+            this.toasterService.error(\n+              `Error Code: ${err.status}\\nMessage: ${err.message}`,\n+            );\n+          }\n+        }\n+      } catch (e) {", "originalCommit": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NjEyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450376124", "bodyText": "You should move all of this to handleError. I would write it like this\n  handleError<T>(): OperatorFunction<T, T> {\n    return catchError(\n      (err: unknown): Observable<T> => {\n        if (err instanceof HttpErrorResponse) {\n            // ...\n        }\n        return throwError(err);\n      },\n    );\n  }\n}", "author": "nikklassen", "createdAt": "2020-07-06T17:32:23Z", "path": "UR-web-app/src/app/http-interceptors/auth.interceptor.ts", "diffHunk": "@@ -40,9 +53,36 @@ export class AuthInterceptor implements HttpInterceptor {\n       .set('authUserId', user.urAdminAuthId);\n     const authReq = req.clone({headers});\n     return next.handle(authReq).pipe(\n+      catchError((err) => {", "originalCommit": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzE3NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450377175", "bodyText": "Site should be in its own file.", "author": "nikklassen", "createdAt": "2020-07-06T17:34:28Z", "path": "UR-web-app/src/app/site-coordinator/studies/shared/study.model.ts", "diffHunk": "@@ -11,6 +11,7 @@ export interface DashboardModel {\n   studyPermission: number;\n   totalSitesCount: number;\n   type: string;\n+  logo: string;\n }\n export interface Site {", "originalCommit": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzQ4Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450377482", "bodyText": "Remove empty attribute.", "author": "nikklassen", "createdAt": "2020-07-06T17:35:06Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -8,9 +8,8 @@\n                         class=\"flex__justify__space-between flex__wrap\">\n                         <div class=\"\">\n                             <div class=\"flex__ flex__row align__items__center\">\n-                                <div class=\"img__container__left\">\n-                                    <img class=\"\" src=\"assets/images/site-list-tab.gif\"\n-                                        alt=\"A Study for Pregnant Women\" />\n+                                <div class=\"img__container__left\" *ngIf=\"study.logo\">\n+                                    <img class=\"\" [src]=\"study.logo\" />", "originalCommit": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzYxMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/591#discussion_r450377610", "bodyText": "Space after number", "author": "nikklassen", "createdAt": "2020-07-06T17:35:20Z", "path": "UR-web-app/src/app/site-coordinator/studies/study-list/study-list.component.html", "diffHunk": "@@ -21,8 +20,12 @@\n                                     </div>\n                                     <div class=\"text-grey__sm row flex-wrap-unset col-xs-12 col-md-12 p-none\">\n                                         <div class=\"col-xs-6 col-md-12 p-none\">\n-                                            <span *ngIf=\"study.type != 'OPEN'\">{{ study.totalSitesCount }}\n-                                                sites</span><span *ngIf=\"study.type == 'OPEN'\">Open Study</span>\n+                                            <span *ngIf=\"study.type != 'OPEN'\">\n+                                                {{ study.totalSitesCount }}sites", "originalCommit": "12d50c49ea57774e3c8c45dbd58923aa1fa85cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3af49417e1e3928505b64a2f1bd0e07492314f28", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3af49417e1e3928505b64a2f1bd0e07492314f28", "message": "empty attribute removed", "committedDate": "2020-07-07T08:50:22Z", "type": "commit"}, {"oid": "78414ac8a14e746b0dcfdc24e85e9ab3f9425812", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/78414ac8a14e746b0dcfdc24e85e9ab3f9425812", "message": "code review comments has been resolved", "committedDate": "2020-07-07T12:32:32Z", "type": "commit"}, {"oid": "49043bdc4d2c2852d3c44b25c3aeeb5bd9de8bed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/49043bdc4d2c2852d3c44b25c3aeeb5bd9de8bed", "message": "Merge branch 'develop' into dashboard-header-implementation", "committedDate": "2020-07-07T14:04:13Z", "type": "commit"}]}