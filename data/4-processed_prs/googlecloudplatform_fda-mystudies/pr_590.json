{"pr_number": 590, "pr_title": "Audit Log Event Implementation for Reset Password with integration tests", "pr_createdAt": "2020-07-03T11:01:52Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590", "timeline": [{"oid": "7e1ca0d1316b145ac39bb3fa73a2c54d217ce3c2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7e1ca0d1316b145ac39bb3fa73a2c54d217ce3c2", "message": "Audit Log Event Implementation for Reset Password with integration tests\n\nAdded common code to call /v1/events endpoint to post audit log event and implemented fallback option with a scheduler.\n\nUsed @ConditionalOnProperty to conditionally load components from common-service.\n\nMinor changes to audit log service and fixed the integration tests.", "committedDate": "2020-07-03T10:59:52Z", "type": "commit"}, {"oid": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/830ce809510d79ad2ea9d109e462b6f4640aa35c", "message": "Removed fallback option code to reduce the PR#590 size\n\nRemoved fallback option code to reduce the PR#590 size", "committedDate": "2020-07-04T03:14:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MTk0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453071940", "bodyText": "why was this removed?", "author": "zohrehj", "createdAt": "2020-07-10T20:52:56Z", "path": "audit-log-module/audit-log-service/src/main/resources/application-local.properties", "diffHunk": "@@ -34,5 +35,4 @@ management.endpoints.enabled-by-default=true\n management.endpoints.web.exposure.include=*\n \n # SECURITY OAUTH2 WITH ORY HYDRA\n-security.oauth2.health_endpoint=http://localhost:8002/oauth-scim-service/v1/health", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyOTQ0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454129443", "bodyText": "This endpoint renamed to /healthCheck and returns 200 OK with body {\"status\": \"UP\"} so this is no longer required.", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MTk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MjQ1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453072452", "bodyText": "please explain what these flags do.\nWhich functionality of the commonservice is dependent on this flag?", "author": "zohrehj", "createdAt": "2020-07-10T20:54:27Z", "path": "audit-log-module/audit-log-service/src/main/resources/application.properties", "diffHunk": "@@ -18,4 +18,6 @@ server.servlet.context-path=/audit-log-service\n spring.datasource.initialize=false\n \n # other app configurations\n-auditlog.platform-version=1.0\n\\ No newline at end of file\n+auditlog.platform-version=1.0\n+commonservice.auditlogevent.enabled=false\n+commonservice.email.enabled=false", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzMjE5Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454132192", "bodyText": "common-service contains many re-usable components, email service is one such component. This email service is not required by all other services, so to avoid unnecessarily adding configurations for email, this email service component is conditionally loaded by the spring boot. Same reason applies to AuditLogEvent services/repos/entities. Reusable entities should be loaded conditionally to avoid creating the tables when spring.jpa.hibernate.ddl-auto=update", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MjQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MjkyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453072926", "bodyText": "Test should not have dependency on one another.", "author": "zohrehj", "createdAt": "2020-07-10T20:55:35Z", "path": "audit-log-module/audit-log-service/src/test/java/com/google/cloud/healthcare/fdamystudies/auditlog/controller/AuditLogEventControllerTest.java", "diffHunk": "@@ -27,19 +31,24 @@\n import java.util.Collections;\n import java.util.UUID;\n import org.apache.commons.lang3.RandomStringUtils;\n+import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;\n+import org.junit.jupiter.api.Order;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestMethodOrder;\n import org.skyscreamer.jsonassert.JSONAssert;\n import org.skyscreamer.jsonassert.JSONCompareMode;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpHeaders;\n import org.springframework.http.MediaType;\n import org.springframework.test.web.servlet.MvcResult;\n \n+@TestMethodOrder(OrderAnnotation.class)\n public class AuditLogEventControllerTest extends BaseMockIT {\n \n   @Autowired private AuditLogEventRepository repository;\n \n   @Test\n+  @Order(1)", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNjUyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454136524", "bodyText": "We are using @Order only in integration tests. IMO, we can use @Order for integration tests but not in unit tests. I also checked SO post and Your tests shall not be ordered (shall they?)", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MjkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5MTA5Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r461591092", "bodyText": "addressed below. Please create a bug for this effort so that it will get addressed later.", "author": "zohrehj", "createdAt": "2020-07-28T13:44:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MjkyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyNjE3NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462426174", "bodyText": "I received similar comments on PR #664 so I removed @Order from all the tests in PR #664 .  PR 664 has been approved.", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:22:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MjkyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MzI1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453073258", "bodyText": "please remove ordering, instead you can clean up the matching event from the logs.", "author": "zohrehj", "createdAt": "2020-07-10T20:56:23Z", "path": "audit-log-module/audit-log-service/src/test/java/com/google/cloud/healthcare/fdamystudies/auditlog/controller/AuditLogEventControllerTest.java", "diffHunk": "@@ -68,9 +77,15 @@ public void shouldSaveAuditLogEvent() throws Exception {\n \n     // Step-3 cleanup - delete the event from database\n     repository.deleteById(eventId);\n+\n+    verify(\n+        1,\n+        postRequestedFor(urlEqualTo(\"/oauth-scim-service/v1/oauth2/introspect\"))\n+            .withRequestBody(new ContainsPattern(VALID_TOKEN)));\n   }\n \n   @Test\n+  @Order(2)", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNjY5Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454136693", "bodyText": "We are using @Order only in integration tests. IMO, we can use @Order for integration tests but not in unit tests. I also checked SO post and Your tests shall not be ordered (shall they?)", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MzI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyNjM0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462426343", "bodyText": "I received similar comments on PR #664 so I removed @order from all the tests in PR #664 . PR 664 has been approved.", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:22:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MzI1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MzkwMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453073902", "bodyText": "rename to something more descriptive, e.g. auditRequest", "author": "zohrehj", "createdAt": "2020-07-10T20:57:52Z", "path": "audit-log-module/audit-log-service/src/test/java/com/google/cloud/healthcare/fdamystudies/auditlog/controller/AuditLogEventControllerTest.java", "diffHunk": "@@ -105,6 +133,7 @@ public void shouldReturnBadRequestForInvalidContent() throws Exception {\n     aleRequest.setSystemId(RandomStringUtils.randomAlphanumeric(40));\n     aleRequest.setUserId(RandomStringUtils.randomAlphanumeric(101));\n     aleRequest.setSystemIp(\"0.0.0.\");\n+    aleRequest.setClientIp(getRandomSystemIp());", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNzM1NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454137354", "bodyText": "Renamed to auditRequest", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MzkwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NDM4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453074384", "bodyText": "this is not PII, we don't need to exclude it form logs.", "author": "zohrehj", "createdAt": "2020-07-10T20:58:56Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/beans/AuditLogEventRequest.java", "diffHunk": "@@ -43,6 +43,11 @@\n   @ToString.Exclude\n   private String systemIp;\n \n+  @NotBlank\n+  @Size(min = 7, max = 39)\n+  @ToString.Exclude", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MDQxMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454140411", "bodyText": "Removed @ToString.Exclude for systemIp", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:50:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NDM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyNjkxMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462426910", "bodyText": "This field has been removed in new audit log requirements.", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:23:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NDM4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NzQ1OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453077459", "bodyText": "If I recall correctly we had agreed to remove OrgID entirely, so there is no point in adding it here.", "author": "zohrehj", "createdAt": "2020-07-10T21:06:46Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/AuditEventMapper.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AuditLogEventRequest;\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.Arrays;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public final class AuditEventMapper {\n+\n+  private AuditEventMapper() {}\n+\n+  private static final String APP_ID = \"appId\";\n+\n+  private static final String CLIENT_ID = \"clientId\";\n+\n+  private static final String DEVICE_TYPE = \"deviceType\";\n+\n+  private static final String DEVICE_PLATFORM = \"devicePlatform\";\n+\n+  private static final String CLIENT_APP_VERSION = \"clientAppVersion\";\n+\n+  private static final String CORRELATION_ID = \"correlationId\";\n+\n+  private static final String USER_ID = \"userId\";\n+\n+  private static final String ORG_ID = \"orgId\";", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MTg3Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454141877", "bodyText": "I'll check with Shanthala and fix this issue #628 in follow up PR.", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NzQ1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyNzY3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462427670", "bodyText": "I've removed OrgId from audit log implementation in this PR and from other places in PR #650 .", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:25:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NzQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NzcwMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453077700", "bodyText": "system IP to be removed", "author": "zohrehj", "createdAt": "2020-07-10T21:07:29Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/AuditEventMapper.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AuditLogEventRequest;\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.Arrays;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public final class AuditEventMapper {\n+\n+  private AuditEventMapper() {}\n+\n+  private static final String APP_ID = \"appId\";\n+\n+  private static final String CLIENT_ID = \"clientId\";\n+\n+  private static final String DEVICE_TYPE = \"deviceType\";\n+\n+  private static final String DEVICE_PLATFORM = \"devicePlatform\";\n+\n+  private static final String CLIENT_APP_VERSION = \"clientAppVersion\";\n+\n+  private static final String CORRELATION_ID = \"correlationId\";\n+\n+  private static final String USER_ID = \"userId\";\n+\n+  private static final String ORG_ID = \"orgId\";\n+\n+  public static AuditLogEventRequest fromHttpServletRequest(HttpServletRequest request)\n+      throws UnknownHostException {\n+    AuditLogEventRequest aleRequest = new AuditLogEventRequest();\n+    aleRequest.setOrgId(getValue(request, ORG_ID));\n+    aleRequest.setAppId(getValue(request, APP_ID));\n+    aleRequest.setClientAppVersion(getValue(request, CLIENT_APP_VERSION));\n+    aleRequest.setCorrelationId(getValue(request, CORRELATION_ID));\n+    aleRequest.setDeviceType(getValue(request, DEVICE_TYPE));\n+    aleRequest.setDevicePlatform(getValue(request, DEVICE_PLATFORM));\n+    aleRequest.setClientId(getValue(request, CLIENT_ID));\n+    aleRequest.setUserId(getValue(request, USER_ID));\n+    aleRequest.setClientIp(getClientIP(request));\n+    aleRequest.setRequestUri(request.getRequestURI());\n+    aleRequest.setSystemIp(InetAddress.getLocalHost().getHostAddress());", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MjcxNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454142715", "bodyText": "I'll check with Shanthala and fix this issue #628 in follow up PR.", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:55:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NzcwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyODQ4Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462428487", "bodyText": "I've removed System IP field", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NzcwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3ODE2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453078169", "bodyText": "where is this used and why is cookie not encrypted?", "author": "zohrehj", "createdAt": "2020-07-10T21:08:47Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/AuditEventMapper.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.AuditLogEventRequest;\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.Arrays;\n+import javax.servlet.http.Cookie;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public final class AuditEventMapper {\n+\n+  private AuditEventMapper() {}\n+\n+  private static final String APP_ID = \"appId\";\n+\n+  private static final String CLIENT_ID = \"clientId\";\n+\n+  private static final String DEVICE_TYPE = \"deviceType\";\n+\n+  private static final String DEVICE_PLATFORM = \"devicePlatform\";\n+\n+  private static final String CLIENT_APP_VERSION = \"clientAppVersion\";\n+\n+  private static final String CORRELATION_ID = \"correlationId\";\n+\n+  private static final String USER_ID = \"userId\";\n+\n+  private static final String ORG_ID = \"orgId\";\n+\n+  public static AuditLogEventRequest fromHttpServletRequest(HttpServletRequest request)\n+      throws UnknownHostException {\n+    AuditLogEventRequest aleRequest = new AuditLogEventRequest();\n+    aleRequest.setOrgId(getValue(request, ORG_ID));\n+    aleRequest.setAppId(getValue(request, APP_ID));\n+    aleRequest.setClientAppVersion(getValue(request, CLIENT_APP_VERSION));\n+    aleRequest.setCorrelationId(getValue(request, CORRELATION_ID));\n+    aleRequest.setDeviceType(getValue(request, DEVICE_TYPE));\n+    aleRequest.setDevicePlatform(getValue(request, DEVICE_PLATFORM));\n+    aleRequest.setClientId(getValue(request, CLIENT_ID));\n+    aleRequest.setUserId(getValue(request, USER_ID));\n+    aleRequest.setClientIp(getClientIP(request));\n+    aleRequest.setRequestUri(request.getRequestURI());\n+    aleRequest.setSystemIp(InetAddress.getLocalHost().getHostAddress());\n+    return aleRequest;\n+  }\n+\n+  private static String getValue(HttpServletRequest request, String name) {\n+    String value = request.getHeader(name);\n+    if (StringUtils.isEmpty(value)) {\n+      value = getCookieValue(request, name);\n+    }\n+    return value;\n+  }\n+\n+  private static String getClientIP(HttpServletRequest request) {\n+    return StringUtils.defaultIfEmpty(\n+        request.getHeader(\"X-FORWARDED-FOR\"), request.getRemoteAddr());\n+  }\n+\n+  private static String getCookieValue(HttpServletRequest req, String cookieName) {", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0NDQ1OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454144459", "bodyText": "cookies are used in login/consent flow, these cookie information doesn't contain PII/PHI data. This is a reusable code for preparing audit event requests.", "author": "dhanyak-btc", "createdAt": "2020-07-14T06:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3ODE2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3ODYxMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453078612", "bodyText": "let's postpone this until we have a decision with regard to the fallback and retry approach.", "author": "zohrehj", "createdAt": "2020-07-10T21:10:01Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/model/AuditEventEntity.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.model;\n+\n+import java.sql.Timestamp;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.text.StringEscapeUtils;\n+import org.hibernate.annotations.GenericGenerator;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+\n+@Setter\n+@Getter\n+@Entity\n+@Table(name = \"audit_events\")\n+@ConditionalOnProperty(\n+    value = \"commonservice.auditlogevent.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = true)\n+public class AuditEventEntity {\n+\n+  @Id\n+  @GeneratedValue(generator = \"system-uuid\")\n+  @GenericGenerator(name = \"system-uuid\", strategy = \"uuid\")\n+  @Column(name = \"id\", updatable = false, nullable = false)\n+  private String id;\n+\n+  /** Refer AuditLogEventStatus enum for values. */\n+  @Column(name = \"status\")\n+  private int status;\n+\n+  @Column(name = \"http_status_code\")\n+  private int httpStatusCode;\n+\n+  @Column(name = \"retry_count\", nullable = true)\n+  private long retryCount;", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0NTI2Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454145266", "bodyText": "Added your comment to issue #628 to fix in followup PR.", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3ODYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyOTk3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462429976", "bodyText": "Fallback related code has been removed in PR #592", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:28:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3ODYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3NTA2MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453675060", "bodyText": "please rename to auditRequest", "author": "zohrehj", "createdAt": "2020-07-13T14:05:52Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AuditEventServiceImpl.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getObjectMapper;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getTextValue;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.beans.AuditLogEventRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.AuditLogEventResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.AuditLogEvent;\n+import com.google.cloud.healthcare.fdamystudies.repository.AuditEventRepository;\n+import java.time.Instant;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.client.RestClientResponseException;\n+\n+@Service\n+@ConditionalOnProperty(\n+    value = \"commonservice.auditlogevent.enabled\",\n+    havingValue = \"true\",\n+    matchIfMissing = true)\n+public class AuditEventServiceImpl extends BaseServiceImpl implements AuditEventService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(AuditEventServiceImpl.class.getName());\n+\n+  @Value(\"${auditlog.events_endpoint:}\")\n+  private String eventsEndpoint;\n+\n+  @Value(\"${auditlog.app.component.name:}\")\n+  private String appComponentName;\n+\n+  @Value(\"${auditlog.application.version:}\")\n+  private String applicationVersion;\n+\n+  @Autowired AuditEventRepository auditEventRepository;\n+\n+  @Autowired private OAuthService oauthService;\n+\n+  @Override\n+  public AuditLogEventResponse postAuditLogEvent(\n+      AuditLogEvent eventEnum, AuditLogEventRequest aleRequest) {\n+    logger.entry(String.format(\"begin postAuditLogEvent() for %s event\", eventEnum.getEventName()));\n+\n+    // prepare the request for POST method\n+    aleRequest.setEventName(eventEnum.getEventName());", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0NTg2Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454145866", "bodyText": "I'll stop using acronyms for variable names in future PR's. Renamed to auditRequest", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3NTA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3NzA3MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453677071", "bodyText": "isSuccessful is probably descriptive enough, is2xx is an implementation detail.", "author": "zohrehj", "createdAt": "2020-07-13T14:08:59Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/OAuthServiceImpl.java", "diffHunk": "@@ -62,4 +89,56 @@\n             response.getStatusCodeValue(), response.getBody().get(ACTIVE).booleanValue()));\n     return response;\n   }\n+\n+  @Override\n+  public String getAccessToken() {\n+    if (StringUtils.isEmpty(accessToken)) {\n+      this.accessToken = getNewAccessToken();\n+    }\n+    return this.accessToken;\n+  }\n+\n+  @Override\n+  public String getNewAccessToken() {\n+    logger.entry(\"begin getNewAccessToken()\");\n+    ResponseEntity<JsonNode> response = getToken();\n+    if (response.getStatusCode().is2xxSuccessful()) {", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0NzU1MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454147550", "bodyText": "is2XX method provided by Spring framework: boolean org.springframework.http.HttpStatus.is2xxSuccessful()\nAdded below method in BaseServiceImpl and changed Line 105 to if (isSuccessful(response)) {\nprotected boolean isSuccessful(ResponseEntity<?> response) {\n    return response.getStatusCode().is2xxSuccessful();\n  }", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:06:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3NzA3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3ODIwMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453678200", "bodyText": "please rename all aleRequest and aleResponses to auditRequest and auditRepsponse.\nale will be quite confusing to new users.", "author": "zohrehj", "createdAt": "2020-07-13T14:10:39Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserController.java", "diffHunk": "@@ -97,15 +100,16 @@\n       consumes = MediaType.APPLICATION_JSON_VALUE)\n   public ResponseEntity<?> resetPassword(\n       @Valid @RequestBody UpdateUserRequest userRequest, HttpServletRequest request)\n-      throws JsonProcessingException {\n+      throws JsonProcessingException, UnknownHostException {\n     logger.entry(String.format(BEGIN_S_REQUEST_LOG, request.getRequestURI()));\n     ValidationErrorResponse validationResult = UserValidator.validate(userRequest);\n     if (validationResult.hasErrors()) {\n       logger.exit(String.format(VALIDATION_ERROS_LOG, validationResult));\n       return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(validationResult);\n     }\n \n-    UpdateUserResponse userResponse = userService.resetPassword(userRequest);\n+    AuditLogEventRequest aleRequest = AuditEventMapper.fromHttpServletRequest(request);", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0ODg0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454148843", "bodyText": "I replaced all aleRequest with auditRequest in the workspace.", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:09:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3ODIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3ODcyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453678723", "bodyText": "please remove all versioning instances from this code and other dependent PRs", "author": "zohrehj", "createdAt": "2020-07-13T14:11:23Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/filter/TokenIntrospectionFilter.java", "diffHunk": "@@ -31,6 +31,12 @@ public void init() {\n     uriTemplateAndMethods.put(\n         String.format(\"%s/v1/users\", context.getContextPath()),\n         new String[] {HttpMethod.POST.name()});\n+    uriTemplateAndMethods.put(\n+        String.format(\"%s/v1/users/{userId}\", context.getContextPath()),", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0OTM2Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454149366", "bodyText": "Added this comment to issue #628, it'll be removed in follow up PR.", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:10:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3ODcyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4MDI1Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453680256", "bodyText": "nit: would be nice to extract common header in one file and reuse them", "author": "zohrehj", "createdAt": "2020-07-13T14:13:46Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/service/HydraOAuthServiceImpl.java", "diffHunk": "@@ -25,6 +25,11 @@\n @Service\n class HydraOAuthServiceImpl extends BaseServiceImpl implements OAuthService {\n \n+  private static final String APPLICATION_X_WWW_FORM_URLENCODED_CHARSET_UTF_8 =\n+      \"application/x-www-form-urlencoded;charset=UTF-8\";", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE1MTEyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454151125", "bodyText": "Created a CommonConstants class in common-service with this variable. We'll re-use this class for other common constants.", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:14:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4MDI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDA3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453684076", "bodyText": "Unit tests should be independent of one another; having these dependency on previous tests means that if one of the early tests fails, all following tests will also fail which is misleading and can hide other potential failures.\nPlease fix and remove @order from all unit tests.", "author": "zohrehj", "createdAt": "2020-07-13T14:19:13Z", "path": "oauth-scim-module/oauth-scim-service/src/test/java/com/google/cloud/healthcare/fdamystudies/oauthscim/controller/UserControllerTest.java", "diffHunk": "@@ -219,6 +248,11 @@ public void shouldReturnBadRequestForChangePasswordAction()\n     actualResponse = result.getResponse().getContentAsString();\n     expectedResponse = readJsonFile(\"/response/change_password_bad_request_from_validator.json\");\n     JSONAssert.assertEquals(expectedResponse, actualResponse, JSONCompareMode.NON_EXTENSIBLE);\n+\n+    verify(\n+        5,", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE1MjE4Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454152186", "bodyText": "We are using @Order only in integration tests. IMO, we can use @Order for integration tests but not in unit tests. I also checked SO post and Your tests shall not be ordered (shall they?)", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:16:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDA3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4OTczOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r461589739", "bodyText": "I would prefer to have isolated tests for both unit and integration tests.\nOtherwise as I said, a failure in an earlier test would cause all following tests to also fail.\nAlso if you remove the dependencies, we could in future speed the tests up by making them run in parallel.", "author": "zohrehj", "createdAt": "2020-07-28T13:43:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDA3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQzMDcwNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462430704", "bodyText": "I received similar comments on PR #664 so I removed @order from all the tests in PR #664 . PR 664 has been approved.", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDg1MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453684850", "bodyText": "this will removed as well.", "author": "zohrehj", "createdAt": "2020-07-13T14:20:21Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.common;\n+\n+import com.google.cloud.healthcare.fdamystudies.common.AuditLogEvent;\n+import lombok.Getter;\n+\n+@Getter\n+public enum AuthScimEvent implements AuditLogEvent {\n+  PASSWORD_RESET_SUCCESS(\n+      false,\n+      Constants.APP_USER,\n+      Constants.FMSGCAUTHSVR,\n+      Constants.FMSGCMOBAPP,\n+      Constants.APP_LEVEL,\n+      Constants.PARTICIPANT_DATASTORE,\n+      \"Password reset success\",\n+      \"Password reset for User ID ${user_id} was successful.\",\n+      \"PASSWORD_RESET_SUCCESS\",\n+      true),\n+\n+  PASSWORD_RESET_FAILED(\n+      false,\n+      Constants.APP_USER,\n+      Constants.FMSGCAUTHSVR,\n+      Constants.FMSGCMOBAPP,\n+      Constants.APP_LEVEL,\n+      Constants.PARTICIPANT_DATASTORE,\n+      \"Password reset failure\",\n+      \"Password reset for User ID ${user_id}, failed.\",\n+      \"PASSWORD_RESET_FAILED\",\n+      true);\n+\n+  private final String eventName;\n+  private final boolean alert;\n+  private final String systemId;\n+  private final String accessLevel;\n+  private final String clientId;\n+  private final String clientAccessLevel;\n+  private final String resourceServer;\n+  private final String eventDetail;\n+  private final String description;\n+  private final boolean fallback;\n+\n+  private AuthScimEvent(\n+      boolean alert,\n+      String accessLevel,\n+      String systemId,\n+      String clientId,\n+      String clientAccessLevel,\n+      String resourceServer,\n+      String eventDetail,\n+      String description,\n+      String eventName,\n+      boolean fallback) {\n+    this.alert = alert;\n+    this.accessLevel = accessLevel;\n+    this.systemId = systemId;\n+    this.clientId = clientId;\n+    this.clientAccessLevel = clientAccessLevel;\n+    this.resourceServer = resourceServer;\n+    this.description = description;\n+    this.eventDetail = eventDetail;\n+    this.eventName = eventName;\n+    this.fallback = fallback;\n+  }\n+\n+  private static class Constants {\n+    private static final String APP_LEVEL = \"App-level\";\n+\n+    private static final String FMSGCAUTHSVR = \"FMSGCAUTHSVR\";\n+\n+    private static final String APP_USER = \"App User\";\n+\n+    private static final String PARTICIPANT_DATASTORE = \"Participant Datastore\";\n+\n+    private static final String FMSGCMOBAPP = \"FMSGCMOBAPP\";", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE1NDI3OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454154278", "bodyText": "Renamed as below:\n    private static final String SYSTEMID_VALUE = \"FMSGCAUTHSVR\";\n    private static final String CLIENTID_VALUE = \"FMSGCMOBAPP\";", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODQzNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r461588434", "bodyText": "We don't need these values at all; the final decision was to use a human readable enum field to identify each of these components.", "author": "zohrehj", "createdAt": "2020-07-28T13:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQzMTE3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462431170", "bodyText": "I've created new enums as per new audit log requirements. Kindly review.", "author": "dhanyak-btc", "createdAt": "2020-07-29T16:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4NDg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4Njc1Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r453686756", "bodyText": "there is not a lot of value in constants that equal their own value. A better approach would be to name the constant as to what it is, similar to how a variable is named, and its value should be the content for your environment, class, etc.\nIf values are possible values for the same thing that can be used by the application, you have an enum hiding in your class.", "author": "zohrehj", "createdAt": "2020-07-13T14:23:07Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.oauthscim.common;\n+\n+import com.google.cloud.healthcare.fdamystudies.common.AuditLogEvent;\n+import lombok.Getter;\n+\n+@Getter\n+public enum AuthScimEvent implements AuditLogEvent {\n+  PASSWORD_RESET_SUCCESS(\n+      false,\n+      Constants.APP_USER,\n+      Constants.FMSGCAUTHSVR,\n+      Constants.FMSGCMOBAPP,\n+      Constants.APP_LEVEL,\n+      Constants.PARTICIPANT_DATASTORE,\n+      \"Password reset success\",\n+      \"Password reset for User ID ${user_id} was successful.\",\n+      \"PASSWORD_RESET_SUCCESS\",\n+      true),\n+\n+  PASSWORD_RESET_FAILED(\n+      false,\n+      Constants.APP_USER,\n+      Constants.FMSGCAUTHSVR,\n+      Constants.FMSGCMOBAPP,\n+      Constants.APP_LEVEL,\n+      Constants.PARTICIPANT_DATASTORE,\n+      \"Password reset failure\",\n+      \"Password reset for User ID ${user_id}, failed.\",\n+      \"PASSWORD_RESET_FAILED\",\n+      true);\n+\n+  private final String eventName;\n+  private final boolean alert;\n+  private final String systemId;\n+  private final String accessLevel;\n+  private final String clientId;\n+  private final String clientAccessLevel;\n+  private final String resourceServer;\n+  private final String eventDetail;\n+  private final String description;\n+  private final boolean fallback;\n+\n+  private AuthScimEvent(\n+      boolean alert,\n+      String accessLevel,\n+      String systemId,\n+      String clientId,\n+      String clientAccessLevel,\n+      String resourceServer,\n+      String eventDetail,\n+      String description,\n+      String eventName,\n+      boolean fallback) {\n+    this.alert = alert;\n+    this.accessLevel = accessLevel;\n+    this.systemId = systemId;\n+    this.clientId = clientId;\n+    this.clientAccessLevel = clientAccessLevel;\n+    this.resourceServer = resourceServer;\n+    this.description = description;\n+    this.eventDetail = eventDetail;\n+    this.eventName = eventName;\n+    this.fallback = fallback;\n+  }\n+\n+  private static class Constants {\n+    private static final String APP_LEVEL = \"App-level\";\n+\n+    private static final String FMSGCAUTHSVR = \"FMSGCAUTHSVR\";\n+\n+    private static final String APP_USER = \"App User\";\n+\n+    private static final String PARTICIPANT_DATASTORE = \"Participant Datastore\";", "originalCommit": "830ce809510d79ad2ea9d109e462b6f4640aa35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE1OTY2NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r454159664", "bodyText": "Repeated string values extracted to constants to fix SonarLint issues, replaced Constants class with eum.", "author": "dhanyak-btc", "createdAt": "2020-07-14T07:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4Njc1Ng=="}], "type": "inlineReview"}, {"oid": "128fb22be14d467f1f6a620fe65471ce8d0d27bd", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/128fb22be14d467f1f6a620fe65471ce8d0d27bd", "message": "Fixed #590 review comments and Created Issue #628\n\nFixed #590 review comments, Created Issue #628 to fix few review comments in followup PR.", "committedDate": "2020-07-14T07:41:27Z", "type": "commit"}, {"oid": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "message": "Audit log implementation as per new requirements\n\nAdded following enums - UserAccessLevel, PlatformComponent, MobilePlatform\nEncryptionUtils - replaced sha3_512Hex with sha512Hex\nRefactored the code and tests.", "committedDate": "2020-07-29T16:19:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMDc0OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462520748", "bodyText": "We are removing event names. Event code should be sufficient.", "author": "zohrehj", "createdAt": "2020-07-29T19:01:39Z", "path": "audit-log-module/audit-log-service/src/test/java/com/google/cloud/healthcare/fdamystudies/auditlog/controller/AuditLogEventControllerTest.java", "diffHunk": "@@ -167,31 +171,25 @@ private HttpHeaders getCommonHeaders() {\n   private AuditLogEventRequest createAuditLogEventRequest() {\n     AuditLogEventRequest auditRequest = new AuditLogEventRequest();\n     auditRequest.setUserId(UUID.randomUUID().toString());\n-    auditRequest.setAccessLevel(null);\n-    auditRequest.setAlert(false);\n+    auditRequest.setUserAccessLevel(UserAccessLevel.APP_STUDY_ADMIN.getValue());\n     auditRequest.setAppId(\"MyStudies\");\n-    auditRequest.setApplicationComponentName(\"Auth Server\");\n-    auditRequest.setApplicationVersion(\"v1.0\");\n-    auditRequest.setClientId(\"FMSGCPARDTST\");\n-    auditRequest.setClientAccessLevel(\"System-level\");\n-    auditRequest.setClientAppVersion(\"v1.1\");\n+    auditRequest.setSource(PlatformComponent.PARTICIPANT_DATASTORE.getValue());\n+    auditRequest.setResourceServer(PlatformComponent.PARTICIPANT_DATASTORE.getValue());\n+    auditRequest.setAppVersion(\"v1.0\");\n+    auditRequest.setDestination(PlatformComponent.SCIM_AUTH_SERVER.getValue());\n     auditRequest.setCorrelationId(UUID.randomUUID().toString());\n     auditRequest.setDescription(\n         String.format(\n-            \"App user registration successful for username %s and user ID %s returned to Resource Server\",\n-            \"mock_ale@grr.la\", auditRequest.getUserId()));\n-    auditRequest.setDevicePlatform(\"Android\");\n-    auditRequest.setDeviceType(\"MOBILE\");\n-    auditRequest.setEventDetail(\"App user registration success\");\n-    auditRequest.setEventName(\"REGISTRATION_SUCCESS\");\n-    auditRequest.setOccured(Instant.now().toEpochMilli());\n-    auditRequest.setOrgId(\"FDA\");\n-    auditRequest.setRequestUri(null);\n-    auditRequest.setResourceServer(\"Participant Datastore\");\n-    auditRequest.setSystemId(\"FMSGCAUTHSVR\");\n-    auditRequest.setSystemIp(getRandomSystemIp());\n-    auditRequest.setClientIp(getRandomSystemIp());\n-\n+            \"Password reset for User ID ${user_id} was successful.\", auditRequest.getUserId()));\n+    auditRequest.setMobilePlatform(MobilePlatform.ANDROID.getValue());\n+    auditRequest.setEventName(\"Password reset success\");", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNTk1MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462825950", "bodyText": "Removed eventName field", "author": "dhanyak-btc", "createdAt": "2020-07-30T08:12:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMDc0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMzAyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462523024", "bodyText": "event_id is sufficient. This should be removed. Please refer to the Audit log columns doc for the final list of fields.", "author": "zohrehj", "createdAt": "2020-07-29T19:05:32Z", "path": "audit-log-module/audit-log-service/src/main/java/com/google/cloud/healthcare/fdamystudies/auditlog/model/AuditLogEventEntity.java", "diffHunk": "@@ -50,62 +47,57 @@\n       columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n   private Timestamp created;\n \n-  @Column(name = \"alert\", nullable = false, length = 1)\n-  private boolean alert;\n-\n-  @Column(name = \"app_id\", nullable = true, length = 100)\n+  @Column(name = \"app_id\", nullable = true, length = 64)\n   private String appId;\n \n-  @Column(name = \"org_id\", nullable = true, length = 100)\n-  private String orgId;\n-\n   @ToString.Exclude\n-  @Column(name = \"user_id\", nullable = true, length = 100)\n+  @Column(name = \"user_id\", nullable = true, length = 64)\n   private String userId;\n \n   @ToString.Exclude\n-  @Column(name = \"system_ip\", nullable = false, length = 39)\n-  private String systemIp;\n+  @Column(name = \"user_ip\", nullable = true, length = 39)\n+  private String userIp;\n \n   @ToString.Exclude\n   @Column(name = \"description\", nullable = false, length = 255)\n   private String description;\n \n-  @ToString.Exclude\n-  @Column(name = \"event_detail\", nullable = false, length = 255)\n-  private String eventDetail;\n+  @Column(name = \"event_name\", nullable = false, length = 255)\n+  private String eventName;", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNTgyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462825820", "bodyText": "Removed eventName field", "author": "dhanyak-btc", "createdAt": "2020-07-30T08:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMzAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzMTIzOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462531238", "bodyText": "let's not implement this for now.\nVersioning is something that we have not discussed yet, we briefly talked about it a few months ago and decided to consider the whole platform as a connected entity and return the same fixed version for all until we have had the chance to revisit the API between the components.\nSo for here, let's return a single version for now. i.e. \"application.version\" works for now.", "author": "zohrehj", "createdAt": "2020-07-29T19:19:58Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/AuditEventServiceImpl.java", "diffHunk": "@@ -111,4 +111,31 @@ private AuditLogEventResponse callEventsApi(JsonNode requestBody) {\n         String.format(\n             \"%s event not received/processed by the central audit log system.\", eventName));\n   }\n+\n+  private String getApplicationVersion(PlatformComponent source) {\n+    switch (source) {\n+      case MOBILE_APP:\n+        return commonPropConfig.getMobileApplicationVersion();\n+      case RESPONSE_DATASTORE:\n+        return commonPropConfig.getResponseDatastoreApplicationVersion();\n+      case PARTICIPANT_DATASTORE:\n+        return commonPropConfig.getParticipantDatastoreApplicationVersion();\n+      case STUDY_BUILDER:\n+        return commonPropConfig.getStudyBuilderApplicationVersion();\n+      case STUDY_BUILDER_APP:\n+        return commonPropConfig.getStudyBuilderAppApplicationVersion();\n+      case CLOUD_STORAGE:\n+        return commonPropConfig.getCloudStorageApplicationVersion();\n+      case SCIM_AUTH_SERVER:\n+        return commonPropConfig.getScimAuthServerApplicationVersion();\n+      case AUTH_SERVER:\n+        return commonPropConfig.getAuthServerApplicationVersion();\n+      case PARTICIPANT_MANAGER:\n+        return commonPropConfig.getParticipantManagerApplicationVersion();\n+      case PARTICIPANT_MANAGER_APP:\n+        return commonPropConfig.getParticipantManagerAppApplicationVersion();\n+      default:\n+        return \"Unknown\";\n+    }\n+  }", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNDU4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462824580", "bodyText": "Replaced with application.version", "author": "dhanyak-btc", "createdAt": "2020-07-30T08:09:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzMTIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNTQ5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462535491", "bodyText": "description is also redundant for this event, since the action is taken by the same user and so the user_id field would point to the same user.\nIf description text is redundant, then it should not be skipped. Introducing free form text in the audit log, increases the chance of accidentally leaking PII and PHI, so I would like to limit that to events that absolutely need this information.", "author": "zohrehj", "createdAt": "2020-07-29T19:27:53Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -8,80 +8,41 @@\n \n package com.google.cloud.healthcare.fdamystudies.oauthscim.common;\n \n+import static com.google.cloud.healthcare.fdamystudies.common.PlatformComponent.PARTICIPANT_DATASTORE;\n+import static com.google.cloud.healthcare.fdamystudies.common.PlatformComponent.SCIM_AUTH_SERVER;\n+\n import com.google.cloud.healthcare.fdamystudies.common.AuditLogEvent;\n+import com.google.cloud.healthcare.fdamystudies.common.PlatformComponent;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccessLevel;\n+import lombok.AllArgsConstructor;\n import lombok.Getter;\n \n @Getter\n+@AllArgsConstructor\n public enum AuthScimEvent implements AuditLogEvent {\n   PASSWORD_RESET_SUCCESS(\n-      false,\n-      Constant.APP_USER,\n-      Constant.SYSTEM_ID,\n-      Constant.CLIENT_ID,\n-      Constant.APP_LEVEL,\n-      Constant.PARTICIPANT_DATASTORE,\n+      PARTICIPANT_DATASTORE,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n       \"Password reset success\",\n       \"Password reset for User ID ${user_id} was successful.\",", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNTgxMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462535812", "bodyText": "please remove event name from the code entirely. EventCode field should be descriptive enough.", "author": "zohrehj", "createdAt": "2020-07-29T19:28:28Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -8,80 +8,41 @@\n \n package com.google.cloud.healthcare.fdamystudies.oauthscim.common;\n \n+import static com.google.cloud.healthcare.fdamystudies.common.PlatformComponent.PARTICIPANT_DATASTORE;\n+import static com.google.cloud.healthcare.fdamystudies.common.PlatformComponent.SCIM_AUTH_SERVER;\n+\n import com.google.cloud.healthcare.fdamystudies.common.AuditLogEvent;\n+import com.google.cloud.healthcare.fdamystudies.common.PlatformComponent;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccessLevel;\n+import lombok.AllArgsConstructor;\n import lombok.Getter;\n \n @Getter\n+@AllArgsConstructor\n public enum AuthScimEvent implements AuditLogEvent {\n   PASSWORD_RESET_SUCCESS(\n-      false,\n-      Constant.APP_USER,\n-      Constant.SYSTEM_ID,\n-      Constant.CLIENT_ID,\n-      Constant.APP_LEVEL,\n-      Constant.PARTICIPANT_DATASTORE,\n+      PARTICIPANT_DATASTORE,\n+      SCIM_AUTH_SERVER,\n+      PARTICIPANT_DATASTORE,\n       \"Password reset success\",", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNjY2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462826669", "bodyText": "Removed eventName  from this enum", "author": "dhanyak-btc", "createdAt": "2020-07-30T08:13:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNTgxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNzUyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462537520", "bodyText": "I don't see the value of creating these event enums, Can you explain why you are creating them in advance and not calling a generic submit event method in the code itself?\nalso what happens if we integrated WCP or other mobile apps with the auth server. Do you expect to have a separate PASSWORD_RESET_SUCCESS event for each source component?", "author": "zohrehj", "createdAt": "2020-07-29T19:31:23Z", "path": "oauth-scim-module/oauth-scim-service/src/main/java/com/google/cloud/healthcare/fdamystudies/oauthscim/common/AuthScimEvent.java", "diffHunk": "@@ -8,80 +8,41 @@\n \n package com.google.cloud.healthcare.fdamystudies.oauthscim.common;\n \n+import static com.google.cloud.healthcare.fdamystudies.common.PlatformComponent.PARTICIPANT_DATASTORE;\n+import static com.google.cloud.healthcare.fdamystudies.common.PlatformComponent.SCIM_AUTH_SERVER;\n+\n import com.google.cloud.healthcare.fdamystudies.common.AuditLogEvent;\n+import com.google.cloud.healthcare.fdamystudies.common.PlatformComponent;\n+import com.google.cloud.healthcare.fdamystudies.common.UserAccessLevel;\n+import lombok.AllArgsConstructor;\n import lombok.Getter;\n \n @Getter\n+@AllArgsConstructor\n public enum AuthScimEvent implements AuditLogEvent {\n   PASSWORD_RESET_SUCCESS(\n-      false,\n-      Constant.APP_USER,\n-      Constant.SYSTEM_ID,\n-      Constant.CLIENT_ID,\n-      Constant.APP_LEVEL,\n-      Constant.PARTICIPANT_DATASTORE,\n+      PARTICIPANT_DATASTORE,", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwODYyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462908623", "bodyText": "We create AuditLogEventRequest  object (auditRequest in short) in Controller layer using AuditEventMapper . Header/Cookies values are read and set into auditRequest object. Please see AuditEventMapper class for more details.\nEach service will have a XXXAuditLogHelper class (AuthScimAuditLogHelper in this service) to set the remaining fields on auditRequest object and then call the postAuditLogEvent(auditRequest).\nHaving a AuthScimEvent enum helps to keep the audit details at once place. The service layer code looks clean like below.\nauditHelper.logEvent(PASSWORD_RESET_SUCCESS, auditRequest);\nauditHelper.logEvent(PASSWORD_RESET_FAILED, auditRequest);", "author": "dhanyak-btc", "createdAt": "2020-07-30T10:40:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNzUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MTAyOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463151028", "bodyText": "ok, that sounds good.", "author": "zohrehj", "createdAt": "2020-07-30T17:18:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNzUyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODUzOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462538538", "bodyText": "please change the text for \"unknown\" to \"Any other value. Should not happen\"", "author": "zohrehj", "createdAt": "2020-07-29T19:33:19Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MobilePlatform.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum MobilePlatform {\n+  ANDROID(\"ANDROID\", \"Represents an android platform\"),\n+  IOS(\"IOS\", \"Represents an apple platform\"),\n+  UNKNOWN(\"UNKNOWN\", \"Represents unknown platform\");", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMDIwOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462820209", "bodyText": "Fixed the review comment", "author": "dhanyak-btc", "createdAt": "2020-07-30T08:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODUzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODY3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462538676", "bodyText": "nit: capitalize Android and Apple", "author": "zohrehj", "createdAt": "2020-07-29T19:33:33Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/MobilePlatform.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum MobilePlatform {\n+  ANDROID(\"ANDROID\", \"Represents an android platform\"),\n+  IOS(\"IOS\", \"Represents an apple platform\"),", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMDA4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462820084", "bodyText": "Fixed the review comment", "author": "dhanyak-btc", "createdAt": "2020-07-30T08:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MTU4NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462541585", "bodyText": "please use the naming as specified in the FDA MyStudies nomeclature document that I just shared with you.\nFormat: let's keep a consistent format. Change this to match the device platform, in uppercase.\nAlso please change App to Application all around.", "author": "zohrehj", "createdAt": "2020-07-29T19:38:57Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/PlatformComponent.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum PlatformComponent {\n+  MOBILE_APP(\"Mobile App\"),\n+  RESPONSE_DATASTORE(\"Response Datastore\"),\n+  PARTICIPANT_DATASTORE(\"Participant Datastore\"),\n+  STUDY_BUILDER(\"Study Builder\"),\n+  STUDY_BUILDER_APP(\"Study Builder App\"),\n+  CLOUD_STORAGE(\"Cloud Storage\"),\n+  SCIM_AUTH_SERVER(\"SCIM Auth Server\"),\n+  AUTH_SERVER(\"Auth Server\"),\n+  PARTICIPANT_MANAGER(\"Participant Manager\"),\n+  PARTICIPANT_MANAGER_APP(\"Participant Manager App\");", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgxOTY5OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462819698", "bodyText": "Fixed the review comments as per the FDA MyStudies nomeclature", "author": "dhanyak-btc", "createdAt": "2020-07-30T08:00:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MTU4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MjQyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462542420", "bodyText": "What is SB admin?\n@jkrogers18 These values would be stored in our audit logs, do you have any input on what these access levels should be?", "author": "zohrehj", "createdAt": "2020-07-29T19:40:16Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/UserAccessLevel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum UserAccessLevel {\n+  SUPER_ADMIN(\"Superadmin\"),\n+  SB_ADMIN(\"SB Admin\"),\n+  APP_STUDY_ADMIN(\"App/Study Admin\"),\n+  SITE_ADMIN(\"Site Admin\");", "originalCommit": "b61edc8eb8de718aa503080c82acf6ef90bf1cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMTM5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r462911394", "bodyText": "I got these values from Audit Logs: Columns and Values spreadsheet. Replaced 'SB Admin' with 'Study Builder Admin'", "author": "dhanyak-btc", "createdAt": "2020-07-30T10:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MjQyMA=="}], "type": "inlineReview"}, {"oid": "ba1920c4457b8d0562fdb166210ca113c58ba914", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ba1920c4457b8d0562fdb166210ca113c58ba914", "message": "Fixed PR #590 review comments\n\nFixed PR #590 review comments", "committedDate": "2020-07-30T09:05:07Z", "type": "commit"}, {"oid": "9e723dd6a45131061fff7c2309485f950890a0d8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9e723dd6a45131061fff7c2309485f950890a0d8", "message": "Fixed review comments\n\nFixed review comments", "committedDate": "2020-07-30T10:24:39Z", "type": "commit"}, {"oid": "8d227b85115edbbace70f2f248d244612436a035", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8d227b85115edbbace70f2f248d244612436a035", "message": "added a line spacing for readability\n\nadded a line spacing for readability", "committedDate": "2020-07-30T10:25:39Z", "type": "commit"}, {"oid": "6c8bf15362b0ba36bc41a4723ff1203b37853515", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6c8bf15362b0ba36bc41a4723ff1203b37853515", "message": "renamed aleHelper to auditHelper and used static import for AuthScimEvent\n\nrenamed aleHelper to auditHelper and used static import for AuthScimEvent", "committedDate": "2020-07-30T10:44:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0Nzg4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463147889", "bodyText": "not compatible with the format.", "author": "zohrehj", "createdAt": "2020-07-30T17:12:49Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/PlatformComponent.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum PlatformComponent {\n+  MOBILE_APPS(\n+      \"MOBILE APPS\", \"The iOS and Android apps that participants use to interact with MyStudies\"),\n+\n+  RESPONSE_DATASTORE(\n+      \"RESPONSE DATASTORE\",\n+      \"The back-end components that manage participant response data (does not include PII) \"),\n+\n+  PARTICIPANT_DATASTORE(\n+      \"PARTICIPANT DATASTORE\",\n+      \"The back-end components that manage app user / study participant data (includes PII)\"),\n+\n+  STUDY_BUILDER(\"STUDY BUILDER\", \"The UI that researchers use to design and deploy studies\"),\n+\n+  STUDY_DATASTORE(\n+      \"STUDY DATASTORE\",\n+      \"This is the back-end component that manages the study builder data and holds the study configurations\"),\n+\n+  SCIM_AUTH_SERVER(\n+      \"SCIM AUTH SERVER\",\n+      \"This component implements login/consent flow and integrates with ORY Hydra for access and refresh tokens\"),\n+\n+  AUTH_SERVER(\n+      \"Auth Server\",\n+      \"This is back-end component that manages user accounts and issues access and refresh tokens\"),\n+\n+  PARTICIPANT_MANAGER(\n+      \"PARTICIPANT MANAGER\",\n+      \"The UI that administrators use to invite participants to studies and track enrollment progress\"),\n+\n+  CLOUD_STORAGE(\n+      \"Cloud Storage\", \"for storing and accessing data on Google Cloud Platform infrastructure\");", "originalCommit": "6c8bf15362b0ba36bc41a4723ff1203b37853515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwMzEzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463403136", "bodyText": "Cloud Storage was not in FDA MyStudies nomeclature. I removed it and then added it back from commit history. I fixed the review comment.", "author": "dhanyak-btc", "createdAt": "2020-07-31T04:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0Nzg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0ODM0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463148343", "bodyText": "these should also follow the capitalized format for enums", "author": "zohrehj", "createdAt": "2020-07-30T17:13:40Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/common/UserAccessLevel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.common;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+@Getter\n+@AllArgsConstructor\n+public enum UserAccessLevel {\n+  SUPER_ADMIN(\"Superadmin\"),", "originalCommit": "6c8bf15362b0ba36bc41a4723ff1203b37853515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwNDE0NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463404144", "bodyText": "Added the description and capitalized the value.", "author": "dhanyak-btc", "createdAt": "2020-07-31T04:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0ODM0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MDU3Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463150572", "bodyText": "should /v1 be removed from all these endpoints too?", "author": "zohrehj", "createdAt": "2020-07-30T17:17:35Z", "path": "common-modules/common-tests/src/main/resources/application-mockit-common.properties", "diffHunk": "@@ -25,8 +26,14 @@ logging.level.org.hibernate.type=ERROR\n logging.level.org.hibernate.stat=ERROR\n \n # oauth configuration\n-security.oauth2.health_endpoint=http://localhost:8080/oauth-scim-service/v1/health\n+security.oauth2.client.client-id= oauth-scim-client-id\n+security.oauth2.client.client-secret= oauth-scim-client-secret\n+security.oauth2.client.redirect-uri=http://localhost:8002/oauth-scim-service/login\n security.oauth2.introspection_endpoint=http://localhost:8080/oauth-scim-service/v1/oauth2/introspect\n+security.oauth2.token_endpoint=http://localhost:8080/oauth-scim-service/v1/oauth2/token", "originalCommit": "6c8bf15362b0ba36bc41a4723ff1203b37853515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwNDIyMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463404221", "bodyText": "This has been addressed in other PR", "author": "dhanyak-btc", "createdAt": "2020-07-31T04:54:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MDU3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MjQzMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463152433", "bodyText": "/v1 ?", "author": "zohrehj", "createdAt": "2020-07-30T17:20:44Z", "path": "oauth-scim-module/oauth-scim-service/src/main/resources/application-local.properties", "diffHunk": "@@ -51,3 +54,6 @@ spring.mail.properties.mail.smtp.auth=true\n spring.mail.properties.mail.smtp.socketFactory.fallback=false\n spring.mail.properties.mail.smtp.starttls.enable=true\n spring.mail.properties.mail.smtp.ssl.enable = true\n+\n+# audit log endpoints\n+auditlog.events_endpoint=http://localhost:8001/audit-log-service/v1/events", "originalCommit": "6c8bf15362b0ba36bc41a4723ff1203b37853515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwNDI4MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/590#discussion_r463404281", "bodyText": "This has been addressed in other PR", "author": "dhanyak-btc", "createdAt": "2020-07-31T04:54:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MjQzMw=="}], "type": "inlineReview"}, {"oid": "b60cca07039e22800e36522b6ba26865e1bf3180", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b60cca07039e22800e36522b6ba26865e1bf3180", "message": "Fixed minor review comments\n\nFixed minor review comments", "committedDate": "2020-07-31T04:55:38Z", "type": "commit"}, {"oid": "e96a2ab76f393a88f8f5508fd3e58e3e03c932b8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e96a2ab76f393a88f8f5508fd3e58e3e03c932b8", "message": "Merge branch 'develop' into password_reset_auditlog_events", "committedDate": "2020-07-31T06:37:43Z", "type": "commit"}, {"oid": "29135b70e4ca1a7bfc000dab35e55526dd5f180f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/29135b70e4ca1a7bfc000dab35e55526dd5f180f", "message": "Resolve Conflicts: Fixed tests and compilation issues\n\nResolve Conflicts: Fixed tests and compilation issues", "committedDate": "2020-07-31T06:38:22Z", "type": "commit"}]}