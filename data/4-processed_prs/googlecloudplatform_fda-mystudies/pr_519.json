{"pr_number": 519, "pr_title": "Urwebapp locations implementation", "pr_createdAt": "2020-06-15T18:13:19Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519", "timeline": [{"oid": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/f6d8ac46d1fadba257a5c152255fb11392ac860b", "message": "Locations and header Implimentation having One linter rule Error in location-list.component.spec.ts line 84", "committedDate": "2020-06-15T18:10:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NTcyOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440445728", "bodyText": "list or getCollection", "author": "nikklassen", "createdAt": "2020-06-15T21:03:32Z", "path": "UR-web-app/src/app/service/entity.service.ts", "diffHunk": "@@ -5,14 +5,17 @@ import {Location} from '@angular/common';\n \n @Injectable()\n export class EntityService<T> {\n-  baseUrl = 'http://<IP>:<port>/urwebapp';\n-\n+    baseUrl = 'http://<IP>:<port>/urwebapp';\n   constructor(private readonly http: HttpClient) {}\n \n   post(bodydata: string, urlpath: string): Observable<T> {\n     const serviceUrl = Location.joinWithSlash(this.baseUrl, urlpath);\n     return this.http.post<T>(serviceUrl, bodydata);\n   }\n+  getArray(urlpath: string): Observable<T[]> {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4NzkxMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442987913", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T18:27:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0NTcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0Nzg4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440447883", "bodyText": "It turns out using 'root' is pretty much always correct. Ignore my previous advice.", "author": "nikklassen", "createdAt": "2020-06-15T21:07:55Z", "path": "UR-web-app/src/app/site-coordinator/account/shared/account.service.ts", "diffHunk": "@@ -1,7 +1,6 @@\n import {Injectable} from '@angular/core';\n-import {AccountModule} from '../../account/account.module';\n \n @Injectable({\n-  providedIn: AccountModule,\n+  providedIn: 'root',", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4Nzk5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442987991", "bodyText": "okay thanks for the update", "author": "firdosebtc1", "createdAt": "2020-06-19T18:28:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0Nzg4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0ODUzOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440448538", "bodyText": "I don't think this is necessary with providedIn: 'root'", "author": "nikklassen", "createdAt": "2020-06-15T21:09:14Z", "path": "UR-web-app/src/app/site-coordinator/account/account.module.ts", "diffHunk": "@@ -2,9 +2,10 @@ import {NgModule} from '@angular/core';\n import {CommonModule} from '@angular/common';\n import {AccountRoutingModule} from './account-routing.module';\n import {AccountProfileComponent} from './account-profile/account-profile.component';\n+import {AccountService} from './shared/account.service';\n @NgModule({\n   declarations: [AccountProfileComponent],\n   imports: [CommonModule, AccountRoutingModule],\n-  providers: [],\n+  providers: [AccountService],", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODAzMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988031", "bodyText": "Thanks ,updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T18:28:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0ODUzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0OTcyMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440449722", "bodyText": "A few comments\n\nDon't use the Bean suffix here. It's Java only and doesn't make sense to non-Spring developers\nI would call this ApiError or ApiResponse so it's clear it's not an error we generate in our application\nThis should be an interface. Classes are for objects we create with new. If it's ever create without new, like when it comes from an API and is JSON.parsed, it cannot be a class, because it won't have any class functions attached to it.", "author": "nikklassen", "createdAt": "2020-06-15T21:11:48Z", "path": "UR-web-app/src/app/entity/error.model.ts", "diffHunk": "@@ -0,0 +1,5 @@\n+export class ErrorBean {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODA2OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988068", "bodyText": "Thanks ,updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T18:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0OTcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDIyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440450220", "bodyText": "Remove empty attribute", "author": "nikklassen", "createdAt": "2020-06-15T21:12:47Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -1 +1,77 @@\n-<p>locations-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Locations</div>\n+      <div class=\"\">", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODA5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988094", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T18:28:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDgxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440450817", "bodyText": "Don't pass constants to filters.", "author": "nikklassen", "createdAt": "2020-06-15T21:14:01Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -1 +1,77 @@\n-<p>locations-list works!</p>\n+<div class=\"subheader p-none\">\n+  <div class=\"max__w__1280 m-none\">\n+    <div class=\"flex__justify__space-between\">\n+      <div class=\"subheader__title\">Locations</div>\n+      <div class=\"\">\n+        <button\n+          (click)=\"addLocation()\"\n+          class=\"btn btn-primary width__auto blue__btn font14\"\n+        >\n+          Add Location\n+        </button>\n+      </div>\n+    </div>\n+  </div>\n+</div>\n+<div class=\"max__w__1280 m-none\">\n+  <div *ngIf=\"locations.length != 0\" class=\"cards1 m-none\">\n+    <table\n+      class=\"table table-striped\"\n+      [mfData]=\"locations\"\n+      #mf=\"mfDataTable\"\n+      [mfRowsOnPage]=\"10\"\n+    >\n+      <thead>\n+        <tr>\n+          <span\n+            class=\"text__387fea__12 mobile__view mr-sm\"\n+            style=\"background: transparent;\"\n+            >Sort By:\n+          </span>\n+          <th>\n+            <mySorter by=\"customId\">Location ID</mySorter>\n+          </th>\n+          <th>\n+            <mySorter by=\"name\">Location Name</mySorter>\n+          </th>\n+          <th>\n+            <mySorter by=\"studiesCount\">Associated Studies</mySorter>\n+          </th>\n+          <th>\n+            Status\n+          </th>\n+        </tr>\n+      </thead>\n+      <tbody>\n+        <tr\n+          *ngFor=\"let location of mf.data\"\n+          (click)=\"locationDetails(location.id)\"\n+        >\n+          <td>\n+            <span class=\"tbl__td__label\">Location ID:</span\n+            ><span class=\"no_st_en\">{{ location.customId }}</span>\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Location Name:</span\n+            >{{ location.name }}\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Associated Studies:</span\n+            >{{ location.studiesCount }}\n+          </td>\n+          <td>\n+            <span class=\"tbl__td__label\">Status:</span\n+            >{{ location.status == 1 ? \"Active\" : (\"Deactivated\" | uppercase) }}", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4ODE1Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442988153", "bodyText": "updated", "author": "firdosebtc1", "createdAt": "2020-06-19T18:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MDgxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTM1Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440451353", "bodyText": "As we discussed, fixture.componentInstance", "author": "nikklassen", "createdAt": "2020-06-15T21:15:14Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3ODU4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442978584", "bodyText": "Updated in the latest Commit", "author": "rohithd-btc", "createdAt": "2020-06-19T18:04:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTM1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTczOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440451738", "bodyText": "Fixture is fine to create in the beforeEach", "author": "nikklassen", "createdAt": "2020-06-15T21:16:01Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3ODc3Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442978773", "bodyText": "updated in the latest commit", "author": "rohithd-btc", "createdAt": "2020-06-19T18:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjE0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440452149", "bodyText": "Rename to addLocationSpy", "author": "nikklassen", "createdAt": "2020-06-15T21:16:51Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3ODk1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442978952", "bodyText": "updated as suggested", "author": "rohithd-btc", "createdAt": "2020-06-19T18:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjE0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjU2OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440452568", "bodyText": "This is the same as the previous test case.", "author": "nikklassen", "createdAt": "2020-06-15T21:17:50Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');\n+    fixture.debugElement\n+      .query(By.css('button'))\n+      .triggerEventHandler('click', null);\n+    expect(onClickMock).toHaveBeenCalled();\n+  });\n+\n+  it('should auto click on New AddLocation Button', async(() => {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3OTExMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442979113", "bodyText": "Removed the test case", "author": "rohithd-btc", "createdAt": "2020-06-19T18:06:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjU2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjkxMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440452911", "bodyText": "There isn't any data here, the test should be verifying that data is actually returned.", "author": "nikklassen", "createdAt": "2020-06-15T21:18:27Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -1,24 +1,99 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {async, TestBed, tick, fakeAsync} from '@angular/core/testing';\n \n import {LocationListComponent} from './location-list.component';\n-\n+import {By} from '@angular/platform-browser';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n describe('LocationsListComponent', () => {\n-  let component: LocationListComponent;\n-  let fixture: ComponentFixture<LocationListComponent>;\n-\n   beforeEach(async(async () => {\n     await TestBed.configureTestingModule({\n       declarations: [LocationListComponent],\n+      imports: [\n+        RouterTestingModule,\n+        LocationModule,\n+        SiteCoordinatorModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [EntityService],\n     }).compileComponents();\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationListComponent);\n-    component = fixture.componentInstance;\n-    fixture.detectChanges();\n+  it('should create', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const apps = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(apps).toBeTruthy();\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should NOT have locations before ngOnInit', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    expect(component.locations.length).toBe(\n+      0,\n+      'should not have locations before ngOnInit',\n+    );\n+  });\n+  it('should DISPLAY Locations', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.subheader__title')?.classList.length).toBe(\n+      1,\n+      'should display all locations list',\n+    );\n+  });\n+\n+  it('should not have search box ', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const compiled = fixture.nativeElement as HTMLElement;\n+    expect(compiled.querySelector('.search-icon')?.classList.length).toBe(\n+      undefined,\n+      'should not have search box',\n+    );\n   });\n+  it('should call onClick method', () => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.debugElement\n+      .componentInstance as LocationListComponent;\n+    fixture.detectChanges();\n+    const onClickMock = spyOn(component, 'addLocation');\n+    fixture.debugElement\n+      .query(By.css('button'))\n+      .triggerEventHandler('click', null);\n+    expect(onClickMock).toHaveBeenCalled();\n+  });\n+\n+  it('should auto click on New AddLocation Button', async(() => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.componentInstance;\n+    spyOn(component, 'addLocation');\n+    fixture.detectChanges();\n+    const button = fixture.nativeElement as HTMLElement;\n+    button.querySelector('button')?.click();\n+\n+    void fixture.whenStable().then(() => {\n+      expect(component.addLocation).toHaveBeenCalled();\n+    });\n+  }));\n+  it('should get the user List via refresh function', fakeAsync(() => {\n+    const fixture = TestBed.createComponent(LocationListComponent);\n+    const component = fixture.componentInstance;\n+    spyOn(component, 'getLocation');\n+    component.getLocation();\n+    tick();\n+    fixture.detectChanges();\n+    expect(component.locations.length).toBe(", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0OTY5OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443049698", "bodyText": "This still needs to be resolved.", "author": "nikklassen", "createdAt": "2020-06-19T21:25:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MjkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzM3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440453376", "bodyText": "Prefer async pipe to subscribing. An important part of Angular is learning how to use RxJS effectively, and part of that is keeping your data as an Observable for as long as possible. I would write the logic of this component as\nquery$ = new BehaviorSubject('');\nlocation$: Observable<Location[]> = Observable.of([]);\n\ngetLocation() {\nthis.location$ = combineLatest(\n    this.locationService.getLocations(),\n    query$,\n).pipe(catchError(...), filter(...))\n}\n\nsearch(query: string) {\nthis.query$.next(query.trim())\n}\ncombineLatest docs\nBehavior subject\nIt's much cleaner to do it this way, and you don't end up with a bunch of extra state.", "author": "nikklassen", "createdAt": "2020-06-15T21:19:27Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjU0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976540", "bodyText": "Thanks for suggesting this,updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:59:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzM3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzY3MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440453671", "bodyText": "This doesn't need to be a member variable.", "author": "nikklassen", "createdAt": "2020-06-15T21:20:06Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjUxOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976518", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MzY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDIxMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440454211", "bodyText": "query &&  in unnecessary because ''.trim() === ''", "author": "nikklassen", "createdAt": "2020-06-15T21:21:14Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;\n+        this.toastr.error(this.errorMessage);\n+      },\n+    );\n+  }\n+  locationDetails(locationId: number): void {\n+    void this.router.navigate(['/coordinator/locations/', locationId]);\n+  }\n+  addLocation(): void {\n+    void this.router.navigate(['/coordinator/locations/new']);\n+  }\n+  search(filterQuery: string): void {\n+    const query = filterQuery;\n+    if (query && query.trim() !== '') {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjQ5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976499", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:59:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDUyNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440454525", "bodyText": "Why copy this value? You only need one variable.", "author": "nikklassen", "createdAt": "2020-06-15T21:21:55Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.ts", "diffHunk": "@@ -1,8 +1,63 @@\n-import {Component} from '@angular/core';\n-\n+import {Component, OnInit} from '@angular/core';\n+import {LocationService} from '../shared/location.service';\n+import {Location} from '../shared/location.model';\n+import {Router} from '@angular/router';\n+import {ToastrService} from 'ngx-toastr';\n+import {ErrorBean} from 'src/app/entity/error.model';\n @Component({\n   selector: 'location-list',\n   templateUrl: './location-list.component.html',\n   styleUrls: ['./location-list.component.scss'],\n })\n-export class LocationListComponent {}\n+export class LocationListComponent implements OnInit {\n+  locations: Location[] = [];\n+  locationBackup: Location[] = [];\n+  errorMessage = '';\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly router: Router,\n+    private readonly toastr: ToastrService,\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.getLocation();\n+  }\n+  getLocation(): void {\n+    this.locations = [];\n+    this.locationBackup = [];\n+    this.locationService.getLocations().subscribe(\n+      (data) => {\n+        this.locations = data;\n+        this.locationBackup = JSON.parse(\n+          JSON.stringify(this.locations),\n+        ) as Location[];\n+      },\n+      (error: ErrorBean) => {\n+        this.locations = [];\n+        this.locationBackup = [];\n+        this.errorMessage = error.userMessage;\n+        this.toastr.error(this.errorMessage);\n+      },\n+    );\n+  }\n+  locationDetails(locationId: number): void {\n+    void this.router.navigate(['/coordinator/locations/', locationId]);\n+  }\n+  addLocation(): void {\n+    void this.router.navigate(['/coordinator/locations/new']);\n+  }\n+  search(filterQuery: string): void {\n+    const query = filterQuery;", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjQ1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976452", "bodyText": "removed", "author": "firdosebtc1", "createdAt": "2020-06-19T17:59:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1NDUyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTM3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440459370", "bodyText": "Can you add a test that executes the \"getLocations\" functionality?", "author": "nikklassen", "createdAt": "2020-06-15T21:32:47Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,16 +1,30 @@\n import {TestBed} from '@angular/core/testing';\n \n import {LocationService} from './location.service';\n+import {SiteCoordinatorModule} from '../../site-coordinator.module';\n+import {NO_ERRORS_SCHEMA} from '@angular/core';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {EntityService} from '../../../service/entity.service';\n+import {HttpClientModule} from '@angular/common/http';\n \n describe('LocationService', () => {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NjQzMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442976433", "bodyText": "updated in the latest commit but we have disabled few of the linter rules in location.service.spec.ts as few issues we were not able to fix and fixing few of the issues were making test cases to fail,Please suggest", "author": "firdosebtc1", "createdAt": "2020-06-19T17:59:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTM3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MTExNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443041114", "bodyText": "Added comments below.", "author": "nikklassen", "createdAt": "2020-06-19T20:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTM3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTQ4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440459489", "bodyText": "Should also be an interface", "author": "nikklassen", "createdAt": "2020-06-15T21:33:03Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.model.ts", "diffHunk": "@@ -0,0 +1,15 @@\n+export class Location {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NDI3Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442974273", "bodyText": "we cannot change Location to interface as we will be using this in add Location form as an entity and we will be creating instance with  new operator", "author": "firdosebtc1", "createdAt": "2020-06-19T17:54:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0OTU2MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443049560", "bodyText": "Then you need to do something like this in your location service\nthis.entityService.getCollection().pipe(\n    map(data => data.map(d => new Location(d)))\n)\nand define a constructor here. This will convert the \"dumb\" JSON object into a \"smart\" Location object.\nAlso, I think we should change this from Location to something a bit more verbose. I know it's annoying, but there are too many other Locations in the global scope, one from the browser and one from Angular. \"StudyLocation\" maybe?", "author": "nikklassen", "createdAt": "2020-06-19T21:24:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1OTQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDY0NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440460645", "bodyText": "This formatting is very strange. Can you change your settings to keep > on the same line as the tag?", "author": "nikklassen", "createdAt": "2020-06-15T21:35:42Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3NDI0MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442974241", "bodyText": "we didn't got settings for this,Can you please suggest us", "author": "firdosebtc1", "createdAt": "2020-06-19T17:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDgwMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440460802", "bodyText": "This should be a separate component.", "author": "nikklassen", "createdAt": "2020-06-15T21:36:00Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjgyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972820", "bodyText": "In theme-layout.scss we have written media query so that any Div with  id=\"desktop-menu\" or id=\"mobile-menu\" will be visible to user,\nIs this is okay or you want me to implement mobile header component and add selector tag in sitecoordinator.component.html", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDgwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NTMyOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443045328", "bodyText": "I'd rather have a separate Component for the mobile menu if you can't share the HTML between the two headers.", "author": "nikklassen", "createdAt": "2020-06-19T21:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDgwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDkzMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440460931", "bodyText": "Move SVG to a standalone file.", "author": "nikklassen", "createdAt": "2020-06-15T21:36:21Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjcyOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972728", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDkzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTAyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440461024", "bodyText": "Use absolute URLs.", "author": "nikklassen", "createdAt": "2020-06-15T21:36:34Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjcxNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972714", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTM5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440461391", "bodyText": "Why not use \"open\" and \"closed\" as class names?", "author": "nikklassen", "createdAt": "2020-06-15T21:37:30Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n+          <span class=\"header__logo__text\">FDA MyStudies </span>\n+        </a>\n+      </div>\n+      <div\n+        *ngIf=\"showSearchBar\"\n+        class=\"navbar-nav inner-addon right-addon search-icon\"\n+      >\n+        <div class=\"position__relative\">\n+          <input\n+            type=\"text\"\n+            [attr.placeholder]=\"searchPlaceholder\"\n+            autocomplete=\"off\"\n+            [(ngModel)]=\"filterQuery\"\n+            class=\"form-control search-box search__\"\n+          />\n+          <i\n+            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n+            aria-hidden=\"true\"\n+          ></i>\n+        </div>\n+        <div>\n+          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n+        </div>\n+      </div>\n+    </div>\n+    <div\n+      id=\"mySidenav\"\n+      class=\"sidenav\"\n+      [ngClass]=\"opencloseNavval ? 'width__268 ' : 'width__0 '\"", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjcwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972701", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTM5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTc0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440461747", "bodyText": "Use <button> for buttons. This is bad for accessibility.", "author": "nikklassen", "createdAt": "2020-06-15T21:38:20Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -1,2 +1,193 @@\n-<p>sitecoordinator works!</p>\n+<header (keydown)=\"handleKeyDown($event)\">\n+  <div id=\"desktop-menu\">\n+    <div class=\"bs-example bs__example\">\n+      <nav class=\"navbar navbar-expand-md p-none\">\n+        <a routerLink=\"/user/dashboard\" class=\"navbar-brand\"\n+          ><img\n+            class=\"mr-sm\"\n+            src=\"../../../assets/images/landing-logo.gif\"\n+          /><span class=\"header__logo__text\">FDA MyStudies </span></a\n+        >\n+        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n+          <div class=\"navbar-nav ml-auto\">\n+            <div class=\"navbar-nav display-flex-center\">\n+              <div class=\"navbar-nav inner-addon right-addon search-icon\">\n+                <input\n+                  type=\"text\"\n+                  [attr.placeholder]=\"searchPlaceholder\"\n+                  autocomplete=\"off\"\n+                  [(ngModel)]=\"filterQuery\"\n+                  class=\"form-control search-box search__\"\n+                />\n+              </div>\n+\n+              <a\n+                routerLink=\"/coordinator/participants/dashboard\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Dashboard</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/locations\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Locations</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/users\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >Users</a\n+              >\n+              <a\n+                routerLink=\"/coordinator/accounts\"\n+                routerLinkActive=\"active\"\n+                [routerLinkActiveOptions]=\"{exact: true}\"\n+                class=\"nav-item nav-link\"\n+                >My Account <span class=\"navbar__name\">J</span></a\n+              >\n+            </div>\n+          </div>\n+        </div>\n+      </nav>\n+    </div>\n+  </div>\n+\n+  <div id=\"mobile-menu\">\n+    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n+      <div class=\"\">\n+        <span\n+          class=\"openNav display-inline-block mr-sm\"\n+          (click)=\"opencloseNav()\"\n+        >\n+          <svg\n+            height=\"16px\"\n+            viewBox=\"0 -53 384 384\"\n+            width=\"20px\"\n+            xmlns=\"http://www.w3.org/2000/svg\"\n+          >\n+            <path\n+              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+            <path\n+              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n+            />\n+          </svg>\n+        </span>\n+        <a href=\"#\" class=\"\">\n+          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n+          <span class=\"header__logo__text\">FDA MyStudies </span>\n+        </a>\n+      </div>\n+      <div\n+        *ngIf=\"showSearchBar\"\n+        class=\"navbar-nav inner-addon right-addon search-icon\"\n+      >\n+        <div class=\"position__relative\">\n+          <input\n+            type=\"text\"\n+            [attr.placeholder]=\"searchPlaceholder\"\n+            autocomplete=\"off\"\n+            [(ngModel)]=\"filterQuery\"\n+            class=\"form-control search-box search__\"\n+          />\n+          <i\n+            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n+            aria-hidden=\"true\"\n+          ></i>\n+        </div>\n+        <div>\n+          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n+        </div>\n+      </div>\n+    </div>\n+    <div\n+      id=\"mySidenav\"\n+      class=\"sidenav\"\n+      [ngClass]=\"opencloseNavval ? 'width__268 ' : 'width__0 '\"\n+    >\n+      <div\n+        [ngClass]=\"\n+          opencloseNavval ? 'width__268 display__block ' : 'display__none '\n+        \"\n+      >\n+        <div class=\"mob__bo\">\n+          <a\n+            href=\"javascript:void(0)\"", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjY3Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972673", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTc0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzEyNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047127", "bodyText": "Still looks the same.", "author": "nikklassen", "createdAt": "2020-06-19T21:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MTc0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjI0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440462243", "bodyText": "navIsOpen", "author": "nikklassen", "createdAt": "2020-06-15T21:39:34Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjY1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972658", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjI0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjYwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440462601", "bodyText": "Use event.key", "author": "nikklassen", "createdAt": "2020-06-15T21:40:22Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;\n+  showSearchBar = true;\n+  filterQuery = '';\n+\n+  opencloseNav(): void {\n+    this.opencloseNavval = !this.opencloseNavval;\n+  }\n+\n+  public handleKeyDown(event: KeyboardEvent): void {\n+    if (event.keyCode === 13) {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjY0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972643", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjY0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440462647", "bodyText": "toggleNav", "author": "nikklassen", "createdAt": "2020-06-15T21:40:30Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.ts", "diffHunk": "@@ -5,4 +5,19 @@ import {Component} from '@angular/core';\n   templateUrl: './sitecoordinator.component.html',\n   styleUrls: ['./sitecoordinator.component.scss'],\n })\n-export class SiteCoordinatorComponent {}\n+export class SiteCoordinatorComponent {\n+  searchPlaceholder = 'Search by Site or Study ID or Name';\n+  opencloseNavval = false;\n+  showSearchBar = true;\n+  filterQuery = '';\n+\n+  opencloseNav(): void {", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjYyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972624", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MjY0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTY5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440835694", "bodyText": "not needed.", "author": "nikklassen", "createdAt": "2020-06-16T13:09:15Z", "path": "UR-web-app/src/app/site-coordinator/participant/participant.module.ts", "diffHunk": "@@ -16,6 +16,6 @@ import {DashboardComponent} from './dashboard/dashboard.component';\n     DashboardComponent,\n   ],\n   imports: [CommonModule, ParticipantRoutingModule],\n-  providers: [],\n+  providers: [ParticipantService],", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjYwNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972607", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTY5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTkxNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440835914", "bodyText": "formatting", "author": "nikklassen", "createdAt": "2020-06-16T13:09:35Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -0,0 +1,176 @@\n+.nav-mobile {\n+    background: #fff;\n+    color: #FFF;\n+    padding: 0;\n+    margin: 0;\n+    cursor: auto;  \n+    font-size: 18px;\n+    list-style-type: none;\n+    box-shadow: 0 5px 5px -5px #333;\n+    &:after { content: \"\"; display: table; clear: both; }\n+    svg {\n+        height: 42px;\n+        width: 54px;\n+        padding: 9px;\n+      path { fill: #595959; }", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjU4Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972582", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNzA0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440837049", "bodyText": "relative font size", "author": "nikklassen", "createdAt": "2020-06-16T13:11:16Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -0,0 +1,176 @@\n+.nav-mobile {\n+    background: #fff;\n+    color: #FFF;\n+    padding: 0;\n+    margin: 0;\n+    cursor: auto;  \n+    font-size: 18px;", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjU2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972565", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNzA0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTMyOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440845328", "bodyText": "not needed.", "author": "nikklassen", "createdAt": "2020-06-16T13:23:30Z", "path": "UR-web-app/src/app/site-coordinator/user/user.module.ts", "diffHunk": "@@ -14,6 +14,6 @@ import {UserDetailsComponent} from './user-details/user-details.component';\n     UserDetailsComponent,\n   ],\n   imports: [CommonModule, UserRoutingModule],\n-  providers: [],\n+  providers: [UserService],", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjUzOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972539", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTMyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTk0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r440845949", "bodyText": "Why is this necessary?", "author": "nikklassen", "createdAt": "2020-06-16T13:24:18Z", "path": "UR-web-app/src/test.css", "diffHunk": "@@ -0,0 +1 @@\n+@import \"~jasmine-core/lib/jasmine-core/jasmine.css\"", "originalCommit": "f6d8ac46d1fadba257a5c152255fb11392ac860b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjUwNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r442972506", "bodyText": "removed", "author": "firdosebtc1", "createdAt": "2020-06-19T17:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg0NTk0OQ=="}], "type": "inlineReview"}, {"oid": "7d9d8a75ea7157c9368844e43550fbf27416afda", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7d9d8a75ea7157c9368844e43550fbf27416afda", "message": "Code review comments has been resolved", "committedDate": "2020-06-19T17:33:02Z", "type": "commit"}, {"oid": "d7f7fec1946760100c08fa6d12b1430af49fced4", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d7f7fec1946760100c08fa6d12b1430af49fced4", "message": "Entity service File changes", "committedDate": "2020-06-19T17:37:36Z", "type": "commit"}, {"oid": "231bef8036f4330188e7a17d54d6ab7093e9adb0", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/231bef8036f4330188e7a17d54d6ab7093e9adb0", "message": "prettier issues has been resolved", "committedDate": "2020-06-19T18:03:17Z", "type": "commit"}, {"oid": "6813a97979d4a37099efc4e75fff2988728f8109", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6813a97979d4a37099efc4e75fff2988728f8109", "message": "prettier format:check dist file ignored", "committedDate": "2020-06-19T18:17:34Z", "type": "commit"}, {"oid": "477d98dd5085a77502b57d22f8d345deada7b8ef", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/477d98dd5085a77502b57d22f8d345deada7b8ef", "message": "added .prettierignore file", "committedDate": "2020-06-19T18:26:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MTUwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443041508", "bodyText": "Typescript doesn't know what you're constructing here because Jasmine uses a string instead of a type. Manually specify the generic value to resolve the linter warnings.\n    const entityServicespy = jasmine.createSpyObj<EntityService<Location>>(\n      'EntityService',\n      ['getCollection'],\n    );", "author": "nikklassen", "createdAt": "2020-06-19T20:59:42Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0OTg3Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443649873", "bodyText": "Updated", "author": "rohithd-btc", "createdAt": "2020-06-22T15:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MTUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443043275", "bodyText": "Why aren't you using the service you created in the beforeEach?", "author": "nikklassen", "createdAt": "2020-06-19T21:04:12Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0OTc1Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443649756", "bodyText": "It is causing the linter error and test case fails to run", "author": "rohithd-btc", "createdAt": "2020-06-22T15:37:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNDk1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443804958", "bodyText": "The error explains the issue. Cannot find name 'entityServicespy'. You haven't declared this variable in the containing scope.", "author": "nikklassen", "createdAt": "2020-06-22T20:24:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTAzNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231034", "bodyText": "yeah now we are declaring entityServicespy in each test block (it block)", "author": "firdosebtc1", "createdAt": "2020-06-23T13:39:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzI3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDIzOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443044238", "bodyText": "I think this needs to be an async/fakeAsync test.", "author": "nikklassen", "createdAt": "2020-06-19T21:06:26Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(\n+      asyncData(expectedLocations),\n+    );\n+    locationService\n+      .getLocations()\n+      .subscribe(\n+        (Locations) =>\n+          expect(Locations).toEqual(expectedLocations, 'expected Locations'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+\n+  it('should return an error when the server returns a 401', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+    const errorResponse = new HttpErrorResponse({\n+      error: {\n+        app_error_code: 401,\n+        userMessage: 'User does not exist',\n+        type: 'error',\n+        detailMessage: '404 Cant able to get details',\n+      },\n+      status: 401,\n+      statusText: 'Unauthorized',\n+    });\n+\n+    entityServicespy.getCollection.and.returnValue(asyncError(errorResponse));\n+\n+    locationService.getLocations().subscribe(\n+      () => fail('expected an error, not locations'),\n+      (error: ApiResponse) => {\n+        expect(error.error.userMessage).toContain('User does not exist');\n+      },\n+    );\n+  });\n+\n+  it('should return an error when the server returns a 400', () => {", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0OTA1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443649058", "bodyText": "Updated in the latest Commit", "author": "rohithd-btc", "createdAt": "2020-06-22T15:36:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDUxNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443044516", "bodyText": "Your service layer shouldn't have to deal with Http types. We should add a \"map error\" to the entity service to pull out the ApiError.", "author": "nikklassen", "createdAt": "2020-06-19T21:07:26Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n+/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n+/* eslint-disable @typescript-eslint/no-unsafe-call */\n \n+import {TestBed} from '@angular/core/testing';\n+import {\n+  HttpTestingController,\n+  HttpClientTestingModule,\n+} from '@angular/common/http/testing';\n import {LocationService} from './location.service';\n import {SiteCoordinatorModule} from '../../site-coordinator.module';\n import {NO_ERRORS_SCHEMA} from '@angular/core';\n import {RouterTestingModule} from '@angular/router/testing';\n import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n import {EntityService} from '../../../service/entity.service';\n-import {HttpClientModule} from '@angular/common/http';\n+import {asyncError, asyncData} from 'src/testing/async-observable-helpers';\n+import {ApiResponse} from 'src/app/entity/error.model';\n+import {HttpErrorResponse} from '@angular/common/http';\n \n describe('LocationService', () => {\n-  beforeEach(() =>\n+  let locationService: LocationService;\n+  let httpMock: HttpTestingController;\n+  const expectedLocations = [\n+    {\n+      id: 2,\n+      customId: 'customid3',\n+      name: 'name -1-updated0',\n+      description: 'location-descp-updatedj',\n+      status: '1',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+    {\n+      id: 3,\n+      customId: 'customid32',\n+      name: 'name -1 - updated000',\n+      description: 'location-descp-updated',\n+      status: '0',\n+      studiesCount: 0,\n+      studies: [],\n+    },\n+  ];\n+  beforeEach(() => {\n     TestBed.configureTestingModule({\n       imports: [\n+        HttpClientTestingModule,\n         SiteCoordinatorModule,\n-        HttpClientModule,\n         RouterTestingModule.withRoutes([]),\n       ],\n       schemas: [NO_ERRORS_SCHEMA],\n       providers: [LocationService, EntityService, BsModalService, BsModalRef],\n-    }),\n-  );\n+    });\n+    httpMock = TestBed.get(HttpTestingController) as HttpTestingController;\n+  });\n+  beforeEach(() => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+  });\n \n   it('should be created', () => {\n     const service: LocationService = TestBed.get(\n       LocationService,\n     ) as LocationService;\n     expect(service).toBeTruthy();\n   });\n+\n+  it('should return expected Locations List', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+\n+    entityServicespy.getCollection.and.returnValue(\n+      asyncData(expectedLocations),\n+    );\n+    locationService\n+      .getLocations()\n+      .subscribe(\n+        (Locations) =>\n+          expect(Locations).toEqual(expectedLocations, 'expected Locations'),\n+        fail,\n+      );\n+\n+    expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n+  });\n+\n+  it('should return an error when the server returns a 401', () => {\n+    const entityServicespy = jasmine.createSpyObj('EntityService', [\n+      'getCollection',\n+    ]);\n+    locationService = new LocationService(entityServicespy);\n+    const errorResponse = new HttpErrorResponse({", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4MzA0OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443683048", "bodyText": "Updated in the last Commit", "author": "rohithd-btc", "createdAt": "2020-06-22T16:28:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDUxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDU4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443044580", "bodyText": "Don't forget to remove this.", "author": "nikklassen", "createdAt": "2020-06-19T21:07:42Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -1,30 +1,146 @@\n-import {TestBed} from '@angular/core/testing';\n+/* eslint-disable @typescript-eslint/no-unsafe-assignment */", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0ODM2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443648365", "bodyText": "Removed", "author": "rohithd-btc", "createdAt": "2020-06-22T15:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjYxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443046617", "bodyText": "You can still do this wwith `\n<ng-container *ngIf=\"(location$ | async) as locations\">\n    <div *ngIf=\"locations.length != 0\">\n    <!-- Don't refer to location$ here, use the resolved \"locations\" value anywhere inside the ng-container --> \nThe first ngIf wait until the Observable is defined, then the second on has your display condition. Unfortunately you can't combine these into one *ngIf because of how the syntax works, but it's not too bad.", "author": "nikklassen", "createdAt": "2020-06-19T21:14:37Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.html", "diffHunk": "@@ -2,22 +2,21 @@\n   <div class=\"max__w__1280 m-none\">\n     <div class=\"flex__justify__space-between\">\n       <div class=\"subheader__title\">Locations</div>\n-      <div class=\"\">\n-        <button\n-          (click)=\"addLocation()\"\n-          class=\"btn btn-primary width__auto blue__btn font14\"\n-        >\n-          Add Location\n-        </button>\n-      </div>\n+      <button\n+        id=\"addLocation\"\n+        (click)=\"addLocation()\"\n+        class=\"btn btn-primary width__auto blue__btn font14\"\n+      >\n+        Add Location\n+      </button>\n     </div>\n   </div>\n </div>\n <div class=\"max__w__1280 m-none\">\n-  <div *ngIf=\"locations.length != 0\" class=\"cards1 m-none\">", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MDE5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443650199", "bodyText": "Updated", "author": "rohithd-btc", "createdAt": "2020-06-22T15:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjYxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjczNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443046737", "bodyText": "Absolute URL here too.", "author": "nikklassen", "createdAt": "2020-06-19T21:15:01Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -58,29 +58,14 @@\n \n   <div id=\"mobile-menu\">\n     <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div class=\"\">\n-        <span\n+      <div>\n+        <button\n           class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"opencloseNav()\"\n+          (click)=\"toggleNav()\"\n         >\n-          <svg\n-            height=\"16px\"\n-            viewBox=\"0 -53 384 384\"\n-            width=\"20px\"\n-            xmlns=\"http://www.w3.org/2000/svg\"\n-          >\n-            <path\n-              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-          </svg>\n-        </span>\n-        <a href=\"#\" class=\"\">\n+          <img src=\"../../../assets/svgs/menu-icon.svg\" />", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MDI3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443650270", "bodyText": "Updated", "author": "rohithd-btc", "createdAt": "2020-06-22T15:38:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0Njg5OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443046899", "bodyText": "Button here too", "author": "nikklassen", "createdAt": "2020-06-19T21:15:27Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -58,29 +58,14 @@\n \n   <div id=\"mobile-menu\">\n     <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div class=\"\">\n-        <span\n+      <div>\n+        <button\n           class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"opencloseNav()\"\n+          (click)=\"toggleNav()\"\n         >\n-          <svg\n-            height=\"16px\"\n-            viewBox=\"0 -53 384 384\"\n-            width=\"20px\"\n-            xmlns=\"http://www.w3.org/2000/svg\"\n-          >\n-            <path\n-              d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-            <path\n-              d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"\n-            />\n-          </svg>\n-        </span>\n-        <a href=\"#\" class=\"\">\n+          <img src=\"../../../assets/svgs/menu-icon.svg\" />\n+        </button>\n+        <a href=\"#\">", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MDcwMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443650700", "bodyText": "Since it's a navigation link which is redirecting to home page , I have used anchor tag instead of button", "author": "rohithd-btc", "createdAt": "2020-06-22T15:38:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0Njg5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzM3MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047371", "bodyText": "autoprefixer should be able to take care of this for you.", "author": "nikklassen", "createdAt": "2020-06-19T21:17:10Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.scss", "diffHunk": "@@ -1,176 +1,196 @@\n .nav-mobile {\n-    background: #fff;\n-    color: #FFF;\n-    padding: 0;\n-    margin: 0;\n-    cursor: auto;  \n-    font-size: 18px;\n-    list-style-type: none;\n-    box-shadow: 0 5px 5px -5px #333;\n-    &:after { content: \"\"; display: table; clear: both; }\n-    svg {\n-        height: 42px;\n-        width: 54px;\n-        padding: 9px;\n-      path { fill: #595959; }\n-      &.icon-close { \n-        display: none; \n-        padding: 15px;\n-      }\n+  background: #fff;\n+  color: #fff;\n+  padding: 0;\n+  margin: 0;\n+  cursor: auto;\n+  font-size: 18px;\n+  list-style-type: none;\n+  box-shadow: 0 5px 5px -5px #333;\n+  &:after {\n+    content: \"\";\n+    display: table;\n+    clear: both;\n+  }\n+  svg {\n+    height: 42px;\n+    width: 54px;\n+    padding: 9px;\n+    path {\n+      fill: #595959;\n     }\n-    li {\n-      width: 100%;\n-      height: 45px;\n-      line-height: 46px;\n-      text-align: center;\n-      float: left;\n-      a {\n-        display: block;\n-        color: #333;\n-        width: 100%;\n-        height: 100%;     \n-        text-decoration: none;       \n-      }      \n+    &.icon-close {\n+      display: none;\n+      padding: 15px;\n     }\n-    .menu-button {\n-      position: absolute;\n-      top: 0;\n-      left: 0;\n+  }\n+  li {\n+    width: 100%;\n+    height: 45px;\n+    line-height: 46px;\n+    text-align: center;\n+    float: left;\n+    a {\n+      display: block;\n+      color: #333;\n       width: 100%;\n       height: 100%;\n-      margin: 0;\n-      cursor: pointer;\n+      text-decoration: none;\n+    }\n+  }\n+  .menu-button {\n+    position: absolute;\n+    top: 0;\n+    left: 0;\n+    width: 100%;\n+    height: 100%;\n+    margin: 0;\n+    cursor: pointer;\n+    display: block;\n+    &:after {\n+      opacity: 0;\n+      top: 45px;\n+      content: \"\";\n+      width: 100vw;\n       display: block;\n-      &:after {\n-        opacity: 0;\n-        top: 45px;\n-        content: \"\";\n-        width: 100vw;\n+      position: fixed;\n+      height: 100vh;\n+      background: rgba(0, 0, 0, 0.5);\n+      content: \"\";\n+      pointer-events: none;\n+      transition: opacity 0.2s cubic-bezier(0, 0, 0.3, 1);\n+      transition-delay: 0.1s;\n+    }\n+  }\n+  #menu-toggle {\n+    display: none;\n+    &.active ~ .menu-button,\n+    &:checked ~ .menu-button {\n+      .icon-close {\n         display: block;\n-        position: fixed;\n-        height: 100vh;\n-        background: rgba(0,0,0,0.5);      \n-        content: \"\";\n-        pointer-events: none;\n-        transition: opacity 0.2s cubic-bezier(0,0,0.3,1);  \n-        transition-delay: 0.1s;      \n       }\n-    }  \n-    #menu-toggle {\n-      display: none;\n-      &.active ~ .menu-button,\n-      &:checked ~ .menu-button {\n-        .icon-close { display: block; }\n-        .icon-open { display: none; }\n-        &:after {\n-          opacity: 1;\n-          pointer-events: auto;\n-          transition: opacity 0.3s cubic-bezier(0,0,0.3,1);        \n-        }\n-      }   \n-      &.active ~ .menu-sidebar, \n-      &:checked ~ .menu-sidebar {\n-        transform: translateX(0);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);\n-      }    \n+      .icon-open {\n+        display: none;\n+      }\n+      &:after {\n+        opacity: 1;\n+        pointer-events: auto;\n+        transition: opacity 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      }\n     }\n-    .menu-container {\n-      width: 65px;\n-      float: left;\n-      cursor: pointer;\n-      position: absolute;\n-      .menu-sidebar { \n-        box-shadow: 5px 0 5px -5px #333;\n-        display: block;\n-        bottom: 0;\n-        background: white;\n-        color: #333;\n-        position: fixed;\n-        transform: translateX(-405px);\n-        transition: transform 0.3s cubic-bezier(0,0,0.3,1);   \n-        top: 45px;\n-        z-index: 2;\n-        list-style-type: none;\n-        padding: 0;\n-        width: 226px;\n-        .arrow {\n-          position: absolute;\n-          line-height: 50px;\n-          font-size: 32px;\n-          color: #555;\n+    &.active ~ .menu-sidebar,\n+    &:checked ~ .menu-sidebar {\n+      transform: translateX(0);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+    }\n+  }\n+  .menu-container {\n+    width: 65px;\n+    float: left;\n+    cursor: pointer;\n+    position: absolute;\n+    .menu-sidebar {\n+      box-shadow: 5px 0 5px -5px #333;\n+      display: block;\n+      bottom: 0;\n+      background: white;\n+      color: #333;\n+      position: fixed;\n+      transform: translateX(-405px);\n+      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\n+      top: 45px;\n+      z-index: 2;\n+      list-style-type: none;\n+      padding: 0;\n+      width: 226px;\n+      .arrow {\n+        position: absolute;\n+        line-height: 50px;\n+        font-size: 32px;\n+        color: #555;\n+        top: 0;\n+        z-index: 0;\n+        &.left {\n+          left: 25px;\n+        }\n+        &.right {\n+          right: 25px;\n+        }\n+      }\n+      li {\n+        height: 55px;\n+        line-height: 55px;\n+        font-size: 16px;\n+        text-align: left;\n+        position: relative;\n+        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n+        padding-left: 20px;\n+        &:hover {\n+          background: #eee;\n+        }\n+        .menu-sub {\n+          position: fixed;\n           top: 0;\n-          z-index: 0;\n-          &.left { left: 25px; }\n-          &.right { right: 25px; }\n-        }      \n-        li {\n-          height: 55px;\n-          line-height: 55px;\n-          font-size: 16px; \n-          text-align: left;\n-          position: relative;\n-          border-bottom: 1px solid rgba(0,0,0,0.1);\n-          padding-left: 20px;\n-          &:hover { background: #eee; }                              \n-          .menu-sub {\n-            position: fixed;\n-            top: 0;\n-            right: 0;\n-            bottom: 0;\n-            width: 0;\n+          right: 0;\n+          bottom: 0;\n+          width: 0;\n+          overflow: hidden;\n+          background: white;\n+          visibility: hidden;\n+          transition: all 0.3s cubic-bezier(0, 0, 0.3, 1);\n+          border-left: 1px solid #ccc;\n+          list-style-type: none;\n+          padding: 0;\n+          margin: 0;\n+          z-index: 2;\n+          width: 226px;\n+          li {\n             overflow: hidden;\n-            background: white;\n-            visibility: hidden;\n-            transition: all 0.3s cubic-bezier(0,0,0.3,1);\n-            border-left: 1px solid #ccc;  \n-            list-style-type: none;\n-            padding: 0;\n-            margin: 0;    \n-            z-index: 2;\n-            width: 226px;\n-            li { overflow: hidden; }\n-            .menu-sub-title { padding-left: 50px; }\n-           }\n-          .submenu-label {\n-            cursor: pointer;\n-            width: 100%;\n-            height: 100%;\n-            display: block;\n           }\n-          .submenu-toggle {\n-            display: none; \n-            &.active ~ .menu-sub,\n-            &:checked ~ .menu-sub {\n-              width: 65vw;\n-              visibility: visible;\n-              z-index: 1;\n-              transition: width 0.35s cubic-bezier(0,0,0.3,1);\n-            }\n-          }               \n-        }       \n+          .menu-sub-title {\n+            padding-left: 50px;\n+          }\n+        }\n+        .submenu-label {\n+          cursor: pointer;\n+          width: 100%;\n+          height: 100%;\n+          display: block;\n+        }\n+        .submenu-toggle {\n+          display: none;\n+          &.active ~ .menu-sub,\n+          &:checked ~ .menu-sub {\n+            width: 65vw;\n+            visibility: visible;\n+            z-index: 1;\n+            transition: width 0.35s cubic-bezier(0, 0, 0.3, 1);\n+          }\n+        }\n       }\n     }\n   }\n+}\n \n-  .mb__logo{\n-    margin-left: 60px;\n-    text-align: left;\n-  }\n+.mb__logo {\n+  margin-left: 60px;\n+  text-align: left;\n+}\n \n-::-webkit-input-placeholder { \n+::-webkit-input-placeholder {", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MTYxNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443651614", "bodyText": "We are using prettier for formatting html,css and scss files. Please let us know if you want to use autoprefixer instead of prettier", "author": "rohithd-btc", "createdAt": "2020-06-22T15:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTE2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231169", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-23T13:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzM3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzQ4Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047482", "bodyText": "formatting", "author": "nikklassen", "createdAt": "2020-06-19T21:17:36Z", "path": "UR-web-app/src/assets/svgs/menu-icon.svg", "diffHunk": "@@ -0,0 +1,13 @@\n+<svg\n+                    height=\"16px\"", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MjUxNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443652516", "bodyText": "Can you please suggest us  formatter for SVG files.", "author": "rohithd-btc", "createdAt": "2020-06-22T15:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzQ4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTc1OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231758", "bodyText": "we have formatted svg files using @prettier/plugin-xml and added \"xmlWhitespaceSensitivity\": \"ignore\"", "author": "firdosebtc1", "createdAt": "2020-06-23T13:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzQ4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzcwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443047705", "bodyText": "You don't need to create these. This is functionally the same as Observable's of, and asyncError is the same as Observable's throw.", "author": "nikklassen", "createdAt": "2020-06-19T21:18:33Z", "path": "UR-web-app/src/testing/async-observable-helpers.ts", "diffHunk": "@@ -0,0 +1,10 @@\n+/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n+/* eslint-disable @typescript-eslint/promise-function-async */\n+import {defer} from 'rxjs';\n+export function asyncData<T>(data: T) {", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0NzUwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443647505", "bodyText": "Removed this file", "author": "rohithd-btc", "createdAt": "2020-06-22T15:34:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzcwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0ODU0NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443048545", "bodyText": "I'm in the habit of using Observable.of, but that's the old way of doing things. We should be using the RxJS 6+ style, so just import {of} from 'rxjs';", "author": "nikklassen", "createdAt": "2020-06-19T21:21:31Z", "path": "UR-web-app/package.json", "diffHunk": "@@ -40,6 +40,7 @@\n     \"node-sass\": \"^4.13.0\",\n     \"popper.js\": \"^1.16.0\",\n     \"rxjs\": \"~6.5.4\",\n+    \"rxjs-compat\": \"^6.5.5\",", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0NzY2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443647669", "bodyText": "Updated in the latest Commit", "author": "rohithd-btc", "createdAt": "2020-06-22T15:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0ODU0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MDMzMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443050331", "bodyText": "Please don't add new things to the scope of a PR once we've started reviewing it. This PR is already pushing the size I'd like to be reviewing. Let's add this and the sorter component later.", "author": "nikklassen", "createdAt": "2020-06-19T21:27:31Z", "path": "UR-web-app/src/app/shared/commomComponentsModule.ts", "diffHunk": "@@ -0,0 +1,9 @@\n+import {NgModule} from '@angular/core';", "originalCommit": "477d98dd5085a77502b57d22f8d345deada7b8ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1MjYyMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443652620", "bodyText": "Removed", "author": "rohithd-btc", "createdAt": "2020-06-22T15:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MDMzMQ=="}], "type": "inlineReview"}, {"oid": "11a8a80eb6f7b531bff40f90d0d742f87646ddb9", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/11a8a80eb6f7b531bff40f90d0d742f87646ddb9", "message": "implemented mobile menu component", "committedDate": "2020-06-22T11:45:07Z", "type": "commit"}, {"oid": "3ad04b331c8f308045da0b9da99baae542365eb2", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3ad04b331c8f308045da0b9da99baae542365eb2", "message": "Code reviews has been fixed", "committedDate": "2020-06-22T15:31:02Z", "type": "commit"}, {"oid": "92ad70cfd960c762626e07d9c65949e8f31aada3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/92ad70cfd960c762626e07d9c65949e8f31aada3", "message": "Api Error Model response PR Updated", "committedDate": "2020-06-22T16:27:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1NDQ0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443554447", "bodyText": "keydown to be consistent with Angular. Unless conflicts are a problem, in which case use the prefix on.", "author": "nikklassen", "createdAt": "2020-06-22T13:23:57Z", "path": "UR-web-app/src/app/site-coordinator/mobile-menu/mobile-menu.component.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import {Component, Input, Output, EventEmitter} from '@angular/core';\n+\n+@Component({\n+  selector: 'mobile-menu',\n+  templateUrl: './mobile-menu.component.html',\n+  styleUrls: ['./mobile-menu.component.scss'],\n+})\n+export class MobileMenuComponent<T> {\n+  @Input() searchPlaceholder = 'Search by Site or Study ID or Name';\n+  navIsOpen = false;\n+  @Input() showSearchBar = true;\n+  @Input() filterQuery = '';\n+  @Output('handleKeyDown') handleKeyDown: EventEmitter<", "originalCommit": "11a8a80eb6f7b531bff40f90d0d742f87646ddb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTkzNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231935", "bodyText": "updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-23T13:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1NDQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1Njk4NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443656985", "bodyText": "[searchPlaceholder]=\"searchPlaceholder\". {{ }} is only used for interpolating text into HTML", "author": "nikklassen", "createdAt": "2020-06-22T15:48:11Z", "path": "UR-web-app/src/app/site-coordinator/sitecoordinator.component.html", "diffHunk": "@@ -56,109 +56,12 @@\n     </div>\n   </div>\n \n-  <div id=\"mobile-menu\">\n-    <div id=\"mySidenav__menubar\" class=\"flex__justify__space-between\">\n-      <div>\n-        <button\n-          class=\"openNav display-inline-block mr-sm\"\n-          (click)=\"toggleNav()\"\n-        >\n-          <img src=\"../../../assets/svgs/menu-icon.svg\" />\n-        </button>\n-        <a href=\"#\">\n-          <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n-          <span class=\"header__logo__text\">FDA MyStudies </span>\n-        </a>\n-      </div>\n-      <div\n-        *ngIf=\"showSearchBar\"\n-        class=\"navbar-nav inner-addon right-addon search-icon\"\n-      >\n-        <div class=\"position__relative\">\n-          <input\n-            type=\"text\"\n-            [attr.placeholder]=\"searchPlaceholder\"\n-            autocomplete=\"off\"\n-            [(ngModel)]=\"filterQuery\"\n-            class=\"form-control search-box search__\"\n-          />\n-          <i\n-            class=\"fa fa-times-circle cursor__pointer cir__pos\"\n-            aria-hidden=\"true\"\n-          ></i>\n-        </div>\n-        <div>\n-          <i class=\"fa fa-search cursor__pointer\" aria-hidden=\"true\"></i>\n-        </div>\n-      </div>\n-    </div>\n-    <div\n-      id=\"mySidenav\"\n-      class=\"sidenav\"\n-      [ngClass]=\"navIsOpen ? 'open__nav' : 'close__nav '\"\n-    >\n-      <div\n-        [ngClass]=\"navIsOpen ? 'open__nav display__block ' : 'display__none '\"\n-      >\n-        <div class=\"mob__bo\">\n-          <a\n-            href=\"javascript:void(0)\"\n-            class=\"closebtn\"\n-            id=\"closeMobile\"\n-            (click)=\"toggleNav()\"\n-            >\u00d7</a\n-          >\n-          <a href=\"#\">\n-            <img class=\"mr-sm\" src=\"../../../assets/images/landing-logo.gif\" />\n-            <span class=\"header__logo__text\">FDA MyStudies </span>\n-          </a>\n-        </div>\n-\n-        <ul class=\"user__profile__ul\">\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/participants/dashboard\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Dashboard</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/locations\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Locations</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/users\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >Users</a\n-            >\n-          </li>\n-          <li>\n-            <a\n-              routerLink=\"/coordinator/accounts\"\n-              routerLinkActive=\"active\"\n-              [routerLinkActiveOptions]=\"{exact: true}\"\n-              class=\"nav-item nav-link\"\n-              >My Account</a\n-            >\n-          </li>\n-        </ul>\n-      </div>\n-    </div>\n-    <div\n-      class=\"bg__overlay\"\n-      [ngClass]=\"navIsOpen ? 'display__block' : 'display__none'\"\n-    ></div>\n-  </div>\n+  <mobile-menu\n+    searchPlaceholder=\"{{ searchPlaceholder }}\"", "originalCommit": "3ad04b331c8f308045da0b9da99baae542365eb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMTk5NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444231995", "bodyText": "Thanks,Updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-23T13:40:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1Njk4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNDM5MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443804391", "bodyText": "This will always be true. I think you mean toEqual(expectedList)", "author": "nikklassen", "createdAt": "2020-06-22T20:23:21Z", "path": "UR-web-app/src/app/site-coordinator/location/location-list/location-list.component.spec.ts", "diffHunk": "@@ -68,14 +69,36 @@ describe('LocationsListComponent', () => {\n     );\n   });\n \n-  it('should get the user List via refresh function', fakeAsync(() => {\n+  it('should get the Location List via refresh function', fakeAsync(() => {\n+    const expectedList = [\n+      {\n+        id: 2,\n+        customId: 'customid3',\n+        name: 'name -1-updated0',\n+        description: 'location-descp-updatedj',\n+        status: '1',\n+        studiesCount: 0,\n+        studies: [],\n+      },\n+      {\n+        id: 3,\n+        customId: 'customid32',\n+        name: 'name -1 - updated000',\n+        description: 'location-descp-updated',\n+        status: '0',\n+        studiesCount: 0,\n+        studies: [],\n+      },\n+    ];\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocations'],\n+    );\n+    locationServiceSpy.getLocations.and.returnValue(of(expectedList));\n     spyOn(component, 'getLocation');\n     component.getLocation();\n     tick();\n     fixture.detectChanges();\n-    expect(component.locations.length).toBe(\n-      0,\n-      'Location list after function call',\n-    );\n+    expect(component.locations).toEqual(component.locations);", "originalCommit": "92ad70cfd960c762626e07d9c65949e8f31aada3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMjE5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444232196", "bodyText": "sorry we missed it ,updated in the latest commit", "author": "firdosebtc1", "createdAt": "2020-06-23T13:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNDM5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMzE4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r443813183", "bodyText": "You still aren't constructing this class. There needs to be a new ApiResponse somewhere in your code.", "author": "nikklassen", "createdAt": "2020-06-22T20:40:10Z", "path": "UR-web-app/src/app/entity/error.model.ts", "diffHunk": "@@ -0,0 +1,8 @@\n+export class ApiResponse {", "originalCommit": "92ad70cfd960c762626e07d9c65949e8f31aada3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMjI3NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/519#discussion_r444232275", "bodyText": "sorry we reverted it back to interface", "author": "firdosebtc1", "createdAt": "2020-06-23T13:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMzE4Mw=="}], "type": "inlineReview"}, {"oid": "cc49b3fd91283a35a57457098e83d48a56ea9945", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cc49b3fd91283a35a57457098e83d48a56ea9945", "message": "Code review Comments has been resolved", "committedDate": "2020-06-23T13:35:26Z", "type": "commit"}, {"oid": "2415781ece84986ed4275e4dfdd6aea031a404c5", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/2415781ece84986ed4275e4dfdd6aea031a404c5", "message": "removed loglevel from prettier format:check", "committedDate": "2020-06-23T16:54:27Z", "type": "commit"}, {"oid": "08d787d5a685d56f8a5f3b1426efe53eb5b07974", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/08d787d5a685d56f8a5f3b1426efe53eb5b07974", "message": "Api response interface updated", "committedDate": "2020-06-24T13:36:39Z", "type": "commit"}]}