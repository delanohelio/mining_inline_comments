{"pr_number": 685, "pr_title": "location-details implementation", "pr_createdAt": "2020-07-27T15:02:46Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685", "timeline": [{"oid": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "message": "location-details implementation", "committedDate": "2020-07-27T14:12:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NzczNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461057734", "bodyText": "Test data should be specific to a certain test, or at least a data type. Putting every data object in one file isn't useful and makes your tests hard to read.\nAlso, you also don't usually need to populate every field, removing the need for a bunch of test data like this. For tests that don't involve specific fields (and only for tests), something like this works.\nconst study = {id: '1'} as Study;", "author": "nikklassen", "createdAt": "2020-07-27T17:38:11Z", "path": "UR-web-app/src/app/entity/mockData.ts", "diffHunk": "@@ -0,0 +1,133 @@\n+import {of, Observable} from 'rxjs';\n+import {Study} from '../site-coordinator/studies/shared/study.model';\n+\n+export const expectedList = [", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzAxOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463017018", "bodyText": "Created separate files and updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T13:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NzczNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2ODU3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461068576", "bodyText": "Images should include alt attributes that describe what they are", "author": "nikklassen", "createdAt": "2020-07-27T17:57:18Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzE4Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463017187", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T13:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2ODU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NjE2NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461076164", "bodyText": "This isn't a form, I don't think we should be using the form-group class.", "author": "nikklassen", "createdAt": "2020-07-27T18:10:54Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzI0Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463017246", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T13:59:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NjE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NjMzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461076336", "bodyText": "label for=\"\" should be used to target a form input, not a div.", "author": "nikklassen", "createdAt": "2020-07-27T18:11:14Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzQ3NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463017475", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NjMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5Mzg4OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463193889", "bodyText": "There isn't any <input> here. <label> is only a valid tag when associated with an input. See MDN for more information.", "author": "nikklassen", "createdAt": "2020-07-30T18:34:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NjMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NzMwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463677305", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NjMzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzI3MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461077270", "bodyText": "The styling on these list items doesn't look right, the rows are far too big.", "author": "nikklassen", "createdAt": "2020-07-27T18:12:54Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"app\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"form-group\">\n+                    <label for=\"Location\">Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzY4NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463017685", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:00:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzQyOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461077428", "bodyText": "This should be it's own component", "author": "nikklassen", "createdAt": "2020-07-27T18:13:12Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"app\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"form-group\">\n+                    <label for=\"Location\">Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>\n+        </ul>\n+    </div>\n+</div>\n+\n+<ng-template #template>", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzkyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463017923", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzQyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzgyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461077826", "bodyText": "The for attribute needs to correspond to named input.", "author": "nikklassen", "createdAt": "2020-07-27T18:13:59Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"app\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"form-group\">\n+                    <label for=\"Location\">Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>\n+        </ul>\n+    </div>\n+</div>\n+\n+<ng-template #template>\n+    <div class=\"modal-body modal__body\">\n+        <form #updateLocationForm=\"ngForm\" autocomplete=\"off\">\n+            <div class=\"row border__bottom__periwinkle-gray\">\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group background__mystic-gray border-radius__77\">\n+                        <label for=\"study\">Location ID</label>", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzk5Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463017993", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:00:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NDgwMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463194800", "bodyText": "I'm sorry, apparently the <label for=\"\"> has to correspond to an id, not the name of a form (see the link in my other comment). Please add an id as well", "author": "nikklassen", "createdAt": "2020-07-30T18:36:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3ODY2Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463678667", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:28:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NzgyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODM3NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461078375", "bodyText": "The styling on these errors doesn't look right.", "author": "nikklassen", "createdAt": "2020-07-27T18:14:55Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"app\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"form-group\">\n+                    <label for=\"Location\">Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>\n+        </ul>\n+    </div>\n+</div>\n+\n+<ng-template #template>\n+    <div class=\"modal-body modal__body\">\n+        <form #updateLocationForm=\"ngForm\" autocomplete=\"off\">\n+            <div class=\"row border__bottom__periwinkle-gray\">\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group background__mystic-gray border-radius__77\">\n+                        <label for=\"study\">Location ID</label>\n+                        <input type=\"text\" class=\"form-control\" readonly [value]=\"location.customId\" />\n+                    </div>\n+\n+                </div>\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group\">\n+                        <label for=\"app\">Location Name</label>\n+                        <input type=\"text\" class=\"form-control\" id=\"app\" placeholder=\"Enter Location Name\"\n+                            [(ngModel)]=\"location.name\" required name=\"name\" maxlength=\"200\" #name=\"ngModel\" />\n+                    </div>\n+                    <div class=\"validation-error\" *ngIf=\"", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxODA3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463018076", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:00:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODQ1MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461078451", "bodyText": "for=\"name\"", "author": "nikklassen", "createdAt": "2020-07-27T18:15:02Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"app\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"form-group\">\n+                    <label for=\"Location\">Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>\n+        </ul>\n+    </div>\n+</div>\n+\n+<ng-template #template>\n+    <div class=\"modal-body modal__body\">\n+        <form #updateLocationForm=\"ngForm\" autocomplete=\"off\">\n+            <div class=\"row border__bottom__periwinkle-gray\">\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group background__mystic-gray border-radius__77\">\n+                        <label for=\"study\">Location ID</label>\n+                        <input type=\"text\" class=\"form-control\" readonly [value]=\"location.customId\" />\n+                    </div>\n+\n+                </div>\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group\">\n+                        <label for=\"app\">Location Name</label>", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMTQ2Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463021463", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODYyOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461078629", "bodyText": "You don't need IDs for these components", "author": "nikklassen", "createdAt": "2020-07-27T18:15:19Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"app\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"form-group\">\n+                    <label for=\"Location\">Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>\n+        </ul>\n+    </div>\n+</div>\n+\n+<ng-template #template>\n+    <div class=\"modal-body modal__body\">\n+        <form #updateLocationForm=\"ngForm\" autocomplete=\"off\">\n+            <div class=\"row border__bottom__periwinkle-gray\">\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group background__mystic-gray border-radius__77\">\n+                        <label for=\"study\">Location ID</label>\n+                        <input type=\"text\" class=\"form-control\" readonly [value]=\"location.customId\" />\n+                    </div>\n+\n+                </div>\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group\">\n+                        <label for=\"app\">Location Name</label>\n+                        <input type=\"text\" class=\"form-control\" id=\"app\" placeholder=\"Enter Location Name\"", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMTUzNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463021537", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3OTE0Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461079147", "bodyText": "for=\"description\"", "author": "nikklassen", "createdAt": "2020-07-27T18:16:10Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,151 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"study\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <label for=\"app\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"form-group\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"form-group\">\n+                    <label for=\"Location\">Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>\n+        </ul>\n+    </div>\n+</div>\n+\n+<ng-template #template>\n+    <div class=\"modal-body modal__body\">\n+        <form #updateLocationForm=\"ngForm\" autocomplete=\"off\">\n+            <div class=\"row border__bottom__periwinkle-gray\">\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group background__mystic-gray border-radius__77\">\n+                        <label for=\"study\">Location ID</label>\n+                        <input type=\"text\" class=\"form-control\" readonly [value]=\"location.customId\" />\n+                    </div>\n+\n+                </div>\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group\">\n+                        <label for=\"app\">Location Name</label>\n+                        <input type=\"text\" class=\"form-control\" id=\"app\" placeholder=\"Enter Location Name\"\n+                            [(ngModel)]=\"location.name\" required name=\"name\" maxlength=\"200\" #name=\"ngModel\" />\n+                    </div>\n+                    <div class=\"validation-error\" *ngIf=\"\n+              name.invalid && (name.dirty || name.touched)\n+            \">\n+                        <span class=\"help-block with-errors error__msg\" *ngIf=\"name.errors.required\">\n+                            Location Name is required.\n+                        </span>\n+                        <span class=\"help-block with-errors error__msg\" *ngIf=\"name.errors.maxlength\">\n+                            Location Name exceeds max length (200 characters).\n+                        </span>\n+                        <span class=\"help-block with-errors error__msg\"\n+                            *ngIf=\"!name.errors.required && !name.errors.maxlength\">\n+                            Location Name is invalid.\n+                        </span>\n+                    </div>\n+                </div>\n+            </div>\n+            <div class=\"row border__bottom__periwinkle-gray\">\n+                <div class=\"col-xs-12 col-md-12 p-none\">\n+                    <div class=\"form-group\">\n+                        <label for=\"Location\">Description</label>", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMTU5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463021590", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:06:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3OTE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MTY4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461081683", "bodyText": "How is this different than the previous test?", "author": "nikklassen", "createdAt": "2020-07-27T18:20:32Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.spec.ts", "diffHunk": "@@ -1,24 +1,126 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+  tick,\n+  flush,\n+} from '@angular/core/testing';\n \n import {LocationDetailsComponent} from './location-details.component';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {LocationService} from '../shared/location.service';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {By} from '@angular/platform-browser';\n+import {expectedList, expectedResponse} from 'src/app/entity/mockData';\n \n describe('LocationDetailsComponent', () => {\n   let component: LocationDetailsComponent;\n   let fixture: ComponentFixture<LocationDetailsComponent>;\n-\n   beforeEach(async(async () => {\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocationDetails', 'updateLocation'],\n+    );\n+\n     await TestBed.configureTestingModule({\n       declarations: [LocationDetailsComponent],\n-    }).compileComponents();\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule.withRoutes([\n+          {\n+            path: 'coordinator/locations',\n+            component: LocationDetailsComponent,\n+          },\n+        ]),\n+        LocationModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: LocationService, useValue: locationServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(LocationDetailsComponent);\n+        component = fixture.componentInstance;\n+        locationServiceSpy.getLocationDetails.and.returnValue(of(expectedList));\n+        locationServiceSpy.updateLocation.and.returnValue(of(expectedResponse));\n+        fixture.detectChanges();\n+        fixture.destroy();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('it should call get Location Details in ngOninit', fakeAsync(() => {\n+    const spyobjs = spyOn(component, 'getLocationDetails');\n+    component.getLocationDetails();\n+    fixture.detectChanges();\n+    expect(spyobjs).toHaveBeenCalledTimes(1);\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationDetailsComponent);\n-    component = fixture.componentInstance;\n+  it('should get details based on specific location id', () => {\n     fixture.detectChanges();\n+    expect(component.location.id).toEqual(2);\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should check input value is filled after data', () => {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyNTExMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463025113", "bodyText": "expecting mock data to fill in all mandatory fields.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:11:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MTY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NDUzOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463184539", "bodyText": "Your test is just assertions. I would combine it with the previous test case.", "author": "nikklassen", "createdAt": "2020-07-30T18:17:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MTY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcwMDYwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463700608", "bodyText": "First test case we were actually testing and expecting the location property \"id\" from the mock data and in the second test case we were checking other properties of the Location like name, customId and description from mockdata. So we have removed the id check test case as location details html page will render these 3 fields.", "author": "rohithd-btc", "createdAt": "2020-07-31T16:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MTY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MTc4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461081780", "bodyText": "Compare to the test data, not a magic number", "author": "nikklassen", "createdAt": "2020-07-27T18:20:42Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.spec.ts", "diffHunk": "@@ -1,24 +1,126 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+  tick,\n+  flush,\n+} from '@angular/core/testing';\n \n import {LocationDetailsComponent} from './location-details.component';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {LocationService} from '../shared/location.service';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {By} from '@angular/platform-browser';\n+import {expectedList, expectedResponse} from 'src/app/entity/mockData';\n \n describe('LocationDetailsComponent', () => {\n   let component: LocationDetailsComponent;\n   let fixture: ComponentFixture<LocationDetailsComponent>;\n-\n   beforeEach(async(async () => {\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocationDetails', 'updateLocation'],\n+    );\n+\n     await TestBed.configureTestingModule({\n       declarations: [LocationDetailsComponent],\n-    }).compileComponents();\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule.withRoutes([\n+          {\n+            path: 'coordinator/locations',\n+            component: LocationDetailsComponent,\n+          },\n+        ]),\n+        LocationModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: LocationService, useValue: locationServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(LocationDetailsComponent);\n+        component = fixture.componentInstance;\n+        locationServiceSpy.getLocationDetails.and.returnValue(of(expectedList));\n+        locationServiceSpy.updateLocation.and.returnValue(of(expectedResponse));\n+        fixture.detectChanges();\n+        fixture.destroy();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('it should call get Location Details in ngOninit', fakeAsync(() => {\n+    const spyobjs = spyOn(component, 'getLocationDetails');\n+    component.getLocationDetails();\n+    fixture.detectChanges();\n+    expect(spyobjs).toHaveBeenCalledTimes(1);\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationDetailsComponent);\n-    component = fixture.componentInstance;\n+  it('should get details based on specific location id', () => {\n     fixture.detectChanges();\n+    expect(component.location.id).toEqual(2);", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMTc0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463021740", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:06:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MTc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MjIxMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461082211", "bodyText": "spyObjs will always be truthy, did you mean to check if it was called?", "author": "nikklassen", "createdAt": "2020-07-27T18:21:28Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.spec.ts", "diffHunk": "@@ -1,24 +1,126 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+  tick,\n+  flush,\n+} from '@angular/core/testing';\n \n import {LocationDetailsComponent} from './location-details.component';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {LocationService} from '../shared/location.service';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {By} from '@angular/platform-browser';\n+import {expectedList, expectedResponse} from 'src/app/entity/mockData';\n \n describe('LocationDetailsComponent', () => {\n   let component: LocationDetailsComponent;\n   let fixture: ComponentFixture<LocationDetailsComponent>;\n-\n   beforeEach(async(async () => {\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocationDetails', 'updateLocation'],\n+    );\n+\n     await TestBed.configureTestingModule({\n       declarations: [LocationDetailsComponent],\n-    }).compileComponents();\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule.withRoutes([\n+          {\n+            path: 'coordinator/locations',\n+            component: LocationDetailsComponent,\n+          },\n+        ]),\n+        LocationModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: LocationService, useValue: locationServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(LocationDetailsComponent);\n+        component = fixture.componentInstance;\n+        locationServiceSpy.getLocationDetails.and.returnValue(of(expectedList));\n+        locationServiceSpy.updateLocation.and.returnValue(of(expectedResponse));\n+        fixture.detectChanges();\n+        fixture.destroy();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('it should call get Location Details in ngOninit', fakeAsync(() => {\n+    const spyobjs = spyOn(component, 'getLocationDetails');\n+    component.getLocationDetails();\n+    fixture.detectChanges();\n+    expect(spyobjs).toHaveBeenCalledTimes(1);\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationDetailsComponent);\n-    component = fixture.componentInstance;\n+  it('should get details based on specific location id', () => {\n     fixture.detectChanges();\n+    expect(component.location.id).toEqual(2);\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should check input value is filled after data', () => {\n+    fixture.detectChanges();\n+    expect(component.location.customId).toEqual('customid3');\n+    expect(component.location.description).toEqual('location-descp-updated');\n+    expect(component.location.name).toEqual('name -1-updated0');\n   });\n+\n+  it('should not have studies when count is zero', () => {\n+    fixture.detectChanges();\n+    const elem = fixture.debugElement.query(\n+      By.css('[data-test=\"studiesCount\"]'),\n+    );\n+    expect(elem).toBeFalsy();\n+  });\n+\n+  it('should display the modal when edit location is clicked', fakeAsync(() => {\n+    const clickEditButton = fixture.debugElement.query(By.css('button'));\n+    const spyObjs = spyOn(component, 'openModal').and.callThrough();\n+    clickEditButton.triggerEventHandler('click', null);\n+    tick();\n+    fixture.detectChanges();\n+    expect(spyObjs).toBeTruthy();", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMzAxOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463023019", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MjIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MjcwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461082708", "bodyText": "I would prefer you to use page objects or a helper function, this test is very brittle to changes in the DOM, how do you know which button you're getting here?", "author": "nikklassen", "createdAt": "2020-07-27T18:22:19Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.spec.ts", "diffHunk": "@@ -1,24 +1,126 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+  tick,\n+  flush,\n+} from '@angular/core/testing';\n \n import {LocationDetailsComponent} from './location-details.component';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {LocationService} from '../shared/location.service';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {By} from '@angular/platform-browser';\n+import {expectedList, expectedResponse} from 'src/app/entity/mockData';\n \n describe('LocationDetailsComponent', () => {\n   let component: LocationDetailsComponent;\n   let fixture: ComponentFixture<LocationDetailsComponent>;\n-\n   beforeEach(async(async () => {\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocationDetails', 'updateLocation'],\n+    );\n+\n     await TestBed.configureTestingModule({\n       declarations: [LocationDetailsComponent],\n-    }).compileComponents();\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule.withRoutes([\n+          {\n+            path: 'coordinator/locations',\n+            component: LocationDetailsComponent,\n+          },\n+        ]),\n+        LocationModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: LocationService, useValue: locationServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(LocationDetailsComponent);\n+        component = fixture.componentInstance;\n+        locationServiceSpy.getLocationDetails.and.returnValue(of(expectedList));\n+        locationServiceSpy.updateLocation.and.returnValue(of(expectedResponse));\n+        fixture.detectChanges();\n+        fixture.destroy();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('it should call get Location Details in ngOninit', fakeAsync(() => {\n+    const spyobjs = spyOn(component, 'getLocationDetails');\n+    component.getLocationDetails();\n+    fixture.detectChanges();\n+    expect(spyobjs).toHaveBeenCalledTimes(1);\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationDetailsComponent);\n-    component = fixture.componentInstance;\n+  it('should get details based on specific location id', () => {\n     fixture.detectChanges();\n+    expect(component.location.id).toEqual(2);\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should check input value is filled after data', () => {\n+    fixture.detectChanges();\n+    expect(component.location.customId).toEqual('customid3');\n+    expect(component.location.description).toEqual('location-descp-updated');\n+    expect(component.location.name).toEqual('name -1-updated0');\n   });\n+\n+  it('should not have studies when count is zero', () => {\n+    fixture.detectChanges();\n+    const elem = fixture.debugElement.query(\n+      By.css('[data-test=\"studiesCount\"]'),\n+    );\n+    expect(elem).toBeFalsy();\n+  });\n+\n+  it('should display the modal when edit location is clicked', fakeAsync(() => {\n+    const clickEditButton = fixture.debugElement.query(By.css('button'));\n+    const spyObjs = spyOn(component, 'openModal').and.callThrough();\n+    clickEditButton.triggerEventHandler('click', null);\n+    tick();\n+    fixture.detectChanges();\n+    expect(spyObjs).toBeTruthy();\n+    flush();\n+  }));\n+\n+  it('should close the modal when clicked', fakeAsync(() => {\n+    const mouseClick = fixture.debugElement.query(By.css('button'));", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMzMwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463023308", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:08:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4MjcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4Mjk4Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461082983", "bodyText": "Where does expectedResponse come from?", "author": "nikklassen", "createdAt": "2020-07-27T18:22:50Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.spec.ts", "diffHunk": "@@ -1,24 +1,126 @@\n-import {async, ComponentFixture, TestBed} from '@angular/core/testing';\n+import {\n+  async,\n+  TestBed,\n+  ComponentFixture,\n+  fakeAsync,\n+  tick,\n+  flush,\n+} from '@angular/core/testing';\n \n import {LocationDetailsComponent} from './location-details.component';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {HttpClientModule} from '@angular/common/http';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../../location/location.module';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from '../../../service/entity.service';\n+import {of} from 'rxjs';\n+import {LocationService} from '../shared/location.service';\n+import {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\n+import {By} from '@angular/platform-browser';\n+import {expectedList, expectedResponse} from 'src/app/entity/mockData';\n \n describe('LocationDetailsComponent', () => {\n   let component: LocationDetailsComponent;\n   let fixture: ComponentFixture<LocationDetailsComponent>;\n-\n   beforeEach(async(async () => {\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['getLocationDetails', 'updateLocation'],\n+    );\n+\n     await TestBed.configureTestingModule({\n       declarations: [LocationDetailsComponent],\n-    }).compileComponents();\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule.withRoutes([\n+          {\n+            path: 'coordinator/locations',\n+            component: LocationDetailsComponent,\n+          },\n+        ]),\n+        LocationModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        BsModalRef,\n+        {provide: LocationService, useValue: locationServiceSpy},\n+      ],\n+    })\n+      .compileComponents()\n+      .then(() => {\n+        fixture = TestBed.createComponent(LocationDetailsComponent);\n+        component = fixture.componentInstance;\n+        locationServiceSpy.getLocationDetails.and.returnValue(of(expectedList));\n+        locationServiceSpy.updateLocation.and.returnValue(of(expectedResponse));\n+        fixture.detectChanges();\n+        fixture.destroy();\n+      });\n+  }));\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('it should call get Location Details in ngOninit', fakeAsync(() => {\n+    const spyobjs = spyOn(component, 'getLocationDetails');\n+    component.getLocationDetails();\n+    fixture.detectChanges();\n+    expect(spyobjs).toHaveBeenCalledTimes(1);\n   }));\n \n-  beforeEach(() => {\n-    fixture = TestBed.createComponent(LocationDetailsComponent);\n-    component = fixture.componentInstance;\n+  it('should get details based on specific location id', () => {\n     fixture.detectChanges();\n+    expect(component.location.id).toEqual(2);\n   });\n \n-  it('should create', () => {\n-    expect(component).toBeTruthy();\n+  it('should check input value is filled after data', () => {\n+    fixture.detectChanges();\n+    expect(component.location.customId).toEqual('customid3');\n+    expect(component.location.description).toEqual('location-descp-updated');\n+    expect(component.location.name).toEqual('name -1-updated0');\n   });\n+\n+  it('should not have studies when count is zero', () => {\n+    fixture.detectChanges();\n+    const elem = fixture.debugElement.query(\n+      By.css('[data-test=\"studiesCount\"]'),\n+    );\n+    expect(elem).toBeFalsy();\n+  });\n+\n+  it('should display the modal when edit location is clicked', fakeAsync(() => {\n+    const clickEditButton = fixture.debugElement.query(By.css('button'));\n+    const spyObjs = spyOn(component, 'openModal').and.callThrough();\n+    clickEditButton.triggerEventHandler('click', null);\n+    tick();\n+    fixture.detectChanges();\n+    expect(spyObjs).toBeTruthy();\n+    flush();\n+  }));\n+\n+  it('should close the modal when clicked', fakeAsync(() => {\n+    const mouseClick = fixture.debugElement.query(By.css('button'));\n+    const spyObjs = spyOn(component, 'closeModal').and.callThrough();\n+    mouseClick.triggerEventHandler('click', null);\n+    fixture.detectChanges();\n+    expect(spyObjs).toBeTruthy();\n+    flush();\n+  }));\n+\n+  it('should call the update the location details', fakeAsync(() => {\n+    const spyObjs = spyOn(component, 'updateLocation');\n+    component.updateLocation('update');\n+    fixture.detectChanges();\n+    expect(spyObjs).toHaveBeenCalled();\n+    expect(expectedResponse.code).toEqual('200');", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MDY0MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463680640", "bodyText": "Removed this test case", "author": "firdosebtc1", "createdAt": "2020-07-31T15:32:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4Mjk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDMwMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461084303", "bodyText": "unnecessary call to super", "author": "nikklassen", "createdAt": "2020-07-27T18:25:05Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyNDQ5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463024496", "bodyText": "As this is an extended typescript class, the compiler requires a super() call here.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:10:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDMwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NTA2Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463185062", "bodyText": "You're right. Please ignore me", "author": "nikklassen", "createdAt": "2020-07-30T18:18:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDM2NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461084364", "bodyText": "This should have a real type", "author": "nikklassen", "createdAt": "2020-07-27T18:25:12Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();\n+  }\n+  openModal(template: unknown): void {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyNDYzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463024636", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDYzMA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461084630", "bodyText": "This isn't a valid Location. Instead of using this and locationBackup you should have an object that represents the data from the server (location) and then a model for your form, locationFormData or something. When you save the location you do something like\nconst toUpdate = { ...this.location, ...this.locationFormData };\nhttp.updateLocation(toUpdate).subscribe(data => this.location = data);", "author": "nikklassen", "createdAt": "2020-07-27T18:25:39Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyOTQxNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463029417", "bodyText": "We can't change this as web service has designed in a way that if we are updating location then only name and description attribute should be there in request body and if we changing the status of a location then only status attribute  should be there in request body\nIn the both cases we are hitting same web service", "author": "firdosebtc1", "createdAt": "2020-07-30T14:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDYzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NjI0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463186249", "bodyText": "This is a strange way to create an API. Typically a PUT should just replace the value on the server. But we can't change that now. Please just continue to let me know when these cases of the API design is restricting you come up.\nSee my comments in the service on how to change this.", "author": "nikklassen", "createdAt": "2020-07-30T18:20:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDYzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5NTY5Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463695692", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:59:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDYzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5MzkzOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461093938", "bodyText": "This is never used", "author": "nikklassen", "createdAt": "2020-07-27T18:42:44Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyOTU0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463029549", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5MzkzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NjI0Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461096246", "bodyText": "You shouldn't be handling redirects in your component. Let the router handle this", "author": "nikklassen", "createdAt": "2020-07-27T18:46:52Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();\n+  }\n+  openModal(template: unknown): void {\n+    this.modalRef = this.modalService.show(template);\n+  }\n+  closeModal(): void {\n+    this.modalRef.hide();\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['locationId']) {\n+          this.locationId = params.locationId as string;\n+        } else {\n+          void this.router.navigate(['/coordinator/locations']);", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyOTk1Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463029952", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NjI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NjYwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461096605", "bodyText": "You don't need to unsubscribe from web requests", "author": "nikklassen", "createdAt": "2020-07-27T18:47:34Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();\n+  }\n+  openModal(template: unknown): void {\n+    this.modalRef = this.modalService.show(template);\n+  }\n+  closeModal(): void {\n+    this.modalRef.hide();\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['locationId']) {\n+          this.locationId = params.locationId as string;\n+        } else {\n+          void this.router.navigate(['/coordinator/locations']);\n+        }\n+        this.getLocationDetails();\n+      }),\n+    );\n+  }\n+  getLocationDetails(): void {\n+    this.subs.add(", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMDI4MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463030280", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:18:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NjYwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NzA1MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461097051", "bodyText": "Why does this return a list? It should be one Location", "author": "nikklassen", "createdAt": "2020-07-27T18:48:24Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();\n+  }\n+  openModal(template: unknown): void {\n+    this.modalRef = this.modalService.show(template);\n+  }\n+  closeModal(): void {\n+    this.modalRef.hide();\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['locationId']) {\n+          this.locationId = params.locationId as string;\n+        } else {\n+          void this.router.navigate(['/coordinator/locations']);\n+        }\n+        this.getLocationDetails();\n+      }),\n+    );\n+  }\n+  getLocationDetails(): void {\n+    this.subs.add(\n+      this.locationService\n+        .getLocationDetails(this.locationId)\n+        .subscribe((data: Location[]) => {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMDMyMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463030321", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:18:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NzA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NzM2Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461097363", "bodyText": "These should be two separate methods, dispatching on an untyped string is unsafe", "author": "nikklassen", "createdAt": "2020-07-27T18:48:56Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();\n+  }\n+  openModal(template: unknown): void {\n+    this.modalRef = this.modalService.show(template);\n+  }\n+  closeModal(): void {\n+    this.modalRef.hide();\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['locationId']) {\n+          this.locationId = params.locationId as string;\n+        } else {\n+          void this.router.navigate(['/coordinator/locations']);\n+        }\n+        this.getLocationDetails();\n+      }),\n+    );\n+  }\n+  getLocationDetails(): void {\n+    this.subs.add(\n+      this.locationService\n+        .getLocationDetails(this.locationId)\n+        .subscribe((data: Location[]) => {\n+          this.location = data[0];\n+          this.locationBackup = JSON.parse(\n+            JSON.stringify(this.location),\n+          ) as Location;\n+        }),\n+    );\n+  }\n+  updateLocation(task: string): void {\n+    const locationToUpdate = {} as Location;\n+    if (task === 'update') {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMDM4OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463030388", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:18:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NzM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzEwMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463197103", "bodyText": "Looks good", "author": "nikklassen", "createdAt": "2020-07-30T18:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NzM2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5Nzk5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461097996", "bodyText": "code should already have this type", "author": "nikklassen", "createdAt": "2020-07-27T18:50:03Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();\n+  }\n+  openModal(template: unknown): void {\n+    this.modalRef = this.modalService.show(template);\n+  }\n+  closeModal(): void {\n+    this.modalRef.hide();\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['locationId']) {\n+          this.locationId = params.locationId as string;\n+        } else {\n+          void this.router.navigate(['/coordinator/locations']);\n+        }\n+        this.getLocationDetails();\n+      }),\n+    );\n+  }\n+  getLocationDetails(): void {\n+    this.subs.add(\n+      this.locationService\n+        .getLocationDetails(this.locationId)\n+        .subscribe((data: Location[]) => {\n+          this.location = data[0];\n+          this.locationBackup = JSON.parse(\n+            JSON.stringify(this.location),\n+          ) as Location;\n+        }),\n+    );\n+  }\n+  updateLocation(task: string): void {\n+    const locationToUpdate = {} as Location;\n+    if (task === 'update') {\n+      locationToUpdate.name = this.location.name;\n+      locationToUpdate.description = this.location.description;\n+    } else {\n+      locationToUpdate.status = this.location.status === '1' ? '0' : '1';\n+    }\n+    this.subs.add(\n+      this.locationService\n+        .updateLocation(locationToUpdate, this.locationId)\n+        .subscribe((location: Location) => {\n+          if (getMessage(location.code as keyof typeof SuccessCodesEnum)) {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMDQzNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463030436", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:18:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5Nzk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461098644", "bodyText": "You should replace this.location with the server's response, an update is supposed to return the new object", "author": "nikklassen", "createdAt": "2020-07-27T18:51:15Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.ts", "diffHunk": "@@ -1,8 +1,90 @@\n-import {Component} from '@angular/core';\n+import {Component, OnInit, Input} from '@angular/core';\n+import {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\n+import {ActivatedRoute, Router} from '@angular/router';\n+import {Location} from '../shared/location.model';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+import {SuccessCodesEnum, getMessage} from 'src/app/shared/success.codes.enum';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n \n @Component({\n   selector: 'location-details',\n   templateUrl: './location-details.component.html',\n   styleUrls: ['./location-details.component.scss'],\n })\n-export class LocationDetailsComponent {}\n+export class LocationDetailsComponent extends UnsubscribeOnDestroyAdapter\n+  implements OnInit {\n+  @Input() enabled = true;\n+  location = {} as Location;\n+  locationBackup = {} as Location;\n+  locationId = '';\n+  constructor(\n+    private readonly modalService: BsModalService,\n+    private modalRef: BsModalRef,\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+    private readonly route: ActivatedRoute,\n+    private readonly router: Router,\n+  ) {\n+    super();\n+  }\n+  openModal(template: unknown): void {\n+    this.modalRef = this.modalService.show(template);\n+  }\n+  closeModal(): void {\n+    this.modalRef.hide();\n+  }\n+  ngOnInit(): void {\n+    this.subs.add(\n+      this.route.params.subscribe((params) => {\n+        if (params['locationId']) {\n+          this.locationId = params.locationId as string;\n+        } else {\n+          void this.router.navigate(['/coordinator/locations']);\n+        }\n+        this.getLocationDetails();\n+      }),\n+    );\n+  }\n+  getLocationDetails(): void {\n+    this.subs.add(\n+      this.locationService\n+        .getLocationDetails(this.locationId)\n+        .subscribe((data: Location[]) => {\n+          this.location = data[0];\n+          this.locationBackup = JSON.parse(\n+            JSON.stringify(this.location),\n+          ) as Location;\n+        }),\n+    );\n+  }\n+  updateLocation(task: string): void {\n+    const locationToUpdate = {} as Location;\n+    if (task === 'update') {\n+      locationToUpdate.name = this.location.name;\n+      locationToUpdate.description = this.location.description;\n+    } else {\n+      locationToUpdate.status = this.location.status === '1' ? '0' : '1';\n+    }\n+    this.subs.add(\n+      this.locationService\n+        .updateLocation(locationToUpdate, this.locationId)\n+        .subscribe((location: Location) => {\n+          if (getMessage(location.code as keyof typeof SuccessCodesEnum)) {\n+            this.toastr.success(\n+              getMessage(location.code as keyof typeof SuccessCodesEnum),\n+            );\n+          } else {\n+            this.toastr.success('Success');\n+          }\n+\n+          this.location.name = location.name;", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMTMxOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463031319", "bodyText": "We can't do this as update web service is not returning all the attributes of location\nfor example studies array is not coming in response of update location web service", "author": "firdosebtc1", "createdAt": "2020-07-30T14:19:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5OTUzNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463199535", "bodyText": "Can you update the type that LocationService.update returns then? Our types need to model what the API is actually doing so we don't introduce bugs by thinking that data is part of the response when it isn't.", "author": "nikklassen", "createdAt": "2020-07-30T18:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MjYyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463682623", "bodyText": "web service is returning Location model only but few field are coming empty like studies\nThis is the response what Im getting on updating location field ,I cant override the returned location with actual location as it has all the field but few attributes without values\n{\n\"locationId\": \"4028803e739514140173951425210001\",\n\"customId\": \"OpenStudy02\",\n\"description\": \"Marlborough, Massachusetts\",\n\"name\": \"Cedar Hill, Marlborough \",\n\"status\": 1,\n\"studies\": [],\n\"message\": \"Location updated successfully\",\n\"code\": \"MSG-0007\"\n}", "author": "firdosebtc1", "createdAt": "2020-07-31T15:35:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5MDc4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463690784", "bodyText": "If we aren't going to ever use some of the fields I'd like to create a return type that doesn't include those fields, so developers know not to use them, i.e.\ninterface UpdateLocationResponse {\n  description: string\n  name: string\n  status: number\n  code: SuccessCode\n}\nYou're saying it would be dangerous to do something like this.location.studes = response.studies which we need to communicate somehow.", "author": "nikklassen", "createdAt": "2020-07-31T15:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUyNDY5NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r464524694", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-08-03T16:30:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5OTA5NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461099095", "bodyText": "Always use lower camel case for variable names", "author": "nikklassen", "createdAt": "2020-07-27T18:52:00Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.spec.ts", "diffHunk": "@@ -91,7 +57,28 @@ describe('LocationService', () => {\n     expect(entityServicespy.getCollection.calls.count()).toBe(1, 'one call');\n   });\n \n-  it('should post the  expected new Locations data', () => {\n+  it('should return expected Locations details of specific id', () => {\n+    const entityServiceSpy = jasmine.createSpyObj<EntityService<Location>>(\n+      'EntityService',\n+      ['getCollection'],\n+    );\n+    locationService = new LocationService(entityServiceSpy);\n+    entityServiceSpy.getCollection.and.returnValue(of(expectedLocationDetails));\n+    locationService\n+      .getLocationDetails(expectedLocatiodId)\n+      .subscribe(\n+        (Locations) =>", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMTUzMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463031531", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:20:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5OTA5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEwMTM1MQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461101351", "bodyText": "This is never used, and I don't think it's a good api, it's not intuitive how this works. Please remove", "author": "nikklassen", "createdAt": "2020-07-27T18:56:01Z", "path": "UR-web-app/src/app/sub-sink.ts", "diffHunk": "@@ -0,0 +1,14 @@\n+import {SubscriptionLike} from 'rxjs';\n+export class SubSink {\n+  protected _subs: SubscriptionLike[] = [];\n+  add(...subscriptions: SubscriptionLike[]): void {\n+    this._subs = this._subs.concat(subscriptions);\n+  }\n+  set sink(subscription: SubscriptionLike) {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMTU4NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463031585", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:20:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEwMTM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEwMTYyNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461101627", "bodyText": "get. LocationDetails is redundant because this is the location service. Should return a single Location", "author": "nikklassen", "createdAt": "2020-07-27T18:56:32Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.ts", "diffHunk": "@@ -14,4 +14,13 @@ export class LocationService {\n   addLocation(location: Location): Observable<Location> {\n     return this.entityService.post(JSON.stringify(location), 'locations');\n   }\n+  getLocationDetails(locationId: string): Observable<Location[]> {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMTY2Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463031666", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:20:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEwMTYyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEwMTgzOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r461101839", "bodyText": "update", "author": "nikklassen", "createdAt": "2020-07-27T18:56:55Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.ts", "diffHunk": "@@ -14,4 +14,13 @@ export class LocationService {\n   addLocation(location: Location): Observable<Location> {\n     return this.entityService.post(JSON.stringify(location), 'locations');\n   }\n+  getLocationDetails(locationId: string): Observable<Location[]> {\n+    return this.entityService.getCollection('locations/' + locationId);\n+  }\n+  updateLocation(location: Location, locationId: string): Observable<Location> {", "originalCommit": "8f093eb9ccffff87c6be2d80ee48864e9d3d5dd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzMTcyNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463031727", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-30T14:20:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEwMTgzOQ=="}], "type": "inlineReview"}, {"oid": "a165339385dfea2b4ec215eea329f4ee726be8ed", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/a165339385dfea2b4ec215eea329f4ee726be8ed", "message": "code review comments has been resolved", "committedDate": "2020-07-30T13:56:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NzE2OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463147169", "bodyText": "This is a pretty awkward type to use all over the place because you don't really have an enum here. I would just make it a map since you need both the key and the value. If you only want values, but want a nice name for them, that's when you would use an enum. I would make success/error codes look like this\nconst errorMessages = {\n  ER_001: 'You do not have permission to view or add or update locations',\n  ER_002: 'Failed to update Location',\n  ER_003: `Can't reactive an already active location`,\n  ER_004: `Can't decommision an already decommissioned location`,\n};\n\nexport type ErrorCode = keyof typeof errorMessages;\n\nexport function getMessage(key: ErrorCode): string {\n  return errorMessages[key];\n}", "author": "nikklassen", "createdAt": "2020-07-30T17:11:32Z", "path": "UR-web-app/src/app/entity/api.response.model.ts", "diffHunk": "@@ -1,4 +1,6 @@\n+import {SuccessCodesEnum} from '../shared/success.codes.enum';\n+\n export interface ApiResponse {\n   message: string;\n-  code: string;\n+  code: keyof typeof SuccessCodesEnum;", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzM5Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463683396", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NzE2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE3NTUzNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463175535", "bodyText": "If you use as Location you don't have include the same type again in expectedLocation: Location.", "author": "nikklassen", "createdAt": "2020-07-30T18:01:14Z", "path": "UR-web-app/src/app/entity/mockLocationData.ts", "diffHunk": "@@ -0,0 +1,50 @@\n+import {Location} from 'src/app/site-coordinator/location/shared/location.model';\n+export const expectedLocation: Location = {\n+  id: 2,\n+  customId: 'customid3',\n+  name: 'name -1-updated0',\n+  description: 'location-descp-updated',\n+  status: '1',\n+  studiesCount: 0,\n+} as Location;", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzQ1Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463683457", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:37:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE3NTUzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MDgyNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463180824", "bodyText": "These tests cases should be written as a user action, not describing the test itself, for example\nit('should update the location when the update button is clicked'). This describes what the test is doing, not how it is doing it.", "author": "nikklassen", "createdAt": "2020-07-30T18:10:45Z", "path": "UR-web-app/src/app/site-coordinator/location/edit-location/edit-location.component.spec.ts", "diffHunk": "@@ -0,0 +1,102 @@\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+\n+import {EditLocationComponent} from './edit-location.component';\n+import {ModalModule} from 'ngx-bootstrap/modal';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../location.module';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {HttpClientModule} from '@angular/common/http';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {LocationService} from '../shared/location.service';\n+import {DebugElement} from '@angular/core';\n+import {By} from '@angular/platform-browser';\n+\n+describe('EditLocationComponent', () => {\n+  let component: EditLocationComponent;\n+  let fixture: ComponentFixture<EditLocationComponent>;\n+  let updateLocation: DebugElement;\n+  let cancelUpdate: DebugElement;\n+  let statusUpdate: DebugElement;\n+  let nameInput: DebugElement;\n+  let descriptionInput: DebugElement;\n+  beforeEach(async(async () => {\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['update'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [EditLocationComponent],\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule,\n+        LocationModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        {provide: LocationService, useValue: locationServiceSpy},\n+      ],\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(EditLocationComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+    updateLocation = fixture.debugElement.query(By.css('[name=\"update\"]'));\n+    cancelUpdate = fixture.debugElement.query(By.css('[name=\"cancel\"]'));\n+    statusUpdate = fixture.debugElement.query(By.css('[name=\"status\"]'));\n+    nameInput = fixture.debugElement.query(By.css('[name=\"name\"]'));\n+    descriptionInput = fixture.debugElement.query(\n+      By.css('[name=\"description\"]'),\n+    );\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+  it('should not show a validation error if the input field are auto filled', () => {\n+    const nameInputs = nameInput.nativeElement as HTMLInputElement;\n+    const descriptionInputs = descriptionInput.nativeElement as HTMLInputElement;\n+    nameInputs.value = 'Location Name';\n+    descriptionInputs.value = 'Testing description value';\n+    fixture.detectChanges();\n+    const errorMsg = fixture.debugElement.query(By.css('.validation-error'));\n+    const errorHelpBlock = fixture.debugElement.query(\n+      By.css('.help-block.with-errors'),\n+    );\n+    expect(errorHelpBlock).toBeFalsy();\n+    expect(errorMsg).toBeFalsy();\n+  });\n+\n+  it('should click on update button and check service is called', fakeAsync(() => {", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzUwOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463683508", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:37:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MDgyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MTI5NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463181295", "bodyText": "What does the update function of the component do? I don't see any tests for the functionality of the component, just that the UI fires the correct event. Same for the other tests", "author": "nikklassen", "createdAt": "2020-07-30T18:11:42Z", "path": "UR-web-app/src/app/site-coordinator/location/edit-location/edit-location.component.spec.ts", "diffHunk": "@@ -0,0 +1,102 @@\n+import {\n+  async,\n+  ComponentFixture,\n+  TestBed,\n+  fakeAsync,\n+} from '@angular/core/testing';\n+\n+import {EditLocationComponent} from './edit-location.component';\n+import {ModalModule} from 'ngx-bootstrap/modal';\n+import {RouterTestingModule} from '@angular/router/testing';\n+import {LocationModule} from '../location.module';\n+import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n+import {HttpClientModule} from '@angular/common/http';\n+import {ToastrModule} from 'ngx-toastr';\n+import {EntityService} from 'src/app/service/entity.service';\n+import {LocationService} from '../shared/location.service';\n+import {DebugElement} from '@angular/core';\n+import {By} from '@angular/platform-browser';\n+\n+describe('EditLocationComponent', () => {\n+  let component: EditLocationComponent;\n+  let fixture: ComponentFixture<EditLocationComponent>;\n+  let updateLocation: DebugElement;\n+  let cancelUpdate: DebugElement;\n+  let statusUpdate: DebugElement;\n+  let nameInput: DebugElement;\n+  let descriptionInput: DebugElement;\n+  beforeEach(async(async () => {\n+    const locationServiceSpy = jasmine.createSpyObj<LocationService>(\n+      'LocationService',\n+      ['update'],\n+    );\n+    await TestBed.configureTestingModule({\n+      declarations: [EditLocationComponent],\n+      imports: [\n+        ModalModule.forRoot(),\n+        RouterTestingModule,\n+        LocationModule,\n+        BrowserAnimationsModule,\n+        HttpClientModule,\n+        ToastrModule.forRoot({\n+          positionClass: 'toast-top-center',\n+          preventDuplicates: true,\n+          enableHtml: true,\n+        }),\n+      ],\n+      providers: [\n+        EntityService,\n+        {provide: LocationService, useValue: locationServiceSpy},\n+      ],\n+    }).compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(EditLocationComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+    updateLocation = fixture.debugElement.query(By.css('[name=\"update\"]'));\n+    cancelUpdate = fixture.debugElement.query(By.css('[name=\"cancel\"]'));\n+    statusUpdate = fixture.debugElement.query(By.css('[name=\"status\"]'));\n+    nameInput = fixture.debugElement.query(By.css('[name=\"name\"]'));\n+    descriptionInput = fixture.debugElement.query(\n+      By.css('[name=\"description\"]'),\n+    );\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+  it('should not show a validation error if the input field are auto filled', () => {\n+    const nameInputs = nameInput.nativeElement as HTMLInputElement;\n+    const descriptionInputs = descriptionInput.nativeElement as HTMLInputElement;\n+    nameInputs.value = 'Location Name';\n+    descriptionInputs.value = 'Testing description value';\n+    fixture.detectChanges();\n+    const errorMsg = fixture.debugElement.query(By.css('.validation-error'));\n+    const errorHelpBlock = fixture.debugElement.query(\n+      By.css('.help-block.with-errors'),\n+    );\n+    expect(errorHelpBlock).toBeFalsy();\n+    expect(errorMsg).toBeFalsy();\n+  });\n+\n+  it('should click on update button and check service is called', fakeAsync(() => {\n+    const updateSpy = spyOn(component, 'update');", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzcwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463683701", "bodyText": "Added", "author": "firdosebtc1", "createdAt": "2020-07-31T15:37:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MTI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcyNjE3Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463726172", "bodyText": "What about should activate/deactivate site when decommission/reactivate is clicked. You also have two tests here now, this one isn't needed", "author": "nikklassen", "createdAt": "2020-07-31T17:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MTI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxMTE2NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r464511165", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-08-03T16:06:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MTI5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4Mjg1Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463182856", "bodyText": "Please remove commented out code", "author": "nikklassen", "createdAt": "2020-07-30T18:14:37Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,154 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"Backwards\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"editLocation\" />\n+                    <span class=\"text__deco font12__light-grey\">\n+                        Edit Location Details</span>\n+                </button>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<div class=\"max__w__1280 add__location\">\n+    <div class=\"bg__white card__inside__pad box__shadow-cmn m-none p-lg\">\n+        <div class=\"border__bottom__periwinkle-gray flex__justify__space-between\">\n+            <div>\n+                <div class=\"mb-lg\">\n+                    <label for=\"Id\">Location ID</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.customId }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"mb-lg\">\n+                    <label for=\"name\">Location Name</label>\n+                    <div class=\"font16__grey\">{{ locationBackup.name }}</div>\n+                </div>\n+            </div>\n+            <div>\n+                <div class=\"mb-lg\">\n+                    <div class=\"active__\">\n+                        {{ locationBackup.status == \"1\" ? \"Active\" : \"DEACTIVATED\" }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+        <div class=\"\">\n+            <div class=\"\">\n+                <div class=\"mb-lg\">\n+                    <label>Description</label>\n+                    <div class=\"font16__grey\">\n+                        {{ locationBackup.description }}\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+\n+    <div class=\"cards__list mb-xlg\">\n+        <div class=\"subheader__title mb-lg mt-xlg\">\n+            Associated Studies ( {{ locationBackup.studiesCount }} )\n+        </div>\n+        <ul *ngIf=\"location.studiesCount > 0\" data-test=\"studiesCount\" class=\"box___shadow__radius\">\n+            <li *ngFor=\"let study of location.studies\">{{ study }}</li>\n+        </ul>\n+    </div>\n+</div>\n+<ng-template #template>\n+\n+    <edit-location [location]=\"location\" [locationBackup]=\"locationBackup\" [locationId]=\"locationId\"\n+        (closeModalEvent)=\"closeModal($event)\">\n+    </edit-location>\n+</ng-template>\n+<!-- <ng-template #template>", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzgxNA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463683814", "bodyText": "Removed.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:38:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4Mjg1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NDgxOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463184818", "bodyText": "Not necessary.", "author": "nikklassen", "createdAt": "2020-07-30T18:18:17Z", "path": "UR-web-app/src/app/site-coordinator/location/edit-location/edit-location.component.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+import {Component, Input, EventEmitter, Output} from '@angular/core';\n+import {Location} from '../shared/location.model';\n+import {UnsubscribeOnDestroyAdapter} from 'src/app/unsubscribe-on-destroy-adapter';\n+import {getMessage} from 'src/app/shared/success.codes.enum';\n+import {LocationService} from '../shared/location.service';\n+import {ToastrService} from 'ngx-toastr';\n+@Component({\n+  selector: 'edit-location',\n+  templateUrl: './edit-location.component.html',\n+  styleUrls: ['./edit-location.component.scss'],\n+})\n+export class EditLocationComponent extends UnsubscribeOnDestroyAdapter {\n+  @Input() location = {} as Location;\n+  @Input() locationBackup = {} as Location;\n+  @Input() locationId = '';\n+  @Output() closeModalEvent = new EventEmitter<Location>();\n+\n+  constructor(\n+    private readonly locationService: LocationService,\n+    private readonly toastr: ToastrService,\n+  ) {\n+    super();\n+  }\n+  closeModal(): void {\n+    this.closeModalEvent.next(this.location);\n+  }\n+  update(): void {\n+    const locationToUpdate = {} as Location;\n+    locationToUpdate.name = this.location.name;\n+    locationToUpdate.description = this.location.description;\n+    this.updateLocation(locationToUpdate);\n+  }\n+  changeStatus(): void {\n+    const locationToUpdate = {} as Location;\n+    locationToUpdate.status = this.location.status === '1' ? '0' : '1';\n+    this.updateLocation(locationToUpdate);\n+  }\n+\n+  updateLocation(locationToUpdate: Location): void {\n+    this.subs.add(", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NDMyMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463684322", "bodyText": "Removed.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:38:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NDgxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODMyMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463188321", "bodyText": "Given what you said about the API this should actually be\nupdate(data: StatusUpdate | FieldUpdate, locationId: string): Observable<Location>\nwhere\ninterface StatusUpdateRequest {\n    status: string\n}\ninterface FieldUpdateRequest {\n    ... // fields we can update\n}\nunfortunately we don't have much ability to change the API, so we just have to do our best to write types that model what the API wants. I'll try to pay attention to the design docs when making future suggestions.\nThe type of EntityService is going to conflict with this. Since we don't have a conventional REST API I don't think EntityService is really going to be able to help here. I would just use the http service directly.", "author": "nikklassen", "createdAt": "2020-07-30T18:24:29Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.ts", "diffHunk": "@@ -14,4 +14,13 @@ export class LocationService {\n   addLocation(location: Location): Observable<Location> {\n     return this.entityService.post(JSON.stringify(location), 'locations');\n   }\n+  get(locationId: string): Observable<Location> {\n+    return this.entityService.get('locations/' + locationId);\n+  }\n+  update(location: Location, locationId: string): Observable<Location> {", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NDQ0Mw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463684443", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:39:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODMyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODQ0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463188449", "bodyText": "No stringify needed.", "author": "nikklassen", "createdAt": "2020-07-30T18:24:41Z", "path": "UR-web-app/src/app/site-coordinator/location/shared/location.service.ts", "diffHunk": "@@ -14,4 +14,13 @@ export class LocationService {\n   addLocation(location: Location): Observable<Location> {\n     return this.entityService.post(JSON.stringify(location), 'locations');\n   }\n+  get(locationId: string): Observable<Location> {\n+    return this.entityService.get('locations/' + locationId);\n+  }\n+  update(location: Location, locationId: string): Observable<Location> {\n+    return this.entityService.put(\n+      JSON.stringify(location),", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NTk5MA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463685990", "bodyText": "we can't do this change as EntityService post and put method bodyData attribute is of type string", "author": "firdosebtc1", "createdAt": "2020-07-31T15:42:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5NTYyNg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463695626", "bodyText": "Then just change the EntityService", "author": "nikklassen", "createdAt": "2020-07-31T15:59:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5OTA3OA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463699078", "bodyText": "I asked that this be fixed the first time you did it as well #588 (comment)", "author": "nikklassen", "createdAt": "2020-07-31T16:06:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxMDI3Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r464510276", "bodyText": "For fixing this we have two options\n1.giving unknown type for bodyData as in HttpClient framework class\n\n2.Directly calling http methods from service layer instead of calling EntityService method as I have done for updateLocation method in LocationService for put and post calls\nPlease suggest us which option you prefer", "author": "firdosebtc1", "createdAt": "2020-08-03T16:04:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEzMTEwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r465131105", "bodyText": "I prefer directly calling http methods", "author": "nikklassen", "createdAt": "2020-08-04T15:20:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4ODQ0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MjEwOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463192109", "bodyText": "This should be something that would make sense to a human like \"edit\" or \"edit icon\"", "author": "nikklassen", "createdAt": "2020-07-30T18:31:25Z", "path": "UR-web-app/src/app/site-coordinator/location/location-details/location-details.component.html", "diffHunk": "@@ -1 +1,154 @@\n-<p>location-details works!</p>\n+<div class=\"subheader p-none pl-none\">\n+    <div class=\"max__w__1280 m-none\">\n+        <div class=\"flex__justify__space-between\">\n+            <div>\n+                <a routerLink=\"/coordinator/locations\" class=\"subheader__title\">\n+                    <img src=\"assets/svgs/back-arrow.svg\" alt=\"Backwards\" />\n+                    <span>Location Details</span>\n+                </a>\n+            </div>\n+            <div>\n+                <button class=\"btn font12__light-grey p-none\" name=\"edit_location\" (click)=\"openModal(template)\">\n+                    <img class=\"mr-xs\" src=\"assets/images/edit-icon.gif\" alt=\"editLocation\" />", "originalCommit": "a165339385dfea2b4ec215eea329f4ee726be8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NjExOQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/685#discussion_r463686119", "bodyText": "Updated.", "author": "firdosebtc1", "createdAt": "2020-07-31T15:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MjEwOQ=="}], "type": "inlineReview"}, {"oid": "3146450397d57b3857969a15dd4ea9cec11ea93c", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/3146450397d57b3857969a15dd4ea9cec11ea93c", "message": "code review comments has been resolved", "committedDate": "2020-07-31T15:24:28Z", "type": "commit"}, {"oid": "c2893674608e03405f79358f32165482fe63ab2e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c2893674608e03405f79358f32165482fe63ab2e", "message": "review comments has been fixed", "committedDate": "2020-08-03T15:40:45Z", "type": "commit"}, {"oid": "4a7f0a47d04d3439b343079968e2cdb02d11bae9", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/4a7f0a47d04d3439b343079968e2cdb02d11bae9", "message": "Merge branch 'develop' of https://github.com/GoogleCloudPlatform/fda-mystudies into urwebapp-location-details\n\n# Conflicts:\n#\tUR-web-app/src/app/app.module.ts\n#\tUR-web-app/src/app/http-interceptors/auth.interceptor.ts\n#\tUR-web-app/src/app/sub-sink.ts", "committedDate": "2020-08-05T06:28:23Z", "type": "commit"}, {"oid": "415dd7736e1f9320727caa63ee9e6754479b141d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/415dd7736e1f9320727caa63ee9e6754479b141d", "message": "Merge branch 'develop' into urwebapp-location-details\n\n# Conflicts:\n#\tUR-web-app/src/assets/css/style.scss", "committedDate": "2020-08-05T16:17:42Z", "type": "commit"}]}