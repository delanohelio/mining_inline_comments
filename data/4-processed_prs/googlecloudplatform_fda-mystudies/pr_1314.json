{"pr_number": 1314, "pr_title": "Particpant manager webapp refresh token implementation", "pr_createdAt": "2020-10-12T14:55:28Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1314", "timeline": [{"oid": "38d7f77c3a01e188fd9832898adf86d4ca5ad049", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/38d7f77c3a01e188fd9832898adf86d4ca5ad049", "message": "Refresh token-implementation\n\nRefresh token-implementation", "committedDate": "2020-10-05T00:05:42Z", "type": "commit"}, {"oid": "c2ed312bc46c326733128e42a01f9448a3076ccc", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/c2ed312bc46c326733128e42a01f9448a3076ccc", "message": "modification of refresh token header\n\nmodification of refresh token header", "committedDate": "2020-10-05T04:33:26Z", "type": "commit"}, {"oid": "cb3ab6652c582240753e9a8f8c19764a5e40ed4b", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cb3ab6652c582240753e9a8f8c19764a5e40ed4b", "message": "lint build fix\n\nlint build fix", "committedDate": "2020-10-06T03:13:22Z", "type": "commit"}, {"oid": "75a420f89d5e6b1b3c22006719868d4ce4222243", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/75a420f89d5e6b1b3c22006719868d4ce4222243", "message": "Merge branch 'develop' into particpant-manager-webapp-refresh-token-implementation", "committedDate": "2020-10-06T01:49:18Z", "type": "commit"}, {"oid": "b00fcc80cf1885a445347c1b586e5716bf72d885", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/b00fcc80cf1885a445347c1b586e5716bf72d885", "message": "Merge branch 'develop' into particpant-manager-webapp-refresh-token-implementation", "committedDate": "2020-10-08T12:35:17Z", "type": "commit"}, {"oid": "adbbb7762670a2a4d2568986076be900e6be8840", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/adbbb7762670a2a4d2568986076be900e6be8840", "message": "header issue fix\n\nheader issue fix", "committedDate": "2020-10-12T13:09:36Z", "type": "commit"}, {"oid": "7b2858c576b223747eb380677aeaea7142d20b04", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7b2858c576b223747eb380677aeaea7142d20b04", "message": "removed-work-arround code\n\nremoved-work-arround code", "committedDate": "2020-10-12T14:48:59Z", "type": "commit"}, {"oid": "cef629d73fc5ff8e798d2469a5fe6babc4488a81", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/cef629d73fc5ff8e798d2469a5fe6babc4488a81", "message": "Merge branch 'develop' into particpant-manager-webapp-refresh-token-implementation", "committedDate": "2020-10-12T14:56:15Z", "type": "commit"}, {"oid": "9e74f189d91a118d5f6fe2ff40b160e66e7bde6d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9e74f189d91a118d5f6fe2ff40b160e66e7bde6d", "message": "header issue fix PR 1100\n\nheader issue fix PR 1100", "committedDate": "2020-10-12T16:14:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0NzUzNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1314#discussion_r503947537", "bodyText": "Please use a type for error instead of disabling the linter.", "author": "nikklassen", "createdAt": "2020-10-13T13:23:27Z", "path": "participant-manager/src/app/http-interceptors/auth.interceptor.ts", "diffHunk": "@@ -33,56 +40,104 @@ export class AuthInterceptor implements HttpInterceptor {\n \n     if (!this.authService.hasCredentials()) {\n       return next.handle(req).pipe(\n-        this.handleError(),\n+        this.handleError(req, next),\n         finalize(() => {\n           void this.spinner.hide();\n         }),\n       );\n     }\n+\n+    return next.handle(this.setHeaders(req)).pipe(\n+      this.handleError(req, next),\n+      finalize(() => {\n+        void this.spinner.hide();\n+      }),\n+    );\n+  }\n+  private handle401Error(request: HttpRequest<unknown>, next: HttpHandler) {\n+    this.isRefreshing = true;\n+    this.refreshTokenSubject.next(null);\n+    return this.authService.refreshToken().subscribe(\n+      (authServerResponse: AccessToken) => {\n+        this.refreshTokenSubject.next(authServerResponse);\n+        sessionStorage.setItem('accessToken', authServerResponse.access_token);\n+        sessionStorage.setItem(\n+          'refreshToken',\n+          authServerResponse.refresh_token,\n+        );\n+        return next.handle(this.setHeaders(request)).pipe(\n+          catchError((error) => {\n+            return throwError(error);\n+          }),\n+        );\n+      },\n+      (error) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access", "originalCommit": "9e74f189d91a118d5f6fe2ff40b160e66e7bde6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkwNTUwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1314#discussion_r504905501", "bodyText": "This has been modified as you suggested", "author": "prakashm181", "createdAt": "2020-10-14T19:01:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0NzUzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0NzkyMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1314#discussion_r503947923", "bodyText": "If you're only ever passing emitting null then make the type null.", "author": "nikklassen", "createdAt": "2020-10-13T13:23:58Z", "path": "participant-manager/src/app/http-interceptors/auth.interceptor.ts", "diffHunk": "@@ -8,21 +8,28 @@ import {\n   HttpErrorResponse,\n } from '@angular/common/http';\n import {finalize} from 'rxjs/operators';\n-import {Observable, OperatorFunction, throwError} from 'rxjs';\n+import {BehaviorSubject, Observable, OperatorFunction, throwError} from 'rxjs';\n import {catchError} from 'rxjs/operators';\n import {ToastrService} from 'ngx-toastr';\n import {getMessage} from '../shared/error.codes.enum';\n import {AuthService} from '../service/auth.service';\n import {ApiResponse} from '../entity/api.response.model';\n import {environment} from 'src/environments/environment';\n import {CookieService} from 'ngx-cookie-service';\n+import {AccessToken} from '../entity/access-token';\n+import {Router} from '@angular/router';\n @Injectable()\n export class AuthInterceptor implements HttpInterceptor {\n+  private isRefreshing = false;\n+  private readonly refreshTokenSubject: BehaviorSubject<\n+    unknown\n+  > = new BehaviorSubject<unknown>(null);", "originalCommit": "9e74f189d91a118d5f6fe2ff40b160e66e7bde6d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0OTQ0Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1314#discussion_r503949442", "bodyText": "Can you use a more descriptive name than skip? People reading this code aren't going to be able to tell how it's used, or why it's a header. Ideally this isn't a header at all (headers are supposed to be passed to the server).", "author": "nikklassen", "createdAt": "2020-10-13T13:26:04Z", "path": "participant-manager/src/app/http-interceptors/auth.interceptor.ts", "diffHunk": "@@ -33,56 +40,104 @@ export class AuthInterceptor implements HttpInterceptor {\n \n     if (!this.authService.hasCredentials()) {\n       return next.handle(req).pipe(\n-        this.handleError(),\n+        this.handleError(req, next),\n         finalize(() => {\n           void this.spinner.hide();\n         }),\n       );\n     }\n+\n+    return next.handle(this.setHeaders(req)).pipe(\n+      this.handleError(req, next),\n+      finalize(() => {\n+        void this.spinner.hide();\n+      }),\n+    );\n+  }\n+  private handle401Error(request: HttpRequest<unknown>, next: HttpHandler) {\n+    this.isRefreshing = true;\n+    this.refreshTokenSubject.next(null);\n+    return this.authService.refreshToken().subscribe(\n+      (authServerResponse: AccessToken) => {\n+        this.refreshTokenSubject.next(authServerResponse);\n+        sessionStorage.setItem('accessToken', authServerResponse.access_token);\n+        sessionStorage.setItem(\n+          'refreshToken',\n+          authServerResponse.refresh_token,\n+        );\n+        return next.handle(this.setHeaders(request)).pipe(\n+          catchError((error) => {\n+            return throwError(error);\n+          }),\n+        );\n+      },\n+      (error) => {\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n+        const customError = error.error as ApiResponse;\n+        if (getMessage(customError.error_code)) {\n+          this.toasterService.error(getMessage(customError.error_code));\n+        }\n+        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n+        if (error.status === 401) {\n+          sessionStorage.clear();\n+          void this.router.navigate(['/']);\n+        }\n+      },\n+    );\n+  }\n+  private setHeaders(req: HttpRequest<unknown>) {\n     if (req.url.includes(`${environment.authServerUrl}`)) {\n-      const headers = req.headers\n+      let headers = req.headers\n         .set('Accept', 'application/json')\n         .set('correlationId', sessionStorage.getItem('correlationId') || '')\n         .set('appId', this.authService.appId)\n         .set('mobilePlatform', this.authService.mobilePlatform)\n+        .set('Access-Control-Allow-Origin', '*')\n+        .set(\n+          'Access-Control-Allow-Headers',\n+          'Origin, X-Requested-With, Content-Type, Accept',\n+        )\n         .set(\n           'Authorization',\n           `Bearer ${sessionStorage.getItem('accessToken') || ''} `,\n         );\n       if (!req.headers.has('Content-Type')) {\n-        headers.set('Content-Type', 'application/x-www-form-urlencoded');\n+        headers = headers.append(\n+          'Content-Type',\n+          'application/x-www-form-urlencoded',\n+        );\n       }\n-      const authReq = req.clone({headers});\n-      return next.handle(authReq).pipe(\n-        this.handleError(),\n-        finalize(() => {\n-          void this.spinner.hide();\n-        }),\n-      );\n+      return req.clone({headers});\n     } else {\n-      const headers = req.headers\n+      let headers = req.headers\n         .set('userId', sessionStorage.getItem('userId') || '')\n+        .set('Access-Control-Allow-Origin', '*')\n+        .set(\n+          'Access-Control-Allow-Headers',\n+          'Origin, X-Requested-With, Content-Type, Accept',\n+        )\n         .set(\n           'Authorization',\n           `Bearer ${sessionStorage.getItem('accessToken') || ''} `,\n         );\n-      if (!req.headers.has('Content-Type')) {\n-        req.headers.set('Content-Type', 'application/json');\n+\n+      if (!req.headers.get('skip')) {", "originalCommit": "9e74f189d91a118d5f6fe2ff40b160e66e7bde6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkwNjI4NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/1314#discussion_r504906285", "bodyText": "Now I have modified the string name to skipIfUpload", "author": "prakashm181", "createdAt": "2020-10-14T19:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0OTQ0Mg=="}], "type": "inlineReview"}, {"oid": "1d2aedb7f35b9f5c4e56d6e5bcc0dd27a0029113", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/1d2aedb7f35b9f5c4e56d6e5bcc0dd27a0029113", "message": "Merge branch 'develop' into particpant-manager-webapp-refresh-token-implementation", "committedDate": "2020-10-14T18:24:45Z", "type": "commit"}, {"oid": "6bb03b387ff7ed22a29412d859b3682e3c465bec", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/6bb03b387ff7ed22a29412d859b3682e3c465bec", "message": "Merge branch 'develop' into particpant-manager-webapp-refresh-token-implementation", "committedDate": "2020-10-14T18:25:36Z", "type": "commit"}, {"oid": "eca8dc32ce648fc723822807a11f932e132b9147", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/eca8dc32ce648fc723822807a11f932e132b9147", "message": "client comment fix\n\nclient comment fix", "committedDate": "2020-10-14T18:38:35Z", "type": "commit"}, {"oid": "444fc80a8b5b2b3c8b4b55778bd842993a7494d9", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/444fc80a8b5b2b3c8b4b55778bd842993a7494d9", "message": "client comment fix\n\nclient comment fix", "committedDate": "2020-10-14T18:45:41Z", "type": "commit"}, {"oid": "15fc0194ce6cbfa451145967296dbf0349fda501", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/15fc0194ce6cbfa451145967296dbf0349fda501", "message": "lint command run\n\nlint command run", "committedDate": "2020-10-14T19:00:53Z", "type": "commit"}, {"oid": "ff63c3eff95be7d57847d07f839f85abf04a123d", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ff63c3eff95be7d57847d07f839f85abf04a123d", "message": "Merge branch 'particpant-manager-webapp-refresh-token-implementation' of https://github.com/GoogleCloudPlatform/fda-mystudies into particpant-manager-webapp-refresh-token-implementation", "committedDate": "2020-10-14T19:01:03Z", "type": "commit"}, {"oid": "ce06246b8872c072a0040c9045677c12c1ee5882", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ce06246b8872c072a0040c9045677c12c1ee5882", "message": "Merge branch 'develop' into particpant-manager-webapp-refresh-token-implementation", "committedDate": "2020-10-15T17:03:04Z", "type": "commit"}]}