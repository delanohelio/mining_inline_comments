{"pr_number": 626, "pr_title": "Participant manager post /locations endpoint", "pr_createdAt": "2020-07-13T16:10:38Z", "pr_url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626", "timeline": [{"oid": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/456bd182f4c3993007d56f5da72bc269c2f91c1f", "message": "code refactor of  Add new location endpoint", "committedDate": "2020-07-13T16:08:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDIzNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458170237", "bodyText": "What's the advantage of doing this in a filter? If we do this in the controllers we benefit from the error handling there.", "author": "nikklassen", "createdAt": "2020-07-21T15:06:13Z", "path": "common-modules/common-service/src/main/java/com/google/cloud/healthcare/fdamystudies/filter/ActiveUserFilter.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.filter;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.CommonConstants.USER_ID_HEADER;\n+import static com.google.cloud.healthcare.fdamystudies.common.JsonUtils.getObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import javax.annotation.PostConstruct;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.server.PathContainer;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.util.pattern.PathPattern;\n+import org.springframework.web.util.pattern.PathPatternParser;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Component\n+@Order(3)\n+public class ActiveUserFilter implements Filter {", "originalCommit": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NTg4NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458545884", "bodyText": "We pass USER_ID_HEADER in most of API's in participant-manager-service, so we added filter to avoid code duplication.", "author": "madhurya-btc", "createdAt": "2020-07-22T05:38:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NDgxMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r459694813", "bodyText": "Ok, given that I have a few suggestions. First of all, this shouldn't be in the common services because the participant manager is the one that defines the /locations/ route. Second, it would be great if we could integrate this into Spring's authorization framework instead of writing our own mapping logic from scratch. See https://docs.spring.io/spring-security/site/docs/current/reference/html5/#mvc-requestmatcher for an example of how you can avoid a lot of the logic in the class with request matchers.", "author": "nikklassen", "createdAt": "2020-07-23T20:00:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NDg3Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r459864872", "bodyText": "Agree with you, we'll move ActiveUserFilter to participant manager service.", "author": "dhanyak-btc", "createdAt": "2020-07-24T05:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4OTA2Mg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r462989062", "bodyText": "Moved ActiveUserFilter to participant manager service.", "author": "madhurya-btc", "createdAt": "2020-07-30T13:18:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE3MDIzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzMzMw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458203333", "bodyText": "I would prefer we use something built into the test framework to do this. It looks like https://junit.org/junit5/docs/current/user-guide/#writing-tests-display-name-generator-default should do what you want.", "author": "nikklassen", "createdAt": "2020-07-21T15:50:02Z", "path": "common-modules/common-tests/src/main/java/com/google/cloud/healthcare/fdamystudies/common/BaseMockIT.java", "diffHunk": "@@ -130,4 +139,14 @@ protected MvcResult performPost(\n         .andExpect(content().string(containsString(expectedTextInResponseBody)))\n         .andReturn();\n   }\n+\n+  @BeforeEach", "originalCommit": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0ODcxOA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458548718", "bodyText": "We added these methods to analyze build issues. @DisplayName used to provide custom name for test methods. In below sample code Junit framework displays \"Always UP\" instead of \"health\" in results tab.\n@Test\n@DisplayName(\"Always UP\")\npublic void health() throws Exception {}", "author": "madhurya-btc", "createdAt": "2020-07-22T05:47:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NzMzNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r459697335", "bodyText": "My mistake, I thought setting the test name would automatically log the test names as they run. It looks like the correct way to do this is with https://www.baeldung.com/junit-testwatcher", "author": "nikklassen", "createdAt": "2020-07-23T20:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjM1NQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458206355", "bodyText": "Services should return business object, i.e. LocationEntity", "author": "nikklassen", "createdAt": "2020-07-21T15:54:09Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.Optional;\n+\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.ManageLocation;\n+import com.google.cloud.healthcare.fdamystudies.mapper.LocationMapper;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.LocationRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Service\n+public class LocationServiceImpl implements LocationService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(LocationServiceImpl.class.getName());\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private LocationRepository locationRepository;\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse addNewLocation(LocationRequest locationRequest) {", "originalCommit": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0OTYzMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458549632", "bodyText": "I have followed the approach of audit-log-service, so returning LocationResponse.", "author": "madhurya-btc", "createdAt": "2020-07-22T05:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NzU0Ng==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r459697546", "bodyText": "That was incorrect in the audit-log-service as well.", "author": "nikklassen", "createdAt": "2020-07-23T20:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjQyNw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458206427", "bodyText": "Move this to the controller", "author": "nikklassen", "createdAt": "2020-07-21T15:54:15Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.Optional;\n+\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.ManageLocation;\n+import com.google.cloud.healthcare.fdamystudies.mapper.LocationMapper;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.LocationRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Service\n+public class LocationServiceImpl implements LocationService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(LocationServiceImpl.class.getName());\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private LocationRepository locationRepository;\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse addNewLocation(LocationRequest locationRequest) {\n+    logger.entry(\"begin addNewLocation()\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminUser =\n+        userRegAdminRepository.findById(locationRequest.getUserId());\n+\n+    UserRegAdminEntity adminUser = optUserRegAdminUser.get();\n+    ManageLocation manageLocation = ManageLocation.valueOf(adminUser.getManageLocations());\n+    if (ManageLocation.DENY.equals(manageLocation)) {\n+      logger.exit(\n+          String.format(\n+              \"Add location failed with error code=%s\", ErrorCode.LOCATION_ACCESS_DENIED));\n+      return new LocationResponse(ErrorCode.LOCATION_ACCESS_DENIED);\n+    }\n+    LocationEntity locationEntity = LocationMapper.fromLocationRequest(locationRequest);\n+    locationEntity.setCreatedBy(adminUser.getId());\n+    locationEntity = locationRepository.saveAndFlush(locationEntity);\n+    logger.exit(String.format(\"locationId=%s\", locationEntity.getId()));\n+\n+    return LocationMapper.toLocationResponse(locationEntity);", "originalCommit": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1MDMxMg==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458550312", "bodyText": "I have followed the approach of audit-log-service, so for consistency will keep the code in service layer. Otherwise it will result in lots of re-work in other services also.", "author": "madhurya-btc", "createdAt": "2020-07-22T05:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5Nzc3Nw==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r459697777", "bodyText": "This was incorrect in the audit-log-service as well, it should've been corrected. I am making the same comments on the new auth service.", "author": "nikklassen", "createdAt": "2020-07-23T20:06:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjY0OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458206649", "bodyText": "Move this to the controller", "author": "nikklassen", "createdAt": "2020-07-21T15:54:34Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/service/LocationServiceImpl.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.service;\n+\n+import java.util.Optional;\n+\n+import org.slf4j.ext.XLogger;\n+import org.slf4j.ext.XLoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.ErrorCode;\n+import com.google.cloud.healthcare.fdamystudies.common.ManageLocation;\n+import com.google.cloud.healthcare.fdamystudies.mapper.LocationMapper;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+import com.google.cloud.healthcare.fdamystudies.model.UserRegAdminEntity;\n+import com.google.cloud.healthcare.fdamystudies.repository.LocationRepository;\n+import com.google.cloud.healthcare.fdamystudies.repository.UserRegAdminRepository;\n+\n+@Service\n+public class LocationServiceImpl implements LocationService {\n+\n+  private XLogger logger = XLoggerFactory.getXLogger(LocationServiceImpl.class.getName());\n+\n+  @Autowired private UserRegAdminRepository userRegAdminRepository;\n+\n+  @Autowired private LocationRepository locationRepository;\n+\n+  @Override\n+  @Transactional\n+  public LocationResponse addNewLocation(LocationRequest locationRequest) {\n+    logger.entry(\"begin addNewLocation()\");\n+\n+    Optional<UserRegAdminEntity> optUserRegAdminUser =\n+        userRegAdminRepository.findById(locationRequest.getUserId());\n+\n+    UserRegAdminEntity adminUser = optUserRegAdminUser.get();\n+    ManageLocation manageLocation = ManageLocation.valueOf(adminUser.getManageLocations());\n+    if (ManageLocation.DENY.equals(manageLocation)) {\n+      logger.exit(\n+          String.format(\n+              \"Add location failed with error code=%s\", ErrorCode.LOCATION_ACCESS_DENIED));\n+      return new LocationResponse(ErrorCode.LOCATION_ACCESS_DENIED);\n+    }\n+    LocationEntity locationEntity = LocationMapper.fromLocationRequest(locationRequest);", "originalCommit": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1MDcwMQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458550701", "bodyText": "I have followed the approach of audit-log-service, so for consistency will keep the code in service layer. Otherwise it will result in lots of re-work in other services also.", "author": "madhurya-btc", "createdAt": "2020-07-22T05:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjY0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5ODM3OQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r459698379", "bodyText": "Dhanya is moving this logic in the auth service as well.", "author": "nikklassen", "createdAt": "2020-07-23T20:07:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNjY0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxMzk2NA==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458213964", "bodyText": "If this always has one value it's not really adding any information. You can just set this status in the HTTP controller.", "author": "nikklassen", "createdAt": "2020-07-21T16:04:50Z", "path": "participant-manager-module/participant-manager-service/src/main/java/com/google/cloud/healthcare/fdamystudies/mapper/LocationMapper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Use of this source code is governed by an MIT-style\n+ * license that can be found in the LICENSE file or at\n+ * https://opensource.org/licenses/MIT.\n+ */\n+\n+package com.google.cloud.healthcare.fdamystudies.mapper;\n+\n+import static com.google.cloud.healthcare.fdamystudies.common.CommonConstants.ACTIVE_STATUS;\n+import static com.google.cloud.healthcare.fdamystudies.common.CommonConstants.NO;\n+\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationRequest;\n+import com.google.cloud.healthcare.fdamystudies.beans.LocationResponse;\n+import com.google.cloud.healthcare.fdamystudies.common.MessageCode;\n+import com.google.cloud.healthcare.fdamystudies.model.LocationEntity;\n+\n+public final class LocationMapper {\n+\n+  private LocationMapper() {}\n+\n+  public static LocationResponse toLocationResponse(LocationEntity location) {\n+    LocationResponse response = new LocationResponse(MessageCode.ADD_LOCATION_SUCCESS);", "originalCommit": "456bd182f4c3993007d56f5da72bc269c2f91c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1MjIwNQ==", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/pull/626#discussion_r458552205", "bodyText": "This code has been refactored as below, follow up  PR #653\n ```\n\npublic static LocationResponse toLocationResponse(\nLocationEntity location, MessageCode messageCode) {\nLocationResponse response = new LocationResponse(messageCode);}", "author": "madhurya-btc", "createdAt": "2020-07-22T05:57:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxMzk2NA=="}], "type": "inlineReview"}, {"oid": "7bf1f46ef4988887524e6e1aab2a7952bbcaf7c3", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/7bf1f46ef4988887524e6e1aab2a7952bbcaf7c3", "message": "Merge branch 'participant-manager-service-sites-integration-test-cases' into participant-manager-location-endpoint", "committedDate": "2020-07-22T15:17:21Z", "type": "commit"}, {"oid": "e52511b819b3507d853b9c48ce2ed46e7c660a48", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/e52511b819b3507d853b9c48ce2ed46e7c660a48", "message": "Resolved conflicts", "committedDate": "2020-07-22T17:22:42Z", "type": "commit"}, {"oid": "0147edfd52f3a6d260365152ebd1cd87dc082f1e", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/0147edfd52f3a6d260365152ebd1cd87dc082f1e", "message": "Remove Request/Response objects from service layer", "committedDate": "2020-07-24T15:52:17Z", "type": "commit"}, {"oid": "ffccb47625dfb354874717dcb4f90d323ff62c3f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/ffccb47625dfb354874717dcb4f90d323ff62c3f", "message": "Fix compilation error", "committedDate": "2020-07-24T15:57:37Z", "type": "commit"}, {"oid": "d0b2a61c9e3f3fac0c25351f687d1b13295a7d16", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/d0b2a61c9e3f3fac0c25351f687d1b13295a7d16", "message": "Active user filter moved to participant-manager", "committedDate": "2020-07-30T13:14:52Z", "type": "commit"}, {"oid": "8142f413672b30ac4ad627d0b7ca20f8b3e4d254", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/8142f413672b30ac4ad627d0b7ca20f8b3e4d254", "message": "Merge branch 'develop' into participant-manager-location-endpoint", "committedDate": "2020-08-10T08:37:49Z", "type": "commit"}, {"oid": "9a722bd02ea27a44e84d175796fa0dcb6d5b2f10", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/9a722bd02ea27a44e84d175796fa0dcb6d5b2f10", "message": "Merge conflicts", "committedDate": "2020-08-10T08:46:19Z", "type": "commit"}, {"oid": "bb0f71e2d92ba91e5c751931c0c21fdada7a280f", "url": "https://github.com/GoogleCloudPlatform/fda-mystudies/commit/bb0f71e2d92ba91e5c751931c0c21fdada7a280f", "message": "Merge conflicts", "committedDate": "2020-08-10T09:06:25Z", "type": "commit"}]}