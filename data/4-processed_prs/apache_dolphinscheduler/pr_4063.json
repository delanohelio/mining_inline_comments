{"pr_number": 4063, "pr_title": "[FEATURE#4029] alert spi support script alert", "pr_createdAt": "2020-11-13T03:17:08Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/4063", "timeline": [{"oid": "f4ef86c50bc25cb39d48565025651b775433b934", "url": "https://github.com/apache/dolphinscheduler/commit/f4ef86c50bc25cb39d48565025651b775433b934", "message": "[FEATURE#4029] alert spi support script alert\n\nthis closes #4029", "committedDate": "2020-11-13T03:16:05Z", "type": "commit"}, {"oid": "4c7743f3bd9639f6fba8470545ca40d61923bee1", "url": "https://github.com/apache/dolphinscheduler/commit/4c7743f3bd9639f6fba8470545ca40d61923bee1", "message": "code style", "committedDate": "2020-11-13T03:59:00Z", "type": "commit"}, {"oid": "05eabda3916faba01eb3e279b8fae6947bba23ad", "url": "https://github.com/apache/dolphinscheduler/commit/05eabda3916faba01eb3e279b8fae6947bba23ad", "message": "code smell", "committedDate": "2020-11-13T04:10:40Z", "type": "commit"}, {"oid": "e4641da58f89f40502a27c8c9a0e3bb1ff178b17", "url": "https://github.com/apache/dolphinscheduler/commit/e4641da58f89f40502a27c8c9a0e3bb1ff178b17", "message": "add test", "committedDate": "2020-11-13T09:51:26Z", "type": "commit"}, {"oid": "03ed107664a1f358a8ce834981225cb773a723c4", "url": "https://github.com/apache/dolphinscheduler/commit/03ed107664a1f358a8ce834981225cb773a723c4", "message": "code style", "committedDate": "2020-11-13T10:02:32Z", "type": "commit"}, {"oid": "5b14319cbc16fd1cf559425be6d543ec375daf47", "url": "https://github.com/apache/dolphinscheduler/commit/5b14319cbc16fd1cf559425be6d543ec375daf47", "message": "code smell", "committedDate": "2020-11-13T10:25:16Z", "type": "commit"}, {"oid": "66afe5afcc2f79acdae553f80f9fc2f29d927f24", "url": "https://github.com/apache/dolphinscheduler/commit/66afe5afcc2f79acdae553f80f9fc2f29d927f24", "message": "code style", "committedDate": "2020-11-13T10:39:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM3MjQwNw==", "url": "https://github.com/apache/dolphinscheduler/pull/4063#discussion_r523372407", "bodyText": "the 'alarm server' should be changed to 'alert server'", "author": "gaojun2048", "createdAt": "2020-11-14T04:07:25Z", "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-script/src/main/java/org/apache/dolphinscheduler/plugin/alert/script/ScriptAlertChannelFactory.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.script;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertChannel;\n+import org.apache.dolphinscheduler.spi.alert.AlertChannelFactory;\n+import org.apache.dolphinscheduler.spi.params.InputParam;\n+import org.apache.dolphinscheduler.spi.params.RadioParam;\n+import org.apache.dolphinscheduler.spi.params.base.ParamsOptions;\n+import org.apache.dolphinscheduler.spi.params.base.PluginParams;\n+import org.apache.dolphinscheduler.spi.params.base.Validate;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * ScriptAlertChannelFactory\n+ */\n+public class ScriptAlertChannelFactory implements AlertChannelFactory {\n+\n+    @Override\n+    public String getName() {\n+        return \"script alert\";\n+    }\n+\n+    @Override\n+    public List<PluginParams> getParams() {\n+\n+        InputParam scriptUserParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_USER_PARAMS, ScriptParamsConstants.SCRIPT_USER_PARAMS)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(false)\n+                        .build())\n+                .setPlaceholder(\"please enter your custom parameters, which will be passed to you when calling your script\")\n+                .build();\n+        // need check file type and file exist\n+        InputParam scriptPathParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_PATH, ScriptParamsConstants.SCRIPT_PATH)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(true)\n+                        .build())\n+                .setPlaceholder(\"please upload the file to the disk directory of the alarm server, and ensure that the path is absolute and has the corresponding access rights\")", "originalCommit": "66afe5afcc2f79acdae553f80f9fc2f29d927f24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM3MjUwOA==", "url": "https://github.com/apache/dolphinscheduler/pull/4063#discussion_r523372508", "bodyText": "If only shell type is supported, why use RadioParam", "author": "gaojun2048", "createdAt": "2020-11-14T04:08:56Z", "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-script/src/main/java/org/apache/dolphinscheduler/plugin/alert/script/ScriptAlertChannelFactory.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.script;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertChannel;\n+import org.apache.dolphinscheduler.spi.alert.AlertChannelFactory;\n+import org.apache.dolphinscheduler.spi.params.InputParam;\n+import org.apache.dolphinscheduler.spi.params.RadioParam;\n+import org.apache.dolphinscheduler.spi.params.base.ParamsOptions;\n+import org.apache.dolphinscheduler.spi.params.base.PluginParams;\n+import org.apache.dolphinscheduler.spi.params.base.Validate;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * ScriptAlertChannelFactory\n+ */\n+public class ScriptAlertChannelFactory implements AlertChannelFactory {\n+\n+    @Override\n+    public String getName() {\n+        return \"script alert\";\n+    }\n+\n+    @Override\n+    public List<PluginParams> getParams() {\n+\n+        InputParam scriptUserParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_USER_PARAMS, ScriptParamsConstants.SCRIPT_USER_PARAMS)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(false)\n+                        .build())\n+                .setPlaceholder(\"please enter your custom parameters, which will be passed to you when calling your script\")\n+                .build();\n+        // need check file type and file exist\n+        InputParam scriptPathParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_PATH, ScriptParamsConstants.SCRIPT_PATH)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(true)\n+                        .build())\n+                .setPlaceholder(\"please upload the file to the disk directory of the alarm server, and ensure that the path is absolute and has the corresponding access rights\")\n+                .build();\n+\n+        RadioParam scriptTypeParams = RadioParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_TYPE, ScriptParamsConstants.SCRIPT_TYPE)\n+                .addParamsOptions(new ParamsOptions(ScriptType.SHELL.getDescp(), ScriptType.SHELL.getDescp(), false))", "originalCommit": "66afe5afcc2f79acdae553f80f9fc2f29d927f24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63522adc6d1f176b6809f4b108d17822aeef14fb", "url": "https://github.com/apache/dolphinscheduler/commit/63522adc6d1f176b6809f4b108d17822aeef14fb", "message": "fix name error", "committedDate": "2020-11-14T06:47:48Z", "type": "commit"}]}