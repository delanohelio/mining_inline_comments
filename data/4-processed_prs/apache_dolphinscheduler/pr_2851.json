{"pr_number": 2851, "pr_title": "add MicroBenchMark model", "pr_createdAt": "2020-05-31T09:13:09Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/2851", "timeline": [{"oid": "3f6c65a2e532df77eb654509075a429bdc6c7876", "url": "https://github.com/apache/dolphinscheduler/commit/3f6c65a2e532df77eb654509075a429bdc6c7876", "message": "add MicroBenchMark model", "committedDate": "2020-05-31T09:07:06Z", "type": "commit"}, {"oid": "83a9355ba55316c76c4fd1ca627c67adfaa708a0", "url": "https://github.com/apache/dolphinscheduler/commit/83a9355ba55316c76c4fd1ca627c67adfaa708a0", "message": "Merge branch 'dev' into jmh", "committedDate": "2020-05-31T10:20:19Z", "type": "commit"}, {"oid": "f3b9b1b74b5bdadee4f1d3db98badf5cfa431a27", "url": "https://github.com/apache/dolphinscheduler/commit/f3b9b1b74b5bdadee4f1d3db98badf5cfa431a27", "message": "add log", "committedDate": "2020-06-01T06:09:17Z", "type": "commit"}, {"oid": "9d82dda76eb0f455dea94db31145c0f2829f20ef", "url": "https://github.com/apache/dolphinscheduler/commit/9d82dda76eb0f455dea94db31145c0f2829f20ef", "message": "Merge remote-tracking branch 'origin/jmh' into jmh", "committedDate": "2020-06-01T06:24:09Z", "type": "commit"}, {"oid": "41bbd20d32c3356dff6dd66fb061da865e807ec5", "url": "https://github.com/apache/dolphinscheduler/commit/41bbd20d32c3356dff6dd66fb061da865e807ec5", "message": "fix propertyName", "committedDate": "2020-06-01T06:52:12Z", "type": "commit"}, {"oid": "a65f9cf4d11f7db2228e8ae4537a8ca4a34ef1eb", "url": "https://github.com/apache/dolphinscheduler/commit/a65f9cf4d11f7db2228e8ae4537a8ca4a34ef1eb", "message": "small change", "committedDate": "2020-06-01T08:35:04Z", "type": "commit"}, {"oid": "29d1c9daa1c6fcb95b9dead2ed0e13e7d476733a", "url": "https://github.com/apache/dolphinscheduler/commit/29d1c9daa1c6fcb95b9dead2ed0e13e7d476733a", "message": "add ut", "committedDate": "2020-06-01T13:00:59Z", "type": "commit"}, {"oid": "b4242e009fcfc5e8bf2a53ace89902757ead9427", "url": "https://github.com/apache/dolphinscheduler/commit/b4242e009fcfc5e8bf2a53ace89902757ead9427", "message": "format", "committedDate": "2020-06-01T13:51:49Z", "type": "commit"}, {"oid": "f708edc1aca03de77ae1659763aab08d9f9dfd3c", "url": "https://github.com/apache/dolphinscheduler/commit/f708edc1aca03de77ae1659763aab08d9f9dfd3c", "message": "add @Test", "committedDate": "2020-06-01T14:07:54Z", "type": "commit"}, {"oid": "ba3ae05d23577111699ab6da7eb654ef5bf28e5c", "url": "https://github.com/apache/dolphinscheduler/commit/ba3ae05d23577111699ab6da7eb654ef5bf28e5c", "message": "fix maven compile error", "committedDate": "2020-06-01T14:40:01Z", "type": "commit"}, {"oid": "22027734eee31fe4696ae30ec76e934ad009371e", "url": "https://github.com/apache/dolphinscheduler/commit/22027734eee31fe4696ae30ec76e934ad009371e", "message": "remove enum set method", "committedDate": "2020-06-01T14:55:49Z", "type": "commit"}, {"oid": "f4599ba15fc43f4be2a20dde91208d84a95efdf9", "url": "https://github.com/apache/dolphinscheduler/commit/f4599ba15fc43f4be2a20dde91208d84a95efdf9", "message": "exclusion microbench ut", "committedDate": "2020-06-01T15:14:55Z", "type": "commit"}, {"oid": "8aa2bb8b982dec443f70e44ad8a2b438510d05e3", "url": "https://github.com/apache/dolphinscheduler/commit/8aa2bb8b982dec443f70e44ad8a2b438510d05e3", "message": "small change", "committedDate": "2020-06-02T01:38:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzMTc3MA==", "url": "https://github.com/apache/dolphinscheduler/pull/2851#discussion_r433631770", "bodyText": "Why we need to shade these classes?", "author": "kezhenxu94", "createdAt": "2020-06-02T05:41:07Z", "path": "dolphinscheduler-microbench/pom.xml", "diffHunk": "@@ -0,0 +1,116 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n+  ~ contributor license agreements.  See the NOTICE file distributed with\n+  ~ this work for additional information regarding copyright ownership.\n+  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n+  ~ (the \"License\"); you may not use this file except in compliance with\n+  ~ the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>dolphinscheduler</artifactId>\n+        <groupId>org.apache.dolphinscheduler</groupId>\n+        <version>1.2.1-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>dolphinscheduler-microbench</artifactId>\n+    <packaging>jar</packaging>\n+    <name>${project.artifactId}</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <jmh.version>1.21</jmh.version>\n+        <javac.target>1.8</javac.target>\n+        <uberjar.name>benchmarks</uberjar.name>\n+    </properties>\n+\n+    <dependencies>\n+\n+        <dependency>\n+            <groupId>org.openjdk.jmh</groupId>\n+            <artifactId>jmh-core</artifactId>\n+            <version>${jmh.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.openjdk.jmh</groupId>\n+            <artifactId>jmh-generator-annprocess</artifactId>\n+            <version>${jmh.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+        </dependency>\n+\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <version>${maven-compiler-plugin.version}</version>\n+                <configuration>\n+                    <compilerVersion>${javac.target}</compilerVersion>\n+                    <source>${javac.target}</source>\n+                    <target>${javac.target}</target>\n+                    <useIncrementalCompilation>false</useIncrementalCompilation>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-shade-plugin</artifactId>\n+                <version>3.1.1</version>\n+                <executions>\n+                    <execution>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>shade</goal>", "originalCommit": "8aa2bb8b982dec443f70e44ad8a2b438510d05e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzNjExMw==", "url": "https://github.com/apache/dolphinscheduler/pull/2851#discussion_r433636113", "bodyText": "Why we need to shade these classes?\n\nI think microbench can be used as a runnable package, do you have any good suggestions?", "author": "CalvinKirs", "createdAt": "2020-06-02T05:55:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzMTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzODExMQ==", "url": "https://github.com/apache/dolphinscheduler/pull/2851#discussion_r433638111", "bodyText": "Why we need to shade these classes?\n\nI think microbench can be used as a runnable package, do you have any good suggestions?\n\nInteresting :) In my opinion, shading classes is to avoid version/naming conflicts between a library and the user's dependencies, but for micro-benchmark tests, we only have one version and the users don't interact with this module, am I right?\nJMH can be packaged into a uber jar and executable indeed, but the classes are all known to us, there is no class that will conflict with the existed ones, so no shading is necessary, right? If I'm wrong, please correct me \ud83d\ude04", "author": "kezhenxu94", "createdAt": "2020-06-02T06:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzMTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0NjUxNw==", "url": "https://github.com/apache/dolphinscheduler/pull/2851#discussion_r433646517", "bodyText": "Why we need to shade these classes?\n\nI think microbench can be used as a runnable package, do you have any good suggestions?\n\nInteresting :) In my opinion, shading classes is to avoid version/naming conflicts between a library and the user's dependencies, but for micro-benchmark tests, we only have one version and the users don't interact with this module, am I right?\nJMH can be packaged into a uber jar and executable indeed, but the classes are all known to us, there is no class that will conflict with the existed ones, so no shading is necessary, right? If I'm wrong, please correct me \ud83d\ude04\n\nMy original intention is to use it as a data reference for the optimization of our code performance. In addition, I hope that after the performance improvement, users of dolphinscheduler can use this to verify.So i do this\uff0c What do you think?", "author": "CalvinKirs", "createdAt": "2020-06-02T06:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzMTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc5OTY1Ng==", "url": "https://github.com/apache/dolphinscheduler/pull/2851#discussion_r433799656", "bodyText": "Good to me", "author": "kezhenxu94", "createdAt": "2020-06-02T11:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzMTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxNDU2MA==", "url": "https://github.com/apache/dolphinscheduler/pull/2851#discussion_r433914560", "bodyText": "Why we need to shade these classes?\n\nI think microbench can be used as a runnable package, do you have any good suggestions?\n\nInteresting :) In my opinion, shading classes is to avoid version/naming conflicts between a library and the user's dependencies, but for micro-benchmark tests, we only have one version and the users don't interact with this module, am I right?\nJMH can be packaged into a uber jar and executable indeed, but the classes are all known to us, there is no class that will conflict with the existed ones, so no shading is necessary, right? If I'm wrong, please correct me \ud83d\ude04\n\nThank you for your suggestion, I have completed the change, please review it", "author": "CalvinKirs", "createdAt": "2020-06-02T14:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzMTc3MA=="}], "type": "inlineReview"}, {"oid": "3eba883fc80bb656dadb1cddfcc56948f03d8131", "url": "https://github.com/apache/dolphinscheduler/commit/3eba883fc80bb656dadb1cddfcc56948f03d8131", "message": "Use assembly instead of shade", "committedDate": "2020-06-02T14:01:49Z", "type": "commit"}, {"oid": "091b06691198b4b01bb20cf0f87f1fcce8f2fc29", "url": "https://github.com/apache/dolphinscheduler/commit/091b06691198b4b01bb20cf0f87f1fcce8f2fc29", "message": "Merge branch 'dev' into jmh", "committedDate": "2020-06-05T04:52:22Z", "type": "commit"}]}