{"pr_number": 3403, "pr_title": "[Feature-3392][api-server]", "pr_createdAt": "2020-08-04T10:14:56Z", "pr_url": "https://github.com/apache/dolphinscheduler/pull/3403", "timeline": [{"oid": "7e268bfd32b76b61d2d7e1ad64fcc4a4916d11b6", "url": "https://github.com/apache/dolphinscheduler/commit/7e268bfd32b76b61d2d7e1ad64fcc4a4916d11b6", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-07-06T10:24:55Z", "type": "commit"}, {"oid": "ea9b5e722a26463c10042a1e0c41b49e5a776f0b", "url": "https://github.com/apache/dolphinscheduler/commit/ea9b5e722a26463c10042a1e0c41b49e5a776f0b", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-07-06T10:26:27Z", "type": "commit"}, {"oid": "9abfe0283fa9e49dd823f15331dc347cd2f08f51", "url": "https://github.com/apache/dolphinscheduler/commit/9abfe0283fa9e49dd823f15331dc347cd2f08f51", "message": "feature user register\n\nfix bug\n\nfix security problem\n\nfix security problem", "committedDate": "2020-07-07T02:47:57Z", "type": "commit"}, {"oid": "3d04db11fa6ee8df9d1f00e9e02bb2f3e549c715", "url": "https://github.com/apache/dolphinscheduler/commit/3d04db11fa6ee8df9d1f00e9e02bb2f3e549c715", "message": "activate user", "committedDate": "2020-07-08T03:07:50Z", "type": "commit"}, {"oid": "bdfd55c3bbad1511c2f693d6d80a2eb47974e7d4", "url": "https://github.com/apache/dolphinscheduler/commit/bdfd55c3bbad1511c2f693d6d80a2eb47974e7d4", "message": "fix confilct", "committedDate": "2020-08-04T08:01:15Z", "type": "commit"}, {"oid": "c40ddd230a76283c3b52814866ee73ffa5164b5a", "url": "https://github.com/apache/dolphinscheduler/commit/c40ddd230a76283c3b52814866ee73ffa5164b5a", "message": "fix confilct", "committedDate": "2020-08-04T08:02:18Z", "type": "commit"}, {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "url": "https://github.com/apache/dolphinscheduler/commit/fd289b3e10438b5c600ae22f391da078ccaf3fec", "message": "fix confilct and fix some bug", "committedDate": "2020-08-04T10:02:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1ODI3Mg==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464958272", "bodyText": "Suggested change", "author": "yangyichao-mango", "createdAt": "2020-08-04T10:37:00Z", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/UsersController.java", "diffHunk": "@@ -50,6 +50,7 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(UsersController.class);\n \n+", "originalCommit": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1ODYwNQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464958605", "bodyText": "Add parameterFormat  to Constants for better performance.", "author": "yangyichao-mango", "createdAt": "2020-08-04T10:37:44Z", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/UsersController.java", "diffHunk": "@@ -432,14 +433,36 @@ public Result authorizedUser(@ApiIgnore @RequestAttribute(value = Constants.SESS\n                                @RequestParam(value = \"userPassword\") String userPassword,\n                                @RequestParam(value = \"repeatPassword\") String repeatPassword,\n                                @RequestParam(value = \"email\") String email) throws Exception {\n-        userName = userName.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        userPassword = userPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        repeatPassword = repeatPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        email = email.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n+        String parameterFormat = \"[\\n|\\r|\\t]\";", "originalCommit": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1ODg0Ng==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464958846", "bodyText": "Add parameterFormat to Constants for better performance.", "author": "yangyichao-mango", "createdAt": "2020-08-04T10:38:11Z", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/UsersController.java", "diffHunk": "@@ -432,14 +433,36 @@ public Result authorizedUser(@ApiIgnore @RequestAttribute(value = Constants.SESS\n                                @RequestParam(value = \"userPassword\") String userPassword,\n                                @RequestParam(value = \"repeatPassword\") String repeatPassword,\n                                @RequestParam(value = \"email\") String email) throws Exception {\n-        userName = userName.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        userPassword = userPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        repeatPassword = repeatPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        email = email.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n+        String parameterFormat = \"[\\n|\\r|\\t]\";\n+        userName = userName.replaceAll(parameterFormat, \"\");\n+        userPassword = userPassword.replaceAll(parameterFormat, \"\");\n+        repeatPassword = repeatPassword.replaceAll(parameterFormat, \"\");\n+        email = email.replaceAll(parameterFormat, \"\");\n         logger.info(\"user self-register, userName: {}, userPassword {}, repeatPassword {}, eamil {}\",\n-                userName, userPassword, repeatPassword, email);\n+                userName, Constants.PASSWORD_DEFAULT, Constants.PASSWORD_DEFAULT, email);\n         Map<String, Object> result = usersService.registerUser(userName, userPassword, repeatPassword, email);\n         return returnDataList(result);\n     }\n \n+    /**\n+     * user activate\n+     *\n+     * @param userName       user name\n+     */\n+    @ApiOperation(value=\"activateUser\",notes = \"ACTIVATE_USER_NOTES\")\n+    @ApiImplicitParams({\n+            @ApiImplicitParam(name = \"userName\", value = \"USER_NAME\", type = \"String\"),\n+    })\n+    @PostMapping(\"/activate\")\n+    @ResponseStatus(HttpStatus.OK)\n+    @ApiException(UPDATE_USER_ERROR)\n+    public Result<Object> activateUser(@ApiIgnore @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n+                                       @RequestParam(value = \"userName\") String userName) {\n+        String parameterFormat = \"[\\n|\\r|\\t]\";", "originalCommit": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTIyMw==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464959223", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> result = new HashMap<>(5);\n          \n          \n            \n                    Map<String, Object> result = new HashMap<>();", "author": "yangyichao-mango", "createdAt": "2020-08-04T10:39:05Z", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/UsersService.java", "diffHunk": "@@ -934,10 +936,51 @@ private void copyResourceFiles(ResourceComponent resourceComponent, String srcBa\n             putMsg(result, Status.REQUEST_PARAMS_NOT_VALID_ERROR, \"two passwords are not same\");\n             return result;\n         }\n-\n-        createUser(userName, userPassword, email, 1, \"\", \"\", 0);\n+        User user = createUser(userName, userPassword, email, 1, \"\", \"\", Flag.NO.ordinal());\n         putMsg(result, Status.SUCCESS);\n+        result.put(Constants.DATA_LIST, user);\n         return result;\n     }\n \n+    /**\n+     * activate user, only system admin have permission, change user state code 0 to 1\n+     *\n+     * @param loginUser login user\n+     * @return create result code\n+     */\n+    public Map<String, Object> activateUser(User loginUser, String userName) {\n+        Map<String, Object> result = new HashMap<>(5);", "originalCommit": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTQ1MA==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464959450", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.info(mvcResult.getResponse().getContentAsString());\n          \n      \n    \n    \n  \n\nAssert judge is enough.", "author": "yangyichao-mango", "createdAt": "2020-08-04T10:39:35Z", "path": "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/UsersControllerTest.java", "diffHunk": "@@ -287,4 +287,21 @@ public void testRegisterUser() throws Exception {\n         Assert.assertEquals(Status.SUCCESS.getCode(),result.getCode().intValue());\n         logger.info(mvcResult.getResponse().getContentAsString());\n     }\n+\n+    @Test\n+    public void testActivateUser() throws Exception {\n+        MultiValueMap<String, String> paramsMap = new LinkedMultiValueMap<>();\n+        paramsMap.add(\"userName\",\"user_test\");\n+\n+        MvcResult mvcResult = mockMvc.perform(post(\"/users/activate\")\n+                .header(SESSION_ID, sessionId)\n+                .params(paramsMap))\n+                .andExpect(status().isOk())\n+                .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))\n+                .andReturn();\n+\n+        Result result = JSONUtils.parseObject(mvcResult.getResponse().getContentAsString(), Result.class);\n+        Assert.assertEquals(Status.SUCCESS.getCode(),result.getCode().intValue());\n+        logger.info(mvcResult.getResponse().getContentAsString());", "originalCommit": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTk3Nw==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464959977", "bodyText": "Please remove all the log in test to avoid some unnecessary logs.", "author": "yangyichao-mango", "createdAt": "2020-08-04T10:40:37Z", "path": "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/UsersServiceTest.java", "diffHunk": "@@ -498,6 +498,61 @@ public void testRegisterUser() {\n         }\n     }\n \n+\n+    @Test\n+    public void testActivateUser() {\n+        User user = new User();\n+        user.setUserType(UserType.GENERAL_USER);\n+        String userName = \"userTest0002~\";\n+        try {\n+            //not admin\n+            Map<String, Object> result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.USER_NO_OPERATION_PERM, result.get(Constants.STATUS));\n+\n+            //userName error\n+            user.setUserType(UserType.ADMIN_USER);\n+            result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n+\n+            //user not exist\n+            userName = \"userTest10013\";\n+            result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.USER_NOT_EXIST, result.get(Constants.STATUS));\n+            logger.info(result.toString());\n+\n+            //user state error\n+            userName = \"userTest0001\";\n+            when(userMapper.queryByUserNameAccurately(userName)).thenReturn(getUser());\n+            result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n+            logger.info(result.toString());\n+\n+            //success\n+            when(userMapper.queryByUserNameAccurately(userName)).thenReturn(getDisabledUser());\n+            result = usersService.activateUser(user, userName);\n+            logger.info(result.toString());", "originalCommit": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk2NDE1OQ==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464964159", "bodyText": "ok, thanks!", "author": "cpsky", "createdAt": "2020-08-04T10:49:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTk3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MjIzNg==", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464992236", "bodyText": "I have fix these problems\uff0cplease check it, thanks!", "author": "cpsky", "createdAt": "2020-08-04T11:48:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTk3Nw=="}], "type": "inlineReview"}, {"oid": "29ab54b75abd7f46a5db4e12ff62441db9aee07c", "url": "https://github.com/apache/dolphinscheduler/commit/29ab54b75abd7f46a5db4e12ff62441db9aee07c", "message": "fix cr problem", "committedDate": "2020-08-04T11:34:41Z", "type": "commit"}]}