{"pr_number": 2639, "pr_title": "jsonschema2pojo upgrade to 1.0.2", "pr_createdAt": "2020-11-27T17:43:45Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2639", "timeline": [{"oid": "3684ce051eaf5fb48a5cc1ff31d0e51014658ae4", "url": "https://github.com/fabric8io/kubernetes-client/commit/3684ce051eaf5fb48a5cc1ff31d0e51014658ae4", "message": "wip: jsonschema2pojo upgrade works for main model modules", "committedDate": "2020-11-27T18:01:30Z", "type": "forcePushed"}, {"oid": "9405571b35af281f9851f020eedde460973b5b60", "url": "https://github.com/fabric8io/kubernetes-client/commit/9405571b35af281f9851f020eedde460973b5b60", "message": "wip: jsonschema2pojo upgrade works for extension modules", "committedDate": "2020-12-04T15:02:59Z", "type": "forcePushed"}, {"oid": "0e58f154e7385601e8f4b8ff1e60d593cefdc855", "url": "https://github.com/fabric8io/kubernetes-client/commit/0e58f154e7385601e8f4b8ff1e60d593cefdc855", "message": "feat: jsonschema2pojo upgrade works for main model modules", "committedDate": "2020-12-04T17:47:08Z", "type": "commit"}, {"oid": "c6f6f4f4844d5f07bf818b0224304fcbc13e1cd3", "url": "https://github.com/fabric8io/kubernetes-client/commit/c6f6f4f4844d5f07bf818b0224304fcbc13e1cd3", "message": "feat: jsonschema2pojo upgrade works for extension modules", "committedDate": "2020-12-04T17:47:08Z", "type": "commit"}, {"oid": "4eee56eb02cc3880435bcf54aacd86c735205013", "url": "https://github.com/fabric8io/kubernetes-client/commit/4eee56eb02cc3880435bcf54aacd86c735205013", "message": "refactor: customized jsonchema2pojo getter/setter generation at Java level", "committedDate": "2020-12-04T17:47:09Z", "type": "commit"}, {"oid": "4eee56eb02cc3880435bcf54aacd86c735205013", "url": "https://github.com/fabric8io/kubernetes-client/commit/4eee56eb02cc3880435bcf54aacd86c735205013", "message": "refactor: customized jsonchema2pojo getter/setter generation at Java level", "committedDate": "2020-12-04T17:47:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwODE5NQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537408195", "bodyText": "Isn't this class (and a lot others) supposed to be generated?", "author": "metacosm", "createdAt": "2020-12-07T10:49:01Z", "path": "extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json", "diffHunk": "@@ -158,15 +158,15 @@\n           \"required\": true\n         },\n         \"metadata\": {\n-          \"javaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n+          \"existingJavaType\": \"io.fabric8.kubernetes.api.model.ObjectMeta\"\n         },\n         \"spec\": {\n           \"$ref\": \"#/definitions/github_com_kubernetes-sigs_service-catalog_pkg_apis_servicecatalog_v1beta1_ClusterServiceBrokerSpec\",\n-          \"javaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"\n+          \"existingJavaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\"", "originalCommit": "4eee56eb02cc3880435bcf54aacd86c735205013", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU5NjkyNw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537596927", "bodyText": "I checked and it looks like it's still generated:\nkubernetes-client : $ find . -iname ClusterServiceBrokerSpec.java\n./extensions/service-catalog/model/target/generated-sources/io/fabric8/servicecatalog/api/model/ClusterServiceBrokerSpec.java\n\nLooks like javaType is split into existingJavaType and javaType in this version of JsonSchema2Pojo[0]\n[0] joelittlejohn/jsonschema2pojo#828", "author": "rohanKanojia", "createdAt": "2020-12-07T15:28:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwODE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1ODA1Ng==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537758056", "bodyText": "Yes, the class is meant to be generated.\nIn order to generate only the necessary classes, some are set as javaType and others as existingJavaType.\nSo for modules that export classes, you will find in the \"definitions\" section those schemas.\nFor this particular class, this would be here:\n\n  \n    \n      kubernetes-client/extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json\n    \n    \n         Line 229\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"github_com_kubernetes-sigs_service-catalog_pkg_apis_servicecatalog_v1beta1_ClusterServiceBrokerSpec\": { \n        \n    \n  \n\n\n\n  \n    \n      kubernetes-client/extensions/service-catalog/model/src/main/resources/schema/servicecatalog-schema.json\n    \n    \n         Line 265\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"javaType\": \"io.fabric8.servicecatalog.api.model.ClusterServiceBrokerSpec\", \n        \n    \n  \n\n\nHowever, that class might be used as a field/property in a different type (the line we're currently commenting on).\nThis is where things get complicated, especially for those modules that reference classes from other modules.\nSo the hard part and core implementation of this PR is figuring out which definitions must be declared as  javaType or existingJavaType\nFor example, in the OpenShift model, there are many top-level definitions that belong to the core module:\n\n  \n    \n      kubernetes-client/kubernetes-model-generator/openshift-model/src/main/resources/schema/kube-schema.json\n    \n    \n         Line 6\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"kubernetes_apimachinery_APIGroup\": { \n        \n    \n  \n\n\nthus, must be declared as existing despite being top-level definitions:\n\n  \n    \n      kubernetes-client/kubernetes-model-generator/openshift-model/src/main/resources/schema/kube-schema.json\n    \n    \n         Line 49\n      in\n      4eee56e\n    \n    \n    \n    \n\n        \n          \n           \"existingJavaType\": \"io.fabric8.kubernetes.api.model.APIGroup\",", "author": "manusa", "createdAt": "2020-12-07T19:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwODE5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY0NjQ5NQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537646495", "bodyText": "Any specific reason generated flag is set true here?", "author": "rohanKanojia", "createdAt": "2020-12-07T16:31:31Z", "path": "kubernetes-model-generator/openshift-model-monitoring/cmd/generate/generate.go", "diffHunk": "@@ -56,16 +56,16 @@ type Schema struct {\n \n func main() {\n   packages := []schemagen.PackageDescriptor{\n-    {\"k8s.io/api/core/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_core_\"},\n-    {\"k8s.io/apimachinery/pkg/api/resource\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_resource_\"},\n-    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\"},\n-    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.openshift.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\"},\n-    {\"k8s.io/apimachinery/pkg/version\", \"\", \"io.fabric8.kubernetes.api.model.version\", \"kubernetes_apimachinery_pkg_version_\"},\n-    {\"k8s.io/kubernetes/pkg/util\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_util_\"},\n-    {\"k8s.io/kubernetes/pkg/api/errors\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_errors_\"},\n-    {\"k8s.io/kubernetes/pkg/api/unversioned\", \"\", \"io.fabric8.kubernetes.api.model\", \"api_\"},\n-    {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\"},\n-    {\"github.com/coreos/prometheus-operator/pkg/apis/monitoring/v1\", \"monitoring.coreos.com\", \"io.fabric8.openshift.api.model.monitoring.v1\", \"os_monitoring_v1_\"},\n+    {\"k8s.io/api/core/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_core_\", false},\n+    {\"k8s.io/apimachinery/pkg/api/resource\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_resource_\", false},\n+    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\", false},\n+    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.openshift.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\", true},", "originalCommit": "4eee56eb02cc3880435bcf54aacd86c735205013", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1ODg1OA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2639#discussion_r537658858", "bodyText": "I think this should be false", "author": "rohanKanojia", "createdAt": "2020-12-07T16:47:36Z", "path": "kubernetes-model-generator/kubernetes-model-apps/cmd/generate/generate.go", "diffHunk": "@@ -100,17 +100,17 @@ type Schema struct {\n \n func main() {\n   packages := []schemagen.PackageDescriptor{\n-    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\"},\n-    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.kubernetes.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\"},\n-    {\"k8s.io/apimachinery/pkg/version\", \"\", \"io.fabric8.kubernetes.api.model.version\", \"kubernetes_apimachinery_pkg_version_\"},\n-    {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\"},\n-    {\"k8s.io/api/apps/v1\", \"\", \"io.fabric8.kubernetes.api.model.apps\", \"kubernetes_apps_\"},\n-    {\"k8s.io/api/core/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_core_\"},\n-    {\"k8s.io/kubernetes/pkg/watch/json\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_watch_\"},\n-    {\"k8s.io/kubernetes/pkg/util\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_util_\"},\n-    {\"k8s.io/kubernetes/pkg/api/errors\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_errors_\"},\n-    {\"k8s.io/client-go/tools/clientcmd/api/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_config_\"},\n-    {\"k8s.io/kubernetes/pkg/api/unversioned\", \"\", \"io.fabric8.kubernetes.api.model\", \"api_\"},\n+    {\"k8s.io/apimachinery/pkg/util/intstr\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_pkg_util_intstr_\", false},\n+    {\"k8s.io/apimachinery/pkg/runtime\", \"\", \"io.fabric8.kubernetes.api.model.runtime\", \"kubernetes_apimachinery_pkg_runtime_\", false},\n+    {\"k8s.io/apimachinery/pkg/version\", \"\", \"io.fabric8.kubernetes.api.model.version\", \"kubernetes_apimachinery_pkg_version_\", false},\n+    {\"k8s.io/apimachinery/pkg/apis/meta/v1\", \"\", \"io.fabric8.kubernetes.api.model\", \"kubernetes_apimachinery_\", true},", "originalCommit": "4eee56eb02cc3880435bcf54aacd86c735205013", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "40683fee7a963428bb925038fda393fea74d5eb3", "url": "https://github.com/fabric8io/kubernetes-client/commit/40683fee7a963428bb925038fda393fea74d5eb3", "message": "refactor: jsonchema2pojo address PR comments", "committedDate": "2020-12-09T12:23:38Z", "type": "commit"}]}