{"pr_number": 2372, "pr_title": "Fix #2292: Update BaseOperation#createOrReplace()", "pr_createdAt": "2020-07-27T18:44:21Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2372", "timeline": [{"oid": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "url": "https://github.com/fabric8io/kubernetes-client/commit/0005c580b90b1027bb7b3cd4f456e3615fe26e86", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-27T19:43:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4NTUwMQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461585501", "bodyText": "I'm guessing this recurses into this function", "author": "manusa", "createdAt": "2020-07-28T13:37:19Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java", "diffHunk": "@@ -395,24 +397,41 @@ public D createOrReplaceWithNew() throws KubernetesClientException {\n \n   @Override\n   public T createOrReplace(T... items) {\n-    T item = getItem();\n+    T itemToCreateOrReplace = getItem();\n     if (items.length > 1) {\n       throw new IllegalArgumentException(\"Too many items to create.\");\n     } else if (items.length == 1) {\n-      item = items[0];\n+      itemToCreateOrReplace = items[0];\n     }\n \n-    if (item == null) {\n+    if (itemToCreateOrReplace == null) {\n       throw new IllegalArgumentException(\"Nothing to create.\");\n     }\n \n-    if (Utils.isNullOrEmpty(name) && item instanceof HasMetadata) {\n-      return withName(((HasMetadata)item).getMetadata().getName()).createOrReplace(item);\n+    if (Utils.isNullOrEmpty(name)) {\n+\n+      return withName(itemToCreateOrReplace.getMetadata().getName()).createOrReplace(itemToCreateOrReplace);", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODA3NA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461588074", "bodyText": "Yes, I think previously also it was like this.", "author": "rohanKanojia", "createdAt": "2020-07-28T13:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4NTUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4Njk2Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461586962", "bodyText": "Are we sure we want to reuse the resourceVersion retrieved in line 416? Or maybe use the one of the latest version retrieved from the server (427)?", "author": "manusa", "createdAt": "2020-07-28T13:39:21Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java", "diffHunk": "@@ -395,24 +397,41 @@ public D createOrReplaceWithNew() throws KubernetesClientException {\n \n   @Override\n   public T createOrReplace(T... items) {\n-    T item = getItem();\n+    T itemToCreateOrReplace = getItem();\n     if (items.length > 1) {\n       throw new IllegalArgumentException(\"Too many items to create.\");\n     } else if (items.length == 1) {\n-      item = items[0];\n+      itemToCreateOrReplace = items[0];\n     }\n \n-    if (item == null) {\n+    if (itemToCreateOrReplace == null) {\n       throw new IllegalArgumentException(\"Nothing to create.\");\n     }\n \n-    if (Utils.isNullOrEmpty(name) && item instanceof HasMetadata) {\n-      return withName(((HasMetadata)item).getMetadata().getName()).createOrReplace(item);\n+    if (Utils.isNullOrEmpty(name)) {\n+\n+      return withName(itemToCreateOrReplace.getMetadata().getName()).createOrReplace(itemToCreateOrReplace);\n     }\n-    if (fromServer().get() == null) {\n-      return create(item);\n-    } else {\n-      return replace(item);\n+\n+    String resourceVersion = KubernetesResourceUtil.getResourceVersion(itemToCreateOrReplace);\n+    try {\n+      // Create\n+      KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, null);\n+      return create(itemToCreateOrReplace);\n+    } catch (KubernetesClientException exception) {\n+      if (exception.getCode() != HttpURLConnection.HTTP_CONFLICT) {\n+        throw exception;\n+      }\n+\n+      // Conflict; Do Replace\n+      T itemFromServer = fromServer().get();\n+      if (ResourceCompare.equals(itemFromServer, itemToCreateOrReplace)) {\n+        // Nothing changed, ignore\n+        return itemToCreateOrReplace;\n+      } else {\n+        KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, resourceVersion);", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODU5OQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461588599", "bodyText": "Will a PUT in the server of the same resource update its resource version (propagate event to watchers, etc.)? if so, maybe this is something expected from users invoking this function. WDYT?", "author": "manusa", "createdAt": "2020-07-28T13:41:32Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java", "diffHunk": "@@ -395,24 +397,41 @@ public D createOrReplaceWithNew() throws KubernetesClientException {\n \n   @Override\n   public T createOrReplace(T... items) {\n-    T item = getItem();\n+    T itemToCreateOrReplace = getItem();\n     if (items.length > 1) {\n       throw new IllegalArgumentException(\"Too many items to create.\");\n     } else if (items.length == 1) {\n-      item = items[0];\n+      itemToCreateOrReplace = items[0];\n     }\n \n-    if (item == null) {\n+    if (itemToCreateOrReplace == null) {\n       throw new IllegalArgumentException(\"Nothing to create.\");\n     }\n \n-    if (Utils.isNullOrEmpty(name) && item instanceof HasMetadata) {\n-      return withName(((HasMetadata)item).getMetadata().getName()).createOrReplace(item);\n+    if (Utils.isNullOrEmpty(name)) {\n+\n+      return withName(itemToCreateOrReplace.getMetadata().getName()).createOrReplace(itemToCreateOrReplace);\n     }\n-    if (fromServer().get() == null) {\n-      return create(item);\n-    } else {\n-      return replace(item);\n+\n+    String resourceVersion = KubernetesResourceUtil.getResourceVersion(itemToCreateOrReplace);\n+    try {\n+      // Create\n+      KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, null);\n+      return create(itemToCreateOrReplace);\n+    } catch (KubernetesClientException exception) {\n+      if (exception.getCode() != HttpURLConnection.HTTP_CONFLICT) {\n+        throw exception;\n+      }\n+\n+      // Conflict; Do Replace\n+      T itemFromServer = fromServer().get();\n+      if (ResourceCompare.equals(itemFromServer, itemToCreateOrReplace)) {\n+        // Nothing changed, ignore\n+        return itemToCreateOrReplace;", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4ODI4MQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r462088281", "bodyText": "I checked and doing a PUT with same resource doesn't change resource version or add any event to watcher", "author": "rohanKanojia", "createdAt": "2020-07-29T07:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5NDc3MA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461594770", "bodyText": "You are getting sonar issues here. In order to make sure exception is thrown in the right place:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThrows(KubernetesClientException.class, () -> client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build()).createOrReplace());\n          \n          \n            \n                Pod pod = client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build());\n          \n          \n            \n                // When\n          \n          \n            \n                assertThrows(KubernetesClientException.class, () -> pod.createOrReplace());\n          \n      \n    \n    \n  \n\nSame for the rest of warnings.", "author": "manusa", "createdAt": "2020-07-28T13:49:51Z", "path": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CreateOrReplaceResourceTest.java", "diffHunk": "@@ -70,10 +75,21 @@ public void testResourceCreate() throws Exception {\n   }\n \n   @Test\n-  public void testCreate() throws Exception {\n-    server.expect().get().withPath(\"/api/v1/namespaces/test/pods/pod123\").andReturn(404, new StatusBuilder().build()).always();\n+  @DisplayName(\"Should throw Exception on failed create\")\n+  void testResourceCreateFailure() {\n+    // Given\n+    server.expect().post().withPath(\"/api/v1/namespaces/test/pods\").andReturn(HttpURLConnection.HTTP_BAD_REQUEST, new PodBuilder()\n+      .withNewMetadata().withResourceVersion(\"12345\").endMetadata().build()).once();\n+    KubernetesClient client = server.getClient();\n \n-    server.expect().post().withPath(\"/api/v1/namespaces/test/pods\").andReturn(201, new PodBuilder()\n+    // When\n+    assertThrows(KubernetesClientException.class, () -> client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build()).createOrReplace());", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae070516ccd429c23b52bddc6b67981c50acd0ba", "url": "https://github.com/fabric8io/kubernetes-client/commit/ae070516ccd429c23b52bddc6b67981c50acd0ba", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-29T07:16:19Z", "type": "forcePushed"}, {"oid": "2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "url": "https://github.com/fabric8io/kubernetes-client/commit/2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-31T07:04:08Z", "type": "commit"}, {"oid": "2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "url": "https://github.com/fabric8io/kubernetes-client/commit/2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-31T07:04:08Z", "type": "forcePushed"}]}