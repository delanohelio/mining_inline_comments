{"pr_number": 2294, "pr_title": "Improve error handling on stream closing errors in S2I binary build", "pr_createdAt": "2020-06-18T07:00:20Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2294", "timeline": [{"oid": "a3761f2e7700f768426a958d6cb50bae68bd51bb", "url": "https://github.com/fabric8io/kubernetes-client/commit/a3761f2e7700f768426a958d6cb50bae68bd51bb", "message": "Improve error handling on stream closing errors in S2I binary builds(#2032)\n\n+ Add BuildConfig's name and namespace in query parameters in order to align with `oc`\n+ Use BufferedInputStream while uploading archive file to sink.\n+ Add recent events to exception message and some logging in case of upload failure of archive file", "committedDate": "2020-06-18T07:20:05Z", "type": "forcePushed"}, {"oid": "a99c789a0521a77ae6a6b06b22af0f6cab6fa7c6", "url": "https://github.com/fabric8io/kubernetes-client/commit/a99c789a0521a77ae6a6b06b22af0f6cab6fa7c6", "message": "Improve error handling on stream closing errors in S2I binary builds(#2032)\n\n+ Add BuildConfig's name and namespace in query parameters in order to align with `oc`\n+ Use BufferedInputStream while uploading archive file to sink.\n+ Add recent events to exception message and some logging in case of upload failure of archive file", "committedDate": "2020-07-06T05:38:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1OTM3NA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2294#discussion_r450159374", "bodyText": "Is there an option to parse the resource name bc2 and namespace ns1 from the request path itself? Why mention the same values again as query parameters when they are clearly provided in the path\napis/{group}/{version}/namespaces/{namespaceName}/{resourceType}/{resourceName}/{subResource}", "author": "dev-gaur", "createdAt": "2020-07-06T11:32:05Z", "path": "kubernetes-tests/src/test/java/io/fabric8/openshift/client/server/mock/BuildConfigTest.java", "diffHunk": "@@ -143,7 +143,7 @@ public void testBinaryBuildFromFile() throws IOException {\n     File warFile = new File(\"target/test.war\");\n     warFile.createNewFile();\n \n-    server.expect().post().withPath(\"/apis/build.openshift.io/v1/namespaces/ns1/buildconfigs/bc2/instantiatebinary?commit=&asFile=\" + warFile.getName())\n+    server.expect().post().withPath(\"/apis/build.openshift.io/v1/namespaces/ns1/buildconfigs/bc2/instantiatebinary?name=bc2&namespace=ns1&asFile=\" + warFile.getName())", "originalCommit": "a99c789a0521a77ae6a6b06b22af0f6cab6fa7c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1ODU1NA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2294#discussion_r452858554", "bodyText": "I did this to align with oc's behavior while doing binary builds. We don't have control over how these query parameters are processed since they are processed by openshift:\noc start-build random-generator-s2i --from-archive=target/docker/docker.io/rohankanojia/random-generator/0.0.1/tmp/docker-build.tar -v=8\nI0710 19:23:02.785756   34958 loader.go:359] Config loaded from file /home/rohaan/.kube/config\nI0710 19:23:02.786785   34958 loader.go:359] Config loaded from file /home/rohaan/.kube/config\nI0710 19:23:02.787796   34958 loader.go:359] Config loaded from file /home/rohaan/.kube/config\nI0710 19:23:02.788775   34958 loader.go:359] Config loaded from file /home/rohaan/.kube/config\nI0710 19:23:02.789707   34958 loader.go:359] Config loaded from file /home/rohaan/.kube/config\nUploading archive file \"target/docker/docker.io/rohankanojia/random-generator/0.0.1/tmp/docker-build.tar\" as binary input for the build ...\nI0710 19:23:02.789950   34958 round_trippers.go:383] POST https://api.rh-idev.openshift.com:443/apis/build.openshift.io/v1/namespaces/rokumar/buildconfigs/random-generator-s2i/instantiatebinary?name=random-generator-s2i&namespace=rokumar\nI0710 19:23:02.789958   34958 round_trippers.go:390] Request Headers:\nI0710 19:23:02.789964   34958 round_trippers.go:393]     Accept: application/json, */*\nI0710 19:23:02.789971   34958 round_trippers.go:393]     User-Agent: oc/v1.11.0+d4cacc0 (linux/amd64) kubernetes/d4cacc0\nI0710 19:23:02.789979   34958 round_trippers.go:393]     Authorization: Bearer tMfmFj52t-kLNdAKnpDgFJJk7OIlY4yUxqVBF_K8zjc\n.I0710 19:23:08.404470   34958 round_trippers.go:408] Response Status: 201 Created in 5614 milliseconds\nI0710 19:23:08.404496   34958 round_trippers.go:411] Response Headers:\nI0710 19:23:08.404510   34958 round_trippers.go:414]     Content-Length: 1576\nI0710 19:23:08.404529   34958 round_trippers.go:414]     Audit-Id: 930a4cf7-12f2-4865-b5e3-6055fcaca298\nI0710 19:23:08.404544   34958 round_trippers.go:414]     Cache-Control: no-store\nI0710 19:23:08.404569   34958 round_trippers.go:414]     Content-Type: application/json\nI0710 19:23:08.404583   34958 round_trippers.go:414]     Date: Fri, 10 Jul 2020 13:53:08 GMT\nI0710 19:23:08.404702   34958 request.go:897] Response Body: {\"kind\":\"Build\",\"apiVersion\":\"build.openshift.io/v1\",\"metadata\":{\"name\":\"random-generator-s2i-4\",\"namespace\":\"rokumar\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/rokumar/builds/random-generator-s2i-4\",\"uid\":\"ad75af20-c2b4-11ea-9a28-0e6aaf341bbf\",\"resourceVersion\":\"683137614\",\"creationTimestamp\":\"2020-07-10T13:53:04Z\",\"labels\":{\"app\":\"random-generator\",\"buildconfig\":\"random-generator-s2i\",\"group\":\"meetup\",\"openshift.io/build-config.name\":\"random-generator-s2i\",\"openshift.io/build.start-policy\":\"Serial\",\"provider\":\"jkube\",\"version\":\"0.0.1\"},\"annotations\":{\"openshift.io/build-config.name\":\"random-generator-s2i\",\"openshift.io/build.number\":\"4\",\"openshift.io/build.pod-name\":\"random-generator-s2i-4-build\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"random-generator-s2i\",\"uid\":\"794bcaab-c1c2-11ea-af64-0e4452489d53\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Binary\",\"binary\":{}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kin [truncated 552 chars]\n\nUploading finished\nbuild.build.openshift.io/random-generator-s2i-4 started", "author": "rohanKanojia", "createdAt": "2020-07-10T13:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1OTM3NA=="}], "type": "inlineReview"}, {"oid": "1697e3524125e9e5f683bdfb21cde2339ab56cd8", "url": "https://github.com/fabric8io/kubernetes-client/commit/1697e3524125e9e5f683bdfb21cde2339ab56cd8", "message": "Improve error handling on stream closing errors in S2I binary builds(#2032)\n\n+ Add BuildConfig's name and namespace in query parameters in order to align with `oc`\n+ Use BufferedInputStream while uploading archive file to sink.\n+ Add recent events to exception message and some logging in case of upload failure of archive file", "committedDate": "2020-07-13T13:34:27Z", "type": "commit"}, {"oid": "1697e3524125e9e5f683bdfb21cde2339ab56cd8", "url": "https://github.com/fabric8io/kubernetes-client/commit/1697e3524125e9e5f683bdfb21cde2339ab56cd8", "message": "Improve error handling on stream closing errors in S2I binary builds(#2032)\n\n+ Add BuildConfig's name and namespace in query parameters in order to align with `oc`\n+ Use BufferedInputStream while uploading archive file to sink.\n+ Add recent events to exception message and some logging in case of upload failure of archive file", "committedDate": "2020-07-13T13:34:27Z", "type": "forcePushed"}]}