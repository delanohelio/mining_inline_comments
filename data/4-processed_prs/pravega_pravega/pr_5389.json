{"pr_number": 5389, "pr_title": "Issue 5388: Enhancements to Integration test utility ClusterWrapper", "pr_createdAt": "2020-12-01T18:12:29Z", "pr_url": "https://github.com/pravega/pravega/pull/5389", "timeline": [{"oid": "ea38d295c9a2c35d36db20c45117133b76ab4447", "url": "https://github.com/pravega/pravega/commit/ea38d295c9a2c35d36db20c45117133b76ab4447", "message": "Add support for REST APIs, examples and rename initialize operation\n\nSigned-off-by: rsharda <ravi.sharda@emc.com>", "committedDate": "2020-12-01T18:11:27Z", "type": "commit"}, {"oid": "c5d3995e138af550f3baf2fadb6bf3d75e84a741", "url": "https://github.com/pravega/pravega/commit/c5d3995e138af550f3baf2fadb6bf3d75e84a741", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-02T09:07:18Z", "type": "commit"}, {"oid": "88affef0dd123233b31da4fb44121c4c930cad3b", "url": "https://github.com/pravega/pravega/commit/88affef0dd123233b31da4fb44121c4c930cad3b", "message": "Add a method to extract ZK connect string, and collocate public and private methods.\n\nSigned-off-by: rsharda <ravi.sharda@emc.com>", "committedDate": "2020-12-02T12:10:57Z", "type": "commit"}, {"oid": "bd87a7d6db91f2ebd2674de93176693f5e46cc7e", "url": "https://github.com/pravega/pravega/commit/bd87a7d6db91f2ebd2674de93176693f5e46cc7e", "message": "Merge remote-tracking branch 'origin/clusterwrapper-rest-support' into clusterwrapper-rest-support", "committedDate": "2020-12-02T12:11:09Z", "type": "commit"}, {"oid": "debf688fd581b4eba6656657f42ae98cec1b99f8", "url": "https://github.com/pravega/pravega/commit/debf688fd581b4eba6656657f42ae98cec1b99f8", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-03T04:04:55Z", "type": "commit"}, {"oid": "4cf10d2220cad0c911c58caeefe10c0a9979e7c9", "url": "https://github.com/pravega/pravega/commit/4cf10d2220cad0c911c58caeefe10c0a9979e7c9", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-04T01:02:14Z", "type": "commit"}, {"oid": "a065875e2d792cc14efec6521bd1b82434d4835e", "url": "https://github.com/pravega/pravega/commit/a065875e2d792cc14efec6521bd1b82434d4835e", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-04T08:54:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5MDE5Mw==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r536290193", "bodyText": "You should clean this up", "author": "andreipaduroiu", "createdAt": "2020-12-04T18:19:58Z", "path": "test/integration/src/test/java/io/pravega/test/integration/ClusterWrapperTest.java", "diffHunk": "@@ -94,4 +127,81 @@ public void writeAndReadBackAMessageWithTlsAndAuthEnabledServer() {\n         String readMessage = TestUtils.readNextEventMessage(scopeName, streamName, readerClientConfig, readerGroupName);\n         assertEquals(testMessage, readMessage);\n     }\n+\n+    @SneakyThrows\n+    @Test\n+    public void restApiInvocationWithSecurityEnabled() {\n+        String restApiUser = \"rest-api-user\";\n+        String restApiUserPwd = \"super-secret\";\n+\n+        final Map<String, String> passwordInputFileEntries = new HashMap<>();\n+        passwordInputFileEntries.put(\"restApiUser\", \"prn::*,READ_UPDATE\");\n+\n+        // Setup and start the cluster\n+        @Cleanup\n+        ClusterWrapper cluster = ClusterWrapper.builder()\n+                .controllerRestEnabled(true)\n+\n+                // Auth related configs\n+                .authEnabled(true)\n+                .passwordAuthHandlerEntries(TestUtils.preparePasswordInputFileEntries(passwordInputFileEntries, restApiUserPwd))\n+\n+                // TLS related configs\n+                .tlsEnabled(true)\n+                .tlsServerCertificatePath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_CERT_FILE_NAME)\n+                .tlsServerKeyPath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_PRIVATE_KEY_FILE_NAME)\n+                .tlsHostVerificationEnabled(false)\n+                .tlsServerKeystorePath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_KEYSTORE_NAME)\n+                .tlsServerKeystorePasswordPath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_PASSWORD_FILE_NAME)\n+\n+                .build();\n+        cluster.start();\n+\n+        // Setup REST client config\n+        org.glassfish.jersey.client.ClientConfig clientConfig = new org.glassfish.jersey.client.ClientConfig();\n+        clientConfig.register(JacksonJsonProvider.class);\n+        clientConfig.property(\"sun.net.http.allowRestrictedHeaders\", \"true\");\n+        clientConfig.register(HttpAuthenticationFeature.basic(restApiUser, restApiUserPwd));\n+\n+        // Prepare a TLS context with truststore containing the signing CA's vertificate\n+        KeyStore trustStore = createTrustStore(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_CA_CERT_FILE_NAME);\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n+        tmf.init(trustStore);\n+        SSLContext tlsContext = SSLContext.getInstance(\"TLS\");\n+        tlsContext.init(null, tmf.getTrustManagers(), null);\n+\n+        // Instantiate the REST client\n+        javax.ws.rs.client.Client client = ClientBuilder.newBuilder()\n+                        .withConfig(clientConfig)\n+                        .sslContext(tlsContext)\n+                        .build();\n+\n+        String restServerURI = cluster.controllerRestUri();\n+        log.info(\"REST Server URI: {}\", restServerURI);\n+\n+        // Invoke the REST operation\n+        String resourceURl = new StringBuilder(restServerURI).append(\"/ping\").toString();\n+        WebTarget webTarget = client.target(resourceURl);\n+        Invocation.Builder builder = webTarget.request();\n+\n+        // Check if the response was as expected\n+        Response response = builder.get();\n+        assertEquals(\"Response to /ping was not OK\", OK.getStatusCode(), response.getStatus());\n+        log.info(\"Ping successful.\");\n+    }\n+\n+    //region Unit test\n+    @Test\n+    public void setsDefaultValuesWhenBuilderSpecifiesNoValues() {\n+        ClusterWrapper objectUnderTest = ClusterWrapper.builder().build();", "originalCommit": "a065875e2d792cc14efec6521bd1b82434d4835e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNjI3Ng==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537216276", "bodyText": "Ok. I've removed the unit tests from this integration test class in the latest commit. Have pushed the assertions for checking default values into an integration test above.", "author": "ravisharda", "createdAt": "2020-12-07T04:04:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5MDE5Mw=="}], "type": "inlineReview"}, {"oid": "461f49c6a6d63aa8a9dba458d8aeb954093e64d3", "url": "https://github.com/pravega/pravega/commit/461f49c6a6d63aa8a9dba458d8aeb954093e64d3", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-06T16:58:38Z", "type": "commit"}, {"oid": "96ccfaec24f2a8ebc81bc8360713113d8a89d511", "url": "https://github.com/pravega/pravega/commit/96ccfaec24f2a8ebc81bc8360713113d8a89d511", "message": "Address review comments\n\nSigned-off-by: rsharda <ravi.sharda@emc.com>", "committedDate": "2020-12-07T04:03:01Z", "type": "commit"}, {"oid": "7d249edb83f0e6eb802c1317520dafa8ee946945", "url": "https://github.com/pravega/pravega/commit/7d249edb83f0e6eb802c1317520dafa8ee946945", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-07T04:59:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM0ODY1Mw==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537348653", "bodyText": "cleanup using client.close()", "author": "shrids", "createdAt": "2020-12-07T09:21:36Z", "path": "test/integration/src/test/java/io/pravega/test/integration/ClusterWrapperTest.java", "diffHunk": "@@ -94,4 +136,66 @@ public void writeAndReadBackAMessageWithTlsAndAuthEnabledServer() {\n         String readMessage = TestUtils.readNextEventMessage(scopeName, streamName, readerClientConfig, readerGroupName);\n         assertEquals(testMessage, readMessage);\n     }\n+\n+    @SneakyThrows\n+    @Test\n+    public void restApiInvocationWithSecurityEnabled() {\n+        String restApiUser = \"rest-api-user\";\n+        String restApiUserPwd = \"super-secret\";\n+\n+        final Map<String, String> passwordInputFileEntries = new HashMap<>();\n+        passwordInputFileEntries.put(\"restApiUser\", \"prn::*,READ_UPDATE\");\n+\n+        // Setup and start the cluster\n+        @Cleanup\n+        ClusterWrapper cluster = ClusterWrapper.builder()\n+                .controllerRestEnabled(true)\n+\n+                // Auth related configs\n+                .authEnabled(true)\n+                .passwordAuthHandlerEntries(TestUtils.preparePasswordInputFileEntries(passwordInputFileEntries, restApiUserPwd))\n+\n+                // TLS related configs\n+                .tlsEnabled(true)\n+                .tlsServerCertificatePath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_CERT_FILE_NAME)\n+                .tlsServerKeyPath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_PRIVATE_KEY_FILE_NAME)\n+                .tlsHostVerificationEnabled(false)\n+                .tlsServerKeystorePath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_KEYSTORE_NAME)\n+                .tlsServerKeystorePasswordPath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_PASSWORD_FILE_NAME)\n+\n+                .build();\n+        cluster.start();\n+\n+        // Setup REST client config\n+        org.glassfish.jersey.client.ClientConfig clientConfig = new org.glassfish.jersey.client.ClientConfig();\n+        clientConfig.register(JacksonJsonProvider.class);\n+        clientConfig.property(\"sun.net.http.allowRestrictedHeaders\", \"true\");\n+        clientConfig.register(HttpAuthenticationFeature.basic(restApiUser, restApiUserPwd));\n+\n+        // Prepare a TLS context with truststore containing the signing CA's vertificate\n+        KeyStore trustStore = createTrustStore(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_CA_CERT_FILE_NAME);\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n+        tmf.init(trustStore);\n+        SSLContext tlsContext = SSLContext.getInstance(\"TLS\");\n+        tlsContext.init(null, tmf.getTrustManagers(), null);\n+\n+        // Instantiate the REST client\n+        javax.ws.rs.client.Client client = ClientBuilder.newBuilder()", "originalCommit": "7d249edb83f0e6eb802c1317520dafa8ee946945", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNTI3MA==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537405270", "bodyText": "Thanks for catching it - missed it.", "author": "ravisharda", "createdAt": "2020-12-07T10:44:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM0ODY1Mw=="}], "type": "inlineReview"}, {"oid": "cb123886b11c23a64089c56e1aa51107ce69cfb5", "url": "https://github.com/pravega/pravega/commit/cb123886b11c23a64089c56e1aa51107ce69cfb5", "message": "Address review comment\n\nSigned-off-by: rsharda <ravi.sharda@emc.com>", "committedDate": "2020-12-07T10:43:33Z", "type": "commit"}, {"oid": "9b00f95c0245861e410b3e69298c1f7f49f44fe8", "url": "https://github.com/pravega/pravega/commit/9b00f95c0245861e410b3e69298c1f7f49f44fe8", "message": "Merge remote-tracking branch 'origin/clusterwrapper-rest-support' into clusterwrapper-rest-support", "committedDate": "2020-12-07T10:43:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTI3Ng==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537551276", "bodyText": "Why did you move this method? I have another PR in flight touching this class and it's going to conflict with this one because of this change", "author": "andreipaduroiu", "createdAt": "2020-12-07T14:31:31Z", "path": "test/integration/src/main/java/io/pravega/test/integration/demo/ClusterWrapper.java", "diffHunk": "@@ -122,30 +137,64 @@\n \n     private ClusterWrapper() {}\n \n-    public void initialize() {\n+    @SneakyThrows\n+    public void start() {\n+        if (this.isAuthEnabled() && passwordAuthHandlerEntries == null) {\n+            this.passwordAuthHandlerEntries = Arrays.asList(defaultAuthHandlerEntry());\n+        }\n+        if (this.controllerRestEnabled && this.controllerRestPort <= 0) {\n+            this.controllerRestPort = TestUtils.getAvailableListenPort();\n+        }\n+        startZookeeper();\n+        log.info(\"Started Zookeeper\");\n+        startSegmentStore();\n+        log.info(\"Started Segment store\");\n+        startController();\n+        log.info(\"Started Controller\");\n+    }\n+\n+    @Override", "originalCommit": "9b00f95c0245861e410b3e69298c1f7f49f44fe8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MzEzOQ==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537563139", "bodyText": "Since I was enhancing this class, I thought it'd be a good opportunity to move around methods so that public and private methods are collocated.", "author": "ravisharda", "createdAt": "2020-12-07T14:46:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTI3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTg4Mg==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537551882", "bodyText": "Do any of these need cleaning up?", "author": "andreipaduroiu", "createdAt": "2020-12-07T14:32:16Z", "path": "test/integration/src/test/java/io/pravega/test/integration/ClusterWrapperTest.java", "diffHunk": "@@ -94,4 +136,69 @@ public void writeAndReadBackAMessageWithTlsAndAuthEnabledServer() {\n         String readMessage = TestUtils.readNextEventMessage(scopeName, streamName, readerClientConfig, readerGroupName);\n         assertEquals(testMessage, readMessage);\n     }\n+\n+    @SneakyThrows\n+    @Test\n+    public void restApiInvocationWithSecurityEnabled() {\n+        String restApiUser = \"rest-api-user\";\n+        String restApiUserPwd = \"super-secret\";\n+\n+        final Map<String, String> passwordInputFileEntries = new HashMap<>();\n+        passwordInputFileEntries.put(\"restApiUser\", \"prn::*,READ_UPDATE\");\n+\n+        // Setup and start the cluster\n+        @Cleanup\n+        ClusterWrapper cluster = ClusterWrapper.builder()\n+                .controllerRestEnabled(true)\n+\n+                // Auth related configs\n+                .authEnabled(true)\n+                .passwordAuthHandlerEntries(TestUtils.preparePasswordInputFileEntries(passwordInputFileEntries, restApiUserPwd))\n+\n+                // TLS related configs\n+                .tlsEnabled(true)\n+                .tlsServerCertificatePath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_CERT_FILE_NAME)\n+                .tlsServerKeyPath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_PRIVATE_KEY_FILE_NAME)\n+                .tlsHostVerificationEnabled(false)\n+                .tlsServerKeystorePath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_SERVER_KEYSTORE_NAME)\n+                .tlsServerKeystorePasswordPath(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_PASSWORD_FILE_NAME)\n+\n+                .build();\n+        cluster.start();\n+\n+        // Setup REST client config\n+        org.glassfish.jersey.client.ClientConfig clientConfig = new org.glassfish.jersey.client.ClientConfig();\n+        clientConfig.register(JacksonJsonProvider.class);\n+        clientConfig.property(\"sun.net.http.allowRestrictedHeaders\", \"true\");\n+        clientConfig.register(HttpAuthenticationFeature.basic(restApiUser, restApiUserPwd));\n+\n+        // Prepare a TLS context with truststore containing the signing CA's vertificate\n+        KeyStore trustStore = createTrustStore(TestUtils.pathToConfig() + SecurityConfigDefaults.TLS_CA_CERT_FILE_NAME);\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n+        tmf.init(trustStore);\n+        SSLContext tlsContext = SSLContext.getInstance(\"TLS\");", "originalCommit": "9b00f95c0245861e410b3e69298c1f7f49f44fe8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2NTg5Mg==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537565892", "bodyText": "It looks good to me. It's creating a truststore containing the CA certificate, so that the server certificate can be trusted by the client.", "author": "ravisharda", "createdAt": "2020-12-07T14:50:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NjUxNg==", "url": "https://github.com/pravega/pravega/pull/5389#discussion_r537576516", "bodyText": "Also, this is where we read certs from files, and we close the stream there:\n\n  \n    \n      pravega/common/src/main/java/io/pravega/common/util/CertificateUtils.java\n    \n    \n        Lines 40 to 47\n      in\n      2e70f87\n    \n    \n    \n    \n\n        \n          \n           public static X509Certificate[] extractCerts(String certFilePath) \n        \n\n        \n          \n                   throws CertificateException, IOException { \n        \n\n        \n          \n               Exceptions.checkNotNullOrEmpty(certFilePath, \"certFilePath\"); \n        \n\n        \n          \n            \n        \n\n        \n          \n               try (FileInputStream is = new FileInputStream(new File(certFilePath))) { \n        \n\n        \n          \n                   return extractCerts(is); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }", "author": "ravisharda", "createdAt": "2020-12-07T15:03:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU1MTg4Mg=="}], "type": "inlineReview"}, {"oid": "c610bed725246e4a46cdda266f6fec1462fafb43", "url": "https://github.com/pravega/pravega/commit/c610bed725246e4a46cdda266f6fec1462fafb43", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-08T01:35:15Z", "type": "commit"}, {"oid": "78b1021ec3df6dd33246785d6d28e60903bbbf71", "url": "https://github.com/pravega/pravega/commit/78b1021ec3df6dd33246785d6d28e60903bbbf71", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-08T05:02:18Z", "type": "commit"}, {"oid": "12701708ccd3f283076d7e96a73864b6c97cf38c", "url": "https://github.com/pravega/pravega/commit/12701708ccd3f283076d7e96a73864b6c97cf38c", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-08T15:48:23Z", "type": "commit"}, {"oid": "e63f8a2dcb73c42a3c74e83dda0a33430951d35d", "url": "https://github.com/pravega/pravega/commit/e63f8a2dcb73c42a3c74e83dda0a33430951d35d", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-09T04:08:14Z", "type": "commit"}, {"oid": "35ea457cccf1abd8bb04d45eab8d5c5ed2b9e9e3", "url": "https://github.com/pravega/pravega/commit/35ea457cccf1abd8bb04d45eab8d5c5ed2b9e9e3", "message": "Address review comment\n\nSigned-off-by: rsharda <ravi.sharda@emc.com>", "committedDate": "2020-12-09T14:51:44Z", "type": "commit"}, {"oid": "57944f4d38dbeff5c85fff7c27672ef504951676", "url": "https://github.com/pravega/pravega/commit/57944f4d38dbeff5c85fff7c27672ef504951676", "message": "Merge remote-tracking branch 'origin/clusterwrapper-rest-support' into clusterwrapper-rest-support", "committedDate": "2020-12-09T14:51:55Z", "type": "commit"}, {"oid": "2a62498509b0fd572f6ee69445968f24b4a4a62c", "url": "https://github.com/pravega/pravega/commit/2a62498509b0fd572f6ee69445968f24b4a4a62c", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-10T01:21:43Z", "type": "commit"}, {"oid": "a80a55d15ec9d9a250c4fc747d8bfc36ac88d2e4", "url": "https://github.com/pravega/pravega/commit/a80a55d15ec9d9a250c4fc747d8bfc36ac88d2e4", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-10T03:48:17Z", "type": "commit"}, {"oid": "813e8a15d36dbd78a43a683c67ea393d8b54cc9b", "url": "https://github.com/pravega/pravega/commit/813e8a15d36dbd78a43a683c67ea393d8b54cc9b", "message": "Merge branch 'master' into clusterwrapper-rest-support", "committedDate": "2020-12-10T15:04:00Z", "type": "commit"}]}