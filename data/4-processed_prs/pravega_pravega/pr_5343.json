{"pr_number": 5343, "pr_title": "Issue 5341: Fix thread leak in controller", "pr_createdAt": "2020-11-17T12:10:02Z", "pr_url": "https://github.com/pravega/pravega/pull/5343", "timeline": [{"oid": "de348bcc1f8954564c4366ff0a8fe55de1544fea", "url": "https://github.com/pravega/pravega/commit/de348bcc1f8954564c4366ff0a8fe55de1544fea", "message": "Issue 5341: Fix thread leak in controller\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-11-17T12:05:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzMTM2Ng==", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525131366", "bodyText": "Precondition check to verify that it is not null.", "author": "shrids", "createdAt": "2020-11-17T12:54:29Z", "path": "controller/src/main/java/io/pravega/controller/server/bucket/PeriodicWatermarking.java", "diffHunk": "@@ -387,14 +391,28 @@ boolean checkExistsInCache(Stream stream) {\n         private final ConcurrentHashMap<String, Long> inactiveWriters;\n         \n         WatermarkClient(Stream stream, ClientConfig clientConfig) {\n-            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig));\n+            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig), true);\n         }\n         \n         @VisibleForTesting\n         WatermarkClient(Stream stream, SynchronizerClientFactory clientFactory) {\n-            this.client = clientFactory.createRevisionedStreamClient(\n-                    NameUtils.getMarkStreamForStream(stream.getStreamName()), \n-                    new WatermarkSerializer(), SynchronizerConfig.builder().build());\n+            this(stream, clientFactory, false);\n+        }\n+        \n+        @VisibleForTesting\n+        WatermarkClient(Stream stream, SynchronizerClientFactory clientFactory, boolean closeClientFactory) {\n+            this.synchronizerClientFactory = clientFactory;\n+            this.closeClientFactory = closeClientFactory;", "originalCommit": "de348bcc1f8954564c4366ff0a8fe55de1544fea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5ODc4OQ==", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525198789", "bodyText": "removed this. its an internal constructor which is made visible for testing. so dont need preconditions.", "author": "shiveshr", "createdAt": "2020-11-17T14:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzMTM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzNjAwNg==", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525136006", "bodyText": "closeClientFactory is set to false only for tests. Hence we could remove the condition at line 411 below.", "author": "shrids", "createdAt": "2020-11-17T13:02:27Z", "path": "controller/src/main/java/io/pravega/controller/server/bucket/PeriodicWatermarking.java", "diffHunk": "@@ -387,14 +391,28 @@ boolean checkExistsInCache(Stream stream) {\n         private final ConcurrentHashMap<String, Long> inactiveWriters;\n         \n         WatermarkClient(Stream stream, ClientConfig clientConfig) {\n-            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig));\n+            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig), true);\n         }\n         \n         @VisibleForTesting\n         WatermarkClient(Stream stream, SynchronizerClientFactory clientFactory) {\n-            this.client = clientFactory.createRevisionedStreamClient(\n-                    NameUtils.getMarkStreamForStream(stream.getStreamName()), \n-                    new WatermarkSerializer(), SynchronizerConfig.builder().build());\n+            this(stream, clientFactory, false);", "originalCommit": "de348bcc1f8954564c4366ff0a8fe55de1544fea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5ODkxMA==", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525198910", "bodyText": "removed closeclientfactory", "author": "shiveshr", "createdAt": "2020-11-17T14:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzNjAwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzOTI1Ng==", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525139256", "bodyText": "Can we avoid creating a new SynchronizerClientFactory for every WatermarkClient? Every factory creates an new thread pool.", "author": "shrids", "createdAt": "2020-11-17T13:07:51Z", "path": "controller/src/main/java/io/pravega/controller/server/bucket/PeriodicWatermarking.java", "diffHunk": "@@ -387,14 +391,28 @@ boolean checkExistsInCache(Stream stream) {\n         private final ConcurrentHashMap<String, Long> inactiveWriters;\n         \n         WatermarkClient(Stream stream, ClientConfig clientConfig) {\n-            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig));\n+            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig), true);", "originalCommit": "de348bcc1f8954564c4366ff0a8fe55de1544fea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2OTY3NQ==", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525169675", "bodyText": "yeah, i was trying that. i will have to restructure the code a bit to achieve that.", "author": "shiveshr", "createdAt": "2020-11-17T13:51:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzOTI1Ng=="}], "type": "inlineReview"}, {"oid": "6006408b359e4a91bc78a7ea3725ceba118c921e", "url": "https://github.com/pravega/pravega/commit/6006408b359e4a91bc78a7ea3725ceba118c921e", "message": "PR comments\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-11-17T14:30:57Z", "type": "commit"}, {"oid": "36ab59db2110265371f77b792bc99c53501fad7c", "url": "https://github.com/pravega/pravega/commit/36ab59db2110265371f77b792bc99c53501fad7c", "message": "update unit test\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>", "committedDate": "2020-11-17T14:34:46Z", "type": "commit"}, {"oid": "ceebeeb9be589f1c2212732b46caaba58b35ea2c", "url": "https://github.com/pravega/pravega/commit/ceebeeb9be589f1c2212732b46caaba58b35ea2c", "message": "Merge branch 'master' into issue5341", "committedDate": "2020-11-18T07:00:37Z", "type": "commit"}]}