{"pr_number": 5373, "pr_title": "Issue 5372: Maintain compatibility for older Credentials interface", "pr_createdAt": "2020-11-25T06:40:26Z", "pr_url": "https://github.com/pravega/pravega/pull/5373", "timeline": [{"oid": "7bbc7d9abac42d6d125b961406cd3f2767b0709a", "url": "https://github.com/pravega/pravega/commit/7bbc7d9abac42d6d125b961406cd3f2767b0709a", "message": "Add legacy interface\n\nSigned-off-by: rsharda <ravi.sharda@emc.com>", "committedDate": "2020-11-25T06:12:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3NDQyOA==", "url": "https://github.com/pravega/pravega/pull/5373#discussion_r530774428", "bodyText": "Isn't this test similar to test testLoadsLegacyCredentialsUsingNewInterfacePackage? I think it is similar because\n\nboth LegacyCredentials1 and LegacyCredentials2 implement io.pravega.client.stream.impl.Credentials.  (older interface)\nThe test uses the latest io.pravega.client.stream.impl.Credentials interface (which extends io.pravega.shared.security.auth.Credentials)\nServiceLoader.load(io.pravega.shared.security.auth.Credentials) lists the impls of the older interface too.\n\nIf the above point is true then we need not check the implementations of the older interface in method ClientConfig.credentialFromMap()", "author": "shrids", "createdAt": "2020-11-26T04:59:24Z", "path": "client/src/test/java/io/pravega/client/CredentialsExtractorTest.java", "diffHunk": "@@ -190,6 +190,43 @@ public void testLoadsCredentialsObjOfARegisteredTypeFromEnvVariablesIfLoadDynami\n                 credentials.getAuthenticationType());\n     }\n \n+    @Test\n+    public void testLoadsLegacyCredentialsUsingNewInterfacePackage() {\n+        // This method depends on service definition in\n+        // resources/META-INF/services/io.pravega.shared.security.auth.Credentials file.\n+        Map<String, String> authEnvVariables = new HashMap<>();\n+        authEnvVariables.put(\"pravega_client_auth_loadDynamic\", \"true\");\n+        authEnvVariables.put(\"pravega_client_auth_method\", LegacyCredentials1.AUTHENTICATION_METHOD);\n+\n+        ClientConfig clientConfig = ClientConfig.builder()\n+                .extractCredentials(null, authEnvVariables)\n+                .build();\n+        Credentials credentials = clientConfig.getCredentials();\n+\n+        assertNotNull(\"Credentials is null\", credentials);\n+        assertNotNull(LegacyCredentials1.class.getName(), credentials.getClass());\n+        assertEquals(\"Expected a different authentication type\", LegacyCredentials1.AUTHENTICATION_METHOD,\n+                credentials.getAuthenticationType());\n+    }\n+\n+    @Test\n+    public void testLoadsLegacyCredentialsUsingOldInterfacePackage() {", "originalCommit": "7bbc7d9abac42d6d125b961406cd3f2767b0709a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4MjYzNg==", "url": "https://github.com/pravega/pravega/pull/5373#discussion_r530882636", "bodyText": "The difference in the tests is in how they are setup to load the legacy Credentials class.\nOne is setup using the new interface's service file:\nhttps://github.com/pravega/pravega/blob/7bbc7d9abac42d6d125b961406cd3f2767b0709a/client/src/test/resources/META-INF/services/io.pravega.shared.security.auth.Credentials\nThis simulates the scenario where the existing implementations of the io.pravega.client.stream.impl.Credentials will continue to work if they are specified using the new interface's service file: io.pravega.shared.security.auth.Credentials.\nThe other is setup using the old interface's service file:\nhttps://github.com/pravega/pravega/blob/7bbc7d9abac42d6d125b961406cd3f2767b0709a/client/src/test/resources/META-INF/services/io.pravega.client.stream.impl.Credentials\nThis simulates the scenario where the existing implementations of the io.pravega.client.stream.impl.Credentials will also work if they are specified using the old interface's service file: io.pravega.client.stream.impl.Credentials. So, they will work without any code or configuration changes.\nHope that clarifies. I guess this warrants some documentation in the test to make this more explicit. Will add some comments.", "author": "ravisharda", "createdAt": "2020-11-26T09:21:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3NDQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg5NTQ3MQ==", "url": "https://github.com/pravega/pravega/pull/5373#discussion_r530895471", "bodyText": "Thanks for the clarification. \ud83d\udc4d", "author": "shrids", "createdAt": "2020-11-26T09:40:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3NDQyOA=="}], "type": "inlineReview"}, {"oid": "c5574067dd4b5731fbbd2bbeadb32116593b5035", "url": "https://github.com/pravega/pravega/commit/c5574067dd4b5731fbbd2bbeadb32116593b5035", "message": "Merge branch 'master' into deprecated_credentials", "committedDate": "2020-11-26T09:45:47Z", "type": "commit"}, {"oid": "a65aa04deb4a449e00cf601b5fd0656401901c71", "url": "https://github.com/pravega/pravega/commit/a65aa04deb4a449e00cf601b5fd0656401901c71", "message": "Add comments to make the test logic more explicit\n\nSigned-off-by: rsharda <ravi.sharda@emc.com>", "committedDate": "2020-11-26T10:07:23Z", "type": "commit"}, {"oid": "9a7e00e1469c0c2e5e05164dd84cdb2b7bc52e55", "url": "https://github.com/pravega/pravega/commit/9a7e00e1469c0c2e5e05164dd84cdb2b7bc52e55", "message": "Merge remote-tracking branch 'origin/deprecated_credentials' into deprecated_credentials", "committedDate": "2020-11-26T10:07:34Z", "type": "commit"}]}