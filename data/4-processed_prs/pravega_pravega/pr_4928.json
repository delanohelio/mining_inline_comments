{"pr_number": 4928, "pr_title": "Issue 4859: Interactive Demo Tool", "pr_createdAt": "2020-07-08T15:31:39Z", "pr_url": "https://github.com/pravega/pravega/pull/4928", "timeline": [{"oid": "3d2a8516c52b66a4e0ee3a7c03c784759de6c6a1", "url": "https://github.com/pravega/pravega/commit/3d2a8516c52b66a4e0ee3a7c03c784759de6c6a1", "message": "Interactive demo tool.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>", "committedDate": "2020-07-08T15:31:04Z", "type": "commit"}, {"oid": "32b727439893b37ba76a9ab18f515be2e7d44e3e", "url": "https://github.com/pravega/pravega/commit/32b727439893b37ba76a9ab18f515be2e7d44e3e", "message": "Support for List KVTs.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>", "committedDate": "2020-07-08T20:10:53Z", "type": "commit"}, {"oid": "df6c4891c6cadce8c273559a93204296c811ae8e", "url": "https://github.com/pravega/pravega/commit/df6c4891c6cadce8c273559a93204296c811ae8e", "message": "Merge branch 'master' into issue-4859-demo-tool", "committedDate": "2020-07-13T10:18:37Z", "type": "commit"}, {"oid": "91a451cddf6193a3992e5c6d18d106bef12cf237", "url": "https://github.com/pravega/pravega/commit/91a451cddf6193a3992e5c6d18d106bef12cf237", "message": "Removed Chat Service demo. Will be added in the samples repo\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>", "committedDate": "2020-07-13T23:23:31Z", "type": "commit"}, {"oid": "375e1d75314950f40bf323f891a889bdba824721", "url": "https://github.com/pravega/pravega/commit/375e1d75314950f40bf323f891a889bdba824721", "message": "Merge branch 'master' into issue-4859-demo-tool", "committedDate": "2020-07-14T14:08:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5OTE1MA==", "url": "https://github.com/pravega/pravega/pull/4928#discussion_r454399150", "bodyText": "Nit: extra trailing space.", "author": "RaulGracia", "createdAt": "2020-07-14T14:29:43Z", "path": "build.gradle", "diffHunk": "@@ -552,6 +552,18 @@ project('test:integration') {\n         standardInput = System.in\n         systemProperties System.getProperties()\n     }\n+\n+    /**\n+     * See: https://github.com/pravega/pravega/wiki/Interactive-Demo-Tool .", "originalCommit": "375e1d75314950f40bf323f891a889bdba824721", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwMzA5NQ==", "url": "https://github.com/pravega/pravega/pull/4928#discussion_r454403095", "bodyText": "Perhaps the character = could be defined as a constant for readability.", "author": "RaulGracia", "createdAt": "2020-07-14T14:34:50Z", "path": "test/integration/src/main/java/io/pravega/test/integration/demo/interactive/ConfigCommand.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.test.integration.demo.interactive;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.base.Strings;\n+import java.util.HashMap;\n+import lombok.val;\n+\n+abstract class ConfigCommand extends Command {\n+    static final String COMPONENT = \"config\";\n+\n+    ConfigCommand(CommandArgs args) {\n+        super(args);\n+    }\n+\n+    private static Command.CommandDescriptor.CommandDescriptorBuilder createDescriptor(String name, String description) {\n+        return Command.CommandDescriptor.builder()\n+                .component(COMPONENT)\n+                .name(name)\n+                .description(description);\n+    }\n+\n+    static class Set extends ConfigCommand {\n+        Set(CommandArgs args) {\n+            super(args);\n+        }\n+\n+        @Override\n+        public void execute() {\n+            ensureMinArgCount(1);\n+            val newValues = new HashMap<String, String>();\n+            getCommandArgs().getArgs().forEach(s -> {\n+                String[] items = s.split(\"=\");", "originalCommit": "375e1d75314950f40bf323f891a889bdba824721", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwMzgyNg==", "url": "https://github.com/pravega/pravega/pull/4928#discussion_r454403826", "bodyText": "Nit: too many blank lines.", "author": "RaulGracia", "createdAt": "2020-07-14T14:35:40Z", "path": "test/integration/src/main/java/io/pravega/test/integration/demo/interactive/InteractiveDemo.java", "diffHunk": "@@ -0,0 +1,164 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.test.integration.demo.interactive;\n+\n+import ch.qos.logback.classic.Level;\n+import ch.qos.logback.classic.LoggerContext;\n+import com.google.common.base.Strings;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Scanner;\n+import java.util.stream.Collectors;\n+import lombok.Cleanup;\n+import lombok.val;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Interactive CLI Demo Tool for Pravega.\n+ */\n+public class InteractiveDemo {\n+    private static final String CMD_HELP = \"help\";\n+    private static final String CMD_EXIT = \"exit\";\n+\n+    public static void main(String[] args) throws Exception {\n+        LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();\n+        context.getLoggerList().get(0).setLevel(Level.ERROR);\n+\n+        System.out.println(\"Pravega Interactive Demo Tool.\");\n+        System.out.println(\"\\tUsage instructions: https://github.com/pravega/pravega/wiki/Interactive-Demo-Tool\\n\");\n+        val config = InteractiveConfig.getDefault();\n+\n+        // Output loaded config.\n+        System.out.println(\"Initial configuration:\");\n+        val initialConfigCmd = new ConfigCommand.List(new CommandArgs(Collections.emptyList(), config));\n+        initialConfigCmd.execute();\n+\n+        if (args == null || args.length == 0) {\n+            interactiveMode(config);\n+        } else {\n+            String commandLine = Arrays.stream(args).collect(Collectors.joining(\" \", \"\", \"\"));\n+            processCommand(commandLine, config);\n+        }\n+        System.exit(0);\n+    }\n+\n+    private static void interactiveMode(InteractiveConfig config) {\n+        // Continuously accept new commands as long as the user entered one.\n+        System.out.println(String.format(\"%nType \\\"%s\\\" for list of commands, or \\\"%s\\\" to exit.\", CMD_HELP, CMD_EXIT));\n+        @Cleanup\n+        Scanner input = new Scanner(System.in);\n+        while (true) {\n+            System.out.print(System.lineSeparator() + \"> \");\n+            String line = input.nextLine();\n+            processCommand(line, config);\n+        }\n+    }\n+", "originalCommit": "375e1d75314950f40bf323f891a889bdba824721", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwMzk5Ng==", "url": "https://github.com/pravega/pravega/pull/4928#discussion_r454403996", "bodyText": "Nit: too many blank lines.", "author": "RaulGracia", "createdAt": "2020-07-14T14:35:52Z", "path": "test/integration/src/main/java/io/pravega/test/integration/demo/interactive/InteractiveDemo.java", "diffHunk": "@@ -0,0 +1,164 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.test.integration.demo.interactive;\n+\n+import ch.qos.logback.classic.Level;\n+import ch.qos.logback.classic.LoggerContext;\n+import com.google.common.base.Strings;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Scanner;\n+import java.util.stream.Collectors;\n+import lombok.Cleanup;\n+import lombok.val;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Interactive CLI Demo Tool for Pravega.\n+ */\n+public class InteractiveDemo {\n+    private static final String CMD_HELP = \"help\";\n+    private static final String CMD_EXIT = \"exit\";\n+\n+    public static void main(String[] args) throws Exception {\n+        LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();\n+        context.getLoggerList().get(0).setLevel(Level.ERROR);\n+\n+        System.out.println(\"Pravega Interactive Demo Tool.\");\n+        System.out.println(\"\\tUsage instructions: https://github.com/pravega/pravega/wiki/Interactive-Demo-Tool\\n\");\n+        val config = InteractiveConfig.getDefault();\n+\n+        // Output loaded config.\n+        System.out.println(\"Initial configuration:\");\n+        val initialConfigCmd = new ConfigCommand.List(new CommandArgs(Collections.emptyList(), config));\n+        initialConfigCmd.execute();\n+\n+        if (args == null || args.length == 0) {\n+            interactiveMode(config);\n+        } else {\n+            String commandLine = Arrays.stream(args).collect(Collectors.joining(\" \", \"\", \"\"));\n+            processCommand(commandLine, config);\n+        }\n+        System.exit(0);\n+    }\n+\n+    private static void interactiveMode(InteractiveConfig config) {\n+        // Continuously accept new commands as long as the user entered one.\n+        System.out.println(String.format(\"%nType \\\"%s\\\" for list of commands, or \\\"%s\\\" to exit.\", CMD_HELP, CMD_EXIT));\n+        @Cleanup\n+        Scanner input = new Scanner(System.in);\n+        while (true) {\n+            System.out.print(System.lineSeparator() + \"> \");\n+            String line = input.nextLine();\n+            processCommand(line, config);\n+        }\n+    }\n+\n+\n+    private static void processCommand(String line, InteractiveConfig config) {\n+        if (Strings.isNullOrEmpty(line.trim())) {\n+            return;\n+        }\n+\n+        Parser.Command pc = Parser.parse(line, config);\n+        switch (pc.getComponent()) {\n+            case CMD_HELP:\n+                printHelp(null);\n+                break;\n+            case CMD_EXIT:\n+                System.exit(0);\n+                break;\n+            default:\n+                execCommand(pc);\n+                break;\n+        }\n+    }\n+", "originalCommit": "375e1d75314950f40bf323f891a889bdba824721", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c647d90029b9bd39bdcd514edfdcfaf35eb78676", "url": "https://github.com/pravega/pravega/commit/c647d90029b9bd39bdcd514edfdcfaf35eb78676", "message": "Code review feedback.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>", "committedDate": "2020-07-14T15:27:32Z", "type": "commit"}, {"oid": "0d9893222926a3b134c6726f142015f28f92e424", "url": "https://github.com/pravega/pravega/commit/0d9893222926a3b134c6726f142015f28f92e424", "message": "Merge remote-tracking branch 'ap/issue-4859-demo-tool' into issue-4859-demo-tool", "committedDate": "2020-07-14T15:27:38Z", "type": "commit"}]}