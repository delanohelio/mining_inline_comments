{"pr_number": 4876, "pr_title": "Issue 4793: TableSegment Offset-Conditional Update", "pr_createdAt": "2020-06-17T18:02:45Z", "pr_url": "https://github.com/pravega/pravega/pull/4876", "timeline": [{"oid": "08601afd11463bf700a6d0af3f33dcb53f935e09", "url": "https://github.com/pravega/pravega/commit/08601afd11463bf700a6d0af3f33dcb53f935e09", "message": "Update K8 client APIs to use their 5.0.0 counterparts.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-02-21T00:13:24Z", "type": "commit"}, {"oid": "25a165d0293c34ee8703fff764e55cf8fda413dd", "url": "https://github.com/pravega/pravega/commit/25a165d0293c34ee8703fff764e55cf8fda413dd", "message": "Merge pull request #1 from co-jo/issue-4464-update-kubernetes-client-version\n\nIssue 4464 update kubernetes client version", "committedDate": "2020-02-21T18:42:03Z", "type": "commit"}, {"oid": "8cc2dd2be26feed2953258ff055c1657aeb57019", "url": "https://github.com/pravega/pravega/commit/8cc2dd2be26feed2953258ff055c1657aeb57019", "message": "Run system tests using alternative flag value.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-02-23T04:43:09Z", "type": "commit"}, {"oid": "c3fcbd2e627f9fc0a0f6bad7e42667db4439e092", "url": "https://github.com/pravega/pravega/commit/c3fcbd2e627f9fc0a0f6bad7e42667db4439e092", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-03-10T22:21:32Z", "type": "commit"}, {"oid": "f5f808cc42831892aeb8e7824c22d499a1f9fa03", "url": "https://github.com/pravega/pravega/commit/f5f808cc42831892aeb8e7824c22d499a1f9fa03", "message": "Merge branch 'master' of https://github.com/pravega/pravega", "committedDate": "2020-03-18T18:44:10Z", "type": "commit"}, {"oid": "7901435dc1127bed1c46845bbaf8024477e2078f", "url": "https://github.com/pravega/pravega/commit/7901435dc1127bed1c46845bbaf8024477e2078f", "message": "Merge branch 'master' of https://github.com/pravega/pravega\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-04-02T18:49:59Z", "type": "commit"}, {"oid": "d59b3e33f6d5bd90264753caadcea7ed7bbfe06c", "url": "https://github.com/pravega/pravega/commit/d59b3e33f6d5bd90264753caadcea7ed7bbfe06c", "message": "Merge branch 'master' of https://github.com/pravega/pravega", "committedDate": "2020-04-16T20:22:05Z", "type": "commit"}, {"oid": "aa090cad1d88812f2a88e9debacdb04df585adbf", "url": "https://github.com/pravega/pravega/commit/aa090cad1d88812f2a88e9debacdb04df585adbf", "message": "Merge branch 'master' of https://github.com/pravega/pravega", "committedDate": "2020-04-18T20:15:50Z", "type": "commit"}, {"oid": "e328bcb38239fdc32f866980ee1103c93dff522d", "url": "https://github.com/pravega/pravega/commit/e328bcb38239fdc32f866980ee1103c93dff522d", "message": "Merge branch 'master' of https://github.com/co-jo/pravega", "committedDate": "2020-05-11T22:25:21Z", "type": "commit"}, {"oid": "cd02180986f49a42002c7fd2ef28885d1f701af9", "url": "https://github.com/pravega/pravega/commit/cd02180986f49a42002c7fd2ef28885d1f701af9", "message": "Merge branch 'master' of https://github.com/pravega/pravega", "committedDate": "2020-05-11T22:25:27Z", "type": "commit"}, {"oid": "1408d7527ec73f1645418df04aea4aa1120b39e7", "url": "https://github.com/pravega/pravega/commit/1408d7527ec73f1645418df04aea4aa1120b39e7", "message": "Merge branch 'master' of https://github.com/co-jo/pravega", "committedDate": "2020-05-18T20:48:16Z", "type": "commit"}, {"oid": "e2719517850f39bce3e5f2c92f04c8c24122a520", "url": "https://github.com/pravega/pravega/commit/e2719517850f39bce3e5f2c92f04c8c24122a520", "message": "Merge branch 'master' of https://github.com/pravega/pravega", "committedDate": "2020-05-20T18:59:36Z", "type": "commit"}, {"oid": "b1d3648dd2c28a161dab520a48bf4bf657f9d14d", "url": "https://github.com/pravega/pravega/commit/b1d3648dd2c28a161dab520a48bf4bf657f9d14d", "message": "Merge branch 'master' of https://github.com/pravega/pravega", "committedDate": "2020-06-15T18:43:02Z", "type": "commit"}, {"oid": "e660da3317f916d721acd0ea240b6a1068c2a179", "url": "https://github.com/pravega/pravega/commit/e660da3317f916d721acd0ea240b6a1068c2a179", "message": "* Add conditional updates (conditioned on the length of the TableSegment) to `RemoveTableKeys` and `UpdateTableEntries` WireCommands.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-17T17:43:13Z", "type": "commit"}, {"oid": "9d7041ee57c1d5332c3580726d10dad59426344d", "url": "https://github.com/pravega/pravega/commit/9d7041ee57c1d5332c3580726d10dad59426344d", "message": "Merge branch 'master' into issue-4793-tablesegment-update-api", "committedDate": "2020-06-17T18:02:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgxODcyMQ==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r441818721", "bodyText": "This offset check needs to be preformed atomically with respect to this put.\nAs is, this code will only check the length at the time the request arrived, but it could change by the time put is processed. So the value needs to be passed into tablestore to make the update atomic.", "author": "tkaitchuck", "createdAt": "2020-06-17T20:36:16Z", "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/PravegaRequestProcessor.java", "diffHunk": "@@ -648,12 +651,19 @@ public void updateTableEntries(final WireCommands.UpdateTableEntries updateTable\n         }\n \n         val timer = new Timer();\n-        tableStore.put(segment, entries, TIMEOUT)\n-                .thenAccept(versions -> {\n-                    connection.send(new WireCommands.TableEntriesUpdated(updateTableEntries.getRequestId(), versions));\n-                    this.tableStatsRecorder.updateEntries(updateTableEntries.getSegment(), entries.size(), conditional.get(), timer.getElapsed());\n-                })\n-                .exceptionally(e -> handleException(updateTableEntries.getRequestId(), segment, operation, e));\n+        long tableSegmentOffset = updateTableEntries.getTableSegmentOffset();\n+        segmentInfo.thenCompose(properties -> {\n+            if (tableSegmentOffset == NULL_TABLE_SEGMENT_OFFSET || tableSegmentOffset == properties.getLength()) {\n+                return tableStore.put(segment, entries, TIMEOUT);", "originalCommit": "9d7041ee57c1d5332c3580726d10dad59426344d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyMjM4Mg==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r441822382", "bodyText": "@co-jo You can push this check down all the way into ContainerTableExtensionImpl in the commit method. That method invokes DirectSegmentAccess.append which should have an overload that takes an offset (if it doesn't then we should add one (the plumbing underneath is already done)). That will guarantee this to be an atomic length-conditional append.", "author": "andreipaduroiu", "createdAt": "2020-06-17T20:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgxODcyMQ=="}], "type": "inlineReview"}, {"oid": "65d094e021d03737a850051216d8f0d0b1eaaa6e", "url": "https://github.com/pravega/pravega/commit/65d094e021d03737a850051216d8f0d0b1eaaa6e", "message": "* Overload DirectSegmentAccess.append to include an offset parameter.\n* Overload TableStore remove/put operations to also include an offset parameter.\n* Update all classes implementing those interfaces changed (above).\n* Adjust some of the PravegaRequestProcessorTests.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-18T21:54:09Z", "type": "commit"}, {"oid": "6e8262a83e169105e4d6b259eb24ecfdff63eb1e", "url": "https://github.com/pravega/pravega/commit/6e8262a83e169105e4d6b259eb24ecfdff63eb1e", "message": "Merge remote-tracking branch 'origin/issue-4793-tablesegment-update-api' into issue-4793-tablesegment-update-api", "committedDate": "2020-06-18T21:54:29Z", "type": "commit"}, {"oid": "ecebdfb271f25d0f587d3e0fb31f5802c87f94ea", "url": "https://github.com/pravega/pravega/commit/ecebdfb271f25d0f587d3e0fb31f5802c87f94ea", "message": "* Fix formatting.\n* Let tableSegmentOffset be inclusive of a zero value.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-18T22:11:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0Mzg1Mw==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r442943853", "bodyText": "Note: I'm assuming that an offset of 0 is valid.", "author": "co-jo", "createdAt": "2020-06-19T16:43:23Z", "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "diffHunk": "@@ -1662,7 +1662,7 @@ public static WireCommand readFrom(ByteBufInputStream in, int length) throws IOE\n             String segment = in.readUTF();\n             String delegationToken = in.readUTF();\n             TableEntries entries = (TableEntries) TableEntries.readFrom(in, in.available());\n-            long tableSegmentOffset = (in.available() > 0 ) ? in.readLong() : NULL_TABLE_SEGMENT_OFFSET;\n+            long tableSegmentOffset = (in.available() >= 0 ) ? in.readLong() : NULL_TABLE_SEGMENT_OFFSET;", "originalCommit": "ecebdfb271f25d0f587d3e0fb31f5802c87f94ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3NzI2NQ==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447077265", "bodyText": "An offset of 0 is valid, but why are you making this change? This checks for how many bytes are available for reading from the buffer stream.", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0Mzg1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNDk3OQ==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447134979", "bodyText": "Touche.. Had a little bit of a brain fart. Will revert.", "author": "co-jo", "createdAt": "2020-06-29T17:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0Mzg1Mw=="}], "type": "inlineReview"}, {"oid": "3a2554aca96879576eff686cdf0cd36476338b73", "url": "https://github.com/pravega/pravega/commit/3a2554aca96879576eff686cdf0cd36476338b73", "message": "* Remove unused call.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-19T16:45:58Z", "type": "commit"}, {"oid": "756ed10f1eb3e27073de307d573ac5526403b9a6", "url": "https://github.com/pravega/pravega/commit/756ed10f1eb3e27073de307d573ac5526403b9a6", "message": "* Add new test for new APIs that accept offsets.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-19T20:14:32Z", "type": "commit"}, {"oid": "891fd832c8d5b80a8d3ad26e6c5f8943c901a8c5", "url": "https://github.com/pravega/pravega/commit/891fd832c8d5b80a8d3ad26e6c5f8943c901a8c5", "message": "Merge branch 'master' into issue-4793-tablesegment-update-api", "committedDate": "2020-06-22T17:10:25Z", "type": "commit"}, {"oid": "6091584a6e6b0bf17fd497432aa996715fdaf5d4", "url": "https://github.com/pravega/pravega/commit/6091584a6e6b0bf17fd497432aa996715fdaf5d4", "message": "* Remove SLF4j import/annotation.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-22T19:40:22Z", "type": "commit"}, {"oid": "23d499878b1f72b4e9ee7743239074830edcf835", "url": "https://github.com/pravega/pravega/commit/23d499878b1f72b4e9ee7743239074830edcf835", "message": "Merge remote-tracking branch 'origin/issue-4793-tablesegment-update-api' into issue-4793-tablesegment-update-api", "committedDate": "2020-06-22T19:40:40Z", "type": "commit"}, {"oid": "96993d8d7ca83f8be9dfc1678b640aca4998d2dd", "url": "https://github.com/pravega/pravega/commit/96993d8d7ca83f8be9dfc1678b640aca4998d2dd", "message": "* Add back mistakenly removed imports.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-22T19:47:10Z", "type": "commit"}, {"oid": "221c7bb8e882d565d1e516f7dd72ac0d8c74e01e", "url": "https://github.com/pravega/pravega/commit/221c7bb8e882d565d1e516f7dd72ac0d8c74e01e", "message": " * Added calls to offset conditional put/removes in TableServiceTests.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-22T21:09:45Z", "type": "commit"}, {"oid": "7e19a142fc23f695120bbf680a6bfadc5c93f6ef", "url": "https://github.com/pravega/pravega/commit/7e19a142fc23f695120bbf680a6bfadc5c93f6ef", "message": "Merge remote-tracking branch 'remotes/upstream/master' into issue-4793-tablesegment-update-api\n\n# Conflicts:\n#\tsegmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/PravegaRequestProcessor.java\n#\tsegmentstore/server/host/src/test/java/io/pravega/segmentstore/server/host/handler/PravegaRequestProcessorTest.java\n#\tsegmentstore/server/src/main/java/io/pravega/segmentstore/server/tables/ContainerTableExtensionImpl.java\n#\tsegmentstore/server/src/main/java/io/pravega/segmentstore/server/tables/TableService.java\n#\tsegmentstore/server/src/test/java/io/pravega/segmentstore/server/TableStoreMock.java\n#\tshared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java\n#\ttest/integration/src/main/java/io/pravega/test/integration/selftest/adapters/InProcessMockClientAdapter.java", "committedDate": "2020-06-24T00:04:24Z", "type": "commit"}, {"oid": "32a833d005314be2200be988171e11fbde25b8f7", "url": "https://github.com/pravega/pravega/commit/32a833d005314be2200be988171e11fbde25b8f7", "message": "* Finish merge.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-24T00:36:08Z", "type": "commit"}, {"oid": "109bbbf0b736e326b31c69383adaed189c276049", "url": "https://github.com/pravega/pravega/commit/109bbbf0b736e326b31c69383adaed189c276049", "message": "* Fix checkstyle violation.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-24T17:50:49Z", "type": "commit"}, {"oid": "3c7b24575228c1cf42e6322fb0411832852bd1ab", "url": "https://github.com/pravega/pravega/commit/3c7b24575228c1cf42e6322fb0411832852bd1ab", "message": "* Add coverage for new overloaded append operation.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-24T19:17:22Z", "type": "commit"}, {"oid": "c1b2cbb02feb9b2ed7c7c6a36bcc1f84411126c1", "url": "https://github.com/pravega/pravega/commit/c1b2cbb02feb9b2ed7c7c6a36bcc1f84411126c1", "message": "* Add coverage for append operation.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-24T21:50:11Z", "type": "commit"}, {"oid": "f07ba1461e0213b1b63f146755ea830ceb031c55", "url": "https://github.com/pravega/pravega/commit/f07ba1461e0213b1b63f146755ea830ceb031c55", "message": "* Improve code coverage.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-25T18:58:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3MTYwNw==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447071607", "bodyText": "add \" conditioned on the Segment's Length matching an expected value\".\ndo this for remove too.", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:46:38Z", "path": "segmentstore/contracts/src/main/java/io/pravega/segmentstore/contracts/tables/TableStore.java", "diffHunk": "@@ -144,6 +145,32 @@ default int maximumValueLength() {\n      */\n     CompletableFuture<List<Long>> put(String segmentName, List<TableEntry> entries, Duration timeout);\n \n+    /**\n+     * Inserts new or updates existing Table Entries into the given Table Segment.", "originalCommit": "f07ba1461e0213b1b63f146755ea830ceb031c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3MjUzMQ==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447072531", "bodyText": "\"the actual offset\" -> \"the actual segment length\"\nchange it below too.", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:47:55Z", "path": "segmentstore/contracts/src/main/java/io/pravega/segmentstore/contracts/tables/TableStore.java", "diffHunk": "@@ -144,6 +145,32 @@ default int maximumValueLength() {\n      */\n     CompletableFuture<List<Long>> put(String segmentName, List<TableEntry> entries, Duration timeout);\n \n+    /**\n+     * Inserts new or updates existing Table Entries into the given Table Segment.\n+     *\n+     * @param segmentName        The name of the Table Segment to insert/update the Table Entries.\n+     * @param entries            A List of {@link TableEntry} instances to insert or update. If {@link TableEntry#key}\n+     *                           {@link TableKey#version hasVersion} returns true for at least one of the items in the list,\n+     *                           then this will perform an atomic Conditional Update. If {@link TableEntry#key}\n+     *                           {@link TableKey#version} hasVersion} returns false for ALL items in the list, then this\n+     *                           will perform an Unconditional update.\n+     * @param tableSegmentOffset The expected offset of the TableSegment used for conditional (expected matches actual) appends.\n+     * @param timeout            Timeout for the operation.\n+     * @return A CompletableFuture that, when completed, will contain a List with the current version of the each TableEntry\n+     * Key provided. The versions will be in the same order as the TableEntry instances provided. If the operation failed,\n+     * the future will be failed with the causing exception. Notable exceptions:\n+     * <ul>\n+     * <li>{@link StreamSegmentNotExistsException} If the Table Segment does not exist.</li>\n+     * <li>{@link TableKeyTooLongException} If {@link TableEntry#key} exceeds {@link #maximumKeyLength()}.</li>\n+     * <li>{@link TableValueTooLongException} If {@link TableEntry#value} exceeds {@link #maximumValueLength()}.</li>\n+     * <li>{@link ConditionalTableUpdateException} If {@link TableEntry#key} {@link TableKey#hasVersion() hasVersion() } is true and\n+     * {@link TableEntry#key} {@link TableKey#version} does not match the Table Entry's Key current Table Version. </li>\n+     * <li>{@link BadSegmentTypeException} If segmentName refers to a non-Table Segment. </li>\n+     * <li>{@link BadOffsetException} If there is a mismatch between the provided {@param tableSegmentOffset} and the actual offset.", "originalCommit": "f07ba1461e0213b1b63f146755ea830ceb031c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3MzMyMA==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447073320", "bodyText": "\"The expected length of the segment. If the current length of the Segment does not equal this value, the operation will fail with a {@link BadOffsetException}.\"", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:49:16Z", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/DirectSegmentAccess.java", "diffHunk": "@@ -51,14 +51,34 @@\n      */\n     CompletableFuture<Long> append(BufferView data, Collection<AttributeUpdate> attributeUpdates, Duration timeout);\n \n+    /**\n+     * Appends a range of bytes at the end of the Segment and atomically updates the given attributes. The byte range\n+     * will be appended as a contiguous block, however there is no guarantee of ordering between different calls to this\n+     * method.\n+     * @see io.pravega.segmentstore.contracts.StreamSegmentStore#append(String, BufferView, Collection, Duration)\n+     *\n+     * @param data             The data to add.\n+     * @param attributeUpdates A Collection of Attribute-Values to set or update. May be null (which indicates no updates).\n+     *                         See Notes about AttributeUpdates in the interface Javadoc.\n+     * @param offset           The expected offset that the append will occur at.", "originalCommit": "f07ba1461e0213b1b63f146755ea830ceb031c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3MzY1MQ==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447073651", "bodyText": "tableSegmentOffset -> offset", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:49:43Z", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/containers/StreamSegmentContainer.java", "diffHunk": "@@ -882,6 +882,15 @@ private void shutdownWhenStopped(Service component, String componentName) {\n                     .thenApply(v -> operation.getStreamSegmentOffset());\n         }\n \n+        @Override\n+        public CompletableFuture<Long> append(BufferView data, Collection<AttributeUpdate> attributeUpdates, long tableSegmentOffset, Duration timeout) {", "originalCommit": "f07ba1461e0213b1b63f146755ea830ceb031c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3NTg3MA==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447075870", "bodyText": "No. Do not import this value. This code should not depend on io.pravega.shared.protocol.\nDefine an internal constant NO_OFFSET, set it to -1, and use it just in this class. Then in commit, invoke the appropriate API of DirectSegmentAccess based on whether you have this value or not. (actually you already make this check, so just change it to the internal value)", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:52:58Z", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/tables/ContainerTableExtensionImpl.java", "diffHunk": "@@ -53,6 +54,7 @@\n import lombok.extern.slf4j.Slf4j;\n import lombok.val;\n \n+import static io.pravega.shared.protocol.netty.WireCommands.NULL_TABLE_SEGMENT_OFFSET;", "originalCommit": "f07ba1461e0213b1b63f146755ea830ceb031c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3NjIzNw==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447076237", "bodyText": "Remove the second part of this check. You cannot rely on the length of the segment at this point as there may be multiple operations in flight that will affect it before your operation is processed.", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:53:32Z", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/tables/ContainerTableExtensionImpl.java", "diffHunk": "@@ -320,9 +332,15 @@ protected int getMaxCompactionSize() {\n     }\n \n     private <T> CompletableFuture<Long> commit(Collection<T> toCommit, Function<Collection<T>, BufferView> serializer,\n-                                               DirectSegmentAccess segment, Duration timeout) {\n-        BufferView s = serializer.apply(toCommit);\n-        return segment.append(s, null, timeout);\n+                                               DirectSegmentAccess segment, long tableSegmentOffset, Duration timeout) {\n+        if (tableSegmentOffset == NULL_TABLE_SEGMENT_OFFSET || tableSegmentOffset == segment.getInfo().getLength()) {", "originalCommit": "f07ba1461e0213b1b63f146755ea830ceb031c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA3NjQ2Ng==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r447076466", "bodyText": "Invoke the appropriate DirectSegmentAccess.append method here instead of throwing this.", "author": "andreipaduroiu", "createdAt": "2020-06-29T15:53:53Z", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/tables/ContainerTableExtensionImpl.java", "diffHunk": "@@ -320,9 +332,15 @@ protected int getMaxCompactionSize() {\n     }\n \n     private <T> CompletableFuture<Long> commit(Collection<T> toCommit, Function<Collection<T>, BufferView> serializer,\n-                                               DirectSegmentAccess segment, Duration timeout) {\n-        BufferView s = serializer.apply(toCommit);\n-        return segment.append(s, null, timeout);\n+                                               DirectSegmentAccess segment, long tableSegmentOffset, Duration timeout) {\n+        if (tableSegmentOffset == NULL_TABLE_SEGMENT_OFFSET || tableSegmentOffset == segment.getInfo().getLength()) {\n+            BufferView s = serializer.apply(toCommit);\n+            return segment.append(s, null, timeout);\n+        } else {\n+            CompletableFuture<Long> future = new CompletableFuture<>();", "originalCommit": "f07ba1461e0213b1b63f146755ea830ceb031c55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "016dc92a0e745f7ee4abf73ef5627e3666996e73", "url": "https://github.com/pravega/pravega/commit/016dc92a0e745f7ee4abf73ef5627e3666996e73", "message": "* Address comments.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-30T19:24:56Z", "type": "commit"}, {"oid": "62ed90706cbb0ba43a4936dd7f6c44e72caf8b18", "url": "https://github.com/pravega/pravega/commit/62ed90706cbb0ba43a4936dd7f6c44e72caf8b18", "message": "* Add more accurate description for parameter.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-30T19:25:32Z", "type": "commit"}, {"oid": "760afff4a3029243d136b9adc6e632b512c4de8f", "url": "https://github.com/pravega/pravega/commit/760afff4a3029243d136b9adc6e632b512c4de8f", "message": "* Update offsetAcceptingMethods test because put/remove methods no longer explicitly throw a BadOffsetException.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-30T21:00:01Z", "type": "commit"}, {"oid": "93886fc639e715cfc5c3a37d9d052e7ff4bd9791", "url": "https://github.com/pravega/pravega/commit/93886fc639e715cfc5c3a37d9d052e7ff4bd9791", "message": "* Remove unused import.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-06-30T22:04:49Z", "type": "commit"}, {"oid": "5a206647bbdaf6e51fb2c816412cb6ef96cfaeaa", "url": "https://github.com/pravega/pravega/commit/5a206647bbdaf6e51fb2c816412cb6ef96cfaeaa", "message": "Merge branch 'master' into issue-4793-tablesegment-update-api", "committedDate": "2020-06-30T23:48:33Z", "type": "commit"}, {"oid": "391c28f7c53f6c1d72304938d68d0b3699832831", "url": "https://github.com/pravega/pravega/commit/391c28f7c53f6c1d72304938d68d0b3699832831", "message": "Merge remote-tracking branch 'origin/issue-4793-tablesegment-update-api' into issue-4793-tablesegment-update-api", "committedDate": "2020-06-30T23:48:57Z", "type": "commit"}, {"oid": "661146653a39a8a1d968b2a7e2c5db28e6090969", "url": "https://github.com/pravega/pravega/commit/661146653a39a8a1d968b2a7e2c5db28e6090969", "message": "Merge branch 'master' into issue-4793-tablesegment-update-api", "committedDate": "2020-07-01T16:13:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3NTAzMg==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r448475032", "bodyText": "I was only asking you to do the conditional commit for the second case. Please bring back the if-else block and only pass the explicit offset in the else case. Do not pass tableSegmentOffset in the if case as it's just a coincidence that -1 is the \"no-offset\" append that is now in the Segment Store. By using the other append (non-conditional), you shield yourself from any future change in the segment store that may affect how that works.", "author": "andreipaduroiu", "createdAt": "2020-07-01T16:19:08Z", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/tables/ContainerTableExtensionImpl.java", "diffHunk": "@@ -333,14 +336,8 @@ protected int getMaxCompactionSize() {\n \n     private <T> CompletableFuture<Long> commit(Collection<T> toCommit, Function<Collection<T>, BufferView> serializer,\n                                                DirectSegmentAccess segment, long tableSegmentOffset, Duration timeout) {\n-        if (tableSegmentOffset == NULL_TABLE_SEGMENT_OFFSET || tableSegmentOffset == segment.getInfo().getLength()) {\n             BufferView s = serializer.apply(toCommit);\n-            return segment.append(s, null, timeout);\n-        } else {\n-            CompletableFuture<Long> future = new CompletableFuture<>();\n-            future.completeExceptionally(new BadOffsetException(segment.getInfo().getName(), segment.getInfo().getLength(), tableSegmentOffset));\n-            return future;\n-        }\n+            return segment.append(s, null, tableSegmentOffset, timeout);", "originalCommit": "661146653a39a8a1d968b2a7e2c5db28e6090969", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bda2cd6a7aa57a806cf188a64f3c5cc38315a719", "url": "https://github.com/pravega/pravega/commit/bda2cd6a7aa57a806cf188a64f3c5cc38315a719", "message": "* Utilize both appends.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-07-01T19:00:53Z", "type": "commit"}, {"oid": "e2d94f6cf0cc8222d3f8aaafa17dae379a2739ec", "url": "https://github.com/pravega/pravega/commit/e2d94f6cf0cc8222d3f8aaafa17dae379a2739ec", "message": "Merge remote-tracking branch 'origin/issue-4793-tablesegment-update-api' into issue-4793-tablesegment-update-api", "committedDate": "2020-07-01T21:42:43Z", "type": "commit"}, {"oid": "df85291b65f0108fab126d1af06b8beb5ddf12d8", "url": "https://github.com/pravega/pravega/commit/df85291b65f0108fab126d1af06b8beb5ddf12d8", "message": "* Ensure that conditional append will appends.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-07-01T23:16:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMTExNw==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r451031117", "bodyText": "then this will perform an Unconditional update\n\nIt seems like it will still be conditional on the tableSegmentOffset", "author": "tkaitchuck", "createdAt": "2020-07-07T17:33:21Z", "path": "segmentstore/contracts/src/main/java/io/pravega/segmentstore/contracts/tables/TableStore.java", "diffHunk": "@@ -144,6 +145,33 @@ default int maximumValueLength() {\n      */\n     CompletableFuture<List<Long>> put(String segmentName, List<TableEntry> entries, Duration timeout);\n \n+    /**\n+     * Inserts new or updates existing Table Entries (conditioned on the Segment's length matching an expected value)\n+     * into the given Segment.\n+     *\n+     * @param segmentName        The name of the Table Segment to insert/update the Table Entries.\n+     * @param entries            A List of {@link TableEntry} instances to insert or update. If {@link TableEntry#key}\n+     *                           {@link TableKey#version hasVersion} returns true for at least one of the items in the list,\n+     *                           then this will perform an atomic Conditional Update. If {@link TableEntry#key}\n+     *                           {@link TableKey#version} hasVersion} returns false for ALL items in the list, then this\n+     *                           will perform an Unconditional update.", "originalCommit": "df85291b65f0108fab126d1af06b8beb5ddf12d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMTk3Mw==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r451031973", "bodyText": "same here", "author": "tkaitchuck", "createdAt": "2020-07-07T17:34:59Z", "path": "segmentstore/contracts/src/main/java/io/pravega/segmentstore/contracts/tables/TableStore.java", "diffHunk": "@@ -165,6 +193,29 @@ default int maximumValueLength() {\n      */\n     CompletableFuture<Void> remove(String segmentName, Collection<TableKey> keys, Duration timeout);\n \n+    /**\n+     * Removes one or more Table Keys from the given Table Segment.\n+     *\n+     * @param segmentName        The name of the Table Segment to remove the Keys from.\n+     * @param keys               A Collection of {@link TableKey} instances to remove. If {@link TableKey#hasVersion()} returns\n+     *                           true for at least one of the TableKeys in this collection, then this will perform an atomic\n+     *                           Conditional Update (Removal). If {@link TableKey#hasVersion()} returns false for ALL items in\n+     *                           the collection, then this will perform an Unconditional Update (Removal).", "originalCommit": "df85291b65f0108fab126d1af06b8beb5ddf12d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMjk3Mw==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r451032973", "bodyText": "May be null (which indicates no updates).\n\nWouldn't an empty list convery this more clearly?", "author": "tkaitchuck", "createdAt": "2020-07-07T17:36:38Z", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/DirectSegmentAccess.java", "diffHunk": "@@ -51,14 +51,35 @@\n      */\n     CompletableFuture<Long> append(BufferView data, Collection<AttributeUpdate> attributeUpdates, Duration timeout);\n \n+    /**\n+     * Appends a range of bytes at the end of the Segment and atomically updates the given attributes. The byte range\n+     * will be appended as a contiguous block, however there is no guarantee of ordering between different calls to this\n+     * method.\n+     * @see io.pravega.segmentstore.contracts.StreamSegmentStore#append(String, BufferView, Collection, Duration)\n+     *\n+     * @param data             The data to add.\n+     * @param attributeUpdates A Collection of Attribute-Values to set or update. May be null (which indicates no updates).", "originalCommit": "df85291b65f0108fab126d1af06b8beb5ddf12d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ1NTg5NQ==", "url": "https://github.com/pravega/pravega/pull/4876#discussion_r452455895", "bodyText": "StreamSegmentContainer handles an empty list and null equally. May need @andreipaduroiu's thoughts on this.", "author": "co-jo", "createdAt": "2020-07-09T19:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMjk3Mw=="}], "type": "inlineReview"}, {"oid": "0f333bfa4b98ac272854107ef79744fd11b5f95e", "url": "https://github.com/pravega/pravega/commit/0f333bfa4b98ac272854107ef79744fd11b5f95e", "message": "* Javadoc corrections.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-07-09T19:59:00Z", "type": "commit"}, {"oid": "2f4dc6fc6de1d33a5b90aa607f80d325423cc1d0", "url": "https://github.com/pravega/pravega/commit/2f4dc6fc6de1d33a5b90aa607f80d325423cc1d0", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-4793-tablesegment-update-api\n\n\u0001 Conflicts:\n\u0001\tsegmentstore/server/src/main/java/io/pravega/segmentstore/server/tables/ContainerTableExtensionImpl.java\n\u0001\tsegmentstore/server/src/test/java/io/pravega/segmentstore/server/tables/ContainerTableExtensionImplTests.java", "committedDate": "2020-07-09T21:22:56Z", "type": "commit"}, {"oid": "81f917e6c0df33c85ca3c132f0bc81a111d5246f", "url": "https://github.com/pravega/pravega/commit/81f917e6c0df33c85ca3c132f0bc81a111d5246f", "message": "* Address comments.\n\nSigned-off-by: co-jo <colin.hryniowski@dell.com>", "committedDate": "2020-07-09T23:06:22Z", "type": "commit"}, {"oid": "e2ad204501471919fa4158091dd9020e392d788d", "url": "https://github.com/pravega/pravega/commit/e2ad204501471919fa4158091dd9020e392d788d", "message": "Merge branch 'master' into issue-4793-tablesegment-update-api", "committedDate": "2020-07-14T19:22:20Z", "type": "commit"}, {"oid": "f11606cc0d410333813645ecf6081aa4268197f0", "url": "https://github.com/pravega/pravega/commit/f11606cc0d410333813645ecf6081aa4268197f0", "message": "Merge branch 'master' into issue-4793-tablesegment-update-api", "committedDate": "2020-07-15T23:41:57Z", "type": "commit"}, {"oid": "a953f73f2880ac6e1c0203dfdb71a9a733a68a48", "url": "https://github.com/pravega/pravega/commit/a953f73f2880ac6e1c0203dfdb71a9a733a68a48", "message": "Merge branch 'master' into issue-4793-tablesegment-update-api", "committedDate": "2020-07-16T19:20:15Z", "type": "commit"}]}