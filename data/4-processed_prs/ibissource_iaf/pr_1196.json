{"pr_number": 1196, "pr_title": "Extend suppression of config warnings ", "pr_createdAt": "2020-10-23T10:47:05Z", "pr_url": "https://github.com/ibissource/iaf/pull/1196", "timeline": [{"oid": "26c10d21355418668653bdc60db6295a6d1e1f88", "url": "https://github.com/ibissource/iaf/commit/26c10d21355418668653bdc60db6295a6d1e1f88", "message": "extend configuration warnings", "committedDate": "2020-10-23T10:28:53Z", "type": "commit"}, {"oid": "596ce307e96f44e2e2e092228303731c73760084", "url": "https://github.com/ibissource/iaf/commit/596ce307e96f44e2e2e092228303731c73760084", "message": "introduce transaction suppressionkey", "committedDate": "2020-10-23T10:38:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4ODk0Nw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r511788947", "bodyText": "What do you mean with 'to avoid losing any useful configuration warnings'\nAlso maybe add : warnings.suppress.transaction.{NameOfTheAdapter}=true, as just specifying the property isn't enough.", "author": "nielsm5", "createdAt": "2020-10-26T08:32:23Z", "path": "core/src/main/resources/AppConstants.properties", "diffHunk": "@@ -368,8 +368,16 @@ etag.ehcache.dir=${cache.dir}\n etag.ehcache.diskPersistent=false\n etag.ehcache.diskExpiryThreadIntervalSeconds=600\n \n+# Below listed 4 suppression keys should be used with an adapter name to avoid losing any useful configuration warnings.\n+# Example: warnings.suppress.transaction.{NameOfTheAdapter}", "originalCommit": "596ce307e96f44e2e2e092228303731c73760084", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwOTc3NQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r512009775", "bodyText": "transaction suppression key suppresses 3 different warnings all related to transactions. It is possible that a programmer sets the property to true then do some modification in the configuration and forget to set it to false and lose some of the config warnings.", "author": "alisihab", "createdAt": "2020-10-26T14:37:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4ODk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxNzU2OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514217569", "bodyText": "Ah I understand what you mean. I think it's best to add an attribute to the enums where you can specify if it works on global or on adapter level. In the case of warnings.suppress.transaction, warnings.suppress.integrityCheck and warnings.suppress.sqlInjections you never want to set this on a global level (as it's too dangerous like you mentioned). A developer must specifically suppress a warning for a given adapter, so future (new) adapters will get these warnings again.", "author": "nielsm5", "createdAt": "2020-10-29T12:24:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4ODk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc5NTY3OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r511795679", "bodyText": "Maybe it's time for this to become an Enum", "author": "nielsm5", "createdAt": "2020-10-26T08:44:57Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -36,7 +36,8 @@\n \tpublic static final String SQL_INJECTION_SUPPRESS_KEY = \"warnings.suppress.sqlInjections\";\n \tpublic static final String DEPRECATION_SUPPRESS_KEY=\"warnings.suppress.deprecated\";\n \tpublic static final String DEFAULT_VALUE_SUPPRESS_KEY = \"warnings.suppress.defaultvalue\";\n-\n+\tpublic static final String TRANSACTION_SUPPRESS_KEY = \"warnings.suppress.transaction\";", "originalCommit": "596ce307e96f44e2e2e092228303731c73760084", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "url": "https://github.com/ibissource/iaf/commit/c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "message": "suppressKeys enum, cover more configuration warnings for suppression", "committedDate": "2020-10-26T16:01:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxMTU0Nw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r512511547", "bodyText": "Shouldn't you put this in the MqttFacade? It already has a configure, just no IConfigurable interface", "author": "nielsm5", "createdAt": "2020-10-27T08:52:29Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java", "diffHunk": "@@ -171,4 +171,9 @@ public Message extractMessage(MqttMessage rawMessage, Map<String, Object> contex\n \t@Override\n \tpublic void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String, Object> context) throws ListenerException {\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn super.getClassLoader();\n+\t}", "originalCommit": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxMjUzNw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r512512537", "bodyText": "\ud83d\udc4d", "author": "nielsm5", "createdAt": "2020-10-27T08:54:08Z", "path": "core/src/main/java/nl/nn/adapterframework/http/WebServiceListener.java", "diffHunk": "@@ -92,7 +93,7 @@ public void configure() throws ConfigurationException {\n \n \t\tif (StringUtils.isEmpty(getServiceNamespaceURI()) && StringUtils.isEmpty(getAddress())) {\n \t\t\tString msg = \"calling webservices via de ServiceDispatcher_ServiceProxy is deprecated. Please specify an address or serviceNamespaceURI and modify the call accordingly\";\n-\t\t\tConfigurationWarnings.add(this, log, msg);\n+\t\t\tConfigurationWarnings.add(this, log, msg, SuppressKeys.DEPRECATION_SUPPRESS_KEY, null);", "originalCommit": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxNTQxNg==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r512515416", "bodyText": "This class already has a configure method, If you add the IConfigurable interface here you don't have to add it on it's children.", "author": "nielsm5", "createdAt": "2020-10-27T08:58:26Z", "path": "core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java", "diffHunk": "@@ -68,6 +68,7 @@\n  */\n public class FtpSession {\n \tprotected Logger log = LogUtil.getLogger(this);\n+\tprivate ClassLoader classLoader = Thread.currentThread().getContextClassLoader();", "originalCommit": "c7b2c4e17f625f914dc90b2b4e91f9c414332fc2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "url": "https://github.com/ibissource/iaf/commit/12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "message": "move method to parent class", "committedDate": "2020-10-27T09:24:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzE4MQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923181", "bodyText": "Please use @Getter annotation instead", "author": "gvanbrakel", "createdAt": "2020-10-30T07:55:23Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/afm/Afm2EdiFactSender.java", "diffHunk": "@@ -326,4 +327,9 @@ public void setTpnummer(String newTpnummer) {\n \tpublic String getTpnummer() {\n \t\treturn tpnummer;\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzcwMQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923701", "bodyText": "Please use @Getter annotation instead", "author": "gvanbrakel", "createdAt": "2020-10-30T07:56:37Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttFacade.java", "diffHunk": "@@ -228,4 +231,9 @@ public void setAuthAlias(String authAlias) {\n \tpublic String getAuthAlias() {\n \t\treturn authAlias;\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzg0NQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923845", "bodyText": "Unnecessary change, please remove file from PR", "author": "gvanbrakel", "createdAt": "2020-10-30T07:57:01Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java", "diffHunk": "@@ -171,4 +171,5 @@ public Message extractMessage(MqttMessage rawMessage, Map<String, Object> contex\n \t@Override\n \tpublic void afterMessageProcessed(PipeLineResult processResult, Object rawMessageOrWrapper, Map<String, Object> context) throws ListenerException {\n \t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyMzk4OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514923989", "bodyText": "Unnecessary change, please remove file from PR", "author": "gvanbrakel", "createdAt": "2020-10-30T07:57:26Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java", "diffHunk": "@@ -116,4 +116,5 @@ public Message sendMessage(Message message, IPipeLineSession session, String soa\n \tpublic boolean isSynchronous() {\n \t\treturn false;\n \t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNDE5MA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514924190", "bodyText": "Please use @Getter annotation instead", "author": "gvanbrakel", "createdAt": "2020-10-30T07:57:59Z", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemListener.java", "diffHunk": "@@ -150,6 +151,10 @@ public void closeThread(Map<String,Object> threadContext) throws ListenerExcepti\n \t\t// nothing special here\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNTE4NQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514925185", "bodyText": "In this case this has to be 'Name of the listener or sender'", "author": "gvanbrakel", "createdAt": "2020-10-30T08:00:13Z", "path": "core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java", "diffHunk": "@@ -953,4 +957,19 @@ public boolean isKeyboardInteractive() {\n \tpublic void setKeyboardInteractive(boolean keyboardInteractive) {\n \t\tthis.keyboardInteractive = keyboardInteractive;\n \t}\n+\n+\t@Override\n+\t@IbisDoc({\"name of the listener\", \"\"})", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNTM3NA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514925374", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:00:41Z", "path": "core/src/main/java/nl/nn/adapterframework/ftp/FtpSession.java", "diffHunk": "@@ -953,4 +957,19 @@ public boolean isKeyboardInteractive() {\n \tpublic void setKeyboardInteractive(boolean keyboardInteractive) {\n \t\tthis.keyboardInteractive = keyboardInteractive;\n \t}\n+\n+\t@Override\n+\t@IbisDoc({\"name of the listener\", \"\"})\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNjM3OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514926379", "bodyText": "Please let this class extend SenderBase, and inherit name and classloader from that class", "author": "gvanbrakel", "createdAt": "2020-10-30T08:03:05Z", "path": "core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java", "diffHunk": "@@ -40,6 +40,7 @@\n  * @since 4.2\n  */\n public class IbisWebServiceSender implements ISender, HasPhysicalDestination {\n+\tprivate ClassLoader classLoader = Thread.currentThread().getContextClassLoader();", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNjUyOA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514926528", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:03:30Z", "path": "core/src/main/java/nl/nn/adapterframework/http/PushingListenerAdapter.java", "diffHunk": "@@ -141,4 +142,9 @@ public void setRunning(boolean running) {\n \t\tthis.running = running;\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzE2Mg==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927162", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:02Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java", "diffHunk": "@@ -284,6 +284,11 @@ public Map openThread() throws ListenerException {\n \t\treturn array.iterator();\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzMzNg==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927336", "bodyText": "unnecessary change", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:23Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/FileRecordListener.java", "diffHunk": "@@ -366,4 +371,5 @@ public void setStoreFileNameInSessionKey(String storeFileNameInSessionKey) {\n \tpublic String getStoreFileNameInSessionKey() {\n \t\treturn storeFileNameInSessionKey;\n \t}\n+", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzQyNA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927424", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:33Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/JavaListener.java", "diffHunk": "@@ -216,6 +217,11 @@ public Message extractMessage(String rawMessage, Map<String,Object> context) thr\n \t\treturn new Message(rawMessage);\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzU2NQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514927565", "bodyText": "Please use @Getter annotation", "author": "gvanbrakel", "createdAt": "2020-10-30T08:05:51Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/ReceiverBase.java", "diffHunk": "@@ -2305,4 +2306,8 @@ public String getHideMethod() {\n \t\treturn hideMethod;\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn classLoader;\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyODA1OA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514928058", "bodyText": "This shouldn't be necessary. Solve this in the super class", "author": "gvanbrakel", "createdAt": "2020-10-30T08:06:57Z", "path": "core/src/main/java/nl/nn/adapterframework/senders/FileSender.java", "diffHunk": "@@ -92,4 +92,9 @@ public ParameterList getParameterList() {\n \t\treturn paramList;\n \t}\n \n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn super.getClassLoader();\n+\t}", "originalCommit": "12c8b4e701bb4e5c076d513091042cdd8bbcfd81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c6017576876c165d169d85060f0672376d119d93", "url": "https://github.com/ibissource/iaf/commit/c6017576876c165d169d85060f0672376d119d93", "message": "tidy up", "committedDate": "2020-10-30T09:31:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3Mjk1Nw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514972957", "bodyText": "Please remove this file from the PR, nothing has changed", "author": "gvanbrakel", "createdAt": "2020-10-30T09:37:04Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttSender.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2017 Integration Partners\n+   Copyright 2017 - 2020 WeAreFrank!", "originalCommit": "c6017576876c165d169d85060f0672376d119d93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3Mzg5OQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514973899", "bodyText": "This should not be necessaray", "author": "gvanbrakel", "createdAt": "2020-10-30T09:38:44Z", "path": "core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java", "diffHunk": "@@ -1347,4 +1347,9 @@ public void setReplyNotFound(boolean b) {\n \tpublic boolean isReplyNotFound() {\n \t\treturn replyNotFound;\n \t}\n+\n+\t@Override\n+\tpublic ClassLoader getConfigurationClassLoader() {\n+\t\treturn super.getClassLoader();\n+\t}", "originalCommit": "c6017576876c165d169d85060f0672376d119d93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3NDc4OA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514974788", "bodyText": "Please remove this file from the PR, nothing has changed", "author": "gvanbrakel", "createdAt": "2020-10-30T09:40:17Z", "path": "core/src/main/java/nl/nn/adapterframework/senders/FileSender.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2013 Nationale-Nederlanden\n+   Copyright 2013 Nationale-Nederlanden, 2020 WeAreFrank!", "originalCommit": "c6017576876c165d169d85060f0672376d119d93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0f28104b12a9a97df2a2ee3c2104810d1ef4e89d", "url": "https://github.com/ibissource/iaf/commit/0f28104b12a9a97df2a2ee3c2104810d1ef4e89d", "message": "feedback", "committedDate": "2020-10-30T10:01:22Z", "type": "commit"}, {"oid": "d13d46d973da783d237be5333f9ae363b3fa5b7c", "url": "https://github.com/ibissource/iaf/commit/d13d46d973da783d237be5333f9ae363b3fa5b7c", "message": "more on feedabck", "committedDate": "2020-10-30T10:09:19Z", "type": "commit"}, {"oid": "f39c4acd389ef7a0693e44aecf433376a1454c3c", "url": "https://github.com/ibissource/iaf/commit/f39c4acd389ef7a0693e44aecf433376a1454c3c", "message": "Merge branch 'master' into extend_config_warnings", "committedDate": "2020-10-30T10:13:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDUxMA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514994510", "bodyText": "Please remove this file from the PR, it has not changed", "author": "gvanbrakel", "createdAt": "2020-10-30T10:16:16Z", "path": "core/src/main/java/nl/nn/adapterframework/ldap/LdapSender.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2013, 2020 Nationale-Nederlanden\n+   Copyright 2013, 2020 Nationale-Nederlanden, 2020 WeAreFrank!", "originalCommit": "f39c4acd389ef7a0693e44aecf433376a1454c3c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NTAxOQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r514995019", "bodyText": "Please remove this file from the PR, it has not changed", "author": "gvanbrakel", "createdAt": "2020-10-30T10:17:18Z", "path": "core/src/main/java/nl/nn/adapterframework/senders/FileSender.java", "diffHunk": "@@ -91,5 +91,4 @@ public void addParameter(Parameter p) {\n \tpublic ParameterList getParameterList() {\n \t\treturn paramList;\n \t}\n-", "originalCommit": "f39c4acd389ef7a0693e44aecf433376a1454c3c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "url": "https://github.com/ibissource/iaf/commit/7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "message": "remove 2 files from the PR", "committedDate": "2020-10-30T10:35:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA2Mjg0Ng==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r515062846", "bodyText": "We suggest to add an option 'noGlobal', that, when set true, it inhibits suppression at the global level,", "author": "gvanbrakel", "createdAt": "2020-10-30T12:28:27Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.configuration;\n+\n+import lombok.Getter;\n+\n+/**\n+ * Enumeration class for suppressing configuration warnings.\n+ * \n+ * @author alisihab\n+ *\n+ */\n+public enum SuppressKeys {\n+\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\"),\n+\tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\"),\n+\tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\"),\n+\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\"),\n+\tINTEGRITY_CHECK_SUPPRESS_KEY(\"warnings.suppress.integrityCheck\");\n+\n+\tprivate @Getter String key;\n+", "originalCommit": "7ca6ba7693e804297ab9f78c2b04786fb6e98d86", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "61e2320c8cb7f2cea65ce72d627642e9d1b500e9", "url": "https://github.com/ibissource/iaf/commit/61e2320c8cb7f2cea65ce72d627642e9d1b500e9", "message": "Merge branch 'master' of https://github.com/ibissource/iaf into extend_config_warnings", "committedDate": "2020-10-30T13:23:34Z", "type": "commit"}, {"oid": "96fbd50e06bc97a17e932b3ab4928f11843a6d54", "url": "https://github.com/ibissource/iaf/commit/96fbd50e06bc97a17e932b3ab4928f11843a6d54", "message": "finalize", "committedDate": "2020-10-30T15:09:07Z", "type": "commit"}, {"oid": "f4a06af80d67b6ff8d74b253698b678902edef09", "url": "https://github.com/ibissource/iaf/commit/f4a06af80d67b6ff8d74b253698b678902edef09", "message": "add adapter information to config warnings where applicable", "committedDate": "2020-11-02T08:59:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MTY2NA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516541664", "bodyText": "A configuration should not add a Global Warning, only configuration warnings. You're also displaying the objectname twice, see getObjectName(currObj, name).", "author": "nielsm5", "createdAt": "2020-11-03T09:52:51Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/AbstractSpringPoweredDigesterFactory.java", "diffHunk": "@@ -268,18 +267,28 @@ private String getObjectName(Object o, String name) {\n \t}\n \n \tprivate void addSetToDefaultConfigWarning(Object currObj, String name, String key, String value) {\n-\t\tif(!suppressDefaultValueWarnings) {\n+\t\tClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+\t\tif(!ConfigurationWarnings.isSuppressed(SuppressKeys.DEFAULT_VALUE_SUPPRESS_KEY, null, classLoader)) {\n \t\t\tString mergedKey = getDigester().getCurrentElementName() + \"/\" + (name==null?\"\":name) + \"/\" + key;\n \t\t\tif (!configWarnings.containsDefaultValueException(mergedKey)) {\n-\t\t\t\taddConfigWarning(currObj, name, \"attribute [\"+key+\"] already has a default value [\"+value+\"]\");\n+\t\t\t\taddConfigWarning(currObj, name, \"attribute [\"+key+\"] already has a default value [\"+value+\"]\", SuppressKeys.DEFAULT_VALUE_SUPPRESS_KEY, classLoader);\n \t\t\t}\n \t\t}\n \t}\n \n \tprivate void addConfigWarning(Object currObj, String name, String message) {\n+\t\taddConfigWarning(currObj, name, message, null, null);\n+\t}\n+\n+\tprivate void addConfigWarning(Object currObj, String name, String message, SuppressKeys key, ClassLoader cl) {\n \t\tLocator loc = getDigester().getDocumentLocator();\n \t\tString msg = \"line \"+loc.getLineNumber()+\", col \"+loc.getColumnNumber()+\": \"+getObjectName(currObj, name)+\": \"+message;\n-\t\tConfigurationWarnings.add(null, log, msg);\n+\t\tif(currObj instanceof INamedObject) {\n+\t\t\tConfigurationWarnings.add((INamedObject) currObj, log, msg);\n+\t\t} else { \n+\t\t\tConfigurationWarnings.addGlobalWarning(log, msg, key, cl);", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MjU0Nw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516542547", "bodyText": "This should be in the log? not in the warning", "author": "nielsm5", "createdAt": "2020-11-03T09:54:10Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -61,8 +71,16 @@ public static void add(INamedObject object, Logger log, String message) {\n \t/**\n \t * Adds configuration warning in case warning is not suppressed\n \t */\n-\tpublic static void add(IConfigurable object, Logger log, String message, String suppressionKey, IAdapter adapter) {\n+\tpublic static void add(IConfigurable object, Logger log, String message, SuppressKeys suppressionKey, IAdapter adapter) {\n \t\tif(!isSuppressed(suppressionKey, adapter, object.getConfigurationClassLoader())) {\n+\t\t\tif(adapter != null) {\n+\t\t\t\tmessage = \"in adapter [\" + adapter.getName() + \"] \" + message + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n+\t\t\t\tif(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\t\tmessage += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t}\n+\t\t\t} else if(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\tmessage += \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t}", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MzIzNA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516543234", "bodyText": "should be false", "author": "nielsm5", "createdAt": "2020-11-03T09:55:07Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.configuration;\n+\n+import lombok.Getter;\n+\n+/**\n+ * Enumeration class for suppressing configuration warnings.\n+ * \n+ * @author alisihab\n+ *\n+ */\n+public enum SuppressKeys {\n+\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\", true),", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0MzMwMw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r516543303", "bodyText": "should be false", "author": "nielsm5", "createdAt": "2020-11-03T09:55:13Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/SuppressKeys.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.configuration;\n+\n+import lombok.Getter;\n+\n+/**\n+ * Enumeration class for suppressing configuration warnings.\n+ * \n+ * @author alisihab\n+ *\n+ */\n+public enum SuppressKeys {\n+\n+\tSQL_INJECTION_SUPPRESS_KEY(\"warnings.suppress.sqlInjections\", true),\n+\tDEPRECATION_SUPPRESS_KEY(\"warnings.suppress.deprecated\", true),\n+\tDEFAULT_VALUE_SUPPRESS_KEY(\"warnings.suppress.defaultvalue\", true),\n+\tTRANSACTION_SUPPRESS_KEY(\"warnings.suppress.transaction\", true),", "originalCommit": "f4a06af80d67b6ff8d74b253698b678902edef09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "834a01f6d27b63ba5a6dae6032585949eb4d10b9", "url": "https://github.com/ibissource/iaf/commit/834a01f6d27b63ba5a6dae6032585949eb4d10b9", "message": "work on the feedback", "committedDate": "2020-11-04T08:03:23Z", "type": "commit"}, {"oid": "d120a41241bad390b7b6988608afa997190dbf2d", "url": "https://github.com/ibissource/iaf/commit/d120a41241bad390b7b6988608afa997190dbf2d", "message": "log hint in case info enabled", "committedDate": "2020-11-04T09:37:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NTI5Mw==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r518585293", "bodyText": "Now msg is logged twice: first without the hint in addGlobalWarning(), then here with the hint.\nThis should not happen. The message should be logged only once, (with or without hint, depending on log.isInfoEnabled())", "author": "gvanbrakel", "createdAt": "2020-11-06T08:12:22Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -33,9 +33,19 @@\n public final class ConfigurationWarnings extends BaseConfigurationWarnings {\n \tprivate static ConfigurationWarnings self = null;\n \tprivate Configuration activeConfiguration = null;\n-\tpublic static final String SQL_INJECTION_SUPPRESS_KEY = \"warnings.suppress.sqlInjections\";\n-\tpublic static final String DEPRECATION_SUPPRESS_KEY=\"warnings.suppress.deprecated\";\n-\tpublic static final String DEFAULT_VALUE_SUPPRESS_KEY = \"warnings.suppress.defaultvalue\";\n+\n+\tpublic static void addGlobalWarning(Logger log, String msg, SuppressKeys suppressionKey, ClassLoader classLoader) {\n+\t\tif(suppressionKey == null) {\n+\t\t\taddGlobalWarning(log, msg, null);\n+\t\t} else if(!isSuppressed(suppressionKey, null, classLoader)) {\n+\t\t\taddGlobalWarning(log, msg, null);\n+\t\t\t// provide suppression hint as info\n+\t\t\tif(log.isInfoEnabled() && suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\tString msgWithHint = msg + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\tlog.info(msgWithHint);\n+\t\t\t}", "originalCommit": "d120a41241bad390b7b6988608afa997190dbf2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NTc5MA==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r518585790", "bodyText": "Now msg is logged twice: first without the hint in add(), then here with the hint.\nThis should not happen. The message should be logged only once, (with or without hint, depending on log.isInfoEnabled())", "author": "gvanbrakel", "createdAt": "2020-11-06T08:13:30Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ConfigurationWarnings.java", "diffHunk": "@@ -61,9 +71,22 @@ public static void add(INamedObject object, Logger log, String message) {\n \t/**\n \t * Adds configuration warning in case warning is not suppressed\n \t */\n-\tpublic static void add(IConfigurable object, Logger log, String message, String suppressionKey, IAdapter adapter) {\n+\tpublic static void add(IConfigurable object, Logger log, String message, SuppressKeys suppressionKey, IAdapter adapter) {\n \t\tif(!isSuppressed(suppressionKey, adapter, object.getConfigurationClassLoader())) {\n \t\t\tadd(object, log, message, null);\n+\t\t\t// provide suppression hint as info \n+\t\t\tif(log.isInfoEnabled()) {\n+\t\t\t\tif(adapter != null) {\n+\t\t\t\t\tString messageWithHint = \"in adapter [\" + adapter.getName() + \"] \" + message + \". This warning can be suppressed by setting the property '\"+suppressionKey.getKey()+\".\"+adapter.getName()+\"=true'\";\n+\t\t\t\t\tif(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\t\t\tmessageWithHint += \", or globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t\t}\n+\t\t\t\t\tlog.info(messageWithHint);\n+\t\t\t\t} else if(suppressionKey.isAllowGlobalSuppression()) {\n+\t\t\t\t\tString messageWithHint = message + \"This warning can be suppressed globally by setting the property '\"+suppressionKey.getKey()+\"=true'\";\n+\t\t\t\t\tlog.info(messageWithHint);", "originalCommit": "d120a41241bad390b7b6988608afa997190dbf2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4Njk1MQ==", "url": "https://github.com/ibissource/iaf/pull/1196#discussion_r518586951", "bodyText": "When it extends SenderBase, it is not necessary to explicitly implement ISender, that comes with SenderBase", "author": "gvanbrakel", "createdAt": "2020-11-06T08:16:05Z", "path": "core/src/main/java/nl/nn/adapterframework/http/IbisWebServiceSender.java", "diffHunk": "@@ -39,9 +40,8 @@\n  * @author Gerrit van Brakel\n  * @since 4.2\n  */\n-public class IbisWebServiceSender implements ISender, HasPhysicalDestination {\n+public class IbisWebServiceSender extends SenderBase implements ISender, HasPhysicalDestination {", "originalCommit": "d120a41241bad390b7b6988608afa997190dbf2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cc800730edcbb425773074d463d896ce7a1f12eb", "url": "https://github.com/ibissource/iaf/commit/cc800730edcbb425773074d463d896ce7a1f12eb", "message": "provide hint with the message in the same log line", "committedDate": "2020-11-06T11:08:39Z", "type": "commit"}, {"oid": "a45ef9e400dc4e03cf2c76eee962cab13a438a49", "url": "https://github.com/ibissource/iaf/commit/a45ef9e400dc4e03cf2c76eee962cab13a438a49", "message": "remove redundant inheritance in the subclass", "committedDate": "2020-11-06T11:10:59Z", "type": "commit"}, {"oid": "9ef6d9f625fffd9fc41cbe0343c930a2044b2b27", "url": "https://github.com/ibissource/iaf/commit/9ef6d9f625fffd9fc41cbe0343c930a2044b2b27", "message": "Merge branch 'master' into extend_config_warnings", "committedDate": "2020-11-06T15:52:41Z", "type": "commit"}]}