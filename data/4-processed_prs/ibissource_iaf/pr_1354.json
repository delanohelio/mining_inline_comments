{"pr_number": 1354, "pr_title": "Refactor adapter configure exception handling", "pr_createdAt": "2020-12-22T14:37:06Z", "pr_url": "https://github.com/ibissource/iaf/pull/1354", "timeline": [{"oid": "c0de5407d18c06fc1b53853942b639f8142b2aff", "url": "https://github.com/ibissource/iaf/commit/c0de5407d18c06fc1b53853942b639f8142b2aff", "message": "Refactor adapter configure exception handling", "committedDate": "2020-12-22T14:35:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyNTQwMg==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547325402", "bodyText": "Dit lijkt me de documentatie van de Recover feature. Misschien goed om die te bewaren/valideren", "author": "gvanbrakel", "createdAt": "2020-12-22T15:00:03Z", "path": "core/src/main/java/nl/nn/adapterframework/extensions/mqtt/MqttListener.java", "diffHunk": "@@ -99,21 +97,10 @@ public void open() throws ListenerException {\n \t\t\tsuper.open();\n \t\t\tclient.subscribe(getTopic(), getQos());\n \t\t} catch (Exception e) {\n-\t\t\te.printStackTrace();\n \t\t\tthrow new ListenerException(\"Could not subscribe to topic\", e);\n \t\t}\n \t}\n \n-\t@Override\n-\tpublic void close() {\n-\t\t// Prevent log.warn() when trying to recover. Recover will be triggered\n-\t\t// when connectionLost was called or listener could not start in which\n-\t\t// case client is already disconnected.", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyNjE4OA==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547326188", "bodyText": "Doen we dit niet meer?", "author": "gvanbrakel", "createdAt": "2020-12-22T15:01:33Z", "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java", "diffHunk": "@@ -860,12 +874,6 @@ public void setIgnoreCaching(boolean ignoreCaching) {\n \t\tvalidator.setIgnoreCaching(ignoreCaching);\n \t}\n \n-\t@IbisDocRef({ABSTRACTXMLVALIDATOR})\n-\tpublic void setLazyInit(boolean lazyInit) {\n-\t\tvalidator.setLazyInit(lazyInit);\n-\t}", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyNjkyMQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547326921", "bodyText": "Dit mag als getOnErrorEnum()==ON_ERROR.CONTINUE\nof beter nog\nswitch (getOnErrorEnum()) {", "author": "gvanbrakel", "createdAt": "2020-12-22T15:02:54Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -1462,10 +1457,9 @@ private boolean isDuplicateAndSkip(IMessageBrowser<Serializable> transactionStor\n \t@Override\n \tpublic void exceptionThrown(INamedObject object, Throwable t) {\n \t\tString msg = getLogPrefix()+\"received exception [\"+t.getClass().getName()+\"] from [\"+object.getName()+\"]\";\n-\t\tif (ONERROR_CONTINUE.equalsIgnoreCase(getOnError())) {\n-//\t\t\twarn(msg+\", will continue processing messages when they arrive: \"+ t.getMessage());\n-\t\t\terror(msg+\", will continue processing messages when they arrive\",t);\n-\t\t} else if (ONERROR_RECOVER.equalsIgnoreCase(getOnError())) {\n+\t\tif (ON_ERROR.CONTINUE.equals(getOnErrorEnum())) {", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNDE2OQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547334169", "bodyText": "Als je hem niet gebruikt hoef je hem ook niet op te halen", "author": "gvanbrakel", "createdAt": "2020-12-22T15:15:40Z", "path": "core/src/test/java/nl/nn/adapterframework/pipes/Json2XmlValidatorTest.java", "diffHunk": "@@ -33,13 +33,13 @@ public void testNoNamespaceXml2Json() throws Exception {\n \t\tpipe.setThrowException(true);\n \t\tpipe.configure();\n \t\tpipe.start();\n-\t\t\n+\n \t\tString input = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response.xml\");\n-\t\tString expected = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response-compact.json\");\n-\t\t\n+\t\tTestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response-compact.json\");", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNDM2OQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547334369", "bodyText": "Als je hem niet gebruikt hoef je hem ook niet op te halen", "author": "gvanbrakel", "createdAt": "2020-12-22T15:16:00Z", "path": "core/src/test/java/nl/nn/adapterframework/pipes/Json2XmlValidatorTest.java", "diffHunk": "@@ -60,11 +60,11 @@ public void testNoNamespaceXml() throws Exception {\n \t\tpipe.start();\n \t\t\n \t\tString input = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response.xml\");\n-\t\tString expected = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response-compact.json\");\n+\t\tTestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response-compact.json\");", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNTMxNQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547335315", "bodyText": "Maak je dan een issue om dit recht te trekken?", "author": "gvanbrakel", "createdAt": "2020-12-22T15:17:41Z", "path": "core/src/main/java/nl/nn/adapterframework/configuration/Configuration.java", "diffHunk": "@@ -240,13 +240,18 @@ public boolean isRegisteredReceiver(String adapterName, String receiverName) {\n \t/**\n \t * Register an adapter with the configuration.\n \t */\n-\tpublic void registerAdapter(Adapter adapter) throws ConfigurationException {\n+\tpublic void registerAdapter(Adapter adapter) {\n \t\tif (!adapter.isActive()) {\n \t\t\tlog.debug(\"adapter [\" + adapter.getName() + \"] is not active, therefore not included in configuration\");\n \t\t\treturn;\n \t\t}\n \t\tadapter.setConfiguration(this);\n-\t\tadapterService.registerAdapter(adapter);\n+\t\ttry {\n+\t\t\tadapterService.registerAdapter(adapter);\n+\t\t} catch (ConfigurationException e) { //For some reason the adapterService configures the adapter...\n+\t\t\t//Do nothing as this will cause the digester to stop digesting the configuration\n+\t\t\t//TODO: this the configuration should have a configure method which configures every adapter.", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNjAzOQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547336039", "bodyText": "Dit moet de MessageSendingPipe zelf doen", "author": "gvanbrakel", "createdAt": "2020-12-22T15:19:01Z", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "diffHunk": "@@ -598,15 +631,51 @@ public void start() throws PipeStartException {\n \t */\n \tpublic void stop() {\n \t\tlog.info(getLogPrefix()+\"is closing pipeline\");\n+\n+\t\tif (getInputWrapper()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"stopping InputWrapper [\"+getInputWrapper().getName()+\"]\");\n+\t\t\tgetInputWrapper().stop();\n+\t\t}\n+\n+\t\tif (getInputValidator()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"stopping InputValidator [\"+getInputValidator().getName()+\"]\");\n+\t\t\tgetInputValidator().stop();\n+\t\t}\n+\n \t\tfor (int i=0; i<pipes.size(); i++) {\n \t\t\tIPipe pipe = getPipe(i);\n \t\t\tString pipeName = pipe.getName();\n \n \t\t\tlog.debug(getLogPrefix()+\"is stopping [\" + pipeName+\"]\");\n+\t\t\tif (pipe instanceof MessageSendingPipe) {\n+\t\t\t\tMessageSendingPipe messageSendingPipe = (MessageSendingPipe) pipe;\n+\t\t\t\tif (messageSendingPipe.getInputValidator() != null) {\n+\t\t\t\t\tmessageSendingPipe.getInputValidator().stop();\n+\t\t\t\t}\n+\t\t\t\tif (messageSendingPipe.getOutputValidator() != null) {\n+\t\t\t\t\tmessageSendingPipe.getOutputValidator().stop();\n+\t\t\t\t}\n+\t\t\t\tif (messageSendingPipe.getInputWrapper() != null) {\n+\t\t\t\t\tmessageSendingPipe.getInputWrapper().stop();\n+\t\t\t\t}\n+\t\t\t\tif (messageSendingPipe.getOutputWrapper() != null) {\n+\t\t\t\t\tmessageSendingPipe.getOutputWrapper().stop();\n+\t\t\t\t}\n+\t\t\t}", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNjI4Mg==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547336282", "bodyText": "Dit moet de MessageSendingPipe zelf doen", "author": "gvanbrakel", "createdAt": "2020-12-22T15:19:25Z", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "diffHunk": "@@ -579,16 +577,51 @@ public void start() throws PipeStartException {\n \t\t\tcache.open();\n \t\t}\n \n+\t\tif (getInputWrapper()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"starting InputWrapper [\"+getInputWrapper().getName()+\"]\");\n+\t\t\tgetInputWrapper().start();\n+\t\t}\n+\n+\t\tif (getInputValidator()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"starting InputValidator [\"+getInputValidator().getName()+\"]\");\n+\t\t\tgetInputValidator().start();\n+\t\t}\n+\n \t\tfor (int i=0; i<pipes.size(); i++) {\n \t\t\tIPipe pipe = getPipe(i);\n \t\t\tString pipeName = pipe.getName();\n \n \t\t\tlog.debug(getLogPrefix()+\"starting pipe [\" + pipeName+\"]\");\n+\t\t\tif (pipe instanceof MessageSendingPipe) {\n+\t\t\t\tMessageSendingPipe messageSendingPipe = (MessageSendingPipe) pipe;\n+\t\t\t\tif (messageSendingPipe.getInputValidator() != null) {\n+\t\t\t\t\tmessageSendingPipe.getInputValidator().start();\n+\t\t\t\t}\n+\t\t\t\tif (messageSendingPipe.getOutputValidator() != null) {\n+\t\t\t\t\tmessageSendingPipe.getOutputValidator().start();\n+\t\t\t\t}\n+\t\t\t\tif (messageSendingPipe.getInputWrapper() != null) {\n+\t\t\t\t\tmessageSendingPipe.getInputWrapper().start();\n+\t\t\t\t}\n+\t\t\t\tif (messageSendingPipe.getOutputWrapper() != null) {\n+\t\t\t\t\tmessageSendingPipe.getOutputWrapper().start();\n+\t\t\t\t}\n+\t\t\t}", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNjg1Ng==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547336856", "bodyText": "Oeps?", "author": "gvanbrakel", "createdAt": "2020-12-22T15:20:31Z", "path": "core/src/main/java/nl/nn/adapterframework/scheduler/JobDef.java", "diffHunk": "@@ -1111,57 +1087,41 @@ private void recoverAdapters(IbisManager ibisManager) {\n \t\t\t} else {\n \t\t\t\theartbeatLog.warn(message);\n \t\t\t}\n+\n \t\t\tfor (Receiver receiver: adapter.getReceivers()) {\n \t\t\t\tcountReceiver++;\n \n \t\t\t\tRunStateEnum receiverRunState = receiver.getRunState();\n-\t\t\t\tif (!adapterRunState.equals(RunStateEnum.ERROR) && receiverRunState.equals(RunStateEnum.ERROR)) {\n+\t\t\t\tif (adapterRunState.equals(RunStateEnum.STARTED) && receiverRunState.equals(RunStateEnum.ERROR) && receiver.configurationSucceeded()) { //Only try to (re-)start receivers in a running adapter\n \t\t\t\t\tlog.debug(\"trying to recover receiver [\" + receiver.getName() + \"] of adapter [\" + adapter.getName() + \"]\");\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\treceiver.setRecover(true);\n-\t\t\t\t\t\tadapter.configureReceiver(receiver);\n-\t\t\t\t\t} finally {\n-\t\t\t\t\t\treceiver.setRecover(false);\n-\t\t\t\t\t}\n-\t\t\t\t\tif (receiver.configurationSucceeded()) {\n-\t\t\t\t\t\treceiver.stopRunning();\n-\t\t\t\t\t\tint count = 10;\n-\t\t\t\t\t\twhile (count-- >= 0\n-\t\t\t\t\t\t\t\t&& !receiver.getRunState().equals(RunStateEnum.STOPPED)) {\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tThread.sleep(1000);\n-\t\t\t\t\t\t\t} catch (InterruptedException e) {\n-\t\t\t\t\t\t\t\tlog.debug(\"Interrupted waiting for receiver to stop\", e);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\t// check for start is in method startRunning in Receiver itself\n+\n \t\t\t\t\treceiver.startRunning();\n+\n \t\t\t\t\tlog.debug(\"finished recovering receiver [\" + receiver.getName() + \"] of adapter [\" + adapter.getName() + \"]\");\n-\t\t\t\t} else if (receiverRunState\n-\t\t\t\t\t\t.equals(RunStateEnum.STARTED)) {\n+\t\t\t\t} else if (receiverRunState.equals(RunStateEnum.STARTED)) {\n \t\t\t\t\t// workaround for started RestListeners of which\n \t\t\t\t\t// uriPattern is not registered correctly\n \t\t\t\t\tIListener listener = receiver.getListener();\n \t\t\t\t\tif (listener instanceof RestListener) {\n \t\t\t\t\t\tRestListener restListener = (RestListener) listener;\n \t\t\t\t\t\tString matchingPattern = RestServiceDispatcher.getInstance().findMatchingPattern(\"/\" + restListener.getUriPattern());\n \t\t\t\t\t\tif (matchingPattern == null) {\n-\t\t\t\t\t\t\tlog.debug(\"trying to recover receiver [\" + receiver.getName() + \"] (restListener) of adapter [\" + adapter.getName() + \"]\");\n-\t\t\t\t\t\t\tif (receiver.configurationSucceeded()) {\n-\t\t\t\t\t\t\t\treceiver.stopRunning();\n-\t\t\t\t\t\t\t\tint count = 10;\n-\t\t\t\t\t\t\t\twhile (count-- >= 0 && !receiver.getRunState().equals(RunStateEnum.STOPPED)) {\n-\t\t\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\t\t\tThread.sleep(1000);\n-\t\t\t\t\t\t\t\t\t} catch (InterruptedException e) {\n-\t\t\t\t\t\t\t\t\t\tlog.debug(\"Interrupted waiting for receiver to stop\", e);\n-\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t// check for start is in method startRunning in Receiver itself\n-\t\t\t\t\t\t\treceiver.startRunning();\n-\t\t\t\t\t\t\tlog.debug(\"finished recovering receiver [\" + receiver.getName() + \"] (restListener) of adapter [\" + adapter.getName() + \"]\");\n+\t\t\t\t\t\t\tSystem.err.println(\"yoyoyo matcher dasher in the house\");\n+//\t\t\t\t\t\t\tlog.debug(\"trying to recover receiver [\" + receiver.getName() + \"] (restListener) of adapter [\" + adapter.getName() + \"]\");\n+//\t\t\t\t\t\t\tif (receiver.configurationSucceeded()) {\n+//\t\t\t\t\t\t\t\treceiver.stopRunning();\n+//\t\t\t\t\t\t\t\tint count = 10;\n+//\t\t\t\t\t\t\t\twhile (count-- >= 0 && !receiver.getRunState().equals(RunStateEnum.STOPPED)) {\n+//\t\t\t\t\t\t\t\t\ttry {\n+//\t\t\t\t\t\t\t\t\t\tThread.sleep(1000);\n+//\t\t\t\t\t\t\t\t\t} catch (InterruptedException e) {\n+//\t\t\t\t\t\t\t\t\t\tlog.debug(\"Interrupted waiting for receiver to stop\", e);\n+//\t\t\t\t\t\t\t\t\t}\n+//\t\t\t\t\t\t\t\t}\n+//\t\t\t\t\t\t\t}\n+//\t\t\t\t\t\t\t// check for start is in method startRunning in Receiver itself\n+//\t\t\t\t\t\t\treceiver.startRunning();\n+//\t\t\t\t\t\t\tlog.debug(\"finished recovering receiver [\" + receiver.getName() + \"] (restListener) of adapter [\" + adapter.getName() + \"]\");", "originalCommit": "c0de5407d18c06fc1b53853942b639f8142b2aff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0c03cca00c653d39965897c2faec19074a662f2", "url": "https://github.com/ibissource/iaf/commit/d0c03cca00c653d39965897c2faec19074a662f2", "message": "Move start/stop from pipeline to messageSendingPipe methods\nCleanup old code", "committedDate": "2020-12-22T17:00:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc2MzkyMw==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547763923", "bodyText": "Dat moet die MessageSendingPipe toch ook zelf doen?", "author": "gvanbrakel", "createdAt": "2020-12-23T07:44:33Z", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "diffHunk": "@@ -377,18 +375,6 @@ public void configure(IPipe pipe) throws ConfigurationException {\n \t\t\t}\n \t\t\tif (pipe instanceof MessageSendingPipe) {\n \t\t\t\tMessageSendingPipe messageSendingPipe = (MessageSendingPipe) pipe;\n-\t\t\t\tif (messageSendingPipe.getInputValidator() != null) {\n-\t\t\t\t\tconfigure(messageSendingPipe.getInputValidator());\n-\t\t\t\t}\n-\t\t\t\tif (messageSendingPipe.getOutputValidator() != null) {\n-\t\t\t\t\tconfigure(messageSendingPipe.getOutputValidator());\n-\t\t\t\t}\n-\t\t\t\tif (messageSendingPipe.getInputWrapper() != null) {\n-\t\t\t\t\tconfigure(messageSendingPipe.getInputWrapper());\n-\t\t\t\t}\n-\t\t\t\tif (messageSendingPipe.getOutputWrapper() != null) {\n-\t\t\t\t\tconfigure(messageSendingPipe.getOutputWrapper());\n-\t\t\t\t}\n \t\t\t\tif (messageSendingPipe.getMessageLog() != null) {\n \t\t\t\t\tpipeStatistics.put(messageSendingPipe.getMessageLog().getName(), new StatisticsKeeper(messageSendingPipe.getMessageLog().getName()));\n \t\t\t\t}", "originalCommit": "d0c03cca00c653d39965897c2faec19074a662f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc2NTAyOQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547765029", "bodyText": "Ik zou dit blok op regel 577 gezet hebben.", "author": "gvanbrakel", "createdAt": "2020-12-23T07:45:55Z", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "diffHunk": "@@ -587,8 +583,18 @@ public void start() throws PipeStartException {\n \t\t\tpipe.start();\n \t\t\tlog.debug(getLogPrefix()+\"successfully started pipe [\" + pipeName + \"]\");\n \t\t}\n-\tlog.info(getLogPrefix()+\"is successfully started pipeline\");\n \n+\t\tif (getOutputValidator()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"starting OutputValidator [\"+getOutputValidator().getName()+\"]\");\n+\t\t\tgetOutputValidator().start();\n+\t\t}\n+\n+\t\tif (getOutputWrapper()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"starting OutputWrapper [\"+getOutputWrapper().getName()+\"]\");\n+\t\t\tgetOutputWrapper().start();\n+\t\t}", "originalCommit": "d0c03cca00c653d39965897c2faec19074a662f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc2NTMxOQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r547765319", "bodyText": "En dit blok op 617", "author": "gvanbrakel", "createdAt": "2020-12-23T07:46:17Z", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "diffHunk": "@@ -607,6 +624,16 @@ public void stop() {\n \t\t\tlog.debug(getLogPrefix()+\"successfully stopped pipe [\" + pipeName + \"]\");\n \t\t}\n \n+\t\tif (getOutputValidator()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"stopping OutputValidator [\"+getOutputValidator().getName()+\"]\");\n+\t\t\tgetOutputValidator().stop();\n+\t\t}\n+\n+\t\tif (getOutputWrapper()!=null) {\n+\t\t\tlog.debug(getLogPrefix()+\"stopping OutputWrapper [\"+getOutputWrapper().getName()+\"]\");\n+\t\t\tgetOutputWrapper().stop();\n+\t\t}", "originalCommit": "d0c03cca00c653d39965897c2faec19074a662f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9623cb6aa1ff8703e2988f796ade6d70088e6c2e", "url": "https://github.com/ibissource/iaf/commit/9623cb6aa1ff8703e2988f796ade6d70088e6c2e", "message": "Configure IExtended-Validators/Wrappers in MessageSendingPipes", "committedDate": "2021-01-04T15:42:37Z", "type": "commit"}, {"oid": "b887ef06853aa187a51c476057a517ca5aa4dc63", "url": "https://github.com/ibissource/iaf/commit/b887ef06853aa187a51c476057a517ca5aa4dc63", "message": "Merge branch 'master' into refactorAdapterException\n\n# Conflicts:\n#\tcore/src/main/java/nl/nn/adapterframework/core/Adapter.java\n#\tcore/src/main/java/nl/nn/adapterframework/pipes/MessageSendingPipe.java\n#\tcore/src/main/java/nl/nn/adapterframework/scheduler/JobDef.java", "committedDate": "2021-01-05T11:55:18Z", "type": "commit"}, {"oid": "a7cc491a0755492a2b5dabbcc245292b87561a6d", "url": "https://github.com/ibissource/iaf/commit/a7cc491a0755492a2b5dabbcc245292b87561a6d", "message": "enum runstate", "committedDate": "2021-01-05T12:34:18Z", "type": "commit"}, {"oid": "c929ceffb66da9d25397b83646c96850b1b5b77a", "url": "https://github.com/ibissource/iaf/commit/c929ceffb66da9d25397b83646c96850b1b5b77a", "message": "Move codecov to github actions", "committedDate": "2021-01-05T12:59:53Z", "type": "commit"}, {"oid": "3d027e0b6a2caefc91a0f2ab886f443cf9879126", "url": "https://github.com/ibissource/iaf/commit/3d027e0b6a2caefc91a0f2ab886f443cf9879126", "message": "add cache", "committedDate": "2021-01-05T13:22:40Z", "type": "commit"}, {"oid": "8ca06a392f1ab5a17fa0ff50a46196033b1b9298", "url": "https://github.com/ibissource/iaf/commit/8ca06a392f1ab5a17fa0ff50a46196033b1b9298", "message": "fix typo", "committedDate": "2021-01-05T13:23:23Z", "type": "commit"}, {"oid": "ee1b3d191b3a5f0977fab6a3e94e5a8feda84a58", "url": "https://github.com/ibissource/iaf/commit/ee1b3d191b3a5f0977fab6a3e94e5a8feda84a58", "message": "Fix junit tests", "committedDate": "2021-01-05T13:30:58Z", "type": "commit"}, {"oid": "e16c4810371e463e54e20e11dcc2cbe873f37d75", "url": "https://github.com/ibissource/iaf/commit/e16c4810371e463e54e20e11dcc2cbe873f37d75", "message": "fix junit test", "committedDate": "2021-01-05T13:53:05Z", "type": "commit"}, {"oid": "e118165a5fa9b0f19ec8d7eb6e2a903e63548c0d", "url": "https://github.com/ibissource/iaf/commit/e118165a5fa9b0f19ec8d7eb6e2a903e63548c0d", "message": "increase git fetch depth", "committedDate": "2021-01-05T14:18:52Z", "type": "commit"}, {"oid": "6d51e82a03acf94f0296e212031c27d6f41f2199", "url": "https://github.com/ibissource/iaf/commit/6d51e82a03acf94f0296e212031c27d6f41f2199", "message": "Merge branch 'master' into refactorAdapterException\n\n# Conflicts:\n#\tcore/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "committedDate": "2021-01-05T16:04:38Z", "type": "commit"}, {"oid": "b6385d2f197de8f09245617ed9f4d32ed7379983", "url": "https://github.com/ibissource/iaf/commit/b6385d2f197de8f09245617ed9f4d32ed7379983", "message": "test everything thoroughly and fix all the issues", "committedDate": "2021-01-14T14:39:46Z", "type": "commit"}, {"oid": "c06f6ae61692324f536820e4b7b48232067268c3", "url": "https://github.com/ibissource/iaf/commit/c06f6ae61692324f536820e4b7b48232067268c3", "message": "Merge branch 'master' into refactorAdapterException\n\n# Conflicts:\n#\tcore/src/main/java/nl/nn/adapterframework/receivers/PullingListenerContainer.java\n#\tcore/src/main/java/nl/nn/adapterframework/receivers/Receiver.java\n#\tcore/src/main/java/nl/nn/adapterframework/webcontrol/api/ShowConfigurationStatus.java", "committedDate": "2021-01-14T15:02:16Z", "type": "commit"}, {"oid": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "url": "https://github.com/ibissource/iaf/commit/24351c83b46f8dc94ac2f0b4e4540066d73ac986", "message": "fix issues", "committedDate": "2021-01-14T16:22:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzUzODE4MA==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r557538180", "bodyText": "Hier bedoel je dan toch: 'check if we should fail when configurationSucceeded!=true'", "author": "gvanbrakel", "createdAt": "2021-01-14T16:45:44Z", "path": "core/src/main/java/nl/nn/adapterframework/core/Adapter.java", "diffHunk": "@@ -169,34 +169,37 @@ public boolean configurationSucceeded() {\n \t * @see nl.nn.adapterframework.core.Pipeline#configurePipes\n \t */\n \t@Override\n-\tpublic void configure() throws ConfigurationException {\n+\tpublic void configure() throws ConfigurationException { //TODO check if we should fail when configurationSucceeded==true", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE0ODIwNA==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558148204", "bodyText": "Nee, ik bedoel wanneer je 2x configure() aanroept.", "author": "nielsm5", "createdAt": "2021-01-15T09:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzUzODE4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODA4Mjc0MA==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558082740", "bodyText": "Het lijkt er op dat je dit opneemt om van de getLogPrefix() af te komen.\nDan moet je wel ook een %x in de log4j conversion patterns opnemen.", "author": "gvanbrakel", "createdAt": "2021-01-15T09:03:02Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/PullingListenerContainer.java", "diffHunk": "@@ -136,17 +138,18 @@ public boolean isLongLived() {\n \n \t\t@Override\n \t\tpublic void run() {\n-\t\t\tlog.debug(receiver.getLogPrefix()+\" taskExecutor [\"+ToStringBuilder.reflectionToString(taskExecutor)+\"]\");\n+\t\t\tThreadContext.push(ClassUtils.nameOf(receiver) + \" [\"+receiver.getName()+\"]\");", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE3MzA4Mw==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558173083", "bodyText": "Wij gebruiken %TC een eigen implementatie om de NDC stack weer te geven. Zie IbisNdcPatternConverter", "author": "nielsm5", "createdAt": "2021-01-15T10:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODA4Mjc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODA5Mjk3Nw==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558092977", "bodyText": "Waarom deze if toegevoegd?\nDus waarom mag hij alleen uit STOPPING naar STOPPED?", "author": "gvanbrakel", "createdAt": "2021-01-15T09:09:29Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -483,13 +493,17 @@ protected void closeAllResources() {\n \t\t\t\terror(\"error closing message log\", t);\n \t\t\t}\n \t\t}\n+\n \t\tlog.debug(getLogPrefix()+\"closed\");\n-\t\trunState.setRunState(RunStateEnum.STOPPED);\n+\t\tif (runState.isInState(RunStateEnum.STOPPING)) {", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE2MTk3Mg==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558161972", "bodyText": "Ja, ik vond dit nodig. Dan krijgen wij vanzelf gezeur wanneer het niet op STOPPED gezet wordt (en dus de close niet goed aangeroepen wordt!)", "author": "nielsm5", "createdAt": "2021-01-15T09:55:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODA5Mjk3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODA5OTI4Mg==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558099282", "bodyText": "Dit zou op \u00e9\u00e9n regel, \u00e9\u00e9n aanroep naar zoiets als log_info() moeten zijn.", "author": "gvanbrakel", "createdAt": "2021-01-15T09:14:03Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -735,78 +753,71 @@ public void startRunning() {\n \t\t\tif (adapter != null) {\n \t\t\t\tRunStateEnum adapterRunState = adapter.getRunState();\n \t\t\t\tif (!adapterRunState.equals(RunStateEnum.STARTED)) {\n-\t\t\t\t\tlog.warn(getLogPrefix()+\"on adapter [\"\n-\t\t\t\t\t\t\t+ adapter.getName()\n-\t\t\t\t\t\t\t+ \"] was tried to start, but the adapter is in state [\"+adapterRunState+\"]. Ignoring command.\");\n-\t\t\t\t\tadapter.getMessageKeeper().add(\n-\t\t\t\t\t\t\"ignored start command on [\" + getName()  + \"]; adapter is in state [\"+adapterRunState+\"]\");\n+\t\t\t\t\tlog.warn(getLogPrefix()+\"on adapter [\" + adapter.getName() + \"] was tried to start, but the adapter is in state [\"+adapterRunState+\"]. Ignoring command.\");\n+\t\t\t\t\tadapter.getMessageKeeper().add(\"ignored start command on [\" + getName()  + \"]; adapter is in state [\"+adapterRunState+\"]\");\n \t\t\t\t\treturn;\n \t\t\t\t}\n \t\t\t}\n \t\t\t// See also Adapter.startRunning()\n \t\t\tif (!configurationSucceeded) {\n-\t\t\t\tlog.error(\n-\t\t\t\t\t\"configuration of receiver [\"\n-\t\t\t\t\t\t+ getName()\n-\t\t\t\t\t\t+ \"] did not succeed, therefore starting the receiver is not possible\");\n+\t\t\t\tlog.error(\"configuration of receiver [\" + getName() + \"] did not succeed, therefore starting the receiver is not possible\");\n \t\t\t\twarn(\"configuration did not succeed. Starting the receiver [\"+getName()+\"] is not possible\");\n \t\t\t\trunState.setRunState(RunStateEnum.ERROR);\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tif (adapter.getConfiguration().isUnloadInProgressOrDone()) {\n-\t\t\t\tlog.error(\n-\t\t\t\t\t\"configuration of receiver [\"\n-\t\t\t\t\t\t+ getName()\n-\t\t\t\t\t\t+ \"] unload in progress or done, therefore starting the receiver is not possible\");\n+\t\t\t\tlog.error( \"configuration of receiver [\" + getName() + \"] unload in progress or done, therefore starting the receiver is not possible\");\n \t\t\t\twarn(\"configuration unload in progress or done. Starting the receiver [\"+getName()+\"] is not possible\");\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tsynchronized (runState) {\n \t\t\t\tRunStateEnum currentRunState = getRunState();\n-\t\t\t\tif (!currentRunState.equals(RunStateEnum.STOPPED)) {\n+\t\t\t\tif (!currentRunState.equals(RunStateEnum.STOPPED) && !(runState.isInState(RunStateEnum.ERROR) && configurationSucceeded())) { // stopped OR in error after configuring the receiver\n \t\t\t\t\tif (currentRunState.equals(RunStateEnum.STARTING) || currentRunState.equals(RunStateEnum.STARTED)) {\n-\t\t\t\t\t\tinfo(\"receiver already in state [\" + currentRunState + \"]\");\n+\t\t\t\t\t\tlog.info(\"already in state [\" + currentRunState + \"]\");\n \t\t\t\t\t} else {\n-\t\t\t\t\t\twarn(getLogPrefix()+\"currently in state [\" + currentRunState + \"], ignoring start() command\");\n+\t\t\t\t\t\tlog.warn(\"currently in state [\" + currentRunState + \"], ignoring start() command\");\n \t\t\t\t\t}\n \t\t\t\t\treturn;\n \t\t\t\t}\n \t\t\t\trunState.setRunState(RunStateEnum.STARTING);\n \t\t\t}\n-\t\t\tString msg=(getLogPrefix()+\"starts listening\");\n+\n+\t\t\topenAllResources();\n+\n+\t\t\tString msg = getLogPrefix()+\"starts listening\"; // Don't log that it's ready before it's ready!?\n \t\t\tlog.info(msg);\n \t\t\tif (adapter != null) { \n \t\t\t\tadapter.getMessageKeeper().add(msg);\n \t\t\t}", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODEwMjQ1Mg==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558102452", "bodyText": "Waarom is dit synchronized?", "author": "gvanbrakel", "createdAt": "2021-01-15T09:16:19Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -1651,8 +1669,18 @@ public void decreaseThreadCount() {\n \t\t}\n \t}\n \n+\t/**\n+\t * Changes runstate. \n+\t * Always stops the receiver when state is `**ERROR**`\n+\t */\n \tpublic void setRunState(RunStateEnum state) {\n-\t\trunState.setRunState(state);\n+\t\tif(RunStateEnum.ERROR.equals(state)) {\n+\t\t\tstopRunning();\n+\t\t}\n+\n+\t\tsynchronized (runState) {", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODEwMzI5MA==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558103290", "bodyText": "enums mag je met == vergelijken", "author": "gvanbrakel", "createdAt": "2021-01-15T09:16:55Z", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -1678,7 +1706,7 @@ private String sendResultToSender(String correlationId, Message result) {\n \t\t\tString msg = \"caught exception in message post processing\";\n \t\t\terror(msg, e);\n \t\t\terrorMessage = msg + \": \" + e.getMessage();\n-\t\t\tif (ONERROR_CLOSE.equalsIgnoreCase(getOnError())) {\n+\t\t\tif (ON_ERROR.CLOSE.equals(getOnErrorEnum())) {", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE2NTMwNw==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558165307", "bodyText": "mag, hoeft niet, maar zal het aanpassen", "author": "nielsm5", "createdAt": "2021-01-15T09:57:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODEwMzI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODExMDg5NA==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558110894", "bodyText": "Code onder STOPRECEIVER lijkt heel erg op die onder STARTRECEIVER. Lijkt me goed om die te combineren in een method.", "author": "gvanbrakel", "createdAt": "2021-01-15T09:22:11Z", "path": "core/src/main/java/nl/nn/adapterframework/unmanaged/DefaultIbisManager.java", "diffHunk": "@@ -240,7 +240,19 @@ public void handleAdapter(String action, String configurationName,\n \t\t\tfor (Configuration configuration : configurations) {\n \t\t\t\tif (configuration.getRegisteredAdapter(adapterName) != null) {\n \t\t\t\t\tAdapter adapter = configuration.getRegisteredAdapter(adapterName);\n-\t\t\t\t\tReceiver receiver = adapter.getReceiverByName(receiverName);\n+\n+\t\t\t\t\tReceiver<?> receiver = adapter.getReceiverByName(receiverName);\n+\t\t\t\t\tRunStateEnum currentRunState = receiver.getRunState();\n+\t\t\t\t\tif (!currentRunState.equals(RunStateEnum.STARTED)) {\n+\t\t\t\t\t\tif (currentRunState.equals(RunStateEnum.STOPPING) || currentRunState.equals(RunStateEnum.STOPPED)) {\n+\t\t\t\t\t\t\tadapter.getMessageKeeper().info(receiver, \"already in state [\" + currentRunState + \"]\");\n+\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tadapter.getMessageKeeper().warn(receiver, \"currently in state [\" + currentRunState + \"], ignoring start() command\");\n+\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODExNzU3MQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558117571", "bodyText": "Waarom zijn deze synchronized?", "author": "gvanbrakel", "createdAt": "2021-01-15T09:26:46Z", "path": "core/src/main/java/nl/nn/adapterframework/util/RunStateManager.java", "diffHunk": "@@ -27,16 +27,22 @@\n \n \tprivate RunStateEnum runState = RunStateEnum.STOPPED;\n \n+\t@Override\n \tpublic synchronized RunStateEnum getRunState() {\n \t\treturn runState;\n \t}\n+\n+\t@Override\n \tpublic synchronized boolean isInState(RunStateEnum state) {\n \t\treturn runState.equals(state);\n \t}", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODExOTI5NQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558119295", "bodyText": "Ik vind dat bij isDebugEnabled() en isTraceEnabled() het log statement er direct achter mag, zonder accolades", "author": "gvanbrakel", "createdAt": "2021-01-15T09:27:54Z", "path": "core/src/main/java/nl/nn/adapterframework/util/RunStateManager.java", "diffHunk": "@@ -27,16 +27,22 @@\n \n \tprivate RunStateEnum runState = RunStateEnum.STOPPED;\n \n+\t@Override\n \tpublic synchronized RunStateEnum getRunState() {\n \t\treturn runState;\n \t}\n+\n+\t@Override\n \tpublic synchronized boolean isInState(RunStateEnum state) {\n \t\treturn runState.equals(state);\n \t}\n+\n \tpublic synchronized void setRunState(RunStateEnum newRunState) {\n \t\tif (! runState.equals(newRunState)) {\n-\t\t\tif (log.isDebugEnabled())\n+\t\t\tif (log.isDebugEnabled()) {\n \t\t\t\tlog.debug(\"Runstate [\" + this + \"] set from \" + runState + \" to \" + newRunState);\n+\t\t\t}", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE3NjI0MA==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558176240", "bodyText": "ja, maar dan moet het er wel direct achter, en dus niet onder, staan.", "author": "nielsm5", "createdAt": "2021-01-15T10:04:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODExOTI5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODEyMzUyOQ==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558123529", "bodyText": "Zo krijg je natuurlijk nooit die ConfigurationException(\"cannot start an already started validator\");", "author": "gvanbrakel", "createdAt": "2021-01-15T09:30:40Z", "path": "core/src/main/java/nl/nn/adapterframework/validation/JavaxXmlValidator.java", "diffHunk": "@@ -77,11 +77,11 @@ public void configure(String logPrefix) throws ConfigurationException {\n \t\t}\n \t\tsuper.configure(logPrefix);\n \t}\n-\t\n+\n \t@Override\n-\tprotected void init() throws ConfigurationException {\n-\t\tif (needsInit) {\n-\t\t\tsuper.init();\n+\tpublic void start() throws ConfigurationException {\n+\t\tif(!isStarted()) {\n+\t\t\tsuper.start();", "originalCommit": "24351c83b46f8dc94ac2f0b4e4540066d73ac986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE4Mjk1Mg==", "url": "https://github.com/ibissource/iaf/pull/1354#discussion_r558182952", "bodyText": "Dat klopt, het was of dit of 56 junit tests aanpassen...", "author": "nielsm5", "createdAt": "2021-01-15T10:08:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODEyMzUyOQ=="}], "type": "inlineReview"}, {"oid": "f2b4c3d11605dec8b7d8f816b7352e50026c8a87", "url": "https://github.com/ibissource/iaf/commit/f2b4c3d11605dec8b7d8f816b7352e50026c8a87", "message": "cleanup code", "committedDate": "2021-01-15T10:09:36Z", "type": "commit"}, {"oid": "211529a6b0cd53c5830cd8d7635fd5da89e51247", "url": "https://github.com/ibissource/iaf/commit/211529a6b0cd53c5830cd8d7635fd5da89e51247", "message": "Change enum name", "committedDate": "2021-01-15T10:33:52Z", "type": "commit"}, {"oid": "dc02952c629e518c054d89b7a39db59930a18474", "url": "https://github.com/ibissource/iaf/commit/dc02952c629e518c054d89b7a39db59930a18474", "message": "Fix issues", "committedDate": "2021-01-15T13:22:41Z", "type": "commit"}]}