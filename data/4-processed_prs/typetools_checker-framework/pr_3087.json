{"pr_number": 3087, "pr_title": "Reuse existing functions for TypeKind unboxing and range determination", "pr_createdAt": "2020-02-11T00:24:00Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3087", "timeline": [{"oid": "022b498a01be20e4ce191ce9f6394807be85daa3", "url": "https://github.com/typetools/checker-framework/commit/022b498a01be20e4ce191ce9f6394807be85daa3", "message": "added unit test for create(TypeKind)", "committedDate": "2020-02-10T16:01:22Z", "type": "commit"}, {"oid": "06ae3dee3c3bc9ad66dd20f92f4704ae66ddeb27", "url": "https://github.com/typetools/checker-framework/commit/06ae3dee3c3bc9ad66dd20f92f4704ae66ddeb27", "message": "remove trailing spaces from source code pasted int", "committedDate": "2020-02-10T16:01:22Z", "type": "commit"}, {"oid": "1ec3bdf6a5531631d832e66f1ff68723a19fffa6", "url": "https://github.com/typetools/checker-framework/commit/1ec3bdf6a5531631d832e66f1ff68723a19fffa6", "message": "import TypeKInd", "committedDate": "2020-02-10T16:01:22Z", "type": "commit"}, {"oid": "de441eab370c2412b4c631d130729448d29fe275", "url": "https://github.com/typetools/checker-framework/commit/de441eab370c2412b4c631d130729448d29fe275", "message": "reformat", "committedDate": "2020-02-10T16:01:25Z", "type": "commit"}, {"oid": "a74ce5a909d4a2a5fcd15080c07b57b9b400410c", "url": "https://github.com/typetools/checker-framework/commit/a74ce5a909d4a2a5fcd15080c07b57b9b400410c", "message": "Recreate changes from https://github.com/typetools/checker-framework/pull/2942 as that branch is gone.", "committedDate": "2020-02-10T16:27:21Z", "type": "commit"}, {"oid": "aee4e0d386530a40a690c134e4714dddf5e607f3", "url": "https://github.com/typetools/checker-framework/commit/aee4e0d386530a40a690c134e4714dddf5e607f3", "message": "Remove duplicated tests.", "committedDate": "2020-02-10T17:50:58Z", "type": "commit"}, {"oid": "20adcf5e66fe54db1a0e0ffcaaf88da0a9d9e026", "url": "https://github.com/typetools/checker-framework/commit/20adcf5e66fe54db1a0e0ffcaaf88da0a9d9e026", "message": "Adapt expected exception.", "committedDate": "2020-02-10T21:57:46Z", "type": "commit"}, {"oid": "08b63eb06e15a39d7fbf6d86543c4ccd860f5cd8", "url": "https://github.com/typetools/checker-framework/commit/08b63eb06e15a39d7fbf6d86543c4ccd860f5cd8", "message": "Merge branch 'master' of github.com:typetools/checker-framework into smonteiro-useExistingFunctionsImproveRange", "committedDate": "2020-02-11T00:21:34Z", "type": "commit"}, {"oid": "2d0b7e6b6b23e6b33ee029f04738dbfd8a40b3b4", "url": "https://github.com/typetools/checker-framework/commit/2d0b7e6b6b23e6b33ee029f04738dbfd8a40b3b4", "message": "Fix invalid uses.", "committedDate": "2020-02-12T23:34:55Z", "type": "commit"}, {"oid": "ea0e0630648a4959d792fa5b72f8429074c0af8f", "url": "https://github.com/typetools/checker-framework/commit/ea0e0630648a4959d792fa5b72f8429074c0af8f", "message": "Merge branch 'master' of github.com:typetools/checker-framework into smonteiro-useExistingFunctionsImproveRange", "committedDate": "2020-02-12T23:35:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAwNTAxNg==", "url": "https://github.com/typetools/checker-framework/pull/3087#discussion_r379005016", "bodyText": "This should mention that type must be a boxed integral type.", "author": "smillst", "createdAt": "2020-02-13T17:20:38Z", "path": "framework/src/main/java/org/checkerframework/common/value/ValueAnnotatedTypeFactory.java", "diffHunk": "@@ -437,54 +390,22 @@ public long getToValueFromIntRange(AnnotatedTypeMirror atm) {\n             return AnnotationUtils.getElementValue(anno, \"to\", Long.class, false);\n         }\n \n-        long to;\n         TypeMirror type = atm.getUnderlyingType();\n-        switch (type.getKind()) {\n-            case INT:\n-                to = Integer.MAX_VALUE;\n-                break;\n-            case SHORT:\n-                to = Short.MAX_VALUE;\n-                break;\n-            case BYTE:\n-                to = Byte.MAX_VALUE;\n-                break;\n-            case CHAR:\n-                to = Character.MAX_VALUE;\n-                break;\n-            case LONG:\n-                to = Long.MAX_VALUE;\n-                break;\n-            case DECLARED:\n-                String qualifiedName = TypesUtils.getQualifiedName((DeclaredType) type).toString();\n-                switch (qualifiedName) {\n-                    case \"java.lang.Integer\":\n-                        to = Integer.MAX_VALUE;\n-                        break;\n-                    case \"java.lang.Short\":\n-                        to = Short.MAX_VALUE;\n-                        break;\n-                    case \"java.lang.Byte\":\n-                        to = Byte.MAX_VALUE;\n-                        break;\n-                    case \"java.lang.Character\":\n-                        to = Character.MAX_VALUE;\n-                        break;\n-                    case \"java.lang.Long\":\n-                        to = Long.MAX_VALUE;\n-                        break;\n-                    default:\n-                        throw new UserError(\n-                                \"Illegal type \\\"@IntRange \"\n-                                        + qualifiedName\n-                                        + \"\\\". @IntRange can be applied to Java integral types.\");\n-                }\n-                break;\n-            default:\n-                throw new BugInCF(\n-                        \"Tried to apply a default to an IntRange annotation that was neither an integral primitive nor a declared type.\");\n+        return Range.create(toPrimitiveIntegralTypeKind(type)).to;\n+    }\n+\n+    /**\n+     * Determine the primitive integral TypeKind for the given type.\n+     *\n+     * @param type the type to convert", "originalCommit": "ea0e0630648a4959d792fa5b72f8429074c0af8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7e5b1540cc1402da8729a25610fa3aa90e0a5dfc", "url": "https://github.com/typetools/checker-framework/commit/7e5b1540cc1402da8729a25610fa3aa90e0a5dfc", "message": "Improve javadoc.", "committedDate": "2020-02-13T19:33:25Z", "type": "commit"}]}