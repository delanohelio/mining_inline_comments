{"pr_number": 3368, "pr_title": "Refactor private method in TypeFromTreeVisitor", "pr_createdAt": "2020-06-10T20:22:32Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3368", "timeline": [{"oid": "d217509190a948cf82e4db9c8c0056e24ea83337", "url": "https://github.com/typetools/checker-framework/commit/d217509190a948cf82e4db9c8c0056e24ea83337", "message": "Remove comment that is no longer true.", "committedDate": "2020-06-10T20:16:37Z", "type": "commit"}, {"oid": "643097e0f5a64b5021e03914f4f314bb2bcead4a", "url": "https://github.com/typetools/checker-framework/commit/643097e0f5a64b5021e03914f4f314bb2bcead4a", "message": "Clean up the code so it is easier to document.", "committedDate": "2020-06-11T19:42:12Z", "type": "commit"}, {"oid": "6eb2ac1b6f5b182b53db4cab0b4f3faec65e0701", "url": "https://github.com/typetools/checker-framework/commit/6eb2ac1b6f5b182b53db4cab0b4f3faec65e0701", "message": "Fix javadoc.", "committedDate": "2020-06-11T20:52:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1ODc5MQ==", "url": "https://github.com/typetools/checker-framework/pull/3368#discussion_r439158791", "bodyText": "Inlining the call to asUse() sounds like a good simplification, but it would be good to document that change in behavior. At the moment it sounds like type is returned directly.\nMaybe also the method name getTypeVariable*Use*FromDeclaration could highlight that.", "author": "wmdietl", "createdAt": "2020-06-12T01:24:11Z", "path": "framework/src/main/java/org/checkerframework/framework/type/TypeFromTypeTreeVisitor.java", "diffHunk": "@@ -243,68 +244,56 @@ public AnnotatedTypeMirror visitWildcard(WildcardTree node, AnnotatedTypeFactory\n     }\n \n     /**\n-     * Returns an AnnotatedTypeMirror for uses of type variables with annotations written explicitly\n-     * on the type parameter declaration and/or its upper bound.\n+     * If a tree is can be found for the declaration of the type variable {@code type}, then a\n+     * {@link AnnotatedTypeVariable} is returned with explicit annotations from the type variables\n+     * declared bounds. If a tree cannot be found, then {@code type} is returned.\n      *\n-     * <p>Note for type variable uses in method signatures, explicit annotations on the declaration\n-     * are added by {@link TypeFromMemberVisitor#typeVarAnnotator}.\n+     * @param type type variable used to find declaration tree\n+     * @param f annotated type factory\n+     * @return the AnnotatedTypeVariable from the declaration of {@code type} or {@code type} if no", "originalCommit": "6eb2ac1b6f5b182b53db4cab0b4f3faec65e0701", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1ODk4Ng==", "url": "https://github.com/typetools/checker-framework/pull/3368#discussion_r439158986", "bodyText": "Could the return type be AnnotatedTypeVariable?", "author": "wmdietl", "createdAt": "2020-06-12T01:24:58Z", "path": "framework/src/main/java/org/checkerframework/framework/type/TypeFromTypeTreeVisitor.java", "diffHunk": "@@ -243,68 +244,56 @@ public AnnotatedTypeMirror visitWildcard(WildcardTree node, AnnotatedTypeFactory\n     }\n \n     /**\n-     * Returns an AnnotatedTypeMirror for uses of type variables with annotations written explicitly\n-     * on the type parameter declaration and/or its upper bound.\n+     * If a tree is can be found for the declaration of the type variable {@code type}, then a\n+     * {@link AnnotatedTypeVariable} is returned with explicit annotations from the type variables\n+     * declared bounds. If a tree cannot be found, then {@code type} is returned.\n      *\n-     * <p>Note for type variable uses in method signatures, explicit annotations on the declaration\n-     * are added by {@link TypeFromMemberVisitor#typeVarAnnotator}.\n+     * @param type type variable used to find declaration tree\n+     * @param f annotated type factory\n+     * @return the AnnotatedTypeVariable from the declaration of {@code type} or {@code type} if no\n+     *     tree is found.\n      */\n-    private AnnotatedTypeMirror forTypeVariable(AnnotatedTypeMirror type, AnnotatedTypeFactory f) {\n-        if (type.getKind() != TypeKind.TYPEVAR) {\n-            throw new BugInCF(\n-                    \"TypeFromTree.forTypeVariable: should only be called on type variables\");\n-        }\n-        TypeVariable typeVar = (TypeVariable) type.getUnderlyingType();\n+    private AnnotatedTypeMirror getTypeVariableFromDeclaration(", "originalCommit": "6eb2ac1b6f5b182b53db4cab0b4f3faec65e0701", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b30efc0e058c7f31dfba7af3eedfe78a075daf65", "url": "https://github.com/typetools/checker-framework/commit/b30efc0e058c7f31dfba7af3eedfe78a075daf65", "message": "Tweaks.", "committedDate": "2020-06-15T17:05:00Z", "type": "commit"}]}