{"pr_number": 3469, "pr_title": "Enhance message for argument.type.incompatible", "pr_createdAt": "2020-07-12T01:50:02Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3469", "timeline": [{"oid": "0cdd72db4d81888d2f58038fb43b1682fe97c8ce", "url": "https://github.com/typetools/checker-framework/commit/0cdd72db4d81888d2f58038fb43b1682fe97c8ce", "message": "Rename files to avoid multiple files of the same name", "committedDate": "2020-07-11T15:53:15Z", "type": "commit"}, {"oid": "9d5c93ae1298762518e7faa0e05d66f2bc609212", "url": "https://github.com/typetools/checker-framework/commit/9d5c93ae1298762518e7faa0e05d66f2bc609212", "message": "Improve types", "committedDate": "2020-07-11T15:54:31Z", "type": "commit"}, {"oid": "ab9fee9daca657f90ffc4c674cb7b6da6f985c5c", "url": "https://github.com/typetools/checker-framework/commit/ab9fee9daca657f90ffc4c674cb7b6da6f985c5c", "message": "Reduce scope of local variables", "committedDate": "2020-07-11T15:54:52Z", "type": "commit"}, {"oid": "6cc08d391cb18f5e698519168d90346fab28cefc", "url": "https://github.com/typetools/checker-framework/commit/6cc08d391cb18f5e698519168d90346fab28cefc", "message": "Tweak comment", "committedDate": "2020-07-11T16:09:35Z", "type": "commit"}, {"oid": "cb3246dcf7bd829e1311bf95fd9a4a9403f1c863", "url": "https://github.com/typetools/checker-framework/commit/cb3246dcf7bd829e1311bf95fd9a4a9403f1c863", "message": "Add extraArgs argument to commonAssignmentCheck", "committedDate": "2020-07-11T16:11:37Z", "type": "commit"}, {"oid": "85c113f068465300b88c5652bfbe34c8f9d55dec", "url": "https://github.com/typetools/checker-framework/commit/85c113f068465300b88c5652bfbe34c8f9d55dec", "message": "Add Javadoc", "committedDate": "2020-07-11T16:19:57Z", "type": "commit"}, {"oid": "c2c612a412b9b5c7018e39023a85c8e4772eddba", "url": "https://github.com/typetools/checker-framework/commit/c2c612a412b9b5c7018e39023a85c8e4772eddba", "message": "Add more extraArgs arguments", "committedDate": "2020-07-11T16:28:59Z", "type": "commit"}, {"oid": "9c1760e0a64f7a17d41dd0f88a65591fd4c14b0e", "url": "https://github.com/typetools/checker-framework/commit/9c1760e0a64f7a17d41dd0f88a65591fd4c14b0e", "message": "Merge ../checker-framework-fork-mernst-branch-refactorings into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-11T16:32:12Z", "type": "commit"}, {"oid": "5e24662dd98a3b4cdaa9a2dd90310887acb1acca", "url": "https://github.com/typetools/checker-framework/commit/5e24662dd98a3b4cdaa9a2dd90310887acb1acca", "message": "Checkpoint", "committedDate": "2020-07-11T16:32:44Z", "type": "commit"}, {"oid": "2429776dc48e287f8d1d522b2a71a04bb15ca068", "url": "https://github.com/typetools/checker-framework/commit/2429776dc48e287f8d1d522b2a71a04bb15ca068", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-11T16:33:19Z", "type": "commit"}, {"oid": "b9c902dce74297703e61eeb7003e6672d2748e70", "url": "https://github.com/typetools/checker-framework/commit/b9c902dce74297703e61eeb7003e6672d2748e70", "message": "Javadoc fix", "committedDate": "2020-07-11T17:08:40Z", "type": "commit"}, {"oid": "cf47b0ef3a0ec7cff5bfe9eb341cbed24ce6b873", "url": "https://github.com/typetools/checker-framework/commit/cf47b0ef3a0ec7cff5bfe9eb341cbed24ce6b873", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-11T17:18:19Z", "type": "commit"}, {"oid": "0ccca50bf240df598be4464fb20037952c079fe5", "url": "https://github.com/typetools/checker-framework/commit/0ccca50bf240df598be4464fb20037952c079fe5", "message": "Checkpoint", "committedDate": "2020-07-11T17:18:44Z", "type": "commit"}, {"oid": "8d11167ee0f4fe9b0f5c954bb440eea67510a551", "url": "https://github.com/typetools/checker-framework/commit/8d11167ee0f4fe9b0f5c954bb440eea67510a551", "message": "Fix Javadoc", "committedDate": "2020-07-11T17:24:48Z", "type": "commit"}, {"oid": "62f9be7bffa9b9516c2b9cc0f878f9c6f176dc1b", "url": "https://github.com/typetools/checker-framework/commit/62f9be7bffa9b9516c2b9cc0f878f9c6f176dc1b", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-11T17:37:29Z", "type": "commit"}, {"oid": "aae793f7d4e1fe2d2efb9aba56582ea332bde881", "url": "https://github.com/typetools/checker-framework/commit/aae793f7d4e1fe2d2efb9aba56582ea332bde881", "message": "Fix Javadoc", "committedDate": "2020-07-11T17:57:52Z", "type": "commit"}, {"oid": "ce455d587b7910efe2584cd5476ce090a0431ecb", "url": "https://github.com/typetools/checker-framework/commit/ce455d587b7910efe2584cd5476ce090a0431ecb", "message": "Add Javadoc", "committedDate": "2020-07-11T19:48:14Z", "type": "commit"}, {"oid": "8401819b48663ccbc2ccbf8dc596bc06bf3ee70c", "url": "https://github.com/typetools/checker-framework/commit/8401819b48663ccbc2ccbf8dc596bc06bf3ee70c", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-11T19:48:36Z", "type": "commit"}, {"oid": "e6de1e3db3a3df958097dacddb09e12bb39655e5", "url": "https://github.com/typetools/checker-framework/commit/e6de1e3db3a3df958097dacddb09e12bb39655e5", "message": "Fix Javadoc", "committedDate": "2020-07-11T20:52:03Z", "type": "commit"}, {"oid": "85923be5fb4b413e9097c9804168be6ca1d8fad9", "url": "https://github.com/typetools/checker-framework/commit/85923be5fb4b413e9097c9804168be6ca1d8fad9", "message": "Fixes", "committedDate": "2020-07-11T21:15:06Z", "type": "commit"}, {"oid": "fa0dbf44a3d1ae79330adf2174a291be7f2de205", "url": "https://github.com/typetools/checker-framework/commit/fa0dbf44a3d1ae79330adf2174a291be7f2de205", "message": "More refactorings", "committedDate": "2020-07-11T21:32:43Z", "type": "commit"}, {"oid": "bee42462f94fb640d9c15fa8dfcf1dce59576025", "url": "https://github.com/typetools/checker-framework/commit/bee42462f94fb640d9c15fa8dfcf1dce59576025", "message": "Use the extra arguments more consistently", "committedDate": "2020-07-11T21:33:08Z", "type": "commit"}, {"oid": "4847528ebdf41e2c555c8c770d70657e15171a7d", "url": "https://github.com/typetools/checker-framework/commit/4847528ebdf41e2c555c8c770d70657e15171a7d", "message": "Tweak and Javadoc", "committedDate": "2020-07-11T21:33:53Z", "type": "commit"}, {"oid": "76a1928e8ab2b94bd679d4d089e9463e8c691884", "url": "https://github.com/typetools/checker-framework/commit/76a1928e8ab2b94bd679d4d089e9463e8c691884", "message": "Merge ../checker-framework-fork-mernst-branch-refactorings into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-11T21:36:26Z", "type": "commit"}, {"oid": "402b93b50d2e69581e778c0400abd07c945150b5", "url": "https://github.com/typetools/checker-framework/commit/402b93b50d2e69581e778c0400abd07c945150b5", "message": "Add import statement", "committedDate": "2020-07-11T21:36:57Z", "type": "commit"}, {"oid": "c92d80c83852923022c2144024f559f5fa3c5633", "url": "https://github.com/typetools/checker-framework/commit/c92d80c83852923022c2144024f559f5fa3c5633", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-11T21:38:04Z", "type": "commit"}, {"oid": "e523536d13bd8603416fcec8d9a1bac2702de8c3", "url": "https://github.com/typetools/checker-framework/commit/e523536d13bd8603416fcec8d9a1bac2702de8c3", "message": "Fix Javadoc", "committedDate": "2020-07-11T22:22:25Z", "type": "commit"}, {"oid": "72018f1d35be1d17201d29c737c59ded9f885681", "url": "https://github.com/typetools/checker-framework/commit/72018f1d35be1d17201d29c737c59ded9f885681", "message": "Merge ../checker-framework-fork-mernst-branch-refactorings into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-11T22:24:40Z", "type": "commit"}, {"oid": "92369c55b4bfe9347fc543c09192fdedea7f526b", "url": "https://github.com/typetools/checker-framework/commit/92369c55b4bfe9347fc543c09192fdedea7f526b", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-11T22:24:44Z", "type": "commit"}, {"oid": "d8bf18c9da3b4caa4f2ce23e88bb9eec6b8453dd", "url": "https://github.com/typetools/checker-framework/commit/d8bf18c9da3b4caa4f2ce23e88bb9eec6b8453dd", "message": "Update error messages", "committedDate": "2020-07-11T22:31:52Z", "type": "commit"}, {"oid": "b8b83e254a8c6562bc6909c5009ee7700c5bd0a2", "url": "https://github.com/typetools/checker-framework/commit/b8b83e254a8c6562bc6909c5009ee7700c5bd0a2", "message": "Tweak Javadoc", "committedDate": "2020-07-11T23:33:44Z", "type": "commit"}, {"oid": "3564c3502d11dcc1c1f313ea64b0a844a031c24a", "url": "https://github.com/typetools/checker-framework/commit/3564c3502d11dcc1c1f313ea64b0a844a031c24a", "message": "Make :checker:jtregTests pass", "committedDate": "2020-07-11T23:36:29Z", "type": "commit"}, {"oid": "3b61bb6f78e6a1e4f5a94c5f23bf6b3bd59691f4", "url": "https://github.com/typetools/checker-framework/commit/3b61bb6f78e6a1e4f5a94c5f23bf6b3bd59691f4", "message": "Remove Javadoc for non-existent formal parameter", "committedDate": "2020-07-11T23:36:56Z", "type": "commit"}, {"oid": "adc9bd903a84210c7361eef057f2cb5719b721e6", "url": "https://github.com/typetools/checker-framework/commit/adc9bd903a84210c7361eef057f2cb5719b721e6", "message": "Fix incorrect change", "committedDate": "2020-07-11T23:38:10Z", "type": "commit"}, {"oid": "1af60c07a7f4fa48a72394aa771bb28faf3647dd", "url": "https://github.com/typetools/checker-framework/commit/1af60c07a7f4fa48a72394aa771bb28faf3647dd", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-11T23:38:45Z", "type": "commit"}, {"oid": "4270825f30cf9bedb6b36427f0c16b9a7f2141cd", "url": "https://github.com/typetools/checker-framework/commit/4270825f30cf9bedb6b36427f0c16b9a7f2141cd", "message": "Fix expected error", "committedDate": "2020-07-12T00:16:44Z", "type": "commit"}, {"oid": "3963ea6161f2acca5b5473b7a394736b030052b0", "url": "https://github.com/typetools/checker-framework/commit/3963ea6161f2acca5b5473b7a394736b030052b0", "message": "Add Javadoc", "committedDate": "2020-07-12T00:16:52Z", "type": "commit"}, {"oid": "f94e2b52584ff4feb1e88431dc220f3ddb50f3e1", "url": "https://github.com/typetools/checker-framework/commit/f94e2b52584ff4feb1e88431dc220f3ddb50f3e1", "message": "Fix Javadoc", "committedDate": "2020-07-12T00:41:02Z", "type": "commit"}, {"oid": "3eb4a7b6b49caeb63cfd5d80e5b000aa0a5884f5", "url": "https://github.com/typetools/checker-framework/commit/3eb4a7b6b49caeb63cfd5d80e5b000aa0a5884f5", "message": "Do computation only when needed", "committedDate": "2020-07-12T00:41:43Z", "type": "commit"}, {"oid": "8f3d3b28a647a79901dff35abcf521cdf35a1527", "url": "https://github.com/typetools/checker-framework/commit/8f3d3b28a647a79901dff35abcf521cdf35a1527", "message": "Update expected output", "committedDate": "2020-07-12T00:55:47Z", "type": "commit"}, {"oid": "cad652f814b1de08821050929d016d35f283c3d5", "url": "https://github.com/typetools/checker-framework/commit/cad652f814b1de08821050929d016d35f283c3d5", "message": "Reuse a computation", "committedDate": "2020-07-12T01:47:04Z", "type": "commit"}, {"oid": "1cc76fa2843887e279e32426c99ba6eea0667d03", "url": "https://github.com/typetools/checker-framework/commit/1cc76fa2843887e279e32426c99ba6eea0667d03", "message": "Merge ../checker-framework-fork-mernst-branch-refactorings into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-12T01:49:01Z", "type": "commit"}, {"oid": "0c0413f86b3c4082aa24c0d2862019f573daf732", "url": "https://github.com/typetools/checker-framework/commit/0c0413f86b3c4082aa24c0d2862019f573daf732", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-12T01:49:05Z", "type": "commit"}, {"oid": "b8580eceebbe29b386c1d17895a46f3a2d2d4984", "url": "https://github.com/typetools/checker-framework/commit/b8580eceebbe29b386c1d17895a46f3a2d2d4984", "message": "Typo fix", "committedDate": "2020-07-12T02:46:04Z", "type": "commit"}, {"oid": "70d29e31ab97fe2d30ce960f78ab8e20c6c3d36e", "url": "https://github.com/typetools/checker-framework/commit/70d29e31ab97fe2d30ce960f78ab8e20c6c3d36e", "message": "Merge ../checker-framework-fork-mernst-branch-refactorings into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-12T02:46:21Z", "type": "commit"}, {"oid": "cb9be6e28146cc0397ad11d968e569d277921256", "url": "https://github.com/typetools/checker-framework/commit/cb9be6e28146cc0397ad11d968e569d277921256", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-12T02:46:25Z", "type": "commit"}, {"oid": "b6b92d0c20f8262a1e140de11e301f98248cf38e", "url": "https://github.com/typetools/checker-framework/commit/b6b92d0c20f8262a1e140de11e301f98248cf38e", "message": "Merge ../checker-framework-branch-master into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-12T04:19:58Z", "type": "commit"}, {"oid": "1da3a8f46dc7064e03b6d8eb50def122bb712071", "url": "https://github.com/typetools/checker-framework/commit/1da3a8f46dc7064e03b6d8eb50def122bb712071", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-12T04:20:39Z", "type": "commit"}, {"oid": "6c6a1867f7c0778d85ed28657635b9b0e16ab734", "url": "https://github.com/typetools/checker-framework/commit/6c6a1867f7c0778d85ed28657635b9b0e16ab734", "message": "Merge ../checker-framework-branch-master into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-13T23:17:13Z", "type": "commit"}, {"oid": "a84e442f156fa99bc80f5ed8f80009b002cbf8d7", "url": "https://github.com/typetools/checker-framework/commit/a84e442f156fa99bc80f5ed8f80009b002cbf8d7", "message": "Update changelog", "committedDate": "2020-07-13T23:23:11Z", "type": "commit"}, {"oid": "21c26eb8aff7562a3f3b330065336c08caa341ed", "url": "https://github.com/typetools/checker-framework/commit/21c26eb8aff7562a3f3b330065336c08caa341ed", "message": "Move utility method to a different class", "committedDate": "2020-07-13T23:25:20Z", "type": "commit"}, {"oid": "71beb70b8b03f9075533d2b5cd5b3f7e1e69a5f1", "url": "https://github.com/typetools/checker-framework/commit/71beb70b8b03f9075533d2b5cd5b3f7e1e69a5f1", "message": "Suppress nullness warnings relating to partial array initialization", "committedDate": "2020-07-14T00:41:19Z", "type": "commit"}, {"oid": "8465ef243f61edc5a7193756ee50ef46f12a4b12", "url": "https://github.com/typetools/checker-framework/commit/8465ef243f61edc5a7193756ee50ef46f12a4b12", "message": "Merge ../checker-framework-branch-master into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-14T00:42:00Z", "type": "commit"}, {"oid": "934648a29a42c7353a79a29a1338512d033f46ce", "url": "https://github.com/typetools/checker-framework/commit/934648a29a42c7353a79a29a1338512d033f46ce", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-14T00:42:04Z", "type": "commit"}, {"oid": "4fd8bc0459c525357aef31498d9a504ff89f99fe", "url": "https://github.com/typetools/checker-framework/commit/4fd8bc0459c525357aef31498d9a504ff89f99fe", "message": "Merge ../checker-framework-branch-master into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-14T14:09:19Z", "type": "commit"}, {"oid": "a26417cb21ea881bc6a82b7fa9496a635d0d0e95", "url": "https://github.com/typetools/checker-framework/commit/a26417cb21ea881bc6a82b7fa9496a635d0d0e95", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-14T14:09:23Z", "type": "commit"}, {"oid": "c5d5343e30f21b459f4e3cd835190a49727934f8", "url": "https://github.com/typetools/checker-framework/commit/c5d5343e30f21b459f4e3cd835190a49727934f8", "message": "Make utility method more general", "committedDate": "2020-07-17T22:50:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY5NjE1MA==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r456696150", "bodyText": "What visibility should this method have?", "author": "wmdietl", "createdAt": "2020-07-17T22:14:24Z", "path": "checker/src/main/java/org/checkerframework/checker/i18nformatter/I18nFormatterTreeUtil.java", "diffHunk": "@@ -266,6 +266,15 @@ public I18nFormatCall(\n             initialCheck(theargs, method, node, methodAnno);\n         }\n \n+        /**\n+         * Returns the AST node for the call.\n+         *\n+         * @return the AST node for the call\n+         */\n+        MethodInvocationTree getTree() {", "originalCommit": "a26417cb21ea881bc6a82b7fa9496a635d0d0e95", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcyNDU5Nw==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r456724597", "bodyText": "I would rather keep this as incompatible type argument for type parameter %s of %s... and incompatible argument for parameter %s of %s. to stay consistent with all the other type.incompatible messages.", "author": "wmdietl", "createdAt": "2020-07-18T00:27:17Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/messages.properties", "diffHunk": "@@ -13,8 +13,8 @@ vector.copyinto.type.incompatible=incompatible component type in Vector.copyinto\n return.type.incompatible=incompatible types in return.%ntype of expression: %s%nmethod return type: %s\n annotation.type.incompatible=incompatible types in annotation.%nfound   : %s%nrequired: %s\n conditional.type.incompatible=incompatible types in conditional expression.%nfound   : %s%nrequired: %s\n-type.argument.type.incompatible=incompatible types in type argument.%nfound   : %s%nrequired: %s\n-argument.type.incompatible=incompatible types in argument.%nfound   : %s%nrequired: %s\n+type.argument.type.incompatible=invalid type argument for type parameter %s of %s.%nfound   : %s%nrequired: %s", "originalCommit": "a26417cb21ea881bc6a82b7fa9496a635d0d0e95", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "adf498bde3450d0600f9b2645c3ab0884d5ed209", "url": "https://github.com/typetools/checker-framework/commit/adf498bde3450d0600f9b2645c3ab0884d5ed209", "message": "Merge ../checker-framework-branch-master into commonAssignmentCheck-extraArgs", "committedDate": "2020-07-20T15:29:53Z", "type": "commit"}, {"oid": "e0fbabb6c9298aebf8c0c75344e60ee09c56c442", "url": "https://github.com/typetools/checker-framework/commit/e0fbabb6c9298aebf8c0c75344e60ee09c56c442", "message": "Make library method more general", "committedDate": "2020-07-20T15:37:53Z", "type": "commit"}, {"oid": "813f729beea7a67f128b29c739217b235ab84930", "url": "https://github.com/typetools/checker-framework/commit/813f729beea7a67f128b29c739217b235ab84930", "message": "Suppress warning", "committedDate": "2020-07-20T15:40:08Z", "type": "commit"}, {"oid": "f43ad24267c448f12ce60e77db63235a78ffc433", "url": "https://github.com/typetools/checker-framework/commit/f43ad24267c448f12ce60e77db63235a78ffc433", "message": "Change error message text", "committedDate": "2020-07-20T15:52:25Z", "type": "commit"}, {"oid": "f8064668ec659987e755b78a602bd5594b1771a2", "url": "https://github.com/typetools/checker-framework/commit/f8064668ec659987e755b78a602bd5594b1771a2", "message": "Merge ../checker-framework-fork-mernst-branch-commonAssignmentCheck-extraArgs into argument-type-incompatible-message", "committedDate": "2020-07-20T15:54:49Z", "type": "commit"}, {"oid": "863389ab026e1b5a3cff47b88af6f06cacc8b2ea", "url": "https://github.com/typetools/checker-framework/commit/863389ab026e1b5a3cff47b88af6f06cacc8b2ea", "message": "Add visibility modifier", "committedDate": "2020-07-20T15:57:46Z", "type": "commit"}, {"oid": "602042157331fc58042b1a40bc3c089fd9f642f2", "url": "https://github.com/typetools/checker-framework/commit/602042157331fc58042b1a40bc3c089fd9f642f2", "message": "Tweak expected error message", "committedDate": "2020-07-20T20:39:58Z", "type": "commit"}, {"oid": "d9cde13f93957178925111171c668a6f04c403d7", "url": "https://github.com/typetools/checker-framework/commit/d9cde13f93957178925111171c668a6f04c403d7", "message": "Merge ../checker-framework-branch-master into argument-type-incompatible-message", "committedDate": "2020-07-20T22:47:07Z", "type": "commit"}, {"oid": "c7aec1f4ddfb2e13c1a30d1881e5d228e0e19498", "url": "https://github.com/typetools/checker-framework/commit/c7aec1f4ddfb2e13c1a30d1881e5d228e0e19498", "message": "Merge ../checker-framework-branch-master into argument-type-incompatible-message", "committedDate": "2020-07-20T22:54:16Z", "type": "commit"}, {"oid": "0579fa10bf2d31ea782b990062229a50c2e795aa", "url": "https://github.com/typetools/checker-framework/commit/0579fa10bf2d31ea782b990062229a50c2e795aa", "message": "Merge branch 'argument-type-incompatible-message' of github.com:mernst/checker-framework into argument-type-incompatible-message", "committedDate": "2020-07-20T22:54:28Z", "type": "commit"}, {"oid": "d5a8460184ef244d490a1db4a084fa5d1af91de1", "url": "https://github.com/typetools/checker-framework/commit/d5a8460184ef244d490a1db4a084fa5d1af91de1", "message": "Don't create ConditionalTransferResult unless needed", "committedDate": "2020-07-21T01:02:14Z", "type": "commit"}, {"oid": "b7d9b66253ffdb8ccdc017916a6304882c5280e9", "url": "https://github.com/typetools/checker-framework/commit/b7d9b66253ffdb8ccdc017916a6304882c5280e9", "message": "Broaden formal parameter type", "committedDate": "2020-07-21T01:04:34Z", "type": "commit"}, {"oid": "1b7a1afa0a02ba64f84f5bf4ff2ba7e90078b263", "url": "https://github.com/typetools/checker-framework/commit/1b7a1afa0a02ba64f84f5bf4ff2ba7e90078b263", "message": "Add Javadoc", "committedDate": "2020-07-21T02:15:47Z", "type": "commit"}, {"oid": "bcbf955735b611335fda72177185fc68d436406c", "url": "https://github.com/typetools/checker-framework/commit/bcbf955735b611335fda72177185fc68d436406c", "message": "Tweak Javadoc", "committedDate": "2020-07-21T02:21:09Z", "type": "commit"}, {"oid": "cc85d1925b2ddcdc9e50c616a60deab7cfe22706", "url": "https://github.com/typetools/checker-framework/commit/cc85d1925b2ddcdc9e50c616a60deab7cfe22706", "message": "Merge ../checker-framework-branch-master into argument-type-incompatible-message", "committedDate": "2020-07-21T14:53:44Z", "type": "commit"}, {"oid": "0b5965cce13b375100cacf155bf1b05ff1edf3ff", "url": "https://github.com/typetools/checker-framework/commit/0b5965cce13b375100cacf155bf1b05ff1edf3ff", "message": "Reorder changelog", "committedDate": "2020-07-21T14:54:03Z", "type": "commit"}, {"oid": "135a89a15e7bbf3514b69cc10423e9b9e7891f53", "url": "https://github.com/typetools/checker-framework/commit/135a89a15e7bbf3514b69cc10423e9b9e7891f53", "message": "Merge branch 'argument-type-incompatible-message' of github.com:mernst/checker-framework into argument-type-incompatible-message", "committedDate": "2020-07-21T15:07:31Z", "type": "commit"}, {"oid": "ab58a0b50531ebf323706bf2f72500df962cab06", "url": "https://github.com/typetools/checker-framework/commit/ab58a0b50531ebf323706bf2f72500df962cab06", "message": "Revert \"Don't create ConditionalTransferResult unless needed\"\n\nThis reverts commit d5a8460184ef244d490a1db4a084fa5d1af91de1.", "committedDate": "2020-07-21T15:26:58Z", "type": "commit"}, {"oid": "29898cb80849c154aeb29b2d30b427120ab36b53", "url": "https://github.com/typetools/checker-framework/commit/29898cb80849c154aeb29b2d30b427120ab36b53", "message": "Merge branch 'argument-type-incompatible-message' of github.com:mernst/checker-framework into argument-type-incompatible-message", "committedDate": "2020-07-21T15:27:20Z", "type": "commit"}, {"oid": "8a5f8e9e626cde9a9083cac41c7cabd12514b9fa", "url": "https://github.com/typetools/checker-framework/commit/8a5f8e9e626cde9a9083cac41c7cabd12514b9fa", "message": "Merge ../checker-framework-branch-master into argument-type-incompatible-message", "committedDate": "2020-07-21T15:59:33Z", "type": "commit"}, {"oid": "fb6b4d58823eec11cc71602a27f58f869a1548ea", "url": "https://github.com/typetools/checker-framework/commit/fb6b4d58823eec11cc71602a27f58f869a1548ea", "message": "Reinstate import statement", "committedDate": "2020-07-21T16:21:33Z", "type": "commit"}, {"oid": "c1bc5c9d8e2ced36bc62e86fefa25b3f76ae4d5e", "url": "https://github.com/typetools/checker-framework/commit/c1bc5c9d8e2ced36bc62e86fefa25b3f76ae4d5e", "message": "Merge ../checker-framework-branch-master into argument-type-incompatible-message", "committedDate": "2020-07-21T16:23:07Z", "type": "commit"}, {"oid": "dd921ea955eefc5202136b13d544a2f4abc5ad66", "url": "https://github.com/typetools/checker-framework/commit/dd921ea955eefc5202136b13d544a2f4abc5ad66", "message": "Make refactoring consistent", "committedDate": "2020-07-21T17:16:35Z", "type": "commit"}, {"oid": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "url": "https://github.com/typetools/checker-framework/commit/0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "message": "Merge ../checker-framework-branch-master into argument-type-incompatible-message", "committedDate": "2020-07-21T22:59:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0NDgwMg==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458444802", "bodyText": "invokedMethod.getElement() should give you the same result.", "author": "wmdietl", "createdAt": "2020-07-21T23:23:54Z", "path": "checker/src/main/java/org/checkerframework/checker/guieffect/GuiEffectVisitor.java", "diffHunk": "@@ -487,6 +489,9 @@ private void scanUp(TreePath path) {\n                 List<? extends ExpressionTree> args = invocationTree.getArguments();\n                 ParameterizedExecutableType mType = atypeFactory.methodFromUse(invocationTree);\n                 AnnotatedExecutableType invokedMethod = mType.executableType;\n+                ExecutableElement method = TreeUtils.elementFromUse(invocationTree);", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0NjE5OQ==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458446199", "bodyText": "There already is a element declared on line 456 that has the same value.", "author": "wmdietl", "createdAt": "2020-07-21T23:28:07Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeValidator.java", "diffHunk": "@@ -460,7 +461,16 @@ protected Void visitParameterizedType(AnnotatedDeclaredType type, ParameterizedT\n         List<AnnotatedTypeParameterBounds> bounds =\n                 atypeFactory.typeVariablesFromUse(type, element);\n \n-        visitor.checkTypeArguments(tree, bounds, type.getTypeArguments(), tree.getTypeArguments());\n+        DeclaredType declType = type.getUnderlyingType();\n+        TypeElement typeElt = (TypeElement) declType.asElement();", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0NjY4NQ==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458446685", "bodyText": "invokedMethod.getElement() should give you the same result.", "author": "wmdietl", "createdAt": "2020-07-21T23:29:31Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -1368,11 +1369,19 @@ public Void visitMethodInvocation(MethodInvocationTree node, Void p) {\n             paramBounds.add(param.getBounds());\n         }\n \n-        checkTypeArguments(node, paramBounds, typeargs, node.getTypeArguments());\n+        ExecutableElement method = TreeUtils.elementFromUse(node);", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0NzU0NA==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458447544", "bodyText": "constructor.getElement() should give you the same result.", "author": "wmdietl", "createdAt": "2020-07-21T23:32:09Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -1681,15 +1690,24 @@ public Void visitNewClass(NewClassTree node, Void p) {\n         List<AnnotatedTypeMirror> params =\n                 AnnotatedTypes.expandVarArgs(atypeFactory, constructor, passedArguments);\n \n-        checkArguments(params, passedArguments);\n+        ExecutableElement method = TreeUtils.elementFromUse(node);", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0NzY1Mw==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458447653", "bodyText": "method and methodName are bad variable names for constructors.", "author": "wmdietl", "createdAt": "2020-07-21T23:32:30Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -1681,15 +1690,24 @@ public Void visitNewClass(NewClassTree node, Void p) {\n         List<AnnotatedTypeMirror> params =\n                 AnnotatedTypes.expandVarArgs(atypeFactory, constructor, passedArguments);\n \n-        checkArguments(params, passedArguments);\n+        ExecutableElement method = TreeUtils.elementFromUse(node);", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0ODI0NA==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458448244", "bodyText": "This is also used for constructors, so methodName is a bit misleading.", "author": "wmdietl", "createdAt": "2020-07-21T23:34:26Z", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -2921,25 +2948,46 @@ protected void checkConstructorInvocation(\n      *     because it replaces a varargs parameter by multiple parameters with the vararg's element\n      *     type.\n      * @param passedArgs the expressions passed to the corresponding types\n+     * @param methodName the name of the method being called\n+     * @param paramNames the names of the callee's formal parameters\n      */\n     protected void checkArguments(\n             List<? extends AnnotatedTypeMirror> requiredArgs,\n-            List<? extends ExpressionTree> passedArgs) {\n+            List<? extends ExpressionTree> passedArgs,\n+            Name methodName,", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0OTYwNQ==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458449605", "bodyText": "Not sure why this is in this PR, but I'm not sure why this should be a may instead of is as before.", "author": "wmdietl", "createdAt": "2020-07-21T23:38:38Z", "path": "framework/src/main/java/org/checkerframework/framework/flow/CFAbstractTransfer.java", "diffHunk": "@@ -156,7 +156,12 @@ protected V finishValue(V value, S store) {\n      * This method is called before returning the abstract value {@code value} as the result of the\n      * transfer function. By default, the value is not changed but subclasses might decide to\n      * implement some functionality. The store at this position is also passed (two stores, as the\n-     * result is a {@link ConditionalTransferResult}.\n+     * result may be a {@link ConditionalTransferResult}.", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ1MDI3MA==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458450270", "bodyText": "I would probably move this outside of the loop, to make clear that it doesn't change each iteration.", "author": "wmdietl", "createdAt": "2020-07-21T23:40:38Z", "path": "checker/src/main/java/org/checkerframework/checker/i18nformatter/I18nFormatterVisitor.java", "diffHunk": "@@ -87,9 +90,14 @@ private void checkInvocationFormatFor(I18nFormatCall fc) {\n                                     break;\n                                 default:\n                                     if (!fc.isValidParameter(formatCat, paramType)) {\n+                                        ExecutableElement method =", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMTQ0Ng==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458531446", "bodyText": "It's within the loop because it won't ever be used in most loop executions.  Executing it outside the loop is only faster if on average every loop uses it more than 1 time, but is wasteful if each loop on average uses it less than 1 time.", "author": "mernst", "createdAt": "2020-07-22T04:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ1MDI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ1MDU5Nw==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458450597", "bodyText": "I would probably move this outside of the loop, to make clear that it doesn't change each iteration.", "author": "wmdietl", "createdAt": "2020-07-21T23:41:39Z", "path": "checker/src/main/java/org/checkerframework/checker/formatter/FormatterVisitor.java", "diffHunk": "@@ -88,9 +89,14 @@ public Void visitMethodInvocation(MethodInvocationTree node, Void p) {\n                                     default:\n                                         if (!fc.isValidParameter(formatCat, paramType)) {\n                                             // II.3\n+                                            ExecutableElement method =", "originalCommit": "0b8e5ae00dc947abeba3e5171a0e366a391d4cce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMTQzNw==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r458531437", "bodyText": "It's within the loop because it won't ever be used in most loop executions.  Executing it outside the loop is only faster if on average every loop uses it more than 1 time, but is wasteful if each loop on average uses it less than 1 time.", "author": "mernst", "createdAt": "2020-07-22T04:46:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ1MDU5Nw=="}], "type": "inlineReview"}, {"oid": "44fe62737aae0d13c2800436f6c0a2fd3a986375", "url": "https://github.com/typetools/checker-framework/commit/44fe62737aae0d13c2800436f6c0a2fd3a986375", "message": "Merge branch 'argument-type-incompatible-message' of github.com:mernst/checker-framework into argument-type-incompatible-message", "committedDate": "2020-07-22T04:36:05Z", "type": "commit"}, {"oid": "32312aebaa275dc29a79bb10cc53bc5e1ac05bfd", "url": "https://github.com/typetools/checker-framework/commit/32312aebaa275dc29a79bb10cc53bc5e1ac05bfd", "message": "Code review improvements", "committedDate": "2020-07-22T04:43:09Z", "type": "commit"}, {"oid": "a0d55227a19e5c7cc7bcd9d83389cf9ccb83beef", "url": "https://github.com/typetools/checker-framework/commit/a0d55227a19e5c7cc7bcd9d83389cf9ccb83beef", "message": "Remove unused variable", "committedDate": "2020-07-22T05:21:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MTU3MQ==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r459771571", "bodyText": "I don't see a simple way around this, but this will result in a message like\nincompatible argument for parameter  of foo\n\nwith two spaces between parameter and of. (Interestingly, the markup doesn't show two spaces with inline code...)", "author": "wmdietl", "createdAt": "2020-07-23T22:53:19Z", "path": "checker/src/main/java/org/checkerframework/checker/formatter/FormatterVisitor.java", "diffHunk": "@@ -88,9 +89,14 @@ public Void visitMethodInvocation(MethodInvocationTree node, Void p) {\n                                     default:\n                                         if (!fc.isValidParameter(formatCat, paramType)) {\n                                             // II.3\n+                                            ExecutableElement method =\n+                                                    TreeUtils.elementFromUse(node);\n+                                            Name methodName = method.getSimpleName();\n                                             tu.failure(\n                                                     param,\n                                                     \"argument.type.incompatible\",\n+                                                    \"\", // parameter name is not useful", "originalCommit": "a0d55227a19e5c7cc7bcd9d83389cf9ccb83beef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI5NzgyOA==", "url": "https://github.com/typetools/checker-framework/pull/3469#discussion_r460297828", "bodyText": "You are right.  I didn't see a good way around it either.  It would be possible to fix by passing a single extra argument with text \"parameter arg of foo\" or \"parameter of foo\", but to me that looked uglier (in the source code) than leaving an extra space (in the output).  Let's fix it if a user complains.", "author": "mernst", "createdAt": "2020-07-24T21:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MTU3MQ=="}], "type": "inlineReview"}]}