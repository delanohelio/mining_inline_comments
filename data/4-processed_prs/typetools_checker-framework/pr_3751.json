{"pr_number": 3751, "pr_title": "`@MatchesRegex` annotation for Constant Value Checker", "pr_createdAt": "2020-10-08T01:31:12Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3751", "timeline": [{"oid": "e3066e050fe6b35863f20916913036f157d2d95e", "url": "https://github.com/typetools/checker-framework/commit/e3066e050fe6b35863f20916913036f157d2d95e", "message": "docs", "committedDate": "2020-10-07T21:33:59Z", "type": "commit"}, {"oid": "3cfeb295ad3efaa04e6a8ae728a357480235b9f7", "url": "https://github.com/typetools/checker-framework/commit/3cfeb295ad3efaa04e6a8ae728a357480235b9f7", "message": "intentionally failing test + annotation def", "committedDate": "2020-10-08T00:01:17Z", "type": "commit"}, {"oid": "fb10a1d39a80f6ead9a2e43fea26d156876e5509", "url": "https://github.com/typetools/checker-framework/commit/fb10a1d39a80f6ead9a2e43fea26d156876e5509", "message": "working draft of @MatchesRegex", "committedDate": "2020-10-08T01:27:05Z", "type": "commit"}, {"oid": "d9f24e11bc3742c8dab5eee04f17d3c53e93c7e2", "url": "https://github.com/typetools/checker-framework/commit/d9f24e11bc3742c8dab5eee04f17d3c53e93c7e2", "message": "small simplification to make it prettier", "committedDate": "2020-10-08T01:30:11Z", "type": "commit"}, {"oid": "8439e61f8f40a2336a052f65e7540f3b58c6dcb2", "url": "https://github.com/typetools/checker-framework/commit/8439e61f8f40a2336a052f65e7540f3b58c6dcb2", "message": "add note to changelog", "committedDate": "2020-10-08T18:40:16Z", "type": "commit"}, {"oid": "8f5a338396128605e957b31e30fc1d598984af89", "url": "https://github.com/typetools/checker-framework/commit/8f5a338396128605e957b31e30fc1d598984af89", "message": "Merge ../checker-framework-branch-master into matches-regex", "committedDate": "2020-10-09T02:56:20Z", "type": "commit"}, {"oid": "88e87dd0927003d85adc54a687a60f8e04aaae8d", "url": "https://github.com/typetools/checker-framework/commit/88e87dd0927003d85adc54a687a60f8e04aaae8d", "message": "Documentation improvements and a failing test", "committedDate": "2020-10-09T03:09:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE1ODQwNA==", "url": "https://github.com/typetools/checker-framework/pull/3751#discussion_r502158404", "bodyText": "This code does not do that.  To achieve this, you would need to call Pattern.quote and also add ^ and $ anchors.\nAlso note that the strings are not necessarily legal regular expressions.", "author": "mernst", "createdAt": "2020-10-09T03:00:46Z", "path": "framework/src/main/java/org/checkerframework/common/value/ValueAnnotatedTypeFactory.java", "diffHunk": "@@ -936,6 +953,19 @@ public AnnotationMirror createArrayLenRangeAnnotation(Range range) {\n         return createArrayLenAnnotation(ValueCheckerUtils.getLengthsForStringValues(values));\n     }\n \n+    /**\n+     * Converts an {@code StringVal} annotation to an {@code MatchesRegex} annotation that matches\n+     * exactly the string values listed in the {@code StringVal}.", "originalCommit": "8439e61f8f40a2336a052f65e7540f3b58c6dcb2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE1ODY1Mg==", "url": "https://github.com/typetools/checker-framework/pull/3751#discussion_r502158652", "bodyText": "Please add a @Regex annotation.  That would have caught the problem I noted above.", "author": "mernst", "createdAt": "2020-10-09T03:01:48Z", "path": "framework/src/main/java/org/checkerframework/common/value/ValueAnnotatedTypeFactory.java", "diffHunk": "@@ -917,6 +922,18 @@ public AnnotationMirror createArrayLenRangeAnnotation(Range range) {\n         }\n     }\n \n+    /**\n+     * Creates an {@code MatchesRegex} annotation for the given regular expressions.\n+     *\n+     * @param regexes a list of Java regular expressions\n+     * @return a MatchesRegex annotation with those values\n+     */\n+    private AnnotationMirror createMatchesRegexAnnotation(List<String> regexes) {", "originalCommit": "8439e61f8f40a2336a052f65e7540f3b58c6dcb2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "deac1ff9cab3a4ab28fc436d16d4fbc4c14c7032", "url": "https://github.com/typetools/checker-framework/commit/deac1ff9cab3a4ab28fc436d16d4fbc4c14c7032", "message": "fix handling of malformed regexes", "committedDate": "2020-10-09T19:13:43Z", "type": "commit"}, {"oid": "310accaa60b3e324ef0e17b91104ba1f7a79bdc1", "url": "https://github.com/typetools/checker-framework/commit/310accaa60b3e324ef0e17b91104ba1f7a79bdc1", "message": "document some methods that are unrelated to this PR", "committedDate": "2020-10-09T21:27:13Z", "type": "commit"}, {"oid": "41be934b33212fe76f27e26b481e96776d632b67", "url": "https://github.com/typetools/checker-framework/commit/41be934b33212fe76f27e26b481e96776d632b67", "message": "Merge ../checker-framework-branch-master into matches-regex", "committedDate": "2020-10-10T05:24:24Z", "type": "commit"}, {"oid": "d6dcd7699863056cd17eee591438c531b12e832d", "url": "https://github.com/typetools/checker-framework/commit/d6dcd7699863056cd17eee591438c531b12e832d", "message": "Add a test", "committedDate": "2020-10-10T05:44:40Z", "type": "commit"}, {"oid": "a842df72c813f899976faccd5a4f934b526ebc23", "url": "https://github.com/typetools/checker-framework/commit/a842df72c813f899976faccd5a4f934b526ebc23", "message": "Merge branch 'matches-regex' of github.com:kelloggm/checker-framework into matches-regex", "committedDate": "2020-10-10T05:45:11Z", "type": "commit"}, {"oid": "80a6d70588debb5e5c2f7a18d2d00f3c883964e3", "url": "https://github.com/typetools/checker-framework/commit/80a6d70588debb5e5c2f7a18d2d00f3c883964e3", "message": "More tests", "committedDate": "2020-10-10T05:47:45Z", "type": "commit"}, {"oid": "b9872092a5b1d9caa2630369933e289244eedb14", "url": "https://github.com/typetools/checker-framework/commit/b9872092a5b1d9caa2630369933e289244eedb14", "message": "Tweaks", "committedDate": "2020-10-10T05:58:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MDE1Nw==", "url": "https://github.com/typetools/checker-framework/pull/3751#discussion_r502750157", "bodyText": "Does \"match\" mean that the regular expression matches the entire expression, with implicit anchoring at the beginning and end, or that the regex  matches somewhere in the string (some subset of the string)?  Please be explicit about the meaning.", "author": "mernst", "createdAt": "2020-10-10T05:41:44Z", "path": "docs/manual/constant-value-checker.tex", "diffHunk": "@@ -72,11 +74,17 @@\n only the minimum and maximum lengths are used in \\<@ArrayLenRange>,\n giving a range of possible lengths of the string.\n \n-The \\<@StringVal> annotation may be applied to a char array.  Although byte\n-arrays are often converted to/from strings, the \\<@StringVal> annotation may\n+The \\<@StringVal> and \\<@MatchesRegex> annotations may be applied to char arrays.  Although byte\n+arrays are often converted to/from strings, these annotations may\n not be applied to them.  This is because the conversion depends on the\n platform's character set.\n \n+The \\<@MatchesRegex> annotation uses the standard Java regular expression syntax.\n+\\<@MatchesRegex(A)> is only a subtype of \\<@MatchesRegex(B)> if the set of regular\n+expressions \\<A> is a subset of the set of regular expressions \\<B>. An \\<@StringVal> annotation is\n+a subtype of an \\<@MatchesRegex> annotation if each string matches at least one of the regular", "originalCommit": "310accaa60b3e324ef0e17b91104ba1f7a79bdc1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MDMyNA==", "url": "https://github.com/typetools/checker-framework/pull/3751#discussion_r502750324", "bodyText": "Please be explicit about the meaning of \"matches\":  whether the regex must match the entire string (the regex is implicitly anchored at the beginning and end) or is permitted to match a substring.\nGiving some examples would be helpful too:  adding either anchoring or .* to obtain the other behavior than what is the default.  Please add tests like that too.", "author": "mernst", "createdAt": "2020-10-10T05:44:12Z", "path": "framework/src/main/java/org/checkerframework/common/value/qual/MatchesRegex.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.checkerframework.common.value.qual;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import org.checkerframework.framework.qual.SubtypeOf;\n+\n+/**\n+ * An annotation indicating the possible values for a String type. If an expression's type has this\n+ * annotation, then at run time, the expression evaluates to a string that matches at least one of", "originalCommit": "310accaa60b3e324ef0e17b91104ba1f7a79bdc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwNzY4OA==", "url": "https://github.com/typetools/checker-framework/pull/3751#discussion_r504307688", "bodyText": "Rather than adding examples here, I've changed this to refer to the documentation of java.lang.String#matches. That absolves us of the need to maintain examples here, where they might become out of date. I will add the tests you describe, though, since those will start to fail if the behavior of matches changes.", "author": "kelloggm", "createdAt": "2020-10-13T23:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MDMyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MTUxMg==", "url": "https://github.com/typetools/checker-framework/pull/3751#discussion_r502751512", "bodyText": "Because your implementation uses matches rather than Matcher.find, you do not need these anchors.  The tests all pass without them.", "author": "mernst", "createdAt": "2020-10-10T06:00:07Z", "path": "framework/src/main/java/org/checkerframework/common/value/ValueAnnotatedTypeFactory.java", "diffHunk": "@@ -936,7 +968,30 @@ public AnnotationMirror createArrayLenRangeAnnotation(Range range) {\n         return createArrayLenAnnotation(ValueCheckerUtils.getLengthsForStringValues(values));\n     }\n \n-    /** Converts an {@code @ArrayLen} annotation to an {@code @ArrayLenRange} annotation. */\n+    /**\n+     * Converts an {@code StringVal} annotation to an {@code MatchesRegex} annotation that matches\n+     * exactly the string values listed in the {@code StringVal}.\n+     *\n+     * @param stringValAnno a StringVal annotation\n+     * @return an equivalent MatchesReges annotation\n+     */\n+    /* package-private */ AnnotationMirror convertStringValToMatchesRegex(\n+            AnnotationMirror stringValAnno) {\n+        List<String> values = getStringValues(stringValAnno);\n+        List<@Regex String> valuesAsRegexes = new ArrayList<>();\n+        for (String value : values) {\n+            // Quote the String, and surround it with start-of-string and end-of-string markers.\n+            valuesAsRegexes.add(\"^\" + Pattern.quote(value) + \"$\");", "originalCommit": "b9872092a5b1d9caa2630369933e289244eedb14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e61528f0386fc8e57c19be06955a1855919769ef", "url": "https://github.com/typetools/checker-framework/commit/e61528f0386fc8e57c19be06955a1855919769ef", "message": "Merge branch 'master' of github.com:typetools/checker-framework into matches-regex", "committedDate": "2020-10-13T22:03:01Z", "type": "commit"}, {"oid": "4abab483a858e7929299fa9a7f31d918f5e2172a", "url": "https://github.com/typetools/checker-framework/commit/4abab483a858e7929299fa9a7f31d918f5e2172a", "message": "address feedback from PR", "committedDate": "2020-10-13T23:38:11Z", "type": "commit"}, {"oid": "cbc137eaebeb861ac38e66a143669fd9635084e3", "url": "https://github.com/typetools/checker-framework/commit/cbc137eaebeb861ac38e66a143669fd9635084e3", "message": "escape hashtags in latex", "committedDate": "2020-10-14T00:31:33Z", "type": "commit"}, {"oid": "a3b17c01daf5bfeebf4f309ef16a462b6edce02a", "url": "https://github.com/typetools/checker-framework/commit/a3b17c01daf5bfeebf4f309ef16a462b6edce02a", "message": "Merge ../checker-framework-branch-master into matches-regex", "committedDate": "2020-10-16T04:08:04Z", "type": "commit"}, {"oid": "2f4e025973482313672db6d4dcc8bcdbbe6c6fbf", "url": "https://github.com/typetools/checker-framework/commit/2f4e025973482313672db6d4dcc8bcdbbe6c6fbf", "message": "Merge ../checker-framework-branch-master into matches-regex", "committedDate": "2020-10-17T04:54:12Z", "type": "commit"}, {"oid": "c7c69d0babf7a25c06162deadf90dad0d5b01555", "url": "https://github.com/typetools/checker-framework/commit/c7c69d0babf7a25c06162deadf90dad0d5b01555", "message": "Code review changes", "committedDate": "2020-10-17T05:05:01Z", "type": "commit"}]}