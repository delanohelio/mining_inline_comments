{"pr_number": 3883, "pr_title": "Explain defaulting for exception parameters", "pr_createdAt": "2020-11-09T14:59:58Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3883", "timeline": [{"oid": "534747c54a3128e0ba19e5a59c7f580c8bae6f2e", "url": "https://github.com/typetools/checker-framework/commit/534747c54a3128e0ba19e5a59c7f580c8bae6f2e", "message": "Document why nested class is not static", "committedDate": "2020-10-29T21:30:59Z", "type": "commit"}, {"oid": "85a767ea734ba453115498fbb605ea3075bf6d21", "url": "https://github.com/typetools/checker-framework/commit/85a767ea734ba453115498fbb605ea3075bf6d21", "message": "Merge branch 'master' of github.com:mernst/checker-framework", "committedDate": "2020-11-02T16:04:29Z", "type": "commit"}, {"oid": "d7b43ba8969d642b656b8363a98c35c79ea45ad9", "url": "https://github.com/typetools/checker-framework/commit/d7b43ba8969d642b656b8363a98c35c79ea45ad9", "message": "Merge branch 'master' of github.com:mernst/checker-framework", "committedDate": "2020-11-02T19:30:36Z", "type": "commit"}, {"oid": "59b91d828ac76947121e724de60d621d1d986007", "url": "https://github.com/typetools/checker-framework/commit/59b91d828ac76947121e724de60d621d1d986007", "message": "An alternate design for exception parameter defaulting", "committedDate": "2020-11-09T14:58:56Z", "type": "commit"}, {"oid": "77b8b3ad92cc620a7d84d6274541344ac6a18972", "url": "https://github.com/typetools/checker-framework/commit/77b8b3ad92cc620a7d84d6274541344ac6a18972", "message": "Merge ../checker-framework-branch-master into exception-parameter-lowerbound-default-is-top", "committedDate": "2020-11-09T16:02:03Z", "type": "commit"}, {"oid": "6f8e5d15c742a08c9f41b4bb0a24add53500422b", "url": "https://github.com/typetools/checker-framework/commit/6f8e5d15c742a08c9f41b4bb0a24add53500422b", "message": "Improve explanation", "committedDate": "2020-11-09T18:12:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyNDEyOQ==", "url": "https://github.com/typetools/checker-framework/pull/3883#discussion_r520024129", "bodyText": "alternatiev", "author": "smillst", "createdAt": "2020-11-09T18:24:01Z", "path": "docs/manual/advanced-features.tex", "diffHunk": "@@ -381,14 +381,28 @@\n arguments (known as exception parameters in the Java Language Specification).\n \n Exception parameters default to the top type because they might catch an\n-exception thrown anywhere in the program.  If the Checker Framework\n-defaulted exception parameters some other type T (instead of the top type),\n-then the Checker Framework would need to issue a warning at every \\<throw>\n-statement whose argument might not be a subtype of T.  (An even more\n-precise analysis would be for the Checker Framework to compute the\n-feasibility of every pair of $\\langle$throw statement, catch\n-clauses$\\rangle$ in the program, but such an analysis might be expensive or\n-non-modular.)\n+exception thrown anywhere in the program.\n+\n+An alternate design for exception parameters would be to default exception\n+parameters some other type T (instead of the top type); then the Checker\n+Framework would need to issue a warning at every \\<throw> statement whose\n+argument might not be a subtype of T\\@.  A checker can implement this\n+alternate design by overriding a few methods.  The alternative is not\n+appropriate for all type systems.  The alternatiev is unsound for deep type", "originalCommit": "6f8e5d15c742a08c9f41b4bb0a24add53500422b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3145764253e880ba5337de298b9f5b56c0d3d18f", "url": "https://github.com/typetools/checker-framework/commit/3145764253e880ba5337de298b9f5b56c0d3d18f", "message": "Spell-check", "committedDate": "2020-11-09T18:54:09Z", "type": "commit"}]}