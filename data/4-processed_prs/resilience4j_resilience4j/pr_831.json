{"pr_number": 831, "pr_title": "Added withTimeLimiter and withThreadPoolBulkhead methods to Decorator\u2026", "pr_createdAt": "2020-01-31T09:10:10Z", "pr_url": "https://github.com/resilience4j/resilience4j/pull/831", "timeline": [{"oid": "bc13c06936cd198fb2057f20f7901617b37abf74", "url": "https://github.com/resilience4j/resilience4j/commit/bc13c06936cd198fb2057f20f7901617b37abf74", "message": "Added withTimeLimiter and withThreadPoolBulkhead methods to Decorators class.", "committedDate": "2020-01-31T09:09:36Z", "type": "commit"}, {"oid": "761121ca8331f3821b0787f8bbdfcea74cae2628", "url": "https://github.com/resilience4j/resilience4j/commit/761121ca8331f3821b0787f8bbdfcea74cae2628", "message": "SonarCloud findings", "committedDate": "2020-01-31T09:28:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5NDI3OQ==", "url": "https://github.com/resilience4j/resilience4j/pull/831#discussion_r373394279", "bodyText": "nit: could you remove empty lines?", "author": "dlsrb6342", "createdAt": "2020-01-31T09:48:45Z", "path": "resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java", "diffHunk": "@@ -92,13 +102,29 @@ private DecorateSupplier(Supplier<T> supplier) {\n             return this;\n         }\n \n+        public DecorateSupplier<T> withFallback(Function<Throwable, T> exceptionHandler) {\n+            supplier = SupplierUtils.recover(supplier, exceptionHandler);\n+            return this;\n+        }\n+\n+        public <X extends Throwable> DecorateSupplier<T> withFallback(Class<X> exceptionType, Function<Throwable, T> exceptionHandler) {\n+            supplier = SupplierUtils.recover(supplier, exceptionType, exceptionHandler);\n+            return this;\n+        }\n+\n+        public DecorateCompletionStage<T> withThreadPoolBulkhead(ThreadPoolBulkhead threadPoolBulkhead) {\n+            return Decorators.ofCompletionStage(threadPoolBulkhead.decorateSupplier(supplier));\n+        }\n+\n         public Supplier<T> decorate() {\n             return supplier;\n         }\n \n         public T get() {\n             return supplier.get();\n         }\n+\n+", "originalCommit": "761121ca8331f3821b0787f8bbdfcea74cae2628", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7c614ff53d61d8ea6411eddbe908498bbda3094c", "url": "https://github.com/resilience4j/resilience4j/commit/7c614ff53d61d8ea6411eddbe908498bbda3094c", "message": "Added a withFallback method which allows to specify multiple exception types.", "committedDate": "2020-01-31T10:40:19Z", "type": "commit"}, {"oid": "b13dcc11875336e884a9b5a3dbca1868f6413116", "url": "https://github.com/resilience4j/resilience4j/commit/b13dcc11875336e884a9b5a3dbca1868f6413116", "message": "Added a withFallback method which allows to specify a fallback based on a specific result", "committedDate": "2020-01-31T12:00:16Z", "type": "commit"}, {"oid": "09090e5b82f30036d942ff2163437438e71fc8b7", "url": "https://github.com/resilience4j/resilience4j/commit/09090e5b82f30036d942ff2163437438e71fc8b7", "message": "Fixed tests", "committedDate": "2020-01-31T12:15:04Z", "type": "commit"}, {"oid": "dac2be3d60fe89808f9f4d2141dee95f8570d776", "url": "https://github.com/resilience4j/resilience4j/commit/dac2be3d60fe89808f9f4d2141dee95f8570d776", "message": "SonarCloud findings", "committedDate": "2020-01-31T12:38:08Z", "type": "commit"}, {"oid": "1dfdc1b464d5f5d5c33e60dfaeba95cf38eb1f9b", "url": "https://github.com/resilience4j/resilience4j/commit/1dfdc1b464d5f5d5c33e60dfaeba95cf38eb1f9b", "message": "Added some JavaDoc to the decorators class.", "committedDate": "2020-01-31T13:05:18Z", "type": "commit"}]}