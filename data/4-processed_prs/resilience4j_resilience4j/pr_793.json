{"pr_number": 793, "pr_title": "Issue 773: add support to rate limiter spring instance configuration \u2026", "pr_createdAt": "2020-01-07T22:57:27Z", "pr_url": "https://github.com/resilience4j/resilience4j/pull/793", "timeline": [{"oid": "d65ba2abb05815704ccce881fd1c2fde3e04a250", "url": "https://github.com/resilience4j/resilience4j/commit/d65ba2abb05815704ccce881fd1c2fde3e04a250", "message": "Issue 773: add support to rate limiter spring instance configuration customizer", "committedDate": "2020-01-07T22:56:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAwNTY2OQ==", "url": "https://github.com/resilience4j/resilience4j/pull/793#discussion_r364005669", "bodyText": "Please fix typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * the composite  of any circuit breaker {@link RateLimiterConfigCustomizer} implementations.\n          \n          \n            \n             * the composite  of any rate limiter {@link RateLimiterConfigCustomizer} implementations.", "author": "dlsrb6342", "createdAt": "2020-01-07T23:44:40Z", "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/ratelimiter/configuration/CompositeRateLimiterCustomizer.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.resilience4j.common.ratelimiter.configuration;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * the composite  of any circuit breaker {@link RateLimiterConfigCustomizer} implementations.", "originalCommit": "d65ba2abb05815704ccce881fd1c2fde3e04a250", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAwNTkzOA==", "url": "https://github.com/resilience4j/resilience4j/pull/793#discussion_r364005938", "bodyText": "Don't we need to check that there are multiple customizer for same name?", "author": "dlsrb6342", "createdAt": "2020-01-07T23:45:37Z", "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/ratelimiter/configuration/CompositeRateLimiterCustomizer.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.resilience4j.common.ratelimiter.configuration;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * the composite  of any circuit breaker {@link RateLimiterConfigCustomizer} implementations.\n+ */\n+public class CompositeRateLimiterCustomizer {\n+\n+    private final Map<String, RateLimiterConfigCustomizer> customizerMap = new HashMap<>();\n+\n+    public CompositeRateLimiterCustomizer(List<RateLimiterConfigCustomizer> customizers) {\n+        if (customizers != null && !customizers.isEmpty()) {\n+            customizerMap.putAll(customizers.stream()\n+                .collect(\n+                    Collectors.toMap(RateLimiterConfigCustomizer::name, Function.identity())));", "originalCommit": "d65ba2abb05815704ccce881fd1c2fde3e04a250", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEyMTg4Ng==", "url": "https://github.com/resilience4j/resilience4j/pull/793#discussion_r364121886", "bodyText": "we can throw an exception to show that is not allowed to have more than one customizer per instance name , is this what u r asking for :) ? or i misunderstood ?", "author": "Romeh", "createdAt": "2020-01-08T08:57:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAwNTkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYwNDExNw==", "url": "https://github.com/resilience4j/resilience4j/pull/793#discussion_r364604117", "bodyText": "Yes right. We can throw an exception or write on docs about supporting just one customizer per instance name.", "author": "dlsrb6342", "createdAt": "2020-01-09T08:14:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAwNTkzOA=="}], "type": "inlineReview"}, {"oid": "e87fb09ebbe12c5d27f99113f2ce097b33f8d896", "url": "https://github.com/resilience4j/resilience4j/commit/e87fb09ebbe12c5d27f99113f2ce097b33f8d896", "message": "Issue 773: add support to rate limiter spring instance configuration customizer", "committedDate": "2020-01-08T07:38:30Z", "type": "commit"}, {"oid": "b47fdde93b2de0a71a5cebb3618e7881a494dd62", "url": "https://github.com/resilience4j/resilience4j/commit/b47fdde93b2de0a71a5cebb3618e7881a494dd62", "message": "Merge remote-tracking branch 'upstream/master' into issue-773-ratelimiter-customizer\n\n# Conflicts:\n#\tresilience4j-spring-boot-common/src/test/java/io/github/resilience4j/SpringBootCommonTest.java\n#\tresilience4j-spring-boot2/src/test/java/io/github/resilience4j/service/test/TestApplication.java", "committedDate": "2020-01-09T12:03:27Z", "type": "commit"}, {"oid": "94201cac5f25f2b8b7093640ce68af251d9f32fc", "url": "https://github.com/resilience4j/resilience4j/commit/94201cac5f25f2b8b7093640ce68af251d9f32fc", "message": "Issue 773: refactor to common composite customizer", "committedDate": "2020-01-09T12:32:10Z", "type": "commit"}, {"oid": "9d57be9bcba0946e8be1c73428bd7168035dc52b", "url": "https://github.com/resilience4j/resilience4j/commit/9d57be9bcba0946e8be1c73428bd7168035dc52b", "message": "Issue 773: refactor to common composite customizer for circuit breaker", "committedDate": "2020-01-09T12:32:28Z", "type": "commit"}, {"oid": "1f20f4a8f1dfe7afb5d0942141c06f71e3214aaf", "url": "https://github.com/resilience4j/resilience4j/commit/1f20f4a8f1dfe7afb5d0942141c06f71e3214aaf", "message": "Issue 773: add support to common circuit breaker composite", "committedDate": "2020-01-09T12:32:57Z", "type": "commit"}, {"oid": "d3e838774a32d6aa5894282ba6a1460df6a74e76", "url": "https://github.com/resilience4j/resilience4j/commit/d3e838774a32d6aa5894282ba6a1460df6a74e76", "message": "Revert \"Issue 773: refactor to common composite customizer for circuit breaker\"\n\nThis reverts commit 9d57be9b", "committedDate": "2020-01-09T12:33:21Z", "type": "commit"}]}