{"pr_number": 1185, "pr_title": "Issue #1044: Added maxInterval to limit exponential backoff - Spring properties (#1057)", "pr_createdAt": "2020-10-01T07:42:37Z", "pr_url": "https://github.com/resilience4j/resilience4j/pull/1185", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyODM2OA==", "url": "https://github.com/resilience4j/resilience4j/pull/1185#discussion_r498228368", "bodyText": "Can we use Duration and call it exponentialMaxWaitDuration?", "author": "RobWin", "createdAt": "2020-10-01T13:05:58Z", "path": "resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/RetryConfigurationProperties.java", "diffHunk": "@@ -231,49 +252,62 @@ private void configureRetryIntervalFunction(InstanceProperties properties,\n \n         @Nullable\n         private Integer maxAttempts;\n-        /*\n+\n+        /**\n          * retry exception predicate class to be used to evaluate the exception to retry or not\n          */\n         @Nullable\n         private Class<? extends Predicate<Throwable>> retryExceptionPredicate;\n-        /*\n+\n+        /**\n          * retry setResultPredicate predicate class to be used to evaluate the result to retry or not\n          */\n         @Nullable\n         private Class<? extends Predicate<Object>> resultPredicate;\n-        /*\n+\n+        /**\n          * list of retry exception classes\n          */\n         @SuppressWarnings(\"unchecked\")\n         @Nullable\n         private Class<? extends Throwable>[] retryExceptions;\n-        /*\n+\n+        /**\n          * list of retry ignored exception classes\n          */\n         @SuppressWarnings(\"unchecked\")\n         @Nullable\n         private Class<? extends Throwable>[] ignoreExceptions;\n-        /*\n+\n+        /**\n          * event buffer size for generated retry events\n          */\n         @Nullable\n         private Integer eventConsumerBufferSize;\n-        /*\n+\n+        /**\n          * flag to enable Exponential backoff policy or not for retry policy delay\n          */\n         @Nullable\n         private Boolean enableExponentialBackoff;\n-        /*\n+\n+        /**\n          * exponential backoff multiplier value\n          */\n         private Double exponentialBackoffMultiplier;\n \n-        /*\n+        /**\n+         * exponential max interval value\n+         */\n+        private Long exponentialMaxIntervalMillis;", "originalCommit": "f3b428e513cc6b82f1625eaebfd8a801a11c9f30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ0Nzk0MA==", "url": "https://github.com/resilience4j/resilience4j/pull/1185#discussion_r498447940", "bodyText": "good idea, done", "author": "hexmind", "createdAt": "2020-10-01T18:47:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIyODM2OA=="}], "type": "inlineReview"}, {"oid": "e9e120fdc1e42b669153cc61d4a958e3768d0611", "url": "https://github.com/resilience4j/resilience4j/commit/e9e120fdc1e42b669153cc61d4a958e3768d0611", "message": "Issue #1044: Added maxInterval to limit exponential backoff - spring properties (#1057)", "committedDate": "2020-10-01T18:40:46Z", "type": "forcePushed"}, {"oid": "2703314f8a083d8df58a9806cb4a31324b59acd9", "url": "https://github.com/resilience4j/resilience4j/commit/2703314f8a083d8df58a9806cb4a31324b59acd9", "message": "Issue #1044: Added maxInterval to limit exponential backoff - spring properties (#1057)", "committedDate": "2020-10-01T19:13:01Z", "type": "forcePushed"}, {"oid": "c2bba95e8359c381df6e1b92ab9a4842e6b0993d", "url": "https://github.com/resilience4j/resilience4j/commit/c2bba95e8359c381df6e1b92ab9a4842e6b0993d", "message": "Issue #1044: Added maxInterval to limit exponential backoff - spring properties (#1057)", "committedDate": "2020-10-01T21:20:21Z", "type": "commit"}, {"oid": "c2bba95e8359c381df6e1b92ab9a4842e6b0993d", "url": "https://github.com/resilience4j/resilience4j/commit/c2bba95e8359c381df6e1b92ab9a4842e6b0993d", "message": "Issue #1044: Added maxInterval to limit exponential backoff - spring properties (#1057)", "committedDate": "2020-10-01T21:20:21Z", "type": "forcePushed"}]}