{"pr_number": 1191, "pr_title": "ORC: Use ConstantReader for identity partition columns", "pr_createdAt": "2020-07-10T01:35:25Z", "pr_url": "https://github.com/apache/iceberg/pull/1191", "timeline": [{"oid": "c55c16e0b0f7d3778c3e04ef747f9e557f0718a7", "url": "https://github.com/apache/iceberg/commit/c55c16e0b0f7d3778c3e04ef747f9e557f0718a7", "message": "ORC: Use ConstantReader for identity partition columns", "committedDate": "2020-07-10T01:34:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2NzQ0Nw==", "url": "https://github.com/apache/iceberg/pull/1191#discussion_r452967447", "bodyText": "Is ColumnVector still materialized? Is it possible to avoid reading that entirely?", "author": "rdblue", "createdAt": "2020-07-10T17:08:05Z", "path": "orc/src/main/java/org/apache/iceberg/orc/OrcValueReaders.java", "diffHunk": "@@ -181,12 +173,25 @@ private T readInternal(T struct, ColumnVector[] columnVectors, int row) {\n       for (int c = 0; c < readers.length; ++c) {\n         set(struct, c, reader(c).read(columnVectors[c], row));\n       }\n+      return struct;\n+    }\n+  }\n \n-      for (int i = 0; i < positions.length; i += 1) {\n-        set(struct, positions[i], constants[i]);\n-      }\n+  private static class ConstantReader<C> implements OrcValueReader<C> {\n+    private final C constant;\n \n-      return struct;\n+    private ConstantReader(C constant) {\n+      this.constant = constant;\n+    }\n+\n+    @Override\n+    public C read(ColumnVector ignored, int ignoredRow) {", "originalCommit": "c55c16e0b0f7d3778c3e04ef747f9e557f0718a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzNDU0Nw==", "url": "https://github.com/apache/iceberg/pull/1191#discussion_r453034547", "bodyText": "Yes, I guess we can do that by not asking ORC to project these columns. Let me give it a try.", "author": "shardulm94", "createdAt": "2020-07-10T19:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2NzQ0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzOTUxNw==", "url": "https://github.com/apache/iceberg/pull/1191#discussion_r453039517", "bodyText": "That's going to be a bigger time savings and that's what we do for Parquet. We just drop it from the projection we pass down to the format.", "author": "rdblue", "createdAt": "2020-07-10T19:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2NzQ0Nw=="}], "type": "inlineReview"}, {"oid": "26cbff7a236fd0a06d7b34f8e97d8d0c5631b873", "url": "https://github.com/apache/iceberg/commit/26cbff7a236fd0a06d7b34f8e97d8d0c5631b873", "message": "Do not project constant columns from ORC reader", "committedDate": "2020-07-10T23:13:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExNzc1Ng==", "url": "https://github.com/apache/iceberg/pull/1191#discussion_r453117756", "bodyText": "Minor: we discourage using the return value of ++ expressions because it is error prone and makes code harder to read. Could you move the increment to a separate line?", "author": "rdblue", "createdAt": "2020-07-10T23:18:26Z", "path": "orc/src/main/java/org/apache/iceberg/orc/OrcValueReaders.java", "diffHunk": "@@ -178,15 +171,29 @@ public T nonNullRead(ColumnVector vector, int row) {\n     }\n \n     private T readInternal(T struct, ColumnVector[] columnVectors, int row) {\n-      for (int c = 0; c < readers.length; ++c) {\n-        set(struct, c, reader(c).read(columnVectors[c], row));\n+      for (int c = 0, vectorIndex = 0; c < readers.length; ++c) {\n+        ColumnVector vector = isConstantField[c] ? null : columnVectors[vectorIndex++];", "originalCommit": "26cbff7a236fd0a06d7b34f8e97d8d0c5631b873", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyMzU0Mw==", "url": "https://github.com/apache/iceberg/pull/1191#discussion_r453123543", "bodyText": "Done", "author": "shardulm94", "createdAt": "2020-07-10T23:45:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExNzc1Ng=="}], "type": "inlineReview"}, {"oid": "1439094782ca131210070cabfa09d8f0cd0cb1f8", "url": "https://github.com/apache/iceberg/commit/1439094782ca131210070cabfa09d8f0cd0cb1f8", "message": "Address PR comments", "committedDate": "2020-07-10T23:42:22Z", "type": "commit"}]}