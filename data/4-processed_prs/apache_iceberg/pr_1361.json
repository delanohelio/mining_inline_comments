{"pr_number": 1361, "pr_title": "Add more tests for RemoveSnapshots", "pr_createdAt": "2020-08-20T21:30:43Z", "pr_url": "https://github.com/apache/iceberg/pull/1361", "timeline": [{"oid": "baaf05c2b44e2af2676d70dc484c4f262f2656db", "url": "https://github.com/apache/iceberg/commit/baaf05c2b44e2af2676d70dc484c4f262f2656db", "message": "Add more tests for RemoveSnapshots.", "committedDate": "2020-08-20T21:29:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MDQzNw==", "url": "https://github.com/apache/iceberg/pull/1361#discussion_r474290437", "bodyText": "Should only remove the expired manifest list location", "author": "RussellSpitzer", "createdAt": "2020-08-20T21:45:54Z", "path": "core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java", "diffHunk": "@@ -50,6 +51,257 @@ public TestRemoveSnapshots(int formatVersion) {\n     super(formatVersion);\n   }\n \n+  private long waitUntilAfter(long timestampMillis) {\n+    long t = System.currentTimeMillis();\n+    while (t <= timestampMillis) {\n+      t = System.currentTimeMillis();\n+    }\n+    return t;\n+  }\n+\n+  @Test\n+  public void testExpireOlderThan() {\n+    table.newAppend()\n+        .appendFile(FILE_A)\n+        .commit();\n+\n+    Snapshot firstSnapshot = table.currentSnapshot();\n+\n+    waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    table.newAppend()\n+        .appendFile(FILE_B)\n+        .commit();\n+\n+    long snapshotId = table.currentSnapshot().snapshotId();\n+\n+    long tAfterCommits = waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    Set<String> deletedFiles = Sets.newHashSet();\n+\n+    table.expireSnapshots()\n+        .expireOlderThan(tAfterCommits)\n+        .deleteWith(deletedFiles::add)\n+        .commit();\n+\n+    Assert.assertEquals(\"Expire should not change current snapshot\", snapshotId, table.currentSnapshot().snapshotId());\n+    Assert.assertNull(\"Expire should remove the oldest snapshot\", table.snapshot(firstSnapshot.snapshotId()));\n+    Assert.assertEquals(\"Should not remove only the expired manifest list location\",", "originalCommit": "baaf05c2b44e2af2676d70dc484c4f262f2656db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTI5NA==", "url": "https://github.com/apache/iceberg/pull/1361#discussion_r474291294", "bodyText": "Should replace manifest with a rewritten manifest", "author": "RussellSpitzer", "createdAt": "2020-08-20T21:47:48Z", "path": "core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java", "diffHunk": "@@ -50,6 +51,257 @@ public TestRemoveSnapshots(int formatVersion) {\n     super(formatVersion);\n   }\n \n+  private long waitUntilAfter(long timestampMillis) {\n+    long t = System.currentTimeMillis();\n+    while (t <= timestampMillis) {\n+      t = System.currentTimeMillis();\n+    }\n+    return t;\n+  }\n+\n+  @Test\n+  public void testExpireOlderThan() {\n+    table.newAppend()\n+        .appendFile(FILE_A)\n+        .commit();\n+\n+    Snapshot firstSnapshot = table.currentSnapshot();\n+\n+    waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    table.newAppend()\n+        .appendFile(FILE_B)\n+        .commit();\n+\n+    long snapshotId = table.currentSnapshot().snapshotId();\n+\n+    long tAfterCommits = waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    Set<String> deletedFiles = Sets.newHashSet();\n+\n+    table.expireSnapshots()\n+        .expireOlderThan(tAfterCommits)\n+        .deleteWith(deletedFiles::add)\n+        .commit();\n+\n+    Assert.assertEquals(\"Expire should not change current snapshot\", snapshotId, table.currentSnapshot().snapshotId());\n+    Assert.assertNull(\"Expire should remove the oldest snapshot\", table.snapshot(firstSnapshot.snapshotId()));\n+    Assert.assertEquals(\"Should not remove only the expired manifest list location\",\n+        Sets.newHashSet(firstSnapshot.manifestListLocation()), deletedFiles);\n+  }\n+\n+  @Test\n+  public void testExpireOlderThanWithDelete() {\n+    table.newAppend()\n+        .appendFile(FILE_A)\n+        .commit();\n+\n+    Snapshot firstSnapshot = table.currentSnapshot();\n+    Assert.assertEquals(\"Should create one manifest\",\n+        1, firstSnapshot.allManifests().size());\n+\n+    waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    table.newDelete()\n+        .deleteFile(FILE_A)\n+        .commit();\n+\n+    Snapshot secondSnapshot = table.currentSnapshot();\n+    Assert.assertEquals(\"Should create replace manifest with a rewritten manifest\",\n+        1, secondSnapshot.allManifests().size());\n+\n+    table.newAppend()\n+        .appendFile(FILE_B)\n+        .commit();\n+\n+    waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    long snapshotId = table.currentSnapshot().snapshotId();\n+\n+    long tAfterCommits = waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    Set<String> deletedFiles = Sets.newHashSet();\n+\n+    table.expireSnapshots()\n+        .expireOlderThan(tAfterCommits)\n+        .deleteWith(deletedFiles::add)\n+        .commit();\n+\n+    Assert.assertEquals(\"Expire should not change current snapshot\", snapshotId, table.currentSnapshot().snapshotId());\n+    Assert.assertNull(\"Expire should remove the oldest snapshot\", table.snapshot(firstSnapshot.snapshotId()));\n+    Assert.assertNull(\"Expire should remove the second oldest snapshot\", table.snapshot(secondSnapshot.snapshotId()));\n+\n+    Assert.assertEquals(\"Should remove expired manifest lists and deleted data file\",\n+        Sets.newHashSet(\n+            firstSnapshot.manifestListLocation(), // snapshot expired\n+            firstSnapshot.allManifests().get(0).path(), // manifest was rewritten for delete\n+            secondSnapshot.manifestListLocation(), // snapshot expired\n+            secondSnapshot.allManifests().get(0).path(), // manifest contained only deletes, was dropped\n+            FILE_A.path()), // deleted\n+        deletedFiles);\n+  }\n+\n+  @Test\n+  public void testExpireOlderThanWithDeleteInMergedManifests() {\n+    // merge every commit\n+    table.updateProperties()\n+        .set(TableProperties.MANIFEST_MIN_MERGE_COUNT, \"0\")\n+        .commit();\n+\n+    table.newAppend()\n+        .appendFile(FILE_A)\n+        .appendFile(FILE_B)\n+        .commit();\n+\n+    Snapshot firstSnapshot = table.currentSnapshot();\n+    Assert.assertEquals(\"Should create one manifest\",\n+        1, firstSnapshot.allManifests().size());\n+\n+    waitUntilAfter(table.currentSnapshot().timestampMillis());\n+\n+    table.newDelete()\n+        .deleteFile(FILE_A) // FILE_B is still in the dataset\n+        .commit();\n+\n+    Snapshot secondSnapshot = table.currentSnapshot();\n+    Assert.assertEquals(\"Should create replace manifest with a rewritten manifest\",", "originalCommit": "baaf05c2b44e2af2676d70dc484c4f262f2656db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "efbb29fc51e00f7ad16c947065baf9628a5a7244", "url": "https://github.com/apache/iceberg/commit/efbb29fc51e00f7ad16c947065baf9628a5a7244", "message": "Fix assert context and add tests for ExpireSnapshotsAction.", "committedDate": "2020-08-20T22:14:09Z", "type": "commit"}, {"oid": "e29cbd945edf353d63443e98822de0d483d7f8d8", "url": "https://github.com/apache/iceberg/commit/e29cbd945edf353d63443e98822de0d483d7f8d8", "message": "Fix checkstyle problems.", "committedDate": "2020-08-20T22:17:22Z", "type": "commit"}]}