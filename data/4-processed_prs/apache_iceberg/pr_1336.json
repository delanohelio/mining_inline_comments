{"pr_number": 1336, "pr_title": "Fix schema name conflicts", "pr_createdAt": "2020-08-13T16:49:53Z", "pr_url": "https://github.com/apache/iceberg/pull/1336", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMjc5Nw==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r470402797", "bodyText": "unfinished comment?", "author": "RussellSpitzer", "createdAt": "2020-08-14T04:25:14Z", "path": "api/src/main/java/org/apache/iceberg/types/IndexByName.java", "diffHunk": "@@ -128,9 +157,15 @@ private void addField(String name, int fieldId) {\n     }\n \n     Integer existingFieldId = nameToId.put(fullName, fieldId);\n-    if (existingFieldId != null && !\"element\".equals(name) && !\"value\".equals(name)) {\n-      throw new ValidationException(\n-          \"Invalid schema: multiple fields for name %s: %s and %s\", fullName, existingFieldId, fieldId);\n+    ValidationException.check(existingFieldId == null,\n+        \"Invalid schema: multiple fields for name %s: %s and %s\", fullName, existingFieldId, fieldId);\n+\n+    // if the short name is not", "originalCommit": "fb01c5557736616a275e099688040fed4c84bcc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMzkxNQ==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r470403915", "bodyText": "If the short name is not empty and we haven't already added an identical short name?", "author": "RussellSpitzer", "createdAt": "2020-08-14T04:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMjc5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkzODI4Mw==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r474938283", "bodyText": "If this is a nested field. For top-level fields, the short name is the same as the canonical name.", "author": "rdblue", "createdAt": "2020-08-21T20:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMjc5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNDg5OQ==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r470404899", "bodyText": "I think it would be helpful to have a little comment here explaining the mapping of both Long and Short Names in the returned map but mostly because I don't understand the short names yet. They may be more obvious to a more experienced reader of this code.", "author": "RussellSpitzer", "createdAt": "2020-08-14T04:34:21Z", "path": "api/src/main/java/org/apache/iceberg/types/IndexByName.java", "diffHunk": "@@ -25,39 +25,64 @@\n import org.apache.iceberg.Schema;\n import org.apache.iceberg.exceptions.ValidationException;\n import org.apache.iceberg.relocated.com.google.common.base.Joiner;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableMap;\n import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n import org.apache.iceberg.relocated.com.google.common.collect.Maps;\n \n public class IndexByName extends TypeUtil.SchemaVisitor<Map<String, Integer>> {\n   private static final Joiner DOT = Joiner.on(\".\");\n \n   private final Deque<String> fieldNames = Lists.newLinkedList();\n+  private final Deque<String> shortFieldNames = Lists.newLinkedList();\n   private final Map<String, Integer> nameToId = Maps.newHashMap();\n+  private final Map<String, Integer> shortNameToId = Maps.newHashMap();\n+\n+  public Map<String, Integer> byName() {", "originalCommit": "fb01c5557736616a275e099688040fed4c84bcc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMjY3MQ==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r479702671", "bodyText": "I think if the doc commented read something like\n\"Short names for maps.... For example.... will produce short name 'l.x' in addition to the canonical long name 'l.element.x'\"\nThat small addition in the doc comment would clarify things pretty heavily for me, but I might be biased as I've read the explanation of short vs long names now. Overall I am in favor of the short names though as they feel much more natural over l.element.x.", "author": "kbendick", "createdAt": "2020-08-30T00:05:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNDg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUyMTMyMw==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r482521323", "bodyText": "I added canonical here.", "author": "rdblue", "createdAt": "2020-09-02T22:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNDg5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNTAxNg==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r470405016", "bodyText": "I think here it may also be good to note this isn't a bijection anymore and short names will not be returned by this function, only long names.", "author": "RussellSpitzer", "createdAt": "2020-08-14T04:34:53Z", "path": "api/src/main/java/org/apache/iceberg/types/IndexByName.java", "diffHunk": "@@ -25,39 +25,64 @@\n import org.apache.iceberg.Schema;\n import org.apache.iceberg.exceptions.ValidationException;\n import org.apache.iceberg.relocated.com.google.common.base.Joiner;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableMap;\n import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n import org.apache.iceberg.relocated.com.google.common.collect.Maps;\n \n public class IndexByName extends TypeUtil.SchemaVisitor<Map<String, Integer>> {\n   private static final Joiner DOT = Joiner.on(\".\");\n \n   private final Deque<String> fieldNames = Lists.newLinkedList();\n+  private final Deque<String> shortFieldNames = Lists.newLinkedList();\n   private final Map<String, Integer> nameToId = Maps.newHashMap();\n+  private final Map<String, Integer> shortNameToId = Maps.newHashMap();\n+\n+  public Map<String, Integer> byName() {\n+    ImmutableMap.Builder<String, Integer> builder = ImmutableMap.builder();\n+    builder.putAll(nameToId);\n+    // add all short names that do not conflict with canonical names\n+    shortNameToId.entrySet().stream()\n+        .filter(entry -> !nameToId.containsKey(entry.getKey()))\n+        .forEach(builder::put);\n+    return builder.build();\n+  }\n+\n+  public Map<Integer, String> byId() {", "originalCommit": "fb01c5557736616a275e099688040fed4c84bcc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMzAwOQ==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r479703009", "bodyText": "It does somewhat seem implied that this isn't a bijection (and that long names are returned) via Canonical names, not short names are returned, for example 'list.element.field' instead of 'list.field'.\nPerhaps it might be specifically useful to call this out in the @return via something like @return A  map from field ID to the long / canonical field name.?", "author": "kbendick", "createdAt": "2020-08-30T00:10:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwNTAxNg=="}], "type": "inlineReview"}, {"oid": "bec6afe9f2234781c6d5ec8512e901aa4162e9d0", "url": "https://github.com/apache/iceberg/commit/bec6afe9f2234781c6d5ec8512e901aa4162e9d0", "message": "Fix schema name conflicts.", "committedDate": "2020-08-21T20:11:12Z", "type": "commit"}, {"oid": "feaad204a9d4d451582c3634ce0d819b730dc463", "url": "https://github.com/apache/iceberg/commit/feaad204a9d4d451582c3634ce0d819b730dc463", "message": "Add more docs and comments for review.", "committedDate": "2020-08-21T20:25:41Z", "type": "commit"}, {"oid": "feaad204a9d4d451582c3634ce0d819b730dc463", "url": "https://github.com/apache/iceberg/commit/feaad204a9d4d451582c3634ce0d819b730dc463", "message": "Add more docs and comments for review.", "committedDate": "2020-08-21T20:25:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5NDQ3Nw==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r482294477", "bodyText": "a list, 'l', with of structs... or just a list, 'l', of structs ...?", "author": "fbocse", "createdAt": "2020-09-02T18:41:36Z", "path": "api/src/main/java/org/apache/iceberg/types/IndexByName.java", "diffHunk": "@@ -25,39 +25,79 @@\n import org.apache.iceberg.Schema;\n import org.apache.iceberg.exceptions.ValidationException;\n import org.apache.iceberg.relocated.com.google.common.base.Joiner;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableMap;\n import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n import org.apache.iceberg.relocated.com.google.common.collect.Maps;\n \n public class IndexByName extends TypeUtil.SchemaVisitor<Map<String, Integer>> {\n   private static final Joiner DOT = Joiner.on(\".\");\n \n   private final Deque<String> fieldNames = Lists.newLinkedList();\n+  private final Deque<String> shortFieldNames = Lists.newLinkedList();\n   private final Map<String, Integer> nameToId = Maps.newHashMap();\n+  private final Map<String, Integer> shortNameToId = Maps.newHashMap();\n+\n+  /**\n+   * Returns a mapping from full field name to ID.\n+   * <p>\n+   * Short names for maps and lists are included for any name that does not conflict with a canonical name. For example,\n+   * a list, 'l', with of structs with field 'x' will produce short name 'l.x' in addition to 'l.element.x'.", "originalCommit": "feaad204a9d4d451582c3634ce0d819b730dc463", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU0ODA2MQ==", "url": "https://github.com/apache/iceberg/pull/1336#discussion_r482548061", "bodyText": "Fixed.", "author": "rdblue", "createdAt": "2020-09-02T22:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5NDQ3Nw=="}], "type": "inlineReview"}, {"oid": "304358a630ddc9e9336e0e350e11ad6e8c19190c", "url": "https://github.com/apache/iceberg/commit/304358a630ddc9e9336e0e350e11ad6e8c19190c", "message": "Fixup Javadoc.", "committedDate": "2020-09-02T22:06:51Z", "type": "commit"}]}