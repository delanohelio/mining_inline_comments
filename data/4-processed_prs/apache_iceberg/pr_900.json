{"pr_number": 900, "pr_title": "Spark: Add ORC JMH tests for IcebergSource", "pr_createdAt": "2020-04-07T09:48:13Z", "pr_url": "https://github.com/apache/iceberg/pull/900", "timeline": [{"oid": "ec78f966f9f445486398310c8baa8a03e3e00f9b", "url": "https://github.com/apache/iceberg/commit/ec78f966f9f445486398310c8baa8a03e3e00f9b", "message": "Spark: Add ORC JMH tests for IcebergSource", "committedDate": "2020-04-07T09:43:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxNTg2MA==", "url": "https://github.com/apache/iceberg/pull/900#discussion_r406515860", "bodyText": "Will switching to TimestampType.withoutZone() in IcebergSourceFlatDataBenchmark help?", "author": "aokolnychyi", "createdAt": "2020-04-09T22:39:24Z", "path": "spark/src/jmh/java/org/apache/iceberg/spark/source/orc/IcebergSourceFlatORCDataBenchmark.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.spark.source.orc;\n+\n+import com.google.common.collect.Maps;\n+import java.util.Map;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.iceberg.PartitionSpec;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.TableProperties;\n+import org.apache.iceberg.hadoop.HadoopTables;\n+import org.apache.iceberg.spark.source.IcebergSourceBenchmark;\n+import org.apache.iceberg.types.Types;\n+\n+import static org.apache.iceberg.types.Types.NestedField.optional;\n+import static org.apache.iceberg.types.Types.NestedField.required;\n+\n+\n+/**\n+ * Same as {@link org.apache.iceberg.spark.source.IcebergSourceFlatDataBenchmark} but we disable the Timestamp with\n+ * zone type for ORC performance tests as Spark native reader does not support ORC's TIMESTAMP_INSTANT type\n+ */\n+public abstract class IcebergSourceFlatORCDataBenchmark extends IcebergSourceBenchmark {\n+\n+  @Override\n+  protected Configuration initHadoopConf() {\n+    return new Configuration();\n+  }\n+\n+  @Override\n+  protected final Table initTable() {\n+    Schema schema = new Schema(\n+        required(1, \"longCol\", Types.LongType.get()),\n+        required(2, \"intCol\", Types.IntegerType.get()),\n+        required(3, \"floatCol\", Types.FloatType.get()),\n+        optional(4, \"doubleCol\", Types.DoubleType.get()),\n+        optional(5, \"decimalCol\", Types.DecimalType.of(20, 5)),\n+        optional(6, \"dateCol\", Types.DateType.get()),\n+        // Disable timestamp column for ORC performance tests as Spark native reader does not support ORC's", "originalCommit": "ec78f966f9f445486398310c8baa8a03e3e00f9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU2MjU1NA==", "url": "https://github.com/apache/iceberg/pull/900#discussion_r406562554", "bodyText": "Not really.. The Iceberg <-> Spark integration does not support TimestampType.withoutZone()\nhttps://github.com/apache/incubator-iceberg/blob/45a44f4cf49300db9a89e205d172146591b0bad1/spark/src/main/java/org/apache/iceberg/spark/TypeToSparkType.java#L111", "author": "shardulm94", "createdAt": "2020-04-10T01:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxNTg2MA=="}], "type": "inlineReview"}]}