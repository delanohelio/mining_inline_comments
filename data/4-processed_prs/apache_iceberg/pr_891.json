{"pr_number": 891, "pr_title": "Parquet: Use new logical type annotations", "pr_createdAt": "2020-04-03T22:09:13Z", "pr_url": "https://github.com/apache/iceberg/pull/891", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY3NDQ0Mg==", "url": "https://github.com/apache/iceberg/pull/891#discussion_r412674442", "bodyText": "In Parquet, LogicalTypeAnnotation.java, there is LogicalTypeAnnotation.IntLogicalTypeAnnotation. Do we need it here too?", "author": "wangmiao1981", "createdAt": "2020-04-22T05:11:26Z", "path": "data/src/main/java/org/apache/iceberg/data/parquet/GenericParquetWriter.java", "diffHunk": "@@ -200,6 +210,70 @@ private GenericParquetWriter() {\n     }\n   }\n \n+  private static class LogicalTypeWriterVisitor implements LogicalTypeAnnotationVisitor<PrimitiveWriter<?>> {\n+    private final ColumnDescriptor desc;\n+\n+    private LogicalTypeWriterVisitor(ColumnDescriptor desc) {\n+      this.desc = desc;\n+    }\n+\n+    @Override\n+    public Optional<PrimitiveWriter<?>> visit(LogicalTypeAnnotation.StringLogicalTypeAnnotation stringType) {\n+      return Optional.of(ParquetValueWriters.strings(desc));\n+    }\n+\n+    @Override\n+    public Optional<PrimitiveWriter<?>> visit(LogicalTypeAnnotation.EnumLogicalTypeAnnotation enumType) {\n+      return Optional.of(ParquetValueWriters.strings(desc));\n+    }\n+\n+    @Override\n+    public Optional<PrimitiveWriter<?>> visit(LogicalTypeAnnotation.DecimalLogicalTypeAnnotation decimalType) {\n+      switch (desc.getPrimitiveType().getPrimitiveTypeName()) {\n+        case INT32:\n+          return Optional.of(ParquetValueWriters.decimalAsInteger(\n+              desc, decimalType.getPrecision(), decimalType.getScale()));\n+        case INT64:\n+          return Optional.of(ParquetValueWriters.decimalAsLong(\n+              desc, decimalType.getPrecision(), decimalType.getScale()));\n+        case BINARY:\n+        case FIXED_LEN_BYTE_ARRAY:\n+          return Optional.of(ParquetValueWriters.decimalAsFixed(\n+              desc, decimalType.getPrecision(), decimalType.getScale()));\n+      }\n+      return Optional.empty();\n+    }\n+\n+    @Override\n+    public Optional<PrimitiveWriter<?>> visit(LogicalTypeAnnotation.DateLogicalTypeAnnotation dateType) {\n+      return Optional.of(new DateWriter(desc));\n+    }\n+\n+    @Override\n+    public Optional<PrimitiveWriter<?>> visit(LogicalTypeAnnotation.TimeLogicalTypeAnnotation timeType) {\n+      return Optional.of(new TimeWriter(desc));\n+    }\n+\n+    @Override\n+    public Optional<PrimitiveWriter<?>> visit(LogicalTypeAnnotation.TimestampLogicalTypeAnnotation timestampType) {\n+      if (timestampType.isAdjustedToUTC()) {\n+        return Optional.of(new TimestamptzWriter(desc));\n+      } else {\n+        return Optional.of(new TimestampWriter(desc));\n+      }\n+    }\n+\n+    @Override\n+    public Optional<PrimitiveWriter<?>> visit(LogicalTypeAnnotation.JsonLogicalTypeAnnotation jsonLogicalType) {", "originalCommit": "d173d283bcf321715c34f0c5953c7ad86ecfc6cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3Nzk0MA==", "url": "https://github.com/apache/iceberg/pull/891#discussion_r413177940", "bodyText": "Methods that aren't implemented here use the superclass implementation, which returns Optional.empty. When that happens, we fall back to the old logic that uses just the primitive type.", "author": "rdblue", "createdAt": "2020-04-22T17:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY3NDQ0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0NDk5MQ==", "url": "https://github.com/apache/iceberg/pull/891#discussion_r415244991", "bodyText": "When writer.isPresent() == false, we falls back to the previous logic, right?", "author": "waterlx", "createdAt": "2020-04-26T07:48:07Z", "path": "data/src/main/java/org/apache/iceberg/data/parquet/GenericParquetWriter.java", "diffHunk": "@@ -117,6 +120,13 @@ private GenericParquetWriter() {\n     @Override\n     public ParquetValueWriter<?> primitive(PrimitiveType primitive) {\n       ColumnDescriptor desc = type.getColumnDescription(currentPath());\n+      LogicalTypeAnnotation logicalType = primitive.getLogicalTypeAnnotation();\n+      if (logicalType != null) {\n+        Optional<PrimitiveWriter<?>> writer = logicalType.accept(new LogicalTypeWriterVisitor(desc));\n+        if (writer.isPresent()) {\n+          return writer.get();\n+        }", "originalCommit": "d173d283bcf321715c34f0c5953c7ad86ecfc6cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQwNTk0Nw==", "url": "https://github.com/apache/iceberg/pull/891#discussion_r415405947", "bodyText": "Correct.", "author": "rdblue", "createdAt": "2020-04-26T21:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0NDk5MQ=="}], "type": "inlineReview"}, {"oid": "286e69ac772015804d28c8459b8e48bda3a47729", "url": "https://github.com/apache/iceberg/commit/286e69ac772015804d28c8459b8e48bda3a47729", "message": "Remove work-arounds for Parquet 1.10.x.", "committedDate": "2020-05-05T17:21:19Z", "type": "forcePushed"}, {"oid": "8aa55b9d49b7d3f4bd7cb00f9152093607643735", "url": "https://github.com/apache/iceberg/commit/8aa55b9d49b7d3f4bd7cb00f9152093607643735", "message": "Parquet: Use new logical type annotations.", "committedDate": "2020-05-07T19:23:24Z", "type": "commit"}, {"oid": "7651406d7d85f5ff6b58d4e274dac953534a4c33", "url": "https://github.com/apache/iceberg/commit/7651406d7d85f5ff6b58d4e274dac953534a4c33", "message": "Remove work-arounds for Parquet 1.10.x.", "committedDate": "2020-05-07T19:23:24Z", "type": "commit"}, {"oid": "7b8b638a576a1ea6c4f4256b7dd4af1fe51a9c39", "url": "https://github.com/apache/iceberg/commit/7b8b638a576a1ea6c4f4256b7dd4af1fe51a9c39", "message": "Remove originalType switch when using logical type visitor.", "committedDate": "2020-05-07T19:28:17Z", "type": "commit"}, {"oid": "7b8b638a576a1ea6c4f4256b7dd4af1fe51a9c39", "url": "https://github.com/apache/iceberg/commit/7b8b638a576a1ea6c4f4256b7dd4af1fe51a9c39", "message": "Remove originalType switch when using logical type visitor.", "committedDate": "2020-05-07T19:28:17Z", "type": "forcePushed"}]}