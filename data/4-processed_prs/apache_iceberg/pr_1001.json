{"pr_number": 1001, "pr_title": "Refactor Parquet visitor", "pr_createdAt": "2020-05-05T00:04:25Z", "pr_url": "https://github.com/apache/iceberg/pull/1001", "timeline": [{"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f", "url": "https://github.com/apache/iceberg/commit/e81fb595154e09e72a6b43348e3a11592b087c9f", "message": "Refactor Parquet visitor.", "committedDate": "2020-05-05T00:01:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIyNTkyMA==", "url": "https://github.com/apache/iceberg/pull/1001#discussion_r420225920", "bodyText": "This was moved into its own method. The only changes are to use the new before and after methods.", "author": "rdblue", "createdAt": "2020-05-05T16:04:38Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java", "diffHunk": "@@ -123,19 +60,115 @@\n     }\n   }\n \n-  private static <T> T visitField(Type field, ParquetTypeVisitor<T> visitor) {\n-    visitor.fieldNames.push(field.getName());\n+  private static <T> T visitList(GroupType list, ParquetTypeVisitor<T> visitor) {", "originalCommit": "e81fb595154e09e72a6b43348e3a11592b087c9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIyNjE2MQ==", "url": "https://github.com/apache/iceberg/pull/1001#discussion_r420226161", "bodyText": "This was moved to its own method. The only changes are to use the new before and after methods.", "author": "rdblue", "createdAt": "2020-05-05T16:04:57Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java", "diffHunk": "@@ -123,19 +60,115 @@\n     }\n   }\n \n-  private static <T> T visitField(Type field, ParquetTypeVisitor<T> visitor) {\n-    visitor.fieldNames.push(field.getName());\n+  private static <T> T visitList(GroupType list, ParquetTypeVisitor<T> visitor) {\n+    Preconditions.checkArgument(!list.isRepetition(Type.Repetition.REPEATED),\n+        \"Invalid list: top-level group is repeated: %s\", list);\n+    Preconditions.checkArgument(list.getFieldCount() == 1,\n+        \"Invalid list: does not contain single repeated field: %s\", list);\n+\n+    GroupType repeatedElement = list.getFields().get(0).asGroupType();\n+    Preconditions.checkArgument(repeatedElement.isRepetition(Type.Repetition.REPEATED),\n+        \"Invalid list: inner group is not repeated\");\n+    Preconditions.checkArgument(repeatedElement.getFieldCount() <= 1,\n+        \"Invalid list: repeated group is not a single field: %s\", list);\n+\n+    visitor.beforeRepeatedElement(repeatedElement);\n     try {\n-      return visit(field, visitor);\n+      T elementResult = null;\n+      if (repeatedElement.getFieldCount() > 0) {\n+        Type elementField = repeatedElement.getType(0);\n+        visitor.beforeElementField(elementField);\n+        try {\n+          elementResult = visit(elementField, visitor);\n+        } finally {\n+          visitor.afterElementField(elementField);\n+        }\n+      }\n+\n+      return visitor.list(list, elementResult);\n+\n     } finally {\n-      visitor.fieldNames.pop();\n+      visitor.afterRepeatedElement(repeatedElement);\n+    }\n+  }\n+\n+  private static <T> T visitMap(GroupType map, ParquetTypeVisitor<T> visitor) {", "originalCommit": "e81fb595154e09e72a6b43348e3a11592b087c9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMTQ0NQ==", "url": "https://github.com/apache/iceberg/pull/1001#discussion_r424601445", "bodyText": "Nice!", "author": "aokolnychyi", "createdAt": "2020-05-13T17:15:32Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/MessageTypeToType.java", "diffHunk": "@@ -187,11 +187,7 @@ public Type primitive(PrimitiveType primitive) {\n   }\n \n   private void addAlias(String name, int fieldId) {\n-    String fullName = name;\n-    if (!fieldNames.isEmpty()) {\n-      fullName = DOT.join(DOT.join(fieldNames.descendingIterator()), name);\n-    }\n-    aliasToId.put(fullName, fieldId);\n+    aliasToId.put(DOT.join(path(name)), fieldId);", "originalCommit": "e81fb595154e09e72a6b43348e3a11592b087c9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}