{"pr_number": 1205, "pr_title": "Update the site for the 0.9.0 release", "pr_createdAt": "2020-07-15T00:31:11Z", "pr_url": "https://github.com/apache/iceberg/pull/1205", "timeline": [{"oid": "369c32dc4137d16437c0b71326a0fbafe306ccc4", "url": "https://github.com/apache/iceberg/commit/369c32dc4137d16437c0b71326a0fbafe306ccc4", "message": "Update the site for the 0.9.0 release.", "committedDate": "2020-07-15T00:25:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMTM0OQ==", "url": "https://github.com/apache/iceberg/pull/1205#discussion_r454721349", "bodyText": "@dongjoon-hyun, this is the warning I've added to make people aware of the issues with the DataFrameReader. Please take a look if you have time. There is also one below for the v1 DataFrameWriter API.", "author": "rdblue", "createdAt": "2020-07-15T00:32:45Z", "path": "site/docs/spark.md", "diffHunk": "@@ -286,6 +286,11 @@ val df = spark.read\n     .table(\"prod.db.table\")\n ```\n \n+!!! Warning\n+    When reading with DataFrames in Spark 3, use `table` to load a table by name from a catalog.\n+    Using `format(\"iceberg\")` loads an isolated table reference that is not refreshed when other queries update the table.", "originalCommit": "369c32dc4137d16437c0b71326a0fbafe306ccc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNTA2OA==", "url": "https://github.com/apache/iceberg/pull/1205#discussion_r454735068", "bodyText": "Thank you, @rdblue . It looks good to me.", "author": "dongjoon-hyun", "createdAt": "2020-07-15T01:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMTM0OQ=="}], "type": "inlineReview"}, {"oid": "2b40723c134f7701b73916e4c3162b015c0f3f40", "url": "https://github.com/apache/iceberg/commit/2b40723c134f7701b73916e4c3162b015c0f3f40", "message": "Fix broken link.", "committedDate": "2020-07-15T00:51:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNTM0MA==", "url": "https://github.com/apache/iceberg/pull/1205#discussion_r454735340", "bodyText": "Ya. We should release Apache Spark 3.0.1 soon for the users.", "author": "dongjoon-hyun", "createdAt": "2020-07-15T01:24:18Z", "path": "site/docs/spark.md", "diffHunk": "@@ -353,6 +358,13 @@ To replace data in the table with the result of a query, use `INSERT OVERWRITE`.\n \n The partitions that will be replaced by `INSERT OVERWRITE` depends on Spark's partition overwrite mode and the partitioning of a table.\n \n+!!! Warning\n+    Spark 3.0.0 has a correctness bug that affects dynamic `INSERT OVERWRITE` with hidden partitioning, [SPARK-32168][spark-32168].\n+    For tables with [hidden partitions](../partitioning), wait for Spark 3.0.1.", "originalCommit": "2b40723c134f7701b73916e4c3162b015c0f3f40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNTQxOA==", "url": "https://github.com/apache/iceberg/pull/1205#discussion_r454735418", "bodyText": "Thanks, @rdblue !", "author": "dongjoon-hyun", "createdAt": "2020-07-15T01:24:36Z", "path": "site/docs/spark.md", "diffHunk": "@@ -432,6 +444,13 @@ Spark 3 introduced the new `DataFrameWriterV2` API for writing to tables using d\n     - `df.writeTo(t).append()` is equivalent to `INSERT INTO`\n     - `df.writeTo(t).overwritePartitions()` is equivalent to dynamic `INSERT OVERWRITE`\n \n+The v1 DataFrame `write` API is still supported, but is not recommended.\n+\n+!!! Warning\n+    When writing with the v1 DataFrame API in Spark 3, use `saveAsTable` or `insertInto` to load tables with a catalog.\n+    Using `format(\"iceberg\")` loads an isolated table reference that will not automatically refresh tables used by queries.", "originalCommit": "2b40723c134f7701b73916e4c3162b015c0f3f40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}