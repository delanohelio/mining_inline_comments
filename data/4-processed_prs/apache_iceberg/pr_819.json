{"pr_number": 819, "pr_title": "Support configurable split size for metadata tables", "pr_createdAt": "2020-02-22T08:25:59Z", "pr_url": "https://github.com/apache/iceberg/pull/819", "timeline": [{"oid": "b6cbcd7f0d556af937aa698dc2011472ca863591", "url": "https://github.com/apache/iceberg/commit/b6cbcd7f0d556af937aa698dc2011472ca863591", "message": "Support configurable split size for metadata tables", "committedDate": "2020-03-17T07:46:48Z", "type": "forcePushed"}, {"oid": "af1afd0060748dde3b9fcc72e9ad5ac08612fa7e", "url": "https://github.com/apache/iceberg/commit/af1afd0060748dde3b9fcc72e9ad5ac08612fa7e", "message": "Support configurable split size for metadata tables", "committedDate": "2020-03-18T03:15:35Z", "type": "commit"}, {"oid": "af1afd0060748dde3b9fcc72e9ad5ac08612fa7e", "url": "https://github.com/apache/iceberg/commit/af1afd0060748dde3b9fcc72e9ad5ac08612fa7e", "message": "Support configurable split size for metadata tables", "committedDate": "2020-03-18T03:15:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxNjY4Ng==", "url": "https://github.com/apache/iceberg/pull/819#discussion_r394516686", "bodyText": "Nit: unnecessary empty line.", "author": "rdblue", "createdAt": "2020-03-18T17:23:40Z", "path": "core/src/test/java/org/apache/iceberg/TestSplitPlanning.java", "diffHunk": "@@ -147,18 +178,23 @@ private void appendFiles(Iterable<DataFile> files) {\n     appendFiles.commit();\n   }\n \n+", "originalCommit": "af1afd0060748dde3b9fcc72e9ad5ac08612fa7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxOTUyMA==", "url": "https://github.com/apache/iceberg/pull/819#discussion_r394519520", "bodyText": "I don't think this is necessary. When options are used to set the split size in the Spark reader, it uses TableProperties.SPLIT_SIZE to pass it here. That should work for metadata tables as well, right?\nThe situation that we need to handle in this PR is setting the default, like you had before. We just want to use a metadata split size so you can set it and not have the same split size used (by default) for both metadata and data scans.", "author": "rdblue", "createdAt": "2020-03-18T17:27:48Z", "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -225,6 +225,8 @@ public Expression filter() {\n     long splitSize;\n     if (options.containsKey(TableProperties.SPLIT_SIZE)) {\n       splitSize = Long.parseLong(options.get(TableProperties.SPLIT_SIZE));\n+    } else if (options.containsKey(TableProperties.METADATA_SPLIT_SIZE)) {\n+      splitSize = Long.parseLong(options.get(TableProperties.METADATA_SPLIT_SIZE));", "originalCommit": "af1afd0060748dde3b9fcc72e9ad5ac08612fa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2OTczNg==", "url": "https://github.com/apache/iceberg/pull/819#discussion_r395969736", "bodyText": "@rdblue Thanks for the comments and updated the PR accordingly.", "author": "jun-he", "createdAt": "2020-03-21T07:18:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxOTUyMA=="}], "type": "inlineReview"}, {"oid": "8dc705aa11be87a6739d3ce157f7f76662701931", "url": "https://github.com/apache/iceberg/commit/8dc705aa11be87a6739d3ce157f7f76662701931", "message": "address the review comments", "committedDate": "2020-03-21T07:14:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE2MzQzOQ==", "url": "https://github.com/apache/iceberg/pull/819#discussion_r396163439", "bodyText": "Can we move this up by the other split size property? Also, the other name is read.split.target-size so let's use the same prefix. How about changing this to read.split.metadata-target-size?", "author": "rdblue", "createdAt": "2020-03-23T00:01:33Z", "path": "core/src/main/java/org/apache/iceberg/TableProperties.java", "diffHunk": "@@ -106,6 +106,8 @@ private TableProperties() {}\n   public static final String DEFAULT_WRITE_METRICS_MODE = \"write.metadata.metrics.default\";\n   public static final String DEFAULT_WRITE_METRICS_MODE_DEFAULT = \"truncate(16)\";\n \n+  public static final String METADATA_SPLIT_SIZE = \"read.metadata.split-size\";", "originalCommit": "8dc705aa11be87a6739d3ce157f7f76662701931", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bb09d712e6ee40350a7ab31e80b5cc078b1adf64", "url": "https://github.com/apache/iceberg/commit/bb09d712e6ee40350a7ab31e80b5cc078b1adf64", "message": "update metadata target size property name", "committedDate": "2020-03-23T03:23:08Z", "type": "commit"}, {"oid": "3faa9d5b592b29acc729ddef0e770cf01a933277", "url": "https://github.com/apache/iceberg/commit/3faa9d5b592b29acc729ddef0e770cf01a933277", "message": "address the review comments", "committedDate": "2020-03-28T03:41:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyMDExNQ==", "url": "https://github.com/apache/iceberg/pull/819#discussion_r400320115", "bodyText": "nit: I think it would be a bit more readable if we split this logic into multiple lines in all such places. However, it does not matter that much.\nTable table = tables.create(...);\n\ntable.refresh();\n\nList<ManifestFile> manifests = table.currentSnapshot().manifests();\nint expectedSplitNum = (manifests.get(0).length() + splitSize -1) / splitSize;", "author": "aokolnychyi", "createdAt": "2020-03-30T16:17:37Z", "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestDataSourceOptions.java", "diffHunk": "@@ -284,4 +284,103 @@ public void testIncrementalScanOptions() throws IOException {\n         .collectAsList();\n     Assert.assertEquals(\"Records should match\", expectedRecords.subList(2, 3), result1);\n   }\n+\n+  @Test\n+  public void testMetadataSplitSizeOptionOverrideTableProperties() throws IOException {\n+    String tableLocation = temp.newFolder(\"iceberg-table\").toString();\n+    int splitSize = 2 * 1024;\n+\n+    HadoopTables tables = new HadoopTables(CONF);\n+    PartitionSpec spec = PartitionSpec.unpartitioned();\n+    Map<String, String> options = Maps.newHashMap();\n+    options.put(TableProperties.SPLIT_SIZE, String.valueOf(128L * 1024 * 1024)); // 128Mb\n+    options.put(TableProperties.METADATA_SPLIT_SIZE, String.valueOf(32L * 1024 * 1024)); // 32MB\n+    tables.create(SCHEMA, spec, options, tableLocation);\n+\n+    List<SimpleRecord> expectedRecords = Lists.newArrayList(\n+        new SimpleRecord(1, \"a\"),\n+        new SimpleRecord(2, \"b\")\n+    );\n+    Dataset<Row> originalDf = spark.createDataFrame(expectedRecords, SimpleRecord.class);\n+    originalDf.select(\"id\", \"data\").write()\n+        .format(\"iceberg\")\n+        .mode(\"append\")\n+        .save(tableLocation);\n+\n+    int expectedSplits = ((int) tables.load(tableLocation + \"#entries\")", "originalCommit": "3faa9d5b592b29acc729ddef0e770cf01a933277", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}