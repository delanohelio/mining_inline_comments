{"pr_number": 1786, "pr_title": "AWS: centralize logic for setting encryption info", "pr_createdAt": "2020-11-19T00:13:37Z", "pr_url": "https://github.com/apache/iceberg/pull/1786", "timeline": [{"oid": "ad7fd4134aea8e2ba877b4c2e59ec21a8e67dda9", "url": "https://github.com/apache/iceberg/commit/ad7fd4134aea8e2ba877b4c2e59ec21a8e67dda9", "message": "AWS: centralize logic for setting encryption info", "committedDate": "2020-11-23T19:34:40Z", "type": "forcePushed"}, {"oid": "c436a33317ffff26d5aed015d9f714115ead2903", "url": "https://github.com/apache/iceberg/commit/c436a33317ffff26d5aed015d9f714115ead2903", "message": "AWS: centralize logic for setting encryption info", "committedDate": "2020-11-23T19:41:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTAzNDc1NQ==", "url": "https://github.com/apache/iceberg/pull/1786#discussion_r529034755", "bodyText": "The null checks as controls feel a little awkward.  Would it make sense to switch them out for noop functions like:\n  private static final Function<ServerSideEncryption, S3Request.Builder> noSse = s -> null;\n  private static final Function<String, S3Request.Builder> noKms = (s) -> null;\n\nI feel like that would be easier to reason about.", "author": "danielcweeks", "createdAt": "2020-11-23T22:23:44Z", "path": "aws/src/main/java/org/apache/iceberg/aws/s3/S3RequestUtil.java", "diffHunk": "@@ -33,87 +36,66 @@ private S3RequestUtil() {\n   }\n \n   static void configureEncryption(AwsProperties awsProperties, PutObjectRequest.Builder requestBuilder) {\n-    switch (awsProperties.s3FileIoSseType().toLowerCase(Locale.ENGLISH)) {\n-      case AwsProperties.S3FILEIO_SSE_TYPE_NONE:\n-        break;\n+    configureEncryption(awsProperties, requestBuilder::serverSideEncryption, requestBuilder::ssekmsKeyId,\n+        requestBuilder::sseCustomerAlgorithm, requestBuilder::sseCustomerKey, requestBuilder::sseCustomerKeyMD5);\n+  }\n \n-      case AwsProperties.S3FILEIO_SSE_TYPE_KMS:\n-        requestBuilder.serverSideEncryption(ServerSideEncryption.AWS_KMS);\n-        requestBuilder.ssekmsKeyId(awsProperties.s3FileIoSseKey());\n-        break;\n+  static void configureEncryption(AwsProperties awsProperties, CreateMultipartUploadRequest.Builder requestBuilder) {\n+    configureEncryption(awsProperties, requestBuilder::serverSideEncryption, requestBuilder::ssekmsKeyId,\n+        requestBuilder::sseCustomerAlgorithm, requestBuilder::sseCustomerKey, requestBuilder::sseCustomerKeyMD5);\n+  }\n \n-      case AwsProperties.S3FILEIO_SSE_TYPE_S3:\n-        requestBuilder.serverSideEncryption(ServerSideEncryption.AES256);\n-        break;\n+  static void configureEncryption(AwsProperties awsProperties, UploadPartRequest.Builder requestBuilder) {\n+    configureEncryption(awsProperties, null, null,\n+        requestBuilder::sseCustomerAlgorithm, requestBuilder::sseCustomerKey, requestBuilder::sseCustomerKeyMD5);\n+  }\n \n-      case AwsProperties.S3FILEIO_SSE_TYPE_CUSTOM:\n-        requestBuilder.sseCustomerAlgorithm(ServerSideEncryption.AES256.name());\n-        requestBuilder.sseCustomerKey(awsProperties.s3FileIoSseKey());\n-        requestBuilder.sseCustomerKeyMD5(awsProperties.s3FileIoSseMd5());\n-        break;\n+  static void configureEncryption(AwsProperties awsProperties, GetObjectRequest.Builder requestBuilder) {\n+    configureEncryption(awsProperties, null, null,\n+        requestBuilder::sseCustomerAlgorithm, requestBuilder::sseCustomerKey, requestBuilder::sseCustomerKeyMD5);\n+  }\n \n-      default:\n-        throw new IllegalArgumentException(\n-            \"Cannot support given S3 encryption type: \" + awsProperties.s3FileIoSseType());\n-    }\n+  static void configureEncryption(AwsProperties awsProperties, HeadObjectRequest.Builder requestBuilder) {\n+    configureEncryption(awsProperties, null, null,\n+        requestBuilder::sseCustomerAlgorithm, requestBuilder::sseCustomerKey, requestBuilder::sseCustomerKeyMD5);\n   }\n \n-  static void configureEncryption(AwsProperties awsProperties, CreateMultipartUploadRequest.Builder requestBuilder) {\n+  @SuppressWarnings(\"ReturnValueIgnored\")\n+  static void configureEncryption(\n+      AwsProperties awsProperties,\n+      Function<ServerSideEncryption, S3Request.Builder> encryptionSetter,\n+      Function<String, S3Request.Builder> kmsKeySetter,\n+      Function<String, S3Request.Builder> customAlgorithmSetter,\n+      Function<String, S3Request.Builder> customKeySetter,\n+      Function<String, S3Request.Builder> customMd5Setter) {\n+\n     switch (awsProperties.s3FileIoSseType().toLowerCase(Locale.ENGLISH)) {\n       case AwsProperties.S3FILEIO_SSE_TYPE_NONE:\n         break;\n \n       case AwsProperties.S3FILEIO_SSE_TYPE_KMS:\n-        requestBuilder.serverSideEncryption(ServerSideEncryption.AWS_KMS);\n-        requestBuilder.ssekmsKeyId(awsProperties.s3FileIoSseKey());\n-        break;\n+        if (encryptionSetter != null) {", "originalCommit": "c436a33317ffff26d5aed015d9f714115ead2903", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc679a631adeb333a8b604157feeba7139cb8d0b", "url": "https://github.com/apache/iceberg/commit/bc679a631adeb333a8b604157feeba7139cb8d0b", "message": "AWS: centralize logic for setting encryption info", "committedDate": "2020-11-23T23:26:28Z", "type": "forcePushed"}, {"oid": "4c673cc19fa829ff9cb52a986b699fe057fa7f35", "url": "https://github.com/apache/iceberg/commit/4c673cc19fa829ff9cb52a986b699fe057fa7f35", "message": "AWS: centralize logic for setting encryption info", "committedDate": "2020-11-23T23:34:02Z", "type": "commit"}, {"oid": "4c673cc19fa829ff9cb52a986b699fe057fa7f35", "url": "https://github.com/apache/iceberg/commit/4c673cc19fa829ff9cb52a986b699fe057fa7f35", "message": "AWS: centralize logic for setting encryption info", "committedDate": "2020-11-23T23:34:02Z", "type": "forcePushed"}]}