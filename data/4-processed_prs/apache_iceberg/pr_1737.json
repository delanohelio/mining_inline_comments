{"pr_number": 1737, "pr_title": "Docs: add documentation related to dynamic class loading", "pr_createdAt": "2020-11-06T23:04:28Z", "pr_url": "https://github.com/apache/iceberg/pull/1737", "timeline": [{"oid": "308acfab8b29678ad6e688e85116ca67e1bfb1e4", "url": "https://github.com/apache/iceberg/commit/308acfab8b29678ad6e688e85116ca67e1bfb1e4", "message": "add documentation related to dynamic class loading", "committedDate": "2020-11-06T22:55:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MjgyNQ==", "url": "https://github.com/apache/iceberg/pull/1737#discussion_r519052825", "bodyText": "This isn't really needed for a custom catalog, and it is an option for the built-in catalogs. I think maybe we should move this to a doc on customizing tables, instead of here. Or, maybe just make it more clear that this isn't required. I think it is somewhat common for people to want to customize catalogs, and I don't want to make it seem like it is harder than it already is.", "author": "rdblue", "createdAt": "2020-11-06T23:23:50Z", "path": "site/docs/custom-catalog.md", "diffHunk": "@@ -127,8 +137,111 @@ public class CustomCatalog extends BaseMetastoreCatalog {\n     // Example service to rename table\n     CustomService.renameTable(from.namepsace().level(0), from.name(), to.name());\n   }\n+\n+  // implement this method to read catalog name and properties during initialization\n+  public void initialize(String name, Map<String, String> properties) {\n+  }\n }\n ```\n+\n+Catalog implementations can be dynamically loaded in most compute engines.\n+For Spark and Flink, you can specify the `catalog-impl` catalog property to load it.\n+Read the [Configuration](../configuration/#catalog-properties) section for more details.\n+For MapReduce, implement `org.apache.iceberg.mr.CatalogLoader` and set Hadoop property `iceberg.mr.catalog.loader.class` to load it.\n+If your catalog must read Hadoop configuration to access certain environment properties, make your catalog implement `org.apache.hadoop.conf.Configurable`.\n+\n+### Custom file IO implementation\n+\n+Extend `FileIO` and provide implementation to read and write data files\n+\n+Example:\n+```java\n+public class CustomFileIO implements FileIO {", "originalCommit": "308acfab8b29678ad6e688e85116ca67e1bfb1e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MzUwOQ==", "url": "https://github.com/apache/iceberg/pull/1737#discussion_r519053509", "bodyText": "Actually, I think this is fine. We may want to clarify some of the wording, but I think this page is turning into general docs for customizing tables.", "author": "rdblue", "createdAt": "2020-11-06T23:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MjgyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1NjU2Nw==", "url": "https://github.com/apache/iceberg/pull/1737#discussion_r519056567", "bodyText": "Yes, maybe a more generic title like Customization would make more sense now.", "author": "jackye1995", "createdAt": "2020-11-06T23:38:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MjgyNQ=="}], "type": "inlineReview"}]}