{"pr_number": 972, "pr_title": "Update conversant adapter for new prebid-server interface", "pr_createdAt": "2020-10-21T22:30:17Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/972", "timeline": [{"oid": "c2944662ecf7bf5b67b93394541d7ddf804c5f76", "url": "https://github.com/prebid/prebid-server-java/commit/c2944662ecf7bf5b67b93394541d7ddf804c5f76", "message": "Update conversant adapter for new prebid-server interface", "committedDate": "2020-10-21T22:29:06Z", "type": "commit"}, {"oid": "30980c2af609ddc8ac8fe95c7db1a81a7b4dacfe", "url": "https://github.com/prebid/prebid-server-java/commit/30980c2af609ddc8ac8fe95c7db1a81a7b4dacfe", "message": "Merge branch 'master' into conversant_bidder/update", "committedDate": "2020-10-28T15:10:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5ODcxNQ==", "url": "https://github.com/prebid/prebid-server-java/pull/972#discussion_r533398715", "bodyText": "Pls place the builder creation inside if condition where we can do return.", "author": "rpanchyk", "createdAt": "2020-12-01T13:16:41Z", "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -175,7 +142,9 @@ private static Imp modifyImp(Imp imp, ExtImpConversant impExt) {\n         final Imp.ImpBuilder impBuilder = imp.toBuilder();", "originalCommit": "30980c2af609ddc8ac8fe95c7db1a81a7b4dacfe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQzMDM1Ng==", "url": "https://github.com/prebid/prebid-server-java/pull/972#discussion_r533430356", "bodyText": "Actually, there is no sense of  'if creation', because of this lines .displaymanager(DISPLAY_MANAGER) .displaymanagerver(DISPLAY_MANAGER_VER)(Builder will always be created)", "author": "snahornyi", "createdAt": "2020-12-01T14:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5ODcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMDU4Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/972#discussion_r533400582", "bodyText": "i'd suggest to avoid this method just because passed builder here.", "author": "rpanchyk", "createdAt": "2020-12-01T13:19:49Z", "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -90,77 +83,51 @@ public ConversantBidder(String endpointUrl, JacksonMapper mapper) {\n                         .headers(HttpUtil.headers())\n                         .payload(outgoingRequest)\n                         .build()),\n-                errors);\n+                Collections.emptyList());\n     }\n \n-    private BidRequest createBidRequest(BidRequest bidRequest, List<BidderError> errors) {\n+    private BidRequest createOutgoingRequest(BidRequest bidRequest) {\n+        final BidRequest.BidRequestBuilder requestBuilder = bidRequest.toBuilder();\n         final List<Imp> modifiedImps = new ArrayList<>();\n-        Integer extMobile = null;\n-        String extSiteId = null;\n \n-        for (Imp imp : bidRequest.getImp()) {\n+        for (int i = 0; i < bidRequest.getImp().size(); i++) {\n+            final Imp imp = bidRequest.getImp().get(i);\n+            final ExtImpConversant impExt;\n             try {\n-                validateImp(imp);\n-                final ExtImpConversant impExt = parseImpExt(imp);\n-                modifiedImps.add(modifyImp(imp, impExt));\n-                if (StringUtils.isNotEmpty(impExt.getSiteId())) {\n-                    extSiteId = impExt.getSiteId();\n-                }\n-                if (impExt.getMobile() != null) {\n-                    extMobile = impExt.getMobile();\n-                }\n+                impExt = parseImpExt(imp);\n             } catch (PreBidException e) {\n-                errors.add(BidderError.badInput(e.getMessage()));\n+                throw new PreBidException(String.format(e.getMessage(), i));\n             }\n-        }\n-        if (modifiedImps.isEmpty()) {\n-            throw new PreBidException(\"No valid impressions\");\n-        }\n-\n-        final Site site = bidRequest.getSite();\n-        final App app = bidRequest.getApp();\n-        validateSiteAppId(extSiteId, site, app);\n-\n-        final BidRequest.BidRequestBuilder requestBuilder = bidRequest.toBuilder()\n-                .imp(modifiedImps);\n-\n-        if (site != null) {\n-            if (StringUtils.isEmpty(site.getId()) || extMobile != null) {\n-                final String siteId = ObjectUtils.defaultIfNull(site.getId(), extSiteId);\n-                requestBuilder.site(site.toBuilder().id(siteId).mobile(extMobile).build());\n-            }\n-        } else if (app != null) {\n-            if (StringUtils.isEmpty(app.getId())) {\n-                requestBuilder.app(app.toBuilder().id(extSiteId).build());\n+            if (i == 0) {\n+                updateRequestWithSiteId(requestBuilder, bidRequest, impExt);\n             }\n+            modifiedImps.add(modifyImp(imp, impExt));\n         }\n-\n+        requestBuilder.imp(modifiedImps);\n         return requestBuilder.build();\n     }\n \n-    private void validateSiteAppId(String extSiteId, Site site, App app) {\n-        if (site != null && StringUtils.isEmpty(site.getId()) && StringUtils.isEmpty(extSiteId)) {\n-            throw new PreBidException(\"Missing site id\");\n-        }\n-\n-        if (app != null && StringUtils.isEmpty(app.getId()) && StringUtils.isEmpty(extSiteId)) {\n-            throw new PreBidException(\"Missing app id\");\n-        }\n-    }\n-\n-    private static void validateImp(Imp imp) {\n-        if (imp.getBanner() == null && imp.getVideo() == null) {\n-            throw new PreBidException(String.format(\"Invalid MediaType. Conversant supports only Banner and Video. \"\n-                    + \"Ignoring ImpID=%s\", imp.getId()));\n+    private void updateRequestWithSiteId(BidRequest.BidRequestBuilder requestBuilder,", "originalCommit": "30980c2af609ddc8ac8fe95c7db1a81a7b4dacfe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzI5MA==", "url": "https://github.com/prebid/prebid-server-java/pull/972#discussion_r533403290", "bodyText": "We can pass i as argument to parseImpExt(..) so this try-catch will be not needed.", "author": "rpanchyk", "createdAt": "2020-12-01T13:24:18Z", "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -90,77 +83,51 @@ public ConversantBidder(String endpointUrl, JacksonMapper mapper) {\n                         .headers(HttpUtil.headers())\n                         .payload(outgoingRequest)\n                         .build()),\n-                errors);\n+                Collections.emptyList());\n     }\n \n-    private BidRequest createBidRequest(BidRequest bidRequest, List<BidderError> errors) {\n+    private BidRequest createOutgoingRequest(BidRequest bidRequest) {\n+        final BidRequest.BidRequestBuilder requestBuilder = bidRequest.toBuilder();\n         final List<Imp> modifiedImps = new ArrayList<>();\n-        Integer extMobile = null;\n-        String extSiteId = null;\n \n-        for (Imp imp : bidRequest.getImp()) {\n+        for (int i = 0; i < bidRequest.getImp().size(); i++) {\n+            final Imp imp = bidRequest.getImp().get(i);\n+            final ExtImpConversant impExt;\n             try {\n-                validateImp(imp);\n-                final ExtImpConversant impExt = parseImpExt(imp);\n-                modifiedImps.add(modifyImp(imp, impExt));\n-                if (StringUtils.isNotEmpty(impExt.getSiteId())) {\n-                    extSiteId = impExt.getSiteId();\n-                }\n-                if (impExt.getMobile() != null) {\n-                    extMobile = impExt.getMobile();\n-                }\n+                impExt = parseImpExt(imp);", "originalCommit": "30980c2af609ddc8ac8fe95c7db1a81a7b4dacfe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzgxMQ==", "url": "https://github.com/prebid/prebid-server-java/pull/972#discussion_r533403811", "bodyText": "Minor. Pls extract imps as separate variable.", "author": "rpanchyk", "createdAt": "2020-12-01T13:25:04Z", "path": "src/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "diffHunk": "@@ -90,77 +83,51 @@ public ConversantBidder(String endpointUrl, JacksonMapper mapper) {\n                         .headers(HttpUtil.headers())\n                         .payload(outgoingRequest)\n                         .build()),\n-                errors);\n+                Collections.emptyList());\n     }\n \n-    private BidRequest createBidRequest(BidRequest bidRequest, List<BidderError> errors) {\n+    private BidRequest createOutgoingRequest(BidRequest bidRequest) {\n+        final BidRequest.BidRequestBuilder requestBuilder = bidRequest.toBuilder();\n         final List<Imp> modifiedImps = new ArrayList<>();\n-        Integer extMobile = null;\n-        String extSiteId = null;\n \n-        for (Imp imp : bidRequest.getImp()) {\n+        for (int i = 0; i < bidRequest.getImp().size(); i++) {", "originalCommit": "30980c2af609ddc8ac8fe95c7db1a81a7b4dacfe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f98ef26af13d53a969c55aef19e013471775c628", "url": "https://github.com/prebid/prebid-server-java/commit/f98ef26af13d53a969c55aef19e013471775c628", "message": "Fixes after review", "committedDate": "2020-12-01T14:04:48Z", "type": "commit"}, {"oid": "263231e3b3101b0a8611f2f93c4b5a38cc0267ba", "url": "https://github.com/prebid/prebid-server-java/commit/263231e3b3101b0a8611f2f93c4b5a38cc0267ba", "message": "Merge branch 'master' into conversant_bidder/update\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/bidder/conversant/ConversantBidder.java", "committedDate": "2020-12-01T14:06:24Z", "type": "commit"}, {"oid": "aaf5914399335c86b0247979a23d6576cad15bef", "url": "https://github.com/prebid/prebid-server-java/commit/aaf5914399335c86b0247979a23d6576cad15bef", "message": "Merge branch 'master' into conversant_bidder/update", "committedDate": "2020-12-02T12:54:02Z", "type": "commit"}]}