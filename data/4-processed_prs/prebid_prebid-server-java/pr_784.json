{"pr_number": 784, "pr_title": "First party data support for auction", "pr_createdAt": "2020-07-02T13:04:51Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/784", "timeline": [{"oid": "7d1bc1205430340bdc9250dbb458ac05a8662732", "url": "https://github.com/prebid/prebid-server-java/commit/7d1bc1205430340bdc9250dbb458ac05a8662732", "message": "Revert \"Revert First Party Data bidderconfig (#769)\"\n\nThis reverts commit 6462c3fd7e097cb152858932141514ccb15b09c9.", "committedDate": "2020-07-02T12:20:15Z", "type": "commit"}, {"oid": "b0ab4b05b7978695abc3fa1a89d93663b13b82fa", "url": "https://github.com/prebid/prebid-server-java/commit/b0ab4b05b7978695abc3fa1a89d93663b13b82fa", "message": "Adjust FPD processing according to updated requirements", "committedDate": "2020-07-02T12:20:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0OTEwNQ==", "url": "https://github.com/prebid/prebid-server-java/pull/784#discussion_r449549105", "bodyText": "I am not sure if it is possible that pfdUser from bidderConfig can contain not fpd fields, but simple merge will override non fpd fields, that is not expected behavior.  I propose to replace only fpd fields  one by one.", "author": "BraslavskiyAndrey", "createdAt": "2020-07-03T12:06:43Z", "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -419,43 +457,40 @@ private boolean isValidBidder(String bidder, BidderAliases aliases) {\n      * Returns original {@link User} if user.buyeruid already contains uid value for bidder.\n      * Otherwise, returns new {@link User} containing updated {@link ExtUser} and user.buyeruid.\n      * <p>\n-     * Also, removes user.keywords, gender, yob, geo and ext (except user.ext.eids and user.ext.digitrust)\n-     * in case bidder does not use first party data.\n+     * Also, removes user.ext.prebid (if present) and user.ext.data (in case bidder does not use first party data).\n      */\n-    private User prepareUser(User user, ExtUser extUser, String bidder, BidderAliases aliases,\n-                             Map<String, String> uidsBody, UidsCookie uidsCookie, boolean useFirstPartyData) {\n+    private User prepareUser(User user,\n+                             ExtUser extUser,\n+                             String bidder,\n+                             BidderAliases aliases,\n+                             Map<String, String> uidsBody,\n+                             UidsCookie uidsCookie,\n+                             boolean useFirstPartyData,\n+                             ExtBidderConfigFpd fpdConfig) {\n+\n         final String updatedBuyerUid = updateUserBuyerUid(user, bidder, aliases, uidsBody, uidsCookie);\n-        final boolean shouldUpdateUserExt = extUser != null && extUser.getPrebid() != null;\n-        final boolean shouldRemoveUserFields = !useFirstPartyData && checkUserFieldsHavingValue(user);\n+        final boolean shouldUpdateUserExt = extUser != null\n+                && (extUser.getPrebid() != null || (extUser.getData() != null && !useFirstPartyData));\n \n-        if (updatedBuyerUid != null || shouldRemoveUserFields || shouldUpdateUserExt) {\n+        User maskedUser = user;\n+        if (updatedBuyerUid != null || shouldUpdateUserExt) {\n             final User.UserBuilder userBuilder = user == null ? User.builder() : user.toBuilder();\n             if (updatedBuyerUid != null) {\n                 userBuilder.buyeruid(updatedBuyerUid);\n             }\n \n-            if (shouldRemoveUserFields) {\n-                final ExtUser updatedExtUser = extUser == null\n-                        ? null\n-                        : ExtUser.builder()\n-                        .eids(extUser.getEids())\n-                        .digitrust(extUser.getDigitrust())\n-                        .build();\n-\n-                userBuilder\n-                        .keywords(null)\n-                        .gender(null)\n-                        .yob(null)\n-                        .geo(null)\n-                        .ext(updatedExtUser);\n-            } else if (shouldUpdateUserExt) {\n-                userBuilder.ext(extUser.toBuilder().prebid(null).build());\n+            if (shouldUpdateUserExt) {\n+                userBuilder.ext(extUser.toBuilder()\n+                        .prebid(null)\n+                        .data(null)\n+                        .build());\n             }\n \n-            return userBuilder.build();\n+            maskedUser = userBuilder.build();\n         }\n \n-        return user;\n+        final User fpdUser = fpdConfig == null ? null : fpdConfig.getUser();\n+        return jsonMergeUtil.merge(fpdUser, maskedUser, User.class);", "originalCommit": "b0ab4b05b7978695abc3fa1a89d93663b13b82fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc3ODQ5NQ==", "url": "https://github.com/prebid/prebid-server-java/pull/784#discussion_r450778495", "bodyText": "Addressed this concern by switching to FpdResolver", "author": "schernysh", "createdAt": "2020-07-07T10:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0OTEwNQ=="}], "type": "inlineReview"}, {"oid": "b4d73760d520ef19191f0f4803f42602636644d7", "url": "https://github.com/prebid/prebid-server-java/commit/b4d73760d520ef19191f0f4803f42602636644d7", "message": "Merge branch 'fpd-round-3' into fpd-auction", "committedDate": "2020-07-07T09:23:53Z", "type": "commit"}, {"oid": "977328931ba094298c2bb08d9b9b330d8500c6d1", "url": "https://github.com/prebid/prebid-server-java/commit/977328931ba094298c2bb08d9b9b330d8500c6d1", "message": "Switch to FpdResolver to merge FPD attributes during auction", "committedDate": "2020-07-07T10:53:21Z", "type": "commit"}]}