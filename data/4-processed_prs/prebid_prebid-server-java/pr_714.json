{"pr_number": 714, "pr_title": "Add usepbsrates flag to bidrequest", "pr_createdAt": "2020-05-12T21:07:24Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/714", "timeline": [{"oid": "194ef111fddb759f2689a19f9b3503a742165d1c", "url": "https://github.com/prebid/prebid-server-java/commit/194ef111fddb759f2689a19f9b3503a742165d1c", "message": "Add usepbsrates flag to ext.request.currency", "committedDate": "2020-05-12T20:47:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyOTY3Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426629672", "bodyText": "requestCurrencyRates not required here bc it can use externalValues from parameter.", "author": "DGarbar", "createdAt": "2020-05-18T13:34:33Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -155,6 +162,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n         return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n     }\n \n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency,\n+                                                           BigDecimal conversionRate) {\n+        if (requestCurrencyRates != null) {\n+            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        }\n+        return conversionRate;\n+    }\n+\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> requestCurrencyRates,", "originalCommit": "194ef111fddb759f2689a19f9b3503a742165d1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMTUwMA==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426631500", "bodyText": "Does this logic can be in the getConversionRateFromServer method.\n(First we ask server and then request)\nP.s I do not like multiole if so close and another one in the method", "author": "DGarbar", "createdAt": "2020-05-18T13:37:17Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,15 +138,21 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n         BigDecimal conversionRate = null;\n-        if (requestCurrencyRates != null) {\n-            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n-        }\n-\n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (usepbsrates) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency, effectiveBidCurrency,\n+                    conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromRequest(requestCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }", "originalCommit": "194ef111fddb759f2689a19f9b3503a742165d1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMTczMg==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426631732", "bodyText": "same as above but with getConversionRateFromRequest", "author": "DGarbar", "createdAt": "2020-05-18T13:37:39Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,15 +138,21 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n         BigDecimal conversionRate = null;\n-        if (requestCurrencyRates != null) {\n-            conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n-        }\n-\n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (usepbsrates) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency, effectiveBidCurrency,\n+                    conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromRequest(requestCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }\n+        } else {\n+            conversionRate = getConversionRateFromRequest(requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency, conversionRate);\n+            if (conversionRate == null) {\n+                conversionRate = getConversionRateFromServer(externalCurrencyRates, adServerCurrency,\n+                        effectiveBidCurrency, conversionRate);\n+            }", "originalCommit": "194ef111fddb759f2689a19f9b3503a742165d1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNDc3Ng==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426634776", "bodyText": "is it really required ?", "author": "DGarbar", "createdAt": "2020-05-18T13:42:01Z", "path": "src/test/resources/org/prebid/server/it/storedrequests/test-amp-stored-request.json", "diffHunk": "@@ -56,7 +56,8 @@\n           \"USD\": {\n             \"EUR\": 0.8110\n           }\n-        }\n+        },\n+        \"usepbsrates\": false", "originalCommit": "194ef111fddb759f2689a19f9b3503a742165d1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNTgxOA==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426635818", "bodyText": "currency.getUsepbsrates() retruns Boolean not boolean, so it can be null.\nI'd prefer if we extract this variable and return null.", "author": "DGarbar", "createdAt": "2020-05-18T13:43:30Z", "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -215,6 +215,15 @@ private static ExtRequestTargeting targeting(ExtBidRequest requestExt) {\n         return currency != null ? currency.getRates() : null;\n     }\n \n+    /**\n+     * Extracts usepbsrates flag from {@link ExtBidRequest}.\n+     */\n+    private static boolean usepbsrates(ExtBidRequest requestExt) {\n+        final ExtRequestPrebid prebid = requestExt != null ? requestExt.getPrebid() : null;\n+        final ExtRequestCurrency currency = prebid != null ? prebid.getCurrency() : null;\n+        return currency != null ? currency.getUsepbsrates() : false;", "originalCommit": "194ef111fddb759f2689a19f9b3503a742165d1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNzg5MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r426637891", "bodyText": "boolean -> Boolean\nAnd a bit lower you can use BooleanUtils.isTrue to use appropriate logic. And it be good approach if you add comments, that false is by default\nisTrue = true only of true. So else case will be for null and false.", "author": "DGarbar", "createdAt": "2020-05-18T13:46:33Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -124,11 +124,12 @@ public ZonedDateTime getLastUpdated() {\n     }\n \n     /**\n-     * Converts price from bidCurrency to adServerCurrency using rates defined in request or if absent, from\n-     * latest currency rates. Throws {@link PreBidException} in case conversion is not possible.\n+     * Converts price from bidCurrency to adServerCurrency using rates and usepbsrates flag defined in request.\n+     * If usepbsrates is true it takes rates from prebid server, if false from request.\n+     * or if absent, from latest currency rates. Throws {@link PreBidException} in case conversion is not possible.\n      */\n     public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                      String adServerCurrency, String bidCurrency) {\n+                                      String adServerCurrency, String bidCurrency, boolean usepbsrates) {", "originalCommit": "194ef111fddb759f2689a19f9b3503a742165d1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "url": "https://github.com/prebid/prebid-server-java/commit/341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "message": "Refactoring of code and tests", "committedDate": "2020-05-20T19:54:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwOTc1NA==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429209754", "bodyText": "you need to return usepbsrates. bc this method (according to documentation above) shoud only extract", "author": "DGarbar", "createdAt": "2020-05-22T12:10:44Z", "path": "src/main/java/org/prebid/server/auction/ExchangeService.java", "diffHunk": "@@ -218,10 +218,11 @@ private static ExtRequestTargeting targeting(ExtBidRequest requestExt) {\n     /**\n      * Extracts usepbsrates flag from {@link ExtBidRequest}.\n      */\n-    private static boolean usepbsrates(ExtBidRequest requestExt) {\n+    private static Boolean usepbsrates(ExtBidRequest requestExt) {\n         final ExtRequestPrebid prebid = requestExt != null ? requestExt.getPrebid() : null;\n         final ExtRequestCurrency currency = prebid != null ? prebid.getCurrency() : null;\n-        return currency != null ? currency.getUsepbsrates() : false;\n+        final Boolean usepbsrates = currency != null ? currency.getUsepbsrates() : null;\n+        return usepbsrates != null;", "originalCommit": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDE3Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210172", "bodyText": "we don't add specs in here. Pls specify it near usage", "author": "DGarbar", "createdAt": "2020-05-22T12:11:52Z", "path": "src/main/java/org/prebid/server/proto/openrtb/ext/request/ExtRequestCurrency.java", "diffHunk": "@@ -18,6 +18,7 @@\n     Map<String, Map<String, BigDecimal>> rates;\n     /**\n      * Defines the contract for bidrequest.ext.prebid.currency.usepbsrates\n+     * default value is false", "originalCommit": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDY5OQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210699", "bodyText": "why it is not final ?", "author": "DGarbar", "createdAt": "2020-05-22T12:13:14Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -139,21 +139,11 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n         }\n \n         BigDecimal conversionRate = null;", "originalCommit": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMDkwMQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429210901", "bodyText": "You do not need to pass returning value", "author": "DGarbar", "createdAt": "2020-05-22T12:13:44Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -165,23 +155,33 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     /**\n      *  Get conversion rate from request currency rates if it is present\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                            String adServerCurrency, String effectiveBidCurrency,\n                                                            BigDecimal conversionRate) {", "originalCommit": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMTA0Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429211043", "bodyText": "You do not need to pass returning value", "author": "DGarbar", "createdAt": "2020-05-22T12:14:08Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -165,23 +155,33 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     /**\n      *  Get conversion rate from request currency rates if it is present\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                            String adServerCurrency, String effectiveBidCurrency,\n                                                            BigDecimal conversionRate) {\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n+\n+        if (conversionRate == null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency, conversionRate);\n+        }\n         return conversionRate;\n     }\n \n     /**\n      * Get conversion rate from server\n      */\n-    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                          Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n                                                           String adServerCurrency, String effectiveBidCurrency,\n                                                           BigDecimal conversionRate) {", "originalCommit": "341b3d802bcea6826d686a8c6b18d5e4bd240d1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "url": "https://github.com/prebid/prebid-server-java/commit/76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "message": "Omit multiple if statements", "committedDate": "2020-05-22T20:05:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgwNzkxMg==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429807912", "bodyText": "NPE", "author": "DGarbar", "createdAt": "2020-05-25T08:37:43Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -138,12 +139,11 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        BigDecimal conversionRate = null;\n-        conversionRate = usepbsrates\n+        final BigDecimal conversionRate = usepbsrates", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxMTYxMQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429811611", "bodyText": "and then from server if it is not processed.", "author": "DGarbar", "createdAt": "2020-05-25T08:45:05Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxMTgxOA==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429811818", "bodyText": "Probably better name is getConversionRateFromRequestFirst", "author": "DGarbar", "createdAt": "2020-05-25T08:45:31Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNjM5OQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429816399", "bodyText": "Probably better name is getConversionRateFromServerFirst", "author": "DGarbar", "createdAt": "2020-05-25T08:54:24Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNjU4MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429816581", "bodyText": "and then using request currency if it is not processed.", "author": "DGarbar", "createdAt": "2020-05-25T08:54:48Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzE1MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817151", "bodyText": "You don't need to pass this parameter. Remove static and use variable", "author": "DGarbar", "createdAt": "2020-05-25T08:55:52Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzk2Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817962", "bodyText": "Endless recursive call if conversion rate = null.\nJust use getConversionRate with expected parameters", "author": "DGarbar", "createdAt": "2020-05-25T08:57:22Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency);\n         }\n+        return conversionRate;\n+    }\n \n-        if (conversionRate == null) {\n-            throw new PreBidException(\"no currency conversion available\");\n-        }\n+    /**\n+     * Get conversion rate from server\n+     */\n+    private static BigDecimal getConversionRateFromServer(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                          Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                          String adServerCurrency, String effectiveBidCurrency) {\n+        BigDecimal conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n \n-        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+        if (conversionRate == null && requestCurrencyRates != null) {\n+            conversionRate = getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates, adServerCurrency,", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxNzk5NQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429817995", "bodyText": "Endless recursive call if conversion rate = null.\nJust use getConversionRate with expected parameters", "author": "DGarbar", "createdAt": "2020-05-25T08:57:25Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -137,22 +139,50 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        // get conversion rate from request currency rates if it is present\n+        final BigDecimal conversionRate = usepbsrates\n+                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n+                    effectiveBidCurrency)\n+                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n+                    adServerCurrency, effectiveBidCurrency);\n+\n+        if (conversionRate == null) {\n+            throw new PreBidException(\"no currency conversion available\");\n+        }\n+\n+        return price.divide(conversionRate, DEFAULT_PRICE_PRECISION, RoundingMode.HALF_EVEN);\n+    }\n+\n+    /**\n+     *  Get conversion rate from request currency rates if it is present\n+     */\n+    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n+                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                           String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {\n             conversionRate = getConversionRate(requestCurrencyRates, adServerCurrency, effectiveBidCurrency);\n         }\n \n-        // if conversion rate from requestCurrency was not found, try the same from latest currencies\n-        if (conversionRate == null) {\n-            conversionRate = getConversionRate(externalCurrencyRates, adServerCurrency, effectiveBidCurrency);\n+        if (conversionRate == null && externalCurrencyRates != null) {\n+            conversionRate = getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODMxMg==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818312", "bodyText": "/n", "author": "DGarbar", "createdAt": "2020-05-25T08:58:00Z", "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODM1MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818351", "bodyText": "/n", "author": "DGarbar", "createdAt": "2020-05-25T08:58:05Z", "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, requestConversionRates, EUR, GBP,\n+                true);\n+\n+        // then\n+        assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n+    }\n+\n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromRequestIfusepbsratesIsFalse() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTgxODU2NA==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r429818564", "bodyText": "can you use singletonMap in singletonMap", "author": "DGarbar", "createdAt": "2020-05-25T08:58:30Z", "path": "src/test/java/org/prebid/server/auction/CurrencyConversionServiceTest.java", "diffHunk": "@@ -161,20 +165,47 @@ public void convertCurrencyShouldReturnConvertedBySingleDigitMultiplierPrice() {\n     @Test\n     public void convertCurrencyShouldUseLatestRatesIfRequestRatesIsNull() {\n         // when\n-        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP);\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, null, EUR, GBP, false);\n \n         // then\n         assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n     }\n \n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromServerIfusepbsratesIsTrue() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));\n+        // when\n+        final BigDecimal price = currencyService.convertCurrency(BigDecimal.ONE, requestConversionRates, EUR, GBP,\n+                true);\n+\n+        // then\n+        assertThat(price.compareTo(BigDecimal.valueOf(1.149))).isEqualTo(0);\n+    }\n+\n+    @Test\n+    public void convertCurrencyShouldUseConversionRateFromRequestIfusepbsratesIsFalse() {\n+        // given\n+        final Map<String, Map<String, BigDecimal>> requestConversionRates = new HashMap<>();\n+        requestConversionRates.put(EUR, singletonMap(USD, BigDecimal.valueOf(0.6)));", "originalCommit": "76526b181d767dd797d4ebea2cf137b8b4a6e1a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd", "url": "https://github.com/prebid/prebid-server-java/commit/2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd", "message": "Additional refactoring of code and tests", "committedDate": "2020-05-25T15:41:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mjg1MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430382851", "bodyText": "\"usepbsrates\": false // defaults to true   -> null + true\nBooleanUtils.isTrue // only true\nYou need to use isFalse and reverse if statement or isNotFalse.", "author": "DGarbar", "createdAt": "2020-05-26T12:44:08Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -139,11 +140,9 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n             return price;\n         }\n \n-        final BigDecimal conversionRate = usepbsrates\n-                    ? getConversionRateFromServer(externalCurrencyRates, requestCurrencyRates, adServerCurrency,\n-                    effectiveBidCurrency)\n-                    : getConversionRateFromRequest(externalCurrencyRates, requestCurrencyRates,\n-                    adServerCurrency, effectiveBidCurrency);\n+        final BigDecimal conversionRate = BooleanUtils.isTrue(usepbsrates)", "originalCommit": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mzk4NQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430383985", "bodyText": "you can omit this check (or add similar one in getConversionRateFromServer, be consistent)", "author": "DGarbar", "createdAt": "2020-05-26T12:45:58Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -153,34 +152,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     }\n \n     /**\n-     *  Get conversion rate from request currency rates if it is present\n+     *  Get conversion rate from request currency rates if it is present and then from server if it is not processed.\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n-                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                                           String adServerCurrency, String effectiveBidCurrency) {\n+    private BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n+                                                         String adServerCurrency, String effectiveBidCurrency) {\n         BigDecimal conversionRate = null;\n         if (requestCurrencyRates != null) {", "originalCommit": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4NTA3MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/714#discussion_r430385071", "bodyText": "Did you remove 'First' in the end of the method intentionally?", "author": "DGarbar", "createdAt": "2020-05-26T12:47:48Z", "path": "src/main/java/org/prebid/server/currency/CurrencyConversionService.java", "diffHunk": "@@ -153,34 +152,30 @@ public BigDecimal convertCurrency(BigDecimal price, Map<String, Map<String, BigD\n     }\n \n     /**\n-     *  Get conversion rate from request currency rates if it is present\n+     *  Get conversion rate from request currency rates if it is present and then from server if it is not processed.\n      */\n-    private static BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> externalCurrencyRates,\n-                                                           Map<String, Map<String, BigDecimal>> requestCurrencyRates,\n-                                                           String adServerCurrency, String effectiveBidCurrency) {\n+    private BigDecimal getConversionRateFromRequest(Map<String, Map<String, BigDecimal>> requestCurrencyRates,", "originalCommit": "2dacbf6eb9c378ad2338c58a50212d2d70c1cbfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c29494e9594d957b8041089796f055f3868c34d", "url": "https://github.com/prebid/prebid-server-java/commit/0c29494e9594d957b8041089796f055f3868c34d", "message": "Small changes in code", "committedDate": "2020-05-26T13:26:01Z", "type": "commit"}, {"oid": "3bafd2b52fe9ca5a702621684c3249d20590c793", "url": "https://github.com/prebid/prebid-server-java/commit/3bafd2b52fe9ca5a702621684c3249d20590c793", "message": "Fix typo", "committedDate": "2020-05-26T13:46:54Z", "type": "commit"}, {"oid": "4ab46c8bdcf3b0cfecbd944685f0c5d1d29e7f1d", "url": "https://github.com/prebid/prebid-server-java/commit/4ab46c8bdcf3b0cfecbd944685f0c5d1d29e7f1d", "message": "Merge branch 'master' into add-usepbsrates-flag-to-currency\n\n# Conflicts:\n#\tsrc/main/java/org/prebid/server/auction/ExchangeService.java\n#\tsrc/test/java/org/prebid/server/auction/ExchangeServiceTest.java\n#\tsrc/test/resources/org/prebid/server/it/openrtb2/emxdigital/test-auction-emxdigital-response.json\n#\tsrc/test/resources/org/prebid/server/it/openrtb2/tripleliftnative/test-auction-triplelift-native-response.json", "committedDate": "2020-07-30T11:20:10Z", "type": "commit"}, {"oid": "abc55c3a3bfad53da0e6e04bbe8c18e2973086b8", "url": "https://github.com/prebid/prebid-server-java/commit/abc55c3a3bfad53da0e6e04bbe8c18e2973086b8", "message": "Resolving conflicts", "committedDate": "2020-07-30T13:24:17Z", "type": "commit"}, {"oid": "e0924ba19e5411e997f6d239ab7de626bd8bfd6d", "url": "https://github.com/prebid/prebid-server-java/commit/e0924ba19e5411e997f6d239ab7de626bd8bfd6d", "message": "Merge branch 'master' into add-usepbsrates-flag-to-currency", "committedDate": "2020-07-31T12:10:43Z", "type": "commit"}, {"oid": "29331ea22aa00dfac82fbf08d250b7322beeb78a", "url": "https://github.com/prebid/prebid-server-java/commit/29331ea22aa00dfac82fbf08d250b7322beeb78a", "message": "Changes after review", "committedDate": "2020-08-03T11:11:22Z", "type": "commit"}]}