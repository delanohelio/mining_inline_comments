{"pr_number": 359, "pr_title": "Add auto-unarchive option to components", "pr_createdAt": "2020-08-10T19:05:06Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359", "timeline": [{"oid": "c1819a1d9256309a911247007feb89c25ca50b25", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c1819a1d9256309a911247007feb89c25ca50b25", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-10T19:06:43Z", "type": "forcePushed"}, {"oid": "a42e718988e78cc384c929e6010d91b6fa2774d4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a42e718988e78cc384c929e6010d91b6fa2774d4", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-10T19:16:46Z", "type": "forcePushed"}, {"oid": "2f93ed6c408eba834fe3f263c0fcd1eff792fe51", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2f93ed6c408eba834fe3f263c0fcd1eff792fe51", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-10T19:19:18Z", "type": "forcePushed"}, {"oid": "e6639e191c70e2814767cd59a04ad6a877d55665", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e6639e191c70e2814767cd59a04ad6a877d55665", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-10T19:55:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4OTk4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468189989", "bodyText": "is there any reason you couldn't do:\nZipInputStream zis = new ZipInputStream(Files.newInputStream(zipFile.toPath())) ?\nDo they need to be closed separately?", "author": "rbattle", "createdAt": "2020-08-10T21:15:08Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/Unarchiver.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.packagemanager;\n+\n+import com.amazonaws.util.IOUtils;\n+import com.aws.iot.evergreen.packagemanager.models.Unarchive;\n+import com.aws.iot.evergreen.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipInputStream;\n+\n+public class Unarchiver {\n+    /**\n+     * Unarchive a given file into a given path.\n+     *\n+     * @param method        type of archive to undo\n+     * @param toUnarchive   the file to be unarchived\n+     * @param unarchiveInto the path to unarchive the file into\n+     * @throws IOException if unarchiving fails\n+     */\n+    public void unarchive(Unarchive method, File toUnarchive, Path unarchiveInto) throws IOException {\n+        if (method == Unarchive.ZIP) {\n+            unzip(toUnarchive, unarchiveInto.toFile());\n+        }\n+    }\n+\n+    static void unzip(File zipFile, File destDir) throws IOException {\n+        try (InputStream fis = Files.newInputStream(zipFile.toPath()); ZipInputStream zis = new ZipInputStream(fis)) {", "originalCommit": "e6639e191c70e2814767cd59a04ad6a877d55665", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE5NjUzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468196533", "bodyText": "is there any worth in checking the zip entry size and ensuring we have enough space to unzip before copying?\nalso, on error do we want to cleanup zip entries?", "author": "rbattle", "createdAt": "2020-08-10T21:29:07Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/Unarchiver.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.packagemanager;\n+\n+import com.amazonaws.util.IOUtils;\n+import com.aws.iot.evergreen.packagemanager.models.Unarchive;\n+import com.aws.iot.evergreen.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipInputStream;\n+\n+public class Unarchiver {\n+    /**\n+     * Unarchive a given file into a given path.\n+     *\n+     * @param method        type of archive to undo\n+     * @param toUnarchive   the file to be unarchived\n+     * @param unarchiveInto the path to unarchive the file into\n+     * @throws IOException if unarchiving fails\n+     */\n+    public void unarchive(Unarchive method, File toUnarchive, Path unarchiveInto) throws IOException {\n+        if (method == Unarchive.ZIP) {\n+            unzip(toUnarchive, unarchiveInto.toFile());\n+        }\n+    }\n+\n+    static void unzip(File zipFile, File destDir) throws IOException {\n+        try (InputStream fis = Files.newInputStream(zipFile.toPath()); ZipInputStream zis = new ZipInputStream(fis)) {\n+            ZipEntry zipEntry = zis.getNextEntry();\n+            while (zipEntry != null) {\n+                File newFile = safeNewZipFile(destDir, zipEntry);\n+                if (zipEntry.isDirectory()) {\n+                    Utils.createPaths(newFile.toPath());\n+                } else {\n+                    try (OutputStream fos = Files.newOutputStream(newFile.toPath())) {\n+                        IOUtils.copy(zis, fos);", "originalCommit": "e6639e191c70e2814767cd59a04ad6a877d55665", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwMDczNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468200736", "bodyText": "Added TODO. Hui is adding a recursive delete function, so I'll wait for that. Not sure checking for space really matters, it will result in an exception anyway.", "author": "MikeDombo", "createdAt": "2020-08-10T21:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE5NjUzMw=="}], "type": "inlineReview"}, {"oid": "f2f83ce65daa4730f17b9dd9e49e58100b92aaae", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f2f83ce65daa4730f17b9dd9e49e58100b92aaae", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-10T21:37:43Z", "type": "forcePushed"}, {"oid": "92e345fd9cf31e0ef90e3d9639def8cc495e7d3d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/92e345fd9cf31e0ef90e3d9639def8cc495e7d3d", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-11T00:25:11Z", "type": "forcePushed"}, {"oid": "33c50a37a530b6f69e3f4565b01943138d572f86", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/33c50a37a530b6f69e3f4565b01943138d572f86", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-11T02:49:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0OTA3Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468349073", "bodyText": "haven't you already coerced this to enum on line 231?", "author": "rbattle", "createdAt": "2020-08-11T06:14:50Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -202,17 +215,36 @@ void downloadArtifactsIfNecessary(PackageIdentifier packageIdentifier, List<Comp\n         List<ComponentArtifact> artifactsToDownload =\n                 determineArtifactsNeedToDownload(packageArtifactDirectory, artifacts);\n         logger.atDebug().setEventType(\"downloading-package-artifacts\")\n-                .addKeyValue(\"packageIdentifier\", packageIdentifier)\n+                .addKeyValue(PACKAGE_IDENTIFIER, packageIdentifier)\n                 .addKeyValue(\"artifactsNeedToDownload\", artifactsToDownload).log();\n \n         for (ComponentArtifact artifact : artifactsToDownload) {\n             ArtifactDownloader downloader = selectArtifactDownloader(artifact.getArtifactUri());\n+            File downloadedFile;\n             try {\n-                downloader.downloadToPath(packageIdentifier, artifact, packageArtifactDirectory);\n+                downloadedFile = downloader.downloadToPath(packageIdentifier, artifact, packageArtifactDirectory);\n             } catch (IOException e) {\n                 throw new PackageDownloadException(\n                         String.format(\"Failed to download package %s artifact %s\", packageIdentifier, artifact), e);\n             }\n+\n+            Unarchive unarchive = artifact.getUnarchive() == null ? Unarchive.NONE\n+                    : Coerce.toEnum(Unarchive.class, artifact.getUnarchive().toUpperCase(), Unarchive.NONE);\n+\n+            if (downloadedFile != null && !unarchive.equals(Unarchive.NONE)) {\n+                try {\n+                    Path unarchivePath = packageStore.resolveAndSetupArtifactsUnpackDirectory(packageIdentifier)\n+                            .resolve(getFileName(downloadedFile));\n+                    Utils.createPaths(unarchivePath);\n+                    unarchiver.unarchive(\n+                            Coerce.toEnum(Unarchive.class, artifact.getUnarchive().toUpperCase(), Unarchive.NONE),", "originalCommit": "33c50a37a530b6f69e3f4565b01943138d572f86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY5NTMzNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468695334", "bodyText": "Yeah, I can use that", "author": "MikeDombo", "createdAt": "2020-08-11T16:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0OTA3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM1MDE1OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468350159", "bodyText": "I know this isn't part of your change, but if the file partially downloads, does this mean it will continue on as if everything went fine?", "author": "rbattle", "createdAt": "2020-08-11T06:17:45Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/plugins/GreengrassRepositoryDownloader.java", "diffHunk": "@@ -77,6 +79,7 @@ public void downloadToPath(PackageIdentifier packageIdentifier, ComponentArtifac\n                     .addKeyValue(\"artifactUri\", artifact.getArtifactUri())\n                     .log(\"Failed to download artifact, but found it locally, using that version\", e);", "originalCommit": "33c50a37a530b6f69e3f4565b01943138d572f86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY5NTYxNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468695616", "bodyText": "Yes it will. That's one reason why we need the checksum from the cloud.", "author": "MikeDombo", "createdAt": "2020-08-11T16:06:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM1MDE1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NzQwNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468687406", "bodyText": "Is the original zip file removed after unzip?", "author": "fengwang666", "createdAt": "2020-08-11T15:54:05Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -202,17 +215,36 @@ void downloadArtifactsIfNecessary(PackageIdentifier packageIdentifier, List<Comp\n         List<ComponentArtifact> artifactsToDownload =\n                 determineArtifactsNeedToDownload(packageArtifactDirectory, artifacts);\n         logger.atDebug().setEventType(\"downloading-package-artifacts\")\n-                .addKeyValue(\"packageIdentifier\", packageIdentifier)\n+                .addKeyValue(PACKAGE_IDENTIFIER, packageIdentifier)\n                 .addKeyValue(\"artifactsNeedToDownload\", artifactsToDownload).log();\n \n         for (ComponentArtifact artifact : artifactsToDownload) {\n             ArtifactDownloader downloader = selectArtifactDownloader(artifact.getArtifactUri());\n+            File downloadedFile;\n             try {\n-                downloader.downloadToPath(packageIdentifier, artifact, packageArtifactDirectory);\n+                downloadedFile = downloader.downloadToPath(packageIdentifier, artifact, packageArtifactDirectory);\n             } catch (IOException e) {\n                 throw new PackageDownloadException(\n                         String.format(\"Failed to download package %s artifact %s\", packageIdentifier, artifact), e);\n             }\n+\n+            Unarchive unarchive = artifact.getUnarchive() == null ? Unarchive.NONE\n+                    : Coerce.toEnum(Unarchive.class, artifact.getUnarchive().toUpperCase(), Unarchive.NONE);\n+\n+            if (downloadedFile != null && !unarchive.equals(Unarchive.NONE)) {\n+                try {\n+                    Path unarchivePath = packageStore.resolveAndSetupArtifactsUnpackDirectory(packageIdentifier)\n+                            .resolve(getFileName(downloadedFile));\n+                    Utils.createPaths(unarchivePath);\n+                    unarchiver.unarchive(", "originalCommit": "33c50a37a530b6f69e3f4565b01943138d572f86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY5NTE3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468695178", "bodyText": "No, it won't be. I don't necessarily think that we should since that is still the artifact.", "author": "MikeDombo", "createdAt": "2020-08-11T16:05:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4NzQwNg=="}], "type": "inlineReview"}, {"oid": "f97d8441ffe607959358029ed8f46251f3e710f7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f97d8441ffe607959358029ed8f46251f3e710f7", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-11T16:10:43Z", "type": "forcePushed"}, {"oid": "91e9eea359f8d1b00c9f515f92d936dde888d888", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/91e9eea359f8d1b00c9f515f92d936dde888d888", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-11T16:34:26Z", "type": "commit"}, {"oid": "91e9eea359f8d1b00c9f515f92d936dde888d888", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/91e9eea359f8d1b00c9f515f92d936dde888d888", "message": "Add auto-unarchive option to components", "committedDate": "2020-08-11T16:34:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxNjU3OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468716579", "bodyText": "Why lowered?", "author": "fengwang666", "createdAt": "2020-08-11T16:39:13Z", "path": "pom.xml", "diffHunk": "@@ -436,7 +436,7 @@\n                                         <limit>\n                                             <counter>BRANCH</counter>\n                                             <value>COVEREDRATIO</value>\n-                                            <minimum>0.64</minimum>\n+                                            <minimum>0.63</minimum>", "originalCommit": "91e9eea359f8d1b00c9f515f92d936dde888d888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxNzI1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/359#discussion_r468717257", "bodyText": "One of the changes merged last night is causing it to fail on windows only. Not sure how that change was able to pass during PR but not during merge.", "author": "MikeDombo", "createdAt": "2020-08-11T16:40:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcxNjU3OQ=="}], "type": "inlineReview"}]}