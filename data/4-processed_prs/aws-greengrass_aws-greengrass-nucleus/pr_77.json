{"pr_number": 77, "pr_title": "integration test for ipc aware service", "pr_createdAt": "2020-02-26T18:44:28Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77", "timeline": [{"oid": "090bb6af3361c828670d8dae7798d4690a54b972", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/090bb6af3361c828670d8dae7798d4690a54b972", "message": "integration test for ipc aware service", "committedDate": "2020-02-26T18:41:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMjgxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384702818", "bodyText": "Even though this only has 1 test, if we added more they would probably break because this is AfterAll. Can you switch these to be BeforeEach and AfterEach so that when we add more tests they still work?", "author": "MikeDombo", "createdAt": "2020-02-26T19:09:01Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MDM1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384770357", "bodyText": "changed, based AfterAll and BeforeAll based on the existing tests", "author": "fahadmohammed01", "createdAt": "2020-02-26T21:16:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMjgxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMzgyNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384703827", "bodyText": "Don't swallow the output from the execution since that may be helpful when there are issues. If you just want to quiet down mvn, then use mvn -q.", "author": "MikeDombo", "createdAt": "2020-02-26T19:10:55Z", "path": "src/test/resources/com/aws/iot/evergreen/ipc/ipc_aware_main.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+---\n+\n+#launchers:\n+plain:\n+  startup:\n+    all: \"{platform.invoke} {args}\"\n+\n+\n+main:\n+  requires: IPCService\n+  startup:\n+    mvn exec:java -f $EVERGREEN_HOME/pom.xml -Dexec.mainClass=\"com.aws.iot.evergreen.ipc.ipcawareservices.ServiceMovesToRunning\" -Dexec.classpathScope=\"test\" > /dev/null 2>&1", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTYzOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384771639", "bodyText": "updated", "author": "fahadmohammed01", "createdAt": "2020-02-26T21:18:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMzgyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODIxNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384708214", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean await = serviceRunning.await(10, TimeUnit.SECONDS);\n          \n          \n            \n                    boolean isRunning = serviceRunning.await(10, TimeUnit.SECONDS);", "author": "leaf94", "createdAt": "2020-02-26T19:19:27Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll\n+    public static void teardown() {\n+        kernel.shutdown();\n+    }\n+\n+    @Test\n+    public void GIVEN_ipc_aware_service_WHEN_report_state_as_running_THEN_kernel_updates_state_as_running()\n+            throws Exception {\n+        CountDownLatch serviceRunning = new CountDownLatch(1);\n+        EvergreenService.GlobalStateChangeListener listener = (service, state) -> {\n+            if (\"main\".equals(service.getName()) && State.RUNNING.equals(service.getState())) {\n+                serviceRunning.countDown();\n+            }\n+        };\n+        kernel.context.addGlobalStateChangeListener(listener);\n+        //waiting for main to transition to running\n+        boolean await = serviceRunning.await(10, TimeUnit.SECONDS);", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTY4MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384771680", "bodyText": "changed", "author": "fahadmohammed01", "createdAt": "2020-02-26T21:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTAyOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384709029", "bodyText": "Maybe\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ServiceMovesToRunning {\n          \n          \n            \n            public class SampleIpcAwareService {", "author": "leaf94", "createdAt": "2020-02-26T19:21:02Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.aws.iot.evergreen.ipc.ipcawareservices;\n+\n+import com.aws.iot.evergreen.ipc.IPCClient;\n+import com.aws.iot.evergreen.ipc.IPCClientImpl;\n+import com.aws.iot.evergreen.ipc.config.KernelIPCClientConfig;\n+import com.aws.iot.evergreen.ipc.services.lifecycle.LifecycleImpl;\n+\n+public class ServiceMovesToRunning {", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3OTE5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384779194", "bodyText": "maybe, renamed to SampleIpcAwareServiceMovesToRunning", "author": "fahadmohammed01", "createdAt": "2020-02-26T21:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTIxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384709218", "bodyText": "neat!!!", "author": "leaf94", "createdAt": "2020-02-26T19:21:25Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.aws.iot.evergreen.ipc.ipcawareservices;\n+\n+import com.aws.iot.evergreen.ipc.IPCClient;\n+import com.aws.iot.evergreen.ipc.IPCClientImpl;\n+import com.aws.iot.evergreen.ipc.config.KernelIPCClientConfig;\n+import com.aws.iot.evergreen.ipc.services.lifecycle.LifecycleImpl;\n+\n+public class ServiceMovesToRunning {\n+    public static void main(String[] args) throws Exception {\n+        IPCClient client = new IPCClientImpl(KernelIPCClientConfig.builder().build());\n+        LifecycleImpl c = new LifecycleImpl(client);\n+        c.reportState(\"RUNNING\");\n+        client.disconnect();", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "message": "addressed minor comments from PR", "committedDate": "2020-02-26T21:32:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3OTgwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384779804", "bodyText": "no * imports.", "author": "MikeDombo", "createdAt": "2020-02-26T21:34:05Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.*;", "originalCommit": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzNTk2Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384835963", "bodyText": "why is this public?", "author": "shaguptashaikh", "createdAt": "2020-02-26T23:48:01Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.*;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;", "originalCommit": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eae17915205061e28cbaa6f386aeb5338324306d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eae17915205061e28cbaa6f386aeb5338324306d", "message": "removed *  import", "committedDate": "2020-02-26T23:54:32Z", "type": "commit"}, {"oid": "fffc320d5c081a44a2d003e20bd181106f60e65b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fffc320d5c081a44a2d003e20bd181106f60e65b", "message": "Merge branch 'master' into integration-test-ipc-aware-service", "committedDate": "2020-02-27T00:01:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NTAwMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384855003", "bodyText": "remove?", "author": "leaf94", "createdAt": "2020-02-27T00:49:52Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeEach\n+    public void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);", "originalCommit": "fffc320d5c081a44a2d003e20bd181106f60e65b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}