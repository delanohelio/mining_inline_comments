{"pr_number": 614, "pr_title": "Move logging config to system config.", "pr_createdAt": "2020-11-03T23:24:20Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614", "timeline": [{"oid": "eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "message": "Move logging config to system config.", "committedDate": "2020-11-03T23:47:02Z", "type": "commit"}, {"oid": "eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eea3a06b6a15469de1aa5be0e383a58ce1bdb2dd", "message": "Move logging config to system config.", "committedDate": "2020-11-03T23:47:02Z", "type": "forcePushed"}, {"oid": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/239cc152ddc874aabc215a5a9597b70fd0a09abd", "message": "Merge branch 'master' into moveloggingcofig", "committedDate": "2020-11-04T00:43:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjM2Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517042366", "bodyText": "Keep the default config?", "author": "hui-yang", "createdAt": "2020-11-04T01:07:06Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())", "originalCommit": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjUwMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517042501", "bodyText": "How does the list look like in yaml?", "author": "hui-yang", "createdAt": "2020-11-04T01:07:42Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())\n+                .subscribe((what, loggingParam) -> {\n+                    if (loggingParam == null) {\n+                        logger.atInfo().log(\"No logging configuration configured\");\n+                        return;\n+                    }\n+                    try {\n+                        List<LoggerConfiguration> configuration = OBJECT_MAPPER.convertValue(loggingParam.toPOJO(),", "originalCommit": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0NjA1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517046056", "bodyText": "Why is it a list? The example you gave in the config schema readme is not a list", "author": "MikeDombo", "createdAt": "2020-11-04T01:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3MTU4OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517471588", "bodyText": "So, if it is a nested config, We always get an array list of map objects. So I am only taking the first element from the list. unless I am doing something wrong, we need to do this.", "author": "nikkhilmuthye", "createdAt": "2020-11-04T16:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3MzAzOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517473039", "bodyText": "Explain your example in the schema, because that does not match this code.", "author": "MikeDombo", "createdAt": "2020-11-04T16:30:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3NDk0Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517474942", "bodyText": "If you look at https://github.com/aws/aws-greengrass-nucleus/pull/614/files#diff-ba8df66a8459a6910bf44bb3bcba866fd37c93858604141c7a2e19cb423e8be7R113 test. The way I pass the topic is how we get the Topic value here. But instead of a HashMap we get a DeferredMap.", "author": "nikkhilmuthye", "createdAt": "2020-11-04T16:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3NjQ5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517476495", "bodyText": "Is this a list?\nlogging:\n        level: INFO\n        fileSizeKB: 1024\n        totalLogsSizeKB: 10240\n        format: TEXT\n        outputDirectory: /path/to/logs/directory\n        outputType: FILE", "author": "MikeDombo", "createdAt": "2020-11-04T16:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0MjUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0Mjc0MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517042740", "bodyText": "Why not exposing the methods in deviceConfiguration?", "author": "hui-yang", "createdAt": "2020-11-04T01:08:44Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())\n+                .subscribe((what, loggingParam) -> {\n+                    if (loggingParam == null) {\n+                        logger.atInfo().log(\"No logging configuration configured\");\n+                        return;\n+                    }\n+                    try {\n+                        List<LoggerConfiguration> configuration = OBJECT_MAPPER.convertValue(loggingParam.toPOJO(),\n+                                new TypeReference<List<LoggerConfiguration>>() {\n+                                });\n+                        if (configuration == null) {\n+                            configuration =  new ArrayList<>();\n+                        }\n+                        if (configuration.isEmpty()) {\n+                            configuration.add(LoggerConfiguration.builder().build());\n+                        }\n+                        LogManager.reconfigureAllLoggers(configuration.get(0));\n+                    } catch (IllegalArgumentException e) {\n+                        logger.atError().kv(\"node\", loggingParam.getFullName()).kv(\"value\", loggingParam).setCause(e)\n+                                .log(\"Unable to parse logging configuration\");\n+                    }\n+                });\n+    }\n+\n+    /**\n+     * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n+     * exists, create service config for the default Nucleus component.\n+     */\n+    private static String getNucleusComponentName(Kernel kernel) {\n+        Optional<CaseInsensitiveString> nucleusComponent =\n+                kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC).children.keySet().stream()\n+                        .filter(s -> ComponentType.NUCLEUS.name().equals(getComponentType(kernel, s.toString())))\n+                        .findAny();\n+        return nucleusComponent.map(CaseInsensitiveString::toString).orElse(DEFAULT_NUCLEUS_COMPONENT_NAME);\n+    }\n+\n+    private static String getComponentType(Kernel kernel, String serviceName) {\n+        return Coerce.toString(kernel.getConfig().find(SERVICES_NAMESPACE_TOPIC, serviceName, SERVICE_TYPE_TOPIC_KEY));\n+    }", "originalCommit": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2OTgyMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517469823", "bodyText": "They are just private function. and some functions do extra work in it which we don't need to here.", "author": "nikkhilmuthye", "createdAt": "2020-11-04T16:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0Mjc0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA0NTMyMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517045323", "bodyText": "for this directory, you should be modifying the path in initPaths", "author": "MikeDombo", "createdAt": "2020-11-04T01:18:02Z", "path": "README_CONFIG_SCHEMA.md", "diffHunk": "@@ -168,6 +168,13 @@ services:\n       privateKeyPath: \"root/privKey.key\"\n       rootCaPath: \"root/rootCA.pem\"\n       iotRoleAlias: \"tes_alias\"\n+      logging:\n+        level: INFO\n+        fileSizeKB: 1024\n+        totalLogsSizeKB: 10240\n+        format: TEXT\n+        outputDirectory: /path/to/logs/directory", "originalCommit": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ3NzMwOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517477308", "bodyText": "this should be lookupTopics as logging is a topics and not a topic", "author": "MikeDombo", "createdAt": "2020-11-04T16:36:48Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)", "originalCommit": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ4MTQ0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517481446", "bodyText": "Use https://github.com/aws/aws-greengrass-nucleus/blob/8ee8a8f65ea2226786490e81cb015ae0fd28f141/src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java#L142", "author": "MikeDombo", "createdAt": "2020-11-04T16:42:38Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,94 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.amazon.aws.iot.greengrass.component.common.ComponentType;\n+import com.aws.greengrass.config.CaseInsensitiveString;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.deployment.DeviceConfiguration.DEFAULT_NUCLEUS_COMPONENT_NAME;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n+import static com.aws.greengrass.lifecyclemanager.Kernel.SERVICE_TYPE_TOPIC_KEY;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final ObjectMapper OBJECT_MAPPER =\n+            new ObjectMapper().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        kernel.getConfig()\n+                .lookup(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel),\n+                        CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS)\n+                //.dflt(LoggerConfiguration.builder().build())\n+                .subscribe((what, loggingParam) -> {\n+                    if (loggingParam == null) {\n+                        logger.atInfo().log(\"No logging configuration configured\");\n+                        return;\n+                    }\n+                    try {\n+                        List<LoggerConfiguration> configuration = OBJECT_MAPPER.convertValue(loggingParam.toPOJO(),\n+                                new TypeReference<List<LoggerConfiguration>>() {\n+                                });\n+                        if (configuration == null) {\n+                            configuration =  new ArrayList<>();\n+                        }\n+                        if (configuration.isEmpty()) {\n+                            configuration.add(LoggerConfiguration.builder().build());\n+                        }\n+                        LogManager.reconfigureAllLoggers(configuration.get(0));\n+                    } catch (IllegalArgumentException e) {\n+                        logger.atError().kv(\"node\", loggingParam.getFullName()).kv(\"value\", loggingParam).setCause(e)\n+                                .log(\"Unable to parse logging configuration\");\n+                    }\n+                });\n+    }\n+\n+    /**\n+     * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n+     * exists, create service config for the default Nucleus component.\n+     */\n+    private static String getNucleusComponentName(Kernel kernel) {", "originalCommit": "239cc152ddc874aabc215a5a9597b70fd0a09abd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "message": "Address PR comments.", "committedDate": "2020-11-04T22:57:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODU2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517688564", "bodyText": "this isn't the same behavior as before, which initialized the component only when it didn't exist. You're now initializing it whether or not it exists, you're just doing it when the name is the default name.", "author": "MikeDombo", "createdAt": "2020-11-04T23:20:12Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -97,7 +99,12 @@\n     @Inject\n     public DeviceConfiguration(Kernel kernel) {\n         this.kernel = kernel;\n-        this.nucleusComponentName = getNucleusComponentName();\n+        Pair<String, Boolean> nucleusComponentNamePair = getNucleusComponentName(this.kernel);\n+        this.nucleusComponentName = nucleusComponentNamePair.getLeft();\n+        // If the Nucleus name is default, then initialize the nucleus component configuration.", "originalCommit": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5OTI3Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517699277", "bodyText": "No. I am returning nucleusComponent.isPresent() in the pair. So this will only get executed if the component is not present. Will update the comment accourdingly.", "author": "nikkhilmuthye", "createdAt": "2020-11-04T23:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODU2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODgzOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517688839", "bodyText": "is this going to update the log manager's path too?", "author": "MikeDombo", "createdAt": "2020-11-04T23:21:02Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/KernelCommandLine.java", "diffHunk": "@@ -152,7 +156,16 @@ private void initPaths(String rootAbsolutePath) {\n             TelemetryConfig.getInstance().setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));\n             LogManager.setRoot(Paths.get(deTilde(ROOT_DIR_PREFIX)));\n             nucleusPaths.setTelemetryPath(TelemetryConfig.getInstance().getStoreDirectory());\n-            nucleusPaths.setLoggerPath(LogManager.getRootLogConfiguration().getStoreDirectory());\n+            String storeDirectory = LogManager.getRootLogConfiguration().getStoreDirectory().toAbsolutePath()\n+                    .toString();\n+            Topic outputDirectoryTopic = kernel.getConfig().lookup(SERVICES_NAMESPACE_TOPIC,\n+                    DeviceConfiguration.getNucleusComponentName(kernel).getLeft(), CONFIGURATION_CONFIG_KEY,\n+                    NUCLEUS_CONFIG_LOGGING_TOPICS, \"outputDirectory\");\n+            String outputDirectory = Coerce.toString(outputDirectoryTopic);\n+            if (Utils.isNotEmpty(outputDirectory)) {\n+                storeDirectory = deTilde(outputDirectory);\n+            }\n+            nucleusPaths.setLoggerPath(Paths.get(storeDirectory));", "originalCommit": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5OTUzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517699536", "bodyText": "I was thinking that log manager will subscribe to the logging:outputDirectory topic.", "author": "nikkhilmuthye", "createdAt": "2020-11-04T23:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMDIyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517700224", "bodyText": "What's the point of nucleusPaths.setLoggerPath if that doesn't set the logger's path? This needs to be in sync for any changes.", "author": "MikeDombo", "createdAt": "2020-11-04T23:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwNzQ5MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517807491", "bodyText": "This will initialise the path and give the proper permissions. But the LogMangerHelper subscribed function should take care of actually changing the LogManager store path.", "author": "nikkhilmuthye", "createdAt": "2020-11-05T05:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwNzk4MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517807981", "bodyText": "What about when it changes? The subscriber needs to reset the permissions in the new location, right?", "author": "MikeDombo", "createdAt": "2020-11-05T05:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwODMyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517808324", "bodyText": "Yep making that change.", "author": "nikkhilmuthye", "createdAt": "2020-11-05T05:56:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4ODgzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTE5MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689190", "bodyText": "add to the device config a method to just give you the topics for the nucleus config.", "author": "MikeDombo", "createdAt": "2020-11-04T23:22:09Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,51 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.aws.greengrass.config.Node;\n+import com.aws.greengrass.config.WhatHappened;\n+import com.aws.greengrass.deployment.DeviceConfiguration;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.LogFormat;\n+import com.aws.greengrass.logging.impl.config.LogStore;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import com.aws.greengrass.util.Pair;\n+import org.slf4j.event.Level;\n+\n+import static com.aws.greengrass.componentmanager.KernelConfigResolver.CONFIGURATION_CONFIG_KEY;\n+import static com.aws.greengrass.lifecyclemanager.GreengrassService.SERVICES_NAMESPACE_TOPIC;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n+    public static final String NUCLEUS_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {\n+        Pair<String, Boolean> nucleusComponentNamePair = DeviceConfiguration.getNucleusComponentName(kernel);", "originalCommit": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5NTc1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518295758", "bodyText": "^", "author": "MikeDombo", "createdAt": "2020-11-05T19:10:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTE5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwODg4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518308886", "bodyText": "That would be duplicate code right? Since DeviceConfiguration.getNucleusComponentName already gives the name?", "author": "nikkhilmuthye", "createdAt": "2020-11-05T19:27:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTE5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMxNzAzNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518317037", "bodyText": "No, why do you care what the name is? You shouldn't care. All that you want is the Topics reference for it. So just add that, then there's no duplication at all.", "author": "MikeDombo", "createdAt": "2020-11-05T19:37:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTMwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689302", "bodyText": "not true. Don't log this.", "author": "MikeDombo", "createdAt": "2020-11-04T23:22:28Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");", "originalCommit": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTY4MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689681", "bodyText": "full name is not what you want. The full name includes the whole path services.aws.greengrass.Nucleus.parameters.logging.level", "author": "MikeDombo", "createdAt": "2020-11-04T23:23:41Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");\n+            return;\n+        }\n+        LoggerConfiguration configuration2 = LoggerConfiguration.builder().build();\n+        if (WhatHappened.childChanged.equals(what)) {\n+            if (\"level\".equals(loggingParam.getFullName())) {", "originalCommit": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTg2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517689862", "bodyText": "Given this error, I'd doubt that your tests have appropriate coverage.", "author": "MikeDombo", "createdAt": "2020-11-04T23:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5OTg2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517699864", "bodyText": "Will use just the name field. but the test are fine since I am manually creating the topics and then the full name will be the name.", "author": "nikkhilmuthye", "createdAt": "2020-11-04T23:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwMDQ1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517700458", "bodyText": "No, that shows that your test isn't using it in a realistic fashion.", "author": "MikeDombo", "createdAt": "2020-11-04T23:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTY4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MTczNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517691736", "bodyText": "don't trigger only on childchanged, this won't work when the subscription is first added. Just ignore the whathappened and read directly from the config store. Ignore what and loggingParam", "author": "MikeDombo", "createdAt": "2020-11-04T23:29:21Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");\n+            return;\n+        }\n+        LoggerConfiguration configuration2 = LoggerConfiguration.builder().build();\n+        if (WhatHappened.childChanged.equals(what)) {", "originalCommit": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5MTg1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r517691853", "bodyText": "only reconfigure if something changed.", "author": "MikeDombo", "createdAt": "2020-11-04T23:29:43Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +63,41 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    private static void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            logger.atInfo().log(\"No logging configuration configured\");\n+            return;\n+        }\n+        LoggerConfiguration configuration2 = LoggerConfiguration.builder().build();\n+        if (WhatHappened.childChanged.equals(what)) {\n+            if (\"level\".equals(loggingParam.getFullName())) {\n+                configuration2.setLevel(Level.valueOf(Coerce.toString(loggingParam.toPOJO())));\n+            }\n+            if (\"fileSizeKB\".equals(loggingParam.getFullName())) {\n+                configuration2.setFileSizeKB(Coerce.toLong(loggingParam.toPOJO()));\n+            }\n+            if (\"totalLogsSizeKB\".equals(loggingParam.getFullName())) {\n+                configuration2.setTotalLogsSizeKB(Coerce.toLong(loggingParam.toPOJO()));\n+            }\n+            if (\"format\".equals(loggingParam.getFullName())) {\n+                configuration2.setFormat(LogFormat.valueOf(Coerce.toString(loggingParam.toPOJO())));\n+            }\n+            if (\"outputDirectory\".equals(loggingParam.getFullName())) {\n+                configuration2.setOutputDirectory(Coerce.toString(loggingParam.toPOJO()));\n+            }\n+            if (\"outputType\".equals(loggingParam.getFullName())) {\n+                configuration2.setOutputType(LogStore.valueOf(Coerce.toString(loggingParam.toPOJO())));\n+            }\n+        }\n+        LogManager.reconfigureAllLoggers(configuration2);", "originalCommit": "f826567c31b656de9b88ce042dcbf5f7d3acdd9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "223a4507d82aca1b5d234f3a08cbdc61425e4c36", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/223a4507d82aca1b5d234f3a08cbdc61425e4c36", "message": "Address PR comments.", "committedDate": "2020-11-05T06:28:27Z", "type": "forcePushed"}, {"oid": "f207defb936280f5767b8c1fe66e0502afa6af62", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f207defb936280f5767b8c1fe66e0502afa6af62", "message": "Address PR comments.", "committedDate": "2020-11-05T16:29:21Z", "type": "forcePushed"}, {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "message": "Address PR comments.", "committedDate": "2020-11-05T18:05:16Z", "type": "commit"}, {"oid": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "message": "Address PR comments.", "committedDate": "2020-11-05T18:05:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5NjcxOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518296719", "bodyText": "remove this check now that you are reading directly.", "author": "MikeDombo", "createdAt": "2020-11-05T19:11:56Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +72,64 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    @SuppressWarnings(\"PMD.UselessParentheses\")\n+    static synchronized void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            return;\n+        }", "originalCommit": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5NjczNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518296736", "bodyText": "your frompojo can throw stuff, you should handle that.", "author": "MikeDombo", "createdAt": "2020-11-05T19:11:58Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +72,64 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    @SuppressWarnings(\"PMD.UselessParentheses\")\n+    static synchronized void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingParam == null) {\n+            return;\n+        }\n+        LoggerConfiguration configuration = fromPojo(loggingTopics.toPOJO());", "originalCommit": "41ac3adbbc3cb87571b852a9685fc042e5cbc6c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "757d950910682700fb54201c13e3d815c9e0dd06", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/757d950910682700fb54201c13e3d815c9e0dd06", "message": "Address PR comments.", "committedDate": "2020-11-05T21:09:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3MDAwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518370002", "bodyText": "remove this check", "author": "MikeDombo", "createdAt": "2020-11-05T21:15:59Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -38,11 +65,76 @@ public static Logger getComponentLogger(GreengrassService service) {\n     /**\n      * Get the logger for a particular component. The logs will be added to the log file name provided in the method\n      * signature if the logs are configured to be written to the disk.\n-     * @param name      The name of the component\n-     * @param fileName  The name of the log file.\n+     *\n+     * @param name     The name of the component\n+     * @param fileName The name of the log file.\n      * @return a logger with configuration to log to a los file with the same name.\n      */\n     private static Logger getComponentLogger(String name, String fileName) {\n         return LogManager.getLogger(name, LoggerConfiguration.builder().fileName(fileName).build());\n     }\n+\n+    @SuppressWarnings(\"PMD.UselessParentheses\")\n+    static synchronized void handleLoggingConfigurationChanges(WhatHappened what, Node loggingParam) {\n+        if (loggingTopics == null) {\n+            return;\n+        }", "originalCommit": "757d950910682700fb54201c13e3d815c9e0dd06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3MTU2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518371560", "bodyText": "You're having to do a lot because of the static nature of this. Can you check the usage of this class and see if you can just make it non-static. That should reduce a lot of the funkiness.", "author": "MikeDombo", "createdAt": "2020-11-05T21:17:22Z", "path": "src/main/java/com/aws/greengrass/lifecyclemanager/LogManagerHelper.java", "diffHunk": "@@ -5,26 +5,53 @@\n \n package com.aws.greengrass.lifecyclemanager;\n \n+import com.aws.greengrass.config.Node;\n+import com.aws.greengrass.config.Topics;\n+import com.aws.greengrass.config.WhatHappened;\n+import com.aws.greengrass.deployment.DeviceConfiguration;\n import com.aws.greengrass.logging.api.Logger;\n import com.aws.greengrass.logging.impl.LogManager;\n+import com.aws.greengrass.logging.impl.config.LogFormat;\n+import com.aws.greengrass.logging.impl.config.LogStore;\n import com.aws.greengrass.logging.impl.config.model.LoggerConfiguration;\n+import com.aws.greengrass.util.Coerce;\n+import org.slf4j.event.Level;\n+\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+import java.util.Map;\n+import java.util.Objects;\n \n /**\n  * Helper function to get a logger with configurations separate from the root logger.\n  */\n public final class LogManagerHelper {\n-    static final String KERNEL_CONFIG_LOGGING_TOPICS = \"logging\";\n     static final String SERVICE_CONFIG_LOGGING_TOPICS = \"ComponentLogging\";\n     private static final String LOG_FILE_EXTENSION = \".log\";\n+    private static Topics loggingTopics;\n+    private static Kernel kernel;\n+    private static LoggerConfiguration currentConfiguration;\n+    private static final Logger logger = LogManager.getLogger(LogManagerHelper.class);\n \n     private LogManagerHelper() {\n     }\n \n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    public static void handleLoggingConfig(Kernel kernel) {", "originalCommit": "757d950910682700fb54201c13e3d815c9e0dd06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a8b7a72baf9d42417b6c57571a621c88beaa2390", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a8b7a72baf9d42417b6c57571a621c88beaa2390", "message": "Address PR comments.", "committedDate": "2020-11-06T00:42:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2MTI4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518461282", "bodyText": "now that this isn't static, remove the kernel as a parameter from all of these.", "author": "MikeDombo", "createdAt": "2020-11-06T00:58:43Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -162,9 +189,48 @@ private void initializeNucleusComponentConfig() {\n         mainDependencies.add(DEFAULT_NUCLEUS_COMPONENT_NAME);\n         kernel.getConfig().lookup(SERVICES_NAMESPACE_TOPIC, MAIN_SERVICE_NAME, SERVICE_DEPENDENCIES_NAMESPACE_TOPIC)\n                 .dflt(mainDependencies);\n+        handleLoggingConfig(kernel);\n     }\n \n-    private String getComponentType(String serviceName) {\n+    /**\n+     * Handles subscribing and reconfiguring logger based on the correct topic.\n+     * @param kernel {@link Kernel}\n+     */\n+    private void handleLoggingConfig(Kernel kernel) {", "originalCommit": "a8b7a72baf9d42417b6c57571a621c88beaa2390", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2MTQ4NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518461484", "bodyText": "I think you can undo all these changes now", "author": "MikeDombo", "createdAt": "2020-11-06T00:59:20Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -135,20 +154,28 @@ public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoi\n         validate();\n     }\n \n+    /**\n+     * Get the logging configuration.\n+     * @param kernel    {@link Kernel}\n+     * @return  Configuration for logger.\n+     */\n+    public Topics getLoggingConfigurationTopic(Kernel kernel) {\n+        return kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, getNucleusComponentName(kernel).getLeft(),\n+                CONFIGURATION_CONFIG_KEY, NUCLEUS_CONFIG_LOGGING_TOPICS);\n+    }\n+\n     /**\n      * Get the Nucleus component name to lookup the configuration in the right place. If no component of type Nucleus\n      * exists, create service config for the default Nucleus component.\n+     * @param kernel {@link Kernel}\n      */\n-    private String getNucleusComponentName() {\n+    private Pair<String, Boolean> getNucleusComponentName(Kernel kernel) {", "originalCommit": "a8b7a72baf9d42417b6c57571a621c88beaa2390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2OTA5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518469093", "bodyText": "Why not get rid of these changes?\nWas the old implementation wrong?", "author": "MikeDombo", "createdAt": "2020-11-06T01:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2MTQ4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3MTEyNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518471127", "bodyText": "Missed that. Will revert.", "author": "nikkhilmuthye", "createdAt": "2020-11-06T01:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2MTQ4NA=="}], "type": "inlineReview"}, {"oid": "c2a860f583400669b1a40acfade23e7ed1e538e7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c2a860f583400669b1a40acfade23e7ed1e538e7", "message": "Address PR comments.", "committedDate": "2020-11-06T01:12:32Z", "type": "commit"}, {"oid": "411de9406c4d109527dd75605a458394370f47e7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/411de9406c4d109527dd75605a458394370f47e7", "message": "Address PR comments.", "committedDate": "2020-11-06T01:40:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk1MDIxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518950218", "bodyText": "change back?", "author": "hui-yang", "createdAt": "2020-11-06T19:09:29Z", "path": "pom.xml", "diffHunk": "@@ -96,7 +96,7 @@\n         <dependency>\n             <groupId>com.aws.greengrass</groupId>\n             <artifactId>logging</artifactId>\n-            <version>0.0.0-SNAPSHOT</version>\n+            <version>0.0.0-moveloggingcofig-SNAPSHOT</version>", "originalCommit": "411de9406c4d109527dd75605a458394370f47e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk1MTA5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r518951093", "bodyText": "nit: define these constants in logging repo", "author": "hui-yang", "createdAt": "2020-11-06T19:11:20Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -417,5 +478,38 @@ private void validateDeviceConfiguration(String thingName, String certificateFil\n         }\n     }\n \n-\n+    /**\n+     * Get the logger configuration from POJO.\n+     * @param pojoMap   The map containing logger configuration.\n+     * @return  the logger configuration.\n+     * @throws IllegalArgumentException if the POJO map has an invalid argument.\n+     */\n+    private LoggerConfiguration fromPojo(Map<String, Object> pojoMap) {\n+        LoggerConfiguration configuration = LoggerConfiguration.builder().build();\n+        pojoMap.forEach((s, o) -> {\n+            switch (s) {\n+                case \"level\":", "originalCommit": "411de9406c4d109527dd75605a458394370f47e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "646873c4a88a9c5430f8d17a3956afd4f3625c95", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/646873c4a88a9c5430f8d17a3956afd4f3625c95", "message": "Merge branch 'master' into moveloggingcofig", "committedDate": "2020-11-10T17:12:32Z", "type": "commit"}, {"oid": "072fb79d4d92077c36e223b4bc4a98848895a233", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/072fb79d4d92077c36e223b4bc4a98848895a233", "message": "Revert back to use normal logging version dependency in pom.", "committedDate": "2020-11-10T17:22:27Z", "type": "commit"}, {"oid": "ab7f44c71e49a4be144a53bc50cb426a8bb199b6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ab7f44c71e49a4be144a53bc50cb426a8bb199b6", "message": "Merge branch 'master' into moveloggingcofig", "committedDate": "2020-11-10T23:02:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNzIzNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r520937235", "bodyText": "use getTopics(NUCLEUS_CONFIG_LOGGING_TOPICS)", "author": "MikeDombo", "createdAt": "2020-11-10T23:22:16Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -136,14 +150,24 @@ public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoi\n         validate();\n     }\n \n+    /**\n+     * Get the logging configuration.\n+     * @return  Configuration for logger.\n+     */\n+    public Topics getLoggingConfigurationTopic() {\n+        return kernel.getConfig().lookupTopics(SERVICES_NAMESPACE_TOPIC, this.nucleusComponentName,", "originalCommit": "ab7f44c71e49a4be144a53bc50cb426a8bb199b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNzM4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/614#discussion_r520937386", "bodyText": "rename to topics", "author": "MikeDombo", "createdAt": "2020-11-10T23:22:38Z", "path": "src/main/java/com/aws/greengrass/deployment/DeviceConfiguration.java", "diffHunk": "@@ -136,14 +150,24 @@ public DeviceConfiguration(Kernel kernel, String thingName, String iotDataEndpoi\n         validate();\n     }\n \n+    /**\n+     * Get the logging configuration.\n+     * @return  Configuration for logger.\n+     */\n+    public Topics getLoggingConfigurationTopic() {", "originalCommit": "ab7f44c71e49a4be144a53bc50cb426a8bb199b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f69c6bcb78ff626cdd30a6a0a8eb60fc5ac2c53", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4f69c6bcb78ff626cdd30a6a0a8eb60fc5ac2c53", "message": "Address PR comments.", "committedDate": "2020-11-11T00:47:23Z", "type": "commit"}, {"oid": "8e01c7931d4c1f147c6f6c8923a05802781a49bb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8e01c7931d4c1f147c6f6c8923a05802781a49bb", "message": "Merge branch 'master' into moveloggingcofig", "committedDate": "2020-11-11T01:07:34Z", "type": "commit"}]}