{"pr_number": 118, "pr_title": "Upload JMH performance benchmark results to CloudWatch", "pr_createdAt": "2020-03-17T22:07:26Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/118", "timeline": [{"oid": "9ba2c95a50de6a306d3a9ca82add46709358c80a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9ba2c95a50de6a306d3a9ca82add46709358c80a", "message": "Upload JMH performance benchmark results to CloudWatch\n\nCreates CloudWatch dashboard automatically from JMH and annotates\nwith the last 50 commits to master.", "committedDate": "2020-03-17T22:35:42Z", "type": "forcePushed"}, {"oid": "6e97b9037a7b978dd086732b1cfb23bb8654899c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6e97b9037a7b978dd086732b1cfb23bb8654899c", "message": "Upload JMH performance benchmark results to CloudWatch\n\nCreates CloudWatch dashboard automatically from JMH and annotates\nwith the last 50 commits to master.", "committedDate": "2020-03-17T22:45:36Z", "type": "forcePushed"}, {"oid": "1f4771e5ec46f5e048b78d51f9e6f16dc3e81838", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1f4771e5ec46f5e048b78d51f9e6f16dc3e81838", "message": "Upload JMH performance benchmark results to CloudWatch\n\nCreates CloudWatch dashboard automatically from JMH and annotates\nwith the last 50 commits to master.", "committedDate": "2020-03-17T22:56:36Z", "type": "forcePushed"}, {"oid": "9b2c51f8c852210634a7be0936b9dcde3b40ffe7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9b2c51f8c852210634a7be0936b9dcde3b40ffe7", "message": "Upload JMH performance benchmark results to CloudWatch\n\nCreates CloudWatch dashboard automatically from JMH and annotates\nwith the last 50 commits to master.", "committedDate": "2020-03-17T23:30:31Z", "type": "commit"}, {"oid": "9b2c51f8c852210634a7be0936b9dcde3b40ffe7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9b2c51f8c852210634a7be0936b9dcde3b40ffe7", "message": "Upload JMH performance benchmark results to CloudWatch\n\nCreates CloudWatch dashboard automatically from JMH and annotates\nwith the last 50 commits to master.", "committedDate": "2020-03-17T23:30:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1MjcyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/118#discussion_r394052724", "bodyText": "What account does this upload the metrics to and create the dashboard in? how are the credentials picked up?", "author": "shaguptashaikh", "createdAt": "2020-03-18T01:02:15Z", "path": ".github/workflows/benchmark.yaml", "diffHunk": "@@ -33,7 +33,18 @@ jobs:\n           -rf json\n           -f 5\n           -wi 0\n-          -jvmArgs \"-Xms1m -XX:MaxHeapFreeRatio=10 -XX:MinHeapFreeRatio=5 -XX:GCTimeRatio=19\n+          -jvmArgs \"-Xms1m -Xmx128m -XX:MaxHeapFreeRatio=10 -XX:MinHeapFreeRatio=5 -XX:GCTimeRatio=19\n           -XX:NativeMemoryTracking=summary -Xss232k\"\n           -prof com.aws.iot.evergreen.jmh.profilers.ForcedGcMemoryProfiler\n           -i 1\n+          -bm avgt\n+      - name: Upload JMH Result\n+        uses: actions/upload-artifact@v1.0.0\n+        with:\n+          name: JMH Report\n+          path: jmh-result.json\n+      - name: Upload to CloudWatch\n+        run: >-\n+          pip3 -q install boto3 setuptools wheel &&\n+          pip3 -q install retryable PyGithub &&\n+          python3 .github/scripts/cwJMHUpload.py", "originalCommit": "9b2c51f8c852210634a7be0936b9dcde3b40ffe7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1MzY2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/118#discussion_r394053669", "bodyText": "IoT-evergreen-dev. Credentials are in Github secrets. We're using an AWS provided action to set the environment variables with those values.", "author": "MikeDombo", "createdAt": "2020-03-18T01:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1MjcyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxMTgzMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/118#discussion_r394511831", "bodyText": "can a report have benchmarks from a push request and a pull request? are we doing anything for pull requests?", "author": "fahadmohammed01", "createdAt": "2020-03-18T17:16:12Z", "path": ".github/scripts/cwJMHUpload.py", "diffHunk": "@@ -0,0 +1,184 @@\n+#  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+#  SPDX-License-Identifier: Apache-2.0\n+\n+\"\"\"\n+Script to upload test metrics to CloudWatch\n+\"\"\"\n+import json\n+import os\n+import subprocess\n+\n+import boto3\n+\n+try:\n+    # Try getting type hints when developing but we don't need it in prod\n+    from boto3_type_annotations.cloudwatch import Client\n+except:\n+    pass\n+from retryable import retry\n+\n+\n+def batch(iterable, batch_size=1):\n+    length = len(iterable)\n+    for index in range(0, length, batch_size):\n+        yield iterable[index:min(index + batch_size, length)]\n+\n+\n+@retry()\n+def put_metrics_retryable(cw, namespace, datapoints):\n+    # Returns None, will throw if an error occurs\n+    cw.put_metric_data(\n+        Namespace=namespace,\n+        MetricData=datapoints\n+    )\n+\n+\n+@retry()\n+def put_dashboard_retryable(cw, dashboard_name, dashboard_data):\n+    cw.put_dashboard(DashboardName=dashboard_name, DashboardBody=json.dumps(dashboard_data))\n+\n+\n+def convert_units(input_unit):\n+    \"\"\"\n+    Convert units into CloudWatch understandable units.\n+    \"\"\"\n+    input_unit = input_unit.lower()\n+    if input_unit == \"s/op\":\n+        return \"Seconds\"\n+    elif input_unit == \"bytes\" or input_unit == \"byte\":\n+        return \"Bytes\"\n+    elif input_unit == \"op/s\":\n+        return \"Count/Second\"\n+    elif input_unit == \"ms\":\n+        return \"Milliseconds\"\n+    else:\n+        print(\"Unknown unit type\", input_unit)\n+\n+\n+def main():\n+    namespace = \"Evergreen/Benchmark\"\n+    with open(\"jmh-result.json\", \"r\") as f:\n+        report = json.load(f)\n+\n+    cw = boto3.client(\"cloudwatch\")  # type: Client\n+    datapoints = []\n+    event_type = os.getenv(\"GITHUB_EVENT_NAME\", \"pull_request\")\n+    secondary_metric_names = []\n+\n+    # Generate CloudWatch metrics from our benchmarks\n+    for benchmark in report:\n+        dims = [\n+            {\n+                \"Name\": \"Benchmark\",\n+                \"Value\": benchmark[\"benchmark\"]\n+            },\n+            {\n+                \"Name\": \"GitHub Event\",\n+                \"Value\": event_type\n+            }\n+        ]\n+        datapoints.append({\n+            \"MetricName\": \"ExecutionTime\",\n+            \"Value\": benchmark[\"primaryMetric\"][\"score\"],\n+            \"Dimensions\": dims,\n+            \"Unit\": convert_units(benchmark[\"primaryMetric\"][\"scoreUnit\"])\n+        })\n+        if \"secondaryMetrics\" in benchmark:\n+            for metric_name, values in benchmark[\"secondaryMetrics\"].items():\n+                datapoints.append({\n+                    \"MetricName\": metric_name,\n+                    \"Value\": values[\"score\"],\n+                    \"Unit\": convert_units(values[\"scoreUnit\"]),\n+                    \"Dimensions\": dims\n+                })\n+                secondary_metric_names.append(metric_name)\n+\n+    if event_type == \"push\":", "originalCommit": "9b2c51f8c852210634a7be0936b9dcde3b40ffe7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxMzM0MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/118#discussion_r394513340", "bodyText": "We could, right now we're not doing anything for pulls. I think we'd want a slightly different solution for pull requests (ie. run fewer benchmarks/fewer times so it doesn't take a long time), so I want to keep that in a separate change for now.", "author": "MikeDombo", "createdAt": "2020-03-18T17:18:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxMTgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxOTU1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/118#discussion_r394519558", "bodyText": "if not \"push\" event, the benchmark isn't used?", "author": "ShirleyZheng92", "createdAt": "2020-03-18T17:27:52Z", "path": ".github/scripts/cwJMHUpload.py", "diffHunk": "@@ -0,0 +1,184 @@\n+#  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+#  SPDX-License-Identifier: Apache-2.0\n+\n+\"\"\"\n+Script to upload test metrics to CloudWatch\n+\"\"\"\n+import json\n+import os\n+import subprocess\n+\n+import boto3\n+\n+try:\n+    # Try getting type hints when developing but we don't need it in prod\n+    from boto3_type_annotations.cloudwatch import Client\n+except:\n+    pass\n+from retryable import retry\n+\n+\n+def batch(iterable, batch_size=1):\n+    length = len(iterable)\n+    for index in range(0, length, batch_size):\n+        yield iterable[index:min(index + batch_size, length)]\n+\n+\n+@retry()\n+def put_metrics_retryable(cw, namespace, datapoints):\n+    # Returns None, will throw if an error occurs\n+    cw.put_metric_data(\n+        Namespace=namespace,\n+        MetricData=datapoints\n+    )\n+\n+\n+@retry()\n+def put_dashboard_retryable(cw, dashboard_name, dashboard_data):\n+    cw.put_dashboard(DashboardName=dashboard_name, DashboardBody=json.dumps(dashboard_data))\n+\n+\n+def convert_units(input_unit):\n+    \"\"\"\n+    Convert units into CloudWatch understandable units.\n+    \"\"\"\n+    input_unit = input_unit.lower()\n+    if input_unit == \"s/op\":\n+        return \"Seconds\"\n+    elif input_unit == \"bytes\" or input_unit == \"byte\":\n+        return \"Bytes\"\n+    elif input_unit == \"op/s\":\n+        return \"Count/Second\"\n+    elif input_unit == \"ms\":\n+        return \"Milliseconds\"\n+    else:\n+        print(\"Unknown unit type\", input_unit)\n+\n+\n+def main():\n+    namespace = \"Evergreen/Benchmark\"\n+    with open(\"jmh-result.json\", \"r\") as f:\n+        report = json.load(f)\n+\n+    cw = boto3.client(\"cloudwatch\")  # type: Client\n+    datapoints = []\n+    event_type = os.getenv(\"GITHUB_EVENT_NAME\", \"pull_request\")\n+    secondary_metric_names = []\n+\n+    # Generate CloudWatch metrics from our benchmarks\n+    for benchmark in report:", "originalCommit": "9b2c51f8c852210634a7be0936b9dcde3b40ffe7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUyMjEzOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/118#discussion_r394522139", "bodyText": "Currently the benchmark CI action only ever runs on push. The check in the script is just for extra safety so that if we expand the CI to run on pull requests too, it won't upload metrics as if it was pushed to master.", "author": "MikeDombo", "createdAt": "2020-03-18T17:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxOTU1OA=="}], "type": "inlineReview"}]}