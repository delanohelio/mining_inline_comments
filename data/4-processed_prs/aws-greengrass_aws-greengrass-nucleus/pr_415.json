{"pr_number": 415, "pr_title": "add beta install script for linux", "pr_createdAt": "2020-09-08T16:26:32Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415", "timeline": [{"oid": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "message": "add beta install script for linux", "committedDate": "2020-09-08T17:09:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NjI0NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485166244", "bodyText": "Why do we force AWS_SESSION_TOKEN? I think that's only required if that are assumed roles involved (ie: optional if a static key / secret is used as an IAM user)", "author": "philcali", "createdAt": "2020-09-08T20:05:22Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then\n+  echo \"Failed. Please set AWS credentials in your shell\"\n+  exit 1\n+fi", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3MzU1NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485173554", "bodyText": "You're right! We shouldn't force the token.", "author": "tilo-chen", "createdAt": "2020-09-08T20:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NjI0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NjUyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485166522", "bodyText": "Should these be inputs to the script or reasonable defaults?", "author": "philcali", "createdAt": "2020-09-08T20:05:55Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then\n+  echo \"Failed. Please set AWS credentials in your shell\"\n+  exit 1\n+fi\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }\n+  cd \"$INSTALLER_DIR\"\n+fi\n+\n+# copy over HTTP jar\n+mkdir -p \"$HTTP_INSTALL_DIR\"\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+\n+# run Greengrass2\n+echo 'Starting Greengrass2'\n+java -Droot=\"$GG_ROOT_DIR\" -Dlog.level=ERROR -jar \"$KERNEL_DIR/lib/Greengrass.jar\" \\\n+    --provision true --aws-region us-east-1 \\\n+    --thing-name TiloTestDevice0 \\\n+    --setup-tes true -tra tiloTestRoleAlias", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3NDg2MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485174860", "bodyText": "Working on accept input with default value like \"MyIotRoleForTes\"", "author": "tilo-chen", "createdAt": "2020-09-08T20:22:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NjUyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NzM2MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485167361", "bodyText": "Why are we including the commit hash here?", "author": "philcali", "createdAt": "2020-09-08T20:07:37Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NzQ1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485167453", "bodyText": "Why are we including the commit hash here?", "author": "philcali", "createdAt": "2020-09-08T20:07:49Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3MTM2Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485171363", "bodyText": "Just to note that this script works for that build... will change to the final name", "author": "tilo-chen", "createdAt": "2020-09-08T20:15:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2NzQ1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3NjIwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485176200", "bodyText": "should not force these at all. Credentials can also come from EC2 or from a profile file. The kernel handles all those scenarios, so I'd just allow it to complain if there's a problem", "author": "MikeDombo", "createdAt": "2020-09-08T20:25:22Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNTMxNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485915317", "bodyText": "Is it intentional to append 2?", "author": "hui-yang", "createdAt": "2020-09-09T20:53:02Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkyMzIxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485923218", "bodyText": "Yeah... but we probably don't need \"2\" to distinguish it because 1 won't create a working directory", "author": "tilo-chen", "createdAt": "2020-09-09T21:09:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNTMxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNTU1MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485915551", "bodyText": "Can we make it work with /bin/sh?", "author": "hui-yang", "createdAt": "2020-09-09T20:53:28Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkyNzYwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485927604", "bodyText": "that would be most generalizable. CLI install/run scripts all use bash for now. we should change those as well", "author": "tilo-chen", "createdAt": "2020-09-09T21:18:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNTU1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNzE2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r485917164", "bodyText": "Do we need bash? Probably should add a followup for this", "author": "hui-yang", "createdAt": "2020-09-09T20:56:31Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+# Sep 4, 2020 5:37:36 PM GMT-0400\n+KERNEL_DIR=\"aws-greengrass-248256ad1d9c1c636a7910a332f13e588b66af27\"\n+# 79011c549a3f29167fe36dc53936aa7ded8eff4a Sep 3, 2020 4:57:16 PM GMT-0400\n+CLI_DIR=\"aws-greengrass-cli-1.0-SNAPSHOT\"\n+# Sep 4, 2020 1:18:52 PM GMT-0400\n+HTTP_JAR=\"aws-greengrass-http-03d5e8465816c40259932ed3747786c5c4a3570d.jar\"\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# check credentials are set\n+if [ -z \"$AWS_ACCESS_KEY_ID\" ] || [ -z \"$AWS_SECRET_ACCESS_KEY\" ] || [ -z \"$AWS_SESSION_TOKEN\" ]; then\n+  echo \"Failed. Please set AWS credentials in your shell\"\n+  exit 1\n+fi\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }", "originalCommit": "f7b3aaca379f36f3fb1ad4eac90ff4be13a01e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MTk2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489771968", "bodyText": "Should be using /bin/sh", "author": "MikeDombo", "createdAt": "2020-09-16T21:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNzE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MjI4OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489772289", "bodyText": "why only ERROR? I'd prefer INFO, or at the very least WARN.", "author": "MikeDombo", "createdAt": "2020-09-16T21:45:10Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+KERNEL_DIR=\"aws-greengrass\"\n+CLI_DIR=\"aws-greengrass-cli\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# provision name defaults\n+thing_name=\"MyIotThing\"\n+iot_policy_name=\"MyIotThingPolicy\"\n+tes_role_name=\"MyIotRoleForTes\"\n+tes_role_alias=\"MyIotRoleAliasForTes\"\n+\n+CUSTOMIZE=false\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -c|--customize)\n+    CUSTOMIZE=true\n+    shift\n+    ;;\n+    -tn|--thing-name)\n+    thing_name=$2\n+    shift\n+    ;;\n+  esac\n+done\n+\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }\n+  cd \"$INSTALLER_DIR\"\n+else\n+  echo \"Greengrass CLI already installed\"\n+fi\n+\n+# prompt user inputs if customize is set\n+echo 'Later we will provision the device by creating required IoT/IAM roles and policies'\n+if \"$CUSTOMIZE\"; then\n+  echo 'Please provide input (press Enter to accept [default]):'\n+\n+  curr_default_val=$thing_name\n+  printf \"IoT Thing name [%s]: \" \"$curr_default_val\"\n+  read -r thing_name\n+  thing_name=${thing_name:-$curr_default_val}\n+\n+  curr_default_val=$iot_policy_name\n+  printf \"IoT policy name [%s]: \" \"$curr_default_val\"\n+  read -r iot_policy_name\n+  iot_policy_name=${iot_policy_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_name\n+  printf \"TES IAM role name [%s]: \" $curr_default_val\n+  read -r  tes_role_name\n+  tes_role_name=${tes_role_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_alias\n+  printf \"TES IoT role alias [%s]: \" $curr_default_val\n+  read -r tes_role_alias\n+  tes_role_alias=${tes_role_alias:-$curr_default_val}\n+else\n+  echo 'Using defaults for provisioning'\n+fi\n+\n+# copy over HTTP jar\n+mkdir -p \"$HTTP_INSTALL_DIR\"\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+\n+# run Greengrass\n+echo 'Starting Greengrass'\n+java -Droot=\"$GG_ROOT_DIR\" -Dlog.level=ERROR -jar \"$KERNEL_DIR/lib/Greengrass.jar\" \\", "originalCommit": "6936f6713a41019568262d975435380cfb60bfce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MjcwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489772704", "bodyText": "So, the customer needs to unzip the kernel zip file and put it in the proper location in order for this script to work?", "author": "MikeDombo", "createdAt": "2020-09-16T21:46:06Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+KERNEL_DIR=\"aws-greengrass\"\n+CLI_DIR=\"aws-greengrass-cli\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# provision name defaults\n+thing_name=\"MyIotThing\"\n+iot_policy_name=\"MyIotThingPolicy\"\n+tes_role_name=\"MyIotRoleForTes\"\n+tes_role_alias=\"MyIotRoleAliasForTes\"\n+\n+CUSTOMIZE=false\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -c|--customize)\n+    CUSTOMIZE=true\n+    shift\n+    ;;\n+    -tn|--thing-name)\n+    thing_name=$2\n+    shift\n+    ;;\n+  esac\n+done\n+\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  cd \"$CLI_DIR\"\n+  bash install.sh || { echo 'CLI installation failed'; exit 1; }\n+  cd \"$INSTALLER_DIR\"\n+else\n+  echo \"Greengrass CLI already installed\"\n+fi\n+\n+# prompt user inputs if customize is set\n+echo 'Later we will provision the device by creating required IoT/IAM roles and policies'\n+if \"$CUSTOMIZE\"; then\n+  echo 'Please provide input (press Enter to accept [default]):'\n+\n+  curr_default_val=$thing_name\n+  printf \"IoT Thing name [%s]: \" \"$curr_default_val\"\n+  read -r thing_name\n+  thing_name=${thing_name:-$curr_default_val}\n+\n+  curr_default_val=$iot_policy_name\n+  printf \"IoT policy name [%s]: \" \"$curr_default_val\"\n+  read -r iot_policy_name\n+  iot_policy_name=${iot_policy_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_name\n+  printf \"TES IAM role name [%s]: \" $curr_default_val\n+  read -r  tes_role_name\n+  tes_role_name=${tes_role_name:-$curr_default_val}\n+\n+  curr_default_val=$tes_role_alias\n+  printf \"TES IoT role alias [%s]: \" $curr_default_val\n+  read -r tes_role_alias\n+  tes_role_alias=${tes_role_alias:-$curr_default_val}\n+else\n+  echo 'Using defaults for provisioning'\n+fi\n+\n+# copy over HTTP jar\n+mkdir -p \"$HTTP_INSTALL_DIR\"\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+\n+# run Greengrass\n+echo 'Starting Greengrass'\n+java -Droot=\"$GG_ROOT_DIR\" -Dlog.level=ERROR -jar \"$KERNEL_DIR/lib/Greengrass.jar\" \\", "originalCommit": "6936f6713a41019568262d975435380cfb60bfce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc4MzE2NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489783165", "bodyText": "Not only the kernel zip. They need CLI and HTTP.jar in place as well.", "author": "tilo-chen", "createdAt": "2020-09-16T22:12:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MjcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0MTY2Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499041663", "bodyText": "If this is supposed to be \"easy\" then let's not make the customer unzip stuff. Take our current beta kernel artifacts and go from there.", "author": "MikeDombo", "createdAt": "2020-10-02T20:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MjcwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MzA4OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r489773088", "bodyText": "not sure about this.... it will blow away everything, this is very very dangerous and I definitely would not have this be the default experience with no user input", "author": "MikeDombo", "createdAt": "2020-09-16T21:46:58Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,95 @@\n+#!/bin/sh\n+\n+INSTALLER_DIR=\"$(pwd)\"\n+GG_ROOT_DIR=\"$HOME/.greengrass\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+\n+KERNEL_DIR=\"aws-greengrass\"\n+CLI_DIR=\"aws-greengrass-cli\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# provision name defaults\n+thing_name=\"MyIotThing\"\n+iot_policy_name=\"MyIotThingPolicy\"\n+tes_role_name=\"MyIotRoleForTes\"\n+tes_role_alias=\"MyIotRoleAliasForTes\"\n+\n+CUSTOMIZE=false\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -c|--customize)\n+    CUSTOMIZE=true\n+    shift\n+    ;;\n+    -tn|--thing-name)\n+    thing_name=$2\n+    shift\n+    ;;\n+  esac\n+done\n+\n+\n+# make sure files exist\n+for i in $KERNEL_DIR $CLI_DIR $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# remove existing installation if exists\n+if [ -d \"$GG_ROOT_DIR\" ] ; then\n+  echo 'removing old installation'\n+  rm -rf \"$GG_ROOT_DIR\"\n+fi", "originalCommit": "6936f6713a41019568262d975435380cfb60bfce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "22be5a3e313501dc44848dec5eb084e37cb8507a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/22be5a3e313501dc44848dec5eb084e37cb8507a", "message": "add beta install script for linux", "committedDate": "2020-10-02T23:29:25Z", "type": "commit"}, {"oid": "22be5a3e313501dc44848dec5eb084e37cb8507a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/22be5a3e313501dc44848dec5eb084e37cb8507a", "message": "add beta install script for linux", "committedDate": "2020-10-02T23:29:25Z", "type": "forcePushed"}, {"oid": "b9b8f42b5db2b9b004fcdc47e1a3edaf692e5bae", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b9b8f42b5db2b9b004fcdc47e1a3edaf692e5bae", "message": "Merge branch 'master' into beta-script-tc", "committedDate": "2020-10-05T14:48:42Z", "type": "commit"}, {"oid": "b5619bd18eb19f441c5a4dceda974d6dd26c5231", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5619bd18eb19f441c5a4dceda974d6dd26c5231", "message": "minor change", "committedDate": "2020-10-05T17:26:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MTEzMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499761133", "bodyText": "use /bin/sh", "author": "MikeDombo", "createdAt": "2020-10-05T17:32:54Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete existing directory: $GG_ROOT_DIR\"\n+  read -r -p \"Are you sure (y/n)?\" choice\n+  case \"$choice\" in\n+    y|Y ) rm -rf \"$GG_ROOT_DIR\";;\n+    n|N ) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  sudo bash \"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }", "originalCommit": "b5619bd18eb19f441c5a4dceda974d6dd26c5231", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MTY4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499761683", "bodyText": "add an echo \"You can now start Greengrass\", since your script isn't starting it up, it may be a bit confusing.", "author": "MikeDombo", "createdAt": "2020-10-05T17:33:52Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete existing directory: $GG_ROOT_DIR\"\n+  read -r -p \"Are you sure (y/n)?\" choice\n+  case \"$choice\" in\n+    y|Y ) rm -rf \"$GG_ROOT_DIR\";;\n+    n|N ) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if ! type 'greengrass-cli' &> /dev/null; then\n+  echo \"Installing Greengrass CLI\"\n+  sudo bash \"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }\n+else\n+  echo \"Greengrass CLI already installed\"\n+fi\n+\n+# copy over local dashboard jar\n+mkdir -p \"$HTTP_INSTALL_DIR\" || { echo 'Install failed. cannot create local dashboard directory'; exit 1; }\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+echo \"local dashboard installed\"\n+\n+echo \"Installation complete\"", "originalCommit": "b5619bd18eb19f441c5a4dceda974d6dd26c5231", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "74d4350675898ecf91c61b97b7b9e38ef81aafdc", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/74d4350675898ecf91c61b97b7b9e38ef81aafdc", "message": "address comments", "committedDate": "2020-10-05T20:43:19Z", "type": "commit"}, {"oid": "b5998acaf9d44139bb0a45279c24f2f130d6432c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b5998acaf9d44139bb0a45279c24f2f130d6432c", "message": "Merge branch 'master' into beta-script-tc", "committedDate": "2020-10-05T20:47:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MDY1MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499870650", "bodyText": "Maybe want to give them the command to run or -h to display a set of options for bootstrapping.", "author": "philcali", "createdAt": "2020-10-05T21:02:10Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+    -ld|--launch-default)\n+    LAUNCH_WITH_DEFAULT=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete the existing directory: $GG_ROOT_DIR\"\n+  echo \"Are you sure (y/n)?\"\n+  read -r choice\n+  case \"$choice\" in\n+    y|Y) rm -rf \"$GG_ROOT_DIR\";;\n+    *) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if type 'greengrass-cli' > /dev/null 2>&1; then\n+  echo \"Greengrass CLI already installed\"\n+else\n+  echo \"Installing Greengrass CLI\"\n+  sudo ./\"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }\n+fi\n+\n+# copy over local dashboard jar\n+mkdir -p \"$HTTP_INSTALL_DIR\" || { echo 'Install failed. cannot create local dashboard directory'; exit 1; }\n+cp $HTTP_JAR \"$HTTP_INSTALL_DIR/\"\n+echo \"local dashboard installed\"\n+\n+echo \"Installation complete. Installed at: $GG_ROOT_DIR\"\n+\n+if \"$LAUNCH_WITH_DEFAULT\"; then\n+  echo \"Starting Greengrass\"\n+  java -Droot=\"$GG_ROOT_DIR\" -Dlog.store=FILE -jar lib/Greengrass.jar \\\n+    --aws-region \"$AWS_REGION\" --provision true --setup-tes true\n+else\n+  echo \"You can now start Greengrass\"", "originalCommit": "b5998acaf9d44139bb0a45279c24f2f130d6432c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5ODQ3Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499898472", "bodyText": "I think a sample command to run is in the instruction docs which is given along this script?\nLike step 10 of this section: https://alpha-docs-aws.amazon.com/greengrass/v2/developerguide/getting-started.html#install-greengrass-v2", "author": "tilo-chen", "createdAt": "2020-10-05T22:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MDY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0ODkzOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r500448939", "bodyText": "Sure. I guess that's fine.", "author": "philcali", "createdAt": "2020-10-06T16:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MDY1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MTk4OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499871988", "bodyText": "Should this be changed now to avoid a change very soon? Can we bypass this decision by looking 2 directories deep?", "author": "philcali", "createdAt": "2020-10-05T21:05:04Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"", "originalCommit": "b5998acaf9d44139bb0a45279c24f2f130d6432c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5ODQ3OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499898479", "bodyText": "You mean changing evergreen to aws-greengrass?", "author": "tilo-chen", "createdAt": "2020-10-05T22:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MTk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNDI3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499914278", "bodyText": "I suppose that depends on whether evergreen is scrubbed between now and a couple of weeks.", "author": "philcali", "createdAt": "2020-10-05T22:51:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MTk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0OTM2NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r500449365", "bodyText": "Probably not worth fixing right now since the docs will need updating as well.", "author": "philcali", "createdAt": "2020-10-06T16:50:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MTk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNTk1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499915956", "bodyText": "Should this be sudo?", "author": "MikeDombo", "createdAt": "2020-10-05T22:57:13Z", "path": "scripts/install-beta.sh", "diffHunk": "@@ -0,0 +1,84 @@\n+#!/bin/sh\n+# If no options provided, will unzip and install the CLI and local dashboard\n+#\n+# OPTIONS\n+# [-r|--root] <root dir>: specify Greengrass root directory for installation\n+# [-f|--fresh-install]: delete previous Greengrass installation if exists\n+# [-ld|--launch-default]: after install, launch Greengrass with default params for provision and running\n+\n+# defaults\n+GG_ROOT_DIR=\"/greengrass/v2\"\n+HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+FRESH_INSTALL=false\n+LAUNCH_WITH_DEFAULT=false\n+AWS_REGION=\"us-east-1\"\n+\n+# expected files\n+NUCLEUS_ZIP=\"aws.greengrass.nucleus.zip\"\n+CLI_ZIP=\"aws-greengrass-cli.zip\"\n+CLI_DIR=\"evergreen-cli-1.0-SNAPSHOT\"\n+HTTP_JAR=\"aws-greengrass-http.jar\"\n+\n+# make sure required file/directory exist\n+for i in $NUCLEUS_ZIP $CLI_ZIP $HTTP_JAR ; do\n+  if [ ! -e $i ] ; then\n+    echo \"Install failed. $i not found\"\n+    exit 1\n+  fi\n+done\n+\n+# get arguments\n+for arg in \"$@\" ; do\n+  case $arg in\n+    -r|--root)\n+    GG_ROOT_DIR=$2\n+    HTTP_INSTALL_DIR=\"$GG_ROOT_DIR/plugins/trusted\"\n+    shift\n+    ;;\n+    -f|--fresh-install)\n+    FRESH_INSTALL=true\n+    shift\n+    ;;\n+    -ld|--launch-default)\n+    LAUNCH_WITH_DEFAULT=true\n+    shift\n+    ;;\n+  esac\n+done\n+\n+# unzip\n+(unzip $CLI_ZIP && unzip $NUCLEUS_ZIP) || { echo \"Install failed. Cannot unzip\"; exit 1; }\n+\n+# remove existing installation if requested\n+if \"$FRESH_INSTALL\" && [ -d \"$GG_ROOT_DIR\" ]; then\n+  echo \"Attempting fresh install. This will delete the existing directory: $GG_ROOT_DIR\"\n+  echo \"Are you sure (y/n)?\"\n+  read -r choice\n+  case \"$choice\" in\n+    y|Y) rm -rf \"$GG_ROOT_DIR\";;\n+    *) echo \"Aborted.\";;\n+  esac\n+fi\n+\n+# install CLI if not already\n+if type 'greengrass-cli' > /dev/null 2>&1; then\n+  echo \"Greengrass CLI already installed\"\n+else\n+  echo \"Installing Greengrass CLI\"\n+  sudo ./\"$CLI_DIR/install.sh\" || { echo 'Install failed. cannot install CLI'; exit 1; }", "originalCommit": "b5998acaf9d44139bb0a45279c24f2f130d6432c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkzMTMxMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499931312", "bodyText": "CLI install script links to /usr/local/bin/ which requires sudo.\nThis line: https://github.com/aws/aws-greengrass-cli/blob/master/install.sh#L18\nIf we run it without sudo, it'll first do a failed attempt and output \"Permission denied\" then retry with sudo.\nSo might as well just sudo here?", "author": "tilo-chen", "createdAt": "2020-10-05T23:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkzMjQ1Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/415#discussion_r499932452", "bodyText": "No, do not run it as sudo because then the autocomplete won't install. Just run it as normal.", "author": "MikeDombo", "createdAt": "2020-10-05T23:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNTk1Ng=="}], "type": "inlineReview"}, {"oid": "c597c7df806e3dd95011a4eda4c2d5f0c0d0f2c9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c597c7df806e3dd95011a4eda4c2d5f0c0d0f2c9", "message": "Update install-beta.sh", "committedDate": "2020-10-05T23:57:19Z", "type": "commit"}, {"oid": "f6138ca552f48dc0d1dc70a1ab7e102bcae27e3d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f6138ca552f48dc0d1dc70a1ab7e102bcae27e3d", "message": "Merge branch 'master' into beta-script-tc", "committedDate": "2020-10-06T15:14:58Z", "type": "commit"}, {"oid": "84608303fd7b646c918e0dbb897ea6de94591167", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/84608303fd7b646c918e0dbb897ea6de94591167", "message": "Merge branch 'master' into beta-script-tc", "committedDate": "2020-10-06T17:51:59Z", "type": "commit"}]}