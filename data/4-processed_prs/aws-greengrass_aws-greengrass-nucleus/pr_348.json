{"pr_number": 348, "pr_title": "deflake DeploymentConfigMergingTest", "pr_createdAt": "2020-08-04T00:21:18Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348", "timeline": [{"oid": "b602f06f309ae80ca81eccc7e5d621a1dcc80ed6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b602f06f309ae80ca81eccc7e5d621a1dcc80ed6", "message": "deflake DeploymentConfigMergingTest", "committedDate": "2020-08-04T00:12:42Z", "type": "commit"}, {"oid": "d95727f0e4233d5ad23a642cc31ca4f545d4bd8c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d95727f0e4233d5ad23a642cc31ca4f545d4bd8c", "message": "removed outdated comments", "committedDate": "2020-08-04T00:20:53Z", "type": "commit"}, {"oid": "4502e17f3300d1a84598f93144a2f622e55a3d92", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4502e17f3300d1a84598f93144a2f622e55a3d92", "message": "Merge branch 'master' into deflake-tests", "committedDate": "2020-08-04T00:22:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTk5OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464731998", "bodyText": "Why remove this? Isn't this basically the whole point of the test?", "author": "MikeDombo", "createdAt": "2020-08-04T00:31:39Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -408,29 +406,13 @@ void GIVEN_kernel_running_services_WHEN_merge_removes_service_THEN_removed_servi\n         lifecycle.put(LIFECYCLE_RUN_NAMESPACE_TOPIC,\n                 ((String) lifecycle.get(LIFECYCLE_RUN_NAMESPACE_TOPIC)).replace(\"5\", \"10\"));\n \n+        Future<DeploymentResult> deploymentFuture = deploymentConfigMerger.mergeInNewConfig(testDeploymentDocument(), currentConfig);\n \n-        deploymentConfigMerger.mergeInNewConfig(testDeploymentDocument(), currentConfig);\n-        AtomicBoolean isSleeperAClosed = new AtomicBoolean(false);\n-        CountDownLatch mainRestarted = new CountDownLatch(1);\n-        kernel.getContext().addGlobalStateChangeListener((service, oldState, newState) -> {\n-            if (\"sleeperA\".equals(service.getName()) && newState.isClosable()) {\n-                isSleeperAClosed.set(true);\n-            }\n-            if(isSleeperAClosed.get() && \"main\".equals(service.getName()) && newState.equals(State.RUNNING)){\n-                mainRestarted.countDown();\n-            }\n-        });\n-\n-        // wait for merge to complete\n-        //TODO: wait on the future returned by mergeInNewConfig. mainRestarted is required due to race condition\n-        // mentioned in DeploymentConfigMergerL120 is fixed.\n-        mainRestarted.await(30, TimeUnit.SECONDS);\n+        deploymentFuture.get(30, TimeUnit.SECONDS);\n         EvergreenService main = kernel.locate(\"main\");\n         assertEquals(State.RUNNING, main.getState());\n         EvergreenService sleeperB = kernel.locate(\"sleeperB\");\n         assertEquals(State.RUNNING, sleeperB.getState());\n-        //sleeperA should be closed", "originalCommit": "4502e17f3300d1a84598f93144a2f622e55a3d92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0NTAxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464745018", "bodyText": "The test verifies if the service topic name is removed, if the service failed to close that will be present.  Added check to verify deployment status.", "author": "fahadmohammed01", "createdAt": "2020-08-04T01:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTk5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMjI5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464732294", "bodyText": "Should the fix be to move that off of the publish thread?", "author": "MikeDombo", "createdAt": "2020-08-04T00:32:45Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java", "diffHunk": "@@ -64,9 +65,14 @@\n         CompletableFuture<DeploymentResult> totallyCompleteFuture = new CompletableFuture<>();\n \n         if (DeploymentSafetyPolicy.CHECK_SAFETY.equals(deploymentDocument.getDeploymentSafetyPolicy())) {\n-            kernel.getContext().get(UpdateSystemSafelyService.class)\n-                    .addUpdateAction(deploymentDocument.getDeploymentId(),\n-                            () -> updateActionForDeployment(newConfig, deploymentDocument, totallyCompleteFuture));\n+            UpdateSystemSafelyService updateService = kernel.getContext().get(UpdateSystemSafelyService.class);\n+            // running updateActionForDeployment in a separate thread so runOnPublishQueueAndWait would wait.", "originalCommit": "4502e17f3300d1a84598f93144a2f622e55a3d92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0NDA0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464744043", "bodyText": "I am not sure why UpdateSystemSafelyService is run on the publish queue? Do you have more context on this?", "author": "fahadmohammed01", "createdAt": "2020-08-04T01:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMjI5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0NDU3OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464744579", "bodyText": "The idea was that the entire update would be run on the publish thread, but since we're actually having trouble with that now, maybe it should just be changed.", "author": "MikeDombo", "createdAt": "2020-08-04T01:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMjI5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMjQ2Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464732466", "bodyText": "Interesting find. What is the result of not having this change?", "author": "MikeDombo", "createdAt": "2020-08-04T00:33:30Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -316,8 +316,12 @@ public void disruptionCompleted() {\n     @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     public final CompletableFuture<Void> close() {\n         CompletableFuture<Void> closeFuture = new CompletableFuture<>();\n+\n         context.get(Executor.class).execute(() -> {\n             logger.atInfo(\"service-close\").log(\"Service is now closing\");\n+            // removing listeners on dependencies\n+            dependencies.forEach((service, dependencyInfo) ->", "originalCommit": "4502e17f3300d1a84598f93144a2f622e55a3d92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0NDA2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464744069", "bodyText": "Nothing much, the service shutting down will restart when waiting for dependers to exit, if one of its dependencies got updated. Since the lifecycle thread exits, the shutdown service will not be able to restart when the StateSubscriber  triggers.", "author": "fahadmohammed01", "createdAt": "2020-08-04T01:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMjQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0NTEyOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464745128", "bodyText": "Seems like this might fix some other flakiness, so this is good.", "author": "MikeDombo", "createdAt": "2020-08-04T01:23:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMjQ2Ng=="}], "type": "inlineReview"}, {"oid": "53731edcee9a988c57d3f8adaa976c964744985f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/53731edcee9a988c57d3f8adaa976c964744985f", "message": "updated tests", "committedDate": "2020-08-04T01:22:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgwNTE3NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464805175", "bodyText": "Will this still work as expected https://github.com/aws/aws-greengrass-kernel/blob/master/src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java#L80 ? I'm not sure how important this is though, i.e. whether we need to notify services that they can resume normal work", "author": "shaguptashaikh", "createdAt": "2020-08-04T05:18:54Z", "path": "src/main/java/com/aws/iot/evergreen/deployment/DeploymentConfigMerger.java", "diffHunk": "@@ -64,9 +65,14 @@\n         CompletableFuture<DeploymentResult> totallyCompleteFuture = new CompletableFuture<>();\n \n         if (DeploymentSafetyPolicy.CHECK_SAFETY.equals(deploymentDocument.getDeploymentSafetyPolicy())) {\n-            kernel.getContext().get(UpdateSystemSafelyService.class)\n-                    .addUpdateAction(deploymentDocument.getDeploymentId(),\n-                            () -> updateActionForDeployment(newConfig, deploymentDocument, totallyCompleteFuture));\n+            UpdateSystemSafelyService updateService = kernel.getContext().get(UpdateSystemSafelyService.class);\n+            // running updateActionForDeployment in a separate thread so runOnPublishQueueAndWait would wait.\n+            // addUpdateAction is run on publish queue thread and when executing on publish queue thread\n+            // runOnPublishQueueAndWait does not wait.\n+            updateService.addUpdateAction(deploymentDocument.getDeploymentId(), () ->\n+                    kernel.getContext().get(Executor.class).execute(() ->", "originalCommit": "53731edcee9a988c57d3f8adaa976c964744985f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxNjU1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r464816553", "bodyText": "No, that wouldn't work at all because the update task would complete almost immediately. I think we may want to change the update service implementation to not run on the publish queue.", "author": "MikeDombo", "createdAt": "2020-08-04T05:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgwNTE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMjg5Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465232893", "bodyText": "Approving since this will help with intermittent workflow failures, but we need to follow up on if we need to notify services when deployments have finished, and if so, how we can achieve that", "author": "shaguptashaikh", "createdAt": "2020-08-04T18:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgwNTE3NQ=="}], "type": "inlineReview"}, {"oid": "392f8a8ce564a787ed83e40167229423b24ec430", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/392f8a8ce564a787ed83e40167229423b24ec430", "message": "Merge branch 'master' into deflake-tests", "committedDate": "2020-08-04T17:15:24Z", "type": "commit"}, {"oid": "e7c04475fd50f1c48d3c90795f95de07fdc64c31", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/e7c04475fd50f1c48d3c90795f95de07fdc64c31", "message": "update to run update action on executor", "committedDate": "2020-08-04T20:36:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjE1OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465316159", "bodyText": "why not assertEquals? I've never used same, though I'd assume they're the same.", "author": "MikeDombo", "createdAt": "2020-08-04T20:38:25Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -471,10 +472,13 @@ void GIVEN_a_running_service_is_not_disruptable_WHEN_deployed_THEN_deployment_wa\n                     \"Merge should not happen within 2 seconds\");\n             assertTrue(unsafeToUpdate.get(), \"Service should have been checked if it is safe to update immediately\");\n             assertFalse(safeToUpdate.get(), \"Service should not yet be safe to update\");\n+            assertSame(sawUpdatesCompleted.getCount(), 1l,\n+                    \"Service should not call update done yet\");\n \n-            future.get(20, TimeUnit.SECONDS);\n+            sawUpdatesCompleted.await(30, TimeUnit.SECONDS);\n             assertTrue(safeToUpdate.get(), \"Service should have been rechecked and be safe to update\");\n-            assertTrue(sawUpdatesCompleted.get(), \"Service should have been called when the update was done\");\n+            assertSame(sawUpdatesCompleted.getCount(), 0l,", "originalCommit": "e7c04475fd50f1c48d3c90795f95de07fdc64c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyMjA0Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465322042", "bodyText": "same is == while equals uses .equals(). Does not matter much here. Updated", "author": "fahadmohammed01", "createdAt": "2020-08-04T20:49:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjE1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjI3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465316270", "bodyText": "you can just assert true here instead of on L480", "author": "MikeDombo", "createdAt": "2020-08-04T20:38:38Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentConfigMergingTest.java", "diffHunk": "@@ -471,10 +472,13 @@ void GIVEN_a_running_service_is_not_disruptable_WHEN_deployed_THEN_deployment_wa\n                     \"Merge should not happen within 2 seconds\");\n             assertTrue(unsafeToUpdate.get(), \"Service should have been checked if it is safe to update immediately\");\n             assertFalse(safeToUpdate.get(), \"Service should not yet be safe to update\");\n+            assertSame(sawUpdatesCompleted.getCount(), 1l,\n+                    \"Service should not call update done yet\");\n \n-            future.get(20, TimeUnit.SECONDS);\n+            sawUpdatesCompleted.await(30, TimeUnit.SECONDS);", "originalCommit": "e7c04475fd50f1c48d3c90795f95de07fdc64c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyMDY1MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465320651", "bodyText": "updated", "author": "fahadmohammed01", "createdAt": "2020-08-04T20:47:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjI3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjU0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465316543", "bodyText": "this doesn't log anything. You need to have .log()", "author": "MikeDombo", "createdAt": "2020-08-04T20:39:11Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java", "diffHunk": "@@ -139,11 +141,15 @@ protected void startup() throws InterruptedException {\n                 Thread.sleep(maxt - now);\n             } else {\n                 logger.atDebug().setEventType(\"service-update-scheduled\").log();\n-                context.runOnPublishQueueAndWait(() -> {\n-                    logger.atInfo().setEventType(\"service-update-start\").log();\n-                    runUpdateActions();\n-                    logger.atInfo().setEventType(\"service-update-finish\").log();\n-                });\n+                try {\n+                    kernel.getContext().get(ExecutorService.class).submit(() -> {\n+                        logger.atInfo().setEventType(\"service-update-start\").log();\n+                        runUpdateActions();\n+                        logger.atInfo().setEventType(\"service-update-finish\").log();\n+                    }).get();\n+                } catch (InterruptedException | ExecutionException e) {\n+                    logger.atError(\"Run update actions was interrupted\", e);", "originalCommit": "e7c04475fd50f1c48d3c90795f95de07fdc64c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNzA4OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465317088", "bodyText": "and atError is (<event type>, <exception>)", "author": "MikeDombo", "createdAt": "2020-08-04T20:40:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyMDY3Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465320677", "bodyText": "updated", "author": "fahadmohammed01", "createdAt": "2020-08-04T20:47:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjU0Mw=="}], "type": "inlineReview"}, {"oid": "04358bc8a593e42bb5822065525fa426f75d715c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/04358bc8a593e42bb5822065525fa426f75d715c", "message": "addressed comments", "committedDate": "2020-08-04T20:51:09Z", "type": "commit"}, {"oid": "c0fb8ed09b97df5e034fd80602a8f2ff44127bd7", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c0fb8ed09b97df5e034fd80602a8f2ff44127bd7", "message": "fixed pmd issue", "committedDate": "2020-08-04T21:04:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMDA4MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465330081", "bodyText": "[nit]\nJust use context instead of kernel.getContext()", "author": "MikeDombo", "createdAt": "2020-08-04T21:05:46Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java", "diffHunk": "@@ -139,11 +141,16 @@ protected void startup() throws InterruptedException {\n                 Thread.sleep(maxt - now);\n             } else {\n                 logger.atDebug().setEventType(\"service-update-scheduled\").log();\n-                context.runOnPublishQueueAndWait(() -> {\n-                    logger.atInfo().setEventType(\"service-update-start\").log();\n-                    runUpdateActions();\n-                    logger.atInfo().setEventType(\"service-update-finish\").log();\n-                });\n+                try {\n+                    kernel.getContext().get(ExecutorService.class).submit(() -> {", "originalCommit": "c0fb8ed09b97df5e034fd80602a8f2ff44127bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0NzMzNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/348#discussion_r465347337", "bodyText": "don't catch the interruption, let it bubble up because it means that we need to stop", "author": "MikeDombo", "createdAt": "2020-08-04T21:43:34Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/UpdateSystemSafelyService.java", "diffHunk": "@@ -139,11 +141,16 @@ protected void startup() throws InterruptedException {\n                 Thread.sleep(maxt - now);\n             } else {\n                 logger.atDebug().setEventType(\"service-update-scheduled\").log();\n-                context.runOnPublishQueueAndWait(() -> {\n-                    logger.atInfo().setEventType(\"service-update-start\").log();\n-                    runUpdateActions();\n-                    logger.atInfo().setEventType(\"service-update-finish\").log();\n-                });\n+                try {\n+                    kernel.getContext().get(ExecutorService.class).submit(() -> {\n+                        logger.atInfo().setEventType(\"service-update-start\").log();\n+                        runUpdateActions();\n+                        logger.atInfo().setEventType(\"service-update-finish\").log();\n+                    }).get();\n+                } catch (InterruptedException | ExecutionException e) {", "originalCommit": "c0fb8ed09b97df5e034fd80602a8f2ff44127bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "803f733cb86ecfa5571643b5b9fc2a3610d3b89f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/803f733cb86ecfa5571643b5b9fc2a3610d3b89f", "message": "Update UpdateSystemSafelyService.java", "committedDate": "2020-08-04T21:57:12Z", "type": "commit"}, {"oid": "67aee3f9cb6c1cc00a560706caba68f561b2d458", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/67aee3f9cb6c1cc00a560706caba68f561b2d458", "message": "throw Interrupted  exception", "committedDate": "2020-08-04T22:02:44Z", "type": "commit"}]}