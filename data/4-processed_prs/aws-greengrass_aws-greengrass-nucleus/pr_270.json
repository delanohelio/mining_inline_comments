{"pr_number": 270, "pr_title": "Update process killing to use PS/Slay on QNX", "pr_createdAt": "2020-06-03T22:11:13Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270", "timeline": [{"oid": "8377910800551d37d431257216182431d24c5f05", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8377910800551d37d431257216182431d24c5f05", "message": "Update process killing to use slay on QNX", "committedDate": "2020-06-03T22:29:42Z", "type": "forcePushed"}, {"oid": "c692ab454b58e4b3acf25e94cfb1c12ec28f782f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c692ab454b58e4b3acf25e94cfb1c12ec28f782f", "message": "Update process killing to use PS to find process tree on QNX", "committedDate": "2020-06-04T18:16:03Z", "type": "forcePushed"}, {"oid": "44f99d2356d9b80aee9330fc6fe46df5149f4671", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/44f99d2356d9b80aee9330fc6fe46df5149f4671", "message": "Update process killing to use PS to find process tree on QNX", "committedDate": "2020-06-04T18:19:45Z", "type": "forcePushed"}, {"oid": "b69277791c73df25244780af74d3e8e0b2659205", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b69277791c73df25244780af74d3e8e0b2659205", "message": "Update process killing to use PS to find process tree on QNX", "committedDate": "2020-06-04T18:20:16Z", "type": "forcePushed"}, {"oid": "717cc9ac92c949d0b54fd507d03fe82c29f6d945", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/717cc9ac92c949d0b54fd507d03fe82c29f6d945", "message": "Update process killing to use PS to find process tree on QNX", "committedDate": "2020-06-04T18:28:59Z", "type": "forcePushed"}, {"oid": "8a30bb279996d793fc1226cfbce783174a1a79be", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/8a30bb279996d793fc1226cfbce783174a1a79be", "message": "Update process killing to use PS to find process tree on QNX", "committedDate": "2020-06-04T18:34:32Z", "type": "forcePushed"}, {"oid": "73d2186565a720f8741a4fb9629a6166057b0de9", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/73d2186565a720f8741a4fb9629a6166057b0de9", "message": "Update process killing to use PS to find process tree on QNX", "committedDate": "2020-06-04T21:42:11Z", "type": "forcePushed"}, {"oid": "9a80b469db58d1ba9d2af106cd1d8a0b4b0c8fee", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9a80b469db58d1ba9d2af106cd1d8a0b4b0c8fee", "message": "Update process killing to use PS to find process tree on QNX", "committedDate": "2020-06-08T18:35:18Z", "type": "commit"}, {"oid": "b4c4eaf14dd98f622044e7b7103357da906c8a8e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b4c4eaf14dd98f622044e7b7103357da906c8a8e", "message": "Use slay to kill on QNX", "committedDate": "2020-06-08T18:43:45Z", "type": "forcePushed"}, {"oid": "2fb7bcf7dd7c75d18d7870bb5ea6124a1fed6ed2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2fb7bcf7dd7c75d18d7870bb5ea6124a1fed6ed2", "message": "Use slay to kill on QNX", "committedDate": "2020-06-08T21:06:30Z", "type": "commit"}, {"oid": "2fb7bcf7dd7c75d18d7870bb5ea6124a1fed6ed2", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/2fb7bcf7dd7c75d18d7870bb5ea6124a1fed6ed2", "message": "Use slay to kill on QNX", "committedDate": "2020-06-08T21:06:30Z", "type": "forcePushed"}, {"oid": "67c4ee8519d2c6f98c483551dd6bacb5e24cac81", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/67c4ee8519d2c6f98c483551dd6bacb5e24cac81", "message": "Add lots more logging for process killing", "committedDate": "2020-06-08T21:40:39Z", "type": "commit"}, {"oid": "67c4ee8519d2c6f98c483551dd6bacb5e24cac81", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/67c4ee8519d2c6f98c483551dd6bacb5e24cac81", "message": "Add lots more logging for process killing", "committedDate": "2020-06-08T21:40:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0MjA1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437042057", "bodyText": "will this 2 seconds be configurable?", "author": "rbattle", "createdAt": "2020-06-08T22:45:40Z", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/UnixPlatform.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import com.aws.iot.evergreen.logging.api.Logger;\n+import com.aws.iot.evergreen.logging.impl.LogManager;\n+import com.aws.iot.evergreen.util.Pair;\n+import com.aws.iot.evergreen.util.Utils;\n+import org.zeroturnaround.process.PidProcess;\n+import org.zeroturnaround.process.Processes;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import static com.aws.iot.evergreen.util.Utils.inputStreamToString;\n+\n+public class UnixPlatform extends Platform {\n+    protected static final int SIGINT = 2;\n+    protected static final int SIGKILL = 9;\n+    public static final Pattern PS_PID_PATTERN = Pattern.compile(\"(\\\\d+)\\\\s+(\\\\d+)\");\n+    protected static final Logger logger = LogManager.getLogger(UnixPlatform.class);\n+\n+    @Override\n+    public void killProcessAndChildren(Process process, boolean force) throws IOException, InterruptedException {\n+        PidProcess pp = Processes.newPidProcess(process);\n+\n+        logger.atDebug().log(\"Running pkill to kill child processes of pid {}\", pp.getPid());\n+        // Use pkill to kill all subprocesses under the main shell\n+        String[] cmd = {\"pkill\", \"-\" + (force ? SIGKILL : SIGINT), \"-P\", Integer.toString(pp.getPid())};\n+        Process proc = Runtime.getRuntime().exec(cmd);\n+        proc.waitFor();\n+        if (proc.exitValue() != 0) {\n+            logger.atWarn()\n+                    .kv(\"pid\", pp.getPid())\n+                    .kv(\"exit-code\", proc.exitValue())\n+                    .kv(\"stdout\", inputStreamToString(proc.getInputStream()))\n+                    .kv(\"stderr\", inputStreamToString(proc.getErrorStream()))\n+                    .log(\"pkill exited non-zero\");\n+        }\n+\n+        // If forcible, then also kill the parent (the shell)\n+        if (force) {\n+            process.destroy();\n+            process.waitFor(2, TimeUnit.SECONDS);", "originalCommit": "67c4ee8519d2c6f98c483551dd6bacb5e24cac81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0MjcwNQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437042705", "bodyText": "It could be, though there may not be a need. Because by this point of killing, we're done being graceful and we're just killing a misbehaving shell (not the customer's code, the customer's code is already killed by this point).", "author": "MikeDombo", "createdAt": "2020-06-08T22:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0MjA1Nw=="}], "type": "inlineReview"}, {"oid": "1acc061f44c43a2a2fda1a5f3e7b2e94bc20cf0a", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/1acc061f44c43a2a2fda1a5f3e7b2e94bc20cf0a", "message": "Merge branch 'master' into qnx", "committedDate": "2020-06-09T18:50:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4ODExOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437688119", "bodyText": "Thanks for starting this.", "author": "fufranci", "createdAt": "2020-06-09T20:08:38Z", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/Platform.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import com.aws.iot.evergreen.config.PlatformResolver;\n+import com.aws.iot.evergreen.util.Exec;\n+\n+import java.io.IOException;\n+\n+public abstract class Platform {", "originalCommit": "1acc061f44c43a2a2fda1a5f3e7b2e94bc20cf0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5MzUwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437693502", "bodyText": "Just want to confirm: the original \"combined\" implementation calls pp.destroyGracefully() and pp.destroyForcefully(). Here you only call destroy. Is this intentional?", "author": "fufranci", "createdAt": "2020-06-09T20:19:04Z", "path": "src/main/java/com/aws/iot/evergreen/util/platforms/WindowsPlatform.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright Amazon.com Inc. or its affiliates.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.iot.evergreen.util.platforms;\n+\n+import org.zeroturnaround.process.PidProcess;\n+import org.zeroturnaround.process.Processes;\n+import org.zeroturnaround.process.WindowsProcess;\n+\n+import java.io.IOException;\n+\n+public class WindowsPlatform extends Platform {\n+    @Override\n+    public void killProcessAndChildren(Process process, boolean force) throws IOException, InterruptedException {\n+        PidProcess pp = Processes.newPidProcess(process);\n+        ((WindowsProcess) pp).setIncludeChildren(true);\n+        ((WindowsProcess) pp).setGracefulDestroyEnabled(true);\n+\n+        pp.destroy(force);", "originalCommit": "1acc061f44c43a2a2fda1a5f3e7b2e94bc20cf0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5NDEzMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/270#discussion_r437694130", "bodyText": "It is the same thing. destroyGracefully calls destroy(false) and destroyForcefully calls destroy(true). Just simplifying.", "author": "MikeDombo", "createdAt": "2020-06-09T20:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY5MzUwMg=="}], "type": "inlineReview"}]}