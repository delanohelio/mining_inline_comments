{"pr_number": 681, "pr_title": "Fail deployment if nucleus version changes but nucleus is not top lev\u2026", "pr_createdAt": "2020-11-13T17:59:12Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MTk2Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r523271966", "bodyText": "I think we will fix this case before reinvent, right?", "author": "hui-yang", "createdAt": "2020-11-13T22:47:03Z", "path": "src/main/java/com/aws/greengrass/componentmanager/DependencyResolver.java", "diffHunk": "@@ -91,12 +105,47 @@\n                             document.getDeploymentId())));\n         }\n \n+        if (nonExplicitNucleusUpdate(targetComponentsToResolve,\n+                resolvedComponents.entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()))) {\n+            throw new PackagingException(\"The deployment attempts to update the nucleus version but no target \"\n+                    + \"component of type nucleus included as target component, please add the desired nucleus version\"\n+                    + \" as top level component if you wish to update the nucleus\");\n+        }\n+\n         logger.atInfo().setEventType(\"resolve-group-dependencies-finish\").kv(\"resolvedComponents\", resolvedComponents)\n                 .kv(COMPONENT_VERSION_REQUIREMENT_KEY, componentNameToVersionConstraints)\n                 .log(\"Finish resolving group dependencies\");\n         return new ArrayList<>(resolvedComponents.values());\n     }\n \n+    boolean nonExplicitNucleusUpdate(List<String> targetComponents,\n+                                     List<ComponentIdentifier> resolvedComponents) throws PackagingException {\n+        List<ComponentIdentifier> resolvedNucleusComponents = new ArrayList<>();\n+        for (ComponentIdentifier componentIdentifier : resolvedComponents) {\n+            if (ComponentType.NUCLEUS.equals(componentStore.getPackageRecipe(componentIdentifier).getComponentType())) {\n+                resolvedNucleusComponents.add(componentIdentifier);\n+            }\n+        }\n+        if (resolvedNucleusComponents.size() > 1) {\n+            throw new PackagingException(String.format(\"Deployment cannot have more than 1 component of type Nucleus \"\n+                    + \"%s\", Arrays.toString(resolvedNucleusComponents.toArray())));\n+        }\n+        if (resolvedNucleusComponents.isEmpty()) {\n+            return false;\n+        }\n+        Optional<GreengrassService> activeNucleusOption = kernel.orderedDependencies().stream()\n+                .filter(s -> ComponentType.NUCLEUS.name().equals(s.getServiceType())).findFirst();\n+        if (!activeNucleusOption.isPresent()) {", "originalCommit": "a39a14fb3f3fc20ea50af723ba7cf77f255895c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NzQ2NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525347465", "bodyText": "This condition shouldn't happen because we always make sure we always add nucleus component, this is just here from the perspective of this piece of code, but could you elaborate a bit more what you mean?", "author": "shaguptashaikh", "createdAt": "2020-11-17T17:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MTk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3Njg5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525376895", "bodyText": "yes. I just wanted to check this condition shouldn't happen", "author": "hui-yang", "createdAt": "2020-11-17T18:07:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MTk2Ng=="}], "type": "inlineReview"}, {"oid": "f7dc67508dbf90c4f81920e6803f92c486f874be", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f7dc67508dbf90c4f81920e6803f92c486f874be", "message": "Use newly decided nucleus version 2.0.0", "committedDate": "2020-11-17T17:21:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4NTA1OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525585058", "bodyText": "Can this actually happen here? Would the dependency resolution already detect it and fail the deployment?", "author": "fengwang666", "createdAt": "2020-11-17T23:06:49Z", "path": "src/main/java/com/aws/greengrass/componentmanager/DependencyResolver.java", "diffHunk": "@@ -91,12 +105,47 @@\n                             document.getDeploymentId())));\n         }\n \n+        if (nonExplicitNucleusUpdate(targetComponentsToResolve,\n+                resolvedComponents.entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()))) {\n+            throw new PackagingException(\"The deployment attempts to update the nucleus version but no target \"\n+                    + \"component of type nucleus included as target component, please add the desired nucleus version\"\n+                    + \" as top level component if you wish to update the nucleus\");\n+        }\n+\n         logger.atInfo().setEventType(\"resolve-group-dependencies-finish\").kv(\"resolvedComponents\", resolvedComponents)\n                 .kv(COMPONENT_VERSION_REQUIREMENT_KEY, componentNameToVersionConstraints)\n                 .log(\"Finish resolving group dependencies\");\n         return new ArrayList<>(resolvedComponents.values());\n     }\n \n+    boolean nonExplicitNucleusUpdate(List<String> targetComponents,\n+                                     List<ComponentIdentifier> resolvedComponents) throws PackagingException {\n+        List<ComponentIdentifier> resolvedNucleusComponents = new ArrayList<>();\n+        for (ComponentIdentifier componentIdentifier : resolvedComponents) {\n+            if (ComponentType.NUCLEUS.equals(componentStore.getPackageRecipe(componentIdentifier).getComponentType())) {\n+                resolvedNucleusComponents.add(componentIdentifier);\n+            }\n+        }\n+        if (resolvedNucleusComponents.size() > 1) {\n+            throw new PackagingException(String.format(\"Deployment cannot have more than 1 component of type Nucleus \"\n+                    + \"%s\", Arrays.toString(resolvedNucleusComponents.toArray())));\n+        }", "originalCommit": "f7dc67508dbf90c4f81920e6803f92c486f874be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5Mjg0Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525592843", "bodyText": "This is taking into account that there can be a custom implementation of Nucleus with a different component name, we use the type to identify them. It's possible that a deployment has our default aws.greengrass.Nucleus component and a custom nucleus component which the dependency resolution will not detect", "author": "shaguptashaikh", "createdAt": "2020-11-17T23:26:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4NTA1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5MzAxMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525593011", "bodyText": "hmmm...I found this a bit difficult to read. Would it be more clear if combining these two conditions?\nreturn !resolvedNucleus.equals(new ComponentIdentifier(activeNucleus.getServiceName(), activeNucleusVersion)) && !targetComponents.contains(resolvedNucleus.getName())", "author": "fengwang666", "createdAt": "2020-11-17T23:26:37Z", "path": "src/main/java/com/aws/greengrass/componentmanager/DependencyResolver.java", "diffHunk": "@@ -91,12 +105,47 @@\n                             document.getDeploymentId())));\n         }\n \n+        if (nonExplicitNucleusUpdate(targetComponentsToResolve,\n+                resolvedComponents.entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()))) {\n+            throw new PackagingException(\"The deployment attempts to update the nucleus version but no target \"\n+                    + \"component of type nucleus included as target component, please add the desired nucleus version\"\n+                    + \" as top level component if you wish to update the nucleus\");\n+        }\n+\n         logger.atInfo().setEventType(\"resolve-group-dependencies-finish\").kv(\"resolvedComponents\", resolvedComponents)\n                 .kv(COMPONENT_VERSION_REQUIREMENT_KEY, componentNameToVersionConstraints)\n                 .log(\"Finish resolving group dependencies\");\n         return new ArrayList<>(resolvedComponents.values());\n     }\n \n+    boolean nonExplicitNucleusUpdate(List<String> targetComponents,\n+                                     List<ComponentIdentifier> resolvedComponents) throws PackagingException {\n+        List<ComponentIdentifier> resolvedNucleusComponents = new ArrayList<>();\n+        for (ComponentIdentifier componentIdentifier : resolvedComponents) {\n+            if (ComponentType.NUCLEUS.equals(componentStore.getPackageRecipe(componentIdentifier).getComponentType())) {\n+                resolvedNucleusComponents.add(componentIdentifier);\n+            }\n+        }\n+        if (resolvedNucleusComponents.size() > 1) {\n+            throw new PackagingException(String.format(\"Deployment cannot have more than 1 component of type Nucleus \"\n+                    + \"%s\", Arrays.toString(resolvedNucleusComponents.toArray())));\n+        }\n+        if (resolvedNucleusComponents.isEmpty()) {\n+            return false;\n+        }\n+        Optional<GreengrassService> activeNucleusOption = kernel.orderedDependencies().stream()\n+                .filter(s -> ComponentType.NUCLEUS.name().equals(s.getServiceType())).findFirst();\n+        if (!activeNucleusOption.isPresent()) {\n+            return false;\n+        }\n+        GreengrassService activeNucleus = activeNucleusOption.get();\n+        Semver activeNucleusVersion = new Semver(Coerce.toString(activeNucleus.getServiceConfig().find(VERSION_KEY)));\n+        ComponentIdentifier resolvedNucleus = resolvedNucleusComponents.get(0);\n+        if (resolvedNucleus.equals(new ComponentIdentifier(activeNucleus.getServiceName(), activeNucleusVersion))) {\n+            return false;\n+        }\n+        return !targetComponents.contains(resolvedNucleus.getName());", "originalCommit": "f7dc67508dbf90c4f81920e6803f92c486f874be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0NTIzNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525645234", "bodyText": "Changed", "author": "shaguptashaikh", "createdAt": "2020-11-18T01:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5MzAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5MzQ5MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525593490", "bodyText": "It would be nice to include the existing nucleus version and resolved nucleus version in the exception.", "author": "fengwang666", "createdAt": "2020-11-17T23:27:57Z", "path": "src/main/java/com/aws/greengrass/componentmanager/DependencyResolver.java", "diffHunk": "@@ -91,12 +105,47 @@\n                             document.getDeploymentId())));\n         }\n \n+        if (nonExplicitNucleusUpdate(targetComponentsToResolve,\n+                resolvedComponents.entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()))) {\n+            throw new PackagingException(\"The deployment attempts to update the nucleus version but no target \"\n+                    + \"component of type nucleus included as target component, please add the desired nucleus version\"\n+                    + \" as top level component if you wish to update the nucleus\");", "originalCommit": "f7dc67508dbf90c4f81920e6803f92c486f874be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0NTQ3Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/681#discussion_r525645476", "bodyText": "Done, had to refactor the method a little", "author": "shaguptashaikh", "createdAt": "2020-11-18T01:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5MzQ5MA=="}], "type": "inlineReview"}, {"oid": "296ff372dfb5aa27035031096fa6a446ad39f99f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/296ff372dfb5aa27035031096fa6a446ad39f99f", "message": "Fail deployment if nucleus version changes but nucleus is not top level component", "committedDate": "2020-11-18T01:55:48Z", "type": "commit"}, {"oid": "7a3cabcea5db98ea9bae56322a64313606063e90", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7a3cabcea5db98ea9bae56322a64313606063e90", "message": "Use newly decided nucleus version 2.0.0", "committedDate": "2020-11-18T01:55:48Z", "type": "commit"}, {"oid": "b52d7567c217b5c0e65dcb122ba5256603c1da98", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b52d7567c217b5c0e65dcb122ba5256603c1da98", "message": "Address comments", "committedDate": "2020-11-18T01:55:48Z", "type": "commit"}, {"oid": "b52d7567c217b5c0e65dcb122ba5256603c1da98", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/b52d7567c217b5c0e65dcb122ba5256603c1da98", "message": "Address comments", "committedDate": "2020-11-18T01:55:48Z", "type": "forcePushed"}, {"oid": "c291555e306a2c735d0f68a06a1aa922246b8c38", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c291555e306a2c735d0f68a06a1aa922246b8c38", "message": "Merge branch 'master' into nucleus-dr", "committedDate": "2020-11-20T03:37:05Z", "type": "commit"}, {"oid": "25d90d4e887c220c4fb3a3c018930e8bacfe19ab", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/25d90d4e887c220c4fb3a3c018930e8bacfe19ab", "message": "Merge branch 'master' into nucleus-dr", "committedDate": "2020-11-20T18:17:49Z", "type": "commit"}]}