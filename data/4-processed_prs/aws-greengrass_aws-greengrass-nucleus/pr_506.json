{"pr_number": 506, "pr_title": "Centralize paths and permissions", "pr_createdAt": "2020-10-06T23:41:08Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506", "timeline": [{"oid": "43fb8d3ca76004d8c2e75c6f34dd3d2cdb92affa", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/43fb8d3ca76004d8c2e75c6f34dd3d2cdb92affa", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T00:08:13Z", "type": "forcePushed"}, {"oid": "f3b04b397bc35df8359c2f54c452990f450d2065", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/f3b04b397bc35df8359c2f54c452990f450d2065", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T00:19:13Z", "type": "forcePushed"}, {"oid": "c2f81f7b1480e42137b16d69952cdea7da4eedff", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/c2f81f7b1480e42137b16d69952cdea7da4eedff", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T00:28:13Z", "type": "forcePushed"}, {"oid": "7dca19249d912f4453f6712a773c0a40ff86f0ac", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7dca19249d912f4453f6712a773c0a40ff86f0ac", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T03:05:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMDU1NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501110554", "bodyText": "Setting the permissions for the work path and the artifact paths will need to lookup the the user/group for the service. Do you see that happening in the Permissions class?", "author": "rbattle", "createdAt": "2020-10-07T15:34:42Z", "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import static com.aws.greengrass.componentmanager.ComponentStore.ARTIFACTS_DECOMPRESSED_DIRECTORY;\n+import static com.aws.greengrass.componentmanager.ComponentStore.ARTIFACT_DIRECTORY;\n+import static com.aws.greengrass.componentmanager.ComponentStore.RECIPE_DIRECTORY;\n+\n+@SuppressWarnings(\"checkstyle:MissingJavadocMethod\")\n+public class NucleusPaths {\n+    private Path rootPath;\n+    private Path workPath;\n+    private Path componentStorePath;\n+    private Path configPath;\n+    private Path deploymentPath;\n+    private Path kernelAltsPath;\n+\n+    public void initPaths(Path root, Path workPath, Path componentStorePath, Path configPath, Path kernelAlts,\n+                          Path deployment) throws IOException {\n+        setRootPath(root);\n+        setConfigPath(configPath);\n+        setDeploymentPath(deployment);\n+        setKernelAltsPath(kernelAlts);\n+        setWorkPath(workPath);\n+        setComponentStorePath(componentStorePath);\n+    }\n+\n+    public void setKernelAltsPath(Path kernelAltsPath) throws IOException {\n+        this.kernelAltsPath = kernelAltsPath;\n+        Utils.createPaths(kernelAltsPath());\n+        Permissions.setKernelAltsPermission(kernelAltsPath());\n+    }\n+\n+    public Path kernelAltsPath() {\n+        return kernelAltsPath;\n+    }\n+\n+    public void setDeploymentPath(Path deploymentPath) throws IOException {\n+        this.deploymentPath = deploymentPath;\n+        Utils.createPaths(deploymentPath());\n+        Permissions.setDeploymentPermission(deploymentPath());\n+    }\n+\n+    public Path deploymentPath() {\n+        return deploymentPath;\n+    }\n+\n+    public void setConfigPath(Path configPath) throws IOException {\n+        this.configPath = configPath;\n+        Utils.createPaths(configPath());\n+        Permissions.setConfigPermission(configPath());\n+    }\n+\n+    public Path configPath() {\n+        return configPath;\n+    }\n+\n+    public void setWorkPath(Path workPath) throws IOException {\n+        this.workPath = workPath;\n+        Utils.createPaths(workPath);\n+        Permissions.setWorkPathPermission(workPath);\n+    }\n+\n+    public void setRootPath(Path root) throws IOException {\n+        this.rootPath = root;\n+        Utils.createPaths(root);\n+        Permissions.setRootPermission(root);\n+\n+        Utils.createPaths(pluginPath());\n+        Permissions.setPluginPermission(pluginPath());\n+    }\n+\n+    public void setComponentStorePath(Path componentStorePath) throws IOException {\n+        this.componentStorePath = componentStorePath;\n+        Utils.createPaths(componentStorePath);\n+        Permissions.setComponentStorePermission(componentStorePath);\n+\n+        Utils.createPaths(artifactPath());\n+        Permissions.setArtifactStorePermission(artifactPath());\n+\n+        Utils.createPaths(unarchivePath());\n+        Permissions.setArtifactStorePermission(unarchivePath());\n+\n+        Utils.createPaths(recipePath());\n+        Permissions.setRecipeStorePermission(recipePath());\n+    }\n+\n+    public Path artifactPath() {\n+        return componentStorePath.resolve(ARTIFACT_DIRECTORY);\n+    }\n+\n+    public Path artifactPath(ComponentIdentifier componentIdentifier) throws IOException {\n+        Path p = artifactPath().resolve(componentIdentifier.getName())\n+                .resolve(componentIdentifier.getVersion().getValue());\n+        Utils.createPaths(p);\n+        Permissions.setArtifactPermission(p);\n+        return p;\n+    }\n+\n+    public Path recipePath() {\n+        return componentStorePath.resolve(RECIPE_DIRECTORY);\n+    }\n+\n+    public Path unarchivePath() {\n+        return componentStorePath.resolve(ARTIFACTS_DECOMPRESSED_DIRECTORY);\n+    }\n+\n+    public Path unarchiveArtifactPath(ComponentIdentifier componentIdentifier, String artifactName) throws IOException {\n+        Path p = unarchiveArtifactPath(componentIdentifier).resolve(artifactName);\n+        Utils.createPaths(p);\n+        Permissions.setArtifactPermission(p);\n+        return p;\n+    }\n+\n+    public Path unarchiveArtifactPath(ComponentIdentifier componentIdentifier) throws IOException {\n+        Path p = unarchivePath().resolve(componentIdentifier.getName())\n+                .resolve(componentIdentifier.getVersion().getValue());\n+        Utils.createPaths(p);\n+        Permissions.setArtifactPermission(p);\n+        return p;\n+    }\n+\n+    public Path componentStorePath() {\n+        return componentStorePath;\n+    }\n+\n+    public Path workPath(String serviceName) throws IOException {\n+        Path p = workPath().resolve(serviceName);\n+        Utils.createPaths(p);\n+        Permissions.setWorkPathPermission(p);", "originalCommit": "7dca19249d912f4453f6712a773c0a40ff86f0ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDQ2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501130469", "bodyText": "That's a maybe, I think that it may need to be set by the service/shellrunner just before running, but it will call the Permissions class to do it. I want the logic to be centralized.", "author": "MikeDombo", "createdAt": "2020-10-07T16:01:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMDU1NA=="}], "type": "inlineReview"}, {"oid": "249f20691b3ddff103fd7e2f6206725e916c9db1", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/249f20691b3ddff103fd7e2f6206725e916c9db1", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T18:27:59Z", "type": "forcePushed"}, {"oid": "6e1557598011046a201046f7e7b77168b68751ae", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6e1557598011046a201046f7e7b77168b68751ae", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T18:29:00Z", "type": "forcePushed"}, {"oid": "7a4d6d24fa36a47a939ecfaf14d426a2a13a022e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7a4d6d24fa36a47a939ecfaf14d426a2a13a022e", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T22:10:24Z", "type": "commit"}, {"oid": "7a4d6d24fa36a47a939ecfaf14d426a2a13a022e", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/7a4d6d24fa36a47a939ecfaf14d426a2a13a022e", "message": "Centralize paths and permissions", "committedDate": "2020-10-07T22:10:24Z", "type": "forcePushed"}, {"oid": "313ab5041592b23204f6e6d52e763e4f18959b2f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/313ab5041592b23204f6e6d52e763e4f18959b2f", "message": "Remove broken test", "committedDate": "2020-10-07T22:28:16Z", "type": "commit"}, {"oid": "313ab5041592b23204f6e6d52e763e4f18959b2f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/313ab5041592b23204f6e6d52e763e4f18959b2f", "message": "Remove broken test", "committedDate": "2020-10-07T22:28:16Z", "type": "forcePushed"}, {"oid": "717fce23472959c2335a7a8e8f9a8a2c0c55865d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/717fce23472959c2335a7a8e8f9a8a2c0c55865d", "message": "remove mock", "committedDate": "2020-10-08T01:56:05Z", "type": "commit"}, {"oid": "02fbb6e3f044c0a5d7eaf2659f101f1db4ea9174", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/02fbb6e3f044c0a5d7eaf2659f101f1db4ea9174", "message": "remove mock", "committedDate": "2020-10-08T01:56:14Z", "type": "forcePushed"}, {"oid": "d8a089c38413697d050c9b1ca26a3ad8cf806deb", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/d8a089c38413697d050c9b1ca26a3ad8cf806deb", "message": "remove mock", "committedDate": "2020-10-08T02:09:11Z", "type": "forcePushed"}, {"oid": "df4df63ef15cbc7b97086d54bcc6eca5d25a37df", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/df4df63ef15cbc7b97086d54bcc6eca5d25a37df", "message": "remove mock", "committedDate": "2020-10-08T02:35:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQyODQxNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501428417", "bodyText": "Where is the IOException thrown from? Is it retryable?", "author": "fengwang666", "createdAt": "2020-10-08T03:33:14Z", "path": "src/main/java/com/aws/greengrass/deployment/DefaultDeploymentTask.java", "diffHunk": "@@ -126,7 +126,7 @@ public DeploymentResult call()\n             // or deployment merge step and landed here\n             handleCancellation(preparePackagesFuture, deploymentMergeFuture);\n             return null;\n-        } catch (PackagingException e) {\n+        } catch (IOException | PackagingException e) {", "originalCommit": "df4df63ef15cbc7b97086d54bcc6eca5d25a37df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzMzkyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501433924", "bodyText": "it is from creating/setting permissions on the artifact directory. It most likely isn't retryable, I'll move it.", "author": "MikeDombo", "createdAt": "2020-10-08T03:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQyODQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzMDczMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501430730", "bodyText": "Would it be better also moving the path name of the sub-paths into this class? This method gives me the impression that we can init the workPath and configPath under different root directories.", "author": "fengwang666", "createdAt": "2020-10-08T03:42:56Z", "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import static com.aws.greengrass.componentmanager.ComponentStore.ARTIFACTS_DECOMPRESSED_DIRECTORY;\n+import static com.aws.greengrass.componentmanager.ComponentStore.ARTIFACT_DIRECTORY;\n+import static com.aws.greengrass.componentmanager.ComponentStore.RECIPE_DIRECTORY;\n+\n+@SuppressWarnings(\"checkstyle:MissingJavadocMethod\")\n+public class NucleusPaths {\n+    private Path rootPath;\n+    private Path workPath;\n+    private Path componentStorePath;\n+    private Path configPath;\n+    private Path deploymentPath;\n+    private Path kernelAltsPath;\n+\n+    public void initPaths(Path root, Path workPath, Path componentStorePath, Path configPath, Path kernelAlts,\n+                          Path deployment) throws IOException {", "originalCommit": "df4df63ef15cbc7b97086d54bcc6eca5d25a37df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzNDYxOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501434619", "bodyText": "You can have workPath and configPath under different roots. We don't do it, but that is allowed.", "author": "MikeDombo", "createdAt": "2020-10-08T03:59:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzMDczMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzMTQ1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501431457", "bodyText": "All these set***Path methods look like duplicates. Would one method setPath(Path path, Permission permission) be sufficient?", "author": "fengwang666", "createdAt": "2020-10-08T03:45:55Z", "path": "src/main/java/com/aws/greengrass/util/NucleusPaths.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.aws.greengrass.util;\n+\n+import com.aws.greengrass.componentmanager.models.ComponentIdentifier;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import static com.aws.greengrass.componentmanager.ComponentStore.ARTIFACTS_DECOMPRESSED_DIRECTORY;\n+import static com.aws.greengrass.componentmanager.ComponentStore.ARTIFACT_DIRECTORY;\n+import static com.aws.greengrass.componentmanager.ComponentStore.RECIPE_DIRECTORY;\n+\n+@SuppressWarnings(\"checkstyle:MissingJavadocMethod\")\n+public class NucleusPaths {\n+    private Path rootPath;\n+    private Path workPath;\n+    private Path componentStorePath;\n+    private Path configPath;\n+    private Path deploymentPath;\n+    private Path kernelAltsPath;\n+\n+    public void initPaths(Path root, Path workPath, Path componentStorePath, Path configPath, Path kernelAlts,\n+                          Path deployment) throws IOException {\n+        setRootPath(root);\n+        setConfigPath(configPath);\n+        setDeploymentPath(deployment);\n+        setKernelAltsPath(kernelAlts);\n+        setWorkPath(workPath);\n+        setComponentStorePath(componentStorePath);\n+    }\n+\n+    public void setKernelAltsPath(Path kernelAltsPath) throws IOException {\n+        this.kernelAltsPath = kernelAltsPath;\n+        Utils.createPaths(kernelAltsPath());\n+        Permissions.setKernelAltsPermission(kernelAltsPath());\n+    }\n+\n+    public Path kernelAltsPath() {\n+        return kernelAltsPath;\n+    }\n+\n+    public void setDeploymentPath(Path deploymentPath) throws IOException {", "originalCommit": "df4df63ef15cbc7b97086d54bcc6eca5d25a37df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzNDQ2NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/506#discussion_r501434465", "bodyText": "No, the idea is that this class holds the information for what permissions will be set, we don't take in permissions as a parameter because the callers don't know what permissions are appropriate. The permissions class knows what permissions are appropriate.", "author": "MikeDombo", "createdAt": "2020-10-08T03:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzMTQ1Nw=="}], "type": "inlineReview"}, {"oid": "603b62e2ecfbbb738559a6951d9bdc8265d59f9f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/603b62e2ecfbbb738559a6951d9bdc8265d59f9f", "message": "remove mock", "committedDate": "2020-10-08T04:02:38Z", "type": "forcePushed"}, {"oid": "87a5b32e7ef7be07f6c8b01e184caa544f31344c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/87a5b32e7ef7be07f6c8b01e184caa544f31344c", "message": "remove mock", "committedDate": "2020-10-08T04:18:11Z", "type": "forcePushed"}, {"oid": "6fecf78673801c7af7ad3788867d65c5d3393468", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6fecf78673801c7af7ad3788867d65c5d3393468", "message": "remove mock", "committedDate": "2020-10-08T04:55:58Z", "type": "commit"}, {"oid": "6fecf78673801c7af7ad3788867d65c5d3393468", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6fecf78673801c7af7ad3788867d65c5d3393468", "message": "remove mock", "committedDate": "2020-10-08T04:55:58Z", "type": "forcePushed"}]}