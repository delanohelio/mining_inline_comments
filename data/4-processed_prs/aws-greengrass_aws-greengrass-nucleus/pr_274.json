{"pr_number": 274, "pr_title": "Update all E2E tests to integrate with CMS", "pr_createdAt": "2020-06-06T01:19:10Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDI5Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230296", "bodyText": "should this be beforeall instead of beforeeach? Doesn't really seem necessary to upload for every test (even though it won't actually upload because it will already exist)", "author": "MikeDombo", "createdAt": "2020-06-06T02:41:10Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/DeploymentE2ETest.java", "diffHunk": "@@ -56,17 +52,21 @@ void afterEach() {\n         cleanup();\n     }\n \n-    private void launchKernel(String configFile) throws IOException, InterruptedException {\n-        kernel = new Kernel()\n-                .parseArgs(\"-i\", DeploymentE2ETest.class.getResource(configFile).toString(), \"-r\", tempRootDir\n-                        .toAbsolutePath().toString());\n-\n-        deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, BETA_REGION.toString());\n+    @BeforeEach\n+    void launchKernel() throws Exception {\n+        initKernel();\n         kernel.launch();\n \n-        Path localStoreContentPath = Paths.get(DeploymentE2ETest.class.getResource(\"local_store_content\").getPath());\n-        // pre-load contents to package store\n-        FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n+        uploadTestComponentsToCms(true, new PackageIdentifier(\"CustomerApp\", new Semver(\"1.0.0\")),", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NzkwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436887904", "bodyText": "That's an option. I was trying to reuse the cms client in kernel so couldn't make it in beforeall. But this should be easy to change.", "author": "hui-yang", "createdAt": "2020-06-08T17:51:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDI5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDMzMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230331", "bodyText": "same here.", "author": "MikeDombo", "createdAt": "2020-06-06T02:41:59Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/MultipleDeploymentsTest.java", "diffHunk": "@@ -44,19 +42,18 @@\n @ExtendWith(EGExtension.class)\n @Tag(\"E2E\")\n class MultipleDeploymentsTest extends BaseE2ETestCase {\n-    private Kernel kernel;\n \n     @BeforeEach\n-    void beforeEach() throws IOException {\n-        kernel = new Kernel().parseArgs(\"-i\", MultipleDeploymentsTest.class.getResource(\"blank_config.yaml\")\n-                .toString(), \"-r\", tempRootDir.toAbsolutePath().toString());\n-\n-        deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, BETA_REGION.toString());\n-\n-        Path localStoreContentPath = Paths\n-                .get(MultipleDeploymentsTest.class.getResource(\"local_store_content\").getPath());\n-        // pre-load contents to package store\n-        FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n+    void beforeEach() throws Exception {\n+        initKernel();\n+\n+        uploadTestComponentsToCms(true, new PackageIdentifier(\"CustomerApp\", new Semver(\"1.0.0\")),", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDM2Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230362", "bodyText": "Also, should we be deleting the packages when the test completes?", "author": "MikeDombo", "createdAt": "2020-06-06T02:42:25Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/deployment/MultipleDeploymentsTest.java", "diffHunk": "@@ -44,19 +42,18 @@\n @ExtendWith(EGExtension.class)\n @Tag(\"E2E\")\n class MultipleDeploymentsTest extends BaseE2ETestCase {\n-    private Kernel kernel;\n \n     @BeforeEach\n-    void beforeEach() throws IOException {\n-        kernel = new Kernel().parseArgs(\"-i\", MultipleDeploymentsTest.class.getResource(\"blank_config.yaml\")\n-                .toString(), \"-r\", tempRootDir.toAbsolutePath().toString());\n-\n-        deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, BETA_REGION.toString());\n-\n-        Path localStoreContentPath = Paths\n-                .get(MultipleDeploymentsTest.class.getResource(\"local_store_content\").getPath());\n-        // pre-load contents to package store\n-        FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n+    void beforeEach() throws Exception {\n+        initKernel();\n+\n+        uploadTestComponentsToCms(true, new PackageIdentifier(\"CustomerApp\", new Semver(\"1.0.0\")),\n+                new PackageIdentifier(\"CustomerApp\", new Semver(\"0.9.0\")),\n+                new PackageIdentifier(\"CustomerApp\", new Semver(\"0.9.1\")),\n+                new PackageIdentifier(\"SomeService\", new Semver(\"1.0.0\")),\n+                new PackageIdentifier(\"GreenSignal\", new Semver(\"1.0.0\")),\n+                new PackageIdentifier(\"Mosquitto\", new Semver(\"1.0.0\")),\n+                new PackageIdentifier(\"Mosquitto\", new Semver(\"0.9.0\")));", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4ODY5OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436888698", "bodyText": "delete api is not implemented yet. We don't have a way to delete the components. Is it ok to leave these artifacts in test accounts for now?", "author": "hui-yang", "createdAt": "2020-06-08T17:53:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDM2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5MDExOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436890118", "bodyText": "I think the delete API exists though. Even if it doesn't do anything; I'd add the code to delete it now, that way we can't forget to add it.", "author": "MikeDombo", "createdAt": "2020-06-08T17:55:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDM2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDM4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230383", "bodyText": "remove the todo", "author": "MikeDombo", "createdAt": "2020-06-06T02:42:48Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/packagemanager/PackageManagerE2ETest.java", "diffHunk": "@@ -47,77 +44,32 @@\n @Tag(\"E2E\")\n class PackageManagerE2ETest extends BaseE2ETestCase {\n \n-    // Based on PackageManager.java\n-    private static final String RECIPE_DIRECTORY = \"recipes\";\n-    private static final String ARTIFACT_DIRECTORY = \"artifacts\";\n-\n     private static PackageManager packageManager;\n     private static DependencyResolver dependencyResolver;\n     private static Path packageStorePath;\n     private static AWSGreengrassComponentManagement cmsClient;\n \n-    private static Kernel kernel;\n-\n-    @TempDir\n-    static Path rootDir;\n-\n     @BeforeEach\n-    void setupKernel() throws IOException {\n-        System.setProperty(\"root\", rootDir.toAbsolutePath().toString());\n-        kernel = new Kernel();\n-        kernel.parseArgs(\"-i\", PackageManagerE2ETest.class.getResource(\"onlyMain.yaml\").toString());\n-        deviceProvisioningHelper.updateKernelConfigWithIotConfiguration(kernel, thingInfo, BETA_REGION.toString());\n-\n+    void setupKernel() throws Exception {\n         // The integration test will pick up credentials from the default provider chain\n         // In automated testing, the device environment should ideally have credentials for all tests\n         // For dev work, this requires you to have a working set of AWS Credentials on your dev box and/or your IDE\n         // environment\n-\n+        initKernel();\n         kernel.launch();\n \n-        Path localStoreContentPath = Paths.get(PackageManagerE2ETest.class.getResource(\"local_store_content\").getPath());\n-        // pre-load contents to package store\n-        FileUtils.copyFolderRecursively(localStoreContentPath, kernel.getPackageStorePath());\n-\n         // get required instances from context\n         packageManager = kernel.getContext().get(PackageManager.class);\n         dependencyResolver = kernel.getContext().get(DependencyResolver.class);\n         packageStorePath = kernel.getPackageStorePath();\n-\n         cmsClient = kernel.getContext().get(GreengrassPackageServiceClientFactory.class).getCmsClient();\n \n         // TODO: Ideally integ test should clean up after itself. Unfortunately the delete API is not implemented", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4OTk2Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436889966", "bodyText": "Still applies as delete api is not available for cleanup. (the delete request in aftereach is not actually doing anything)", "author": "hui-yang", "createdAt": "2020-06-08T17:55:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDM4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDUyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230524", "bodyText": "Can you change the string to be \"implementers\" since that is the proper spelling anyway?", "author": "MikeDombo", "createdAt": "2020-06-06T02:44:55Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -55,6 +55,8 @@\n  */\n public class Kernel {\n     private static final Logger logger = LogManager.getLogger(Kernel.class);\n+\n+    protected static final String CONTEXT_SERVICE_IMPLEMENTERS = \"service-implementors\";", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5MDA2NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436890065", "bodyText": "will do", "author": "hui-yang", "createdAt": "2020-06-08T17:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDUyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDY3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230670", "bodyText": "doesn't this request need to include the platforms too? Or is is just the recipe only?", "author": "MikeDombo", "createdAt": "2020-06-06T02:46:48Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceHelper.java", "diffHunk": "@@ -97,4 +109,78 @@ PackageRecipe downloadPackageRecipe(PackageIdentifier packageIdentifier)\n             throw new PackageLoadingException(errorMsg, e);\n         }\n     }\n+\n+    /**\n+     * Create a component with the given recipe file.\n+     *\n+     * @param recipeFilePath the path to the component recipe file\n+     * @return {@Link CreateComponentResult}\n+     * @throws IOException if file reading fails\n+     */\n+    public CreateComponentResult createComponent(Path recipeFilePath) throws IOException {\n+        ByteBuffer recipeBuf = ByteBuffer.wrap(Files.readAllBytes(recipeFilePath));\n+\n+        CreateComponentRequest createComponentRequest = new CreateComponentRequest().withRecipe(recipeBuf);", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5MDc0Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436890746", "bodyText": "The request does not include platforms. The recipe should have a \"Platforms\" key with a list of supported platforms.", "author": "hui-yang", "createdAt": "2020-06-08T17:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDcyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230721", "bodyText": "move this inside the try, then you don't need to pre-declare length.", "author": "MikeDombo", "createdAt": "2020-06-06T02:47:38Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceHelper.java", "diffHunk": "@@ -97,4 +109,78 @@ PackageRecipe downloadPackageRecipe(PackageIdentifier packageIdentifier)\n             throw new PackageLoadingException(errorMsg, e);\n         }\n     }\n+\n+    /**\n+     * Create a component with the given recipe file.\n+     *\n+     * @param recipeFilePath the path to the component recipe file\n+     * @return {@Link CreateComponentResult}\n+     * @throws IOException if file reading fails\n+     */\n+    public CreateComponentResult createComponent(Path recipeFilePath) throws IOException {\n+        ByteBuffer recipeBuf = ByteBuffer.wrap(Files.readAllBytes(recipeFilePath));\n+\n+        CreateComponentRequest createComponentRequest = new CreateComponentRequest().withRecipe(recipeBuf);\n+        logger.atDebug(\"create-component\").kv(\"request\", createComponentRequest).log();\n+        CreateComponentResult createComponentResult = evgCmsClient.createComponent(createComponentRequest);\n+        logger.atDebug(\"create-component\").kv(\"result\", createComponentResult).log();\n+        return createComponentResult;\n+    }\n+\n+    /**\n+     * Upload component artifacts for the specified component.\n+     *\n+     * @param artifact artifact file\n+     * @param componentName name of the component that requires the artifact\n+     * @param componentVersion version of the component that requires the artifact\n+     * @throws IOException if file upload fails\n+     */\n+    public void uploadComponentArtifact(File artifact, String componentName, String componentVersion)\n+            throws IOException {\n+        if (skipComponentArtifactUpload(artifact)) {\n+            logger.atDebug(\"upload-component-artifact\").kv(\"filePath\",  artifact.getAbsolutePath())\n+                    .log(\"Skip artifact upload. Not a regular file\");\n+            return;\n+        }\n+        logger.atDebug(\"upload-component-artifact\").kv(\"artifactName\", artifact.getName())\n+                .kv(\"filePath\", artifact.getAbsolutePath()).log();\n+        CreateComponentArtifactUploadUrlRequest artifactUploadUrlRequest = new CreateComponentArtifactUploadUrlRequest()\n+                .withComponentName(componentName).withComponentVersion(componentVersion)\n+                .withArtifactName(artifact.getName());\n+        CreateComponentArtifactUploadUrlResult artifactUploadUrlResult = evgCmsClient\n+                .createComponentArtifactUploadUrl(artifactUploadUrlRequest);\n+\n+        URL s3PreSignedURL = new URL(artifactUploadUrlResult.getUrl());\n+        HttpURLConnection connection = (HttpURLConnection) s3PreSignedURL.openConnection();\n+        connection.setDoOutput(true);\n+        connection.setRequestMethod(\"PUT\");\n+        connection.connect();\n+\n+        long length;\n+        try (BufferedOutputStream bos = new BufferedOutputStream(connection.getOutputStream())) {\n+            length = Files.copy(artifact.toPath(), bos);\n+        }\n+        logger.atDebug(\"upload-component-artifact\").kv(\"artifactName\", artifact.getName())", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDc3NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436230775", "bodyText": "why are you wrapping this with a list? It already is a list.", "author": "MikeDombo", "createdAt": "2020-06-06T02:48:27Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/PackageManager.java", "diffHunk": "@@ -90,8 +91,8 @@ public PackageManager(GreengrassRepositoryDownloader greengrassArtifactDownloade\n                 findActiveAndSatisfiedPackageMetadata(packageName, versionRequirement);\n \n         // 2. list available packages locally\n-        List<PackageMetadata> packageMetadataList =\n-                packageStore.listAvailablePackageMetadata(packageName, versionRequirement);\n+        List<PackageMetadata> packageMetadataList = new ArrayList<>(", "originalCommit": "794ba8cf63909560f5704e29571c0f8e0d58c6e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg5MzY1NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r436893655", "bodyText": "Without this change, ln112 packageMetadataList.addAll will throw UnsupportedOperationException", "author": "hui-yang", "createdAt": "2020-06-08T18:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMDc3NQ=="}], "type": "inlineReview"}, {"oid": "74a9e6962d43dac6d1952172304f462d4661092d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/74a9e6962d43dac6d1952172304f462d4661092d", "message": "Update all E2E tests to integrate with CMS", "committedDate": "2020-06-08T19:11:53Z", "type": "commit"}, {"oid": "558a6db28166bbf5af5a277de0870d7b6b317eb4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/558a6db28166bbf5af5a277de0870d7b6b317eb4", "message": "Upload test commponents in beforeAll", "committedDate": "2020-06-08T19:11:53Z", "type": "commit"}, {"oid": "558a6db28166bbf5af5a277de0870d7b6b317eb4", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/558a6db28166bbf5af5a277de0870d7b6b317eb4", "message": "Upload test commponents in beforeAll", "committedDate": "2020-06-08T19:11:53Z", "type": "forcePushed"}, {"oid": "ca50bf42c5b998c3cbea36127888e0f938972d5f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/ca50bf42c5b998c3cbea36127888e0f938972d5f", "message": "Merge branch 'master' into cms-e2e", "committedDate": "2020-06-09T18:20:34Z", "type": "commit"}, {"oid": "5dee086328b686074b8c9961fb043bc8bdc5b0ef", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/5dee086328b686074b8c9961fb043bc8bdc5b0ef", "message": "Merge branch 'master' into cms-e2e", "committedDate": "2020-06-09T21:39:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3Njc5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r437776795", "bodyText": "Nit - While this helps us consolidate all interactions with component management service behind a facade, I would prefer if code that is only used by tests stays in test utils, it will prevent any misunderstandings, and we will be able to only package what we really want to ship as part of the executables. When we eventually move E2E tests out of the current repository, we will need to remember to clean this up", "author": "shaguptashaikh", "createdAt": "2020-06-09T23:26:53Z", "path": "src/main/java/com/aws/iot/evergreen/packagemanager/GreengrassPackageServiceHelper.java", "diffHunk": "@@ -97,4 +111,100 @@ PackageRecipe downloadPackageRecipe(PackageIdentifier packageIdentifier)\n             throw new PackageLoadingException(errorMsg, e);\n         }\n     }\n+\n+    /**\n+     * Create a component with the given recipe file.\n+     *\n+     * @param cmsClient client of Component Management Service\n+     * @param recipeFilePath the path to the component recipe file\n+     * @return {@Link CreateComponentResult}\n+     * @throws IOException if file reading fails\n+     */\n+    public static CreateComponentResult createComponent(AWSGreengrassComponentManagement cmsClient,", "originalCommit": "5dee086328b686074b8c9961fb043bc8bdc5b0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4ODUzMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r437788531", "bodyText": "Good point. I put it in prod code for now in case we want to keep the eg CLI functionality to promote packages and deployments. Currenlty CLI initializes new clients with creds required. Since we have a client in the kernel, I was thinking we can channel back the promote request from CLI and make the service call in kernel.", "author": "hui-yang", "createdAt": "2020-06-10T00:06:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc3Njc5NQ=="}], "type": "inlineReview"}, {"oid": "4541a0ca064c41bc3348cd063276aafadc8ee254", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4541a0ca064c41bc3348cd063276aafadc8ee254", "message": "Increase unit test coverage", "committedDate": "2020-06-10T01:55:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0NTc4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r437845787", "bodyText": "Let's add a SIM for this. We really need a lot more tests here. And, by \"this\" I mean the package manager.", "author": "MikeDombo", "createdAt": "2020-06-10T03:56:46Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/e2e/packagemanager/PackageManagerE2ETest.java", "diffHunk": "@@ -27,110 +21,46 @@\n import org.junit.jupiter.api.Tag;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n-import org.junit.jupiter.api.io.TempDir;\n \n-import java.io.IOException;\n import java.nio.file.Path;\n-import java.nio.file.Paths;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n+import static com.aws.iot.evergreen.packagemanager.PackageStore.ARTIFACT_DIRECTORY;", "originalCommit": "4541a0ca064c41bc3348cd063276aafadc8ee254", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "69b11a7ad9a2060ea511190173bdd0223512d19d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/69b11a7ad9a2060ea511190173bdd0223512d19d", "message": "Add more unit tests for CMS service calls", "committedDate": "2020-06-10T19:10:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3NTM3OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r438375378", "bodyText": "can you remove the duplicate from L43 now?", "author": "MikeDombo", "createdAt": "2020-06-10T20:00:20Z", "path": ".github/workflows/maven.yml", "diffHunk": "@@ -32,6 +32,12 @@ jobs:\n         with:\n           name: Failed Test Report\n           path: target/surefire-reports\n+      - name: Upload Test Coverage Report\n+        uses: actions/upload-artifact@v1.0.0\n+        if: failure()\n+        with:\n+          name: Test Coverage Report\n+          path: target/jacoco-report", "originalCommit": "69b11a7ad9a2060ea511190173bdd0223512d19d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "43d529b72a565bfc93f6007904701a714489c566", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/43d529b72a565bfc93f6007904701a714489c566", "message": "Update github step to upload Coverage Report", "committedDate": "2020-06-10T20:29:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwNTkyOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r438405928", "bodyText": "are you sure the continue on error is wanted?\nif: always() makes sense, but I'm not sure about this one because it will continue to run the subsequent tasks.", "author": "MikeDombo", "createdAt": "2020-06-10T21:01:12Z", "path": ".github/workflows/maven.yml", "diffHunk": "@@ -36,6 +36,8 @@ jobs:\n         run: python3 .github/scripts/cover2cover.py target/jacoco-report/jacoco.xml src/main/java > target/jacoco-report/cobertura.xml\n       - name: Upload Coverage\n         uses: actions/upload-artifact@v1.0.0\n+        if: always()\n+        continue-on-error: true", "originalCommit": "43d529b72a565bfc93f6007904701a714489c566", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwNjg4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r438406882", "bodyText": "Also, I think you need to move this to be right after the test, otherwise the workflow will stop before this point.", "author": "MikeDombo", "createdAt": "2020-06-10T21:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwNTkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwODgwNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r438408806", "bodyText": "Yes there're 2 steps afterwards, cobertura-report and benchmark test compile. cobertura-report will mostly likely fail if the upload step fails. There's no harm to continue with the benchmark test compile though", "author": "hui-yang", "createdAt": "2020-06-10T21:07:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwNTkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMjMxOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/274#discussion_r438412319", "bodyText": "Synced offline, where to put this step should not change the behavior, which is always uploading the coverage reports.", "author": "hui-yang", "createdAt": "2020-06-10T21:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwNTkyOA=="}], "type": "inlineReview"}]}