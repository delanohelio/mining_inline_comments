{"pr_number": 388, "pr_title": "Improve initial directory setup, s3 publish, etc", "pr_createdAt": "2020-08-25T23:32:58Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2NDAzNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r476864037", "bodyText": "Recommendation generated by Amazon CodeGuru Reviewer. Leave feedback on this recommendation by replying to the comment or by reacting to the comment using emoji.\nProblem: InterruptedException is ignored. This can delay thread shutdown and clear the thread\u2019s interrupt status. Only code that implements a thread\u2019s interruption policy can swallow an interruption request.\nFix: Rethrow the InterruptedException or reinterrupt the current thread using Thread.currentThread().interrupt() so that higher-level interrupt handlers can function correctly.\nIf you are wrapping the InterruptedException inside a RuntimeException, call Thread.currentThread().interrupt() before throwing the RuntimeException.\nLearn more about interrupts and dealing with InterruptedException", "author": "MikeDombo", "createdAt": "2020-08-25T23:35:59Z", "path": "src/main/java/com/aws/iot/evergreen/util/orchestration/SystemdUtils.java", "diffHunk": "@@ -35,7 +34,7 @@ public boolean setupSystemService(KernelAlternatives kernelAlternatives) {\n             runCommand(\"systemctl enable greengrass.service\");\n             logger.atInfo().log(\"Successfully set up systemd service\");\n             return true;\n-        } catch (IOException | InterruptedException | URISyntaxException e) {\n+        } catch (IOException | InterruptedException e) {", "originalCommit": "38d21719bd81e359f48c51554e79c67e8a4ad18c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "30e1120a5e316832ec05c781bd1311abd716d0b0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/30e1120a5e316832ec05c781bd1311abd716d0b0", "message": "Improve initial directory setup, s3 publish, etc", "committedDate": "2020-08-25T23:40:38Z", "type": "commit"}, {"oid": "30e1120a5e316832ec05c781bd1311abd716d0b0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/30e1120a5e316832ec05c781bd1311abd716d0b0", "message": "Improve initial directory setup, s3 publish, etc", "committedDate": "2020-08-25T23:40:38Z", "type": "forcePushed"}, {"oid": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/9d3525292c0cd615a2b1e06bc1d85b4af3972e22", "message": "Merge branch 'master' into ku-init-dir", "committedDate": "2020-08-26T17:51:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477498391", "bodyText": "shouldn't this cause a bigger failure?", "author": "MikeDombo", "createdAt": "2020-08-26T18:21:08Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -65,6 +67,12 @@ public KernelAlternatives(Path kernelAltsPath) {\n         this.currentDir = kernelAltsPath.resolve(CURRENT_DIR).toAbsolutePath();\n         this.oldDir = kernelAltsPath.resolve(OLD_DIR).toAbsolutePath();\n         this.brokenDir = kernelAltsPath.resolve(BROKEN_DIR).toAbsolutePath();\n+\n+        try {\n+            setupInitLaunchDirIfAbsent();\n+        } catch (IOException e) {\n+            logger.atError().log(\"Unable to setup Kernel launch directory\", e);", "originalCommit": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5OTI4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477499282", "bodyText": "I don't want to break all tests in this package or UATs for now. We can update the error handling later", "author": "hui-yang", "createdAt": "2020-08-26T18:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5OTU5Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477499592", "bodyText": "Besides kernel update, not other tests rely on this setup", "author": "hui-yang", "createdAt": "2020-08-26T18:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMzM2Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477523366", "bodyText": "Just random thought, Maybe kernel can have an option to run as a daemon (when started by loader script), or run as fore-ground process. In daemon mode, file structure setup is required. In fore-ground process file structure setup isn't needed, but fg process kernel can't handle updates that needs to restart kernel.", "author": "ShirleyZheng92", "createdAt": "2020-08-26T19:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODM5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5ODY1Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/388#discussion_r477498653", "bodyText": "remove `", "author": "MikeDombo", "createdAt": "2020-08-26T18:21:38Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/KernelAlternatives.java", "diffHunk": "@@ -100,27 +108,43 @@ public boolean isLaunchDirSetup() {\n      * @throws IOException on I/O error\n      * @throws URISyntaxException if unable to determine source path of the Jar file\n      */\n-    public void setupInitLaunchDirIfAbsent() throws IOException, URISyntaxException {\n+    public void setupInitLaunchDirIfAbsent() throws IOException {\n         if (isLaunchDirSetup()) {\n             return;\n         }\n+        Path unpackDir;\n+        try {\n+            unpackDir = locateCurrentKernelUnpackDir();\n+        } catch (IOException | URISyntaxException e) {\n+            logger.atError().log(\"Unable to setup Kernel launch directory\", e);\n+            return;\n+        }\n         Path initialLaunchDir = altsDir.resolve(INITIAL_SETUP_DIR);\n         Utils.createPaths(initialLaunchDir);\n \n-        setupLinkToDirectory(initialLaunchDir.resolve(KERNEL_DISTRIBUTION_DIR), locateCurrentKernelUnpackDir());\n+        setupLinkToDirectory(initialLaunchDir.resolve(KERNEL_DISTRIBUTION_DIR), unpackDir);\n         setupLinkToDirectory(currentDir, initialLaunchDir);\n     }\n \n+    /**\n+     * Locate launch directory of Kernel, assuming unpack directory tree as below.\n+     * \u251c\u2500\u2500 bin\n+     * \u2502   \u251c\u2500\u2500 greengrass.service\n+     * \u2502   \u2514\u2500\u2500 loader\n+     * \u2514\u2500\u2500 lib\n+     *     \u2514\u2500\u2500 Evergreen.jar\n+     */\n+    @SuppressFBWarnings(value = \"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\", justification = \"Spotbugs false positive\")\n     private Path locateCurrentKernelUnpackDir() throws IOException, URISyntaxException {\n-        // TODO: validate file directory tree. Assuming unpackDir/lib/kernel.jar for now\n         Path parentDir = new File(KernelAlternatives.class.getProtectionDomain().getCodeSource().getLocation()\n                 .toURI()).toPath().getParent();\n-        if (parentDir == null || ! Files.exists(parentDir)) {\n+        if (parentDir == null || ! Files.exists(parentDir)\n+                || parentDir.getFileName() != null && !KERNEL_LIB_DIR.equals(parentDir.getFileName().toString())) {\n             throw new IOException(\"Unable to locate the parent directory of Kernel Jar file\");\n         }\n         Path unpackDir = parentDir.getParent();\n-        if (unpackDir == null || ! Files.exists(unpackDir)) {\n-            throw new IOException(\"Unable to locate the unpack directory of Kernel artifacts\");\n+        if (unpackDir == null || ! Files.exists(unpackDir) || !Files.isDirectory(unpackDir.resolve(KERNEL_BIN_DIR))) {\n+            throw new IOException(\"Unable to locate the unpack directory of Kernel artifacts`\");", "originalCommit": "9d3525292c0cd615a2b1e06bc1d85b4af3972e22", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "979f31746c146e0bd9426fa31d04b6262bb51d88", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/979f31746c146e0bd9426fa31d04b6262bb51d88", "message": "Fix typo", "committedDate": "2020-08-26T18:41:28Z", "type": "commit"}]}