{"pr_number": 57, "pr_title": "More checkstyle fixes", "pr_createdAt": "2020-02-08T00:42:07Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57", "timeline": [{"oid": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd62e500484a3854da7f028b3ce3f485e0204ee0", "message": "More checkstyle fixes", "committedDate": "2020-02-10T17:55:27Z", "type": "commit"}, {"oid": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/dd62e500484a3854da7f028b3ce3f485e0204ee0", "message": "More checkstyle fixes", "committedDate": "2020-02-10T17:55:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyMzc3MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377223771", "bodyText": "much easier to understand...", "author": "leaf94", "createdAt": "2020-02-10T17:59:10Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/Context.java", "diffHunk": "@@ -205,17 +247,28 @@ public synchronized void removeGlobalStateChangeListener(EvergreenService.Global\n         }\n     }\n \n-    public synchronized void globalNotifyStateChanged(EvergreenService l, final State was) {\n+    /**\n+     * Serially send an event to the global state change listeners.\n+     *\n+     * @param changedService the service which had a state change\n+     * @param previousState the previous state of the service\n+     */\n+    public synchronized void globalNotifyStateChanged(EvergreenService changedService, final State previousState) {\n         if (listeners != null) {\n-            listeners.forEach(s -> s.globalServiceStateChanged(l, was));\n+            listeners.forEach(s -> s.globalServiceStateChanged(changedService, previousState));", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI0NDUzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377244532", "bodyText": "Seems same as public Configuration read(URL url, boolean useSourceTimestamp) throws IOException. Which occasions should either be used?", "author": "hui-yang", "createdAt": "2020-02-10T18:40:59Z", "path": "src/main/java/com/aws/iot/evergreen/config/Configuration.java", "diffHunk": "@@ -209,6 +221,13 @@ public Configuration read(Reader in, String extension, long timestamp) throws IO\n         return this;\n     }\n \n+    /**\n+     * Read in a new configuration from a URL and merge it into the current config.", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MTExMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377281110", "bodyText": "readMerge calls read. The difference is that readMerge runs the read operation on the publish queue, so it is synchronous.", "author": "MikeDombo", "createdAt": "2020-02-10T19:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI0NDUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI1NDI1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377254256", "bodyText": "typo? if?", "author": "hui-yang", "createdAt": "2020-02-10T18:59:02Z", "path": "src/main/java/com/aws/iot/evergreen/config/Node.java", "diffHunk": "@@ -113,19 +135,21 @@ protected Object validate(Object newValue, Object oldValue) {\n \n     public abstract void deepForEachTopic(Consumer<Topic> f);\n \n-    public void remove() {\n-        if (parent != null) {\n-            parent.remove(this);\n-        }\n-    }\n-\n+    /**\n+     * Check if this node is a child of a node with the given name.\n+     *\n+     * @param n name to check for\n+     * @return true if this node is a child of a node named n\n+     */\n     public boolean childOf(String n) {\n         return n.equals(name) || parent != null && parent.childOf(n);\n     }\n \n     /**\n+     * Get if parents will be notified for changes.\n+     *\n      * @return false iff changes to this node should be ignored by it's parent", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3OTc5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377279795", "bodyText": "Do you mean \"iff\"?", "author": "MikeDombo", "createdAt": "2020-02-10T19:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI1NDI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MDI0NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377280244", "bodyText": "It is supposed to be \"iff\" which means \"if and only if\".  https://en.wikipedia.org/wiki/If_and_only_if. Also James wrote that comment and this PR isn't changing anything existing.", "author": "MikeDombo", "createdAt": "2020-02-10T19:50:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI1NDI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI1ODcxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377258718", "bodyText": "the modified time of the value to be updated? earlier than the mod time of the current value?", "author": "hui-yang", "createdAt": "2020-02-10T19:07:37Z", "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -83,6 +89,13 @@ public Topic setValue(Object nv) {\n         return setValue(System.currentTimeMillis(), nv);\n     }\n \n+    /**\n+     * Set the value of this topic to a new value.\n+     *\n+     * @param proposedModtime the last modified time of the value. If this is in the past, we do not update the value.", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MTg4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377281886", "bodyText": "Yes the modified time of the new value compared to the last modified time of the current value.", "author": "MikeDombo", "createdAt": "2020-02-10T19:53:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI1ODcxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2NzE5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377267194", "bodyText": "from cache? I'm assuming there are still other copies on the fs", "author": "hui-yang", "createdAt": "2020-02-10T19:24:37Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/EZPlugins.java", "diffHunk": "@@ -127,6 +142,12 @@ public EZPlugins loadCache() throws IOException {\n         return s.toArray(new String[0]);\n     }\n \n+    /**\n+     * Delete all plugins.", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3MzA3NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377273075", "bodyText": "The timeout is not obvious to me. Where is it defined? Should it even be mentioned?", "author": "hui-yang", "createdAt": "2020-02-10T19:36:19Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/GenericExternalService.java", "diffHunk": "@@ -87,23 +109,13 @@ public void run() {\n         }\n     }\n \n-    @Override\n-    public void shutdown() {\n-        inShutdown = true;\n-        run(\"shutdown\", null);\n-        Exec e = currentScript;\n-        if (e != null && e.isRunning()) {\n-            try {\n-                context.getLog().significant(getName(), \"shutting down\", e);\n-                e.close();\n-                e.waitClosed(1000);\n-            } catch (IOException ioe) {\n-                context.getLog().error(this, \"shutdown failure\", Utils.getUltimateMessage(ioe));\n-            }\n-        }\n-        inShutdown = false;\n-    }\n-\n+    /**\n+     * Run one of the commands defined in the config on the command line.\n+     *\n+     * @param name name of the command to run (\"run\", \"install\", \"start\").\n+     * @param background IntConsumer to receive the exit code. If null, the command will timeout after 2 minutes.", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MzAxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377283018", "bodyText": "It should be mentioned because this current interface is such that without an IntConsumer there is a timeout. I don't need to necessarily be specific on what the timeout is, though. It is defined in Exec.java btw.", "author": "MikeDombo", "createdAt": "2020-02-10T19:55:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3MzA3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3NzU1Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377277556", "bodyText": "Is it only for JSON encoded string? It seems to add quotes to any string", "author": "hui-yang", "createdAt": "2020-02-10T19:45:21Z", "path": "src/main/java/com/aws/iot/evergreen/util/Coerce.java", "diffHunk": "@@ -165,18 +202,32 @@ public static String toString(Object o) {\n         return dflt;\n     }\n \n+    /**\n+     * Convert object into a JSON encoded string.", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MjI1Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377282252", "bodyText": "Same thing, it JSON encodes them, meaning adding quotes and escaping special characters.", "author": "MikeDombo", "createdAt": "2020-02-10T19:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3NzU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3ODA5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377278095", "bodyText": "same. depends on the output format of o.toString()", "author": "hui-yang", "createdAt": "2020-02-10T19:46:19Z", "path": "src/main/java/com/aws/iot/evergreen/util/Coerce.java", "diffHunk": "@@ -165,18 +202,32 @@ public static String toString(Object o) {\n         return dflt;\n     }\n \n+    /**\n+     * Convert object into a JSON encoded string.\n+     *\n+     * @param o object to convert.\n+     * @return resulting string.\n+     */\n+    @SuppressWarnings(\"checkstyle:emptycatchblock\")\n     public static String toQuotedString(Object o) {\n         if (o instanceof Topic) {\n             o = ((Topic) o).getOnce();\n         }\n         StringBuilder sb = new StringBuilder();\n         try {\n             toQuotedString(o, sb);\n-        } catch (IOException ex) {\n+        } catch (IOException ignored) {\n         }\n         return sb.toString();\n     }\n \n+    /**\n+     * Convert object to a JSON encoded string, writing output to the appendable.", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3ODI3Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/57#discussion_r377278277", "bodyText": "same", "author": "hui-yang", "createdAt": "2020-02-10T19:46:42Z", "path": "src/main/java/com/aws/iot/evergreen/util/Coerce.java", "diffHunk": "@@ -210,6 +261,13 @@ public static void toQuotedString(Object o, Appendable out) throws IOException {\n         out.append('\"');\n     }\n \n+    /**\n+     * Convert object to JSON encoded string and write output to the appendable.", "originalCommit": "dd62e500484a3854da7f028b3ce3f485e0204ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}