{"pr_number": 964, "pr_title": "TITUS-4588 Add support for EBS persistent volume claims", "pr_createdAt": "2020-12-18T04:36:42Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/964", "timeline": [{"oid": "5122542c6ddd83e319d236826751508dc48744e1", "url": "https://github.com/Netflix/titus-control-plane/commit/5122542c6ddd83e319d236826751508dc48744e1", "message": "TITUS-4588 Add support for EBS persistent volume claims", "committedDate": "2020-12-18T04:32:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEwOTkxNg==", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546109916", "bodyText": "This is just grace period seconds. Any idea why it was 1 before?", "author": "solarkennedy", "createdAt": "2020-12-18T21:57:21Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "diffHunk": "@@ -97,13 +98,26 @@ public boolean shouldGc() {\n \n     @Override\n     public boolean gcItem(V1PersistentVolume pv) {\n+        // Delete the volume's PVC first\n+        if (!gcPersistentVolumeClaim(pv)) {\n+            // If we cannot delete the PVC then we did not successfully GC the volume.\n+            // The PVC and PV will be part of a subsequent GC iteration.\n+            return false;\n+        }\n+        return gcPersistentVolume(pv);\n+    }\n+\n+    private boolean gcPersistentVolume(V1PersistentVolume pv) {\n         String volumeName = KubeUtil.getMetadataName(pv.getMetadata());\n         try {\n+            // If the PV is deleted while still associated with a PVC (though that is not expected), the PV\n+            // will not be removed until it is no longer bound to a PVC.\n+            // https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection\n             kubeApiFacade.getCoreV1Api().deletePersistentVolume(\n                     volumeName,\n                     null,\n                     null,\n-                    1,\n+                    0,", "originalCommit": "5122542c6ddd83e319d236826751508dc48744e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEzMDU3Mg==", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546130572", "bodyText": "It is grace period seconds. I accidentally set it to 1 previously and am fixing here.", "author": "andrew-leung", "createdAt": "2020-12-18T22:56:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEwOTkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0NzcwOA==", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546147708", "bodyText": "return true when it is not found in the catch(ApiException) block?", "author": "joshi-keyur", "createdAt": "2020-12-18T23:41:22Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "diffHunk": "@@ -120,6 +134,38 @@ public boolean gcItem(V1PersistentVolume pv) {\n         return false;", "originalCommit": "5122542c6ddd83e319d236826751508dc48744e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE1Mzg4Ng==", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546153886", "bodyText": "Yes, good catch!", "author": "andrew-leung", "createdAt": "2020-12-18T23:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0NzcwOA=="}], "type": "inlineReview"}, {"oid": "de3d73fc8bb253f567ff2ea1e9f310d02ffa7ccb", "url": "https://github.com/Netflix/titus-control-plane/commit/de3d73fc8bb253f567ff2ea1e9f310d02ffa7ccb", "message": "Consider gc of non existent PV success", "committedDate": "2020-12-19T00:10:34Z", "type": "commit"}]}