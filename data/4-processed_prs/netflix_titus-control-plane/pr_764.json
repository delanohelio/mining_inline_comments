{"pr_number": 764, "pr_title": "Add containers per node limit placement constraint", "pr_createdAt": "2020-02-07T23:13:41Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/764", "timeline": [{"oid": "9952569a74e6fb0c48ba4e3f718d697c8bf7a8d0", "url": "https://github.com/Netflix/titus-control-plane/commit/9952569a74e6fb0c48ba4e3f718d697c8bf7a8d0", "message": "Add containers per node limit placement constraint", "committedDate": "2020-02-07T22:51:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY2MzU4NA==", "url": "https://github.com/Netflix/titus-control-plane/pull/764#discussion_r376663584", "bodyText": "add this new kind to FailureKind.IGNORED_FOR_OPPORTUNISTIC_SCHEDULING since it should not cause opportunistic behavior to change", "author": "fabiokung", "createdAt": "2020-02-08T00:10:56Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/TaskPlacementFailure.java", "diffHunk": "@@ -54,6 +54,11 @@\n          */\n         LaunchGuard,\n \n+        /**\n+         * Task not launched on an agent, as it runs the maximum allowed number of containers.\n+         */\n+        AgentContainerLimit,", "originalCommit": "9952569a74e6fb0c48ba4e3f718d697c8bf7a8d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY2NDA2MA==", "url": "https://github.com/Netflix/titus-control-plane/pull/764#discussion_r376664060", "bodyText": "should this be protected against the empty string? Why not use .equals() instead of .contains()?", "author": "fabiokung", "createdAt": "2020-02-08T00:13:31Z", "path": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/constraint/AgentContainerLimitSystemConstraint.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.master.scheduler.constraint;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import com.netflix.fenzo.TaskRequest;\n+import com.netflix.fenzo.TaskTrackerState;\n+import com.netflix.fenzo.VirtualMachineCurrentState;\n+import com.netflix.titus.master.scheduler.SchedulerConfiguration;\n+\n+@Singleton\n+public class AgentContainerLimitSystemConstraint implements SystemConstraint {\n+\n+    public static final String NAME = AgentContainerLimitSystemConstraint.class.getSimpleName();\n+\n+    private static final Result VALID = new Result(true, \"\");\n+    private static final Result TOO_MANY_CONTAINERS = new Result(false, \"Too many containers on the agent node\");\n+\n+    private final SchedulerConfiguration configuration;\n+\n+    @Inject\n+    public AgentContainerLimitSystemConstraint(SchedulerConfiguration configuration) {\n+        this.configuration = configuration;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return NAME;\n+    }\n+\n+    @Override\n+    public Result evaluate(TaskRequest taskRequest, VirtualMachineCurrentState targetVM, TaskTrackerState taskTrackerState) {\n+        int total = targetVM.getRunningTasks().size() + targetVM.getTasksCurrentlyAssigned().size();\n+        int max = Math.max(1, configuration.getMaxTasksPerMachine());\n+        return total < max ? VALID : TOO_MANY_CONTAINERS;\n+    }\n+\n+    public static boolean isAgentContainerLimitSystemConstraint(String reason) {\n+        return reason != null && TOO_MANY_CONTAINERS.getFailureReason().contains(reason);", "originalCommit": "9952569a74e6fb0c48ba4e3f718d697c8bf7a8d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxOTk2MQ==", "url": "https://github.com/Netflix/titus-control-plane/pull/764#discussion_r376719961", "bodyText": "Copy paste. It should be equals.", "author": "tbak", "createdAt": "2020-02-08T16:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY2NDA2MA=="}], "type": "inlineReview"}, {"oid": "a501e9bf48ab3f10493eb21c623d60ac91581757", "url": "https://github.com/Netflix/titus-control-plane/commit/a501e9bf48ab3f10493eb21c623d60ac91581757", "message": "Code review updates", "committedDate": "2020-02-10T16:16:13Z", "type": "commit"}]}