{"pr_number": 894, "pr_title": "Configurable prediction quantiles", "pr_createdAt": "2020-08-06T19:50:13Z", "pr_url": "https://github.com/Netflix/titus-control-plane/pull/894", "timeline": [{"oid": "2d047144aac221b8cc3b2bde78ac10ee1ce100a4", "url": "https://github.com/Netflix/titus-control-plane/commit/2d047144aac221b8cc3b2bde78ac10ee1ce100a4", "message": "Configurable prediction quantiles", "committedDate": "2020-08-06T19:48:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NjQ3Nw==", "url": "https://github.com/Netflix/titus-control-plane/pull/894#discussion_r467246477", "bodyText": "minor: I'm always a bit worried about comparing floating point numbers with ==. Might be good to compare against a tiny epsilon range here to make it less brittle to floating point math in the future", "author": "fabiokung", "createdAt": "2020-08-07T20:09:19Z", "path": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/endpoint/admission/JobRuntimePredictionUtil.java", "diffHunk": "@@ -16,21 +16,31 @@\n \n package com.netflix.titus.runtime.endpoint.admission;\n \n+import java.util.Optional;\n+import java.util.SortedSet;\n+\n import com.netflix.titus.runtime.connector.prediction.JobRuntimePrediction;\n import org.apache.commons.math3.distribution.NormalDistribution;\n \n-final class JobRuntimePredictionUtil {\n+public final class JobRuntimePredictionUtil {\n \n     private static final double LOW_QUANTILE = 0.05;\n-    private static final double HIGH_QUANTILE = 0.95;\n+    public static final double HIGH_QUANTILE = 0.95;\n \n     static final double NORM_SIGMA = computeNormSigma();\n \n     private JobRuntimePredictionUtil() {\n     }\n \n-    static boolean expectedQuantiles(JobRuntimePrediction low, JobRuntimePrediction high) {\n-        return low.getConfidence() == LOW_QUANTILE && high.getConfidence() == HIGH_QUANTILE;\n+    static boolean expectedLowest(JobRuntimePrediction low) {\n+        return low.getConfidence() == LOW_QUANTILE;\n+    }\n+\n+    static Optional<JobRuntimePrediction> findRequested(SortedSet<JobRuntimePrediction> predictions, double quantile) {\n+        if (predictions.isEmpty()) {\n+            return Optional.empty();\n+        }\n+        return predictions.stream().filter(p -> p.getConfidence() == quantile).findFirst();", "originalCommit": "2d047144aac221b8cc3b2bde78ac10ee1ce100a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1NDg2Nw==", "url": "https://github.com/Netflix/titus-control-plane/pull/894#discussion_r467254867", "bodyText": "I agree in general. In this case however exact match is what we want, as we compare two configured values.", "author": "tbak", "createdAt": "2020-08-07T20:30:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NjQ3Nw=="}], "type": "inlineReview"}]}