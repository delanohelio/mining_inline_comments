{"pr_number": 8057, "pr_title": "[netatmo] Null annotations Part 3 of 3", "pr_createdAt": "2020-07-03T06:33:27Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8057", "timeline": [{"oid": "9c03927cd688272aaf4b88df2bc7020791427f02", "url": "https://github.com/openhab/openhab-addons/commit/9c03927cd688272aaf4b88df2bc7020791427f02", "message": "[netatmo] Null annotations Part 3 of 3\n\nFix #7913\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-03T06:26:38Z", "type": "commit"}, {"oid": "7df949736fe8f7677c14833a8ff3f548484445e0", "url": "https://github.com/openhab/openhab-addons/commit/7df949736fe8f7677c14833a8ff3f548484445e0", "message": "Video status only set when there is a video in the event\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-04T11:44:23Z", "type": "commit"}, {"oid": "7df949736fe8f7677c14833a8ff3f548484445e0", "url": "https://github.com/openhab/openhab-addons/commit/7df949736fe8f7677c14833a8ff3f548484445e0", "message": "Video status only set when there is a video in the event\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-04T11:44:23Z", "type": "forcePushed"}, {"oid": "e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "url": "https://github.com/openhab/openhab-addons/commit/e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "message": "Add a setting to enable/disable the background discovery\n\nFix #8083\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-07T17:56:56Z", "type": "commit"}, {"oid": "e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "url": "https://github.com/openhab/openhab-addons/commit/e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "message": "Add a setting to enable/disable the background discovery\n\nFix #8083\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-07T17:56:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA5NzE5NA==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r451097194", "bodyText": "Please put each sentence on its own line.", "author": "cpmeister", "createdAt": "2020-07-07T19:36:09Z", "path": "bundles/org.openhab.binding.netatmo/README.md", "diffHunk": "@@ -503,10 +509,9 @@ All these channels are read only.\n ### Welcome and Presence Camera\n \n Warnings:\n-- The URL of the live snapshot is a fixed URL so the value of the channel cameraLivePictureUrl / welcomeCameraLivePictureUrl will never be updated once first set by the binding.\n-So to get a refreshed picture, you need to use the refresh parameter in your sitemap image element.\n-- Some features like the video surveillance are accessed via the local network, so it may be helpful to set a static IP address\n-for the camera within your local network.\n+\n+- The URL of the live snapshot is a fixed URL so the value of the channel cameraLivePictureUrl / welcomeCameraLivePictureUrl will never be updated once first set by the binding. So to get a refreshed picture, you need to use the refresh parameter in your sitemap image element.", "originalCommit": "e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyNzE2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r451327165", "bodyText": "This was done to avoid a warning in the checks (blank line required after a list item, something like that).\nEither 2 lines to help maintenance but a warning, or one line and no warning.\nLet me know what you prefer.", "author": "lolodomo", "createdAt": "2020-07-08T07:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA5NzE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyNDAwMg==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r452524002", "bodyText": "Just leave as is then. I've prefer to avoid the warning even if it might be misguided.", "author": "cpmeister", "createdAt": "2020-07-09T22:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA5NzE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA5ODE0NA==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r451098144", "bodyText": "Caching the bridge handler result in a local variable is much safer from a concurrency standpoint.", "author": "cpmeister", "createdAt": "2020-07-07T19:38:02Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/AbstractNetatmoThingHandler.java", "diffHunk": "@@ -233,21 +237,30 @@ protected void updateProperties(Integer firmware, String modelId) {\n         updateProperties(properties);\n     }\n \n+    protected Optional<RadioHelper> getRadioHelper() {\n+        RadioHelper helper = radioHelper;\n+        return helper != null ? Optional.of(helper) : Optional.empty();\n+    }\n+\n+    protected Optional<BatteryHelper> getBatteryHelper() {\n+        BatteryHelper helper = batteryHelper;\n+        return helper != null ? Optional.of(helper) : Optional.empty();\n+    }\n+\n     public void updateMeasurements() {\n     }\n \n-    public void getMeasurements(String device, @Nullable String module, String scale, List<String> types,\n+    public void getMeasurements(@Nullable String device, @Nullable String module, String scale, List<String> types,\n             List<String> channels, Map<String, Float> channelMeasurements) {\n-        NetatmoBridgeHandler handler = getBridgeHandler();\n-        if (handler == null) {\n+        if (!getBridgeHandler().isPresent() || device == null) {", "originalCommit": "e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMTIzNA==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r451101234", "bodyText": "getBridgeHandler() and getModule() should be cached to local variables", "author": "cpmeister", "createdAt": "2020-07-07T19:44:03Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/welcome/NAWelcomePersonHandler.java", "diffHunk": "@@ -105,21 +102,20 @@ protected State getNAThingProperty(@NonNull String channelId) {\n         return super.getNAThingProperty(channelId);\n     }\n \n-    private String getLastEventURL() {\n-        NetatmoBridgeHandler bridgeHandler = getBridgeHandler();\n-        if (bridgeHandler != null && lastEvent != null && lastEvent.getSnapshot() != null) {\n-            return bridgeHandler.getPictureUrl(lastEvent.getSnapshot().getId(), lastEvent.getSnapshot().getKey());\n+    private @Nullable String getLastEventURL() {\n+        if (getBridgeHandler().isPresent() && getLastEvent().isPresent()\n+                && getLastEvent().get().getSnapshot() != null) {\n+            return getBridgeHandler().get().getPictureUrl(getLastEvent().get().getSnapshot().getId(),\n+                    getLastEvent().get().getSnapshot().getKey());\n         }\n         return null;\n     }\n \n-    private String getAvatarURL() {\n-        NetatmoBridgeHandler bridgeHandler = getBridgeHandler();\n-        NAWelcomePerson module = this.module;\n-        if (bridgeHandler != null && avatarURL == null && module != null) {\n-            NAWelcomeFace face = module.getFace();\n+    private @Nullable String getAvatarURL() {\n+        if (getBridgeHandler().isPresent() && avatarURL == null && getModule().isPresent()) {", "originalCommit": "e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMjA3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r451102072", "bodyText": "getBridgeHandler() and getLastEvent() should be cached to local variables", "author": "cpmeister", "createdAt": "2020-07-07T19:45:39Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/welcome/NAWelcomePersonHandler.java", "diffHunk": "@@ -105,21 +102,20 @@ protected State getNAThingProperty(@NonNull String channelId) {\n         return super.getNAThingProperty(channelId);\n     }\n \n-    private String getLastEventURL() {\n-        NetatmoBridgeHandler bridgeHandler = getBridgeHandler();\n-        if (bridgeHandler != null && lastEvent != null && lastEvent.getSnapshot() != null) {\n-            return bridgeHandler.getPictureUrl(lastEvent.getSnapshot().getId(), lastEvent.getSnapshot().getKey());\n+    private @Nullable String getLastEventURL() {\n+        if (getBridgeHandler().isPresent() && getLastEvent().isPresent()\n+                && getLastEvent().get().getSnapshot() != null) {", "originalCommit": "e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMjkwMA==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r451102900", "bodyText": "you get the idea, fix wherever else it might apply.", "author": "cpmeister", "createdAt": "2020-07-07T19:47:04Z", "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/welcome/NAWelcomePersonHandler.java", "diffHunk": "@@ -70,32 +65,34 @@ public void updateChannels(Object module) {\n                         lastEvent = event;\n                     }\n                 });\n-            }\n+            });\n \n             setRefreshRequired(false);\n         }\n         super.updateChannels(module);\n     }\n \n     @Override\n-    protected State getNAThingProperty(@NonNull String channelId) {\n-        NAWelcomePerson module = this.module;\n+    protected State getNAThingProperty(String channelId) {\n         switch (channelId) {\n             case CHANNEL_WELCOME_PERSON_LASTSEEN:\n-                return module != null ? toDateTimeType(module.getLastSeen(), timeZoneProvider.getTimeZone())\n-                        : UnDefType.UNDEF;\n+                return getModule().map(m -> toDateTimeType(m.getLastSeen(), timeZoneProvider.getTimeZone()))\n+                        .orElse(UnDefType.UNDEF);\n             case CHANNEL_WELCOME_PERSON_ATHOME:\n-                return module != null ? module.getOutOfSight() ? OnOffType.OFF : OnOffType.ON : UnDefType.UNDEF;\n+                return getModule()\n+                        .map(m -> m.getOutOfSight() != null ? toOnOffType(!m.getOutOfSight()) : UnDefType.UNDEF)\n+                        .orElse(UnDefType.UNDEF);\n             case CHANNEL_WELCOME_PERSON_AVATAR_URL:\n                 return toStringType(getAvatarURL());\n             case CHANNEL_WELCOME_PERSON_AVATAR:\n                 return getAvatarURL() != null ? HttpUtil.downloadImage(getAvatarURL()) : UnDefType.UNDEF;\n             case CHANNEL_WELCOME_PERSON_LASTMESSAGE:\n-                return (lastEvent != null && lastEvent.getMessage() != null)\n-                        ? toStringType(lastEvent.getMessage().replace(\"<b>\", \"\").replace(\"</b>\", \"\"))\n+                return (getLastEvent().isPresent() && getLastEvent().get().getMessage() != null)\n+                        ? toStringType(getLastEvent().get().getMessage().replace(\"<b>\", \"\").replace(\"</b>\", \"\"))", "originalCommit": "e0113c48e6b24c9c9232fa9a5345658f84d5eb61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM0MDAyMg==", "url": "https://github.com/openhab/openhab-addons/pull/8057#discussion_r451340022", "bodyText": "Understood", "author": "lolodomo", "createdAt": "2020-07-08T07:32:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMjkwMA=="}], "type": "inlineReview"}, {"oid": "c34133a587a4076ce25391c0788cfe51deefcfce", "url": "https://github.com/openhab/openhab-addons/commit/c34133a587a4076ce25391c0788cfe51deefcfce", "message": "Cache Optional result in local variable\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-07-08T13:54:03Z", "type": "commit"}]}