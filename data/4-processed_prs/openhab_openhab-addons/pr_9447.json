{"pr_number": 9447, "pr_title": "Improved README for Jython scripting", "pr_createdAt": "2020-12-20T22:34:48Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9447", "timeline": [{"oid": "4311fefe3325fc7c998f09627d4826d0a01b3f73", "url": "https://github.com/openhab/openhab-addons/commit/4311fefe3325fc7c998f09627d4826d0a01b3f73", "message": "Improved README for Jython scripting\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-12-20T22:34:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ0NjU2MA==", "url": "https://github.com/openhab/openhab-addons/pull/9447#discussion_r546446560", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To enable debug logging, use the [Karaf logging]({{base}}/administration/logging.html) commands to\n          \n          \n            \n            To enable debug logging, use the [console logging]({{base}}/administration/logging.html) commands to", "author": "Confectrician", "createdAt": "2020-12-20T22:39:38Z", "path": "bundles/org.openhab.automation.jythonscripting/README.md", "diffHunk": "@@ -1,5 +1,56 @@\n # Jython Scripting\n \n-This addon provides a [Jython](https://www.jython.org/) 2.7.2 for use with scripted automation and eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n-The `python.home` System property will be set to the path of the add-on.\n-The `python.path` System property will be set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+This add-on provides [Jython](https://www.jython.org/) 2.7.2 that can be used as a scripting language within automation rules and which eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n+\n+The `python.home` system property is set to the path of the add-on.\n+\n+The `python.path` system property is set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+\n+## Creating Jython Scripts\n+\n+When this add-on is installed, you can select Jython as a scripting language when creating a script action within the rule editor of the UI.\n+\n+Alternatively, you can create scripts in the `automation/jsr223` configuration directory.\n+If you create an empty file called `test.py`, you will see a log line with information similar to:\n+\n+```text\n+    ... [INFO ] [.a.m.s.r.i.l.ScriptFileWatcher:150  ] - Loading script 'test.py'\n+```\n+\n+To enable debug logging, use the [Karaf logging]({{base}}/administration/logging.html) commands to", "originalCommit": "4311fefe3325fc7c998f09627d4826d0a01b3f73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e7641a0e4eeeb2d2111af505584dc15db4a2b0cd", "url": "https://github.com/openhab/openhab-addons/commit/e7641a0e4eeeb2d2111af505584dc15db4a2b0cd", "message": "Update bundles/org.openhab.automation.jythonscripting/README.md\n\nCo-authored-by: Jerome Luckenbach <github@luckenba.ch>", "committedDate": "2020-12-20T22:40:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4MTQzNA==", "url": "https://github.com/openhab/openhab-addons/pull/9447#discussion_r546781434", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The openHAB server uses the [SLFJ](https://www.slf4j.org/) library for logging.\n          \n          \n            \n            The openHAB server uses the [SLF4J](https://www.slf4j.org/) library for logging.", "author": "wborn", "createdAt": "2020-12-21T15:49:39Z", "path": "bundles/org.openhab.automation.jythonscripting/README.md", "diffHunk": "@@ -1,5 +1,56 @@\n # Jython Scripting\n \n-This addon provides a [Jython](https://www.jython.org/) 2.7.2 for use with scripted automation and eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n-The `python.home` System property will be set to the path of the add-on.\n-The `python.path` System property will be set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+This add-on provides [Jython](https://www.jython.org/) 2.7.2 that can be used as a scripting language within automation rules and which eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n+\n+The `python.home` system property is set to the path of the add-on.\n+\n+The `python.path` system property is set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+\n+## Creating Jython Scripts\n+\n+When this add-on is installed, you can select Jython as a scripting language when creating a script action within the rule editor of the UI.\n+\n+Alternatively, you can create scripts in the `automation/jsr223` configuration directory.\n+If you create an empty file called `test.py`, you will see a log line with information similar to:\n+\n+```text\n+    ... [INFO ] [.a.m.s.r.i.l.ScriptFileWatcher:150  ] - Loading script 'test.py'\n+```\n+\n+To enable debug logging, use the [console logging]({{base}}/administration/logging.html) commands to\n+enable debug logging for the automation functionality:\n+\n+```text\n+log:set DEBUG org.openhab.core.automation\n+```\n+\n+## Script Examples\n+\n+Jython scripts provide access to almost all the functionality in an openHAB runtime environment.\n+As a simple example, the following script logs \"Hello, World!\".\n+Note that `print` will usually not work since the output has no terminal to display the text.\n+The openHAB server uses the [SLFJ](https://www.slf4j.org/) library for logging.", "originalCommit": "e7641a0e4eeeb2d2111af505584dc15db4a2b0cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4MTU4OQ==", "url": "https://github.com/openhab/openhab-addons/pull/9447#discussion_r546781589", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Be careful with using wildcards when importing Java packages (e.g., `import org.sl4j.*`).\n          \n          \n            \n            Be careful with using wildcards when importing Java packages (e.g., `import org.slf4j.*`).", "author": "wborn", "createdAt": "2020-12-21T15:49:54Z", "path": "bundles/org.openhab.automation.jythonscripting/README.md", "diffHunk": "@@ -1,5 +1,56 @@\n # Jython Scripting\n \n-This addon provides a [Jython](https://www.jython.org/) 2.7.2 for use with scripted automation and eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n-The `python.home` System property will be set to the path of the add-on.\n-The `python.path` System property will be set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+This add-on provides [Jython](https://www.jython.org/) 2.7.2 that can be used as a scripting language within automation rules and which eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n+\n+The `python.home` system property is set to the path of the add-on.\n+\n+The `python.path` system property is set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+\n+## Creating Jython Scripts\n+\n+When this add-on is installed, you can select Jython as a scripting language when creating a script action within the rule editor of the UI.\n+\n+Alternatively, you can create scripts in the `automation/jsr223` configuration directory.\n+If you create an empty file called `test.py`, you will see a log line with information similar to:\n+\n+```text\n+    ... [INFO ] [.a.m.s.r.i.l.ScriptFileWatcher:150  ] - Loading script 'test.py'\n+```\n+\n+To enable debug logging, use the [console logging]({{base}}/administration/logging.html) commands to\n+enable debug logging for the automation functionality:\n+\n+```text\n+log:set DEBUG org.openhab.core.automation\n+```\n+\n+## Script Examples\n+\n+Jython scripts provide access to almost all the functionality in an openHAB runtime environment.\n+As a simple example, the following script logs \"Hello, World!\".\n+Note that `print` will usually not work since the output has no terminal to display the text.\n+The openHAB server uses the [SLFJ](https://www.slf4j.org/) library for logging.\n+\n+```python\n+from org.slf4j import LoggerFactory\n+\n+LoggerFactory.getLogger(\"org.openhab.core.automation.examples\").info(\"Hello world!\")\n+```\n+\n+Jython can [import Java classes](http://www.jython.org/jythonbook/en/1.0/ModulesPackages.html).\n+Depending on the openHAB logging configuration, you may need to prefix logger names with `org.openhab.core.automation` for them to show up in the log file (or you modify the logging configuration).\n+\n+::: tip Note\n+Be careful with using wildcards when importing Java packages (e.g., `import org.sl4j.*`).", "originalCommit": "e7641a0e4eeeb2d2111af505584dc15db4a2b0cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4MzYyNg==", "url": "https://github.com/openhab/openhab-addons/pull/9447#discussion_r546783626", "bodyText": "It gives a 404, this might be better:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [Java package scanning](http://www.jython.org/jythonbook/en/1.0/ModulesPackages.html#java-package-scanning).\n          \n          \n            \n            [Java package scanning](https://jython.readthedocs.io/en/latest/ModulesPackages/#java-package-scanning).", "author": "wborn", "createdAt": "2020-12-21T15:53:22Z", "path": "bundles/org.openhab.automation.jythonscripting/README.md", "diffHunk": "@@ -1,5 +1,56 @@\n # Jython Scripting\n \n-This addon provides a [Jython](https://www.jython.org/) 2.7.2 for use with scripted automation and eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n-The `python.home` System property will be set to the path of the add-on.\n-The `python.path` System property will be set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+This add-on provides [Jython](https://www.jython.org/) 2.7.2 that can be used as a scripting language within automation rules and which eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n+\n+The `python.home` system property is set to the path of the add-on.\n+\n+The `python.path` system property is set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+\n+## Creating Jython Scripts\n+\n+When this add-on is installed, you can select Jython as a scripting language when creating a script action within the rule editor of the UI.\n+\n+Alternatively, you can create scripts in the `automation/jsr223` configuration directory.\n+If you create an empty file called `test.py`, you will see a log line with information similar to:\n+\n+```text\n+    ... [INFO ] [.a.m.s.r.i.l.ScriptFileWatcher:150  ] - Loading script 'test.py'\n+```\n+\n+To enable debug logging, use the [console logging]({{base}}/administration/logging.html) commands to\n+enable debug logging for the automation functionality:\n+\n+```text\n+log:set DEBUG org.openhab.core.automation\n+```\n+\n+## Script Examples\n+\n+Jython scripts provide access to almost all the functionality in an openHAB runtime environment.\n+As a simple example, the following script logs \"Hello, World!\".\n+Note that `print` will usually not work since the output has no terminal to display the text.\n+The openHAB server uses the [SLFJ](https://www.slf4j.org/) library for logging.\n+\n+```python\n+from org.slf4j import LoggerFactory\n+\n+LoggerFactory.getLogger(\"org.openhab.core.automation.examples\").info(\"Hello world!\")\n+```\n+\n+Jython can [import Java classes](http://www.jython.org/jythonbook/en/1.0/ModulesPackages.html).\n+Depending on the openHAB logging configuration, you may need to prefix logger names with `org.openhab.core.automation` for them to show up in the log file (or you modify the logging configuration).\n+\n+::: tip Note\n+Be careful with using wildcards when importing Java packages (e.g., `import org.sl4j.*`).\n+This will work in some cases, but it might not work in some situations.\n+It is best to use explicit imports with Java packages.\n+For more details, see the Jython documentation on\n+[Java package scanning](http://www.jython.org/jythonbook/en/1.0/ModulesPackages.html#java-package-scanning).", "originalCommit": "e7641a0e4eeeb2d2111af505584dc15db4a2b0cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgxMDA1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9447#discussion_r546810055", "bodyText": "This is still only a suggestion and not committed @kaikreuzer.", "author": "wborn", "createdAt": "2020-12-21T16:41:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4MzYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4NDE5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9447#discussion_r546784197", "bodyText": "It gives a 404, this might be better:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Jython can [import Java classes](http://www.jython.org/jythonbook/en/1.0/ModulesPackages.html).\n          \n          \n            \n            Jython can [import Java classes](https://jython.readthedocs.io/en/latest/ModulesPackages/).", "author": "wborn", "createdAt": "2020-12-21T15:54:27Z", "path": "bundles/org.openhab.automation.jythonscripting/README.md", "diffHunk": "@@ -1,5 +1,56 @@\n # Jython Scripting\n \n-This addon provides a [Jython](https://www.jython.org/) 2.7.2 for use with scripted automation and eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n-The `python.home` System property will be set to the path of the add-on.\n-The `python.path` System property will be set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+This add-on provides [Jython](https://www.jython.org/) 2.7.2 that can be used as a scripting language within automation rules and which eliminates the need to download Jython and create `EXTRA_JAVA_OPTS` entries for `bootclasspath`, `python.home` and `python.path`.\n+\n+The `python.home` system property is set to the path of the add-on.\n+\n+The `python.path` system property is set to `$OPENHAB_CONF/automation/lib/python`, but any existing `python.path` will be appended to it.\n+\n+## Creating Jython Scripts\n+\n+When this add-on is installed, you can select Jython as a scripting language when creating a script action within the rule editor of the UI.\n+\n+Alternatively, you can create scripts in the `automation/jsr223` configuration directory.\n+If you create an empty file called `test.py`, you will see a log line with information similar to:\n+\n+```text\n+    ... [INFO ] [.a.m.s.r.i.l.ScriptFileWatcher:150  ] - Loading script 'test.py'\n+```\n+\n+To enable debug logging, use the [console logging]({{base}}/administration/logging.html) commands to\n+enable debug logging for the automation functionality:\n+\n+```text\n+log:set DEBUG org.openhab.core.automation\n+```\n+\n+## Script Examples\n+\n+Jython scripts provide access to almost all the functionality in an openHAB runtime environment.\n+As a simple example, the following script logs \"Hello, World!\".\n+Note that `print` will usually not work since the output has no terminal to display the text.\n+The openHAB server uses the [SLFJ](https://www.slf4j.org/) library for logging.\n+\n+```python\n+from org.slf4j import LoggerFactory\n+\n+LoggerFactory.getLogger(\"org.openhab.core.automation.examples\").info(\"Hello world!\")\n+```\n+\n+Jython can [import Java classes](http://www.jython.org/jythonbook/en/1.0/ModulesPackages.html).", "originalCommit": "e7641a0e4eeeb2d2111af505584dc15db4a2b0cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "40509c5bf3b0ef90a65f49f3787a1fe305a008b9", "url": "https://github.com/openhab/openhab-addons/commit/40509c5bf3b0ef90a65f49f3787a1fe305a008b9", "message": "Update bundles/org.openhab.automation.jythonscripting/README.md\n\nCo-authored-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-12-21T16:08:04Z", "type": "commit"}, {"oid": "fa16b8837fda06b38473789bc5d086569d154a53", "url": "https://github.com/openhab/openhab-addons/commit/fa16b8837fda06b38473789bc5d086569d154a53", "message": "Update bundles/org.openhab.automation.jythonscripting/README.md\n\nCo-authored-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-12-21T16:08:12Z", "type": "commit"}, {"oid": "2c5562da51fbf985f0d6d554cbca39ed8515a708", "url": "https://github.com/openhab/openhab-addons/commit/2c5562da51fbf985f0d6d554cbca39ed8515a708", "message": "Update bundles/org.openhab.automation.jythonscripting/README.md\n\nCo-authored-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-12-21T16:08:19Z", "type": "commit"}, {"oid": "5fd357d3ae2efab45c7691e0d5e14d29d3fb6df9", "url": "https://github.com/openhab/openhab-addons/commit/5fd357d3ae2efab45c7691e0d5e14d29d3fb6df9", "message": "Update bundles/org.openhab.automation.jythonscripting/README.md\n\nCo-authored-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-12-21T18:52:33Z", "type": "commit"}]}