{"pr_number": 8336, "pr_title": "[network] Add support for Wake-on-LAN thing action", "pr_createdAt": "2020-08-24T20:05:11Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8336", "timeline": [{"oid": "eab2c187f809fe7ecf5a1b033cef8822bd6c40ee", "url": "https://github.com/openhab/openhab-addons/commit/eab2c187f809fe7ecf5a1b033cef8822bd6c40ee", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T20:08:46Z", "type": "forcePushed"}, {"oid": "96c509a665e8d27ae4b9909c02e47eae738e5a08", "url": "https://github.com/openhab/openhab-addons/commit/96c509a665e8d27ae4b9909c02e47eae738e5a08", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T20:13:18Z", "type": "forcePushed"}, {"oid": "3fba5c53f855b53874805f0fe7b2dd65b925d90a", "url": "https://github.com/openhab/openhab-addons/commit/3fba5c53f855b53874805f0fe7b2dd65b925d90a", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T20:16:04Z", "type": "forcePushed"}, {"oid": "19a4e62ae7833023cc5353b22ccc4f79a1c2cfa7", "url": "https://github.com/openhab/openhab-addons/commit/19a4e62ae7833023cc5353b22ccc4f79a1c2cfa7", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T20:56:53Z", "type": "forcePushed"}, {"oid": "f0622c268c17c5dfec7a1e9a51f68b5dd7c977b9", "url": "https://github.com/openhab/openhab-addons/commit/f0622c268c17c5dfec7a1e9a51f68b5dd7c977b9", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T20:58:21Z", "type": "forcePushed"}, {"oid": "9261054cc5ee4fccec28a67815d8b1e20d38e4ab", "url": "https://github.com/openhab/openhab-addons/commit/9261054cc5ee4fccec28a67815d8b1e20d38e4ab", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T22:09:08Z", "type": "forcePushed"}, {"oid": "31c0bc6fddaa375403bea3be2235b866533f7036", "url": "https://github.com/openhab/openhab-addons/commit/31c0bc6fddaa375403bea3be2235b866533f7036", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T22:39:30Z", "type": "commit"}, {"oid": "31c0bc6fddaa375403bea3be2235b866533f7036", "url": "https://github.com/openhab/openhab-addons/commit/31c0bc6fddaa375403bea3be2235b866533f7036", "message": "[network] Add support for Wake-on-LAN thing action\n\nFixes #3799\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-24T22:39:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI2ODQ3Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8336#discussion_r476268477", "bodyText": "This method is for testing only, right. So could be made package private?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public WakeOnLanPacketSender(String macAddress, Consumer<byte[]> magicPacketSender) {\n          \n          \n            \n                WakeOnLanPacketSender(String macAddress, Consumer<byte[]> magicPacketSender) {", "author": "Hilbrand", "createdAt": "2020-08-25T08:23:43Z", "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/WakeOnLanPacketSender.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.network.internal;\n+\n+import java.io.IOException;\n+import java.net.DatagramPacket;\n+import java.net.DatagramSocket;\n+import java.net.InetAddress;\n+import java.net.SocketException;\n+import java.net.UnknownHostException;\n+import java.util.Arrays;\n+import java.util.Objects;\n+import java.util.function.Consumer;\n+import java.util.stream.Stream;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.net.NetUtil;\n+import org.eclipse.smarthome.core.util.HexUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link WakeOnLanPacketSender} broadcasts a magic packet to wake a device.\n+ *\n+ * @author Wouter Born - Initial contribution\n+ */\n+@NonNullByDefault\n+public class WakeOnLanPacketSender {\n+\n+    private static final int WOL_UDP_PORT = 9;\n+\n+    // Wake-on-LAN magic packet constants\n+    static final int PREFIX_BYTE_SIZE = 6;\n+    static final int MAC_REPETITIONS = 16;\n+    static final int MAC_BYTE_SIZE = 6;\n+    static final int MAGIC_PACKET_BYTE_SIZE = PREFIX_BYTE_SIZE + MAC_REPETITIONS * MAC_BYTE_SIZE;\n+    static final String[] MAC_SEPARATORS = new String[] { \":\", \"-\" };\n+\n+    private final Logger logger = LoggerFactory.getLogger(WakeOnLanPacketSender.class);\n+\n+    private final String macAddress;\n+    private byte @Nullable [] magicPacket;\n+    private Consumer<byte[]> magicPacketSender;\n+\n+    public WakeOnLanPacketSender(String macAddress) {\n+        this.macAddress = macAddress;\n+        this.magicPacketSender = this::broadcastMagicPacket;\n+    }\n+\n+    public WakeOnLanPacketSender(String macAddress, Consumer<byte[]> magicPacketSender) {", "originalCommit": "31c0bc6fddaa375403bea3be2235b866533f7036", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI2OTM1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8336#discussion_r476269356", "bodyText": "Maybe add a timeout to the test condition, as they do touch code that theoretically make external calls?", "author": "Hilbrand", "createdAt": "2020-08-25T08:25:09Z", "path": "bundles/org.openhab.binding.network/src/test/java/org/openhab/binding/network/internal/WakeOnLanPacketSenderTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.network.internal;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.openhab.binding.network.internal.WakeOnLanPacketSender.*;\n+\n+import java.util.Arrays;\n+\n+import org.eclipse.smarthome.core.util.HexUtils;\n+import org.junit.Test;\n+\n+/**\n+ * Tests cases for {@link WakeOnLanPacketSender}.\n+ *\n+ * @author Wouter Born - Initial contribution\n+ */\n+public class WakeOnLanPacketSenderTest {\n+\n+    private void assertValidMagicPacket(byte[] macBytes, byte[] packet) {\n+        byte[] prefix = new byte[PREFIX_BYTE_SIZE];\n+        Arrays.fill(prefix, (byte) 0xff);\n+\n+        assertThat(Arrays.copyOfRange(packet, 0, PREFIX_BYTE_SIZE), is(prefix));\n+\n+        for (int i = PREFIX_BYTE_SIZE; i < MAGIC_PACKET_BYTE_SIZE; i += MAC_BYTE_SIZE) {\n+            assertThat(Arrays.copyOfRange(packet, i, i + MAC_BYTE_SIZE), is(macBytes));\n+        }\n+    }\n+\n+    @Test\n+    public void sendWithColonSeparatedMacAddress() {\n+        byte[] actualPacket = new byte[MAGIC_PACKET_BYTE_SIZE];\n+\n+        WakeOnLanPacketSender sender = new WakeOnLanPacketSender(\"6f:70:65:6e:48:41\",\n+                bytes -> System.arraycopy(bytes, 0, actualPacket, 0, bytes.length));\n+\n+        sender.sendPacket();\n+\n+        assertValidMagicPacket(HexUtils.hexToBytes(\"6f:70:65:6e:48:41\", \":\"), actualPacket);\n+    }\n+\n+    @Test\n+    public void sendWithHyphenSeparatedMacAddress() {\n+        byte[] actualPacket = new byte[MAGIC_PACKET_BYTE_SIZE];\n+\n+        WakeOnLanPacketSender sender = new WakeOnLanPacketSender(\"6F-70-65-6E-48-41\",\n+                bytes -> System.arraycopy(bytes, 0, actualPacket, 0, bytes.length));\n+\n+        sender.sendPacket();\n+\n+        assertValidMagicPacket(HexUtils.hexToBytes(\"6F-70-65-6E-48-41\", \"-\"), actualPacket);\n+    }\n+\n+    @Test\n+    public void sendWithNoSeparatedMacAddress() {\n+        byte[] actualPacket = new byte[MAGIC_PACKET_BYTE_SIZE];\n+\n+        WakeOnLanPacketSender sender = new WakeOnLanPacketSender(\"6f70656e4841\",\n+                bytes -> System.arraycopy(bytes, 0, actualPacket, 0, bytes.length));\n+\n+        sender.sendPacket();\n+\n+        assertValidMagicPacket(HexUtils.hexToBytes(\"6f70656e4841\"), actualPacket);\n+    }\n+\n+    @Test(expected = IllegalStateException.class)", "originalCommit": "31c0bc6fddaa375403bea3be2235b866533f7036", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3Mjg5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8336#discussion_r476272892", "bodyText": "When no mac address is configured maybe it would be nice to give a specific error message to the user in case a call is made to the actions method sendWakeOnLanPacket? So state in the IllegalStateException that the macAddress is not configured?", "author": "Hilbrand", "createdAt": "2020-08-25T08:30:51Z", "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/handler/NetworkHandler.java", "diffHunk": "@@ -187,6 +199,8 @@ void initialize(PresenceDetection presenceDetection) {\n         presenceDetection.setRefreshInterval(handlerConfiguration.refreshInterval.longValue());\n         presenceDetection.setTimeout(handlerConfiguration.timeout.intValue());\n \n+        wakeOnLanPacketSender = new WakeOnLanPacketSender(handlerConfiguration.macAddress);", "originalCommit": "31c0bc6fddaa375403bea3be2235b866533f7036", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2fb4344a39ea273e4fa34a46971ee2fe4acfbfa4", "url": "https://github.com/openhab/openhab-addons/commit/2fb4344a39ea273e4fa34a46971ee2fe4acfbfa4", "message": "Address review comments\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-08-25T09:41:27Z", "type": "commit"}]}