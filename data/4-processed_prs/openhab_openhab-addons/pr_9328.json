{"pr_number": 9328, "pr_title": "[amazonechocontrol] fix unnecessary refresh and add text commands", "pr_createdAt": "2020-12-11T17:04:00Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9328", "timeline": [{"oid": "ba8a8cf706191a89b68796e61c759992270c3569", "url": "https://github.com/openhab/openhab-addons/commit/ba8a8cf706191a89b68796e61c759992270c3569", "message": "fixed: removed unnecessary refresh on push activity\n\nSigned-off-by: Tom Blum trinitus01@googlemail.com", "committedDate": "2020-12-11T16:12:13Z", "type": "commit"}, {"oid": "2d04cb8a418f4466aa849c5d06b4407c42ce86ad", "url": "https://github.com/openhab/openhab-addons/commit/2d04cb8a418f4466aa849c5d06b4407c42ce86ad", "message": "add text commands\n\nAlso-By: Tom Blum <trinitus01@googlemail.com>\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-11T17:01:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMDY1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541100651", "bodyText": "Vorschlag: \"F\u00fchrt einen Befehl aus (Nur schreiben). Der Text wird wie ein gesprochener Befehl ausgef\u00fchrt\"", "author": "mgeramb", "createdAt": "2020-12-11T17:15:24Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/resources/OH-INF/i18n/amazonechocontrol_de.properties", "diffHunk": "@@ -88,6 +88,9 @@ channel-type.amazonechocontrol.textToSpeech.description = Spricht den Text (Nur\n channel-type.amazonechocontrol.textToSpeechVolume.label = Sprich Lautst\ufffdrke\n channel-type.amazonechocontrol.textToSpeechVolume.description = Lautst\ufffdrke des Sprich Kanals. Wenn 0 wird die aktuelle Lautst\ufffdrke verwendet.\n \n+channel-type.amazonechocontrol.textCommand.label = Befehl\n+channel-type.amazonechocontrol.textCommand.description = F\ufffdhrt einen Befehl aus (Nur schreiben). Der Befehl kann wie ein gesprochener Befehl ausgef\ufffdhrt werden.", "originalCommit": "2d04cb8a418f4466aa849c5d06b4407c42ce86ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b0b4f5c315d5daf7f389e495724377c85c22a904", "url": "https://github.com/openhab/openhab-addons/commit/b0b4f5c315d5daf7f389e495724377c85c22a904", "message": "address review comment\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-11T18:06:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0MzE5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541243192", "bodyText": "You are only removing the last command?", "author": "cpmeister", "createdAt": "2020-12-11T20:18:05Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -1441,6 +1446,58 @@ private void sendTextToSpeech() {\n         }\n     }\n \n+    public void textCommand(Device device, String text, @Nullable Integer ttsVolume, @Nullable Integer standardVolume) {\n+        if (text.replaceAll(\"<.+?>\", \"\").replaceAll(\"\\\\s+\", \" \").trim().isEmpty()) {\n+            return;\n+        }\n+\n+        // we lock TextCommands until we have finished adding this one\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+        try {\n+            TextCommand textCommand = Objects\n+                    .requireNonNull(textCommands.computeIfAbsent(Objects.hash(text), k -> new TextCommand(text)));\n+            textCommand.devices.add(device);\n+            textCommand.ttsVolumes.add(ttsVolume);\n+            textCommand.standardVolumes.add(standardVolume);\n+            // schedule a TextCommand only if it has not been scheduled before\n+            timers.computeIfAbsent(TimerType.TEXT_COMMAND,\n+                    k -> scheduler.schedule(this::sendTextCommand, 500, TimeUnit.MILLISECONDS));\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+\n+    private synchronized void sendTextCommand() {\n+        // we lock new TTS until we have dispatched everything\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+\n+        try {\n+            Iterator<TextCommand> iterator = textCommands.values().iterator();\n+            while (iterator.hasNext()) {\n+                TextCommand textCommand = iterator.next();\n+                try {\n+                    List<Device> devices = textCommand.devices;\n+                    if (!devices.isEmpty()) {\n+                        String text = textCommand.text;\n+                        Map<String, Object> parameters = new HashMap<>();\n+                        parameters.put(\"text\", text);\n+                        executeSequenceCommandWithVolume(devices, \"Alexa.TextCommand\", parameters,\n+                                textCommand.ttsVolumes, textCommand.standardVolumes);\n+                    }\n+                } catch (Exception e) {\n+                    logger.warn(\"send textCommand fails with unexpected error\", e);\n+                }\n+            }\n+            iterator.remove();", "originalCommit": "b0b4f5c315d5daf7f389e495724377c85c22a904", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI4NTg1Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541285852", "bodyText": "Oops. Remove wrong }...", "author": "J-N-K", "createdAt": "2020-12-11T21:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0MzE5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0NDA2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541244066", "bodyText": "Would this be a good place to use Map.of? Or do you need the map to be a HashMap instance?", "author": "cpmeister", "createdAt": "2020-12-11T20:18:58Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -1441,6 +1446,58 @@ private void sendTextToSpeech() {\n         }\n     }\n \n+    public void textCommand(Device device, String text, @Nullable Integer ttsVolume, @Nullable Integer standardVolume) {\n+        if (text.replaceAll(\"<.+?>\", \"\").replaceAll(\"\\\\s+\", \" \").trim().isEmpty()) {\n+            return;\n+        }\n+\n+        // we lock TextCommands until we have finished adding this one\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+        try {\n+            TextCommand textCommand = Objects\n+                    .requireNonNull(textCommands.computeIfAbsent(Objects.hash(text), k -> new TextCommand(text)));\n+            textCommand.devices.add(device);\n+            textCommand.ttsVolumes.add(ttsVolume);\n+            textCommand.standardVolumes.add(standardVolume);\n+            // schedule a TextCommand only if it has not been scheduled before\n+            timers.computeIfAbsent(TimerType.TEXT_COMMAND,\n+                    k -> scheduler.schedule(this::sendTextCommand, 500, TimeUnit.MILLISECONDS));\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+\n+    private synchronized void sendTextCommand() {\n+        // we lock new TTS until we have dispatched everything\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+\n+        try {\n+            Iterator<TextCommand> iterator = textCommands.values().iterator();\n+            while (iterator.hasNext()) {\n+                TextCommand textCommand = iterator.next();\n+                try {\n+                    List<Device> devices = textCommand.devices;\n+                    if (!devices.isEmpty()) {\n+                        String text = textCommand.text;\n+                        Map<String, Object> parameters = new HashMap<>();\n+                        parameters.put(\"text\", text);\n+                        executeSequenceCommandWithVolume(devices, \"Alexa.TextCommand\", parameters,", "originalCommit": "b0b4f5c315d5daf7f389e495724377c85c22a904", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0NzE3NA==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541247174", "bodyText": "Probably should make the same changes elsewhere as well.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            updateState(CHANNEL_TEXT_COMMAND, new StringType(\"\"));\n          \n          \n            \n                            updateState(CHANNEL_TEXT_COMMAND, StringType.EMPTY);", "author": "cpmeister", "createdAt": "2020-12-11T20:21:47Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/handler/EchoHandler.java", "diffHunk": "@@ -1083,6 +1103,10 @@ public void updateState(AccountHandler accountHandler, @Nullable Device device,\n                 updateTextToSpeech = false;\n                 updateState(CHANNEL_TEXT_TO_SPEECH, new StringType(\"\"));\n             }\n+            if (updateTextCommand) {\n+                updateTextCommand = false;\n+                updateState(CHANNEL_TEXT_COMMAND, new StringType(\"\"));", "originalCommit": "b0b4f5c315d5daf7f389e495724377c85c22a904", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "605eca6cf4a6670ce68b1217a60267ae242c05dc", "url": "https://github.com/openhab/openhab-addons/commit/605eca6cf4a6670ce68b1217a60267ae242c05dc", "message": "address review comments and fix warnings\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-11T21:10:39Z", "type": "commit"}]}