{"pr_number": 6889, "pr_title": "[xmltv] Added encoding option", "pr_createdAt": "2020-01-22T17:45:42Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/6889", "timeline": [{"oid": "147785fb779b267ae550685d65ccd5ee40f2d731", "url": "https://github.com/openhab/openhab-addons/commit/147785fb779b267ae550685d65ccd5ee40f2d731", "message": "Reworked initalize, added encoding option\n\nSigned-off-by: Kristof Rado <rado.krisi@gmail.com>", "committedDate": "2020-01-22T17:44:11Z", "type": "commit"}, {"oid": "b77d4cc1436f5384a0af8f7e3eb7d9e79a743d15", "url": "https://github.com/openhab/openhab-addons/commit/b77d4cc1436f5384a0af8f7e3eb7d9e79a743d15", "message": "Update README, removed unused imports\n\nSigned-off-by: Kristof Rado <rado.krisi@gmail.com>", "committedDate": "2020-01-22T17:44:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxNTMxNg==", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369715316", "bodyText": "Tags are preferred to be on a single line in feature files. Unfortunately spotless put the on a separate line. There is a fix for that, but not yet applied here. So could you put this features rag on a single line.", "author": "Hilbrand", "createdAt": "2020-01-22T18:01:02Z", "path": "bundles/org.openhab.binding.xmltv/src/main/feature/feature.xml", "diffHunk": "@@ -1,10 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<features name=\"org.openhab.binding.xmltv-${project.version}\" xmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">\n-    <repository>mvn:org.openhab.core.features.karaf/org.openhab.core.features.karaf.openhab-core/${ohc.version}/xml/features</repository>\n+<features name=\"org.openhab.binding.xmltv-${project.version}\"\n+\txmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">", "originalCommit": "b77d4cc1436f5384a0af8f7e3eb7d9e79a743d15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNTM5Ng==", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369725396", "bodyText": "Yes, sure and this indeed was caused by the spotless formatter.", "author": "radokristof", "createdAt": "2020-01-22T18:22:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxNTMxNg=="}], "type": "inlineReview"}, {"oid": "9233bf0f5fd7d02acaf301855bba3c2e8816f1f5", "url": "https://github.com/openhab/openhab-addons/commit/9233bf0f5fd7d02acaf301855bba3c2e8816f1f5", "message": "Fix feature line format\n\nSigned-off-by: Kristof Rado <rado.krisi@gmail.com>", "committedDate": "2020-01-22T18:23:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1NTYyMg==", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369755622", "bodyText": "Is it really needed to have the encoding here? Using FileInputStream should return binary data and in my understanding this should be workling out of the box.", "author": "J-N-K", "createdAt": "2020-01-22T19:23:20Z", "path": "bundles/org.openhab.binding.xmltv/src/main/java/org/openhab/binding/xmltv/internal/handler/XmlTVHandler.java", "diffHunk": "@@ -67,12 +69,11 @@ public void initialize() {\n         logger.debug(\"Initializing {} for input file '{}'\", getClass(), config.filePath);\n \n         reloadJob = scheduler.scheduleWithFixedDelay(() -> {\n-            final StreamSource source = new StreamSource(config.filePath);\n             currentXmlFile = null;\n             XMLStreamReader xsr = null;\n             try {\n                 // This can take some seconds depending upon weight of the XmlTV source file\n-                xsr = xif.createXMLStreamReader(source);\n+                xsr = xif.createXMLStreamReader(new FileInputStream(new File(config.filePath)), config.encoding);", "originalCommit": "9233bf0f5fd7d02acaf301855bba3c2e8816f1f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODIzNA==", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369758234", "bodyText": "Unfortunately not and I don't know why.\nTried it without encoding, for example this text should be: \"besz\u00e9d\" and I got \"besz\u0102\u0160d\".\nIf I use that approach and with UTF8 encoding, I get the correct output. But I don't know why different encodings are used in XMLTV maybe this is different in each grabber so that's why I wanted to leave it as an option. Usually I think UTF8 will be good and no modification is needed from the user...", "author": "radokristof", "createdAt": "2020-01-22T19:28:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1NTYyMg=="}], "type": "inlineReview"}]}