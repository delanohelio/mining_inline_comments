{"pr_number": 9322, "pr_title": "[generacmobilelink] Initial Contribution", "pr_createdAt": "2020-12-10T20:02:11Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9322", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NzkwNA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543587904", "bodyText": "Can you mention the Thing Type UIDs?", "author": "fwolter", "createdAt": "2020-12-15T18:34:02Z", "path": "bundles/org.openhab.binding.generacmobilelink/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Generac MobileLink Binding\n+\n+This binding communicates with the Generac MobileLink API and reports on the status of Generac manufactured generators, including versions resold under the brands Eaton, Honeywell and Siemens.\n+\n+## Supported Things", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4ODE3MQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543588171", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A Generator thing represents a individual generator linked to an account bridge.  Multiple generators are supported.  \n          \n          \n            \n            A Generator thing represents a individual generator linked to an account bridge. Multiple generators are supported.", "author": "fwolter", "createdAt": "2020-12-15T18:34:21Z", "path": "bundles/org.openhab.binding.generacmobilelink/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Generac MobileLink Binding\n+\n+This binding communicates with the Generac MobileLink API and reports on the status of Generac manufactured generators, including versions resold under the brands Eaton, Honeywell and Siemens.\n+\n+## Supported Things\n+\n+### MobileLink Account\n+\n+A MobileLink account bridge thing represents a user's MobileLink account and is responsible for authentication and polling for updates.\n+\n+### Generator\n+\n+A Generator thing represents a individual generator linked to an account bridge.  Multiple generators are supported.  ", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4ODQxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543588419", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | userName        | The user name, typically a email address, used to login to the MobileLink service |\n          \n          \n            \n            | userName        | The user name, typically an email address, used to login to the MobileLink service |", "author": "fwolter", "createdAt": "2020-12-15T18:34:41Z", "path": "bundles/org.openhab.binding.generacmobilelink/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Generac MobileLink Binding\n+\n+This binding communicates with the Generac MobileLink API and reports on the status of Generac manufactured generators, including versions resold under the brands Eaton, Honeywell and Siemens.\n+\n+## Supported Things\n+\n+### MobileLink Account\n+\n+A MobileLink account bridge thing represents a user's MobileLink account and is responsible for authentication and polling for updates.\n+\n+### Generator\n+\n+A Generator thing represents a individual generator linked to an account bridge.  Multiple generators are supported.  \n+\n+## Discovery\n+\n+The MobileLink account bridge must be added manually. Once added, generator things will automatically be added to the inbox.  \n+\n+## Thing Configuration\n+\n+### MobileLink Account\n+\n+| Parameter       | Description                                                                       |\n+|-----------------|-----------------------------------------------------------------------------------|\n+| userName        | The user name, typically a email address, used to login to the MobileLink service |", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MDMxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543590315", "bodyText": "Is Switch correct?", "author": "fwolter", "createdAt": "2020-12-15T18:37:39Z", "path": "bundles/org.openhab.binding.generacmobilelink/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Generac MobileLink Binding\n+\n+This binding communicates with the Generac MobileLink API and reports on the status of Generac manufactured generators, including versions resold under the brands Eaton, Honeywell and Siemens.\n+\n+## Supported Things\n+\n+### MobileLink Account\n+\n+A MobileLink account bridge thing represents a user's MobileLink account and is responsible for authentication and polling for updates.\n+\n+### Generator\n+\n+A Generator thing represents a individual generator linked to an account bridge.  Multiple generators are supported.  \n+\n+## Discovery\n+\n+The MobileLink account bridge must be added manually. Once added, generator things will automatically be added to the inbox.  \n+\n+## Thing Configuration\n+\n+### MobileLink Account\n+\n+| Parameter       | Description                                                                       |\n+|-----------------|-----------------------------------------------------------------------------------|\n+| userName        | The user name, typically a email address, used to login to the MobileLink service |\n+| password        | The password used to login to the MobileLink service                              |\n+| refreshInterval | The frequency to poll for generator updates, minimum duration is 30 seconds       |\n+\n+\n+## Channels\n+\n+### Generator Channels\n+\n+All channels are read-only. \n+\n+| channel                 | type        | description                               |\n+|-------------------------|-------------|-------------------------------------------|\n+| connected               | Switch      | Connected status                          |\n+| greenLight              | Switch      | Green light state (typically auto mode)   |\n+| yellowLight             | Switch      | Yellow light state                        |\n+| redLight                | Switch      | Red light state (typically off mode)      |\n+| blueLight               | Switch      | Blue light state (typically running mode) |\n+| statusDate              | String      | Status date                               |\n+| status                  | String      | Status                                    |\n+| currentAlarmDescription | String      | Current alarm description                 |\n+| runHours                | Number:Time | Run hours                                 |\n+| exerciseHours           | Number:Time | Exercise hours                            |\n+| fuelType                | Switch      | Fuel Type                                 |", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDgyOA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543774828", "bodyText": "good catch, it should be a decimal.  I'm not actually sure what it means, i reversed the API, so i can only guess at the meaning .  I did a lot of copy and pasting in my table and missed a few things !", "author": "digitaldan", "createdAt": "2020-12-15T23:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MDMxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MDQ5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543590497", "bodyText": "Is Switch correct?", "author": "fwolter", "createdAt": "2020-12-15T18:37:57Z", "path": "bundles/org.openhab.binding.generacmobilelink/README.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Generac MobileLink Binding\n+\n+This binding communicates with the Generac MobileLink API and reports on the status of Generac manufactured generators, including versions resold under the brands Eaton, Honeywell and Siemens.\n+\n+## Supported Things\n+\n+### MobileLink Account\n+\n+A MobileLink account bridge thing represents a user's MobileLink account and is responsible for authentication and polling for updates.\n+\n+### Generator\n+\n+A Generator thing represents a individual generator linked to an account bridge.  Multiple generators are supported.  \n+\n+## Discovery\n+\n+The MobileLink account bridge must be added manually. Once added, generator things will automatically be added to the inbox.  \n+\n+## Thing Configuration\n+\n+### MobileLink Account\n+\n+| Parameter       | Description                                                                       |\n+|-----------------|-----------------------------------------------------------------------------------|\n+| userName        | The user name, typically a email address, used to login to the MobileLink service |\n+| password        | The password used to login to the MobileLink service                              |\n+| refreshInterval | The frequency to poll for generator updates, minimum duration is 30 seconds       |\n+\n+\n+## Channels\n+\n+### Generator Channels\n+\n+All channels are read-only. \n+\n+| channel                 | type        | description                               |\n+|-------------------------|-------------|-------------------------------------------|\n+| connected               | Switch      | Connected status                          |\n+| greenLight              | Switch      | Green light state (typically auto mode)   |\n+| yellowLight             | Switch      | Yellow light state                        |\n+| redLight                | Switch      | Red light state (typically off mode)      |\n+| blueLight               | Switch      | Blue light state (typically running mode) |\n+| statusDate              | String      | Status date                               |\n+| status                  | String      | Status                                    |\n+| currentAlarmDescription | String      | Current alarm description                 |\n+| runHours                | Number:Time | Run hours                                 |\n+| exerciseHours           | Number:Time | Exercise hours                            |\n+| fuelType                | Switch      | Fuel Type                                 |\n+| fuelLevel               | Switch      | Fuel Level                                |", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NTI0NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543775245", "bodyText": "and i copied and pasted that from the above issue :-)", "author": "digitaldan", "createdAt": "2020-12-15T23:59:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MDQ5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MTE4NA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543591184", "bodyText": "You could move this into a package called dto or append DTO to the class name to get rid of the checkstyle warning about missing NonNullByDefault annotation. Same for the others.", "author": "fwolter", "createdAt": "2020-12-15T18:39:03Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/api/GeneratorStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.api;\n+\n+/**\n+ * {@link GeneratorStatus} object from the MobileLink API\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+public class GeneratorStatus {", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY1OTI5NA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r544659294", "bodyText": "ahh, i did not know that, and missed your comment until just now.  Thank you for the pointer, that is very helpful.", "author": "digitaldan", "createdAt": "2020-12-16T22:10:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MTE4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MTg2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543591869", "bodyText": "What type of exception do you expect here? Can you specify the concrete type?", "author": "fwolter", "createdAt": "2020-12-15T18:40:04Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/discovery/GeneracMobileLinkDiscoveryService.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.discovery;\n+\n+import static org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants.THING_TYPE_GENERATOR;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.config.discovery.DiscoveryListener;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryService;\n+import org.openhab.core.config.discovery.ScanListener;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link GeneracMobileLinkDiscoveryService} is responsible for discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkDiscoveryService implements DiscoveryService {\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkDiscoveryService.class);\n+    private static final Set<ThingTypeUID> SUPPORTED_DISCOVERY_THING_TYPES_UIDS = Set.of(THING_TYPE_GENERATOR);\n+    private final Map<ThingUID, DiscoveryResult> cachedResults = new HashMap<>();\n+    private final Set<DiscoveryListener> discoveryListeners = new CopyOnWriteArraySet<>();\n+\n+    public void generatorDiscovered(DiscoveryResult result) {\n+\n+        for (DiscoveryListener discoveryListener : discoveryListeners) {\n+            try {\n+                discoveryListener.thingDiscovered(this, result);\n+            } catch (Exception e) {", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5MDEzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r544690139", "bodyText": "Not sure why had that there, maybe debugging?  its not needed so i have removed it.", "author": "digitaldan", "createdAt": "2020-12-16T23:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MTg2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MTkzMA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543591930", "bodyText": "Bindings should only log to error if something severe happened, like the detection of a bug in your code. This could be warn. See this link for a description of the log levels: https://www.openhab.org/docs/developer/guidelines.html#f-logging", "author": "fwolter", "createdAt": "2020-12-15T18:40:10Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/discovery/GeneracMobileLinkDiscoveryService.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.discovery;\n+\n+import static org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants.THING_TYPE_GENERATOR;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.config.discovery.DiscoveryListener;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryService;\n+import org.openhab.core.config.discovery.ScanListener;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link GeneracMobileLinkDiscoveryService} is responsible for discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkDiscoveryService implements DiscoveryService {\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkDiscoveryService.class);\n+    private static final Set<ThingTypeUID> SUPPORTED_DISCOVERY_THING_TYPES_UIDS = Set.of(THING_TYPE_GENERATOR);\n+    private final Map<ThingUID, DiscoveryResult> cachedResults = new HashMap<>();\n+    private final Set<DiscoveryListener> discoveryListeners = new CopyOnWriteArraySet<>();\n+\n+    public void generatorDiscovered(DiscoveryResult result) {\n+\n+        for (DiscoveryListener discoveryListener : discoveryListeners) {\n+            try {\n+                discoveryListener.thingDiscovered(this, result);\n+            } catch (Exception e) {\n+                logger.error(\"An error occurred while calling the discovery listener {}.\",\n+                        discoveryListener.getClass().getName(), e);", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5MzUyOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543593529", "bodyText": "Can this message be replaced by using the debugger or by increasing the framework's log level? See point 4 https://www.openhab.org/docs/developer/guidelines.html#f-logging", "author": "fwolter", "createdAt": "2020-12-15T18:42:31Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/factory/GeneracMobileLinkHandlerFactory.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.factory;\n+\n+import static org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.Hashtable;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.binding.generacmobilelink.internal.handler.GeneracMobileLinkAccountHandler;\n+import org.openhab.binding.generacmobilelink.internal.handler.GeneracMobileLinkGeneratorHandler;\n+import org.openhab.core.config.discovery.DiscoveryService;\n+import org.openhab.core.io.net.http.HttpClientFactory;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseThingHandlerFactory;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerFactory;\n+import org.osgi.framework.ServiceRegistration;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link GeneracMobileLinkHandlerFactory} is responsible for creating things and thing\n+ * handlers.\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(configurationPid = \"binding.generacmobilelink\", service = ThingHandlerFactory.class)\n+public class GeneracMobileLinkHandlerFactory extends BaseThingHandlerFactory {\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkHandlerFactory.class);\n+    private static final Set<ThingTypeUID> SUPPORTED_THING_TYPES_UIDS = Set.of(THING_TYPE_ACCOUNT,\n+            THING_TYPE_GENERATOR);\n+    private final Map<ThingUID, ServiceRegistration<?>> discoveryServiceRegs = new HashMap<>();\n+    private final HttpClient httpClient;\n+\n+    @Activate\n+    public GeneracMobileLinkHandlerFactory(final @Reference HttpClientFactory httpClientFactory) {\n+        this.httpClient = httpClientFactory.getCommonHttpClient();\n+    }\n+\n+    @Override\n+    public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n+        return SUPPORTED_THING_TYPES_UIDS.contains(thingTypeUID);\n+    }\n+\n+    @Override\n+    protected @Nullable ThingHandler createHandler(Thing thing) {\n+        ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n+\n+        if (THING_TYPE_GENERATOR.equals(thingTypeUID)) {\n+            return new GeneracMobileLinkGeneratorHandler(thing);\n+        }\n+\n+        if (THING_TYPE_ACCOUNT.equals(thingTypeUID)) {\n+            logger.trace(\"Creating handler for {} \", thingTypeUID);", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5NDY4NA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543594684", "bodyText": "Primitive types should be used where possible.\nIt's good practice to append the unit to the field name e.g. TIMEOUT_SEC.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Integer refreshInterval = 60;\n          \n          \n            \n                private int refreshInterval = 60;", "author": "fwolter", "createdAt": "2020-12-15T18:43:38Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkAccountHandler.java", "diffHunk": "@@ -0,0 +1,244 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.ContentResponse;\n+import org.eclipse.jetty.client.util.StringContentProvider;\n+import org.eclipse.jetty.http.HttpMethod;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatus;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatusResponse;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginRequest;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginResponse;\n+import org.openhab.binding.generacmobilelink.internal.config.GeneracMobileLinkAccountConfiguration;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseBridgeHandler;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The {@link GeneracMobileLinkAccountHandler} is responsible for connecting to the MobileLink cloud service and\n+ * discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkAccountHandler extends BaseBridgeHandler {\n+    private static final String BASE_URL = \"https://api.mobilelinkgen.com\";\n+    private static final String SHARED_KEY = \"GeneseeDepot13\";\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkAccountHandler.class);\n+    private final Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();\n+    private @Nullable Future<?> pollFuture;\n+    private @Nullable String authToken;\n+    private @Nullable GeneratorStatusResponse generators;\n+    private Integer refreshInterval = 60;", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5NDg4Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543594886", "bodyText": "Can this message be replaced by using the debugger or by increasing the framework's log level? See point 4 https://www.openhab.org/docs/developer/guidelines.html#f-logging", "author": "fwolter", "createdAt": "2020-12-15T18:43:56Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkAccountHandler.java", "diffHunk": "@@ -0,0 +1,244 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.ContentResponse;\n+import org.eclipse.jetty.client.util.StringContentProvider;\n+import org.eclipse.jetty.http.HttpMethod;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatus;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatusResponse;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginRequest;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginResponse;\n+import org.openhab.binding.generacmobilelink.internal.config.GeneracMobileLinkAccountConfiguration;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseBridgeHandler;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The {@link GeneracMobileLinkAccountHandler} is responsible for connecting to the MobileLink cloud service and\n+ * discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkAccountHandler extends BaseBridgeHandler {\n+    private static final String BASE_URL = \"https://api.mobilelinkgen.com\";\n+    private static final String SHARED_KEY = \"GeneseeDepot13\";\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkAccountHandler.class);\n+    private final Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();\n+    private @Nullable Future<?> pollFuture;\n+    private @Nullable String authToken;\n+    private @Nullable GeneratorStatusResponse generators;\n+    private Integer refreshInterval = 60;\n+    private HttpClient httpClient;\n+    private GeneracMobileLinkDiscoveryService discoveryService;\n+\n+    public GeneracMobileLinkAccountHandler(Bridge bridge, HttpClient httpClient,\n+            GeneracMobileLinkDiscoveryService discoveryService) {\n+        super(bridge);\n+        this.httpClient = httpClient;\n+        this.discoveryService = discoveryService;\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        logger.debug(\"initialize\");", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5NjIyNw==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543596227", "bodyText": "No harm in canceling a task that is already cancelled.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (localPollFuture != null && !localPollFuture.isCancelled()) {\n          \n          \n            \n                    if (localPollFuture != null) {", "author": "fwolter", "createdAt": "2020-12-15T18:45:49Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkAccountHandler.java", "diffHunk": "@@ -0,0 +1,244 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.ContentResponse;\n+import org.eclipse.jetty.client.util.StringContentProvider;\n+import org.eclipse.jetty.http.HttpMethod;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatus;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatusResponse;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginRequest;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginResponse;\n+import org.openhab.binding.generacmobilelink.internal.config.GeneracMobileLinkAccountConfiguration;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseBridgeHandler;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The {@link GeneracMobileLinkAccountHandler} is responsible for connecting to the MobileLink cloud service and\n+ * discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkAccountHandler extends BaseBridgeHandler {\n+    private static final String BASE_URL = \"https://api.mobilelinkgen.com\";\n+    private static final String SHARED_KEY = \"GeneseeDepot13\";\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkAccountHandler.class);\n+    private final Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();\n+    private @Nullable Future<?> pollFuture;\n+    private @Nullable String authToken;\n+    private @Nullable GeneratorStatusResponse generators;\n+    private Integer refreshInterval = 60;\n+    private HttpClient httpClient;\n+    private GeneracMobileLinkDiscoveryService discoveryService;\n+\n+    public GeneracMobileLinkAccountHandler(Bridge bridge, HttpClient httpClient,\n+            GeneracMobileLinkDiscoveryService discoveryService) {\n+        super(bridge);\n+        this.httpClient = httpClient;\n+        this.discoveryService = discoveryService;\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        logger.debug(\"initialize\");\n+        updateStatus(ThingStatus.UNKNOWN);\n+        authToken = null;\n+        restartPoll();\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        stopPoll();\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof RefreshType) {\n+            updateGeneratorThings();\n+        }\n+    }\n+\n+    @Override\n+    public void childHandlerInitialized(ThingHandler childHandler, Thing childThing) {\n+        GeneratorStatusResponse generatorsLocal = generators;\n+        if (generatorsLocal != null) {\n+            Optional<GeneratorStatus> generatorOpt = generatorsLocal.stream()\n+                    .filter(g -> String.valueOf(g.gensetID).equals(childThing.getUID().getId())).findFirst();\n+            if (generatorOpt.isPresent()) {\n+                ((GeneracMobileLinkGeneratorHandler) childHandler).updateGeneratorStatus(generatorOpt.get());\n+            }\n+        }\n+    }\n+\n+    private void stopPoll() {\n+        Future<?> localPollFuture = pollFuture;\n+        if (localPollFuture != null && !localPollFuture.isCancelled()) {", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5ODM2OA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543598368", "bodyText": "You could read the config once in initialize() as getConfigAs() is an expensive operation.", "author": "fwolter", "createdAt": "2020-12-15T18:48:57Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkAccountHandler.java", "diffHunk": "@@ -0,0 +1,244 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.ContentResponse;\n+import org.eclipse.jetty.client.util.StringContentProvider;\n+import org.eclipse.jetty.http.HttpMethod;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatus;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatusResponse;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginRequest;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginResponse;\n+import org.openhab.binding.generacmobilelink.internal.config.GeneracMobileLinkAccountConfiguration;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseBridgeHandler;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The {@link GeneracMobileLinkAccountHandler} is responsible for connecting to the MobileLink cloud service and\n+ * discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkAccountHandler extends BaseBridgeHandler {\n+    private static final String BASE_URL = \"https://api.mobilelinkgen.com\";\n+    private static final String SHARED_KEY = \"GeneseeDepot13\";\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkAccountHandler.class);\n+    private final Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();\n+    private @Nullable Future<?> pollFuture;\n+    private @Nullable String authToken;\n+    private @Nullable GeneratorStatusResponse generators;\n+    private Integer refreshInterval = 60;\n+    private HttpClient httpClient;\n+    private GeneracMobileLinkDiscoveryService discoveryService;\n+\n+    public GeneracMobileLinkAccountHandler(Bridge bridge, HttpClient httpClient,\n+            GeneracMobileLinkDiscoveryService discoveryService) {\n+        super(bridge);\n+        this.httpClient = httpClient;\n+        this.discoveryService = discoveryService;\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        logger.debug(\"initialize\");\n+        updateStatus(ThingStatus.UNKNOWN);\n+        authToken = null;\n+        restartPoll();\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        stopPoll();\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof RefreshType) {\n+            updateGeneratorThings();\n+        }\n+    }\n+\n+    @Override\n+    public void childHandlerInitialized(ThingHandler childHandler, Thing childThing) {\n+        GeneratorStatusResponse generatorsLocal = generators;\n+        if (generatorsLocal != null) {\n+            Optional<GeneratorStatus> generatorOpt = generatorsLocal.stream()\n+                    .filter(g -> String.valueOf(g.gensetID).equals(childThing.getUID().getId())).findFirst();\n+            if (generatorOpt.isPresent()) {\n+                ((GeneracMobileLinkGeneratorHandler) childHandler).updateGeneratorStatus(generatorOpt.get());\n+            }\n+        }\n+    }\n+\n+    private void stopPoll() {\n+        Future<?> localPollFuture = pollFuture;\n+        if (localPollFuture != null && !localPollFuture.isCancelled()) {\n+            localPollFuture.cancel(false);\n+        }\n+    }\n+\n+    private void restartPoll() {\n+        stopPoll();\n+        pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 0, refreshInterval, TimeUnit.SECONDS);\n+    }\n+\n+    private void poll() {\n+        // if our token is null we need to login\n+        if (authToken == null) {\n+            logger.debug(\"login\");\n+            login();\n+        }\n+\n+        // if we now have a token, get our data\n+        if (authToken != null) {\n+            getStatuses();\n+        }\n+    }\n+\n+    private void login() {\n+        try {\n+            GeneracMobileLinkAccountConfiguration config = getConfigAs(GeneracMobileLinkAccountConfiguration.class);", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4OTA4OQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r544689089", "bodyText": "Login is only called once after the binding is initialized, so should not be an issue.", "author": "digitaldan", "createdAt": "2020-12-16T23:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5ODM2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMDM2NA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543600364", "bodyText": "The log message could be removed, as the status update is already logged by the framework. You could add the exception's message to the ThingStatusDetail message. Same for below.", "author": "fwolter", "createdAt": "2020-12-15T18:51:51Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkAccountHandler.java", "diffHunk": "@@ -0,0 +1,244 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.ContentResponse;\n+import org.eclipse.jetty.client.util.StringContentProvider;\n+import org.eclipse.jetty.http.HttpMethod;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatus;\n+import org.openhab.binding.generacmobilelink.internal.api.GeneratorStatusResponse;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginRequest;\n+import org.openhab.binding.generacmobilelink.internal.api.LoginResponse;\n+import org.openhab.binding.generacmobilelink.internal.config.GeneracMobileLinkAccountConfiguration;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseBridgeHandler;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The {@link GeneracMobileLinkAccountHandler} is responsible for connecting to the MobileLink cloud service and\n+ * discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkAccountHandler extends BaseBridgeHandler {\n+    private static final String BASE_URL = \"https://api.mobilelinkgen.com\";\n+    private static final String SHARED_KEY = \"GeneseeDepot13\";\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkAccountHandler.class);\n+    private final Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();\n+    private @Nullable Future<?> pollFuture;\n+    private @Nullable String authToken;\n+    private @Nullable GeneratorStatusResponse generators;\n+    private Integer refreshInterval = 60;\n+    private HttpClient httpClient;\n+    private GeneracMobileLinkDiscoveryService discoveryService;\n+\n+    public GeneracMobileLinkAccountHandler(Bridge bridge, HttpClient httpClient,\n+            GeneracMobileLinkDiscoveryService discoveryService) {\n+        super(bridge);\n+        this.httpClient = httpClient;\n+        this.discoveryService = discoveryService;\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        logger.debug(\"initialize\");\n+        updateStatus(ThingStatus.UNKNOWN);\n+        authToken = null;\n+        restartPoll();\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        stopPoll();\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof RefreshType) {\n+            updateGeneratorThings();\n+        }\n+    }\n+\n+    @Override\n+    public void childHandlerInitialized(ThingHandler childHandler, Thing childThing) {\n+        GeneratorStatusResponse generatorsLocal = generators;\n+        if (generatorsLocal != null) {\n+            Optional<GeneratorStatus> generatorOpt = generatorsLocal.stream()\n+                    .filter(g -> String.valueOf(g.gensetID).equals(childThing.getUID().getId())).findFirst();\n+            if (generatorOpt.isPresent()) {\n+                ((GeneracMobileLinkGeneratorHandler) childHandler).updateGeneratorStatus(generatorOpt.get());\n+            }\n+        }\n+    }\n+\n+    private void stopPoll() {\n+        Future<?> localPollFuture = pollFuture;\n+        if (localPollFuture != null && !localPollFuture.isCancelled()) {\n+            localPollFuture.cancel(false);\n+        }\n+    }\n+\n+    private void restartPoll() {\n+        stopPoll();\n+        pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 0, refreshInterval, TimeUnit.SECONDS);\n+    }\n+\n+    private void poll() {\n+        // if our token is null we need to login\n+        if (authToken == null) {\n+            logger.debug(\"login\");\n+            login();\n+        }\n+\n+        // if we now have a token, get our data\n+        if (authToken != null) {\n+            getStatuses();\n+        }\n+    }\n+\n+    private void login() {\n+        try {\n+            GeneracMobileLinkAccountConfiguration config = getConfigAs(GeneracMobileLinkAccountConfiguration.class);\n+            refreshInterval = config.refreshInterval;\n+            ContentResponse contentResponse = httpClient.newRequest(BASE_URL + \"/Users/login\").method(HttpMethod.POST)\n+                    .content(\n+                            new StringContentProvider(\n+                                    gson.toJson(new LoginRequest(SHARED_KEY, config.username, config.password))),\n+                            \"application/json\")\n+                    .timeout(10, TimeUnit.SECONDS).send();\n+            int statusCode = contentResponse.getStatus();\n+            String content = contentResponse.getContentAsString();\n+            logger.trace(\"LoginResponse - status: {} content: {}\", statusCode, content);\n+            switch (statusCode) {\n+                case HttpStatus.OK_200:\n+                    LoginResponse loginResponse = gson.fromJson(content, LoginResponse.class);\n+                    if (loginResponse != null) {\n+                        authToken = loginResponse.authToken;\n+                        updateStatus(ThingStatus.ONLINE);\n+                    } else {\n+                        updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR,\n+                                \"Invalid Response Body\");\n+                    }\n+                    break;\n+                case HttpStatus.UNAUTHORIZED_401:\n+                    // the server responds with a 500 error in some cases when credentials are not correct\n+                case HttpStatus.INTERNAL_SERVER_ERROR_500:\n+                    // do not continue to poll with bad credentials since this requires user intervention\n+                    stopPoll();\n+                    updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                            \"Unauthorized - Check Credentials\");\n+                    break;\n+                default:\n+                    updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR,\n+                            \"Invalid Response Code \" + statusCode);\n+            }\n+        } catch (ExecutionException e) {\n+            // MobileLink response will trigger a Jetty \"Authentication challenge without WWW-Authenticate header\"\n+            // ExecutionException if the password is not right\n+            logger.debug(\"Could not login\", e);\n+            // do not continue to poll with bad credentials since this requires user intervention\n+            stopPoll();\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                    \"Unauthorized - Check Credentials\");", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMjc0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543602747", "bodyText": "Could you be a bit more verbose, so that somebody who hasn't heard about it gets a clue what this is about?", "author": "fwolter", "createdAt": "2020-12-15T18:55:24Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/binding/binding.xml", "diffHunk": "@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<binding:binding id=\"generacmobilelink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:binding=\"https://openhab.org/schemas/binding/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/binding/v1.0.0 https://openhab.org/schemas/binding-1.0.0.xsd\">\n+\n+\t<name>GeneracMobileLink Binding</name>\n+\t<description>This is the binding for GeneracMobileLink.</description>", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NjgyOA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543776828", "bodyText": "Agreed.  FYI this was auto generated from our skeleton script", "author": "digitaldan", "createdAt": "2020-12-16T00:03:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMjc0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMjg3MA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543602870", "bodyText": "The author tag is deprecated and should therefore be removed. See openhab/openhab-core#1844.", "author": "fwolter", "createdAt": "2020-12-15T18:55:35Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/binding/binding.xml", "diffHunk": "@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<binding:binding id=\"generacmobilelink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:binding=\"https://openhab.org/schemas/binding/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/binding/v1.0.0 https://openhab.org/schemas/binding-1.0.0.xsd\">\n+\n+\t<name>GeneracMobileLink Binding</name>\n+\t<description>This is the binding for GeneracMobileLink.</description>\n+\t<author>Dan Cunningham</author>", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3ODI0MA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543778240", "bodyText": "Sounds good.  FYI this was auto generated from our skeleton script", "author": "digitaldan", "createdAt": "2020-12-16T00:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMjg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMzcxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543603715", "bodyText": "What's the purpose of the pattern attribute?", "author": "fwolter", "createdAt": "2020-12-15T18:56:50Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -0,0 +1,109 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"generacmobilelink\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<bridge-type id=\"account\">\n+\t\t<label>MobileLink Account</label>\n+\t\t<description>MobileLink Cloud Account</description>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:account\"/>\n+\t</bridge-type>\n+\n+\t<thing-type id=\"generator\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"account\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>MobileLink Generator</label>\n+\t\t<description>Generator</description>\n+\t\t<channels>\n+\t\t\t<channel id=\"connected\" typeId=\"connected\"/>\n+\t\t\t<channel id=\"greenLight\" typeId=\"greenLight\"/>\n+\t\t\t<channel id=\"yellowLight\" typeId=\"yellowLight\"/>\n+\t\t\t<channel id=\"redLight\" typeId=\"redLight\"/>\n+\t\t\t<channel id=\"blueLight\" typeId=\"blueLight\"/>\n+\t\t\t<channel id=\"statusDate\" typeId=\"statusDate\"/>\n+\t\t\t<channel id=\"status\" typeId=\"status\"/>\n+\t\t\t<channel id=\"currentAlarmDescription\" typeId=\"currentAlarmDescription\"/>\n+\t\t\t<channel id=\"runHours\" typeId=\"runHours\"/>\n+\t\t\t<channel id=\"exerciseHours\" typeId=\"exerciseHours\"/>\n+\t\t\t<channel id=\"fuelType\" typeId=\"fuelType\"/>\n+\t\t\t<channel id=\"fuelLevel\" typeId=\"fuelLevel\"/>\n+\t\t\t<channel id=\"batteryVoltage\" typeId=\"batteryVoltage\"/>\n+\t\t\t<channel id=\"serviceStatus\" typeId=\"serviceStatus\"/>\n+\t\t</channels>\n+\t\t<representation-property>generatorId</representation-property>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:generator\"/>\n+\t</thing-type>\n+\n+\t<channel-type id=\"connected\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Connected</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3ODY4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543778683", "bodyText": "none i need to remove it.", "author": "digitaldan", "createdAt": "2020-12-16T00:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMzcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwNDM4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543604387", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<state readOnly=\"true\" pattern=\"%d\"/>\n          \n          \n            \n            \t\t<state readOnly=\"true\" pattern=\"%d %unit%\"/>", "author": "fwolter", "createdAt": "2020-12-15T18:57:41Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -0,0 +1,109 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"generacmobilelink\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<bridge-type id=\"account\">\n+\t\t<label>MobileLink Account</label>\n+\t\t<description>MobileLink Cloud Account</description>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:account\"/>\n+\t</bridge-type>\n+\n+\t<thing-type id=\"generator\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"account\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>MobileLink Generator</label>\n+\t\t<description>Generator</description>\n+\t\t<channels>\n+\t\t\t<channel id=\"connected\" typeId=\"connected\"/>\n+\t\t\t<channel id=\"greenLight\" typeId=\"greenLight\"/>\n+\t\t\t<channel id=\"yellowLight\" typeId=\"yellowLight\"/>\n+\t\t\t<channel id=\"redLight\" typeId=\"redLight\"/>\n+\t\t\t<channel id=\"blueLight\" typeId=\"blueLight\"/>\n+\t\t\t<channel id=\"statusDate\" typeId=\"statusDate\"/>\n+\t\t\t<channel id=\"status\" typeId=\"status\"/>\n+\t\t\t<channel id=\"currentAlarmDescription\" typeId=\"currentAlarmDescription\"/>\n+\t\t\t<channel id=\"runHours\" typeId=\"runHours\"/>\n+\t\t\t<channel id=\"exerciseHours\" typeId=\"exerciseHours\"/>\n+\t\t\t<channel id=\"fuelType\" typeId=\"fuelType\"/>\n+\t\t\t<channel id=\"fuelLevel\" typeId=\"fuelLevel\"/>\n+\t\t\t<channel id=\"batteryVoltage\" typeId=\"batteryVoltage\"/>\n+\t\t\t<channel id=\"serviceStatus\" typeId=\"serviceStatus\"/>\n+\t\t</channels>\n+\t\t<representation-property>generatorId</representation-property>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:generator\"/>\n+\t</thing-type>\n+\n+\t<channel-type id=\"connected\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Connected</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"greenLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Green Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"yellowLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Yellow Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"redLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Red Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"blueLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Blue Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"statusDate\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Last Status Date</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"status\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"currentAlarmDescription\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Current Alarm Description</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"runHours\">\n+\t\t<item-type>Number:Time</item-type>\n+\t\t<label>Number of Hours Run</label>\n+\t\t<state readOnly=\"true\" pattern=\"%d\"/>", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwNTU2Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r543605563", "bodyText": "If this is percent, you could make it Number:Dimensionless and fill the value with QuantityType.valueOf(n, Units.PERCENT).", "author": "fwolter", "createdAt": "2020-12-15T18:59:35Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -0,0 +1,109 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"generacmobilelink\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<bridge-type id=\"account\">\n+\t\t<label>MobileLink Account</label>\n+\t\t<description>MobileLink Cloud Account</description>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:account\"/>\n+\t</bridge-type>\n+\n+\t<thing-type id=\"generator\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"account\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>MobileLink Generator</label>\n+\t\t<description>Generator</description>\n+\t\t<channels>\n+\t\t\t<channel id=\"connected\" typeId=\"connected\"/>\n+\t\t\t<channel id=\"greenLight\" typeId=\"greenLight\"/>\n+\t\t\t<channel id=\"yellowLight\" typeId=\"yellowLight\"/>\n+\t\t\t<channel id=\"redLight\" typeId=\"redLight\"/>\n+\t\t\t<channel id=\"blueLight\" typeId=\"blueLight\"/>\n+\t\t\t<channel id=\"statusDate\" typeId=\"statusDate\"/>\n+\t\t\t<channel id=\"status\" typeId=\"status\"/>\n+\t\t\t<channel id=\"currentAlarmDescription\" typeId=\"currentAlarmDescription\"/>\n+\t\t\t<channel id=\"runHours\" typeId=\"runHours\"/>\n+\t\t\t<channel id=\"exerciseHours\" typeId=\"exerciseHours\"/>\n+\t\t\t<channel id=\"fuelType\" typeId=\"fuelType\"/>\n+\t\t\t<channel id=\"fuelLevel\" typeId=\"fuelLevel\"/>\n+\t\t\t<channel id=\"batteryVoltage\" typeId=\"batteryVoltage\"/>\n+\t\t\t<channel id=\"serviceStatus\" typeId=\"serviceStatus\"/>\n+\t\t</channels>\n+\t\t<representation-property>generatorId</representation-property>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:generator\"/>\n+\t</thing-type>\n+\n+\t<channel-type id=\"connected\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Connected</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"greenLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Green Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"yellowLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Yellow Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"redLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Red Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"blueLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Blue Light Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"statusDate\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Last Status Date</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"status\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Status</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"currentAlarmDescription\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Current Alarm Description</label>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"/>\n+\t</channel-type>\n+\t<channel-type id=\"runHours\">\n+\t\t<item-type>Number:Time</item-type>\n+\t\t<label>Number of Hours Run</label>\n+\t\t<state readOnly=\"true\" pattern=\"%d\"/>\n+\t</channel-type>\n+\t<channel-type id=\"exerciseHours\">\n+\t\t<item-type>Number:Time</item-type>\n+\t\t<label>Number of Hours Exercised</label>\n+\t\t<state readOnly=\"true\" pattern=\"%d\"/>\n+\t</channel-type>\n+\t<channel-type id=\"fuelType\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Fuel Type</label>\n+\t\t<state readOnly=\"true\" pattern=\"%d\"/>\n+\t</channel-type>\n+\t<channel-type id=\"fuelLevel\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Fuel Level</label>\n+\t\t<state readOnly=\"true\" pattern=\"%d\"/>", "originalCommit": "706e98a4efe18441fd6a72eb4d6918c8f8d219bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEyMjkyMg==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546122922", "bodyText": "Any reason you didn't extend an AbstractDiscoveryService?", "author": "cpmeister", "createdAt": "2020-12-18T22:35:46Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/discovery/GeneracMobileLinkDiscoveryService.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.discovery;\n+\n+import static org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants.THING_TYPE_GENERATOR;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.config.discovery.DiscoveryListener;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryService;\n+import org.openhab.core.config.discovery.ScanListener;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+\n+/**\n+ * The {@link GeneracMobileLinkDiscoveryService} is responsible for discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkDiscoveryService implements DiscoveryService {", "originalCommit": "200b8d31f9305b10f0e06a93457e6590f1671d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4NzE1NA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546287154", "bodyText": "That would have been better, yes :-)", "author": "digitaldan", "createdAt": "2020-12-19T21:49:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEyMjkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NTgxMA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546165810", "bodyText": "Can this be a DateTime instead?", "author": "cpmeister", "createdAt": "2020-12-19T00:59:01Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -0,0 +1,109 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"generacmobilelink\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<bridge-type id=\"account\">\n+\t\t<label>MobileLink Account</label>\n+\t\t<description>MobileLink Cloud Account</description>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:account\"/>\n+\t</bridge-type>\n+\n+\t<thing-type id=\"generator\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"account\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>MobileLink Generator</label>\n+\t\t<description>Generator</description>\n+\t\t<channels>\n+\t\t\t<channel id=\"connected\" typeId=\"connected\"/>\n+\t\t\t<channel id=\"greenLight\" typeId=\"greenLight\"/>\n+\t\t\t<channel id=\"yellowLight\" typeId=\"yellowLight\"/>\n+\t\t\t<channel id=\"redLight\" typeId=\"redLight\"/>\n+\t\t\t<channel id=\"blueLight\" typeId=\"blueLight\"/>\n+\t\t\t<channel id=\"statusDate\" typeId=\"statusDate\"/>\n+\t\t\t<channel id=\"status\" typeId=\"status\"/>\n+\t\t\t<channel id=\"currentAlarmDescription\" typeId=\"currentAlarmDescription\"/>\n+\t\t\t<channel id=\"runHours\" typeId=\"runHours\"/>\n+\t\t\t<channel id=\"exerciseHours\" typeId=\"exerciseHours\"/>\n+\t\t\t<channel id=\"fuelType\" typeId=\"fuelType\"/>\n+\t\t\t<channel id=\"fuelLevel\" typeId=\"fuelLevel\"/>\n+\t\t\t<channel id=\"batteryVoltage\" typeId=\"batteryVoltage\"/>\n+\t\t\t<channel id=\"serviceStatus\" typeId=\"serviceStatus\"/>\n+\t\t</channels>\n+\t\t<representation-property>generatorId</representation-property>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:generator\"/>\n+\t</thing-type>\n+\n+\t<channel-type id=\"connected\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Connected</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"greenLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Green Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"yellowLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Yellow Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"redLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Red Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"blueLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Blue Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"statusDate\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Last Status Date</label>\n+\t\t<state readOnly=\"true\"/>", "originalCommit": "200b8d31f9305b10f0e06a93457e6590f1671d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4NzM2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546287365", "bodyText": "You caught me :-) I'll give it a try, as mentioned in another comment, i had to reverse the API, i'm not sure how the time string might change given geographic regions or timezones, but its probably the right thing to do to at least try.", "author": "digitaldan", "createdAt": "2020-12-19T21:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NTgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4ODY4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546288685", "bodyText": "actually now that i look at this closely, its seems the API just returns a format like \"12/19/2020\" , so i'm not sure if a datetime object really makes sense.  I'm not sure what time zone this is referring to.", "author": "digitaldan", "createdAt": "2020-12-19T22:03:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NTgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMDIwNA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546400204", "bodyText": "I changed this to a datetime starting the the beginning of the local day.", "author": "digitaldan", "createdAt": "2020-12-20T16:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NTgxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NjIxNw==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546166217", "bodyText": "You should at the very least set the thing status to UNKNOWN as part of initialize().", "author": "cpmeister", "createdAt": "2020-12-19T01:01:27Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkGeneratorHandler.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import javax.measure.quantity.Time;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.generacmobilelink.internal.dto.GeneratorStatusDTO;\n+import org.openhab.core.library.types.DecimalType;\n+import org.openhab.core.library.types.OnOffType;\n+import org.openhab.core.library.types.QuantityType;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.library.unit.Units;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.binding.BaseThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+\n+/**\n+ * The {@link GeneracMobileLinkGeneratorHandler} is responsible for updating a generator things's channels\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkGeneratorHandler extends BaseThingHandler {\n+    private @Nullable GeneratorStatusDTO status;\n+\n+    public GeneracMobileLinkGeneratorHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof RefreshType) {\n+            updateState();\n+        }\n+    }\n+\n+    @Override\n+    public void initialize() {\n+    }", "originalCommit": "200b8d31f9305b10f0e06a93457e6590f1671d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4NzM5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546287391", "bodyText": "yep", "author": "digitaldan", "createdAt": "2020-12-19T21:51:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NjIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NjcyOA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546166728", "bodyText": "Access to this isn't completely synchronized, so it would be safe to just make the map thread safe.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<ThingUID, ServiceRegistration<?>> discoveryServiceRegs = new HashMap<>();\n          \n          \n            \n                private final Map<ThingUID, ServiceRegistration<?>> discoveryServiceRegs = new ConcurrentHashMap<>();", "author": "cpmeister", "createdAt": "2020-12-19T01:04:08Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/factory/GeneracMobileLinkHandlerFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.factory;\n+\n+import static org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.Hashtable;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.binding.generacmobilelink.internal.handler.GeneracMobileLinkAccountHandler;\n+import org.openhab.binding.generacmobilelink.internal.handler.GeneracMobileLinkGeneratorHandler;\n+import org.openhab.core.config.discovery.DiscoveryService;\n+import org.openhab.core.io.net.http.HttpClientFactory;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseThingHandlerFactory;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerFactory;\n+import org.osgi.framework.ServiceRegistration;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * The {@link GeneracMobileLinkHandlerFactory} is responsible for creating things and thing\n+ * handlers.\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(configurationPid = \"binding.generacmobilelink\", service = ThingHandlerFactory.class)\n+public class GeneracMobileLinkHandlerFactory extends BaseThingHandlerFactory {\n+    private static final Set<ThingTypeUID> SUPPORTED_THING_TYPES_UIDS = Set.of(THING_TYPE_ACCOUNT,\n+            THING_TYPE_GENERATOR);\n+    private final Map<ThingUID, ServiceRegistration<?>> discoveryServiceRegs = new HashMap<>();", "originalCommit": "200b8d31f9305b10f0e06a93457e6590f1671d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4NzQ3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546287476", "bodyText": "yep", "author": "digitaldan", "createdAt": "2020-12-19T21:52:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NjcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NzMxNg==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546167316", "bodyText": "Is the voltage returned as a number? Or is it a status like \"Charging\"?", "author": "cpmeister", "createdAt": "2020-12-19T01:07:00Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -0,0 +1,109 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"generacmobilelink\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<bridge-type id=\"account\">\n+\t\t<label>MobileLink Account</label>\n+\t\t<description>MobileLink Cloud Account</description>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:account\"/>\n+\t</bridge-type>\n+\n+\t<thing-type id=\"generator\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"account\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>MobileLink Generator</label>\n+\t\t<description>Generator</description>\n+\t\t<channels>\n+\t\t\t<channel id=\"connected\" typeId=\"connected\"/>\n+\t\t\t<channel id=\"greenLight\" typeId=\"greenLight\"/>\n+\t\t\t<channel id=\"yellowLight\" typeId=\"yellowLight\"/>\n+\t\t\t<channel id=\"redLight\" typeId=\"redLight\"/>\n+\t\t\t<channel id=\"blueLight\" typeId=\"blueLight\"/>\n+\t\t\t<channel id=\"statusDate\" typeId=\"statusDate\"/>\n+\t\t\t<channel id=\"status\" typeId=\"status\"/>\n+\t\t\t<channel id=\"currentAlarmDescription\" typeId=\"currentAlarmDescription\"/>\n+\t\t\t<channel id=\"runHours\" typeId=\"runHours\"/>\n+\t\t\t<channel id=\"exerciseHours\" typeId=\"exerciseHours\"/>\n+\t\t\t<channel id=\"fuelType\" typeId=\"fuelType\"/>\n+\t\t\t<channel id=\"fuelLevel\" typeId=\"fuelLevel\"/>\n+\t\t\t<channel id=\"batteryVoltage\" typeId=\"batteryVoltage\"/>\n+\t\t\t<channel id=\"serviceStatus\" typeId=\"serviceStatus\"/>\n+\t\t</channels>\n+\t\t<representation-property>generatorId</representation-property>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:generator\"/>\n+\t</thing-type>\n+\n+\t<channel-type id=\"connected\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Connected</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"greenLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Green Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"yellowLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Yellow Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"redLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Red Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"blueLight\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Blue Light Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"statusDate\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Last Status Date</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"status\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"currentAlarmDescription\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Current Alarm Description</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"runHours\">\n+\t\t<item-type>Number:Time</item-type>\n+\t\t<label>Number of Hours Run</label>\n+\t\t<state readOnly=\"true\" pattern=\"%d %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"exerciseHours\">\n+\t\t<item-type>Number:Time</item-type>\n+\t\t<label>Number of Hours Exercised</label>\n+\t\t<state readOnly=\"true\" pattern=\"%d %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"fuelType\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Fuel Type</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"fuelLevel\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Fuel Level</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\t<channel-type id=\"batteryVoltage\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Battery Voltage Status</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>", "originalCommit": "200b8d31f9305b10f0e06a93457e6590f1671d38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI4NTEyMA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r546285120", "bodyText": "It's a String, like \"good\".  Unfortunately some of the variations on the possible return values are unknown to me.  There is no public documentation on this API, and i could find no other projects on the internet who have tried an integration, so this was me truly reverse engineering the API.", "author": "digitaldan", "createdAt": "2020-12-19T21:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE2NzMxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0MjUwNA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r548342504", "bodyText": "You should silently consume InterruptedExceptions. If this thread is interrupted it usually means that the system is requesting that it stops run as soon as it is able. To prevent the callers of your method from assuming that execution can continue as normal you should have your method throw the InterruptedException instead.\nLet the InterruptedException travel as high up the call stack as possible to guarantee an expedient thread completion.", "author": "cpmeister", "createdAt": "2020-12-24T01:30:55Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkAccountHandler.java", "diffHunk": "@@ -0,0 +1,267 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.ContentProvider;\n+import org.eclipse.jetty.client.api.Request;\n+import org.eclipse.jetty.client.api.Result;\n+import org.eclipse.jetty.client.util.BufferingResponseListener;\n+import org.eclipse.jetty.client.util.StringContentProvider;\n+import org.eclipse.jetty.http.HttpMethod;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants;\n+import org.openhab.binding.generacmobilelink.internal.config.GeneracMobileLinkAccountConfiguration;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.binding.generacmobilelink.internal.dto.ErrorResponseDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.GeneratorStatusDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.GeneratorStatusResponseDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.LoginRequestDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.LoginResponseDTO;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseBridgeHandler;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The {@link GeneracMobileLinkAccountHandler} is responsible for connecting to the MobileLink cloud service and\n+ * discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkAccountHandler extends BaseBridgeHandler {\n+    private static final String BASE_URL = \"https://api.mobilelinkgen.com\";\n+    private static final String SHARED_KEY = \"GeneseeDepot13\";\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkAccountHandler.class);\n+    private final Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();\n+    private @Nullable Future<?> pollFuture;\n+    private @Nullable String authToken;\n+    private @Nullable GeneratorStatusResponseDTO generators;\n+    private GeneracMobileLinkDiscoveryService discoveryService;\n+    private HttpClient httpClient;\n+    private int refreshIntervalSeconds = 60;\n+\n+    public GeneracMobileLinkAccountHandler(Bridge bridge, HttpClient httpClient,\n+            GeneracMobileLinkDiscoveryService discoveryService) {\n+        super(bridge);\n+        this.httpClient = httpClient;\n+        this.discoveryService = discoveryService;\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        authToken = null;\n+        restartPoll();\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        stopPoll();\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof RefreshType) {\n+            updateGeneratorThings();\n+        }\n+    }\n+\n+    @Override\n+    public void childHandlerInitialized(ThingHandler childHandler, Thing childThing) {\n+        GeneratorStatusResponseDTO generatorsLocal = generators;\n+        if (generatorsLocal != null) {\n+            Optional<GeneratorStatusDTO> generatorOpt = generatorsLocal.stream()\n+                    .filter(g -> String.valueOf(g.gensetID).equals(childThing.getUID().getId())).findFirst();\n+            if (generatorOpt.isPresent()) {\n+                ((GeneracMobileLinkGeneratorHandler) childHandler).updateGeneratorStatus(generatorOpt.get());\n+            }\n+        }\n+    }\n+\n+    private void stopPoll() {\n+        Future<?> localPollFuture = pollFuture;\n+        if (localPollFuture != null) {\n+            localPollFuture.cancel(true);\n+        }\n+    }\n+\n+    private void restartPoll() {\n+        stopPoll();\n+        pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 0, refreshIntervalSeconds, TimeUnit.SECONDS);\n+    }\n+\n+    private void poll() {\n+        if (authToken == null) {\n+            logger.debug(\"Attempting Login\");\n+            login();\n+        }\n+        getStatuses(true);\n+    }\n+\n+    private synchronized void login() {\n+        GeneracMobileLinkAccountConfiguration config = getConfigAs(GeneracMobileLinkAccountConfiguration.class);\n+        refreshIntervalSeconds = config.refreshInterval;\n+        try {\n+            HTTPResult result = sendRequest(BASE_URL + \"/Users/login\", HttpMethod.POST, null,\n+                    new StringContentProvider(\n+                            gson.toJson(new LoginRequestDTO(SHARED_KEY, config.username, config.password))),\n+                    \"application/json\");\n+            if (result.responseCode == HttpStatus.OK_200) {\n+                LoginResponseDTO loginResponse = gson.fromJson(result.content, LoginResponseDTO.class);\n+                if (loginResponse != null) {\n+                    authToken = loginResponse.authToken;\n+                    updateStatus(ThingStatus.ONLINE);\n+                }\n+            } else {\n+                handleErrorResponse(result);\n+                if (thing.getStatusInfo().getStatusDetail() == ThingStatusDetail.CONFIGURATION_ERROR) {\n+                    // bad credentials, stop trying to login\n+                    stopPoll();\n+                }\n+            }\n+        } catch (InterruptedException e) {\n+        }\n+    }\n+\n+    private void getStatuses(boolean retry) {\n+        if (authToken == null) {\n+            return;\n+        }\n+        try {\n+            HTTPResult result = sendRequest(BASE_URL + \"/Generator/GeneratorStatus\", HttpMethod.GET, authToken, null,\n+                    null);\n+            if (result.responseCode == HttpStatus.OK_200) {\n+                generators = gson.fromJson(result.content, GeneratorStatusResponseDTO.class);\n+                updateGeneratorThings();\n+                if (getThing().getStatus() != ThingStatus.ONLINE) {\n+                    updateStatus(ThingStatus.ONLINE);\n+                }\n+            } else {\n+                if (retry) {\n+                    logger.debug(\"Retrying status request\");\n+                    getStatuses(false);\n+                } else {\n+                    handleErrorResponse(result);\n+                }\n+            }\n+        } catch (InterruptedException e) {\n+        }", "originalCommit": "cf367e09451b69ecb3e554a27f746d7495fae877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0Mjc3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r548342772", "bodyText": "This logic should probably be moved into the GeneracMobileLinkDiscoveryService instead.", "author": "cpmeister", "createdAt": "2020-12-24T01:32:11Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/java/org/openhab/binding/generacmobilelink/internal/handler/GeneracMobileLinkAccountHandler.java", "diffHunk": "@@ -0,0 +1,267 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.generacmobilelink.internal.handler;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.ContentProvider;\n+import org.eclipse.jetty.client.api.Request;\n+import org.eclipse.jetty.client.api.Result;\n+import org.eclipse.jetty.client.util.BufferingResponseListener;\n+import org.eclipse.jetty.client.util.StringContentProvider;\n+import org.eclipse.jetty.http.HttpMethod;\n+import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.generacmobilelink.internal.GeneracMobileLinkBindingConstants;\n+import org.openhab.binding.generacmobilelink.internal.config.GeneracMobileLinkAccountConfiguration;\n+import org.openhab.binding.generacmobilelink.internal.discovery.GeneracMobileLinkDiscoveryService;\n+import org.openhab.binding.generacmobilelink.internal.dto.ErrorResponseDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.GeneratorStatusDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.GeneratorStatusResponseDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.LoginRequestDTO;\n+import org.openhab.binding.generacmobilelink.internal.dto.LoginResponseDTO;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Bridge;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseBridgeHandler;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.RefreshType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.FieldNamingPolicy;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The {@link GeneracMobileLinkAccountHandler} is responsible for connecting to the MobileLink cloud service and\n+ * discovering generator things\n+ *\n+ * @author Dan Cunningham - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GeneracMobileLinkAccountHandler extends BaseBridgeHandler {\n+    private static final String BASE_URL = \"https://api.mobilelinkgen.com\";\n+    private static final String SHARED_KEY = \"GeneseeDepot13\";\n+    private final Logger logger = LoggerFactory.getLogger(GeneracMobileLinkAccountHandler.class);\n+    private final Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();\n+    private @Nullable Future<?> pollFuture;\n+    private @Nullable String authToken;\n+    private @Nullable GeneratorStatusResponseDTO generators;\n+    private GeneracMobileLinkDiscoveryService discoveryService;\n+    private HttpClient httpClient;\n+    private int refreshIntervalSeconds = 60;\n+\n+    public GeneracMobileLinkAccountHandler(Bridge bridge, HttpClient httpClient,\n+            GeneracMobileLinkDiscoveryService discoveryService) {\n+        super(bridge);\n+        this.httpClient = httpClient;\n+        this.discoveryService = discoveryService;\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        authToken = null;\n+        restartPoll();\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        stopPoll();\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof RefreshType) {\n+            updateGeneratorThings();\n+        }\n+    }\n+\n+    @Override\n+    public void childHandlerInitialized(ThingHandler childHandler, Thing childThing) {\n+        GeneratorStatusResponseDTO generatorsLocal = generators;\n+        if (generatorsLocal != null) {\n+            Optional<GeneratorStatusDTO> generatorOpt = generatorsLocal.stream()\n+                    .filter(g -> String.valueOf(g.gensetID).equals(childThing.getUID().getId())).findFirst();\n+            if (generatorOpt.isPresent()) {\n+                ((GeneracMobileLinkGeneratorHandler) childHandler).updateGeneratorStatus(generatorOpt.get());\n+            }\n+        }\n+    }\n+\n+    private void stopPoll() {\n+        Future<?> localPollFuture = pollFuture;\n+        if (localPollFuture != null) {\n+            localPollFuture.cancel(true);\n+        }\n+    }\n+\n+    private void restartPoll() {\n+        stopPoll();\n+        pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 0, refreshIntervalSeconds, TimeUnit.SECONDS);\n+    }\n+\n+    private void poll() {\n+        if (authToken == null) {\n+            logger.debug(\"Attempting Login\");\n+            login();\n+        }\n+        getStatuses(true);\n+    }\n+\n+    private synchronized void login() {\n+        GeneracMobileLinkAccountConfiguration config = getConfigAs(GeneracMobileLinkAccountConfiguration.class);\n+        refreshIntervalSeconds = config.refreshInterval;\n+        try {\n+            HTTPResult result = sendRequest(BASE_URL + \"/Users/login\", HttpMethod.POST, null,\n+                    new StringContentProvider(\n+                            gson.toJson(new LoginRequestDTO(SHARED_KEY, config.username, config.password))),\n+                    \"application/json\");\n+            if (result.responseCode == HttpStatus.OK_200) {\n+                LoginResponseDTO loginResponse = gson.fromJson(result.content, LoginResponseDTO.class);\n+                if (loginResponse != null) {\n+                    authToken = loginResponse.authToken;\n+                    updateStatus(ThingStatus.ONLINE);\n+                }\n+            } else {\n+                handleErrorResponse(result);\n+                if (thing.getStatusInfo().getStatusDetail() == ThingStatusDetail.CONFIGURATION_ERROR) {\n+                    // bad credentials, stop trying to login\n+                    stopPoll();\n+                }\n+            }\n+        } catch (InterruptedException e) {\n+        }\n+    }\n+\n+    private void getStatuses(boolean retry) {\n+        if (authToken == null) {\n+            return;\n+        }\n+        try {\n+            HTTPResult result = sendRequest(BASE_URL + \"/Generator/GeneratorStatus\", HttpMethod.GET, authToken, null,\n+                    null);\n+            if (result.responseCode == HttpStatus.OK_200) {\n+                generators = gson.fromJson(result.content, GeneratorStatusResponseDTO.class);\n+                updateGeneratorThings();\n+                if (getThing().getStatus() != ThingStatus.ONLINE) {\n+                    updateStatus(ThingStatus.ONLINE);\n+                }\n+            } else {\n+                if (retry) {\n+                    logger.debug(\"Retrying status request\");\n+                    getStatuses(false);\n+                } else {\n+                    handleErrorResponse(result);\n+                }\n+            }\n+        } catch (InterruptedException e) {\n+        }\n+    }\n+\n+    private HTTPResult sendRequest(String url, HttpMethod method, @Nullable String token,\n+            @Nullable ContentProvider content, @Nullable String contentType) throws InterruptedException {\n+        try {\n+            Request request = httpClient.newRequest(url).method(method).timeout(10, TimeUnit.SECONDS);\n+            if (token != null) {\n+                request = request.header(\"AuthToken\", token);\n+            }\n+            if (content != null & contentType != null) {\n+                request = request.content(content, contentType);\n+            }\n+            logger.trace(\"Sending {} to {}\", request.getMethod(), request.getURI());\n+            final CompletableFuture<HTTPResult> futureResult = new CompletableFuture<>();\n+            request.send(new BufferingResponseListener() {\n+                @NonNullByDefault({})\n+                @Override\n+                public void onComplete(Result result) {\n+                    futureResult.complete(new HTTPResult(result.getResponse().getStatus(), getContentAsString()));\n+                }\n+            });\n+            HTTPResult result = futureResult.get();\n+            logger.trace(\"Response - status: {} content: {}\", result.responseCode, result.content);\n+            return result;\n+        } catch (ExecutionException e) {\n+            return new HTTPResult(0, e.getMessage());\n+        }\n+    }\n+\n+    private void handleErrorResponse(HTTPResult result) {\n+        switch (result.responseCode) {\n+            case HttpStatus.UNAUTHORIZED_401:\n+                // the server responds with a 500 error in some cases when credentials are not correct\n+            case HttpStatus.INTERNAL_SERVER_ERROR_500:\n+                // server returned a valid error response\n+                ErrorResponseDTO error = gson.fromJson(result.content, ErrorResponseDTO.class);\n+                if (error != null && error.errorCode > 0) {\n+                    updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                            \"Unauthorized: \" + result.content);\n+                    authToken = null;\n+                    break;\n+                }\n+            default:\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, result.content);\n+        }\n+    }\n+\n+    private void updateGeneratorThings() {\n+        GeneratorStatusResponseDTO generatorsLocal = generators;\n+        if (generatorsLocal != null) {\n+            generatorsLocal.forEach(generator -> {\n+                Thing thing = getThing().getThing(new ThingUID(GeneracMobileLinkBindingConstants.THING_TYPE_GENERATOR,\n+                        getThing().getUID(), String.valueOf(generator.gensetID)));\n+                if (thing == null) {\n+                    generatorDiscovered(generator);\n+                } else {\n+                    ThingHandler handler = thing.getHandler();\n+                    if (handler != null) {\n+                        ((GeneracMobileLinkGeneratorHandler) handler).updateGeneratorStatus(generator);\n+                    }\n+                }\n+            });\n+        }\n+    }\n+\n+    private void generatorDiscovered(GeneratorStatusDTO generator) {\n+        DiscoveryResult result = DiscoveryResultBuilder\n+                .create(new ThingUID(GeneracMobileLinkBindingConstants.THING_TYPE_GENERATOR, getThing().getUID(),\n+                        String.valueOf(generator.gensetID)))\n+                .withLabel(\"MobileLink Generator \" + generator.generatorName)\n+                .withProperty(\"generatorId\", String.valueOf(generator.gensetID))\n+                .withRepresentationProperty(\"generatorId\").withBridge(getThing().getUID()).build();\n+        discoveryService.thingDiscovered(result);\n+    }", "originalCommit": "cf367e09451b69ecb3e554a27f746d7495fae877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0Mjk4OA==", "url": "https://github.com/openhab/openhab-addons/pull/9322#discussion_r548342988", "bodyText": "Maybe make the description longer than the label... just saying.", "author": "cpmeister", "createdAt": "2020-12-24T01:33:29Z", "path": "bundles/org.openhab.binding.generacmobilelink/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -0,0 +1,109 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"generacmobilelink\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<bridge-type id=\"account\">\n+\t\t<label>MobileLink Account</label>\n+\t\t<description>MobileLink Cloud Account</description>\n+\t\t<config-description-ref uri=\"thing-type:generacmobilelink:account\"/>\n+\t</bridge-type>\n+\n+\t<thing-type id=\"generator\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"account\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>MobileLink Generator</label>\n+\t\t<description>Generator</description>", "originalCommit": "cf367e09451b69ecb3e554a27f746d7495fae877", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "86cd3bf686321bb676584fb80318041cb8922c6b", "url": "https://github.com/openhab/openhab-addons/commit/86cd3bf686321bb676584fb80318041cb8922c6b", "message": "This is the initial contribution of the Generac MobileLink binding.  This allows the  Generac line of generators using their MobileLink cloud service to be monitored as things in openHAB.\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:54Z", "type": "commit"}, {"oid": "facc9636e46973d69d54545150840296a80bd1ce", "url": "https://github.com/openhab/openhab-addons/commit/facc9636e46973d69d54545150840296a80bd1ce", "message": "Fix config name case for consistancy.\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:54Z", "type": "commit"}, {"oid": "abbe25ebab4d7a165ca12f48756309a380122b05", "url": "https://github.com/openhab/openhab-addons/commit/abbe25ebab4d7a165ca12f48756309a380122b05", "message": "Address feedback comments, add simple retry to status request, catch specific error from jetty\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:54Z", "type": "commit"}, {"oid": "93963a2eddae56d0596f5bb2e20854428f2bd1bd", "url": "https://github.com/openhab/openhab-addons/commit/93963a2eddae56d0596f5bb2e20854428f2bd1bd", "message": "added code check fixes, null checks\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:54Z", "type": "commit"}, {"oid": "ea3c5ec5cf7a83697a8d7120901f48957cc28cdf", "url": "https://github.com/openhab/openhab-addons/commit/ea3c5ec5cf7a83697a8d7120901f48957cc28cdf", "message": "small readme formatting\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:54Z", "type": "commit"}, {"oid": "a3646c9e8341e8f726df639886039cd8eaf10125", "url": "https://github.com/openhab/openhab-addons/commit/a3646c9e8341e8f726df639886039cd8eaf10125", "message": "another small readme fix\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:54Z", "type": "commit"}, {"oid": "76421e56075c8656ce7b95904314a0a3ecaf2f2f", "url": "https://github.com/openhab/openhab-addons/commit/76421e56075c8656ce7b95904314a0a3ecaf2f2f", "message": "Move api package to DTO structure to avoid checkstyle warnings\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "a763ce00b7edbf04c3183aa5de47b0754ca2118a", "url": "https://github.com/openhab/openhab-addons/commit/a763ce00b7edbf04c3183aa5de47b0754ca2118a", "message": "Remove discovery debugging logging\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "3be512221828c03988f9a28da8bbd4b6591675e2", "url": "https://github.com/openhab/openhab-addons/commit/3be512221828c03988f9a28da8bbd4b6591675e2", "message": "Removed logging, smal config refactoring\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "491ff604504546bb85909b0fdd9403da2e767025", "url": "https://github.com/openhab/openhab-addons/commit/491ff604504546bb85909b0fdd9403da2e767025", "message": "removing logging\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "0bdb74c89ba082b14ca04cec782432151cf17ea4", "url": "https://github.com/openhab/openhab-addons/commit/0bdb74c89ba082b14ca04cec782432151cf17ea4", "message": "Use async jetty to catch 401 errors from the API service\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "823a41083cab7af421b61b819c58f09f0b1521d8", "url": "https://github.com/openhab/openhab-addons/commit/823a41083cab7af421b61b819c58f09f0b1521d8", "message": "last cleanup of unused logger and comment update\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "e90a131e0dafc9e1e62188ca7833442de23ee960", "url": "https://github.com/openhab/openhab-addons/commit/e90a131e0dafc9e1e62188ca7833442de23ee960", "message": "Simplify connection handling, PR review changes.\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "115eb301b5c0cf0302154bf6d982d407380a848e", "url": "https://github.com/openhab/openhab-addons/commit/115eb301b5c0cf0302154bf6d982d407380a848e", "message": "remove debug statement\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "9b93c3a6e9c3701f57511babaa916c387512c480", "url": "https://github.com/openhab/openhab-addons/commit/9b93c3a6e9c3701f57511babaa916c387512c480", "message": "Addressed feedback\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:22:55Z", "type": "commit"}, {"oid": "3e548361efee8e9c1f67d6981298db353c8c45cf", "url": "https://github.com/openhab/openhab-addons/commit/3e548361efee8e9c1f67d6981298db353c8c45cf", "message": "bump to 3.1\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:26:54Z", "type": "commit"}, {"oid": "3e548361efee8e9c1f67d6981298db353c8c45cf", "url": "https://github.com/openhab/openhab-addons/commit/3e548361efee8e9c1f67d6981298db353c8c45cf", "message": "bump to 3.1\n\nSigned-off-by: Dan Cunningham <dan@digitaldan.com>", "committedDate": "2020-12-26T16:26:54Z", "type": "forcePushed"}]}