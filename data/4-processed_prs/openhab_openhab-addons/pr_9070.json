{"pr_number": 9070, "pr_title": "[caddx] Fixed wrongly handled discovery, off by 1 errors", "pr_createdAt": "2020-11-19T08:53:16Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9070", "timeline": [{"oid": "4aa6303a44a51ef02c00f7ec7d1bb497d956fda4", "url": "https://github.com/openhab/openhab-addons/commit/4aa6303a44a51ef02c00f7ec7d1bb497d956fda4", "message": "Corrected caddx discovery bug\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-11-14T16:21:59Z", "type": "commit"}, {"oid": "7f269e74803fbf78c8915f69228e8f81e456a555", "url": "https://github.com/openhab/openhab-addons/commit/7f269e74803fbf78c8915f69228e8f81e456a555", "message": "Changed refresh logic for the things\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-11-14T16:21:59Z", "type": "commit"}, {"oid": "886fa634c07354518e12955028b25583628291ef", "url": "https://github.com/openhab/openhab-addons/commit/886fa634c07354518e12955028b25583628291ef", "message": "Code cleanup\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-11-14T16:21:59Z", "type": "commit"}, {"oid": "457ccfab80b2ba27accf26e89c9ef1f215874998", "url": "https://github.com/openhab/openhab-addons/commit/457ccfab80b2ba27accf26e89c9ef1f215874998", "message": "Corrected off by one errors\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-11-14T16:21:59Z", "type": "commit"}, {"oid": "848ed65bd3e7d68cc6246fc7284bd0f89354282b", "url": "https://github.com/openhab/openhab-addons/commit/848ed65bd3e7d68cc6246fc7284bd0f89354282b", "message": "Added tests for the message parsing\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-11-14T16:21:59Z", "type": "commit"}, {"oid": "06c7be32f921711b7eb1db7bb9aa44782d170e2b", "url": "https://github.com/openhab/openhab-addons/commit/06c7be32f921711b7eb1db7bb9aa44782d170e2b", "message": "Changed new Date().getTime to System.currentTimeMillis()\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>", "committedDate": "2020-11-18T07:13:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MjI2MA==", "url": "https://github.com/openhab/openhab-addons/pull/9070#discussion_r529782260", "bodyText": "You could've used ExpiringCache here. Next time...", "author": "fwolter", "createdAt": "2020-11-24T18:14:26Z", "path": "bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerPanel.java", "diffHunk": "@@ -77,17 +73,19 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         }\n \n         if (command instanceof RefreshType) {\n-            if (CaddxBindingConstants.PANEL_FIRMWARE_VERSION.equals(channelUID.getId())) {\n-                cmd = CaddxBindingConstants.PANEL_INTERFACE_CONFIGURATION_REQUEST;\n-                data = \"\";\n-            } else if (CaddxBindingConstants.PANEL_LOG_MESSAGE_N_0.equals(channelUID.getId())) {\n+            if (CaddxBindingConstants.PANEL_LOG_MESSAGE_N_0.equals(channelUID.getId())) {\n                 cmd = CaddxBindingConstants.PANEL_SYSTEM_STATUS_REQUEST;\n                 data = \"\";\n+            } else if (System.currentTimeMillis() - lastRefreshTime > 2000) {\n+                // Refresh only if 2 seconds have passed from the last refresh\n+                cmd = CaddxBindingConstants.PANEL_INTERFACE_CONFIGURATION_REQUEST;\n+                data = \"\";", "originalCommit": "06c7be32f921711b7eb1db7bb9aa44782d170e2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NDE2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9070#discussion_r529784167", "bodyText": "The BufferedReader and InputStreamReader should also be part of the try. Can you file a follow-up PR, as the 3.x PR is already merged?", "author": "fwolter", "createdAt": "2020-11-24T18:17:30Z", "path": "bundles/org.openhab.binding.caddx/src/test/java/org/openhab/binding/caddx/internal/CaddxMessageReaderUtil.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.caddx.internal;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.util.HexUtils;\n+\n+/**\n+ * Util class to read test input messages.\n+ *\n+ * @author Georgios Moutsos - Initial contribution\n+ */\n+@NonNullByDefault\n+public final class CaddxMessageReaderUtil {\n+    private static final String MESSAGE_EXT = \".msg\";\n+\n+    private CaddxMessageReaderUtil() {\n+        // Util class\n+    }\n+\n+    /**\n+     * Reads the raw bytes of the message given the file relative to this package and returns the objects.\n+     *\n+     * @param messageName name of the telegram file to read\n+     * @return The raw bytes of a telegram\n+     */\n+    public static byte[] readRawMessage(String messageName) {\n+        try (InputStream is = CaddxMessageReaderUtil.class.getResourceAsStream(messageName + MESSAGE_EXT)) {\n+            String hexString = new BufferedReader(new InputStreamReader(is)).lines().collect(Collectors.joining(\"\\n\"));", "originalCommit": "06c7be32f921711b7eb1db7bb9aa44782d170e2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwNTIwNw==", "url": "https://github.com/openhab/openhab-addons/pull/9070#discussion_r529805207", "bodyText": "yes will do.", "author": "jossuar", "createdAt": "2020-11-24T18:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NDE2Nw=="}], "type": "inlineReview"}]}