{"pr_number": 8458, "pr_title": "[max] cleanup several warnings", "pr_createdAt": "2020-09-11T21:11:15Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8458", "timeline": [{"oid": "aad8caf30b9eac07ebd33dc34f4f42ba5ca6f679", "url": "https://github.com/openhab/openhab-addons/commit/aad8caf30b9eac07ebd33dc34f4f42ba5ca6f679", "message": "[max] cleanup several warnings\n\n* cleared many warnings mainly notnullbydefault\n* replace apache base64\n\nnote: decodebase64 still pending as results differ from util.base64\n\nSigned-off-by: Marcel Verpaalen marcel@verpaalen.com", "committedDate": "2020-09-11T21:06:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM4OTQxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487389415", "bodyText": "What about using constructor injection for this service implementation and omit @Nullable at all but make it final?", "author": "cweitkamp", "createdAt": "2020-09-12T09:19:12Z", "path": "bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/MaxConsoleCommandExtension.java", "diffHunk": "@@ -37,12 +38,13 @@\n  * @author Marcel Verpaalen - Initial contribution\n  */\n @Component(service = ConsoleCommandExtension.class)\n+@NonNullByDefault\n public class MaxConsoleCommandExtension extends AbstractConsoleCommandExtension {\n \n     private static final String SUBCMD_BACKUP = \"backup\";\n     private static final String SUBCMD_REBOOT = \"reboot\";\n \n-    private ThingRegistry thingRegistry;\n+    private @Nullable ThingRegistry thingRegistry;", "originalCommit": "aad8caf30b9eac07ebd33dc34f4f42ba5ca6f679", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQxODU1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487418555", "bodyText": "yes, that would be an improvement.\nDone", "author": "marcelrv", "createdAt": "2020-09-12T15:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM4OTQxNQ=="}], "type": "inlineReview"}, {"oid": "9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "url": "https://github.com/openhab/openhab-addons/commit/9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "message": "[max] improve MaxConsoleCommandExtension with reference\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-09-12T15:06:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjI2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487516267", "bodyText": "Can you please check for usage of org.apache.commons.net.util.Base64 in the tests too?", "author": "cweitkamp", "createdAt": "2020-09-13T11:15:53Z", "path": "bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/message/CMessage.java", "diffHunk": "@@ -26,6 +26,7 @@\n \n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.net.util.Base64;", "originalCommit": "9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUyNDQ3MA==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487524470", "bodyText": "This is because my note: decodebase64 still pending as output results differ from util.base64 (apache decoder is more lenient)\nSpend all ready quite some time on this, but I have not yet found a way to have regular decoder accept all strings.\nHence this pr only has the encoding instances replaced.", "author": "marcelrv", "createdAt": "2020-09-13T12:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUyNTI2OA==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487525268", "bodyText": "Note.. I have also read into thre RFC for base64. The RFC is bit ' sloppy' wrt how the ending is defined. The language is ' may add ' some specific ending.\nseems the decoding in java.util.base64 implementation is not allowing this specific ending, implementing it in a strict way and gives an error.", "author": "marcelrv", "createdAt": "2020-09-13T12:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDI2Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487570263", "bodyText": "darn... wasted 2 evenings trying to understand the differences in the implementation, to now find out the testcode in TCommandTest.java was having a bug.", "author": "marcelrv", "createdAt": "2020-09-13T19:53:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjI2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNTA4MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487835081", "bodyText": "I am glad you found the bug and with it a solution for org.apache.commons replacement.", "author": "cweitkamp", "createdAt": "2020-09-14T11:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjI5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487516292", "bodyText": "see above", "author": "cweitkamp", "createdAt": "2020-09-13T11:16:14Z", "path": "bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/message/LMessage.java", "diffHunk": "@@ -18,6 +18,7 @@\n import java.util.List;\n \n import org.apache.commons.net.util.Base64;", "originalCommit": "9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjMyNA==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487516324", "bodyText": "see above", "author": "cweitkamp", "createdAt": "2020-09-13T11:16:35Z", "path": "bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/message/MMessage.java", "diffHunk": "@@ -17,6 +17,7 @@\n import java.util.List;\n \n import org.apache.commons.net.util.Base64;", "originalCommit": "9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjM1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487516356", "bodyText": "see above", "author": "cweitkamp", "createdAt": "2020-09-13T11:16:47Z", "path": "bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/message/NMessage.java", "diffHunk": "@@ -15,6 +15,8 @@\n import java.nio.charset.StandardCharsets;\n \n import org.apache.commons.net.util.Base64;", "originalCommit": "9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjM3OA==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487516378", "bodyText": "see above", "author": "cweitkamp", "createdAt": "2020-09-13T11:16:57Z", "path": "bundles/org.openhab.binding.max/src/test/java/org/openhab/binding/max/internal/command/SCommandTest.java", "diffHunk": "@@ -15,6 +15,7 @@\n import static org.junit.Assert.assertEquals;\n \n import org.apache.commons.net.util.Base64;", "originalCommit": "9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUxNjM4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487516383", "bodyText": "see above", "author": "cweitkamp", "createdAt": "2020-09-13T11:17:04Z", "path": "bundles/org.openhab.binding.max/src/test/java/org/openhab/binding/max/internal/command/TCommandTest.java", "diffHunk": "@@ -15,6 +15,7 @@\n import static org.junit.Assert.assertEquals;\n \n import org.apache.commons.net.util.Base64;", "originalCommit": "9ec84d654dbbe73734d6fe7cc82cd398e36c4ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d05e7c37b32a670529329c5f922a1e88dbc7bd3c", "url": "https://github.com/openhab/openhab-addons/commit/d05e7c37b32a670529329c5f922a1e88dbc7bd3c", "message": "[max] remove remaining org.apache.commons.net.util.Base64\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-09-13T19:51:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNDQ2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r487834467", "bodyText": "Do we have to trim here too? Similar to line 45?", "author": "cweitkamp", "createdAt": "2020-09-14T11:15:46Z", "path": "bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/message/LMessage.java", "diffHunk": "@@ -55,7 +58,7 @@ public LMessage(String raw) {\n     }\n \n     public Collection<? extends Device> updateDevices(List<Device> devices, List<DeviceConfiguration> configurations) {\n-        byte[] decodedRawMessage = Base64.decodeBase64(getPayload().getBytes(StandardCharsets.UTF_8));\n+        byte[] decodedRawMessage = Base64.getDecoder().decode(getPayload().getBytes(StandardCharsets.UTF_8));", "originalCommit": "d05e7c37b32a670529329c5f922a1e88dbc7bd3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIzNzgxNw==", "url": "https://github.com/openhab/openhab-addons/pull/8458#discussion_r488237817", "bodyText": "it worked in my testing, but for safety I'll add it anyway.", "author": "marcelrv", "createdAt": "2020-09-14T21:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNDQ2Nw=="}], "type": "inlineReview"}, {"oid": "d1aebdaf049c86ed7fa320e2878687ecf51537c2", "url": "https://github.com/openhab/openhab-addons/commit/d1aebdaf049c86ed7fa320e2878687ecf51537c2", "message": "[max] update based on review comments\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-09-14T21:48:50Z", "type": "commit"}]}