{"pr_number": 7280, "pr_title": "Use diamond operator and loose coupling", "pr_createdAt": "2020-04-03T23:34:07Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7280", "timeline": [{"oid": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "url": "https://github.com/openhab/openhab-addons/commit/8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "message": "Use diamond operator and loose coupling\n\nUses the diamond operator where ever possible.\nAlso fixes many tight coupling issues by using interfaces instead of actual implementations.\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-03T23:32:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM4OTM4NA==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403389384", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<Short, Integer[]> cachedSensorPowerValues = Collections.synchronizedMap(new HashMap<>());\n          \n          \n            \n                private final Map<Short, Integer[]> cachedSensorPowerValues = new ConcurrentHashMap<>();", "author": "cpmeister", "createdAt": "2020-04-03T23:58:58Z", "path": "bundles/org.openhab.binding.digitalstrom/src/main/java/org/openhab/binding/digitalstrom/internal/lib/structure/devices/impl/DeviceImpl.java", "diffHunk": "@@ -137,8 +133,7 @@\n      * the key is the output value and the value is an Integer array for the sensor values (0 = active power, 1 =\n      * output current, 2 = power consumption, 3 = output current high)\n      */\n-    private final Map<Short, Integer[]> cachedSensorPowerValues = Collections\n-            .synchronizedMap(new HashMap<Short, Integer[]>());\n+    private final Map<Short, Integer[]> cachedSensorPowerValues = Collections.synchronizedMap(new HashMap<>());", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM4OTYyNA==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403389624", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<Short, DeviceSceneSpec> sceneConfigMap = Collections.synchronizedMap(new HashMap<>());\n          \n          \n            \n                private final Map<Short, DeviceSceneSpec> sceneConfigMap = new ConcurrentHashMap<>();", "author": "cpmeister", "createdAt": "2020-04-04T00:00:05Z", "path": "bundles/org.openhab.binding.digitalstrom/src/main/java/org/openhab/binding/digitalstrom/internal/lib/structure/devices/impl/DeviceImpl.java", "diffHunk": "@@ -105,13 +103,11 @@\n     private short slatAngleBeforeSceneCall = 0;\n     private boolean lastCallWasUndo = false;\n \n-    private final Map<Short, DeviceSceneSpec> sceneConfigMap = Collections\n-            .synchronizedMap(new HashMap<Short, DeviceSceneSpec>());\n-    private final Map<Short, Integer[]> sceneOutputMap = Collections.synchronizedMap(new HashMap<Short, Integer[]>());\n+    private final Map<Short, DeviceSceneSpec> sceneConfigMap = Collections.synchronizedMap(new HashMap<>());", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM4OTg0Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403389842", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<Short, Integer[]> sceneOutputMap = Collections.synchronizedMap(new HashMap<>());\n          \n          \n            \n                private final Map<Short, Integer[]> sceneOutputMap = new ConcurrentHashMap();", "author": "cpmeister", "createdAt": "2020-04-04T00:00:51Z", "path": "bundles/org.openhab.binding.digitalstrom/src/main/java/org/openhab/binding/digitalstrom/internal/lib/structure/devices/impl/DeviceImpl.java", "diffHunk": "@@ -105,13 +103,11 @@\n     private short slatAngleBeforeSceneCall = 0;\n     private boolean lastCallWasUndo = false;\n \n-    private final Map<Short, DeviceSceneSpec> sceneConfigMap = Collections\n-            .synchronizedMap(new HashMap<Short, DeviceSceneSpec>());\n-    private final Map<Short, Integer[]> sceneOutputMap = Collections.synchronizedMap(new HashMap<Short, Integer[]>());\n+    private final Map<Short, DeviceSceneSpec> sceneConfigMap = Collections.synchronizedMap(new HashMap<>());\n+    private final Map<Short, Integer[]> sceneOutputMap = Collections.synchronizedMap(new HashMap<>());", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MDA0NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403390045", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final List<DeviceSensorValue> deviceSensorValues = Collections.synchronizedList(new ArrayList<>());\n          \n          \n            \n                private final List<DeviceBinaryInput> deviceBinaryInputs = Collections.synchronizedList(new ArrayList<>());\n          \n          \n            \n                private final List<DeviceSensorValue> deviceSensorValues = new CopyOnWriteArrayList<>();\n          \n          \n            \n                private final List<DeviceBinaryInput> deviceBinaryInputs = new CopyOnWriteArrayList<>();", "author": "cpmeister", "createdAt": "2020-04-04T00:01:50Z", "path": "bundles/org.openhab.binding.digitalstrom/src/main/java/org/openhab/binding/digitalstrom/internal/lib/structure/devices/impl/DeviceImpl.java", "diffHunk": "@@ -90,12 +90,10 @@\n     private final int maxSlatPosition = DeviceConstants.MAX_ROLLERSHUTTER;\n     private final int minSlatPosition = DeviceConstants.MIN_ROLLERSHUTTER;\n \n-    private final List<DeviceSensorValue> deviceSensorValues = Collections\n-            .synchronizedList(new ArrayList<DeviceSensorValue>());\n-    private final List<DeviceBinaryInput> deviceBinaryInputs = Collections\n-            .synchronizedList(new ArrayList<DeviceBinaryInput>());\n-    private final List<SensorEnum> devicePowerSensorTypes = new ArrayList<SensorEnum>();\n-    private final List<SensorEnum> deviceClimateSensorTypes = new ArrayList<SensorEnum>();\n+    private final List<DeviceSensorValue> deviceSensorValues = Collections.synchronizedList(new ArrayList<>());\n+    private final List<DeviceBinaryInput> deviceBinaryInputs = Collections.synchronizedList(new ArrayList<>());", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MjU2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403442566", "bodyText": "Yes those collection changes would also be a nice improvement! For this PR I didn't want to focus on such changes. Though my fingers were sometimes itching especially when seeing outdated types like Vector.", "author": "wborn", "createdAt": "2020-04-04T08:24:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MDA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3NjM3OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403476379", "bodyText": "Yep, I saw those too, but definitely out of scope of this PR.", "author": "cpmeister", "createdAt": "2020-04-04T14:28:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MDA0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MzUwNw==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403393507", "bodyText": "I'm not sure this is correct.", "author": "cpmeister", "createdAt": "2020-04-04T00:18:48Z", "path": "bundles/org.openhab.binding.mihome/src/main/java/org/openhab/binding/mihome/internal/socket/XiaomiBridgeSocket.java", "diffHunk": "@@ -42,7 +42,7 @@ public XiaomiBridgeSocket(int port) {\n      */\n     @Override\n     synchronized DatagramSocket setupSocket() {\n-        if (getOpenSockets().contains(getPort())) {\n+        if (getOpenSockets().containsValue(getPort())) {", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0NDQ3NA==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403444474", "bodyText": "It should be equivalent! Because of the loose coupling getOpenSockets() now returns a Map instead of a ConcurrentHashMap. The contains method only exists on the ConcurrentHashMap but according to the JavaDocs it is considered legacy and calls containsValue:\n    // Hashtable legacy methods\n\n    /**\n     * Tests if some key maps into the specified value in this table.\n     *\n     * <p>Note that this method is identical in functionality to\n     * {@link #containsValue(Object)}, and exists solely to ensure\n     * full compatibility with class {@link java.util.Hashtable},\n     * which supported this method prior to introduction of the\n     * Java Collections Framework.\n     *\n     * @param  value a value to search for\n     * @return {@code true} if and only if some key maps to the\n     *         {@code value} argument in this table as\n     *         determined by the {@code equals} method;\n     *         {@code false} otherwise\n     * @throws NullPointerException if the specified value is null\n     */\n    public boolean contains(Object value) {\n        return containsValue(value);\n    }\nThough if I now look a the code in Eclipse it shows a warning:\nUnlikely argument type int for containsValue(Object) on a Map<Integer,DatagramSocket>\nSo I think the original code was already flawed because the Map is of type:\n    private static Map<Integer, DatagramSocket> openSockets = new ConcurrentHashMap<>();\n\nSo I'll change it to use containsKey here instead.", "author": "wborn", "createdAt": "2020-04-04T08:46:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5MzUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NDI5MA==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403394290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<Integer, CacheObject> stateMap = Collections.synchronizedMap(new HashMap<>());\n          \n          \n            \n                private final Map<Integer, CacheObject> stateMap = new ConcurrentHashMap<>();", "author": "cpmeister", "createdAt": "2020-04-04T00:23:02Z", "path": "bundles/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/internal/handler/NibeHeatPumpHandler.java", "diffHunk": "@@ -57,7 +72,7 @@\n     private final PumpModel pumpModel;\n     private final List<Integer> itemsToPoll = Collections.synchronizedList(new ArrayList<>());\n     private final List<Integer> itemsToEnableWrite = new ArrayList<>();\n-    private final Map<Integer, CacheObject> stateMap = Collections.synchronizedMap(new HashMap<Integer, CacheObject>());\n+    private final Map<Integer, CacheObject> stateMap = Collections.synchronizedMap(new HashMap<>());", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NTU0OA==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403395548", "bodyText": "I don't know how to feel about changing all the formatting of the javadocs in this file. It looks like the alignments were very intentional for human readability.", "author": "cpmeister", "createdAt": "2020-04-04T00:29:22Z", "path": "bundles/org.openhab.binding.powermax/src/main/java/org/openhab/binding/powermax/internal/message/PowermaxCommManager.java", "diffHunk": "@@ -95,10 +95,10 @@\n     /**\n      * Constructor for Serial Connection\n      *\n-     * @param sPort             the serial port name\n-     * @param panelType         the panel type to be used when in standard mode\n+     * @param sPort the serial port name\n+     * @param panelType the panel type to be used when in standard mode\n      * @param forceStandardMode true to force the standard mode rather than trying using the Powerlink mode\n-     * @param autoSyncTime      true for automatic sync time\n+     * @param autoSyncTime true for automatic sync time", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MzA0OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403443049", "bodyText": "There was once a bug (eclipse-archived/smarthome#6424) where the Eclipse autoformatter didn't use the proper alignment. I've also submitted code that was formatted wrongly this way by the autoformatter. For a nicely formatted view of a Javadoc you can hover over it.", "author": "wborn", "createdAt": "2020-04-04T08:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NTU0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NjA5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403396097", "bodyText": "I don't get it, why is it that you like static star imports but hate regular star imports?", "author": "cpmeister", "createdAt": "2020-04-04T00:32:58Z", "path": "bundles/org.openhab.binding.somfytahoma/src/main/java/org/openhab/binding/somfytahoma/internal/SomfyTahomaHandlerFactory.java", "diffHunk": "@@ -31,7 +30,40 @@\n import org.eclipse.smarthome.core.thing.binding.ThingHandlerFactory;\n import org.eclipse.smarthome.io.net.http.HttpClientFactory;\n import org.openhab.binding.somfytahoma.internal.discovery.SomfyTahomaItemDiscoveryService;\n-import org.openhab.binding.somfytahoma.internal.handler.*;", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0MzE5MA==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403443190", "bodyText": "It's just the autosave actions. I didn't spend any time on changing imports.", "author": "wborn", "createdAt": "2020-04-04T08:32:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NjA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NjY0Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403396646", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private List<DeviceStatusListener> deviceStatusListeners = new Vector<>();\n          \n          \n            \n                private List<DeviceStatusListener> deviceStatusListeners = new CopyOnWriteArrayList<>();", "author": "cpmeister", "createdAt": "2020-04-04T00:36:07Z", "path": "bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/live/TelldusLiveBridgeHandler.java", "diffHunk": "@@ -57,7 +57,7 @@\n     private TellstickNetDevices deviceList = null;\n     private TellstickNetSensors sensorList = null;\n     private TelldusLiveDeviceController controller = new TelldusLiveDeviceController();\n-    private List<DeviceStatusListener> deviceStatusListeners = new Vector<DeviceStatusListener>();\n+    private List<DeviceStatusListener> deviceStatusListeners = new Vector<>();", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5Njg1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403396851", "bodyText": "This shouldn't have been modified", "author": "cpmeister", "createdAt": "2020-04-04T00:37:15Z", "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -387,15 +386,16 @@ public void onBinary(InputStream in) {\n                         return;\n                     }\n                     // COMMAND_READ_DATA (250)\n-                    /* Read data command is not implemented, response check is ready for future implementation\n-                    if ((((iDataLength - 1) % 2) != 0) || (iDataLength < 5)) {\n-                        logger.debug(\"Response corrupted, data length is wrong\");\n-                        return;\n-                    }\n-                    // number of data pairs (address, value) = (iDataLength - 3) / 2\n-                    // First data pair (address, value) is in positions 2 and 3\n-                    // (address, value) pairs could be put into array or hashmap\n-                    */", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ0ODU0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403448543", "bodyText": "I have instructed the formatter of this.", "author": "wborn", "createdAt": "2020-04-04T09:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5Njg1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NzM3Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403397377", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Map<String, String> stateMap = Collections.synchronizedMap(new HashMap<>());\n          \n          \n            \n                private Map<String, String> stateMap = new ConcurrentHashMap<>();", "author": "cpmeister", "createdAt": "2020-04-04T00:40:14Z", "path": "bundles/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/handler/WemoDimmerHandler.java", "diffHunk": "@@ -58,8 +58,8 @@\n \n     private final Logger logger = LoggerFactory.getLogger(WemoDimmerHandler.class);\n     public final static Set<ThingTypeUID> SUPPORTED_THING_TYPES = Collections.singleton(THING_TYPE_DIMMER);\n-    private Map<String, Boolean> subscriptionState = new HashMap<String, Boolean>();\n-    private Map<String, String> stateMap = Collections.synchronizedMap(new HashMap<String, String>());\n+    private Map<String, Boolean> subscriptionState = new HashMap<>();\n+    private Map<String, String> stateMap = Collections.synchronizedMap(new HashMap<>());", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NzQzOA==", "url": "https://github.com/openhab/openhab-addons/pull/7280#discussion_r403397438", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<String, String> stateMap = Collections.synchronizedMap(new HashMap<>());\n          \n          \n            \n                private final Map<String, String> stateMap = new ConcurrentHashMap<>();", "author": "cpmeister", "createdAt": "2020-04-04T00:40:38Z", "path": "bundles/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/handler/WemoHandler.java", "diffHunk": "@@ -74,9 +74,9 @@\n             .of(THING_TYPE_SOCKET, THING_TYPE_INSIGHT, THING_TYPE_LIGHTSWITCH, THING_TYPE_MOTION)\n             .collect(Collectors.toSet());\n \n-    private Map<String, Boolean> subscriptionState = new HashMap<String, Boolean>();\n+    private Map<String, Boolean> subscriptionState = new HashMap<>();\n \n-    private final Map<String, String> stateMap = Collections.synchronizedMap(new HashMap<String, String>());\n+    private final Map<String, String> stateMap = Collections.synchronizedMap(new HashMap<>());", "originalCommit": "8b7a954f3bd9ca5bd1d5e9ce3e6c2a8cda0bfd4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2f5cba87be7d87d170ba7a5fde8197cd90f3d2dd", "url": "https://github.com/openhab/openhab-addons/commit/2f5cba87be7d87d170ba7a5fde8197cd90f3d2dd", "message": "Fix bug in XiaomiBridgeSocket.setupSocket\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-04T09:24:11Z", "type": "commit"}, {"oid": "2b0a52b3efbab973b15599b43479c5057668d42f", "url": "https://github.com/openhab/openhab-addons/commit/2b0a52b3efbab973b15599b43479c5057668d42f", "message": "Add instructions for formatter\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-04T09:29:55Z", "type": "commit"}]}