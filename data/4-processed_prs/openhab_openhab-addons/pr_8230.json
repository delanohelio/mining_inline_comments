{"pr_number": 8230, "pr_title": "[astro] Refactoring eclipse handling by moon and sun", "pr_createdAt": "2020-07-30T14:55:04Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8230", "timeline": [{"oid": "ab6580ff029e4f6e86c48358a0a64bbe9a4c8d0c", "url": "https://github.com/openhab/openhab-addons/commit/ab6580ff029e4f6e86c48358a0a64bbe9a4c8d0c", "message": "Adressing issue #8042 and refactoring eclipse handling by moon and sun\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-07-30T14:49:06Z", "type": "commit"}, {"oid": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "url": "https://github.com/openhab/openhab-addons/commit/0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "message": "Correcting SAT error and a bit of org.apache.commons removal.\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-07-31T08:18:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ4ODg1OA==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477488858", "bodyText": "Please add @NonNullByDefault", "author": "cpmeister", "createdAt": "2020-08-26T18:03:58Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/model/EclipseKind.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.astro.internal.model;\n+\n+/**\n+ * All kind of eclipses.\n+ *\n+ * @author Ga\u00ebl L'hopital - Initial contribution\n+ */\n+public enum EclipseKind {", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ4ODk2OA==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477488968", "bodyText": "Please add @NonNullByDefault", "author": "cpmeister", "createdAt": "2020-08-26T18:04:09Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/model/EclipseType.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.astro.internal.model;\n+\n+/**\n+ * Astro objects susceptible of being eclipsed.\n+ *\n+ * @author Ga\u00ebl L'hopital - Initial contribution\n+ */\n+public enum EclipseType {", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5MTcwOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477491709", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Eclipse(List<EclipseKind> eclipses) {\n          \n          \n            \n                    eclipses.forEach(eclipseKind -> {\n          \n          \n            \n                        entries.put(eclipseKind, new SimpleEntry<>(Calendar.getInstance(), null));\n          \n          \n            \n                    });\n          \n          \n            \n                }\n          \n          \n            \n                public Eclipse(EclipseKind... eclipses) {\n          \n          \n            \n                    for(EclipseKind eclipseKind : eclipses) {\n          \n          \n            \n                        entries.put(eclipseKind, new SimpleEntry<>(Calendar.getInstance(), null));\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nUsing variable arguments would simplify calling this constructor.", "author": "cpmeister", "createdAt": "2020-08-26T18:08:51Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/model/Eclipse.java", "diffHunk": "@@ -12,52 +12,73 @@\n  */\n package org.openhab.binding.astro.internal.model;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n \n-import org.apache.commons.lang.builder.ToStringBuilder;\n-import org.apache.commons.lang.builder.ToStringStyle;\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * Holds eclipse informations.\n  *\n  * @author Gerhard Riegler - Initial contribution\n  */\n+@NonNullByDefault\n public class Eclipse {\n-    private Calendar total;\n-    private Calendar partial;\n+    private final Map<EclipseKind, Entry<Calendar, @Nullable Double>> entries = new HashMap<>();\n \n-    /**\n-     * Returns the date of the next total eclipse.\n-     */\n-    public Calendar getTotal() {\n-        return total;\n+    public Eclipse(List<EclipseKind> eclipses) {\n+        eclipses.forEach(eclipseKind -> {\n+            entries.put(eclipseKind, new SimpleEntry<>(Calendar.getInstance(), null));\n+        });\n+    }", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5MjQyMw==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477492423", "bodyText": "You need to make sure that the map doesn't hold a null value at that key, otherwise you will get a NPE when calling getKey(). The same null check should be done for the other getter methods as well.", "author": "cpmeister", "createdAt": "2020-08-26T18:10:06Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/model/Eclipse.java", "diffHunk": "@@ -12,52 +12,73 @@\n  */\n package org.openhab.binding.astro.internal.model;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n \n-import org.apache.commons.lang.builder.ToStringBuilder;\n-import org.apache.commons.lang.builder.ToStringStyle;\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * Holds eclipse informations.\n  *\n  * @author Gerhard Riegler - Initial contribution\n  */\n+@NonNullByDefault\n public class Eclipse {\n-    private Calendar total;\n-    private Calendar partial;\n+    private final Map<EclipseKind, Entry<Calendar, @Nullable Double>> entries = new HashMap<>();\n \n-    /**\n-     * Returns the date of the next total eclipse.\n-     */\n-    public Calendar getTotal() {\n-        return total;\n+    public Eclipse(List<EclipseKind> eclipses) {\n+        eclipses.forEach(eclipseKind -> {\n+            entries.put(eclipseKind, new SimpleEntry<>(Calendar.getInstance(), null));\n+        });\n+    }\n+\n+    public Set<EclipseKind> getKinds() {\n+        return entries.keySet();\n     }\n \n     /**\n-     * Sets the date of the next total eclipse.\n+     * Returns the date of the next total eclipse.\n      */\n-    public void setTotal(Calendar total) {\n-        this.total = total;\n+    public @Nullable Calendar getTotal() {\n+        return entries.get(EclipseKind.TOTAL).getKey();", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5MjgwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477492805", "bodyText": "The return type should be nullable.", "author": "cpmeister", "createdAt": "2020-08-26T18:10:46Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/model/Eclipse.java", "diffHunk": "@@ -12,52 +12,73 @@\n  */\n package org.openhab.binding.astro.internal.model;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n \n-import org.apache.commons.lang.builder.ToStringBuilder;\n-import org.apache.commons.lang.builder.ToStringStyle;\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * Holds eclipse informations.\n  *\n  * @author Gerhard Riegler - Initial contribution\n  */\n+@NonNullByDefault\n public class Eclipse {\n-    private Calendar total;\n-    private Calendar partial;\n+    private final Map<EclipseKind, Entry<Calendar, @Nullable Double>> entries = new HashMap<>();\n \n-    /**\n-     * Returns the date of the next total eclipse.\n-     */\n-    public Calendar getTotal() {\n-        return total;\n+    public Eclipse(List<EclipseKind> eclipses) {\n+        eclipses.forEach(eclipseKind -> {\n+            entries.put(eclipseKind, new SimpleEntry<>(Calendar.getInstance(), null));\n+        });\n+    }\n+\n+    public Set<EclipseKind> getKinds() {\n+        return entries.keySet();\n     }\n \n     /**\n-     * Sets the date of the next total eclipse.\n+     * Returns the date of the next total eclipse.\n      */\n-    public void setTotal(Calendar total) {\n-        this.total = total;\n+    public @Nullable Calendar getTotal() {\n+        return entries.get(EclipseKind.TOTAL).getKey();\n     }\n \n     /**\n      * Returns the date of the next partial eclipse.\n      */\n-    public Calendar getPartial() {\n-        return partial;\n+    public @Nullable Calendar getPartial() {\n+        return entries.get(EclipseKind.PARTIAL).getKey();\n     }\n \n-    /**\n-     * Sets the date of the next partial eclipse.\n-     */\n-    public void setPartial(Calendar partial) {\n-        this.partial = partial;\n+    public @Nullable Calendar getRing() {\n+        return entries.get(EclipseKind.RING).getKey();\n     }\n \n-    @Override\n-    public String toString() {\n-        return new ToStringBuilder(this, ToStringStyle.SHORT_PREFIX_STYLE)\n-                .append(\"total\", total == null ? null : total.getTime())\n-                .append(\"partial\", partial == null ? null : partial.getTime()).toString();\n+    public @Nullable Double getTotalElevation() {\n+        return entries.get(EclipseKind.TOTAL).getValue();\n     }\n+\n+    public @Nullable Double getPartialElevation() {\n+        return entries.get(EclipseKind.PARTIAL).getValue();\n+    }\n+\n+    public @Nullable Double getRingElevation() {\n+        return entries.get(EclipseKind.RING).getValue();\n+    }\n+\n+    public Calendar getDate(EclipseKind eclipseKind) {", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5Mzk4OA==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477493988", "bodyText": "You should make sure that you are actually catching a parse exception here, for all you know you might be catching a NPE and you wouldn't be able to tell just by looking at your logging statement.", "author": "cpmeister", "createdAt": "2020-08-26T18:12:53Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/util/DateTimeUtils.java", "diffHunk": "@@ -218,20 +217,24 @@ private static Calendar adjustTime(Calendar cal, int minutes) {\n      * Parses a HH:MM string and returns the minutes.\n      */\n     private static int getMinutesFromTime(String configTime) {\n-        String time = StringUtils.trimToNull(configTime);\n-        if (time != null) {\n-            try {\n-                if (!HHMM_PATTERN.matcher(time).matches()) {\n-                    throw new NumberFormatException();\n-                } else {\n-                    int hour = Integer.parseInt(StringUtils.substringBefore(time, \":\"));\n-                    int minutes = Integer.parseInt(StringUtils.substringAfter(time, \":\"));\n-                    return (hour * 60) + minutes;\n+        if (configTime != null) {\n+            String time = configTime.trim();\n+            if (!time.isEmpty()) {\n+                try {\n+                    if (!HHMM_PATTERN.matcher(time).matches()) {\n+                        throw new NumberFormatException();\n+                    } else {\n+                        String[] elements = time.split(\":\");\n+                        int hour = Integer.parseInt(elements[0]);\n+                        int minutes = Integer.parseInt(elements[1]);\n+                        return (hour * 60) + minutes;\n+                    }\n+                } catch (Exception ex) {\n+                    LOGGER.warn(\n+                            \"Can not parse astro channel configuration '{}' to hour and minutes, use pattern hh:mm, ignoring!\",\n+                            time);", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjYxNw==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477496617", "bodyText": "This logic seems to be used in multiple places, can it be refactored into the Eclipse class instead?", "author": "cpmeister", "createdAt": "2020-08-26T18:17:50Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/handler/MoonHandler.java", "diffHunk": "@@ -64,6 +65,16 @@ public void publishPositionalInfo() {\n         Double longitude = thingConfig.longitude;\n         moonCalc.setPositionalInfo(Calendar.getInstance(), latitude != null ? latitude : 0,\n                 longitude != null ? longitude : 0, moon);\n+\n+        Eclipse eclipses = moon.getEclipse();\n+        eclipses.getKinds().forEach(eclipseKind -> {\n+            Calendar eclipseDate = eclipses.getDate(eclipseKind);\n+            Position position = getPositionAt(eclipseDate.toInstant().atZone(timeZoneProvider.getTimeZone()));\n+            if (position != null) {\n+                eclipses.set(eclipseKind, eclipseDate, position);\n+            }\n+        });", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwMTA1OA==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r477501058", "bodyText": "To make the null checks more consistent, you should just make the map value nullable here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Map<EclipseKind, Entry<Calendar, @Nullable Double>> entries = new HashMap<>();\n          \n          \n            \n                private final Map<EclipseKind, @Nullable Entry<Calendar, @Nullable Double>> entries = new HashMap<>();", "author": "cpmeister", "createdAt": "2020-08-26T18:25:53Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/model/Eclipse.java", "diffHunk": "@@ -12,52 +12,73 @@\n  */\n package org.openhab.binding.astro.internal.model;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.Calendar;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n \n-import org.apache.commons.lang.builder.ToStringBuilder;\n-import org.apache.commons.lang.builder.ToStringStyle;\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * Holds eclipse informations.\n  *\n  * @author Gerhard Riegler - Initial contribution\n  */\n+@NonNullByDefault\n public class Eclipse {\n-    private Calendar total;\n-    private Calendar partial;\n+    private final Map<EclipseKind, Entry<Calendar, @Nullable Double>> entries = new HashMap<>();", "originalCommit": "0e4ce004ebfcf8d4d5b07dabe63bfd6e30e1d2e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "369602c19214350bc00dcccad961c467a3b1d8b6", "url": "https://github.com/openhab/openhab-addons/commit/369602c19214350bc00dcccad961c467a3b1d8b6", "message": "Code review corrections\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-08-27T14:22:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5MTQ4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r478591485", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                abstract @Nullable public Position getPositionAt(ZonedDateTime date);\n          \n          \n            \n                public abstract @Nullable Position getPositionAt(ZonedDateTime date);", "author": "cpmeister", "createdAt": "2020-08-27T17:46:33Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/handler/AstroThingHandler.java", "diffHunk": "@@ -347,7 +347,7 @@ public void publishDailyInfo() {\n      */\n     protected abstract Job getDailyJob();\n \n-    protected abstract @Nullable Position getPositionAt(ZonedDateTime date);\n+    abstract @Nullable public Position getPositionAt(ZonedDateTime date);", "originalCommit": "369602c19214350bc00dcccad961c467a3b1d8b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b84a40b578397ab75510b31543715ac8f6e792ea", "url": "https://github.com/openhab/openhab-addons/commit/b84a40b578397ab75510b31543715ac8f6e792ea", "message": "Code review correction #2\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-08-28T07:22:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUzMzIxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r479533215", "bodyText": "This change causes only the first channel to be checked. Is that intentional?", "author": "cpmeister", "createdAt": "2020-08-28T21:03:00Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/handler/AstroThingHandler.java", "diffHunk": "@@ -272,10 +270,8 @@ private void linkedChannelChange(ChannelUID channelUID, int step) {\n      */\n     private boolean isPositionalChannelLinked() {\n         for (Channel channel : getThing().getChannels()) {\n-            if (ArrayUtils.contains(getPositionalChannelIds(), channel.getUID().getId())\n-                    && isLinked(channel.getUID().getId())) {\n-                return true;\n-            }\n+            String id = channel.getUID().getId();\n+            return (Arrays.asList(getPositionalChannelIds()).contains(id) && isLinked(id));", "originalCommit": "b84a40b578397ab75510b31543715ac8f6e792ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk3OTAzMg==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r479979032", "bodyText": "You're right ! Well spotted.", "author": "clinique", "createdAt": "2020-08-31T08:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUzMzIxNQ=="}], "type": "inlineReview"}, {"oid": "de8cbee15cddcfd0ac50375d753fdc270ca1e4ad", "url": "https://github.com/openhab/openhab-addons/commit/de8cbee15cddcfd0ac50375d753fdc270ca1e4ad", "message": "Logic Correction\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-08-31T08:33:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM1NjM4NA==", "url": "https://github.com/openhab/openhab-addons/pull/8230#discussion_r480356384", "bodyText": "I'd prefer if you cached Arrays.asList(getPositionalChannelIds()) in a local variable so that it doesn't create a new array during each iteration of the for loop.", "author": "cpmeister", "createdAt": "2020-08-31T19:38:43Z", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/handler/AstroThingHandler.java", "diffHunk": "@@ -272,8 +270,8 @@ private void linkedChannelChange(ChannelUID channelUID, int step) {\n      */\n     private boolean isPositionalChannelLinked() {\n         for (Channel channel : getThing().getChannels()) {\n-            if (ArrayUtils.contains(getPositionalChannelIds(), channel.getUID().getId())\n-                    && isLinked(channel.getUID().getId())) {\n+            String id = channel.getUID().getId();\n+            if (Arrays.asList(getPositionalChannelIds()).contains(id) && isLinked(id)) {", "originalCommit": "de8cbee15cddcfd0ac50375d753fdc270ca1e4ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b6349b77d4713a80a8feee231aa5267e0ce58156", "url": "https://github.com/openhab/openhab-addons/commit/b6349b77d4713a80a8feee231aa5267e0ce58156", "message": "Enhancement\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-09-01T07:26:06Z", "type": "commit"}]}