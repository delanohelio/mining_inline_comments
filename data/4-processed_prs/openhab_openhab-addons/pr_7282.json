{"pr_number": 7282, "pr_title": "[satel] Action for reading the event log added", "pr_createdAt": "2020-04-04T12:40:44Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7282", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODc2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403468767", "bodyText": "Maybe add a note seomwhere that this requires the mail binding.", "author": "J-N-K", "createdAt": "2020-04-04T13:13:01Z", "path": "bundles/org.openhab.binding.satel/README.md", "diffHunk": "@@ -381,34 +404,29 @@ then\n     ]\n end\n \n-rule \"Send event log start\"\n+rule \"Send event log\"\n when\n     Item Alarms changed to ON\n then\n-    eventLogCounter = 0\n-    eventLogMsgBody = \"\"\n-    EVENT_LOG_PREV.postUpdate(NULL)\n-    EVENT_LOG_IDX.sendCommand(-1)\n-end\n-\n-rule \"Send event log next\"\n-when\n-    Item EVENT_LOG_PREV changed\n-then\n-    if (EVENT_LOG_PREV.state == NULL) {\n-        \n-    } else if (eventLogCounter == 30) {\n-        sendMail(\"my@address.net\", \"Alarm system log\", eventLogMsgBody)\n-        // prevent initiating reading when index item is restored during OH startup\n-        EVENT_LOG_IDX.postUpdate(NULL)\n-    } else {\n-        eventLogMsgBody += \"\\n\" + (EVENT_LOG_TIME.state as DateTimeType).format(\"%1$tF %1$tR\") + \": \" + EVENT_LOG_DESCR.state\n-        if (EVENT_LOG_DET.state != NULL && EVENT_LOG_DET.state != \"\") {\n-            eventLogMsgBody += \" - \" + EVENT_LOG_DET.state\n-        }\n-        eventLogCounter += 1\n-        EVENT_LOG_IDX.sendCommand(EVENT_LOG_PREV.state)\n+    val actions = getActions(\"satel\", \"satel:event-log:home:EventLog\")\n+    if (null === actions) {\n+        logInfo(\"EventLog\", \"Actions not found, check thing ID\")\n+        return\n     }\n+    logInfo(\"EventLog\", \"Start\")\n+    var msgBody = \"\"\n+    var eventIdx = -1\n+    (1..10).forEach[\n+        val eventRec = actions.readEvent(eventIdx)\n+        val details = eventRec.get(\"details\")\n+        msgBody += \"\\n\" + String::format(\"%1$tF %1$tR\", eventRec.get(\"timestamp\")) + \": \" + eventRec.get(\"description\")\n+        if (details != NULL && details != \"\") {\n+             msgBody += \" - \" + details\n+        }\n+        eventIdx = eventRec.get(\"prev_index\")\n+    ]\n+    logInfo(\"EventLog\", \"End\")\n+    getActions(\"mail\",\"mail:smtp:local\").sendMail(\"you@email.net\", \"Event log\", msgBody)", "originalCommit": "132ae73ba4ee419990d06c5145798f84cbcc2413", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3MDg3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403470875", "bodyText": "This is just an example. The purpose of the action is to read single record from the event log. It does not specify what one should do with the result.", "author": "druciak", "createdAt": "2020-04-04T13:35:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3Mjk3MA==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403472970", "bodyText": "True. I was just thinking that someone installs satel, adds this example and runs into an error. Maybe a comment in the line above this one like sending notifications via mail requires the mail binding or something like that would be good.", "author": "J-N-K", "createdAt": "2020-04-04T13:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NDI5OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403494299", "bodyText": "Done.", "author": "druciak", "createdAt": "2020-04-04T17:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODc2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODkyMw==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403468923", "bodyText": "Please use a real name here", "author": "J-N-K", "createdAt": "2020-04-04T13:14:34Z", "path": "bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/handler/SatelEventLogHandler.java", "diffHunk": "@@ -63,6 +67,71 @@\n     private @Nullable ScheduledFuture<?> cacheExpirationJob;\n     private Charset encoding = Charset.defaultCharset();\n \n+    /**\n+     * Represents single record of the event log.\n+     *\n+     * @author kgoworek", "originalCommit": "132ae73ba4ee419990d06c5145798f84cbcc2413", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3MTUyMA==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403471520", "bodyText": "Done.", "author": "druciak", "createdAt": "2020-04-04T13:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODkyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3MDIzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403470239", "bodyText": "The Optional was here before, so ok for me, but I think you gain nothing by using it here. A simple null-check would be sufficient (in fact you are not doing anything other than that here) and produce less overhead.", "author": "J-N-K", "createdAt": "2020-04-04T13:29:02Z", "path": "bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/handler/SatelEventLogHandler.java", "diffHunk": "@@ -192,13 +279,13 @@ private void readEvent(int eventIndex) {\n                             + (readEventCmd.getObject() * 32 + readEventCmd.getUserControlNumber());\n                     Optional<EventDescription> eventDescNext = getEventDescription(readEventCmd.getNextIndex());", "originalCommit": "132ae73ba4ee419990d06c5145798f84cbcc2413", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3MTMwNw==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403471307", "bodyText": "The method is used in other place as well (L205). Here, you're right, it does not make sense to use it.", "author": "druciak", "createdAt": "2020-04-04T13:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3MDIzOQ=="}], "type": "inlineReview"}, {"oid": "3ecc281abfe21f0e0ce2c7f0ce2cbb0604d88104", "url": "https://github.com/openhab/openhab-addons/commit/3ecc281abfe21f0e0ce2c7f0ce2cbb0604d88104", "message": "[satel] Action for reading the event log added\n\nSigned-off-by: Krzysztof Goworek <krzysztof.goworek@gmail.com>", "committedDate": "2020-04-04T13:40:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3Mjg0Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403472846", "bodyText": "Please use a new line for each sentence. They are  concatenated automatically.", "author": "J-N-K", "createdAt": "2020-04-04T13:55:50Z", "path": "bundles/org.openhab.binding.satel/README.md", "diffHunk": "@@ -55,6 +55,8 @@ Example:\n Bridge satel:ethm-1:home [ host=\"192.168.0.2\", refresh=1000, userCode=\"1234\", encryptionKey=\"abcdefgh\" ]\n ```\n \n+**NOTE:** There can be only one client connected to ETHM-1 module. It does not accept new connections if there is already a connection established. In case you have troubles connecting to the system using this module, please make sure there is no other client (for example installed 1.x version of the binding) already connected to it.", "originalCommit": "3ecc281abfe21f0e0ce2c7f0ce2cbb0604d88104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NDI1Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403494252", "bodyText": "Done.", "author": "druciak", "createdAt": "2020-04-04T17:23:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3Mjg0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3Mjg2MA==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403472860", "bodyText": "see above", "author": "J-N-K", "createdAt": "2020-04-04T13:56:01Z", "path": "bundles/org.openhab.binding.satel/README.md", "diffHunk": "@@ -261,6 +267,30 @@ Thing atd-100 KitchenTemp [ id=10, refresh=30 ]\n | device_lobatt | Switch             | Indicates low battery level in the wireless device        |\n | device_nocomm | Switch             | Indicates communication troubles with the wireless device |\n \n+## Rule Actions\n+\n+### readEvent\n+\n+This action allows you to read one record from the event log placed at index given by input parameter. The result of this action is compatible with channels of `event-log` thing and contains following values:", "originalCommit": "3ecc281abfe21f0e0ce2c7f0ce2cbb0604d88104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NDIzMw==", "url": "https://github.com/openhab/openhab-addons/pull/7282#discussion_r403494233", "bodyText": "Done.", "author": "druciak", "createdAt": "2020-04-04T17:23:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3Mjg2MA=="}], "type": "inlineReview"}, {"oid": "025200c741599ade223c1ca3849406a97d814758", "url": "https://github.com/openhab/openhab-addons/commit/025200c741599ade223c1ca3849406a97d814758", "message": "[satel] Action for reading the event log added\n\nSigned-off-by: Krzysztof Goworek <krzysztof.goworek@gmail.com>", "committedDate": "2020-04-04T17:24:13Z", "type": "commit"}, {"oid": "025200c741599ade223c1ca3849406a97d814758", "url": "https://github.com/openhab/openhab-addons/commit/025200c741599ade223c1ca3849406a97d814758", "message": "[satel] Action for reading the event log added\n\nSigned-off-by: Krzysztof Goworek <krzysztof.goworek@gmail.com>", "committedDate": "2020-04-04T17:24:13Z", "type": "forcePushed"}]}