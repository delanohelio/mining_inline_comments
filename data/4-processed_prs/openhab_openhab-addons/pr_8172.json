{"pr_number": 8172, "pr_title": "[e3dc] E3DC Home Power Plant Binding contribution", "pr_createdAt": "2020-07-22T17:25:24Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8172", "timeline": [{"oid": "7904060f9c80ff4a02ea50a13b72aa7b371d45ae", "url": "https://github.com/openhab/openhab-addons/commit/7904060f9c80ff4a02ea50a13b72aa7b371d45ae", "message": "adapt new to new Modbus Interface\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-07-22T21:40:19Z", "type": "forcePushed"}, {"oid": "b02580340ff03a578347972283ec4db08858f86c", "url": "https://github.com/openhab/openhab-addons/commit/b02580340ff03a578347972283ec4db08858f86c", "message": "Remove nested Frames from sitemap\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-07-26T11:08:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NDYzMA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460554630", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. Add your wanted Blocks \n          \n          \n            \n            2. Add your desired Blocks", "author": "fwolter", "createdAt": "2020-07-26T17:46:32Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks ", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5OTUwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r463999506", "bodyText": "changed during modbus rework", "author": "weymann", "createdAt": "2020-08-01T20:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NDYzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NDgyMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460554821", "bodyText": "What's the purpose of the e3dc- prefix? Will there be Things with other prefixes in this binding?", "author": "fwolter", "createdAt": "2020-07-26T17:48:37Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5OTYzOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r463999638", "bodyText": "Due to change to Modbus binding device is named e3dc and Wallbox e3dc-wallbox. No prefixes anymore", "author": "weymann", "createdAt": "2020-08-01T20:56:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NDgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTAwMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460555002", "bodyText": "Can you move the bridge configuration into the Supported Things chapter? You could add a table with parameter name, type, required/optional, description.", "author": "fwolter", "createdAt": "2020-07-26T17:50:30Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5OTcyNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r463999726", "bodyText": "Reorganized", "author": "weymann", "createdAt": "2020-08-01T20:58:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTAwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTE5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460555197", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n          \n          \n            \n            | E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed |", "author": "fwolter", "createdAt": "2020-07-26T17:52:26Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5OTkxMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r463999911", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-01T21:00:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTE5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTUxNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460555514", "bodyText": "If you put each sentence in a separate line, diffs are easier to read. I made two other changes:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n          \n          \n            \n            The E3DC device offers quite an amount of channels.\n          \n          \n            \n            Due to the Block design you can allocate only your desired blocks with a restricted amount of Channels.\n          \n          \n            \n            See each Block which Channels are offered.", "author": "fwolter", "createdAt": "2020-07-26T17:55:40Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5OTk1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r463999951", "bodyText": "changed during modbus rework", "author": "weymann", "createdAt": "2020-08-01T21:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTUxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTk5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460555991", "bodyText": "Aren't these properties, rather than Channels? It seems like they don't change much often. If these are valid for all Things, you could add them in general to all Things types.", "author": "fwolter", "createdAt": "2020-07-26T18:00:34Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n+\n+### E3DC Info Block\n+\n+| Channel Label         | Channel ID | Type   | Description                  |\n+|-----------------------|------------|--------|------------------------------|\n+| Modbus-ID             |modbus-id   |  String | Modbus ID / Magic Byte of E3DC  |\n+| Modbus Firmware       |modbus-firmware| String | Version of Modbus Firmware  |\n+| Supported Registers   |supported-registers| Number | Number of registers supported by Modbus  |\n+| Manufacturer Name     | manufacturer-name  | String | Name of the Device Manufacturer  |\n+| E3DC Model Name       | model-name | String | Name of the E3DC Model  |\n+| E3DC Firmware Release | firmware-release | String | Firmware installed on this particular E3DC Model  |\n+| E3DC Serial Number    | serial-number| String | Serial Number of this particular E3DC Model  |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDA3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000073", "bodyText": "Modbus redesign ofers now 2 things the E3DC Power Plant and Wallbox so the other \"Block Things\" are deleted", "author": "weymann", "createdAt": "2020-08-01T21:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NTk5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjEzMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460556131", "bodyText": "Percent has no unit and its type is thus Dimensionless.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | Autarky               |autarky-channel |  Number:Percent  | Your current Autarky Level    |\n          \n          \n            \n            | Autarky               |autarky-channel |  Number:Dimensionless  | Your current Autarky Level    |", "author": "fwolter", "createdAt": "2020-07-26T18:01:59Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n+\n+### E3DC Info Block\n+\n+| Channel Label         | Channel ID | Type   | Description                  |\n+|-----------------------|------------|--------|------------------------------|\n+| Modbus-ID             |modbus-id   |  String | Modbus ID / Magic Byte of E3DC  |\n+| Modbus Firmware       |modbus-firmware| String | Version of Modbus Firmware  |\n+| Supported Registers   |supported-registers| Number | Number of registers supported by Modbus  |\n+| Manufacturer Name     | manufacturer-name  | String | Name of the Device Manufacturer  |\n+| E3DC Model Name       | model-name | String | Name of the E3DC Model  |\n+| E3DC Firmware Release | firmware-release | String | Firmware installed on this particular E3DC Model  |\n+| E3DC Serial Number    | serial-number| String | Serial Number of this particular E3DC Model  |\n+\n+\n+### E3DC Power Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| PV Output             | pv-power-supply |  Number:Power  | Photovoltaic Power Production    |\n+| Battery Discharge     | battery-power-supply |  Number:Power  | Battery discharges and provides Power    |\n+| Battery Charge        | battery-power-consumption |  Number:Power  | Battery charges and consumes Power    |\n+| Household Consumption | household-power-consumption |  Number:Power  | Household consuming Power    |\n+| Grid Power Consumption| grid-power-consumption |  Number:Power  | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply     | grid-power-supply |  Number:Power  | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply | external-power-supply |  Number:Power  | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption | wallbox-power-consumption |  Number:Power  | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | wallbox-pv-power-consumption |  Number:Power  | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky               |autarky-channel |  Number:Percent  | Your current Autarky Level    |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDI0Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000246", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T21:04:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjU5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460556597", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | String 1 Potential    | string1-dc-voltage |  Number:Volt  | Volt on String 1           |\n          \n          \n            \n            | String 1 Potential    | string1-dc-voltage |  Number:Volt  | Voltage on String 1           |", "author": "fwolter", "createdAt": "2020-07-26T18:07:19Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n+\n+### E3DC Info Block\n+\n+| Channel Label         | Channel ID | Type   | Description                  |\n+|-----------------------|------------|--------|------------------------------|\n+| Modbus-ID             |modbus-id   |  String | Modbus ID / Magic Byte of E3DC  |\n+| Modbus Firmware       |modbus-firmware| String | Version of Modbus Firmware  |\n+| Supported Registers   |supported-registers| Number | Number of registers supported by Modbus  |\n+| Manufacturer Name     | manufacturer-name  | String | Name of the Device Manufacturer  |\n+| E3DC Model Name       | model-name | String | Name of the E3DC Model  |\n+| E3DC Firmware Release | firmware-release | String | Firmware installed on this particular E3DC Model  |\n+| E3DC Serial Number    | serial-number| String | Serial Number of this particular E3DC Model  |\n+\n+\n+### E3DC Power Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| PV Output             | pv-power-supply |  Number:Power  | Photovoltaic Power Production    |\n+| Battery Discharge     | battery-power-supply |  Number:Power  | Battery discharges and provides Power    |\n+| Battery Charge        | battery-power-consumption |  Number:Power  | Battery charges and consumes Power    |\n+| Household Consumption | household-power-consumption |  Number:Power  | Household consuming Power    |\n+| Grid Power Consumption| grid-power-consumption |  Number:Power  | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply     | grid-power-supply |  Number:Power  | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply | external-power-supply |  Number:Power  | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption | wallbox-power-consumption |  Number:Power  | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | wallbox-pv-power-consumption |  Number:Power  | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky               |autarky-channel |  Number:Percent  | Your current Autarky Level    |\n+| Self Consumption       | self-consumption |  Number:Percent  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge | battery-soc |  Number:Percent  | Charge Level of your attached Battery    |\n+\n+### E3DC Wallbox Control Block\n+\n+Some of the Wallbox Settings can be changed. See the Access column if the actual value is Read/Write (RW) or Read Only (RO)\n+\n+| Channel Label         | Channel ID      | Type      | Access | Description                  |\n+|-----------------------|-----------------|-----------|--------|------------------------------|\n+| Wallbox Available     | wb-available    |  Switch | RO | Indicates if the Wallbox is attached. Check your Wallbox ID in offline case  |\n+| Sun Mode              | wb-sunmode |  Switch | RW  | Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging.   |\n+| Wallbox Charging Aborted | wb-charging-aborted |  Switch | RW  | Indicates if Wallbox charging is aborted  |\n+| Wallbox Charging      | wb-charging |  Switch | RO  | Indicates your Wallbox is charging   |\n+| Jack Locked           | wb-jack-locked  |  Switch | RO  | Indicates your Jack is locked   |\n+| Jack Plugged          | wb-jack-plugged |  Switch | RO  | Indicates your Jack is plugged    |\n+| Schuko Socket On      | wb-schuko-on    |  Switch  | RW | If your Wallbox has an additional Schuko Socket it provides state ON or OFF    |\n+| Schuko Socket Plugged | wb-schuko-plugged |  Switch | RO  |If your Wallbox has an additional Schuko Socket it provides plugged state ON or OFF    |\n+| Schuko Socket Locked  | wb-schuko-locked |  Switch | RO  | If your Wallbox has an additional Schuko Socket it provides locked state ON or OFF |\n+| Schuko 16A Relay On   | wb-schuko-relay-16a |  Switch | RO  | Indicates if Schuko 16A Relay is ON     |\n+| 16A Relay On          | wb-relay-16a    |  Switch | RO  | Indicates if 16A Relay is ON     |\n+| 32A Relay On          | wb-relay-32a    |  Switch | RO  | Indicates if 32A Relay is ON    |\n+| 1-Phase Charging      | 1-Phase Active  |  Switch | RW  | Indicates if 1-phase charging is activated. If OFF 3-phase charging is activated    |\n+\n+### E3DC String Details Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| String 1 Potential    | string1-dc-voltage |  Number:Volt  | Volt on String 1           |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDM2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000361", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T21:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjU5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjYyNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460556626", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | String 1 Current      | string1-dc-current |  Number:Ampere  | Ampere on String 1       |\n          \n          \n            \n            | String 1 Current      | string1-dc-current |  Number:Ampere  | Current on String 1       |", "author": "fwolter", "createdAt": "2020-07-26T18:07:31Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n+\n+### E3DC Info Block\n+\n+| Channel Label         | Channel ID | Type   | Description                  |\n+|-----------------------|------------|--------|------------------------------|\n+| Modbus-ID             |modbus-id   |  String | Modbus ID / Magic Byte of E3DC  |\n+| Modbus Firmware       |modbus-firmware| String | Version of Modbus Firmware  |\n+| Supported Registers   |supported-registers| Number | Number of registers supported by Modbus  |\n+| Manufacturer Name     | manufacturer-name  | String | Name of the Device Manufacturer  |\n+| E3DC Model Name       | model-name | String | Name of the E3DC Model  |\n+| E3DC Firmware Release | firmware-release | String | Firmware installed on this particular E3DC Model  |\n+| E3DC Serial Number    | serial-number| String | Serial Number of this particular E3DC Model  |\n+\n+\n+### E3DC Power Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| PV Output             | pv-power-supply |  Number:Power  | Photovoltaic Power Production    |\n+| Battery Discharge     | battery-power-supply |  Number:Power  | Battery discharges and provides Power    |\n+| Battery Charge        | battery-power-consumption |  Number:Power  | Battery charges and consumes Power    |\n+| Household Consumption | household-power-consumption |  Number:Power  | Household consuming Power    |\n+| Grid Power Consumption| grid-power-consumption |  Number:Power  | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply     | grid-power-supply |  Number:Power  | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply | external-power-supply |  Number:Power  | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption | wallbox-power-consumption |  Number:Power  | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | wallbox-pv-power-consumption |  Number:Power  | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky               |autarky-channel |  Number:Percent  | Your current Autarky Level    |\n+| Self Consumption       | self-consumption |  Number:Percent  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge | battery-soc |  Number:Percent  | Charge Level of your attached Battery    |\n+\n+### E3DC Wallbox Control Block\n+\n+Some of the Wallbox Settings can be changed. See the Access column if the actual value is Read/Write (RW) or Read Only (RO)\n+\n+| Channel Label         | Channel ID      | Type      | Access | Description                  |\n+|-----------------------|-----------------|-----------|--------|------------------------------|\n+| Wallbox Available     | wb-available    |  Switch | RO | Indicates if the Wallbox is attached. Check your Wallbox ID in offline case  |\n+| Sun Mode              | wb-sunmode |  Switch | RW  | Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging.   |\n+| Wallbox Charging Aborted | wb-charging-aborted |  Switch | RW  | Indicates if Wallbox charging is aborted  |\n+| Wallbox Charging      | wb-charging |  Switch | RO  | Indicates your Wallbox is charging   |\n+| Jack Locked           | wb-jack-locked  |  Switch | RO  | Indicates your Jack is locked   |\n+| Jack Plugged          | wb-jack-plugged |  Switch | RO  | Indicates your Jack is plugged    |\n+| Schuko Socket On      | wb-schuko-on    |  Switch  | RW | If your Wallbox has an additional Schuko Socket it provides state ON or OFF    |\n+| Schuko Socket Plugged | wb-schuko-plugged |  Switch | RO  |If your Wallbox has an additional Schuko Socket it provides plugged state ON or OFF    |\n+| Schuko Socket Locked  | wb-schuko-locked |  Switch | RO  | If your Wallbox has an additional Schuko Socket it provides locked state ON or OFF |\n+| Schuko 16A Relay On   | wb-schuko-relay-16a |  Switch | RO  | Indicates if Schuko 16A Relay is ON     |\n+| 16A Relay On          | wb-relay-16a    |  Switch | RO  | Indicates if 16A Relay is ON     |\n+| 32A Relay On          | wb-relay-32a    |  Switch | RO  | Indicates if 32A Relay is ON    |\n+| 1-Phase Charging      | 1-Phase Active  |  Switch | RW  | Indicates if 1-phase charging is activated. If OFF 3-phase charging is activated    |\n+\n+### E3DC String Details Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| String 1 Potential    | string1-dc-voltage |  Number:Volt  | Volt on String 1           |\n+| String 2 Potential    | string2-dc-voltage |  Number:Volt  | Volt on String 2           |\n+| String 3 Potential    | string3-dc-voltage |  Number:Volt  | Volt on String 3           |\n+| String 1 Current      | string1-dc-current |  Number:Ampere  | Ampere on String 1       |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDQwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000406", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T21:06:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjY0NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460556645", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | String 1 Power        | string1-dc-output  |  Number:Power   | Watt produced by String 1 |\n          \n          \n            \n            | String 1 Power        | string1-dc-output  |  Number:Power   | Power produced by String 1 |", "author": "fwolter", "createdAt": "2020-07-26T18:07:41Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n+\n+### E3DC Info Block\n+\n+| Channel Label         | Channel ID | Type   | Description                  |\n+|-----------------------|------------|--------|------------------------------|\n+| Modbus-ID             |modbus-id   |  String | Modbus ID / Magic Byte of E3DC  |\n+| Modbus Firmware       |modbus-firmware| String | Version of Modbus Firmware  |\n+| Supported Registers   |supported-registers| Number | Number of registers supported by Modbus  |\n+| Manufacturer Name     | manufacturer-name  | String | Name of the Device Manufacturer  |\n+| E3DC Model Name       | model-name | String | Name of the E3DC Model  |\n+| E3DC Firmware Release | firmware-release | String | Firmware installed on this particular E3DC Model  |\n+| E3DC Serial Number    | serial-number| String | Serial Number of this particular E3DC Model  |\n+\n+\n+### E3DC Power Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| PV Output             | pv-power-supply |  Number:Power  | Photovoltaic Power Production    |\n+| Battery Discharge     | battery-power-supply |  Number:Power  | Battery discharges and provides Power    |\n+| Battery Charge        | battery-power-consumption |  Number:Power  | Battery charges and consumes Power    |\n+| Household Consumption | household-power-consumption |  Number:Power  | Household consuming Power    |\n+| Grid Power Consumption| grid-power-consumption |  Number:Power  | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply     | grid-power-supply |  Number:Power  | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply | external-power-supply |  Number:Power  | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption | wallbox-power-consumption |  Number:Power  | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | wallbox-pv-power-consumption |  Number:Power  | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky               |autarky-channel |  Number:Percent  | Your current Autarky Level    |\n+| Self Consumption       | self-consumption |  Number:Percent  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge | battery-soc |  Number:Percent  | Charge Level of your attached Battery    |\n+\n+### E3DC Wallbox Control Block\n+\n+Some of the Wallbox Settings can be changed. See the Access column if the actual value is Read/Write (RW) or Read Only (RO)\n+\n+| Channel Label         | Channel ID      | Type      | Access | Description                  |\n+|-----------------------|-----------------|-----------|--------|------------------------------|\n+| Wallbox Available     | wb-available    |  Switch | RO | Indicates if the Wallbox is attached. Check your Wallbox ID in offline case  |\n+| Sun Mode              | wb-sunmode |  Switch | RW  | Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging.   |\n+| Wallbox Charging Aborted | wb-charging-aborted |  Switch | RW  | Indicates if Wallbox charging is aborted  |\n+| Wallbox Charging      | wb-charging |  Switch | RO  | Indicates your Wallbox is charging   |\n+| Jack Locked           | wb-jack-locked  |  Switch | RO  | Indicates your Jack is locked   |\n+| Jack Plugged          | wb-jack-plugged |  Switch | RO  | Indicates your Jack is plugged    |\n+| Schuko Socket On      | wb-schuko-on    |  Switch  | RW | If your Wallbox has an additional Schuko Socket it provides state ON or OFF    |\n+| Schuko Socket Plugged | wb-schuko-plugged |  Switch | RO  |If your Wallbox has an additional Schuko Socket it provides plugged state ON or OFF    |\n+| Schuko Socket Locked  | wb-schuko-locked |  Switch | RO  | If your Wallbox has an additional Schuko Socket it provides locked state ON or OFF |\n+| Schuko 16A Relay On   | wb-schuko-relay-16a |  Switch | RO  | Indicates if Schuko 16A Relay is ON     |\n+| 16A Relay On          | wb-relay-16a    |  Switch | RO  | Indicates if 16A Relay is ON     |\n+| 32A Relay On          | wb-relay-32a    |  Switch | RO  | Indicates if 32A Relay is ON    |\n+| 1-Phase Charging      | 1-Phase Active  |  Switch | RW  | Indicates if 1-phase charging is activated. If OFF 3-phase charging is activated    |\n+\n+### E3DC String Details Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| String 1 Potential    | string1-dc-voltage |  Number:Volt  | Volt on String 1           |\n+| String 2 Potential    | string2-dc-voltage |  Number:Volt  | Volt on String 2           |\n+| String 3 Potential    | string3-dc-voltage |  Number:Volt  | Volt on String 3           |\n+| String 1 Current      | string1-dc-current |  Number:Ampere  | Ampere on String 1       |\n+| String 2 Current      | string2-dc-current |  Number:Ampere  | Ampere on String 2       |\n+| String 3 Current      | string3-dc-current |  Number:Ampere  | Ampere on String 3       |\n+| String 1 Power        | string1-dc-output  |  Number:Power   | Watt produced by String 1 |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDQxNw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000417", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T21:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NjY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1Njg4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460556885", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Setup and configured everything the right way? Congratulations, you've now the actual E3DC values on your table. Don't stop and go ahead!\n          \n          \n            \n            Setup and configured everything the right way? Congratulations, you've now the recent E3DC values on your table. Don't stop and go ahead!", "author": "fwolter", "createdAt": "2020-07-26T18:10:22Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n+\n+### E3DC Info Block\n+\n+| Channel Label         | Channel ID | Type   | Description                  |\n+|-----------------------|------------|--------|------------------------------|\n+| Modbus-ID             |modbus-id   |  String | Modbus ID / Magic Byte of E3DC  |\n+| Modbus Firmware       |modbus-firmware| String | Version of Modbus Firmware  |\n+| Supported Registers   |supported-registers| Number | Number of registers supported by Modbus  |\n+| Manufacturer Name     | manufacturer-name  | String | Name of the Device Manufacturer  |\n+| E3DC Model Name       | model-name | String | Name of the E3DC Model  |\n+| E3DC Firmware Release | firmware-release | String | Firmware installed on this particular E3DC Model  |\n+| E3DC Serial Number    | serial-number| String | Serial Number of this particular E3DC Model  |\n+\n+\n+### E3DC Power Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| PV Output             | pv-power-supply |  Number:Power  | Photovoltaic Power Production    |\n+| Battery Discharge     | battery-power-supply |  Number:Power  | Battery discharges and provides Power    |\n+| Battery Charge        | battery-power-consumption |  Number:Power  | Battery charges and consumes Power    |\n+| Household Consumption | household-power-consumption |  Number:Power  | Household consuming Power    |\n+| Grid Power Consumption| grid-power-consumption |  Number:Power  | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply     | grid-power-supply |  Number:Power  | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply | external-power-supply |  Number:Power  | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption | wallbox-power-consumption |  Number:Power  | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | wallbox-pv-power-consumption |  Number:Power  | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky               |autarky-channel |  Number:Percent  | Your current Autarky Level    |\n+| Self Consumption       | self-consumption |  Number:Percent  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge | battery-soc |  Number:Percent  | Charge Level of your attached Battery    |\n+\n+### E3DC Wallbox Control Block\n+\n+Some of the Wallbox Settings can be changed. See the Access column if the actual value is Read/Write (RW) or Read Only (RO)\n+\n+| Channel Label         | Channel ID      | Type      | Access | Description                  |\n+|-----------------------|-----------------|-----------|--------|------------------------------|\n+| Wallbox Available     | wb-available    |  Switch | RO | Indicates if the Wallbox is attached. Check your Wallbox ID in offline case  |\n+| Sun Mode              | wb-sunmode |  Switch | RW  | Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging.   |\n+| Wallbox Charging Aborted | wb-charging-aborted |  Switch | RW  | Indicates if Wallbox charging is aborted  |\n+| Wallbox Charging      | wb-charging |  Switch | RO  | Indicates your Wallbox is charging   |\n+| Jack Locked           | wb-jack-locked  |  Switch | RO  | Indicates your Jack is locked   |\n+| Jack Plugged          | wb-jack-plugged |  Switch | RO  | Indicates your Jack is plugged    |\n+| Schuko Socket On      | wb-schuko-on    |  Switch  | RW | If your Wallbox has an additional Schuko Socket it provides state ON or OFF    |\n+| Schuko Socket Plugged | wb-schuko-plugged |  Switch | RO  |If your Wallbox has an additional Schuko Socket it provides plugged state ON or OFF    |\n+| Schuko Socket Locked  | wb-schuko-locked |  Switch | RO  | If your Wallbox has an additional Schuko Socket it provides locked state ON or OFF |\n+| Schuko 16A Relay On   | wb-schuko-relay-16a |  Switch | RO  | Indicates if Schuko 16A Relay is ON     |\n+| 16A Relay On          | wb-relay-16a    |  Switch | RO  | Indicates if 16A Relay is ON     |\n+| 32A Relay On          | wb-relay-32a    |  Switch | RO  | Indicates if 32A Relay is ON    |\n+| 1-Phase Charging      | 1-Phase Active  |  Switch | RW  | Indicates if 1-phase charging is activated. If OFF 3-phase charging is activated    |\n+\n+### E3DC String Details Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| String 1 Potential    | string1-dc-voltage |  Number:Volt  | Volt on String 1           |\n+| String 2 Potential    | string2-dc-voltage |  Number:Volt  | Volt on String 2           |\n+| String 3 Potential    | string3-dc-voltage |  Number:Volt  | Volt on String 3           |\n+| String 1 Current      | string1-dc-current |  Number:Ampere  | Ampere on String 1       |\n+| String 2 Current      | string2-dc-current |  Number:Ampere  | Ampere on String 2       |\n+| String 3 Current      | string3-dc-current |  Number:Ampere  | Ampere on String 3       |\n+| String 1 Power        | string1-dc-output  |  Number:Power   | Watt produced by String 1 |\n+| String 2 Power        | string2-dc-output  |  Number:Power   | Watt produced by String 2 |\n+| String 3 Power        | string3-dc-output  |  Number:Power   | Watt produced by String 3 |\n+\n+\n+### E3DC EMS Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| Emergency Power Status| emergency-power-status |  String  | Indicates if Emergency Power Supply is possible or not, active or inactive |\n+| Battery Loading Locked | battery-loading-lock |  Switch  | Indicates if Battery Loading is locked           |\n+| Battery Unloading Locked | battery-unloading-lock |  Switch  | Indicates if Battery Unloading is locked |\n+| Emergency Power Possible| emergency-power-possible |  Switch  | Indicates if Emergency Power Supply is possible          |\n+| Loading Based On Weather Prediction Active| weather-predicted-loading |  Switch  | Indicates if Weather Predicted Battery Loading is activated |\n+| Regulation Status Of Max Grid Power Supply| regulation-status |  Switch  | Indicates if Grid Power Supply is regulated or not |\n+| Loading Lock time Active| loading-lock-time |  Switch  | Indicates if Loading Lock Times are set or not |\n+| Unloading Lock time Active| unloading-lock-time |  Switch  |Indicates if Unloading Lock Times are set or not |\n+\n+## Full Example\n+\n+Following example provides the full configuration. If you enter the correct Connection Data, IP Address, Device ID and Port number in the thing configuration you should be fine.\n+\n+### Things\n+\n+```\n+Bridge e3dc:e3dc-device:plant \"E3DC Power Plant\" [ host=\"192.168.178.56\", deviceid=1, port=502, refresh=2000 ] {      \n+     e3dc-info         infoblock           \"E3DC Info Block\"\n+     e3dc-power        powerblock          \"E3DC Power Block\"\n+     e3dc-wallbox      wallboxblock        \"E3DC Wallbox Control Block\"        [wallboxId=0]\n+     e3dc-strings      stringblock         \"E3DC String Details Block\"   \n+     e3dc-emergency    emsblock            \"E3DC EMS Block\"\n+}\n+```\n+\n+### Items\n+\n+```\n+String    E3DC_ModbusId                 \"E3DC Modbus ID\"            (e3dc)      { channel=\"e3dc:e3dc-info:plant:infoblock:modbus-id\" }\n+String    E3DC_ModbusFirmware           \"E3DC Modbus Firmware\"      (e3dc)      { channel=\"e3dc:e3dc-info:plant:infoblock:modbus-firmware\" }\n+Number    E3DC_SupportedRegisters       \"E3DC Supported Registers\"  (e3dc)      { channel=\"e3dc:e3dc-info:plant:infoblock:supported-registers\" }\n+String    E3DC_Manufacturer             \"E3DC Manufacturer\"         (e3dc)      { channel=\"e3dc:e3dc-info:plant:infoblock:manufacturer-name\" }\n+String    E3DC_ModelName                \"E3DC Model\"                (e3dc)      { channel=\"e3dc:e3dc-info:plant:infoblock:model-name\" }\n+String    E3DC_Firmware                 \"E3DC Modbus ID\"            (e3dc)      { channel=\"e3dc:e3dc-info:plant:infoblock:firmware-release\" }\n+String    E3DC_SerialNumber             \"E3DC Modbus ID\"            (e3dc)      { channel=\"e3dc:e3dc-info:plant:infoblock:serial-number\" }\n+\n+Number    E3DC_PVPower                  \"E3DC PV Power\"             (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:pv-power-supply\" }\n+Number    E3DC_BatteryDischarge         \"E3DC Battery Discharge\"    (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:battery-power-supply\" }\n+Number    E3DC_BatteryCharge            \"E3DC Battery Charge\"       (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:battery-power-consumption\" }\n+Number    E3DC_Household                \"E3DC Household Consumption\"    (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:household-power-consumption\" }\n+Number    E3DC_GridConsumption          \"E3DC Grid Consumption\"     (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:grid-power-consumption\" }\n+Number    E3DC_GridSupply               \"E3DC Grid Supply \"         (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:grid-power-supply\" }\n+Number    E3DC_ExternalSupply           \"E3DC External Supply\"      (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:external-power-supply\" }\n+Number    E3DC_WallboxConsumption       \"E3DC Wallbox Consumption\"  (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:wallbox-power-consumption\" }\n+Number    E3DC_WallboxPVConsumption     \"E3DC Wallbox PV Consumption\"   (e3dc)  { channel=\"e3dc:e3dc-power:plant:powerblock:wallbox-pv-power-consumption\" }\n+Number    E3DC_AutarkyLevel             \"E3DC Autarky Level\"        (e3dc)  { channel=\"e3dc:e3dc-power:plant:powerblock:autarky\" }\n+Number    E3DC_SelfConsumptionLevel     \"E3DC Self Consumption Level\"   (e3dc)  { channel=\"e3dc:e3dc-power:plant:powerblock:self-consumption\" }\n+Number    E3DC_BatterySOC               \"E3DC Battery SOC\"          (e3dc,persist)  { channel=\"e3dc:e3dc-power:plant:powerblock:battery-soc\" }\n+\n+Switch    E3DC_WB_Available             \"E3DC WB available\"     (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-available\" }\n+Switch    E3DC_WB_Sunmode               \"E3DC WB Sunmode\"       (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-sunmode\" }\n+Switch    E3DC_WB_ChargingAborted       \"E3DC WB Charging Aborted\"  (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-charging-aborted\" }\n+Switch    E3DC_WB_Charging              \"E3DC WB Charging\"      (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-charging\" }\n+Switch    E3DC_WB_JackLocked            \"E3DC WB Jack Locked\"   (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-jack-locked\" }\n+Switch    E3DC_WB_JackPlugged           \"E3DC WB Jack Plugged\"  (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-jack-plugged\" }\n+Switch    E3DC_WB_SchukoOn              \"E3DC WB Schuko On\"     (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-schuko-on\" }\n+Switch    E3DC_WB_SchukoPlugged         \"E3DC WB Schuko Plugged\"    (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-schuko-plugged\" }\n+Switch    E3DC_WB_SchukoLocked          \"E3DC WB Schuko Locked\" (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-schuko-locked\" }\n+Switch    E3DC_WB_Schuko_Relay16A       \"E3DC WB Schuko 16A Relay\"  (e3dc) { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-schuko-relay-16a\" }\n+Switch    E3DC_WB_Relay16A              \"E3DC WB 16A Relay\"      (e3dc) { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-relay-16a\" }\n+Switch    E3DC_WB_Relay32A              \"E3DC WB 32A Relay\"      (e3dc) { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-relay-32a\" }\n+Switch    E3DC_WB_1PhaseLoading         \"E3DC WB 1-Phase Loading\"   (e3dc)  { channel=\"e3dc:e3dc-wallbox:plant:wallboxblock:wb-1phase\" }\n+\n+Number    E3DC_String1V                 \"E3DC String 1 Volt\"    (e3dc)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string1-dc-voltage\" }\n+Number    E3DC_String2V                 \"E3DC String 2 Volt\"    (e3dc)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string2-dc-voltage\" }\n+Number    E3DC_String3V                 \"E3DC String 3 Volt\"    (e3dc)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string3-dc-voltage\" }\n+Number    E3DC_String1A                 \"E3DC String 1 Ampere\"  (e3dc)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string1-dc-current\" }\n+Number    E3DC_String2A                 \"E3DC String 2 Ampere\"  (e3dc)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string2-dc-current\" }\n+Number    E3DC_String3A                 \"E3DC String 3 Ampere\"  (e3dc)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string3-dc-current\" }\n+Number    E3DC_String1W                 \"E3DC String 1 Watt\"    (e3dc,persist)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string1-dc-output\" }\n+Number    E3DC_String2W                 \"E3DC String 2 Watt\"    (e3dc,persist)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string2-dc-output\" }\n+Number    E3DC_String3W                 \"E3DC String 3 Watt\"    (e3dc,persist)  { channel=\"e3dc:e3dc-strings:plant:stringblock:string3-dc-output\" }\n+\n+String    E3DC_EMS_Status                       \"E3DC EMS Status\"                   (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:emergency-power-status\" }\n+Switch    E3DC_EMS_BatteryLoadingLock           \"E3DC EMS Battery Loading Lock\"     (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:battery-loading-lock\" }\n+Switch    E3DC_EMS_BatteryUnloadingLock         \"E3DC EMS Battery Unloading Lock\"   (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:battery-unloading-lock\" }\n+Switch    E3DC_EMS_EmergencyPowerPossible       \"E3DC EMS Emergency Power possible\" (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:emergency-power-possible\" }\n+Switch    E3DC_EMS_WeatherPredictedLoading      \"E3DC EMS Weather Predicted Loading\" (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:weather-predicted-loading\" }\n+Switch    E3DC_EMS_RegulationStatus             \"E3DC EMS Regulation Status\"        (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:regulation-status\" }\n+Switch    E3DC_EMS_LoadingLockTime              \"E3DC EMS Loading Lock Time\"        (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:loading-lock-time\" }\n+Switch    E3DC_EMS_UnloadingLockTime            \"E3DC EMS Unloading Lock TIme\"      (e3dc)  { channel=\"e3dc:e3dc-emergency:plant:emsblock:unloading-lock-time\" }\n+```\n+\n+### Sitemap\n+\n+```\n+sitemap E3DCBinding label=\"E3DC Binding Sitemap\" {\n+  Frame label=\"Info\" {\n+    Text    item=E3DC_ModbusId                  label=\"Modbus-ID [%s]\"\n+    Text    item=E3DC_ModbusFirmware            label=\"Modbus Firmware [%s]\"\n+    Text    item=E3DC_SupportedRegisters        label=\"Registers [%s]\"\n+    Text    item=E3DC_Manufacturer              label=\"Manufacturer [%s]\"\n+    Text    item=E3DC_ModelName                 label=\"Model Name [%s]\"\n+    Text    item=E3DC_Firmware                  label=\"Firmware [%s]\"\n+    Text    item=E3DC_SerialNumber              label=\"Serial Number[%s]\"\n+  }\n+  \n+    Frame label=\"Power Producer\" {\n+      Text    item=E3DC_PVPower                 label=\"PV Power[%s]\"\n+      Text    item=E3DC_BatteryDischarge        label=\"Battery Discharge [%s]\"\n+      Text    item=E3DC_GridSupply              label=\"Power from Grid [%s]\"\n+      Text    item=E3DC_ExternalSupply          label=\"External Supply [%s]\"\n+    }\n+    Frame label=\"Power Consumer\" {\n+      Text    item=E3DC_Household               label=\"Household [%s]\"\n+      Text    item=E3DC_BatteryCharge           label=\"Battery Charge [%s]\"\n+      Text    item=E3DC_GridConsumption         label=\"Power to Grid [%s]\"\n+      Text    item=E3DC_WallboxConsumption      label=\"Wallbox [%s]\"\n+      Text    item=E3DC_WallboxPVConsumption    label=\"Wallbox PV[%s]\"\n+    }\n+    Frame label=\"Power Measures\" {\n+      Text    item=E3DC_AutarkyLevel            label=\"Autarky [%s %%]\"\n+      Text    item=E3DC_SelfConsumptionLevel    label=\"Self Consumption [%s %%]\"\n+      Text    item=E3DC_BatterySOC              label=\"SOC [%s %%]\"\n+    }\n+  \n+  Frame label=\"Wallbox\" {\n+    Switch    item=E3DC_WB_Available            label=\"Available [%s]\"\n+    Switch    item=E3DC_WB_Sunmode              label=\"Sunmode [%s]\"\n+    Switch    item=E3DC_WB_ChargingAborted      label=\"Charging Aborted[%s]\"\n+    Switch    item=E3DC_WB_Charging             label=\"Charging [%s]\"\n+    Switch    item=E3DC_WB_JackLocked           label=\"Jack locked [%s]\"\n+    Switch    item=E3DC_WB_JackPlugged          label=\"Jack plugged [%s]\"\n+    Switch    item=E3DC_WB_SchukoOn             label=\"Schuko On [%s]\"\n+    Switch    item=E3DC_WB_SchukoPlugged        label=\"Schuko plugged [%s]\"\n+    Switch    item=E3DC_WB_SchukoLocked         label=\"Schuko locked [%s]\"\n+    Switch    item=E3DC_WB_Schuko_Relay16A      label=\"Schuko Relay 16A [%s]\"\n+    Switch    item=E3DC_WB_Relay16A             label=\"Relay 16A [%s]\"\n+    Switch    item=E3DC_WB_Relay32A             label=\"Relay 32A [%s]\"\n+    Switch    item=E3DC_WB_1PhaseLoading        label=\"1-Phase loading [%s]\"\n+  }\n+  \n+    Frame label=\"String 1 Details\" {\n+      Text    item=E3DC_String1V                label=\"Volt [%s]\"\n+      Text    item=E3DC_String1A                label=\"Ampere [%s]\"\n+      Text    item=E3DC_String1W                label=\"Watt [%s]\"\n+    }\n+    Frame label=\"String 2 Details\" {\n+      Text    item=E3DC_String2V                label=\"Volt [%s]\"\n+      Text    item=E3DC_String2A                label=\"Ampere [%s]\"\n+      Text    item=E3DC_String2W                label=\"Watt [%s]\"\n+    }\n+    Frame label=\"String 3 Details\" {\n+      Text    item=E3DC_String3V                label=\"Volt [%s]\"\n+      Text    item=E3DC_String3A                label=\"Ampere [%s]\"\n+      Text    item=E3DC_String3W                label=\"Watt [%s]\"\n+    }\n+  \n+  Frame label=\"EMS\" {\n+    Text      item=E3DC_EMS_Status                  label=\"Status [%s]\"\n+    Switch    item=E3DC_EMS_BatteryLoadingLock      label=\"Batter Loading Lock [%s]\"\n+    Switch    item=E3DC_EMS_BatteryUnloadingLock    label=\"Batter Unloading Lock [%s]\"\n+    Switch    item=E3DC_EMS_EmergencyPowerPossible  label=\"Emergency Power Possible [%s]\"\n+    Switch    item=E3DC_EMS_WeatherPredictedLoading label=\"Weather Predicted Loading [%s]\"\n+    Switch    item=E3DC_EMS_RegulationStatus        label=\"Regulation [%s]\"\n+    Switch    item=E3DC_EMS_LoadingLockTime         label=\"Loading Lock Times [%s]\"\n+    Switch    item=E3DC_EMS_UnloadingLockTime       label=\"Unloading Lock Times [%s]\"\n+  }\n+}\n+```\n+\n+\n+## Going further\n+\n+Setup and configured everything the right way? Congratulations, you've now the actual E3DC values on your table. Don't stop and go ahead!", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDQ4MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000481", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T21:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1Njg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzIyMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460557222", "bodyText": "Did this file found its way accidentally into your binding?", "author": "fwolter", "createdAt": "2020-07-26T18:14:12Z", "path": "bundles/org.openhab.binding.e3dc/src/main/feature/feature.xml-orig", "diffHunk": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDYyMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000623", "bodyText": "Yes, leftover from my tryouts solving modbus bundle dependency. Deleted.", "author": "weymann", "createdAt": "2020-08-01T21:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzIyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzYzMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460557633", "bodyText": "This fixes the compiler warning.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final long MAX_INT32 = new Long(\"4294967296\");\n          \n          \n            \n                private static final long MAX_INT32 = (long) Math.pow(2, Integer.SIZE);", "author": "fwolter", "createdAt": "2020-07-26T18:18:44Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.dto;\n+\n+import java.util.Arrays;\n+import java.util.BitSet;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class DataConverter {\n+    private static final long MAX_INT32 = new Long(\"4294967296\");", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDcwMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000702", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T21:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzYzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzY2OA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460557668", "bodyText": "Can this be removed?", "author": "fwolter", "createdAt": "2020-07-26T18:19:10Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.dto;\n+\n+import java.util.Arrays;\n+import java.util.BitSet;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class DataConverter {\n+    private static final long MAX_INT32 = new Long(\"4294967296\");\n+\n+    public static int getIntValue(byte[] bytes, int start) {\n+        return ((bytes[start] & 0xff) << 8) | (bytes[start + 1] & 0xff);\n+    }\n+\n+    public static long getLongValue(byte[] bytes, int start) {\n+        long value = 0;\n+        for (int i = 0; i < 4; i++) {\n+            value = (value << 8) + (bytes[i] & 0xff);\n+        }\n+        return value;\n+    }\n+\n+    /**\n+     * Conversion done according to E3DC Modbus Specification V1.7\n+     *\n+     * @param bytes - byte array with at least 4 bytes available from start\n+     * @param startIndex - start index for decoding\n+     * @return decoded long value, Long.MIN_VALUE otherwise\n+     */\n+    public static long getInt32Swap(byte[] bytes, int startIndex) {\n+        // LOGGER.info(\"Convert {} {} {} {}\", bytes[start], bytes[start + 1], bytes[start + 2], bytes[start + 3]);", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDc1Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000757", "bodyText": "Sure", "author": "weymann", "createdAt": "2020-08-01T21:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzY2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1Nzc3MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460557770", "bodyText": "Better add the expected encoding to the String constructor.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new String(slice).trim();\n          \n          \n            \n                    return new String(slice, StandardCharsets.US_ASCII).trim();", "author": "fwolter", "createdAt": "2020-07-26T18:20:18Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.dto;\n+\n+import java.util.Arrays;\n+import java.util.BitSet;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class DataConverter {\n+    private static final long MAX_INT32 = new Long(\"4294967296\");\n+\n+    public static int getIntValue(byte[] bytes, int start) {\n+        return ((bytes[start] & 0xff) << 8) | (bytes[start + 1] & 0xff);\n+    }\n+\n+    public static long getLongValue(byte[] bytes, int start) {\n+        long value = 0;\n+        for (int i = 0; i < 4; i++) {\n+            value = (value << 8) + (bytes[i] & 0xff);\n+        }\n+        return value;\n+    }\n+\n+    /**\n+     * Conversion done according to E3DC Modbus Specification V1.7\n+     *\n+     * @param bytes - byte array with at least 4 bytes available from start\n+     * @param startIndex - start index for decoding\n+     * @return decoded long value, Long.MIN_VALUE otherwise\n+     */\n+    public static long getInt32Swap(byte[] bytes, int startIndex) {\n+        // LOGGER.info(\"Convert {} {} {} {}\", bytes[start], bytes[start + 1], bytes[start + 2], bytes[start + 3]);\n+        if (bytes.length - startIndex < 4) {\n+            return Long.MIN_VALUE;\n+        }\n+        long a = getIntValue(bytes, startIndex);\n+        long b = getIntValue(bytes, startIndex + 2);\n+        if (b < 32768) {\n+            return b * 65536 + a;\n+        } else {\n+            return (MAX_INT32 - b * 65536 - a) * -1;\n+        }\n+    }\n+\n+    public static String getString(byte[] bArray, int i) {\n+        byte[] slice = Arrays.copyOfRange(bArray, i, i + 32);\n+        return new String(slice).trim();", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMDg2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464000867", "bodyText": "Ok, fixed.", "author": "weymann", "createdAt": "2020-08-01T21:14:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1Nzc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1Nzg0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460557841", "bodyText": "What's the purpose of this method?", "author": "fwolter", "createdAt": "2020-07-26T18:21:03Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.dto;\n+\n+import java.util.Arrays;\n+import java.util.BitSet;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class DataConverter {\n+    private static final long MAX_INT32 = new Long(\"4294967296\");\n+\n+    public static int getIntValue(byte[] bytes, int start) {\n+        return ((bytes[start] & 0xff) << 8) | (bytes[start + 1] & 0xff);\n+    }\n+\n+    public static long getLongValue(byte[] bytes, int start) {\n+        long value = 0;\n+        for (int i = 0; i < 4; i++) {\n+            value = (value << 8) + (bytes[i] & 0xff);\n+        }\n+        return value;\n+    }\n+\n+    /**\n+     * Conversion done according to E3DC Modbus Specification V1.7\n+     *\n+     * @param bytes - byte array with at least 4 bytes available from start\n+     * @param startIndex - start index for decoding\n+     * @return decoded long value, Long.MIN_VALUE otherwise\n+     */\n+    public static long getInt32Swap(byte[] bytes, int startIndex) {\n+        // LOGGER.info(\"Convert {} {} {} {}\", bytes[start], bytes[start + 1], bytes[start + 2], bytes[start + 3]);\n+        if (bytes.length - startIndex < 4) {\n+            return Long.MIN_VALUE;\n+        }\n+        long a = getIntValue(bytes, startIndex);\n+        long b = getIntValue(bytes, startIndex + 2);\n+        if (b < 32768) {\n+            return b * 65536 + a;\n+        } else {\n+            return (MAX_INT32 - b * 65536 - a) * -1;\n+        }\n+    }\n+\n+    public static String getString(byte[] bArray, int i) {\n+        byte[] slice = Arrays.copyOfRange(bArray, i, i + 32);\n+        return new String(slice).trim();\n+    }\n+\n+    public static void logArray(byte[] bArray) {", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwNjQ4Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464006486", "bodyText": "Leftover from debug session to printout the whole array - removed", "author": "weymann", "createdAt": "2020-08-01T22:30:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1Nzg0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODQwMA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460558400", "bodyText": "Did you take a look into https://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html? After ByteBuffer.wrap(bArray) you can do operations like buffer.getInt(). This will automatically increase the internal cursor.", "author": "fwolter", "createdAt": "2020-07-26T18:26:29Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/dto/InfoBlock.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.dto;\n+\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.StringType;\n+import org.openhab.binding.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link InfoBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class InfoBlock implements Data {\n+    private static final StringType EMPTY = new StringType(\"NULL\");\n+    public StringType modbusId = EMPTY;\n+    public StringType modbusVersion = EMPTY;\n+    public DecimalType supportedRegisters = new DecimalType(-1);\n+    public StringType manufacturer = EMPTY;\n+    public StringType modelName = EMPTY;\n+    public StringType serialNumber = EMPTY;\n+    public StringType firmware = EMPTY;\n+\n+    /**\n+     * For decoding see Modbus Register Mapping Chapter 3.1.1 page 14\n+     *\n+     * @param bArray - Modbus Registers as bytes from 40001 to 40067\n+     */\n+    public InfoBlock(byte[] bArray) {", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5MjQ1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464092453", "bodyText": "Nice hint! I adapted DataConverter class to handle unsigned values properly but the uncomfortable index handling is deleted.", "author": "weymann", "createdAt": "2020-08-02T15:41:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODUyNw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460558527", "bodyText": "Can this be removed?", "author": "fwolter", "createdAt": "2020-07-26T18:27:46Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/dto/WallboxBlock.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.dto;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.openhab.binding.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link WallboxBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class WallboxBlock implements Data {\n+    private BitSet bitSet;\n+    public OnOffType wbAvailable = OnOffType.OFF;\n+    public OnOffType wbSunmode = OnOffType.OFF;\n+    public OnOffType wbChargingAborted = OnOffType.OFF;\n+    public OnOffType wbCharging = OnOffType.OFF;\n+    public OnOffType wbJackLocked = OnOffType.OFF;\n+    public OnOffType wbJackPlugged = OnOffType.OFF;\n+    public OnOffType wbSchukoOn = OnOffType.OFF;\n+    public OnOffType wbSchukoPlugged = OnOffType.OFF;\n+    public OnOffType wbSchukoLocked = OnOffType.OFF;\n+    public OnOffType wbSchukoRelay16 = OnOffType.OFF;\n+    public OnOffType wbRelay16 = OnOffType.OFF;\n+    public OnOffType wbRelay32 = OnOffType.OFF;\n+    public OnOffType wb1phase = OnOffType.OFF;\n+\n+    /**\n+     * For decoding see Modbus Register Mapping Chapter 3.1.2 page 15\n+     * The Registers for Wallbox Control are declared as uint16 but shall be handled as Bit registers => see chapter\n+     * 3.1.5 page 19\n+     *\n+     * @param bArray - one Modbus Registers according to Wallbox ID\n+     */\n+    public WallboxBlock(byte[] bArray) {\n+        bitSet = BitSet.valueOf(bArray);\n+        // logger.info(\"BitSet String {}\", bs.toString());", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMTAwMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464001003", "bodyText": "Yes, removed", "author": "weymann", "createdAt": "2020-08-01T21:15:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODUyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODYxNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460558614", "bodyText": "Can this be removed?", "author": "fwolter", "createdAt": "2020-07-26T18:28:52Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/BaseHandler.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingUID;\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\n+import org.eclipse.smarthome.core.thing.binding.BridgeHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandlerCallback;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.DataListener;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link BaseHandler} Basic Handler for all things\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public abstract class BaseHandler extends BaseThingHandler implements DataListener {\n+    private final Logger logger = LoggerFactory.getLogger(BaseHandler.class);\n+    private @Nullable ThingHandlerCallback thingHandlerCallback;\n+    private @Nullable ModbusDataProvider modbusDataProvider;\n+\n+    // Unit test purposes - check if dataAvailable callback was successful\n+    public boolean isUpdated = false;\n+    public boolean isInitialized = false;\n+\n+    public BaseHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    public void initialize(DataType t) {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        scheduler.execute(() -> {\n+            Bridge b = getBridge();\n+            if (b != null) {\n+                BridgeHandler bridgeHandler = b.getHandler();\n+                if (bridgeHandler != null) {\n+                    if (t.equals(DataType.INFO)) {\n+                        ModbusDataProvider localModbusDataProvider = ((E3DCDeviceThingHandler) bridgeHandler)\n+                                .getInfoDataProvider();\n+                        modbusDataProvider = localModbusDataProvider;\n+                        localModbusDataProvider.addDataListener(this);\n+                        updateStatus(ThingStatus.ONLINE);\n+                    } else if (t.equals(DataType.DATA)) {\n+                        ModbusDataProvider localModbusDataProvider = ((E3DCDeviceThingHandler) bridgeHandler)\n+                                .getDataProvider();\n+                        modbusDataProvider = localModbusDataProvider;\n+                        localModbusDataProvider.addDataListener(this);\n+                        updateStatus(ThingStatus.ONLINE);\n+                    }\n+                } else {\n+                    logger.warn(\"BridgeHandler not found\");\n+                }\n+            } else {\n+                logger.warn(\"Bridge not found\");\n+            }\n+            isInitialized = true;\n+        });\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        ModbusDataProvider localModbusDataProvider = modbusDataProvider;\n+        if (localModbusDataProvider != null) {\n+            localModbusDataProvider.removeDataListener(this);\n+        }\n+    }\n+\n+    @Override\n+    public void setCallback(@Nullable ThingHandlerCallback thingHandlerCallback) {\n+        super.setCallback(thingHandlerCallback);\n+        this.thingHandlerCallback = thingHandlerCallback;\n+        // logger.info(\"ThingCallbackHandler received {}\", thingHandlerCallback);", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMTIzMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464001232", "bodyText": "Obsolte due to Modbus rework", "author": "weymann", "createdAt": "2020-08-01T21:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODYxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTE4MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460559181", "bodyText": "Can this be removed?", "author": "fwolter", "createdAt": "2020-07-26T18:34:41Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCDeviceThingHandler.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCDeviceConfiguration;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.DataListener;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusCallback;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusWriteResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusManager;\n+import org.openhab.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteCallback;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusWriteRequestBlueprint;\n+import org.openhab.io.transport.modbus.PollTask;\n+import org.openhab.io.transport.modbus.endpoint.ModbusTCPSlaveEndpoint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCDeviceThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCDeviceThingHandler extends BaseBridgeHandler\n+        implements DataListener, ModbusWriteCallback, ModbusFailureCallback<ModbusWriteRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCDeviceThingHandler.class);\n+    private ModbusManager modbusManagerRef;\n+    private final ModbusCallback modbusInfoCallback = new ModbusCallback(DataType.INFO);\n+    private final ModbusCallback modbusDataCallback = new ModbusCallback(DataType.DATA);\n+    private ThingStatus myStatus = ThingStatus.UNKNOWN;\n+    private @Nullable ModbusCommunicationInterface modbusCom;\n+    private @Nullable PollTask infoPoller;\n+    private @Nullable PollTask dataPoller;\n+    private @Nullable E3DCDeviceConfiguration config;\n+\n+    public E3DCDeviceThingHandler(Bridge bridge, ModbusManager ref) {\n+        super(bridge);\n+        modbusManagerRef = ref;\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        setStatus(ThingStatus.UNKNOWN);\n+        // Example for background initialization:", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMTA2Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464001062", "bodyText": "Yes, removed", "author": "weymann", "createdAt": "2020-08-01T21:16:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTI2Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460559262", "bodyText": "You might want to give the user a hint, what's wrong, by specifying a second and a third parameter.", "author": "fwolter", "createdAt": "2020-07-26T18:35:24Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCDeviceThingHandler.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCDeviceConfiguration;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.DataListener;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusCallback;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusWriteResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusManager;\n+import org.openhab.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteCallback;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusWriteRequestBlueprint;\n+import org.openhab.io.transport.modbus.PollTask;\n+import org.openhab.io.transport.modbus.endpoint.ModbusTCPSlaveEndpoint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCDeviceThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCDeviceThingHandler extends BaseBridgeHandler\n+        implements DataListener, ModbusWriteCallback, ModbusFailureCallback<ModbusWriteRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCDeviceThingHandler.class);\n+    private ModbusManager modbusManagerRef;\n+    private final ModbusCallback modbusInfoCallback = new ModbusCallback(DataType.INFO);\n+    private final ModbusCallback modbusDataCallback = new ModbusCallback(DataType.DATA);\n+    private ThingStatus myStatus = ThingStatus.UNKNOWN;\n+    private @Nullable ModbusCommunicationInterface modbusCom;\n+    private @Nullable PollTask infoPoller;\n+    private @Nullable PollTask dataPoller;\n+    private @Nullable E3DCDeviceConfiguration config;\n+\n+    public E3DCDeviceThingHandler(Bridge bridge, ModbusManager ref) {\n+        super(bridge);\n+        modbusManagerRef = ref;\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        setStatus(ThingStatus.UNKNOWN);\n+        // Example for background initialization:\n+        scheduler.execute(() -> {\n+            config = getConfigAs(E3DCDeviceConfiguration.class);\n+            E3DCDeviceConfiguration localConfig = config;\n+            if (localConfig != null && checkConfig(localConfig)) {\n+                ModbusTCPSlaveEndpoint slaveEndpoint = new ModbusTCPSlaveEndpoint(localConfig.host, localConfig.port);\n+\n+                ModbusCommunicationInterface localModbusCom = modbusManagerRef.newModbusCommunicationInterface(\n+                        slaveEndpoint, modbusManagerRef.getEndpointPoolConfiguration(slaveEndpoint));\n+                // register low speed info poller\n+                ModbusReadRequestBlueprint infoRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, INFO_REG_START, INFO_REG_SIZE, 3);\n+                infoPoller = localModbusCom.registerRegularPoll(infoRequest, INFO_POLL_REFRESH_TIME_MS, 0,\n+                        modbusInfoCallback, modbusInfoCallback);\n+\n+                ModbusReadRequestBlueprint dataRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, POWER_REG_START,\n+                        REGISTER_LENGTH - INFO_REG_SIZE, 3);\n+                dataPoller = localModbusCom.registerRegularPoll(dataRequest, localConfig.refresh, 0, modbusDataCallback,\n+                        modbusDataCallback);\n+                modbusCom = localModbusCom;\n+                // listen for data to get ONLINE\n+                modbusDataCallback.addDataListener(this);\n+            } else {\n+                setStatus(ThingStatus.OFFLINE);", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMTI2Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464001267", "bodyText": "Thing Status handling completly reworked", "author": "weymann", "createdAt": "2020-08-01T21:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTI2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTUyNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460559524", "bodyText": "If refresh is 0, an IllegalArgumentException will be thrown by Modbus. The variable's unit is supposed to be milliseconds.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (c.refresh < 1) {\n          \n          \n            \n                            if (c.refresh < 2000) {", "author": "fwolter", "createdAt": "2020-07-26T18:38:14Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCDeviceThingHandler.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCDeviceConfiguration;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.DataListener;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusCallback;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusWriteResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusManager;\n+import org.openhab.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteCallback;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusWriteRequestBlueprint;\n+import org.openhab.io.transport.modbus.PollTask;\n+import org.openhab.io.transport.modbus.endpoint.ModbusTCPSlaveEndpoint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCDeviceThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCDeviceThingHandler extends BaseBridgeHandler\n+        implements DataListener, ModbusWriteCallback, ModbusFailureCallback<ModbusWriteRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCDeviceThingHandler.class);\n+    private ModbusManager modbusManagerRef;\n+    private final ModbusCallback modbusInfoCallback = new ModbusCallback(DataType.INFO);\n+    private final ModbusCallback modbusDataCallback = new ModbusCallback(DataType.DATA);\n+    private ThingStatus myStatus = ThingStatus.UNKNOWN;\n+    private @Nullable ModbusCommunicationInterface modbusCom;\n+    private @Nullable PollTask infoPoller;\n+    private @Nullable PollTask dataPoller;\n+    private @Nullable E3DCDeviceConfiguration config;\n+\n+    public E3DCDeviceThingHandler(Bridge bridge, ModbusManager ref) {\n+        super(bridge);\n+        modbusManagerRef = ref;\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        setStatus(ThingStatus.UNKNOWN);\n+        // Example for background initialization:\n+        scheduler.execute(() -> {\n+            config = getConfigAs(E3DCDeviceConfiguration.class);\n+            E3DCDeviceConfiguration localConfig = config;\n+            if (localConfig != null && checkConfig(localConfig)) {\n+                ModbusTCPSlaveEndpoint slaveEndpoint = new ModbusTCPSlaveEndpoint(localConfig.host, localConfig.port);\n+\n+                ModbusCommunicationInterface localModbusCom = modbusManagerRef.newModbusCommunicationInterface(\n+                        slaveEndpoint, modbusManagerRef.getEndpointPoolConfiguration(slaveEndpoint));\n+                // register low speed info poller\n+                ModbusReadRequestBlueprint infoRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, INFO_REG_START, INFO_REG_SIZE, 3);\n+                infoPoller = localModbusCom.registerRegularPoll(infoRequest, INFO_POLL_REFRESH_TIME_MS, 0,\n+                        modbusInfoCallback, modbusInfoCallback);\n+\n+                ModbusReadRequestBlueprint dataRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, POWER_REG_START,\n+                        REGISTER_LENGTH - INFO_REG_SIZE, 3);\n+                dataPoller = localModbusCom.registerRegularPoll(dataRequest, localConfig.refresh, 0, modbusDataCallback,\n+                        modbusDataCallback);\n+                modbusCom = localModbusCom;\n+                // listen for data to get ONLINE\n+                modbusDataCallback.addDataListener(this);\n+            } else {\n+                setStatus(ThingStatus.OFFLINE);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        modbusDataCallback.removeDataListener(this);\n+        ModbusCommunicationInterface localCom = modbusCom;\n+        if (localCom != null) {\n+            PollTask localInfoPoller = infoPoller;\n+            if (localInfoPoller != null) {\n+                localCom.unregisterRegularPoll(localInfoPoller);\n+            }\n+            PollTask localDataPoller = dataPoller;\n+            if (localDataPoller != null) {\n+                localCom.unregisterRegularPoll(localDataPoller);\n+            }\n+        }\n+    }\n+\n+    private boolean checkConfig(@Nullable E3DCDeviceConfiguration c) {\n+        if (c != null) {\n+            if (c.port > 1) {\n+                if (c.refresh < 1) {", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMDU0MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464100540", "bodyText": "Refresh rate is now better defined in brdige-e3dc.xml. Minimum value is declared to 1000 ms, default to 2000 ms", "author": "weymann", "createdAt": "2020-08-02T17:06:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTUyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTkyNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460559926", "bodyText": "Logging to info should be used rarely. This could be debug. Same for below.", "author": "fwolter", "createdAt": "2020-07-26T18:42:32Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCWallboxHandler.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCWallboxConfiguration;\n+import org.openhab.binding.e3dc.internal.dto.DataConverter;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.dto.WallboxBlock;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCWallboxHandler} is responsible for handling commands, which are\n+ * sent to one of the channels.\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCWallboxHandler extends BaseHandler {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCWallboxHandler.class);\n+    private BitSet currentBitSet = new BitSet(16);\n+    private @Nullable E3DCWallboxConfiguration config;\n+    private @Nullable E3DCDeviceThingHandler bridgeHandler;\n+\n+    public E3DCWallboxHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        config = getConfigAs(E3DCWallboxConfiguration.class);\n+        super.initialize(DataType.DATA);\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof OnOffType) {\n+            logger.info(\"Command {} CUID {}\", command, channelUID);", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMTUwMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464001503", "bodyText": "Leftover from debugging. It's removed now", "author": "weymann", "createdAt": "2020-08-01T21:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTkyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTk3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460559976", "bodyText": "Can these messages be replaced by using the debugger or by increasing the framework's log level? See point 4 https://www.openhab.org/docs/developer/guidelines.html#f-logging", "author": "fwolter", "createdAt": "2020-07-26T18:43:05Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCWallboxHandler.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCWallboxConfiguration;\n+import org.openhab.binding.e3dc.internal.dto.DataConverter;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.dto.WallboxBlock;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCWallboxHandler} is responsible for handling commands, which are\n+ * sent to one of the channels.\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCWallboxHandler extends BaseHandler {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCWallboxHandler.class);\n+    private BitSet currentBitSet = new BitSet(16);\n+    private @Nullable E3DCWallboxConfiguration config;\n+    private @Nullable E3DCDeviceThingHandler bridgeHandler;\n+\n+    public E3DCWallboxHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        config = getConfigAs(E3DCWallboxConfiguration.class);\n+        super.initialize(DataType.DATA);\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof OnOffType) {\n+            logger.info(\"Command {} CUID {}\", command, channelUID);\n+            logger.info(\"getId {}\", channelUID.getId());\n+            logger.info(\"getIdWithoutGroup {}\", channelUID.getIdWithoutGroup());", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMTU0MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464001540", "bodyText": "Also leftover from debugging - they are removed", "author": "weymann", "createdAt": "2020-08-01T21:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1OTk3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDI0NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460560244", "bodyText": "You might want to declare currentBitSet as volatile.", "author": "fwolter", "createdAt": "2020-07-26T18:45:57Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCWallboxHandler.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCWallboxConfiguration;\n+import org.openhab.binding.e3dc.internal.dto.DataConverter;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.dto.WallboxBlock;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCWallboxHandler} is responsible for handling commands, which are\n+ * sent to one of the channels.\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCWallboxHandler extends BaseHandler {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCWallboxHandler.class);\n+    private BitSet currentBitSet = new BitSet(16);\n+    private @Nullable E3DCWallboxConfiguration config;\n+    private @Nullable E3DCDeviceThingHandler bridgeHandler;\n+\n+    public E3DCWallboxHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        config = getConfigAs(E3DCWallboxConfiguration.class);\n+        super.initialize(DataType.DATA);\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof OnOffType) {\n+            logger.info(\"Command {} CUID {}\", command, channelUID);\n+            logger.info(\"getId {}\", channelUID.getId());\n+            logger.info(\"getIdWithoutGroup {}\", channelUID.getIdWithoutGroup());\n+            int writeValue = 0;\n+            synchronized (this) {\n+                if (channelUID.getIdWithoutGroup().equals(WB_SUNMODE_CHANNEL)) {\n+                    currentBitSet.set(WB_SUNMODE_BIT, command.equals(OnOffType.ON));\n+                } else if (channelUID.getIdWithoutGroup().equals(WB_CHARGING_ABORTED_CHANNEL)) {\n+                    currentBitSet.set(WB_CHARGING_ABORTED_BIT, command.equals(OnOffType.ON));\n+                } else if (channelUID.getIdWithoutGroup().equals(WB_SCHUKO_ON_CHANNEL)) {\n+                    currentBitSet.set(WB_SCHUKO_ON_BIT, command.equals(OnOffType.ON));\n+                } else if (channelUID.getIdWithoutGroup().equals(WB_1PHASE_CHANNEL)) {\n+                    currentBitSet.set(WB_1PHASE_BIT, command.equals(OnOffType.ON));\n+                }\n+                writeValue = DataConverter.toInt(currentBitSet);\n+                logger.info(\"Send {}\", writeValue);\n+            }\n+            E3DCDeviceThingHandler localBridgeHandler = bridgeHandler;\n+            if (localBridgeHandler == null) {\n+                Bridge b = getBridge();\n+                if (b != null) {\n+                    localBridgeHandler = (E3DCDeviceThingHandler) b.getHandler();\n+                    bridgeHandler = localBridgeHandler;\n+                }\n+            }\n+            if (localBridgeHandler != null) {\n+                int wallboxId = getWallboxId(config);\n+                if (wallboxId != -1) {\n+                    localBridgeHandler.wallboxSet(wallboxId, writeValue);\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void dataAvailable(ModbusDataProvider provider) {\n+        WallboxArray blockArray = (WallboxArray) provider.getData(DataType.WALLBOX);\n+        if (blockArray != null) {\n+            int wallboxId = getWallboxId(config);\n+            if (wallboxId != -1) {\n+                WallboxBlock block = blockArray.getWallboxBlock(wallboxId);\n+                if (block != null) {\n+                    synchronized (this) {\n+                        currentBitSet = block.getBitSet();", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwODAyOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464008028", "bodyText": "No, intention is really to synchronize the BitSet. If a command from User is ongoing to change the BitSet it shouldn't be overridden by Modbus Poller with the recent BitSet.", "author": "weymann", "createdAt": "2020-08-01T22:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDI0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDc0OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460560749", "bodyText": "Syntactical sugar\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Iterator<ModbusRegister> iter = registers.iterator();\n          \n          \n            \n                    int i = 0;\n          \n          \n            \n                    while (iter.hasNext()) {\n          \n          \n            \n                        ModbusRegister reg = iter.next();\n          \n          \n            \n                        System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n          \n          \n            \n                        i += 2;\n          \n          \n            \n                    }\n          \n          \n            \n                    int i = 0;\n          \n          \n            \n                    for (ModbusRegister reg : registers) {\n          \n          \n            \n                        System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n          \n          \n            \n                        i += 2;\n          \n          \n            \n                    }", "author": "fwolter", "createdAt": "2020-07-26T18:51:11Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/modbus/ModbusCallback.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.modbus;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusReadCallback;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegister;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link InfoBlockCallback} class receives callbacks from modbus poller\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ModbusCallback extends ModbusDataProvider\n+        implements ModbusReadCallback, ModbusFailureCallback<ModbusReadRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(ModbusCallback.class);\n+    private DataType callbackType;\n+    private byte[] bArray;\n+    private int size;\n+    private int counter = 0;\n+    private long maxDuration = Long.MIN_VALUE;\n+    private long minDuration = Long.MAX_VALUE;\n+    private long avgDuration = 0;\n+\n+    public ModbusCallback(DataType type) {\n+        callbackType = type;\n+        if (type.equals(DataType.INFO)) {\n+            size = INFO_REG_SIZE * 2;\n+            bArray = new byte[size];\n+        } else {\n+            size = (REGISTER_LENGTH - INFO_REG_SIZE) * 2;\n+            bArray = new byte[size];\n+        }\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusReadResult result) {\n+        byte[] newArray = new byte[size];\n+        long startTime = System.currentTimeMillis();\n+        Optional<ModbusRegisterArray> opt = result.getRegisters();\n+        ModbusRegisterArray registers = opt.get();\n+        Iterator<ModbusRegister> iter = registers.iterator();\n+        int i = 0;\n+        while (iter.hasNext()) {\n+            ModbusRegister reg = iter.next();\n+            System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n+            i += 2;\n+        }", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyNjQ3Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r461026477", "bodyText": "How about introducing ModbusRegisterArray helper instance method?", "author": "ssalonen", "createdAt": "2020-07-27T16:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMjIwMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464002202", "bodyText": "Thanks, change applied", "author": "weymann", "createdAt": "2020-08-01T21:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDc0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDgyNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460560824", "bodyText": "Can this be removed?", "author": "fwolter", "createdAt": "2020-07-26T18:51:54Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/modbus/ModbusCallback.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.modbus;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusReadCallback;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegister;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link InfoBlockCallback} class receives callbacks from modbus poller\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ModbusCallback extends ModbusDataProvider\n+        implements ModbusReadCallback, ModbusFailureCallback<ModbusReadRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(ModbusCallback.class);\n+    private DataType callbackType;\n+    private byte[] bArray;\n+    private int size;\n+    private int counter = 0;\n+    private long maxDuration = Long.MIN_VALUE;\n+    private long minDuration = Long.MAX_VALUE;\n+    private long avgDuration = 0;\n+\n+    public ModbusCallback(DataType type) {\n+        callbackType = type;\n+        if (type.equals(DataType.INFO)) {\n+            size = INFO_REG_SIZE * 2;\n+            bArray = new byte[size];\n+        } else {\n+            size = (REGISTER_LENGTH - INFO_REG_SIZE) * 2;\n+            bArray = new byte[size];\n+        }\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusReadResult result) {\n+        byte[] newArray = new byte[size];\n+        long startTime = System.currentTimeMillis();\n+        Optional<ModbusRegisterArray> opt = result.getRegisters();\n+        ModbusRegisterArray registers = opt.get();\n+        Iterator<ModbusRegister> iter = registers.iterator();\n+        int i = 0;\n+        while (iter.hasNext()) {\n+            ModbusRegister reg = iter.next();\n+            System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n+            i += 2;\n+        }\n+        setArray(newArray);\n+\n+        long duration = System.currentTimeMillis() - startTime;\n+        avgDuration += duration;\n+        minDuration = Math.min(minDuration, duration);\n+        maxDuration = Math.max(maxDuration, duration);\n+        counter++;\n+        if (counter % 100 == 0) {\n+            logger.debug(\"Min {} Max {} Avg {}\", minDuration, maxDuration, avgDuration / 30);\n+            avgDuration = 0;\n+            minDuration = Long.MAX_VALUE;\n+            maxDuration = Long.MIN_VALUE;\n+        }\n+        // DataConverter.logArray(newArray);", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMjM1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464002353", "bodyText": "Yes, also leftover from debugging", "author": "weymann", "createdAt": "2020-08-01T21:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDgyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDkxMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460560913", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSettings of the E3DC Power Plant. Gives you control on attached Wallboxes.</description>\n          \n          \n            \n            \t\tsettings of the E3DC Power Plant. Gives you control of attached Wallboxes.</description>", "author": "fwolter", "createdAt": "2020-07-26T18:53:12Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/binding/binding.xml", "diffHunk": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<binding:binding id=\"e3dc\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:binding=\"https://openhab.org/schemas/binding/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/binding/v1.0.0 https://openhab.org/schemas/binding-1.0.0.xsd\">\n+\t<name>E3DC Home Power Plant Binding</name>\n+\t<description>Integrates Home Power Plant models from E3DC. Shows values of electrical producers and consumers and the\n+\t\tSettings of the E3DC Power Plant. Gives you control on attached Wallboxes.</description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwMjI5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464002293", "bodyText": "binding.xml removed due to Modbus rework", "author": "weymann", "createdAt": "2020-08-01T21:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MDkxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTA0OA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561048", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n          \n          \n            \n            thing-type.e3dc.e3dc-info.description = Basisinformationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Software-Versionen", "author": "fwolter", "createdAt": "2020-07-26T18:54:30Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMTc0Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464101746", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-02T17:20:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTEzNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561135", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.e3dc.e3dc-info.label = E3DC Info Block\n          \n          \n            \n            thing-type.e3dc.e3dc-info.label = E3DC Info-Block", "author": "fwolter", "createdAt": "2020-07-26T18:55:13Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMTM4OA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464101388", "bodyText": "Renamed", "author": "weymann", "createdAt": "2020-08-02T17:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTEzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTE1NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561154", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n          \n          \n            \n            thing-type.e3dc.e3dc-power.label = E3DC Leistungsblock", "author": "fwolter", "createdAt": "2020-07-26T18:55:31Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMTQzMA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464101430", "bodyText": "Renamed", "author": "weymann", "createdAt": "2020-08-02T17:16:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTE1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTE5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561191", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n          \n          \n            \n            thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Erzeuger (Photovoltaik, Batterie, ...) und Verbraucher (Haushaltsverbrauch, Wallbox,...)", "author": "fwolter", "createdAt": "2020-07-26T18:55:57Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) ", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMTYyMA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464101620", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-02T17:18:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTI0OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561249", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n          \n          \n            \n            thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungsblock", "author": "fwolter", "createdAt": "2020-07-26T18:56:37Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMjA0NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464102044", "bodyText": "Blocks are renamed", "author": "weymann", "createdAt": "2020-08-02T17:23:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTI0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTMxNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561314", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n          \n          \n            \n            thing-type.e3dc.e3dc-strings.label = E3DC String-Details-Block", "author": "fwolter", "createdAt": "2020-07-26T18:57:24Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMjI4OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464102289", "bodyText": "Renamed", "author": "weymann", "createdAt": "2020-08-02T17:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTM2Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561362", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block\n          \n          \n            \n            thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom-Block", "author": "fwolter", "createdAt": "2020-07-26T18:57:57Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n+thing-type.e3dc.e3dc-strings.description = Detaillierte Werte der angeschlossenen Photovoltaik Strings. Zeigt die einzelnen Werte jedes angeschlossenen Strings\n+thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMjYxOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464102618", "bodyText": "Blocks are renamed", "author": "weymann", "createdAt": "2020-08-02T17:29:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTM2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTQzMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561433", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.config.e3dc.e3dc-device.host.label = IP Adresse oder Host Name\n          \n          \n            \n            thing-type.config.e3dc.e3dc-device.host.label = IP-Adresse oder Hostname", "author": "fwolter", "createdAt": "2020-07-26T18:58:38Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n+thing-type.e3dc.e3dc-strings.description = Detaillierte Werte der angeschlossenen Photovoltaik Strings. Zeigt die einzelnen Werte jedes angeschlossenen Strings\n+thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block\n+thing-type.e3dc.e3dc-emergency.description = Status und Werte der Notstromversorgung wie Einspeisungsbeschr\ufffdnkung, Batterie Lade- und Entladesperren\n+\n+# thing type config description\n+thing-type.config.e3dc.e3dc-device.host.label = IP Adresse oder Host Name", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5MjY0NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464092644", "bodyText": "Obsolete due to usage of Modbus TCP Bridge", "author": "weymann", "createdAt": "2020-08-02T15:43:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTQ2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561469", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.config.e3dc.e3dc-device.deviceid.description = Ger\ufffdtenummer aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n          \n          \n            \n            thing-type.config.e3dc.e3dc-device.deviceid.description = Ger\ufffdtenummer aus den Modbus-Einstellungen des E3DC Ger\ufffdtes", "author": "fwolter", "createdAt": "2020-07-26T18:59:03Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n+thing-type.e3dc.e3dc-strings.description = Detaillierte Werte der angeschlossenen Photovoltaik Strings. Zeigt die einzelnen Werte jedes angeschlossenen Strings\n+thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block\n+thing-type.e3dc.e3dc-emergency.description = Status und Werte der Notstromversorgung wie Einspeisungsbeschr\ufffdnkung, Batterie Lade- und Entladesperren\n+\n+# thing type config description\n+thing-type.config.e3dc.e3dc-device.host.label = IP Adresse oder Host Name\n+thing-type.config.e3dc.e3dc-device.host.description = Netzwerkadresse oder Hostname des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.deviceid.label = Ger\ufffdtenummer\n+thing-type.config.e3dc.e3dc-device.deviceid.description = Ger\ufffdtenummer aus den Modbus Einstellungen des E3DC Ger\ufffdtes", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMjY3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464102675", "bodyText": "Obsolete due to Modbus TCP Bridge usage", "author": "weymann", "createdAt": "2020-08-02T17:29:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTQ2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTU4Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561586", "bodyText": "This file is encoded with ISO-8859-1. Can you convert it to UTF-8?", "author": "fwolter", "createdAt": "2020-07-26T18:59:58Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5NTg4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464095883", "bodyText": "Done", "author": "weymann", "createdAt": "2020-08-02T16:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTU4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTYyNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561625", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.config.e3dc.e3dc-device.port.label = Modbus Port\n          \n          \n            \n            thing-type.config.e3dc.e3dc-device.port.label = Modbus-Port", "author": "fwolter", "createdAt": "2020-07-26T19:00:24Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n+thing-type.e3dc.e3dc-strings.description = Detaillierte Werte der angeschlossenen Photovoltaik Strings. Zeigt die einzelnen Werte jedes angeschlossenen Strings\n+thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block\n+thing-type.e3dc.e3dc-emergency.description = Status und Werte der Notstromversorgung wie Einspeisungsbeschr\ufffdnkung, Batterie Lade- und Entladesperren\n+\n+# thing type config description\n+thing-type.config.e3dc.e3dc-device.host.label = IP Adresse oder Host Name\n+thing-type.config.e3dc.e3dc-device.host.description = Netzwerkadresse oder Hostname des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.deviceid.label = Ger\ufffdtenummer\n+thing-type.config.e3dc.e3dc-device.deviceid.description = Ger\ufffdtenummer aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.port.label = Modbus Port", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5MjczMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464092733", "bodyText": "Obsolete due to usage of Modbus TCP Bridge", "author": "weymann", "createdAt": "2020-08-02T15:44:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTYyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTY1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561653", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.config.e3dc.e3dc-device.port.description = Modbus Port aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n          \n          \n            \n            thing-type.config.e3dc.e3dc-device.port.description = Modbus-Port aus den Modbus-Einstellungen des E3DC Ger\ufffdtes", "author": "fwolter", "createdAt": "2020-07-26T19:00:35Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n+thing-type.e3dc.e3dc-strings.description = Detaillierte Werte der angeschlossenen Photovoltaik Strings. Zeigt die einzelnen Werte jedes angeschlossenen Strings\n+thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block\n+thing-type.e3dc.e3dc-emergency.description = Status und Werte der Notstromversorgung wie Einspeisungsbeschr\ufffdnkung, Batterie Lade- und Entladesperren\n+\n+# thing type config description\n+thing-type.config.e3dc.e3dc-device.host.label = IP Adresse oder Host Name\n+thing-type.config.e3dc.e3dc-device.host.description = Netzwerkadresse oder Hostname des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.deviceid.label = Ger\ufffdtenummer\n+thing-type.config.e3dc.e3dc-device.deviceid.description = Ger\ufffdtenummer aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.port.label = Modbus Port\n+thing-type.config.e3dc.e3dc-device.port.description = Modbus Port aus den Modbus Einstellungen des E3DC Ger\ufffdtes", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMjc0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464102747", "bodyText": "Obsolete due to Modbus TCP Bridge usage", "author": "weymann", "createdAt": "2020-08-02T17:30:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTY4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561683", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.config.e3dc.e3dc-device.refresh.description = Intervall wie oft die Werte abgerufen werden sollen in Millisekunden\n          \n          \n            \n            thing-type.config.e3dc.e3dc-device.refresh.description = Intervall, wie oft die Werte abgerufen werden sollen in Millisekunden", "author": "fwolter", "createdAt": "2020-07-26T19:00:54Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n+thing-type.e3dc.e3dc-strings.description = Detaillierte Werte der angeschlossenen Photovoltaik Strings. Zeigt die einzelnen Werte jedes angeschlossenen Strings\n+thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block\n+thing-type.e3dc.e3dc-emergency.description = Status und Werte der Notstromversorgung wie Einspeisungsbeschr\ufffdnkung, Batterie Lade- und Entladesperren\n+\n+# thing type config description\n+thing-type.config.e3dc.e3dc-device.host.label = IP Adresse oder Host Name\n+thing-type.config.e3dc.e3dc-device.host.description = Netzwerkadresse oder Hostname des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.deviceid.label = Ger\ufffdtenummer\n+thing-type.config.e3dc.e3dc-device.deviceid.description = Ger\ufffdtenummer aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.port.label = Modbus Port\n+thing-type.config.e3dc.e3dc-device.port.description = Modbus Port aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.refresh.label = Zyklische Abfragezeit\n+thing-type.config.e3dc.e3dc-device.refresh.description = Intervall wie oft die Werte abgerufen werden sollen in Millisekunden", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMjg0NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464102844", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-02T17:31:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTcwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561706", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            thing-type.config.e3dc.e3dc-wallbox.wallboxId.label = Wallbox Nummer\n          \n          \n            \n            thing-type.config.e3dc.e3dc-wallbox.wallboxId.label = Wallbox-Nummer", "author": "fwolter", "createdAt": "2020-07-26T19:01:16Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/i18n/e3dc_de.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+# binding\n+binding.e3dc.name = E3DC Hauskraftwerk Binding\n+binding.e3dc.description = Integriert die Hauskraftwerk Modelle von E3DC. Zeigt die Werte der elektrischen Produzenten und Konsumenten sowie die Einstellungen des E3DC Hauskraftwerkes. Angeschlossene Wallboxen k\ufffdnnen gesteuert werden.\n+\n+# thing types\n+thing-type.e3dc.e3dc-device.label = E3DC Hauskraftwerk\n+thing-type.e3dc.e3dc-device.description = Verbindung zum E3DC Hauskraftwerk. Nach dem Einrichten f\ufffdgen Sie Ihre gew\ufffdnschten Bl\ufffdcke zu dieser Bridge hinzu.\n+thing-type.e3dc.e3dc-info.label = E3DC Info Block\n+thing-type.e3dc.e3dc-info.description = Basis Informationen zum E3DC Hauskraftwerk wie Modellname, Seriennummer und Softwareversionen\n+thing-type.e3dc.e3dc-power.label = E3DC Leistung Block\n+thing-type.e3dc.e3dc-power.description = Elektrische Werte der angeschlossenen Produzenten (Photovoltaik, Batterie, ...) und Konsumenten (Haushaltsverbrauch, Wallbox,...) \n+thing-type.e3dc.e3dc-wallbox.label = E3DC Wallbox Einstellungen Block\n+thing-type.e3dc.e3dc-wallbox.description = Zeigt die Einstellungen der verbundenen Wallbox. Schalter wie \"Sonnenmodus\" oder \"1-phasiges Laden\" k\ufffdnnen ge\ufffdndert werden!\n+thing-type.e3dc.e3dc-strings.label = E3DC String Details Block\n+thing-type.e3dc.e3dc-strings.description = Detaillierte Werte der angeschlossenen Photovoltaik Strings. Zeigt die einzelnen Werte jedes angeschlossenen Strings\n+thing-type.e3dc.e3dc-emergency.label = E3DC Notstrom Block\n+thing-type.e3dc.e3dc-emergency.description = Status und Werte der Notstromversorgung wie Einspeisungsbeschr\ufffdnkung, Batterie Lade- und Entladesperren\n+\n+# thing type config description\n+thing-type.config.e3dc.e3dc-device.host.label = IP Adresse oder Host Name\n+thing-type.config.e3dc.e3dc-device.host.description = Netzwerkadresse oder Hostname des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.deviceid.label = Ger\ufffdtenummer\n+thing-type.config.e3dc.e3dc-device.deviceid.description = Ger\ufffdtenummer aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.port.label = Modbus Port\n+thing-type.config.e3dc.e3dc-device.port.description = Modbus Port aus den Modbus Einstellungen des E3DC Ger\ufffdtes\n+thing-type.config.e3dc.e3dc-device.refresh.label = Zyklische Abfragezeit\n+thing-type.config.e3dc.e3dc-device.refresh.description = Intervall wie oft die Werte abgerufen werden sollen in Millisekunden\n+thing-type.config.e3dc.e3dc-wallbox.wallboxId.label = Wallbox Nummer", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwMzAzMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464103032", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-02T17:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTcwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTc5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561793", "bodyText": "Is localhost a useful default value?", "author": "fwolter", "createdAt": "2020-07-26T19:02:01Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/bridge-e3dc-device.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<bridge-type id=\"e3dc-device\">\n+\t\t<label>E3DC Home Power Plant</label>\n+\t\t<description>Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.</description>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"host\" type=\"text\" required=\"true\">\n+\t\t\t\t<label>IP Address or Hostname</label>\n+\t\t\t\t<description>Network address of the device</description>\n+\t\t\t\t<default>localhost</default>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwOTMxOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464009318", "bodyText": "Obsolete due to Modbus rework", "author": "weymann", "createdAt": "2020-08-01T23:10:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTc5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTgxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561819", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<description>Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.</description>\n          \n          \n            \n            \t\t<description>Establishes a Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.</description>", "author": "fwolter", "createdAt": "2020-07-26T19:02:19Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/bridge-e3dc-device.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<bridge-type id=\"e3dc-device\">\n+\t\t<label>E3DC Home Power Plant</label>\n+\t\t<description>Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.</description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwOTI3MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464009271", "bodyText": "Obsolete due to Modbus rework", "author": "weymann", "createdAt": "2020-08-01T23:09:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTg1MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561850", "bodyText": "You could add min/max values.", "author": "fwolter", "createdAt": "2020-07-26T19:02:42Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/bridge-e3dc-device.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<bridge-type id=\"e3dc-device\">\n+\t\t<label>E3DC Home Power Plant</label>\n+\t\t<description>Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.</description>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"host\" type=\"text\" required=\"true\">\n+\t\t\t\t<label>IP Address or Hostname</label>\n+\t\t\t\t<description>Network address of the device</description>\n+\t\t\t\t<default>localhost</default>\n+\t\t\t\t<context>network-address</context>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"deviceid\" type=\"integer\">\n+\t\t\t\t<label>Device ID</label>\n+\t\t\t\t<description>Device ID from your E3DC Modbus Settings</description>\n+\t\t\t\t<default>1</default>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"port\" type=\"integer\">", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwOTIwMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464009203", "bodyText": "Obsolete due to Modbus rework", "author": "weymann", "createdAt": "2020-08-01T23:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTg3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561876", "bodyText": "Can you remove the line break?", "author": "fwolter", "createdAt": "2020-07-26T19:03:06Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/bridge-e3dc-device.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<bridge-type id=\"e3dc-device\">\n+\t\t<label>E3DC Home Power Plant</label>\n+\t\t<description>Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.</description>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"host\" type=\"text\" required=\"true\">\n+\t\t\t\t<label>IP Address or Hostname</label>\n+\t\t\t\t<description>Network address of the device</description>\n+\t\t\t\t<default>localhost</default>\n+\t\t\t\t<context>network-address</context>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"deviceid\" type=\"integer\">\n+\t\t\t\t<label>Device ID</label>\n+\t\t\t\t<description>Device ID from your E3DC Modbus Settings</description>\n+\t\t\t\t<default>1</default>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"port\" type=\"integer\">\n+\t\t\t\t<label>Port</label>\n+\t\t\t\t<description>Modbus Port from your E3DC Modbus Settings</description>\n+\t\t\t\t<default>502</default>\n+\t\t\t</parameter>\n+\n+\t\t\t<!-- connection handling -->\n+\t\t\t<parameter name=\"refresh\" type=\"integer\" min=\"0\" unit=\"ms\">\n+\t\t\t\t<label>Poll Interval</label>\n+\t\t\t\t<description>Poll interval in milliseconds.</description>\n+\t\t\t\t<default>2000\n+\t\t\t\t</default>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5NDM1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464094351", "bodyText": "Sure", "author": "weymann", "createdAt": "2020-08-02T15:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTg3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTkwOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460561908", "bodyText": "Is 0 a reasonable min. value?", "author": "fwolter", "createdAt": "2020-07-26T19:03:34Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/bridge-e3dc-device.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<bridge-type id=\"e3dc-device\">\n+\t\t<label>E3DC Home Power Plant</label>\n+\t\t<description>Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.</description>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"host\" type=\"text\" required=\"true\">\n+\t\t\t\t<label>IP Address or Hostname</label>\n+\t\t\t\t<description>Network address of the device</description>\n+\t\t\t\t<default>localhost</default>\n+\t\t\t\t<context>network-address</context>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"deviceid\" type=\"integer\">\n+\t\t\t\t<label>Device ID</label>\n+\t\t\t\t<description>Device ID from your E3DC Modbus Settings</description>\n+\t\t\t\t<default>1</default>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"port\" type=\"integer\">\n+\t\t\t\t<label>Port</label>\n+\t\t\t\t<description>Modbus Port from your E3DC Modbus Settings</description>\n+\t\t\t\t<default>502</default>\n+\t\t\t</parameter>\n+\n+\t\t\t<!-- connection handling -->\n+\t\t\t<parameter name=\"refresh\" type=\"integer\" min=\"0\" unit=\"ms\">", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5NTA0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464095043", "bodyText": "No, fixed it to 1000 ms", "author": "weymann", "createdAt": "2020-08-02T16:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MTkwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjA5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562092", "bodyText": "You could add the values, the user can expect here.", "author": "fwolter", "createdAt": "2020-07-26T19:05:14Z", "path": "bundles/org.openhab.binding.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+The binding operates via Modbus to read and write values towards the E3DC device. The binding is designed the following way  \n+\n+1. Create Bridge **E3DC Home Power Plant** and provide IP-Address, Device and Port Number for the general Device connection\n+2. Add your wanted Blocks \n+\n+* if you have a Wallbox connected - add Wallbox Control Block \n+* if you want Details of your attached Strings - add String Details Block\n+\n+With this design it's possible for you to install only the parts you are interested in.\n+\n+See [E3DC Website](https://www.e3dc.com/) to find more infos about the device.\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Bridge Type ID | Description                                                                                          |\n+|-----------------------|----------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc-device    | Establishes Modbus Connection to your Device. Add your desired Blocks to this Bridge afterwards.     |\n+\n+After establishing the Bridge add certain Blocks to gather Information and Settings\n+\n+| Name               | Thing Type ID | Description                                                                                            |\n+|--------------------|----------------|--------------------------------------------------------------------------------------------------------|\n+| E3DC Information Block | e3dc-info    | Basic Information of your E3DC Device like Model Name, Serial Number and Software Versions             |\n+| E3DC Power Block | e3dc-power    | Provides values of your attached electrical Producers (Photovoltaic, Battery, ... and Consumers (Household, Wallbox, ...) |\n+| E3DC Wallbox Control Block | e3dc-wallbox    | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"3Phase Charging\" can be changed! |\n+| E3DC String Details Block | e3dc-strings    | Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String provides |\n+| E3DC EMS Block | e3dc-emergency    | Provides values of Emergency Power Status (EMS) and regulations like Battery loading / unloading restrictions |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+The Binding Design requires two steps\n+\n+1. Create the E3DC Home Power Plant Bridge (e3dc-device) which requires\n+\n+* IP Address, Device ID and Port Number of your device\n+* optional refresh time in ms, default is set to 2000 = 2 seconds\n+\n+2. Add your desired Blocks\n+\n+* each Block requires the created Bridge from point 1\n+* only the Wallbox Control Block requires an additional Wallbox ID. The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7\n+\n+### E3DC Home Power Plant \n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                   |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1 |\n+| port            | integer | Modbus Port of your E3DC device device Modbus Settings.. Default is 502 |\n+| refresh         | integer | data refresh rate in milliseconds. Default is 2000          |\n+\n+### E3DC Wallbox Control Block\n+\n+| Parameter       | Type    | Description                                                 |           \n+|-----------------|---------|-------------------------------------------------------------|\n+| wallboxId       | integer | The E3DC device can handle up to 8 Wallboxes so select a value from 0 to 7  |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. Due to the Block design you can allocate only your wanted blocks with a restricted amount of Channels. See each Block which Channels are offered\n+\n+### E3DC Info Block\n+\n+| Channel Label         | Channel ID | Type   | Description                  |\n+|-----------------------|------------|--------|------------------------------|\n+| Modbus-ID             |modbus-id   |  String | Modbus ID / Magic Byte of E3DC  |\n+| Modbus Firmware       |modbus-firmware| String | Version of Modbus Firmware  |\n+| Supported Registers   |supported-registers| Number | Number of registers supported by Modbus  |\n+| Manufacturer Name     | manufacturer-name  | String | Name of the Device Manufacturer  |\n+| E3DC Model Name       | model-name | String | Name of the E3DC Model  |\n+| E3DC Firmware Release | firmware-release | String | Firmware installed on this particular E3DC Model  |\n+| E3DC Serial Number    | serial-number| String | Serial Number of this particular E3DC Model  |\n+\n+\n+### E3DC Power Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| PV Output             | pv-power-supply |  Number:Power  | Photovoltaic Power Production    |\n+| Battery Discharge     | battery-power-supply |  Number:Power  | Battery discharges and provides Power    |\n+| Battery Charge        | battery-power-consumption |  Number:Power  | Battery charges and consumes Power    |\n+| Household Consumption | household-power-consumption |  Number:Power  | Household consuming Power    |\n+| Grid Power Consumption| grid-power-consumption |  Number:Power  | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply     | grid-power-supply |  Number:Power  | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply | external-power-supply |  Number:Power  | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption | wallbox-power-consumption |  Number:Power  | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | wallbox-pv-power-consumption |  Number:Power  | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky               |autarky-channel |  Number:Percent  | Your current Autarky Level    |\n+| Self Consumption       | self-consumption |  Number:Percent  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge | battery-soc |  Number:Percent  | Charge Level of your attached Battery    |\n+\n+### E3DC Wallbox Control Block\n+\n+Some of the Wallbox Settings can be changed. See the Access column if the actual value is Read/Write (RW) or Read Only (RO)\n+\n+| Channel Label         | Channel ID      | Type      | Access | Description                  |\n+|-----------------------|-----------------|-----------|--------|------------------------------|\n+| Wallbox Available     | wb-available    |  Switch | RO | Indicates if the Wallbox is attached. Check your Wallbox ID in offline case  |\n+| Sun Mode              | wb-sunmode |  Switch | RW  | Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging.   |\n+| Wallbox Charging Aborted | wb-charging-aborted |  Switch | RW  | Indicates if Wallbox charging is aborted  |\n+| Wallbox Charging      | wb-charging |  Switch | RO  | Indicates your Wallbox is charging   |\n+| Jack Locked           | wb-jack-locked  |  Switch | RO  | Indicates your Jack is locked   |\n+| Jack Plugged          | wb-jack-plugged |  Switch | RO  | Indicates your Jack is plugged    |\n+| Schuko Socket On      | wb-schuko-on    |  Switch  | RW | If your Wallbox has an additional Schuko Socket it provides state ON or OFF    |\n+| Schuko Socket Plugged | wb-schuko-plugged |  Switch | RO  |If your Wallbox has an additional Schuko Socket it provides plugged state ON or OFF    |\n+| Schuko Socket Locked  | wb-schuko-locked |  Switch | RO  | If your Wallbox has an additional Schuko Socket it provides locked state ON or OFF |\n+| Schuko 16A Relay On   | wb-schuko-relay-16a |  Switch | RO  | Indicates if Schuko 16A Relay is ON     |\n+| 16A Relay On          | wb-relay-16a    |  Switch | RO  | Indicates if 16A Relay is ON     |\n+| 32A Relay On          | wb-relay-32a    |  Switch | RO  | Indicates if 32A Relay is ON    |\n+| 1-Phase Charging      | 1-Phase Active  |  Switch | RW  | Indicates if 1-phase charging is activated. If OFF 3-phase charging is activated    |\n+\n+### E3DC String Details Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| String 1 Potential    | string1-dc-voltage |  Number:Volt  | Volt on String 1           |\n+| String 2 Potential    | string2-dc-voltage |  Number:Volt  | Volt on String 2           |\n+| String 3 Potential    | string3-dc-voltage |  Number:Volt  | Volt on String 3           |\n+| String 1 Current      | string1-dc-current |  Number:Ampere  | Ampere on String 1       |\n+| String 2 Current      | string2-dc-current |  Number:Ampere  | Ampere on String 2       |\n+| String 3 Current      | string3-dc-current |  Number:Ampere  | Ampere on String 3       |\n+| String 1 Power        | string1-dc-output  |  Number:Power   | Watt produced by String 1 |\n+| String 2 Power        | string2-dc-output  |  Number:Power   | Watt produced by String 2 |\n+| String 3 Power        | string3-dc-output  |  Number:Power   | Watt produced by String 3 |\n+\n+\n+### E3DC EMS Block\n+\n+| Channel Label         | Channel ID      | Type           | Description                  |\n+|-----------------------|-----------------|----------------|------------------------------|\n+| Emergency Power Status| emergency-power-status |  String  | Indicates if Emergency Power Supply is possible or not, active or inactive |", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5NTc1MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464095750", "bodyText": "Added all possible EP Status values", "author": "weymann", "createdAt": "2020-08-02T16:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjE5NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562195", "bodyText": "See Readme and below.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<description>Volt on String 1</description>\n          \n          \n            \n            \t\t<description>Voltage on String 1</description>", "author": "fwolter", "createdAt": "2020-07-26T19:06:27Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/e3dc-strings-channel-types.xml", "diffHunk": "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<channel-type id=\"string1-dc-voltage-channel\">\n+\t\t<item-type>Number:ElectricPotential</item-type>\n+\t\t<label>String 1 Potential</label>\n+\t\t<description>Volt on String 1</description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwOTE0Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464009142", "bodyText": "Fixed in Readme and xmls - Voltage, Current and Power", "author": "weymann", "createdAt": "2020-08-01T23:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjE5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjI2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562269", "bodyText": "Do you left it empty by intention?", "author": "fwolter", "createdAt": "2020-07-26T19:07:08Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/e3dc-strings-channel-types.xml", "diffHunk": "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<channel-type id=\"string1-dc-voltage-channel\">\n+\t\t<item-type>Number:ElectricPotential</item-type>\n+\t\t<label>String 1 Potential</label>\n+\t\t<description>Volt on String 1</description>\n+\t</channel-type>\n+\t<channel-type id=\"string2-dc-voltage-channel\">\n+\t\t<item-type>Number:ElectricPotential</item-type>\n+\t\t<label>String 2 Potential</label>\n+\t\t<description>Volt on String 2</description>\n+\t</channel-type>\n+\t<channel-type id=\"string3-dc-voltage-channel\">\n+\t\t<item-type>Number:ElectricPotential</item-type>\n+\t\t<label>String 3 Potential</label>\n+\t\t<description>Volt on String 3</description>\n+\t</channel-type>\n+\t<channel-type id=\"string1-dc-current-channel\">\n+\t\t<item-type>Number:ElectricCurrent</item-type>\n+\t\t<label>String 1 Current</label>\n+\t\t<description>Ampere on String 1</description>\n+\t</channel-type>\n+\t<channel-type id=\"string2-dc-current-channel\">\n+\t\t<item-type>Number:ElectricCurrent</item-type>\n+\t\t<label>String 2 Current</label>\n+\t\t<description>Ampere on String 2</description>\n+\t</channel-type>\n+\t<channel-type id=\"string3-dc-current-channel\">\n+\t\t<item-type>Number:ElectricCurrent</item-type>\n+\t\t<label>String 3 Current</label>\n+\t\t<description>Ampere on String 3</description>\n+\t</channel-type>\n+\t<channel-type id=\"string1-dc-output-channel\">\n+\t\t<item-type>Number:Power</item-type>\n+\t\t<label>String 1 Power</label>\n+\t\t<description></description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwOTExMA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464009110", "bodyText": "No - fixed", "author": "weymann", "createdAt": "2020-08-01T23:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjI2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjMwOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562309", "bodyText": "Is the asterisk inteded?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<description>Indicates your Jack is locked*</description>\n          \n          \n            \n            \t\t<description>Indicates whether your Jack is locked*</description>", "author": "fwolter", "createdAt": "2020-07-26T19:07:44Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/e3dc-wallbox-channel-types.xml", "diffHunk": "@@ -0,0 +1,71 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<channel-type id=\"wb-available-channel\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Wallbox Available</label>\n+\t\t<description>Indicates if the Wallbox is attached. Check your Wallbox ID in offline case</description>\n+\t</channel-type>\n+\t<channel-type id=\"wb-sunmode-channel\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sun Mode</label>\n+\t\t<description>Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging</description>\n+\t</channel-type>\n+\t<channel-type id=\"wb-charging-aborted-channel\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Wallbox Charging Aborted</label>\n+\t\t<description>Indicates if Wallbox charging was aborted</description>\n+\t</channel-type>\n+\t<channel-type id=\"wb-charging-channel\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Wallbox Charging</label>\n+\t\t<description>Indicates your Wallbox is charging</description>\n+\t</channel-type>\n+\t<channel-type id=\"wb-jack-locked-channel\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Jack Locked</label>\n+\t\t<description>Indicates your Jack is locked*</description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwODg4Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464008886", "bodyText": "no - fixed", "author": "weymann", "createdAt": "2020-08-01T23:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjMwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjQxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562415", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<description>Provides detailed values of your attached Photovoltaik Strings. Evaluate how much Power each String\n          \n          \n            \n            \t\t<description>Provides detailed values of your attached Photovoltaic Strings. Evaluate how much Power each String", "author": "fwolter", "createdAt": "2020-07-26T19:09:03Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/thing-e3dc-strings.xml", "diffHunk": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<thing-type id=\"e3dc-strings\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"e3dc-device\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>E3DC String Details Block</label>\n+\t\t<description>Provides detailed values of your attached Photovoltaik Strings. Evaluate how much Power each String", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwODE2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464008166", "bodyText": "Now it's a Channel Group - fixed", "author": "weymann", "createdAt": "2020-08-01T22:52:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjQ1OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562459", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tprovide</description>\n          \n          \n            \n            \t\t\tprovides</description>", "author": "fwolter", "createdAt": "2020-07-26T19:09:32Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/thing-e3dc-strings.xml", "diffHunk": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<thing-type id=\"e3dc-strings\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"e3dc-device\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>E3DC String Details Block</label>\n+\t\t<description>Provides detailed values of your attached Photovoltaik Strings. Evaluate how much Power each String\n+\t\t\tprovide</description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwODU4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464008587", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T22:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjQ5NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562495", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<description>Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed!</description>\n          \n          \n            \n            \t\t<description>Provide your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed!</description>", "author": "fwolter", "createdAt": "2020-07-26T19:09:53Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/thing-e3dc-wallbox.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<thing-type id=\"e3dc-wallbox\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"e3dc-device\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>E3DC Wallbox Control Block</label>\n+\t\t<description>Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed!</description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwODUxNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464008516", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T22:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjQ5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjU4MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562581", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t<description>E3DC supports up to 8 Wallboxes - selected value from 0 to 7</description>\n          \n          \n            \n            \t\t\t\t<description>E3DC supports up to 8 Wallboxes - select a value from 0 to 7</description>", "author": "fwolter", "createdAt": "2020-07-26T19:10:30Z", "path": "bundles/org.openhab.binding.e3dc/src/main/resources/ESH-INF/thing/thing-e3dc-wallbox.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"e3dc\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<thing-type id=\"e3dc-wallbox\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"e3dc-device\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>E3DC Wallbox Control Block</label>\n+\t\t<description>Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed!</description>\n+\t\t<channels>\n+\t\t\t<channel id=\"wb-available\" typeId=\"wb-available-channel\"/>\n+\t\t\t<channel id=\"wb-sunmode\" typeId=\"wb-sunmode-channel\"/>\n+\t\t\t<channel id=\"wb-charging-aborted\" typeId=\"wb-charging-aborted-channel\"/>\n+\t\t\t<channel id=\"wb-charging\" typeId=\"wb-charging-channel\"/>\n+\t\t\t<channel id=\"wb-jack-locked\" typeId=\"wb-jack-locked-channel\"/>\n+\t\t\t<channel id=\"wb-jack-plugged\" typeId=\"wb-jack-plugged-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-on\" typeId=\"wb-schuko-on-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-plugged\" typeId=\"wb-schuko-plugged-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-locked\" typeId=\"wb-schuko-locked-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-relay-16a\" typeId=\"wb-schuko-relay-16a-channel\"/>\n+\t\t\t<channel id=\"wb-relay-16a\" typeId=\"wb-relay-16a-channel\"/>\n+\t\t\t<channel id=\"wb-relay-32a\" typeId=\"wb-relay-32a-channel\"/>\n+\t\t\t<channel id=\"wb-1phase\" typeId=\"wb-1phase-channel\"/>\n+\t\t</channels>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"wallboxId\" type=\"integer\" required=\"true\">\n+\t\t\t\t<label>Wallbox ID</label>\n+\t\t\t\t<description>E3DC supports up to 8 Wallboxes - selected value from 0 to 7</description>", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwODI0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464008247", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-01T22:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjkzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r460562939", "bodyText": "What's your intention by making this synchronized? The callback is set before initialize() is invoked.", "author": "fwolter", "createdAt": "2020-07-26T19:14:38Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/BaseHandler.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingUID;\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\n+import org.eclipse.smarthome.core.thing.binding.BridgeHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandlerCallback;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.DataListener;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link BaseHandler} Basic Handler for all things\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public abstract class BaseHandler extends BaseThingHandler implements DataListener {\n+    private final Logger logger = LoggerFactory.getLogger(BaseHandler.class);\n+    private @Nullable ThingHandlerCallback thingHandlerCallback;\n+    private @Nullable ModbusDataProvider modbusDataProvider;\n+\n+    // Unit test purposes - check if dataAvailable callback was successful\n+    public boolean isUpdated = false;\n+    public boolean isInitialized = false;\n+\n+    public BaseHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    public void initialize(DataType t) {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        scheduler.execute(() -> {\n+            Bridge b = getBridge();\n+            if (b != null) {\n+                BridgeHandler bridgeHandler = b.getHandler();\n+                if (bridgeHandler != null) {\n+                    if (t.equals(DataType.INFO)) {\n+                        ModbusDataProvider localModbusDataProvider = ((E3DCDeviceThingHandler) bridgeHandler)\n+                                .getInfoDataProvider();\n+                        modbusDataProvider = localModbusDataProvider;\n+                        localModbusDataProvider.addDataListener(this);\n+                        updateStatus(ThingStatus.ONLINE);\n+                    } else if (t.equals(DataType.DATA)) {\n+                        ModbusDataProvider localModbusDataProvider = ((E3DCDeviceThingHandler) bridgeHandler)\n+                                .getDataProvider();\n+                        modbusDataProvider = localModbusDataProvider;\n+                        localModbusDataProvider.addDataListener(this);\n+                        updateStatus(ThingStatus.ONLINE);\n+                    }\n+                } else {\n+                    logger.warn(\"BridgeHandler not found\");\n+                }\n+            } else {\n+                logger.warn(\"Bridge not found\");\n+            }\n+            isInitialized = true;\n+        });\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        ModbusDataProvider localModbusDataProvider = modbusDataProvider;\n+        if (localModbusDataProvider != null) {\n+            localModbusDataProvider.removeDataListener(this);\n+        }\n+    }\n+\n+    @Override\n+    public void setCallback(@Nullable ThingHandlerCallback thingHandlerCallback) {\n+        super.setCallback(thingHandlerCallback);\n+        this.thingHandlerCallback = thingHandlerCallback;\n+        // logger.info(\"ThingCallbackHandler received {}\", thingHandlerCallback);\n+    }\n+\n+    @Override\n+    public @Nullable Bridge getBridge() {\n+        ThingUID bridgeUID = thing.getBridgeUID();\n+        synchronized (this) {", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDAwODQzMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464008432", "bodyText": "Obsolete due to Modbus rework", "author": "weymann", "createdAt": "2020-08-01T22:56:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2MjkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMTk4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r461021983", "bodyText": "In case you decide not to follow my recommendation of reusing tcp/serial things from the modbus binding, you need to ensure yourself that ModbusCommunicationInterface is closed. This is normally done by the endpoint thing: https://github.com/openhab/openhab-addons/blob/2.5.x/bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/internal/handler/AbstractModbusEndpointThingHandler.java#L98", "author": "ssalonen", "createdAt": "2020-07-27T16:39:23Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCDeviceThingHandler.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCDeviceConfiguration;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.DataListener;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusCallback;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusWriteResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusManager;\n+import org.openhab.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteCallback;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusWriteRequestBlueprint;\n+import org.openhab.io.transport.modbus.PollTask;\n+import org.openhab.io.transport.modbus.endpoint.ModbusTCPSlaveEndpoint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCDeviceThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCDeviceThingHandler extends BaseBridgeHandler\n+        implements DataListener, ModbusWriteCallback, ModbusFailureCallback<ModbusWriteRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCDeviceThingHandler.class);\n+    private ModbusManager modbusManagerRef;\n+    private final ModbusCallback modbusInfoCallback = new ModbusCallback(DataType.INFO);\n+    private final ModbusCallback modbusDataCallback = new ModbusCallback(DataType.DATA);\n+    private ThingStatus myStatus = ThingStatus.UNKNOWN;\n+    private @Nullable ModbusCommunicationInterface modbusCom;\n+    private @Nullable PollTask infoPoller;\n+    private @Nullable PollTask dataPoller;\n+    private @Nullable E3DCDeviceConfiguration config;\n+\n+    public E3DCDeviceThingHandler(Bridge bridge, ModbusManager ref) {\n+        super(bridge);\n+        modbusManagerRef = ref;\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        setStatus(ThingStatus.UNKNOWN);\n+        // Example for background initialization:\n+        scheduler.execute(() -> {\n+            config = getConfigAs(E3DCDeviceConfiguration.class);\n+            E3DCDeviceConfiguration localConfig = config;\n+            if (localConfig != null && checkConfig(localConfig)) {\n+                ModbusTCPSlaveEndpoint slaveEndpoint = new ModbusTCPSlaveEndpoint(localConfig.host, localConfig.port);\n+\n+                ModbusCommunicationInterface localModbusCom = modbusManagerRef.newModbusCommunicationInterface(\n+                        slaveEndpoint, modbusManagerRef.getEndpointPoolConfiguration(slaveEndpoint));\n+                // register low speed info poller\n+                ModbusReadRequestBlueprint infoRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, INFO_REG_START, INFO_REG_SIZE, 3);\n+                infoPoller = localModbusCom.registerRegularPoll(infoRequest, INFO_POLL_REFRESH_TIME_MS, 0,\n+                        modbusInfoCallback, modbusInfoCallback);\n+\n+                ModbusReadRequestBlueprint dataRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, POWER_REG_START,\n+                        REGISTER_LENGTH - INFO_REG_SIZE, 3);\n+                dataPoller = localModbusCom.registerRegularPoll(dataRequest, localConfig.refresh, 0, modbusDataCallback,\n+                        modbusDataCallback);\n+                modbusCom = localModbusCom;\n+                // listen for data to get ONLINE\n+                modbusDataCallback.addDataListener(this);\n+            } else {\n+                setStatus(ThingStatus.OFFLINE);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void dispose() {", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyMTM3OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464121379", "bodyText": "Obsolete due to change towards Modbus binding", "author": "weymann", "createdAt": "2020-08-02T20:41:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMTk4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMjQzOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r461022438", "bodyText": "error essentially ignored -- would you not want to change thing status?", "author": "ssalonen", "createdAt": "2020-07-27T16:40:09Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/handler/E3DCDeviceThingHandler.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.handler;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.e3dc.internal.E3DCDeviceConfiguration;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.e3dc.internal.modbus.DataListener;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusCallback;\n+import org.openhab.binding.e3dc.internal.modbus.ModbusDataProvider;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusWriteResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusManager;\n+import org.openhab.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteCallback;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusWriteRequestBlueprint;\n+import org.openhab.io.transport.modbus.PollTask;\n+import org.openhab.io.transport.modbus.endpoint.ModbusTCPSlaveEndpoint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCDeviceThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCDeviceThingHandler extends BaseBridgeHandler\n+        implements DataListener, ModbusWriteCallback, ModbusFailureCallback<ModbusWriteRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(E3DCDeviceThingHandler.class);\n+    private ModbusManager modbusManagerRef;\n+    private final ModbusCallback modbusInfoCallback = new ModbusCallback(DataType.INFO);\n+    private final ModbusCallback modbusDataCallback = new ModbusCallback(DataType.DATA);\n+    private ThingStatus myStatus = ThingStatus.UNKNOWN;\n+    private @Nullable ModbusCommunicationInterface modbusCom;\n+    private @Nullable PollTask infoPoller;\n+    private @Nullable PollTask dataPoller;\n+    private @Nullable E3DCDeviceConfiguration config;\n+\n+    public E3DCDeviceThingHandler(Bridge bridge, ModbusManager ref) {\n+        super(bridge);\n+        modbusManagerRef = ref;\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        setStatus(ThingStatus.UNKNOWN);\n+        // Example for background initialization:\n+        scheduler.execute(() -> {\n+            config = getConfigAs(E3DCDeviceConfiguration.class);\n+            E3DCDeviceConfiguration localConfig = config;\n+            if (localConfig != null && checkConfig(localConfig)) {\n+                ModbusTCPSlaveEndpoint slaveEndpoint = new ModbusTCPSlaveEndpoint(localConfig.host, localConfig.port);\n+\n+                ModbusCommunicationInterface localModbusCom = modbusManagerRef.newModbusCommunicationInterface(\n+                        slaveEndpoint, modbusManagerRef.getEndpointPoolConfiguration(slaveEndpoint));\n+                // register low speed info poller\n+                ModbusReadRequestBlueprint infoRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, INFO_REG_START, INFO_REG_SIZE, 3);\n+                infoPoller = localModbusCom.registerRegularPoll(infoRequest, INFO_POLL_REFRESH_TIME_MS, 0,\n+                        modbusInfoCallback, modbusInfoCallback);\n+\n+                ModbusReadRequestBlueprint dataRequest = new ModbusReadRequestBlueprint(localConfig.deviceid,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, POWER_REG_START,\n+                        REGISTER_LENGTH - INFO_REG_SIZE, 3);\n+                dataPoller = localModbusCom.registerRegularPoll(dataRequest, localConfig.refresh, 0, modbusDataCallback,\n+                        modbusDataCallback);\n+                modbusCom = localModbusCom;\n+                // listen for data to get ONLINE\n+                modbusDataCallback.addDataListener(this);\n+            } else {\n+                setStatus(ThingStatus.OFFLINE);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        modbusDataCallback.removeDataListener(this);\n+        ModbusCommunicationInterface localCom = modbusCom;\n+        if (localCom != null) {\n+            PollTask localInfoPoller = infoPoller;\n+            if (localInfoPoller != null) {\n+                localCom.unregisterRegularPoll(localInfoPoller);\n+            }\n+            PollTask localDataPoller = dataPoller;\n+            if (localDataPoller != null) {\n+                localCom.unregisterRegularPoll(localDataPoller);\n+            }\n+        }\n+    }\n+\n+    private boolean checkConfig(@Nullable E3DCDeviceConfiguration c) {\n+        if (c != null) {\n+            if (c.port > 1) {\n+                if (c.refresh < 1) {\n+                    c.refresh = 2;\n+                }\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private void setStatus(ThingStatus status) {\n+        myStatus = status;\n+        updateStatus(myStatus);\n+    }\n+\n+    /**\n+     * Wallbox Settings can be changed with one Integer\n+     *\n+     * @param wallboxId needed to calculate right register\n+     * @param writeValue integer to be written\n+     */\n+    public void wallboxSet(int wallboxId, int writeValue) {\n+        E3DCDeviceConfiguration localConfig = config;\n+        ModbusCommunicationInterface localCom = modbusCom;\n+        if (localConfig != null && localCom != null) {\n+            ModbusRegisterArray regArray = new ModbusRegisterArray(writeValue);\n+            ModbusWriteRegisterRequestBlueprint writeBluePrint = new ModbusWriteRegisterRequestBlueprint(\n+                    localConfig.deviceid, WALLBOX_REG_START + wallboxId, regArray, false, 3);\n+            localCom.submitOneTimeWrite(writeBluePrint, this, this);\n+        }\n+    }\n+\n+    @Override\n+    public void dataAvailable(ModbusDataProvider provider) {\n+        if (myStatus != ThingStatus.ONLINE) {\n+            setStatus(ThingStatus.ONLINE);\n+        }\n+    }\n+\n+    public ModbusDataProvider getInfoDataProvider() {\n+        return modbusInfoCallback;\n+    }\n+\n+    public ModbusDataProvider getDataProvider() {\n+        return modbusDataCallback;\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusWriteResult result) {\n+        logger.debug(\"E3DC Modbus write response! {}\", result.getResponse().toString());\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusFailure<ModbusWriteRequestBlueprint> failure) {", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyMTkwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464121906", "bodyText": "Error handling is completely reworked", "author": "weymann", "createdAt": "2020-08-02T20:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMjQzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMzM1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r461023351", "bodyText": "errors just logged -- would you not want to change thing status?", "author": "ssalonen", "createdAt": "2020-07-27T16:41:35Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/modbus/ModbusCallback.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.modbus;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusReadCallback;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegister;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link InfoBlockCallback} class receives callbacks from modbus poller\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ModbusCallback extends ModbusDataProvider\n+        implements ModbusReadCallback, ModbusFailureCallback<ModbusReadRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(ModbusCallback.class);\n+    private DataType callbackType;\n+    private byte[] bArray;\n+    private int size;\n+    private int counter = 0;\n+    private long maxDuration = Long.MIN_VALUE;\n+    private long minDuration = Long.MAX_VALUE;\n+    private long avgDuration = 0;\n+\n+    public ModbusCallback(DataType type) {\n+        callbackType = type;\n+        if (type.equals(DataType.INFO)) {\n+            size = INFO_REG_SIZE * 2;\n+            bArray = new byte[size];\n+        } else {\n+            size = (REGISTER_LENGTH - INFO_REG_SIZE) * 2;\n+            bArray = new byte[size];\n+        }\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusReadResult result) {\n+        byte[] newArray = new byte[size];\n+        long startTime = System.currentTimeMillis();\n+        Optional<ModbusRegisterArray> opt = result.getRegisters();\n+        ModbusRegisterArray registers = opt.get();\n+        Iterator<ModbusRegister> iter = registers.iterator();\n+        int i = 0;\n+        while (iter.hasNext()) {\n+            ModbusRegister reg = iter.next();\n+            System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n+            i += 2;\n+        }\n+        setArray(newArray);\n+\n+        long duration = System.currentTimeMillis() - startTime;\n+        avgDuration += duration;\n+        minDuration = Math.min(minDuration, duration);\n+        maxDuration = Math.max(maxDuration, duration);\n+        counter++;\n+        if (counter % 100 == 0) {\n+            logger.debug(\"Min {} Max {} Avg {}\", minDuration, maxDuration, avgDuration / 30);\n+            avgDuration = 0;\n+            minDuration = Long.MAX_VALUE;\n+            maxDuration = Long.MIN_VALUE;\n+        }\n+        // DataConverter.logArray(newArray);\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusFailure<ModbusReadRequestBlueprint> failure) {", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyMTM4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464121387", "bodyText": "Obsolete due to change towards Modbus binding", "author": "weymann", "createdAt": "2020-08-02T20:42:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMzM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyNjA3OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r461026079", "bodyText": "I am not sure when this callback is registered and what type of requests but opt.ifPresent(...) might be preferred to be on the safe side? (see e.g. sunspec: https://github.com/openhab/openhab-addons/blob/2.5.x/bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/handler/AbstractSunSpecHandler.java#L337)\nNon-register payload (e.g. coil data) will now crash with Optional.get since the Optional will be empty.", "author": "ssalonen", "createdAt": "2020-07-27T16:45:51Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/modbus/ModbusCallback.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.modbus;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusReadCallback;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegister;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link InfoBlockCallback} class receives callbacks from modbus poller\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ModbusCallback extends ModbusDataProvider\n+        implements ModbusReadCallback, ModbusFailureCallback<ModbusReadRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(ModbusCallback.class);\n+    private DataType callbackType;\n+    private byte[] bArray;\n+    private int size;\n+    private int counter = 0;\n+    private long maxDuration = Long.MIN_VALUE;\n+    private long minDuration = Long.MAX_VALUE;\n+    private long avgDuration = 0;\n+\n+    public ModbusCallback(DataType type) {\n+        callbackType = type;\n+        if (type.equals(DataType.INFO)) {\n+            size = INFO_REG_SIZE * 2;\n+            bArray = new byte[size];\n+        } else {\n+            size = (REGISTER_LENGTH - INFO_REG_SIZE) * 2;\n+            bArray = new byte[size];\n+        }\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusReadResult result) {\n+        byte[] newArray = new byte[size];\n+        long startTime = System.currentTimeMillis();\n+        Optional<ModbusRegisterArray> opt = result.getRegisters();\n+        ModbusRegisterArray registers = opt.get();", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyMTg0MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464121840", "bodyText": "Reworked due to change towards Modbus binding", "author": "weymann", "createdAt": "2020-08-02T20:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyNjA3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyOTIxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r461029219", "bodyText": "average calculated wrong? Should divide by 100?", "author": "ssalonen", "createdAt": "2020-07-27T16:50:51Z", "path": "bundles/org.openhab.binding.e3dc/src/main/java/org/openhab/binding/e3dc/internal/modbus/ModbusCallback.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.e3dc.internal.modbus;\n+\n+import static org.openhab.binding.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusFailureCallback;\n+import org.openhab.io.transport.modbus.ModbusReadCallback;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegister;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link InfoBlockCallback} class receives callbacks from modbus poller\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ModbusCallback extends ModbusDataProvider\n+        implements ModbusReadCallback, ModbusFailureCallback<ModbusReadRequestBlueprint> {\n+    private final Logger logger = LoggerFactory.getLogger(ModbusCallback.class);\n+    private DataType callbackType;\n+    private byte[] bArray;\n+    private int size;\n+    private int counter = 0;\n+    private long maxDuration = Long.MIN_VALUE;\n+    private long minDuration = Long.MAX_VALUE;\n+    private long avgDuration = 0;\n+\n+    public ModbusCallback(DataType type) {\n+        callbackType = type;\n+        if (type.equals(DataType.INFO)) {\n+            size = INFO_REG_SIZE * 2;\n+            bArray = new byte[size];\n+        } else {\n+            size = (REGISTER_LENGTH - INFO_REG_SIZE) * 2;\n+            bArray = new byte[size];\n+        }\n+    }\n+\n+    @Override\n+    public void handle(AsyncModbusReadResult result) {\n+        byte[] newArray = new byte[size];\n+        long startTime = System.currentTimeMillis();\n+        Optional<ModbusRegisterArray> opt = result.getRegisters();\n+        ModbusRegisterArray registers = opt.get();\n+        Iterator<ModbusRegister> iter = registers.iterator();\n+        int i = 0;\n+        while (iter.hasNext()) {\n+            ModbusRegister reg = iter.next();\n+            System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n+            i += 2;\n+        }\n+        setArray(newArray);\n+\n+        long duration = System.currentTimeMillis() - startTime;\n+        avgDuration += duration;\n+        minDuration = Math.min(minDuration, duration);\n+        maxDuration = Math.max(maxDuration, duration);\n+        counter++;\n+        if (counter % 100 == 0) {\n+            logger.debug(\"Min {} Max {} Avg {}\", minDuration, maxDuration, avgDuration / 30);", "originalCommit": "b02580340ff03a578347972283ec4db08858f86c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyMTY3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r464121676", "bodyText": "Sure, values changed while measuring and I forgot to update both values", "author": "weymann", "createdAt": "2020-08-02T20:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyOTIxOQ=="}], "type": "inlineReview"}, {"oid": "40540141677d2a0b306221b54d6b07d44f4ac967", "url": "https://github.com/openhab/openhab-addons/commit/40540141677d2a0b306221b54d6b07d44f4ac967", "message": "Initial commit\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:32Z", "type": "commit"}, {"oid": "2d74ef4468b72dcac8ac5af038a3e7a31166d6da", "url": "https://github.com/openhab/openhab-addons/commit/2d74ef4468b72dcac8ac5af038a3e7a31166d6da", "message": "Identification Block\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:32Z", "type": "commit"}, {"oid": "c951fd76745b2a7a5e301933db5fa8727199c88c", "url": "https://github.com/openhab/openhab-addons/commit/c951fd76745b2a7a5e301933db5fa8727199c88c", "message": "Add modbus callback\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:32Z", "type": "commit"}, {"oid": "1fb6d038fc4183616be9256431b5e0f944910268", "url": "https://github.com/openhab/openhab-addons/commit/1fb6d038fc4183616be9256431b5e0f944910268", "message": "data handler withh callack\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:33Z", "type": "commit"}, {"oid": "ca45f263f7e29b54772090b6ae86a0dc259b1d47", "url": "https://github.com/openhab/openhab-addons/commit/ca45f263f7e29b54772090b6ae86a0dc259b1d47", "message": "reduce thing-types.xml to minimum\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:33Z", "type": "commit"}, {"oid": "3b11d280272c508a9ca954a995e5125ad56a7f74", "url": "https://github.com/openhab/openhab-addons/commit/3b11d280272c508a9ca954a995e5125ad56a7f74", "message": "add bridge implementation\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:34Z", "type": "commit"}, {"oid": "37e1dd87c4a93cfb43ae6a5600bc142a29718492", "url": "https://github.com/openhab/openhab-addons/commit/37e1dd87c4a93cfb43ae6a5600bc142a29718492", "message": "PowerBlock added\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:34Z", "type": "commit"}, {"oid": "4d76b37fcef1e6309cab7a38fcd8736d4f6caf94", "url": "https://github.com/openhab/openhab-addons/commit/4d76b37fcef1e6309cab7a38fcd8736d4f6caf94", "message": "added String details\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:34Z", "type": "commit"}, {"oid": "13ed9ae1c5df8a6a216f7cc06f26ad54a6ae8a94", "url": "https://github.com/openhab/openhab-addons/commit/13ed9ae1c5df8a6a216f7cc06f26ad54a6ae8a94", "message": "emergency block added\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:34Z", "type": "commit"}, {"oid": "0124c5088b4de5841cf57787cf1e4faca64df9ed", "url": "https://github.com/openhab/openhab-addons/commit/0124c5088b4de5841cf57787cf1e4faca64df9ed", "message": "added wallbox block\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:35Z", "type": "commit"}, {"oid": "e1acf9b9b60528f84626a81064d31f8172189d94", "url": "https://github.com/openhab/openhab-addons/commit/e1acf9b9b60528f84626a81064d31f8172189d94", "message": "split into info and data poller\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:35Z", "type": "commit"}, {"oid": "00db7ebbbd08978a92a29badcb4d49c201c305aa", "url": "https://github.com/openhab/openhab-addons/commit/00db7ebbbd08978a92a29badcb4d49c201c305aa", "message": "add more unit tests\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:36Z", "type": "commit"}, {"oid": "4b94047964fdcd299d34e3faeb9ef2a0c70374ca", "url": "https://github.com/openhab/openhab-addons/commit/4b94047964fdcd299d34e3faeb9ef2a0c70374ca", "message": "README.md initital version\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:36Z", "type": "commit"}, {"oid": "8d11851e9208da7f3876142f350039941c7ef664", "url": "https://github.com/openhab/openhab-addons/commit/8d11851e9208da7f3876142f350039941c7ef664", "message": "first description finished\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:36Z", "type": "commit"}, {"oid": "efed8b662ab0ccbfa6c1f33c0b96c4e8c7d8f30c", "url": "https://github.com/openhab/openhab-addons/commit/efed8b662ab0ccbfa6c1f33c0b96c4e8c7d8f30c", "message": "readme.md formatting corrections\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:36Z", "type": "commit"}, {"oid": "2e3e72671e0152ab3954ce5b4a11fe9563e35068", "url": "https://github.com/openhab/openhab-addons/commit/2e3e72671e0152ab3954ce5b4a11fe9563e35068", "message": "add link to e3dc modbus spec\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:37Z", "type": "commit"}, {"oid": "6a46de6aeb9f6ba15bc2525cd6e9ff7e1c9fa16a", "url": "https://github.com/openhab/openhab-addons/commit/6a46de6aeb9f6ba15bc2525cd6e9ff7e1c9fa16a", "message": "add link to e3dc modbus spec\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:37Z", "type": "commit"}, {"oid": "89d29aa1ae594fd2f32b78826b9bc4efb24eb535", "url": "https://github.com/openhab/openhab-addons/commit/89d29aa1ae594fd2f32b78826b9bc4efb24eb535", "message": "add link to e3dc modbus spec\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:37Z", "type": "commit"}, {"oid": "9be8c53b4ca7a10477b3f0085a9aed442c96815d", "url": "https://github.com/openhab/openhab-addons/commit/9be8c53b4ca7a10477b3f0085a9aed442c96815d", "message": "add link to e3dc modbus spec\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:37Z", "type": "commit"}, {"oid": "e1d9580478fa57cd7a574f1265aaebc225b39052", "url": "https://github.com/openhab/openhab-addons/commit/e1d9580478fa57cd7a574f1265aaebc225b39052", "message": "translation and small bugfixes\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:37Z", "type": "commit"}, {"oid": "f3b093a65a4c9ec9e9c31e6bca054d60d3b9e599", "url": "https://github.com/openhab/openhab-addons/commit/f3b093a65a4c9ec9e9c31e6bca054d60d3b9e599", "message": "Bugfix: WallboxControl\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:37Z", "type": "commit"}, {"oid": "7d0a22d5e29c1963563365d90ee8c7dcb681466f", "url": "https://github.com/openhab/openhab-addons/commit/7d0a22d5e29c1963563365d90ee8c7dcb681466f", "message": "readme.md\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:37Z", "type": "commit"}, {"oid": "85116aa83d029853e56fc5832d297f041e5a43ce", "url": "https://github.com/openhab/openhab-addons/commit/85116aa83d029853e56fc5832d297f041e5a43ce", "message": "readme.md\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:38Z", "type": "commit"}, {"oid": "c0b045f4b2dd9a7176d8fbd4cbdf45c75cfcd062", "url": "https://github.com/openhab/openhab-addons/commit/c0b045f4b2dd9a7176d8fbd4cbdf45c75cfcd062", "message": "readme.md\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:38Z", "type": "commit"}, {"oid": "ca42fda60568b51f52273d545bc1b7d63895d151", "url": "https://github.com/openhab/openhab-addons/commit/ca42fda60568b51f52273d545bc1b7d63895d151", "message": "readme.md\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:38Z", "type": "commit"}, {"oid": "80b3bd9d319df47621b2541e8bff0363e5ade2d4", "url": "https://github.com/openhab/openhab-addons/commit/80b3bd9d319df47621b2541e8bff0363e5ade2d4", "message": "add Infrastructure test\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:38Z", "type": "commit"}, {"oid": "9bb4bc3dff4bc3b361b1d65c94e7c342c28f7e96", "url": "https://github.com/openhab/openhab-addons/commit/9bb4bc3dff4bc3b361b1d65c94e7c342c28f7e96", "message": "add deviceid to config\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:38Z", "type": "commit"}, {"oid": "6cb16d1b6fe407a693c93ee73d45427ebd8a7b30", "url": "https://github.com/openhab/openhab-addons/commit/6cb16d1b6fe407a693c93ee73d45427ebd8a7b30", "message": "add codeowners entry\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:38Z", "type": "commit"}, {"oid": "e569ad919da0a0467e855a1f7eee3856033d25da", "url": "https://github.com/openhab/openhab-addons/commit/e569ad919da0a0467e855a1f7eee3856033d25da", "message": "moved modbus registers to constant plus refernce to E3DC Modbus spec\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:38Z", "type": "commit"}, {"oid": "fb1c875dde701e08388287e5d4b2dd0ad88a35f6", "url": "https://github.com/openhab/openhab-addons/commit/fb1c875dde701e08388287e5d4b2dd0ad88a35f6", "message": "added missing Wallbox Channels\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:39Z", "type": "commit"}, {"oid": "f65a06054d10acbce418df7570c0af9ddbfcf531", "url": "https://github.com/openhab/openhab-addons/commit/f65a06054d10acbce418df7570c0af9ddbfcf531", "message": "bugfix firmware channel\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:39Z", "type": "commit"}, {"oid": "1b480bd2536727e68e71f85c83e6fee76218f3ff", "url": "https://github.com/openhab/openhab-addons/commit/1b480bd2536727e68e71f85c83e6fee76218f3ff", "message": "move spec to non-distribute folder\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:41Z", "type": "commit"}, {"oid": "7dec66b8814cb7fbe00b15e76e56fbf28a024adc", "url": "https://github.com/openhab/openhab-addons/commit/7dec66b8814cb7fbe00b15e76e56fbf28a024adc", "message": "Image alignment\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:41Z", "type": "commit"}, {"oid": "bd9ed55b2e1746b1cb9c678033313474624e8bd9", "url": "https://github.com/openhab/openhab-addons/commit/bd9ed55b2e1746b1cb9c678033313474624e8bd9", "message": "remove unused screenshots\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:41Z", "type": "commit"}, {"oid": "f59f15bb7db9431aed91ea876ba969264422fa0d", "url": "https://github.com/openhab/openhab-addons/commit/f59f15bb7db9431aed91ea876ba969264422fa0d", "message": "Final readme.md adjustments\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:41Z", "type": "commit"}, {"oid": "23e7b50a14c339505287e7470aa05dd88454a978", "url": "https://github.com/openhab/openhab-addons/commit/23e7b50a14c339505287e7470aa05dd88454a978", "message": "adapt new to new Modbus Interface\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:41Z", "type": "commit"}, {"oid": "13b685917f1532473a545470349931b8c7d09bc7", "url": "https://github.com/openhab/openhab-addons/commit/13b685917f1532473a545470349931b8c7d09bc7", "message": "Fix mixup of Wallbox 3-phase and 1-phase loading\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:42Z", "type": "commit"}, {"oid": "47e6910e1d90799cb8aa0562101bcfb24def43bc", "url": "https://github.com/openhab/openhab-addons/commit/47e6910e1d90799cb8aa0562101bcfb24def43bc", "message": "Bugfix unit test\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:42Z", "type": "commit"}, {"oid": "98de03c24cdf6aafb8aed3e5bce85b5430842ea1", "url": "https://github.com/openhab/openhab-addons/commit/98de03c24cdf6aafb8aed3e5bce85b5430842ea1", "message": "preparation for next development cycle\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:42Z", "type": "commit"}, {"oid": "d16b7267de69e9c133c66568d19945eaf437ab88", "url": "https://github.com/openhab/openhab-addons/commit/d16b7267de69e9c133c66568d19945eaf437ab88", "message": "Remove nested Frames from sitemap\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:42Z", "type": "commit"}, {"oid": "231802c5421d28220101eeb14846cc3083ce9316", "url": "https://github.com/openhab/openhab-addons/commit/231802c5421d28220101eeb14846cc3083ce9316", "message": "e3dc modbus binding\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:42Z", "type": "commit"}, {"oid": "6845b5a6e4f5eb5ead486b4d626e87e15da39a65", "url": "https://github.com/openhab/openhab-addons/commit/6845b5a6e4f5eb5ead486b4d626e87e15da39a65", "message": "updated Thing status handling\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:43Z", "type": "commit"}, {"oid": "51176f1d4941d0cb29a0ebaf4acada495e2ea010", "url": "https://github.com/openhab/openhab-addons/commit/51176f1d4941d0cb29a0ebaf4acada495e2ea010", "message": "cleanup unit tests\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:43Z", "type": "commit"}, {"oid": "c81b19399c5f282406bcf594fd96286b02f08fca", "url": "https://github.com/openhab/openhab-addons/commit/c81b19399c5f282406bcf594fd96286b02f08fca", "message": "work on review comments - 1\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-01T22:24:43Z", "type": "commit"}, {"oid": "dd2a40de0147af23116e957c878046aafb5bb61e", "url": "https://github.com/openhab/openhab-addons/commit/dd2a40de0147af23116e957c878046aafb5bb61e", "message": "review comments part 2\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-02T17:43:39Z", "type": "commit"}, {"oid": "6d7b28be0059b34949ba81f6896b056650f988ef", "url": "https://github.com/openhab/openhab-addons/commit/6d7b28be0059b34949ba81f6896b056650f988ef", "message": "de translations\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-02T19:53:31Z", "type": "commit"}, {"oid": "72c79b099212206799874255ff7decafe756bd41", "url": "https://github.com/openhab/openhab-addons/commit/72c79b099212206799874255ff7decafe756bd41", "message": "utf8 translations\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-02T20:25:55Z", "type": "commit"}, {"oid": "8e0d23c40ebdfef9d20270c95820ee4230e36fe0", "url": "https://github.com/openhab/openhab-addons/commit/8e0d23c40ebdfef9d20270c95820ee4230e36fe0", "message": "translation labels begin upper case\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-02T20:57:15Z", "type": "commit"}, {"oid": "72e6a4a145ba756ded1e4965e25532bd85dfbafd", "url": "https://github.com/openhab/openhab-addons/commit/72e6a4a145ba756ded1e4965e25532bd85dfbafd", "message": "cross check de/en translations with Specification\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T09:53:38Z", "type": "commit"}, {"oid": "9b8ee0d6c6497e7d58ae57aec4bfb419d34b6484", "url": "https://github.com/openhab/openhab-addons/commit/9b8ee0d6c6497e7d58ae57aec4bfb419d34b6484", "message": "Bugfix: Spec states Ampere values needs a factor 0.01 correction\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T11:39:17Z", "type": "commit"}, {"oid": "f125adad66872a4ade00bed195986ef3b5dfe38f", "url": "https://github.com/openhab/openhab-addons/commit/f125adad66872a4ade00bed195986ef3b5dfe38f", "message": "Unit test for Handler Status updates\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T13:52:08Z", "type": "commit"}, {"oid": "d65cbdaefc9885ebbc9124492603565beadd5024", "url": "https://github.com/openhab/openhab-addons/commit/d65cbdaefc9885ebbc9124492603565beadd5024", "message": "Remove JUnit Test compiler warnings\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T14:11:37Z", "type": "commit"}, {"oid": "f8c3298d0bd95bee372aeb762e3226161fc232d3", "url": "https://github.com/openhab/openhab-addons/commit/f8c3298d0bd95bee372aeb762e3226161fc232d3", "message": "cross check readme.md and xml descriptions\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T14:28:43Z", "type": "commit"}, {"oid": "4b970aff3e33a92a3110b9e78c251a278220bb3d", "url": "https://github.com/openhab/openhab-addons/commit/4b970aff3e33a92a3110b9e78c251a278220bb3d", "message": "remove battery loading vs. charging inconsitencies\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T15:32:24Z", "type": "commit"}, {"oid": "3975c8f99cc26d23af2cd3e917fb84c421e6696c", "url": "https://github.com/openhab/openhab-addons/commit/3975c8f99cc26d23af2cd3e917fb84c421e6696c", "message": "ensure double values with 2 decimal places\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T15:46:40Z", "type": "commit"}, {"oid": "3975c8f99cc26d23af2cd3e917fb84c421e6696c", "url": "https://github.com/openhab/openhab-addons/commit/3975c8f99cc26d23af2cd3e917fb84c421e6696c", "message": "ensure double values with 2 decimal places\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T15:46:40Z", "type": "forcePushed"}, {"oid": "92ec14f36f40d5773867ddb8777f00a2e0a4340c", "url": "https://github.com/openhab/openhab-addons/commit/92ec14f36f40d5773867ddb8777f00a2e0a4340c", "message": "fix feature.xml\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-03T17:34:23Z", "type": "commit"}, {"oid": "af77ab05295023caba73cfd4be4f2a1582d14d38", "url": "https://github.com/openhab/openhab-addons/commit/af77ab05295023caba73cfd4be4f2a1582d14d38", "message": "feature.xml patch\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-04T14:59:02Z", "type": "commit"}, {"oid": "729cb879cf11dcb20f482af48a18a36f93916374", "url": "https://github.com/openhab/openhab-addons/commit/729cb879cf11dcb20f482af48a18a36f93916374", "message": "revert feature.xml patch\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-04T15:04:23Z", "type": "commit"}, {"oid": "e3090c03a460c45a2cb2693108b9c2bce4b99d4f", "url": "https://github.com/openhab/openhab-addons/commit/e3090c03a460c45a2cb2693108b9c2bce4b99d4f", "message": "change charset import\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-04T17:23:22Z", "type": "commit"}, {"oid": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "url": "https://github.com/openhab/openhab-addons/commit/cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "message": "change charset import\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-04T17:25:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3NDg5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465574897", "bodyText": "Typo", "author": "ssalonen", "createdAt": "2020-08-05T08:52:15Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/E3DCBindingConstants.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.thing.ThingTypeUID;\n+import org.openhab.binding.modbus.ModbusBindingConstants;\n+\n+/**\n+ * The {@link E3DCBindingConstants} class defines common constants, which are\n+ * used across the whole binding.\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCBindingConstants {\n+\n+    private static final String BINDING_ID = ModbusBindingConstants.BINDING_ID;\n+\n+    // Suppoerted Thing Types", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzNjM1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465836355", "bodyText": "Resolved", "author": "weymann", "createdAt": "2020-08-05T16:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3NDg5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3ODQyNw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465578427", "bodyText": "Typo in constant name", "author": "ssalonen", "createdAt": "2020-08-05T08:58:27Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/E3DCBindingConstants.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.thing.ThingTypeUID;\n+import org.openhab.binding.modbus.ModbusBindingConstants;\n+\n+/**\n+ * The {@link E3DCBindingConstants} class defines common constants, which are\n+ * used across the whole binding.\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCBindingConstants {\n+\n+    private static final String BINDING_ID = ModbusBindingConstants.BINDING_ID;\n+\n+    // Suppoerted Thing Types\n+    public static final ThingTypeUID THING_TYPE_E3DC = new ThingTypeUID(BINDING_ID, \"e3dc\");\n+    public static final ThingTypeUID THING_TYPE_E3DC_WALLBOX = new ThingTypeUID(BINDING_ID, \"e3dc-wallbox\");\n+\n+    // Channels for Info Block\n+    public static final String MODBUS_ID_CHANNEL = \"modbus-id\";\n+    public static final String MODBUS_FIRMWARE_CHANNEL = \"modbus-firmware\";\n+    public static final String SUPPORTED_REGSITERS_CHANNEL = \"supported-registers\";\n+    public static final String MANUFACTURER_NAME_CHANNEL = \"manufacturer-name\";\n+    public static final String MODEL_NAME_CHANNEL = \"model-name\";\n+    public static final String SERIAL_NUMBER_CHANNEL = \"serial-number\";\n+    public static final String FIRMWARE_RELEASE_CHANNEL = \"firmware-release\";\n+\n+    // Channels for Power Block\n+    public static final String PV_POWER_SUPPLY_CHANNEL = \"pv-power-supply\";\n+    public static final String BATTERY_POWER_SUPPLY_CHANNEL = \"battery-power-supply\";\n+    public static final String BATTERY_POWER_CONSUMPTION = \"battery-power-consumption\";\n+    public static final String HOUSEHOLD_POWER_CONSUMPTION_CHANNEL = \"household-power-consumption\";\n+    public static final String GRID_POWER_CONSUMPTION_CHANNEL = \"grid-power-consumption\";\n+    public static final String GRID_POWER_SUPPLY_CHANNEL = \"grid-power-supply\";\n+    public static final String EXTERNAL_POWER_SUPPLY_CHANNEL = \"external-power-supply\";\n+    public static final String WALLBOX_POWER_CONSUMPTION_CHANNEL = \"wallbox-power-consumption\";\n+    public static final String WALLBOX_PV_POWER_CONSUMPTION_CHANNEL = \"wallbox-pv-power-consumption\";\n+    public static final String AUTARKY = \"autarky\";\n+    public static final String SELF_CONSUMPTION = \"self-consumption\";\n+    public static final String BATTERY_STATE_OF_CHARGE_CHANNEL = \"battery-soc\";\n+\n+    // Channels for Wallbox Block\n+    public static final String WB_AVAILABLE_CHANNEL = \"wb-available\";\n+    public static final String WB_SUNMODE_CHANNEL = \"wb-sunmode\";\n+    public static final String WB_CHARGING_ABORTED_CHANNEL = \"wb-charging-aborted\";\n+    public static final String WB_CHARGING_CHANNEL = \"wb-charging\";\n+    public static final String WB_JACK_LOCKED_CHANNEL = \"wb-jack-locked\";\n+    public static final String WB_JACK_PLUGGED_CHANNEL = \"wb-jack-plugged\";\n+    public static final String WB_SCHUKO_ON_CHANNEL = \"wb-schuko-on\";\n+    public static final String WB_SCHUKO_PLUGGED_CHANNEL = \"wb-schuko-plugged\";\n+    public static final String WB_SCHUKO_LOCKED_CHANNEL = \"wb-schuko-locked\";\n+    public static final String WB_SCHUKO_REALY_16A_CHANNEL = \"wb-schuko-relay-16a\";\n+    public static final String WB_REALY_16A_CHANNEL = \"wb-relay-16a\";", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0MjkxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465842919", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-05T16:14:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3ODQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3ODcwOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465578708", "bodyText": "Interval", "author": "ssalonen", "createdAt": "2020-08-05T08:58:57Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/E3DCConfiguration.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link E3DCConfiguration} class contains fields mapping thing configuration parameters.\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCConfiguration {\n+\n+    /**\n+     * Data refresh intervall", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0MzU4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465843585", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-05T16:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3ODcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3OTA3Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465579072", "bodyText": "Add NonnullByDefault", "author": "ssalonen", "createdAt": "2020-08-05T08:59:33Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.BitSet;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class DataConverter {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk0MTA5OA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465941098", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-05T19:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3OTA3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzMzNw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465583337", "bodyText": "NonnullByDefault", "author": "ssalonen", "createdAt": "2020-08-05T09:06:50Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/EmergencyBlock.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.nio.ByteBuffer;\n+import java.util.BitSet;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.StringType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link EmergencyBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class EmergencyBlock implements Data {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0ODk2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465848966", "bodyText": "Hmm, curious. Normally during maven build this highlighted each time. Added all NoNullBy Default annotations in dto package.", "author": "weymann", "createdAt": "2020-08-05T16:23:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzMzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwNjAwOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466206009", "bodyText": "Ah dto! Those can be without null annotations actually. They are not even checked in the static code analysis", "author": "ssalonen", "createdAt": "2020-08-06T07:39:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzMzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzUxNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465583516", "bodyText": "NonnullByDefault", "author": "ssalonen", "createdAt": "2020-08-05T09:07:09Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/InfoBlock.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.StringType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link InfoBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class InfoBlock implements Data {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0OTM5NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465849394", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-05T16:24:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzUxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzkxNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465583916", "bodyText": "NonnullByDefault", "author": "ssalonen", "createdAt": "2020-08-05T09:07:52Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/PowerBlock.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+\n+import javax.measure.quantity.Dimensionless;\n+import javax.measure.quantity.Power;\n+\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link PowerBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class PowerBlock implements Data {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0OTczMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465849731", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-05T16:24:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDIzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465584239", "bodyText": "NonnullByDefault", "author": "ssalonen", "createdAt": "2020-08-05T09:08:31Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/StringBlock.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+\n+import javax.measure.quantity.ElectricCurrent;\n+import javax.measure.quantity.ElectricPotential;\n+import javax.measure.quantity.Power;\n+\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link StringBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class StringBlock implements Data {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1MDAzMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465850031", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-05T16:25:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDIzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDQwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465584405", "bodyText": "NonnullByDefault", "author": "ssalonen", "createdAt": "2020-08-05T09:08:46Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/WallboxArray.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link WallboxArray} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class WallboxArray implements Data {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1MDQwMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465850402", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-05T16:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDgwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465584806", "bodyText": "NonnullByDefault", "author": "ssalonen", "createdAt": "2020-08-05T09:09:28Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/WallboxBlock.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link WallboxBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+public class WallboxBlock implements Data {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1MDg2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465850861", "bodyText": "fixed", "author": "weymann", "createdAt": "2020-08-05T16:26:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDgwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MDg1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465590851", "bodyText": "Small suggestion : utilize OptionalInt instead of the \"magic value\" -1", "author": "ssalonen", "createdAt": "2020-08-05T09:19:59Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/handler/E3DCWallboxThingHandler.java", "diffHunk": "@@ -0,0 +1,233 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.handler;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.modbus.e3dc.internal.E3DCWallboxConfiguration;\n+import org.openhab.binding.modbus.e3dc.internal.dto.DataConverter;\n+import org.openhab.binding.modbus.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.modbus.e3dc.internal.dto.WallboxBlock;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Parser;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCWallboxThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCWallboxThingHandler extends BaseThingHandler {\n+    public enum ReadWriteSuccess {\n+        NOT_RECEIVED,\n+        SUCCESS,\n+        FAILED\n+    }\n+\n+    private static final String READ_WRITE_ERROR = \"Modbus Data Read/Write Error\";\n+    private static final String READ_ERROR = \"Modbus Read Error\";\n+    private static final String WRITE_ERROR = \"Modbus Write Error\";\n+\n+    private final Logger logger = LoggerFactory.getLogger(E3DCWallboxThingHandler.class);\n+    private final Parser dataParser = new Parser(DataType.DATA);\n+    private ReadWriteSuccess dataRead = ReadWriteSuccess.NOT_RECEIVED;\n+    private ReadWriteSuccess dataWrite = ReadWriteSuccess.NOT_RECEIVED;\n+    private volatile BitSet currentBitSet = new BitSet(16);\n+    private @Nullable E3DCWallboxConfiguration config;\n+    private @Nullable E3DCThingHandler bridgeHandler;\n+\n+    public E3DCWallboxThingHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        scheduler.execute(() -> {\n+            config = getConfigAs(E3DCWallboxConfiguration.class);\n+            Bridge bridge = getBridge();\n+            if (bridge != null) {\n+                ThingHandler handler = bridge.getHandler();\n+                if (handler != null) {\n+                    bridgeHandler = ((E3DCThingHandler) handler);\n+                } else {\n+                    logger.warn(\"Thing Handler null\");\n+                }\n+            } else {\n+                logger.warn(\"Bridge null\");\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void dispose() {\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        if (command instanceof OnOffType) {\n+            int writeValue = 0;\n+            synchronized (this) {\n+                if (channelUID.getIdWithoutGroup().equals(WB_SUNMODE_CHANNEL)) {\n+                    currentBitSet.set(WB_SUNMODE_BIT, command.equals(OnOffType.ON));\n+                } else if (channelUID.getIdWithoutGroup().equals(WB_CHARGING_ABORTED_CHANNEL)) {\n+                    currentBitSet.set(WB_CHARGING_ABORTED_BIT, command.equals(OnOffType.ON));\n+                } else if (channelUID.getIdWithoutGroup().equals(WB_SCHUKO_ON_CHANNEL)) {\n+                    currentBitSet.set(WB_SCHUKO_ON_BIT, command.equals(OnOffType.ON));\n+                } else if (channelUID.getIdWithoutGroup().equals(WB_1PHASE_CHANNEL)) {\n+                    currentBitSet.set(WB_1PHASE_BIT, command.equals(OnOffType.ON));\n+                }\n+                writeValue = DataConverter.toInt(currentBitSet);\n+                logger.debug(\"Wallbox write {}\", writeValue);\n+            }\n+            int wallboxId = getWallboxId(config);\n+            if (wallboxId != -1) {\n+                wallboxSet(wallboxId, writeValue);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Wallbox Settings can be changed with one Integer\n+     *\n+     * @param wallboxId needed to calculate right register\n+     * @param writeValue integer to be written\n+     */\n+    public void wallboxSet(int wallboxId, int writeValue) {\n+        E3DCThingHandler localBridgeHandler = bridgeHandler;\n+        if (localBridgeHandler != null) {\n+            ModbusCommunicationInterface comms = localBridgeHandler.getComms();\n+            if (comms != null) {\n+                ModbusRegisterArray regArray = new ModbusRegisterArray(writeValue);\n+                ModbusWriteRegisterRequestBlueprint writeBluePrint = new ModbusWriteRegisterRequestBlueprint(\n+                        localBridgeHandler.getSlaveId(), WALLBOX_REG_START + wallboxId, regArray, false, 3);\n+                comms.submitOneTimeWrite(writeBluePrint, result -> {\n+                    if (dataWrite != ReadWriteSuccess.SUCCESS) {\n+                        dataWrite = ReadWriteSuccess.SUCCESS;\n+                        updateStatus();\n+                    }\n+                    logger.debug(\"E3DC Modbus write response! {}\", result.getResponse().toString());\n+                }, failure -> {\n+                    if (dataWrite != ReadWriteSuccess.FAILED) {\n+                        dataWrite = ReadWriteSuccess.FAILED;\n+                        updateStatus();\n+                    }\n+                    logger.warn(\"E3DC Modbus write error! {}\", failure.getRequest().toString());\n+                });\n+            }\n+        }\n+    }\n+\n+    private int getWallboxId(@Nullable E3DCWallboxConfiguration c) {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2MzMyNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465863325", "bodyText": "Ok, changed return value and adapted function references", "author": "weymann", "createdAt": "2020-08-05T16:46:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MDg1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MTQxNw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465591417", "bodyText": "\ud83d\udc4d", "author": "ssalonen", "createdAt": "2020-08-05T09:20:59Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/modbus/E3DCModbusConstans.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.modbus;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link E3DCModbusConstans} Variables for register handling.\n+ * The numbers are taken from E3DC Modbus Spec Chapter 3.1 page 14 ff\n+ * Registers start from 0 (not 1!) so from the documented registers subtract 1\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCModbusConstans {\n+    // \"String\" registers at the beginning shall be read with very low frequency - 1 hour\n+    public static final int INFO_POLL_REFRESH_TIME_MS = 60 * 60 * 1000;\n+\n+    // Constants where a certain Block starts and block size. Note: General offset is -1 so INFO_REG from E3DC Modbus\n+    // Spec starts at 1 but it's Register 0!\n+    public static final int INFO_REG_START = 0;\n+    public static final int INFO_REG_SIZE = 67;\n+    public static final int POWER_REG_START = 67;\n+    public static final int POWER_REG_SIZE = 16;\n+    public static final int EMS_REG_START = 83;\n+    public static final int EMS_REG_SIZE = 2;\n+    public static final int WALLBOX_REG_START = 87;\n+    public static final int WALLBOX_REG_SIZE = 8;\n+    public static final int STRINGS_REG_START = 95;\n+    public static final int STRINGS_REG_SIZE = 9;\n+    public static final int REGISTER_LENGTH = 104;\n+\n+    /*\n+     * Some Registers are numbers but needs to be decoded into Bits\n+     */\n+\n+    // Wallbox Bit Definitions according to chapter 3.1.5 page 15", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1MTkyNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465851925", "bodyText": "Thanks - nothing to change, right?", "author": "weymann", "createdAt": "2020-08-05T16:28:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MTQxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwNjU5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466206597", "bodyText": "No... I like it how you reference the original spec. Makes maintenance more approacheable", "author": "ssalonen", "createdAt": "2020-08-06T07:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MTQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MjQzMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465592432", "bodyText": "Consider using Optional. Matter of taste I guess", "author": "ssalonen", "createdAt": "2020-08-05T09:22:47Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/modbus/Parser.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.modbus;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.modbus.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusRegister;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link InfoBlockCallback} class receives callbacks from modbus poller\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class Parser {\n+    private static final int MEASURE_COUNT = 100;\n+    private final Logger logger = LoggerFactory.getLogger(Parser.class);\n+    private DataType callbackType;\n+    private byte[] bArray;\n+    private int size;\n+    private int counter = 0;\n+    private long maxDuration = Long.MIN_VALUE;\n+    private long minDuration = Long.MAX_VALUE;\n+    private long avgDuration = 0;\n+\n+    public Parser(DataType type) {\n+        callbackType = type;\n+        if (type.equals(DataType.INFO)) {\n+            size = INFO_REG_SIZE * 2;\n+            bArray = new byte[size];\n+        } else {\n+            size = (REGISTER_LENGTH - INFO_REG_SIZE) * 2;\n+            bArray = new byte[size];\n+        }\n+    }\n+\n+    public void handle(AsyncModbusReadResult result) {\n+        byte[] newArray = new byte[size];\n+        long startTime = System.currentTimeMillis();\n+        Optional<ModbusRegisterArray> opt = result.getRegisters();\n+        if (opt.isPresent()) {\n+            ModbusRegisterArray registers = opt.get();\n+            int i = 0;\n+            for (ModbusRegister reg : registers) {\n+                System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n+                i += 2;\n+            }\n+            setArray(newArray);\n+\n+            long duration = System.currentTimeMillis() - startTime;\n+            avgDuration += duration;\n+            minDuration = Math.min(minDuration, duration);\n+            maxDuration = Math.max(maxDuration, duration);\n+            counter++;\n+            if (counter % MEASURE_COUNT == 0) {\n+                logger.debug(\"Min {} Max {} Avg {}\", minDuration, maxDuration, avgDuration / MEASURE_COUNT);\n+                avgDuration = 0;\n+                minDuration = Long.MAX_VALUE;\n+                maxDuration = Long.MIN_VALUE;\n+            }\n+        } else {\n+            logger.warn(\"Modbus read result doesn't return expected registers\");\n+        }\n+    }\n+\n+    public synchronized void setArray(byte[] b) {\n+        if (b.length != size) {\n+            logger.warn(\"Wrong byte size received. Should be {} but is {}. Data maybe corrupted!\", size, b.length);\n+        }\n+        bArray = b.clone();\n+    }\n+\n+    public @Nullable Data parse(DataType type) {", "originalCommit": "cb5a8a74d2e494f052883ef89f0c06dd8a27649f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzMzM4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r465933383", "bodyText": "No problem. To be honest I didn't know the Optional pattern before but it's quite nice to handle.\nWorking on this topic I observed that E3DCThingHandler creates the channelUIDs everytime on update. Seems that there are heavy String operations each time. I moved Channel creation towards the constructor - more code but should be more efficient. Please have a look on E3DCThingHandler", "author": "weymann", "createdAt": "2020-08-05T18:50:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MjQzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyNTMxOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466225319", "bodyText": "Yeah, it probably does make a difference since there are so many channels.\nBtw, behind the scenes (see Basethinghandler) similar thing might be happening with the wall box thing but there are less channels overall", "author": "ssalonen", "createdAt": "2020-08-06T08:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MjQzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3NjU3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467476573", "bodyText": "You're right. BasicTingHandler creates Channels also on each update - I didn't recognized this. I was just worried to create channels on the frequent Modbus updates and each time Channels are created. I'll correct also WallboxHandler in order to present a consistent implementation.", "author": "weymann", "createdAt": "2020-08-08T15:38:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MjQzMg=="}], "type": "inlineReview"}, {"oid": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "url": "https://github.com/openhab/openhab-addons/commit/9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "message": "review comment corrections\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-05T18:57:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0ODA4NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466648084", "bodyText": "You need to insert another linefeed after the img tag, otherwise the whole sentence will be interpreted as HTML and the link won't work. Same for below.", "author": "fwolter", "createdAt": "2020-08-06T19:48:46Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ3ODMxNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467478314", "bodyText": "Thanks for the hint - inserted extra line feed for all image references", "author": "weymann", "createdAt": "2020-08-08T15:57:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0ODA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0ODUyOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466648528", "bodyText": "Can you express this more abstract, since PaperUI will be replaced in OH3?", "author": "fwolter", "createdAt": "2020-08-06T19:49:32Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ4NTA5NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467485094", "bodyText": "Ok, would be nice to see how configuration looks like in OH3. Tried my best to describe this more abstract.", "author": "weymann", "createdAt": "2020-08-08T17:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0ODUyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0OTIzNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466649235", "bodyText": "Is the name correct?", "author": "fwolter", "createdAt": "2020-08-06T19:50:47Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant\n+\n+See chapter [Configuration](#thing-configuration) how to set them up in PaperUI or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Home Power Plant | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ4NTIyNw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467485227", "bodyText": "So sorry for this obvious error. Fixed", "author": "weymann", "createdAt": "2020-08-08T17:15:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0OTIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0OTU5NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466649594", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Add a \"Modbux TCP Slave\". IP-Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings\n          \n          \n            \n            1. Add a \"Modbus TCP Slave\". IP Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings", "author": "fwolter", "createdAt": "2020-08-06T19:51:24Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant\n+\n+See chapter [Configuration](#thing-configuration) how to set them up in PaperUI or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Home Power Plant | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+1. Add a \"Modbux TCP Slave\". IP-Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ4NTUzOA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467485538", "bodyText": "Sorry :( . Fixed", "author": "weymann", "createdAt": "2020-08-08T17:18:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0OTU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MDIzMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466650231", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. Now add an \"E3DC Home Power Plant\". Bridge is the previously created Modbus TCP Slave. The Power Plant provides 4 different Channel with all available information of your E3DC device.  \n          \n          \n            \n            2. Now add an \"E3DC Home Power Plant\". Bridge is the previously created Modbus TCP Slave. The Power Plant provides 4 different Channels with all available information of your E3DC device.", "author": "fwolter", "createdAt": "2020-08-06T19:52:40Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant\n+\n+See chapter [Configuration](#thing-configuration) how to set them up in PaperUI or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Home Power Plant | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+1. Add a \"Modbux TCP Slave\". IP-Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings\n+2. Now add an \"E3DC Home Power Plant\". Bridge is the previously created Modbus TCP Slave. The Power Plant provides 4 different Channel with all available information of your E3DC device.  ", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ4NjYyNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467486624", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-08T17:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MDIzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTQ4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466651483", "bodyText": "See https://www.openhab.org/docs/concepts/units-of-measurement.html#list-of-units\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | String 1 Potential    | strings          | string1-dc-voltage |  Number:Volt    | Voltage on String 1           |\n          \n          \n            \n            | String 1 Potential    | strings          | string1-dc-voltage |  Number:ElectricPotential    | Voltage on String 1           |", "author": "fwolter", "createdAt": "2020-08-06T19:55:15Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant\n+\n+See chapter [Configuration](#thing-configuration) how to set them up in PaperUI or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Home Power Plant | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+1. Add a \"Modbux TCP Slave\". IP-Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings\n+2. Now add an \"E3DC Home Power Plant\". Bridge is the previously created Modbus TCP Slave. The Power Plant provides 4 different Channel with all available information of your E3DC device.  \n+3. If you have a Wallbox attached add \"E3DC Wallbox\". Bridge is your attached E3DC Home Power Plant, mandatory configuration parameter is the Wallbox ID\n+\n+Check the [full example Things](#things) for manual setup.\n+\n+### Modbus TCP Slave \n+\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                               |\n+| port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1           |\n+\n+### E3DC Home Power Plant \n+\n+Select as Bridge your previously created Modbus TCP Slave.\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| refresh         | integer | Refresh Rate of E3DC values in Milliseconds                             |\n+\n+\n+### E3DC Wallbox\n+\n+Select as Bridge your previously created E3DC Home Power Plant.\n+\n+| Parameter       | Type    | Description                                                                 |           \n+|-----------------|---------|-----------------------------------------------------------------------------|\n+| wallboxId       | integer | E3DC supports up to 8 Wallboxes - select a value from 0 to 7                |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. For clustering 4 Channel Groups are used: \n+\n+### Channel Group _Information Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID          | Type   | Description                                       |\n+|-----------------------|------------------|---------------------|--------|---------------------------------------------------|\n+| Modbus-ID             | info             | modbus-id           | String | Modbus ID / Magic Byte of E3DC                    |\n+| Modbus Firmware       | info             | modbus-firmware     | String | Version of Modbus Firmware                        |\n+| Supported Registers   | info             | supported-registers | Number | Number of registers supported by Modbus           |\n+| Manufacturer Name     | info             | manufacturer-name   | String | Name of the Device Manufacturer                   |\n+| E3DC Model Name       | info             | model-name          | String | Name of the E3DC Model                            |\n+| E3DC Firmware Release | info             | firmware-release    | String | Firmware installed on this particular E3DC Device |\n+| E3DC Serial Number    | info             | serial-number       | String | Serial Number of this particular E3DC Device      |\n+\n+\n+### Channel Group _Power Block_\n+\n+| Channel Label                 |  Channel Group ID | Channel ID                   | Type                   | Description                  |\n+|-------------------------------|-------------------|------------------------------|------------------------|------------------------------|\n+| PV Output                     | power             | pv-power-supply              |  Number:Power          | Photovoltaic Power Production    |\n+| Battery Discharge             | power             | battery-power-supply         |  Number:Power          | Battery discharges and provides Power    |\n+| Battery Charge                | power             | battery-power-consumption    |  Number:Power          | Battery charges and consumes Power    |\n+| Household Consumption         | power             | household-power-consumption  |  Number:Power          | Household consuming Power    |\n+| Grid Power Consumption        | power             | grid-power-consumption       |  Number:Power          | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply             | power             | grid-power-supply            |  Number:Power          | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply         | power             | external-power-supply        |  Number:Power          | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption     | power             | wallbox-power-consumption    |  Number:Power          | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | power             | wallbox-pv-power-consumption |  Number:Power          | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky                       | power             | autarky-channel              |  Number:Dimensionless  | Your current Autarky Level    |\n+| Self Consumption              | power             | self-consumption             |  Number:Dimensionless  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge       | power             | battery-soc                  |  Number:Dimensionless  | Charge Level of your attached Battery    |\n+\n+\n+### Channel Group _String Details Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID         | Type            | Description                  |\n+|-----------------------|------------------|--------------------|-----------------|------------------------------|\n+| String 1 Potential    | strings          | string1-dc-voltage |  Number:Volt    | Voltage on String 1           |", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ4NjkzMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467486933", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-08T17:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTQ4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTY1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466651656", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | String 1 Current      | strings          | string1-dc-current |  Number:Ampere  | Current on String 1       |\n          \n          \n            \n            | String 1 Current      | strings          | string1-dc-current |  Number:ElectricCurrent  | Current on String 1       |", "author": "fwolter", "createdAt": "2020-08-06T19:55:35Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant\n+\n+See chapter [Configuration](#thing-configuration) how to set them up in PaperUI or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Home Power Plant | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+1. Add a \"Modbux TCP Slave\". IP-Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings\n+2. Now add an \"E3DC Home Power Plant\". Bridge is the previously created Modbus TCP Slave. The Power Plant provides 4 different Channel with all available information of your E3DC device.  \n+3. If you have a Wallbox attached add \"E3DC Wallbox\". Bridge is your attached E3DC Home Power Plant, mandatory configuration parameter is the Wallbox ID\n+\n+Check the [full example Things](#things) for manual setup.\n+\n+### Modbus TCP Slave \n+\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                               |\n+| port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1           |\n+\n+### E3DC Home Power Plant \n+\n+Select as Bridge your previously created Modbus TCP Slave.\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| refresh         | integer | Refresh Rate of E3DC values in Milliseconds                             |\n+\n+\n+### E3DC Wallbox\n+\n+Select as Bridge your previously created E3DC Home Power Plant.\n+\n+| Parameter       | Type    | Description                                                                 |           \n+|-----------------|---------|-----------------------------------------------------------------------------|\n+| wallboxId       | integer | E3DC supports up to 8 Wallboxes - select a value from 0 to 7                |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. For clustering 4 Channel Groups are used: \n+\n+### Channel Group _Information Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID          | Type   | Description                                       |\n+|-----------------------|------------------|---------------------|--------|---------------------------------------------------|\n+| Modbus-ID             | info             | modbus-id           | String | Modbus ID / Magic Byte of E3DC                    |\n+| Modbus Firmware       | info             | modbus-firmware     | String | Version of Modbus Firmware                        |\n+| Supported Registers   | info             | supported-registers | Number | Number of registers supported by Modbus           |\n+| Manufacturer Name     | info             | manufacturer-name   | String | Name of the Device Manufacturer                   |\n+| E3DC Model Name       | info             | model-name          | String | Name of the E3DC Model                            |\n+| E3DC Firmware Release | info             | firmware-release    | String | Firmware installed on this particular E3DC Device |\n+| E3DC Serial Number    | info             | serial-number       | String | Serial Number of this particular E3DC Device      |\n+\n+\n+### Channel Group _Power Block_\n+\n+| Channel Label                 |  Channel Group ID | Channel ID                   | Type                   | Description                  |\n+|-------------------------------|-------------------|------------------------------|------------------------|------------------------------|\n+| PV Output                     | power             | pv-power-supply              |  Number:Power          | Photovoltaic Power Production    |\n+| Battery Discharge             | power             | battery-power-supply         |  Number:Power          | Battery discharges and provides Power    |\n+| Battery Charge                | power             | battery-power-consumption    |  Number:Power          | Battery charges and consumes Power    |\n+| Household Consumption         | power             | household-power-consumption  |  Number:Power          | Household consuming Power    |\n+| Grid Power Consumption        | power             | grid-power-consumption       |  Number:Power          | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply             | power             | grid-power-supply            |  Number:Power          | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply         | power             | external-power-supply        |  Number:Power          | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption     | power             | wallbox-power-consumption    |  Number:Power          | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | power             | wallbox-pv-power-consumption |  Number:Power          | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky                       | power             | autarky-channel              |  Number:Dimensionless  | Your current Autarky Level    |\n+| Self Consumption              | power             | self-consumption             |  Number:Dimensionless  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge       | power             | battery-soc                  |  Number:Dimensionless  | Charge Level of your attached Battery    |\n+\n+\n+### Channel Group _String Details Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID         | Type            | Description                  |\n+|-----------------------|------------------|--------------------|-----------------|------------------------------|\n+| String 1 Potential    | strings          | string1-dc-voltage |  Number:Volt    | Voltage on String 1           |\n+| String 2 Potential    | strings          | string2-dc-voltage |  Number:Volt    | Voltage on String 2           |\n+| String 3 Potential    | strings          | string3-dc-voltage |  Number:Volt    | Voltage on String 3           |\n+| String 1 Current      | strings          | string1-dc-current |  Number:Ampere  | Current on String 1       |", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ4Njk1MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467486951", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-08T17:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTY1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MjY3NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466652674", "bodyText": "Can you add UoM here, too?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Number    E3DC_PVPower                  \"E3DC PV Power\"             (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#pv-power-supply\" }\n          \n          \n            \n            Number:Power    E3DC_PVPower                  \"E3DC PV Power\"             (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#pv-power-supply\" }", "author": "fwolter", "createdAt": "2020-08-06T19:57:45Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant\n+\n+See chapter [Configuration](#thing-configuration) how to set them up in PaperUI or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Home Power Plant | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+1. Add a \"Modbux TCP Slave\". IP-Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings\n+2. Now add an \"E3DC Home Power Plant\". Bridge is the previously created Modbus TCP Slave. The Power Plant provides 4 different Channel with all available information of your E3DC device.  \n+3. If you have a Wallbox attached add \"E3DC Wallbox\". Bridge is your attached E3DC Home Power Plant, mandatory configuration parameter is the Wallbox ID\n+\n+Check the [full example Things](#things) for manual setup.\n+\n+### Modbus TCP Slave \n+\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                               |\n+| port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1           |\n+\n+### E3DC Home Power Plant \n+\n+Select as Bridge your previously created Modbus TCP Slave.\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| refresh         | integer | Refresh Rate of E3DC values in Milliseconds                             |\n+\n+\n+### E3DC Wallbox\n+\n+Select as Bridge your previously created E3DC Home Power Plant.\n+\n+| Parameter       | Type    | Description                                                                 |           \n+|-----------------|---------|-----------------------------------------------------------------------------|\n+| wallboxId       | integer | E3DC supports up to 8 Wallboxes - select a value from 0 to 7                |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. For clustering 4 Channel Groups are used: \n+\n+### Channel Group _Information Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID          | Type   | Description                                       |\n+|-----------------------|------------------|---------------------|--------|---------------------------------------------------|\n+| Modbus-ID             | info             | modbus-id           | String | Modbus ID / Magic Byte of E3DC                    |\n+| Modbus Firmware       | info             | modbus-firmware     | String | Version of Modbus Firmware                        |\n+| Supported Registers   | info             | supported-registers | Number | Number of registers supported by Modbus           |\n+| Manufacturer Name     | info             | manufacturer-name   | String | Name of the Device Manufacturer                   |\n+| E3DC Model Name       | info             | model-name          | String | Name of the E3DC Model                            |\n+| E3DC Firmware Release | info             | firmware-release    | String | Firmware installed on this particular E3DC Device |\n+| E3DC Serial Number    | info             | serial-number       | String | Serial Number of this particular E3DC Device      |\n+\n+\n+### Channel Group _Power Block_\n+\n+| Channel Label                 |  Channel Group ID | Channel ID                   | Type                   | Description                  |\n+|-------------------------------|-------------------|------------------------------|------------------------|------------------------------|\n+| PV Output                     | power             | pv-power-supply              |  Number:Power          | Photovoltaic Power Production    |\n+| Battery Discharge             | power             | battery-power-supply         |  Number:Power          | Battery discharges and provides Power    |\n+| Battery Charge                | power             | battery-power-consumption    |  Number:Power          | Battery charges and consumes Power    |\n+| Household Consumption         | power             | household-power-consumption  |  Number:Power          | Household consuming Power    |\n+| Grid Power Consumption        | power             | grid-power-consumption       |  Number:Power          | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply             | power             | grid-power-supply            |  Number:Power          | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply         | power             | external-power-supply        |  Number:Power          | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption     | power             | wallbox-power-consumption    |  Number:Power          | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | power             | wallbox-pv-power-consumption |  Number:Power          | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky                       | power             | autarky-channel              |  Number:Dimensionless  | Your current Autarky Level    |\n+| Self Consumption              | power             | self-consumption             |  Number:Dimensionless  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge       | power             | battery-soc                  |  Number:Dimensionless  | Charge Level of your attached Battery    |\n+\n+\n+### Channel Group _String Details Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID         | Type            | Description                  |\n+|-----------------------|------------------|--------------------|-----------------|------------------------------|\n+| String 1 Potential    | strings          | string1-dc-voltage |  Number:Volt    | Voltage on String 1           |\n+| String 2 Potential    | strings          | string2-dc-voltage |  Number:Volt    | Voltage on String 2           |\n+| String 3 Potential    | strings          | string3-dc-voltage |  Number:Volt    | Voltage on String 3           |\n+| String 1 Current      | strings          | string1-dc-current |  Number:Ampere  | Current on String 1       |\n+| String 2 Current      | strings          | string2-dc-current |  Number:Ampere  | Current on String 2       |\n+| String 3 Current      | strings          | string3-dc-current |  Number:Ampere  | Current on String 3       |\n+| String 1 Power        | strings          | string1-dc-output  |  Number:Power   | Power produced by String 1 |\n+| String 2 Power        | strings          | string2-dc-output  |  Number:Power   | Power produced by String 2 |\n+| String 3 Power        | strings          | string3-dc-output  |  Number:Power   | Power produced by String 3 |\n+\n+\n+### Channel _EMS Block_\n+\n+| Channel Label                               | Channel Group ID | Channel ID                 | Type           | Description                  |\n+|---------------------------------------------|------------------|----------------------------|----------------|------------------------------|\n+| Emergency Power Status                      | emergency        | emergency-power-status     |  String  | Possible values: EP not supported, EP active, EP not active, EP not available, EP Switch in wrong position, EP Status unknown |\n+| Battery Charging Locked                     | emergency        | battery-charging-lock      |  Switch  | Battery charging is locked          |\n+| Battery Discharging Locked                  | emergency        | battery-discharging-lock   |  Switch  | Battery discharging is locked |\n+| Emergency Power Possible                    | emergency        | emergency-power-possible   |  Switch  | Emergency Power Supply is possible          |\n+| Weather Predicted Battery Charging          | emergency        | weather-predicted-charging |  Switch  | Weather Predicted Battery Charging is activated |\n+| Regulation Status Of Max Grid Power Supply  | emergency        | regulation-status          |  Switch  | Grid Power Supply is currently regulated |\n+| Charge Lock time Active                     | emergency        | charge-lock-time           |  Switch  | Charge Lock Time is currently active |\n+| Discharge Lock time Active                  | emergency        | discharge-lock-time        |  Switch  | Discharge Lock Time is currently active |\n+\n+### E3DC Wallbox Channels\n+\n+Some of the Wallbox Settings can be changed. See the Access column if the actual value is Read/Write (RW) or Read Only (RO)\n+\n+| Channel Label            | Channel ID          | Type    | Access | Description                  |\n+|--------------------------|---------------------|---------|--------|------------------------------|\n+| Wallbox Available        | wb-available        |  Switch | RO     | Indicates if the Wallbox is attached. Check your Wallbox ID in offline case  |\n+| Sun Mode                 | wb-sunmode          |  Switch | RW     | Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging.   |\n+| Wallbox Charging Aborted | wb-charging-aborted |  Switch | RW     | Wallbox charging is aborted  |\n+| Wallbox Charging         | wb-charging         |  Switch | RO     | Wallbox is charging   |\n+| Jack Locked              | wb-jack-locked      |  Switch | RO     | Jack is locked   |\n+| Jack Plugged             | wb-jack-plugged     |  Switch | RO     | Jack is plugged    |\n+| Schuko Socket On         | wb-schuko-on        |  Switch | RW     | If your Wallbox has an additional Schuko Socket it provides state ON or OFF    |\n+| Schuko Socket Plugged    | wb-schuko-plugged   |  Switch | RO     | If your Wallbox has an additional Schuko Socket it provides plugged state ON or OFF    |\n+| Schuko Socket Locked     | wb-schuko-locked    |  Switch | RO     | If your Wallbox has an additional Schuko Socket it provides locked state ON or OFF |\n+| Schuko 16A Relay On      | wb-schuko-relay-16a |  Switch | RO     | Schuko 16A Relay is ON     |\n+| 16A Relay On             | wb-relay-16a        |  Switch | RO     | Wallbox 16A Relay is ON     |\n+| 32A Relay On             | wb-relay-32a        |  Switch | RO     | Wallbox 32A Relay is ON    |\n+| 1-Phase Charging         | 1-Phase Active      |  Switch | RW     | 1-phase charging is activated. If OFF 3-phase charging is activated    |\n+\n+## Full Example\n+\n+Following example provides the full configuration. If you enter the correct Connection Data, IP Address, Device ID and Port number in the thing configuration you should be fine.\n+\n+### Things\n+\n+```\n+Bridge modbus:tcp:device \"E3DC Modbus TCP\" [ host=\"192.168.178.56\", port=502, id=1 ] {\n+\tBridge e3dc powerplant \"E3DC Power Plant\" [ refresh=2500 ] {\n+    \t Thing e3dc-wallbox wallbox0\t\t\"E3DC Wallbox\"\t\t\t\t[ wallboxId=0]\n+    }\n+}\n+```\n+\n+### Items\n+\n+```\n+String    E3DC_ModbusId                 \"E3DC Modbus ID\"            (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#modbus-id\" }\n+String    E3DC_ModbusFirmware           \"E3DC Modbus Firmware\"      (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#modbus-firmware\" }\n+Number    E3DC_SupportedRegisters       \"E3DC Supported Registers\"  (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#supported-registers\" }\n+String    E3DC_Manufacturer             \"E3DC Manufacturer\"         (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#manufacturer-name\" }\n+String    E3DC_ModelName                \"E3DC Model\"                (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#model-name\" }\n+String    E3DC_Firmware                 \"E3DC Modbus ID\"            (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#firmware-release\" }\n+String    E3DC_SerialNumber             \"E3DC Modbus ID\"            (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#serial-number\" }\n+\n+Number    E3DC_PVPower                  \"E3DC PV Power\"             (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#pv-power-supply\" }", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1NjExMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467556112", "bodyText": "Yes, I'll check this together with the corrected sitemap", "author": "weymann", "createdAt": "2020-08-09T08:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MjY3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMDM0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467600343", "bodyText": "Looks fine after adapting sitemap", "author": "weymann", "createdAt": "2020-08-09T16:02:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MjY3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NDA2Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466654063", "bodyText": "Did you test this? I think you have to specify the unit.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Text    item=E3DC_PVPower                 label=\"PV Power[%s]\"\n          \n          \n            \n                  Text    item=E3DC_PVPower                 label=\"PV Power [%d %unit%]\"", "author": "fwolter", "createdAt": "2020-08-06T20:00:28Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,367 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\" />\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. If you want to install an E3DC device via PaperUI perform the following steps\n+\n+1. Go to \"Configuration - Things\" and press the blue \"+\" sign in the main window\n+2. Choose entry \"Modbus Binding\". There's no discovery so choose \"MANUALLY ADD THING\"\n+3. You should see now 2 possible E3DC devices\n+\n+* the \"E3DC Home Power Plant\" as central device \n+* the \"E3DC Wallbox\" attached to a certain Power Plant\n+\n+See chapter [Configuration](#thing-configuration) how to set them up in PaperUI or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Home Power Plant | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. Just install the blocks you are interested in.\n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+1. Add a \"Modbux TCP Slave\". IP-Address, Modbus Port and Device ID are mandatory configuration parameters and have to match your E3DC Settings\n+2. Now add an \"E3DC Home Power Plant\". Bridge is the previously created Modbus TCP Slave. The Power Plant provides 4 different Channel with all available information of your E3DC device.  \n+3. If you have a Wallbox attached add \"E3DC Wallbox\". Bridge is your attached E3DC Home Power Plant, mandatory configuration parameter is the Wallbox ID\n+\n+Check the [full example Things](#things) for manual setup.\n+\n+### Modbus TCP Slave \n+\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                               |\n+| port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1           |\n+\n+### E3DC Home Power Plant \n+\n+Select as Bridge your previously created Modbus TCP Slave.\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| refresh         | integer | Refresh Rate of E3DC values in Milliseconds                             |\n+\n+\n+### E3DC Wallbox\n+\n+Select as Bridge your previously created E3DC Home Power Plant.\n+\n+| Parameter       | Type    | Description                                                                 |           \n+|-----------------|---------|-----------------------------------------------------------------------------|\n+| wallboxId       | integer | E3DC supports up to 8 Wallboxes - select a value from 0 to 7                |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. For clustering 4 Channel Groups are used: \n+\n+### Channel Group _Information Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID          | Type   | Description                                       |\n+|-----------------------|------------------|---------------------|--------|---------------------------------------------------|\n+| Modbus-ID             | info             | modbus-id           | String | Modbus ID / Magic Byte of E3DC                    |\n+| Modbus Firmware       | info             | modbus-firmware     | String | Version of Modbus Firmware                        |\n+| Supported Registers   | info             | supported-registers | Number | Number of registers supported by Modbus           |\n+| Manufacturer Name     | info             | manufacturer-name   | String | Name of the Device Manufacturer                   |\n+| E3DC Model Name       | info             | model-name          | String | Name of the E3DC Model                            |\n+| E3DC Firmware Release | info             | firmware-release    | String | Firmware installed on this particular E3DC Device |\n+| E3DC Serial Number    | info             | serial-number       | String | Serial Number of this particular E3DC Device      |\n+\n+\n+### Channel Group _Power Block_\n+\n+| Channel Label                 |  Channel Group ID | Channel ID                   | Type                   | Description                  |\n+|-------------------------------|-------------------|------------------------------|------------------------|------------------------------|\n+| PV Output                     | power             | pv-power-supply              |  Number:Power          | Photovoltaic Power Production    |\n+| Battery Discharge             | power             | battery-power-supply         |  Number:Power          | Battery discharges and provides Power    |\n+| Battery Charge                | power             | battery-power-consumption    |  Number:Power          | Battery charges and consumes Power    |\n+| Household Consumption         | power             | household-power-consumption  |  Number:Power          | Household consuming Power    |\n+| Grid Power Consumption        | power             | grid-power-consumption       |  Number:Power          | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply             | power             | grid-power-supply            |  Number:Power          | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply         | power             | external-power-supply        |  Number:Power          | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption     | power             | wallbox-power-consumption    |  Number:Power          | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | power             | wallbox-pv-power-consumption |  Number:Power          | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky                       | power             | autarky-channel              |  Number:Dimensionless  | Your current Autarky Level    |\n+| Self Consumption              | power             | self-consumption             |  Number:Dimensionless  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge       | power             | battery-soc                  |  Number:Dimensionless  | Charge Level of your attached Battery    |\n+\n+\n+### Channel Group _String Details Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID         | Type            | Description                  |\n+|-----------------------|------------------|--------------------|-----------------|------------------------------|\n+| String 1 Potential    | strings          | string1-dc-voltage |  Number:Volt    | Voltage on String 1           |\n+| String 2 Potential    | strings          | string2-dc-voltage |  Number:Volt    | Voltage on String 2           |\n+| String 3 Potential    | strings          | string3-dc-voltage |  Number:Volt    | Voltage on String 3           |\n+| String 1 Current      | strings          | string1-dc-current |  Number:Ampere  | Current on String 1       |\n+| String 2 Current      | strings          | string2-dc-current |  Number:Ampere  | Current on String 2       |\n+| String 3 Current      | strings          | string3-dc-current |  Number:Ampere  | Current on String 3       |\n+| String 1 Power        | strings          | string1-dc-output  |  Number:Power   | Power produced by String 1 |\n+| String 2 Power        | strings          | string2-dc-output  |  Number:Power   | Power produced by String 2 |\n+| String 3 Power        | strings          | string3-dc-output  |  Number:Power   | Power produced by String 3 |\n+\n+\n+### Channel _EMS Block_\n+\n+| Channel Label                               | Channel Group ID | Channel ID                 | Type           | Description                  |\n+|---------------------------------------------|------------------|----------------------------|----------------|------------------------------|\n+| Emergency Power Status                      | emergency        | emergency-power-status     |  String  | Possible values: EP not supported, EP active, EP not active, EP not available, EP Switch in wrong position, EP Status unknown |\n+| Battery Charging Locked                     | emergency        | battery-charging-lock      |  Switch  | Battery charging is locked          |\n+| Battery Discharging Locked                  | emergency        | battery-discharging-lock   |  Switch  | Battery discharging is locked |\n+| Emergency Power Possible                    | emergency        | emergency-power-possible   |  Switch  | Emergency Power Supply is possible          |\n+| Weather Predicted Battery Charging          | emergency        | weather-predicted-charging |  Switch  | Weather Predicted Battery Charging is activated |\n+| Regulation Status Of Max Grid Power Supply  | emergency        | regulation-status          |  Switch  | Grid Power Supply is currently regulated |\n+| Charge Lock time Active                     | emergency        | charge-lock-time           |  Switch  | Charge Lock Time is currently active |\n+| Discharge Lock time Active                  | emergency        | discharge-lock-time        |  Switch  | Discharge Lock Time is currently active |\n+\n+### E3DC Wallbox Channels\n+\n+Some of the Wallbox Settings can be changed. See the Access column if the actual value is Read/Write (RW) or Read Only (RO)\n+\n+| Channel Label            | Channel ID          | Type    | Access | Description                  |\n+|--------------------------|---------------------|---------|--------|------------------------------|\n+| Wallbox Available        | wb-available        |  Switch | RO     | Indicates if the Wallbox is attached. Check your Wallbox ID in offline case  |\n+| Sun Mode                 | wb-sunmode          |  Switch | RW     | Activate / Deactivate Sun Mode. Off case takes Grid Power to ensure highest possible charging.   |\n+| Wallbox Charging Aborted | wb-charging-aborted |  Switch | RW     | Wallbox charging is aborted  |\n+| Wallbox Charging         | wb-charging         |  Switch | RO     | Wallbox is charging   |\n+| Jack Locked              | wb-jack-locked      |  Switch | RO     | Jack is locked   |\n+| Jack Plugged             | wb-jack-plugged     |  Switch | RO     | Jack is plugged    |\n+| Schuko Socket On         | wb-schuko-on        |  Switch | RW     | If your Wallbox has an additional Schuko Socket it provides state ON or OFF    |\n+| Schuko Socket Plugged    | wb-schuko-plugged   |  Switch | RO     | If your Wallbox has an additional Schuko Socket it provides plugged state ON or OFF    |\n+| Schuko Socket Locked     | wb-schuko-locked    |  Switch | RO     | If your Wallbox has an additional Schuko Socket it provides locked state ON or OFF |\n+| Schuko 16A Relay On      | wb-schuko-relay-16a |  Switch | RO     | Schuko 16A Relay is ON     |\n+| 16A Relay On             | wb-relay-16a        |  Switch | RO     | Wallbox 16A Relay is ON     |\n+| 32A Relay On             | wb-relay-32a        |  Switch | RO     | Wallbox 32A Relay is ON    |\n+| 1-Phase Charging         | 1-Phase Active      |  Switch | RW     | 1-phase charging is activated. If OFF 3-phase charging is activated    |\n+\n+## Full Example\n+\n+Following example provides the full configuration. If you enter the correct Connection Data, IP Address, Device ID and Port number in the thing configuration you should be fine.\n+\n+### Things\n+\n+```\n+Bridge modbus:tcp:device \"E3DC Modbus TCP\" [ host=\"192.168.178.56\", port=502, id=1 ] {\n+\tBridge e3dc powerplant \"E3DC Power Plant\" [ refresh=2500 ] {\n+    \t Thing e3dc-wallbox wallbox0\t\t\"E3DC Wallbox\"\t\t\t\t[ wallboxId=0]\n+    }\n+}\n+```\n+\n+### Items\n+\n+```\n+String    E3DC_ModbusId                 \"E3DC Modbus ID\"            (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#modbus-id\" }\n+String    E3DC_ModbusFirmware           \"E3DC Modbus Firmware\"      (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#modbus-firmware\" }\n+Number    E3DC_SupportedRegisters       \"E3DC Supported Registers\"  (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#supported-registers\" }\n+String    E3DC_Manufacturer             \"E3DC Manufacturer\"         (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#manufacturer-name\" }\n+String    E3DC_ModelName                \"E3DC Model\"                (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#model-name\" }\n+String    E3DC_Firmware                 \"E3DC Modbus ID\"            (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#firmware-release\" }\n+String    E3DC_SerialNumber             \"E3DC Modbus ID\"            (e3dc)      { channel=\"modbus:e3dc:device:powerplant:info#serial-number\" }\n+\n+Number    E3DC_PVPower                  \"E3DC PV Power\"             (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#pv-power-supply\" }\n+Number    E3DC_BatteryDischarge         \"E3DC Battery Discharge\"    (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#battery-power-supply\" }\n+Number    E3DC_BatteryCharge            \"E3DC Battery Charge\"       (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#battery-power-consumption\" }\n+Number    E3DC_Household                \"E3DC Household Consumption\"    (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#household-power-consumption\" }\n+Number    E3DC_GridConsumption          \"E3DC Grid Consumption\"     (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#grid-power-consumption\" }\n+Number    E3DC_GridSupply               \"E3DC Grid Supply \"         (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#grid-power-supply\" }\n+Number    E3DC_ExternalSupply           \"E3DC External Supply\"      (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#external-power-supply\" }\n+Number    E3DC_WallboxConsumption       \"E3DC Wallbox Consumption\"  (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#wallbox-power-consumption\" }\n+Number    E3DC_WallboxPVConsumption     \"E3DC Wallbox PV Consumption\"   (e3dc)  { channel=\"modbus:e3dc:device:powerplant:power#wallbox-pv-power-consumption\" }\n+Number    E3DC_AutarkyLevel             \"E3DC Autarky Level\"        (e3dc)  { channel=\"modbus:e3dc:device:powerplant:power#autarky\" }\n+Number    E3DC_SelfConsumptionLevel     \"E3DC Self Consumption Level\"   (e3dc)  { channel=\"modbus:e3dc:device:powerplant:power#self-consumption\" }\n+Number    E3DC_BatterySOC               \"E3DC Battery SOC\"          (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:power#battery-soc\" }\n+\n+Switch    E3DC_WB_Available             \"E3DC WB available\"          (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-available\" }\n+Switch    E3DC_WB_Sunmode               \"E3DC WB Sunmode\"            (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-sunmode\" }\n+Switch    E3DC_WB_ChargingAborted       \"E3DC WB Charging Aborted\"   (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-charging-aborted\" }\n+Switch    E3DC_WB_Charging              \"E3DC WB Charging\"           (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-charging\" }\n+Switch    E3DC_WB_JackLocked            \"E3DC WB Jack Locked\"        (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-jack-locked\" }\n+Switch    E3DC_WB_JackPlugged           \"E3DC WB Jack Plugged\"       (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-jack-plugged\" }\n+Switch    E3DC_WB_SchukoOn              \"E3DC WB Schuko On\"          (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-schuko-on\" }\n+Switch    E3DC_WB_SchukoPlugged         \"E3DC WB Schuko Plugged\"     (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-schuko-plugged\" }\n+Switch    E3DC_WB_SchukoLocked          \"E3DC WB Schuko Locked\"      (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-schuko-locked\" }\n+Switch    E3DC_WB_Schuko_Relay16A       \"E3DC WB Schuko 16A Relay\"   (e3dc) { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-schuko-relay-16a\" }\n+Switch    E3DC_WB_Relay16A              \"E3DC WB 16A Relay\"          (e3dc) { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-relay-16a\" }\n+Switch    E3DC_WB_Relay32A              \"E3DC WB 32A Relay\"          (e3dc) { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-relay-32a\" }\n+Switch    E3DC_WB_1PhaseCharging        \"E3DC WB 1-Phase Charging\"   (e3dc)  { channel=\"modbus:e3dc-wallbox:device:powerplant:wallbox0:wb-1phase\" }\n+\n+Number    E3DC_String1V                 \"E3DC String 1 Volt\"    (e3dc)  { channel=\"modbus:e3dc:device:powerplant:strings#string1-dc-voltage\" }\n+Number    E3DC_String2V                 \"E3DC String 2 Volt\"    (e3dc)  { channel=\"modbus:e3dc:device:powerplant:strings#string2-dc-voltage\" }\n+Number    E3DC_String3V                 \"E3DC String 3 Volt\"    (e3dc)  { channel=\"modbus:e3dc:device:powerplant:strings#string3-dc-voltage\" }\n+Number    E3DC_String1A                 \"E3DC String 1 Ampere\"  (e3dc)  { channel=\"modbus:e3dc:device:powerplant:strings#string1-dc-current\" }\n+Number    E3DC_String2A                 \"E3DC String 2 Ampere\"  (e3dc)  { channel=\"modbus:e3dc:device:powerplant:strings#string2-dc-current\" }\n+Number    E3DC_String3A                 \"E3DC String 3 Ampere\"  (e3dc)  { channel=\"modbus:e3dc:device:powerplant:strings#string3-dc-current\" }\n+Number    E3DC_String1W                 \"E3DC String 1 Watt\"    (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:strings#string1-dc-output\" }\n+Number    E3DC_String2W                 \"E3DC String 2 Watt\"    (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:strings#string2-dc-output\" }\n+Number    E3DC_String3W                 \"E3DC String 3 Watt\"    (e3dc,persist)  { channel=\"modbus:e3dc:device:powerplant:strings#string3-dc-output\" }\n+\n+String    E3DC_EMS_Status                       \"E3DC EMS Status\"                      (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#emergency-power-status\" }\n+Switch    E3DC_EMS_BatteryChargingLock          \"E3DC EMS Battery Charging Locked\"     (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#battery-charging-lock\" }\n+Switch    E3DC_EMS_BatteryDischargingLock       \"E3DC EMS Battery Discharging Locked\"  (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#battery-discharging-lock\" }\n+Switch    E3DC_EMS_EmergencyPowerPossible       \"E3DC EMS Emergency Power possible\"    (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#emergency-power-possible\" }\n+Switch    E3DC_EMS_WeatherPredictedCharging     \"E3DC EMS Weather Predicted Charging\"  (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#weather-predicted-charging\" }\n+Switch    E3DC_EMS_RegulationStatus             \"E3DC EMS Regulation Status\"           (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#regulation-status\" }\n+Switch    E3DC_EMS_ChargeLockTime               \"E3DC EMS Charge Lock Time\"            (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#charge-lock-time\" }\n+Switch    E3DC_EMS_DischargeLockTime            \"E3DC EMS Discharge Lock TIme\"         (e3dc)  { channel=\"modbus:e3dc:device:powerplant:emergency#discharge-lock-time\" }\n+```\n+\n+### Sitemap\n+\n+```\n+sitemap E3DC label=\"E3DC Binding Sitemap\" {\n+  Frame label=\"Info\" {\n+    Text    item=E3DC_ModbusId                  label=\"Modbus-ID [%s]\"\n+    Text    item=E3DC_ModbusFirmware            label=\"Modbus Firmware [%s]\"\n+    Text    item=E3DC_SupportedRegisters        label=\"Registers [%s]\"\n+    Text    item=E3DC_Manufacturer              label=\"Manufacturer [%s]\"\n+    Text    item=E3DC_ModelName                 label=\"Model Name [%s]\"\n+    Text    item=E3DC_Firmware                  label=\"Firmware [%s]\"\n+    Text    item=E3DC_SerialNumber              label=\"Serial Number[%s]\"\n+  }\n+  \n+    Frame label=\"Power Producer\" {\n+      Text    item=E3DC_PVPower                 label=\"PV Power[%s]\"", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2MTIwNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467561205", "bodyText": "No, I didn't tested this. I'll apply the changes and check the results.", "author": "weymann", "createdAt": "2020-08-09T09:41:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMDU4NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467600584", "bodyText": "New sitemap looks good. Units are displayed and values are adapted to their real values. Power and Potential as integer, current as float", "author": "weymann", "createdAt": "2020-08-09T16:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NDA2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NTQzMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466655433", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (thingTypeUID.equals(E3DCBindingConstants.THING_TYPE_E3DC)\n          \n          \n            \n                            || thingTypeUID.equals(E3DCBindingConstants.THING_TYPE_E3DC_WALLBOX)) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return thingTypeUID.equals(E3DCBindingConstants.THING_TYPE_E3DC)\n          \n          \n            \n                            || thingTypeUID.equals(E3DCBindingConstants.THING_TYPE_E3DC_WALLBOX);", "author": "fwolter", "createdAt": "2020-08-06T20:03:27Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/E3DCHandlerFactory.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingTypeUID;\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandlerFactory;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandlerFactory;\n+import org.openhab.binding.modbus.e3dc.internal.handler.E3DCThingHandler;\n+import org.openhab.binding.modbus.e3dc.internal.handler.E3DCWallboxThingHandler;\n+import org.osgi.service.component.annotations.Component;\n+\n+/**\n+ * The {@link E3DCHandlerFactory} is responsible for creating things and thing\n+ * handlers.\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(configurationPid = \"binding.e3dc\", service = ThingHandlerFactory.class)\n+public class E3DCHandlerFactory extends BaseThingHandlerFactory {\n+    @Override\n+    public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n+        if (thingTypeUID.equals(E3DCBindingConstants.THING_TYPE_E3DC)\n+                || thingTypeUID.equals(E3DCBindingConstants.THING_TYPE_E3DC_WALLBOX)) {\n+            return true;\n+        } else {\n+            return false;\n+        }", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ4OTc5Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467489796", "bodyText": "Very good - fixed.", "author": "weymann", "createdAt": "2020-08-08T18:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NTQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NjQ1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466656455", "bodyText": "Syntactical sugar\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return ((wrap.get() & 0xff) << 8) | wrap.get() & 0xff;\n          \n          \n            \n                    return Short.toUnsignedInt(wrap.getShort());", "author": "fwolter", "createdAt": "2020-08-06T20:05:34Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class DataConverter {\n+    private static final long MAX_INT32 = (long) Math.pow(2, Integer.SIZE);\n+\n+    /**\n+     * Get unit16 value from 2 bytes\n+     *\n+     * @param wrap\n+     * @return\n+     */\n+    public static int getUInt16Value(ByteBuffer wrap) {\n+        return ((wrap.get() & 0xff) << 8) | wrap.get() & 0xff;", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2NTEyMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467565121", "bodyText": "Yes, this seems to work.", "author": "weymann", "createdAt": "2020-08-09T10:21:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NjQ1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NjY5Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466656696", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    long value = 0;\n          \n          \n            \n                    for (int i = 0; i < 4; i++) {\n          \n          \n            \n                        value = (value << 8) + (wrap.get() & 0xff);\n          \n          \n            \n                    }\n          \n          \n            \n                    return value;\n          \n          \n            \n                    return wrap.getLong();", "author": "fwolter", "createdAt": "2020-08-06T20:06:07Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class DataConverter {\n+    private static final long MAX_INT32 = (long) Math.pow(2, Integer.SIZE);\n+\n+    /**\n+     * Get unit16 value from 2 bytes\n+     *\n+     * @param wrap\n+     * @return\n+     */\n+    public static int getUInt16Value(ByteBuffer wrap) {\n+        return ((wrap.get() & 0xff) << 8) | wrap.get() & 0xff;\n+    }\n+\n+    public static long getLongValue(ByteBuffer wrap) {\n+        long value = 0;\n+        for (int i = 0; i < 4; i++) {\n+            value = (value << 8) + (wrap.get() & 0xff);\n+        }\n+        return value;", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2NTQ1MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467565450", "bodyText": "Hm, getLong reads 8 bytes which is too long. I applied your idea before: getInt and convert to unsigned long =>\nreturn Integer.toUnsignedLong(wrap.getInt());\nThis works fine in my unit tests", "author": "weymann", "createdAt": "2020-08-09T10:24:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NjY5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1OTEwOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466659109", "bodyText": "Did you take a look into the class HexUtils in the OH core?", "author": "fwolter", "createdAt": "2020-08-06T20:11:10Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/InfoBlock.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.StringType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link InfoBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class InfoBlock implements Data {\n+    private static final StringType EMPTY = new StringType(\"NULL\");\n+    public StringType modbusId = EMPTY;\n+    public StringType modbusVersion = EMPTY;\n+    public DecimalType supportedRegisters = new DecimalType(-1);\n+    public StringType manufacturer = EMPTY;\n+    public StringType modelName = EMPTY;\n+    public StringType serialNumber = EMPTY;\n+    public StringType firmware = EMPTY;\n+\n+    /**\n+     * For decoding see Modbus Register Mapping Chapter 3.1.1 page 14\n+     *\n+     * @param bArray - Modbus Registers as bytes from 40001 to 40067\n+     */\n+    public InfoBlock(byte[] bArray) {\n+        // index handling to calculate the correct start index\n+        ByteBuffer wrapper = ByteBuffer.wrap(bArray);\n+\n+        // first uint16 = 2 bytes - decode magic byte\n+        StringBuilder magicByte = new StringBuilder();\n+        magicByte.append(String.format(\"%02X\", wrapper.get()));\n+        magicByte.append(String.format(\"%02X\", wrapper.get()));\n+        this.modbusId = new StringType(magicByte.toString());", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMDczMA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467600730", "bodyText": "I checked Hexutils and adapted the conversion.", "author": "weymann", "createdAt": "2020-08-09T16:06:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1OTEwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MDU3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466660573", "bodyText": "Syntactical sugar. Next time...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    string2Volt = new QuantityType<ElectricPotential>(DataConverter.getUInt16Value(wrap), SmartHomeUnits.VOLT);\n          \n          \n            \n                    string2Volt = QuantityType.valueOf(DataConverter.getUInt16Value(wrap), SmartHomeUnits.VOLT);", "author": "fwolter", "createdAt": "2020-08-06T20:14:14Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/StringBlock.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+\n+import javax.measure.quantity.ElectricCurrent;\n+import javax.measure.quantity.ElectricPotential;\n+import javax.measure.quantity.Power;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link StringBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class StringBlock implements Data {\n+    public QuantityType<ElectricPotential> string1Volt;\n+    public QuantityType<ElectricPotential> string2Volt;\n+    public QuantityType<ElectricPotential> string3Volt;\n+    public QuantityType<ElectricCurrent> string1Ampere;\n+    public QuantityType<ElectricCurrent> string2Ampere;\n+    public QuantityType<ElectricCurrent> string3Ampere;\n+    public QuantityType<Power> string1Watt;\n+    public QuantityType<Power> string2Watt;\n+    public QuantityType<Power> string3Watt;\n+\n+    /**\n+     * For decoding see Modbus Register Mapping Chapter 3.1.2 page 14-16\n+     *\n+     * @param bArray - Modbus Registers as bytes from 40096 to 40104\n+     */\n+    public StringBlock(byte[] bArray) {\n+        ByteBuffer wrap = ByteBuffer.wrap(bArray);\n+        // straight forward - for each String the values Volt, Ampere and then Watt. All unt16 = 2 bytes values\n+        string1Volt = new QuantityType<ElectricPotential>(DataConverter.getUInt16Value(wrap), SmartHomeUnits.VOLT);\n+        string2Volt = new QuantityType<ElectricPotential>(DataConverter.getUInt16Value(wrap), SmartHomeUnits.VOLT);", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5Mjc5NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467492795", "bodyText": "Sure - changed it in String and Power Block", "author": "weymann", "createdAt": "2020-08-08T18:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MDU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MTU5MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466661590", "bodyText": "E3DCBindingConstants would be a better place for these. You could also make them static final.", "author": "fwolter", "createdAt": "2020-08-06T20:16:20Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/handler/E3DCThingHandler.java", "diffHunk": "@@ -0,0 +1,453 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.handler;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.ArrayList;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.modbus.e3dc.internal.E3DCConfiguration;\n+import org.openhab.binding.modbus.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Parser;\n+import org.openhab.binding.modbus.handler.EndpointNotInitializedException;\n+import org.openhab.binding.modbus.handler.ModbusEndpointThingHandler;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.PollTask;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCThingHandler extends BaseBridgeHandler {\n+    public enum ReadStatus {\n+        NOT_RECEIVED,\n+        READ_SUCCESS,\n+        READ_FAILED\n+    }\n+\n+    static final String INFO_DATA_READ_ERROR = \"Information And Data Modbus Read Errors\";\n+    static final String INFO_READ_ERROR = \"Information Modbus Read Error\";\n+    static final String DATA_READ_ERROR = \"Data Modbus Read Error\";\n+\n+    static final String INFO_GROUP = \"info\";\n+    static final String EMERGENCY_GROUP = \"emergency\";\n+    static final String POWER_GROUP = \"power\";\n+    static final String STRINGS_GROUP = \"strings\";\n+\n+    private ChannelUID modbusIdChannel;\n+    private ChannelUID modbusVersionChannel;\n+    private ChannelUID supportedRegistersChannel;\n+    private ChannelUID manufacturerChannel;\n+    private ChannelUID modelNameChannel;\n+    private ChannelUID serialNumberChannel;\n+    private ChannelUID firmwareChannel;\n+\n+    private ChannelUID epStatusChannel;\n+    private ChannelUID batteryChargingLockedChannel;\n+    private ChannelUID batteryDischargingLockedChannel;\n+    private ChannelUID epPossibleChannel;\n+    private ChannelUID weatherPredictedChargingChannel;\n+    private ChannelUID regulationStatusChannel;\n+    private ChannelUID chargeLockTimeChannel;\n+    private ChannelUID dischargeLockTimeChannel;\n+\n+    private ChannelUID pvPowerSupplyChannel;\n+    private ChannelUID batteryPowerSupplyChannel;\n+    private ChannelUID batteryPowerConsumptionChannel;\n+    private ChannelUID householdPowerConsumptionChannel;\n+    private ChannelUID gridPowerConsumpitionChannel;\n+    private ChannelUID gridPowerSupplyChannel;\n+    private ChannelUID externalPowerSupplyChannel;\n+    private ChannelUID wallboxPowerConsumptionChannel;\n+    private ChannelUID wallboxPVPowerConsumptionChannel;\n+    private ChannelUID autarkyChannel;\n+    private ChannelUID selfConsumptionChannel;\n+    private ChannelUID batterySOCChannel;\n+\n+    private ChannelUID string1AmpereChannel;\n+    private ChannelUID string1VoltChannel;\n+    private ChannelUID string1WattChannel;\n+    private ChannelUID string2AmpereChannel;\n+    private ChannelUID string2VoltChannel;\n+    private ChannelUID string2WattChannel;\n+    private ChannelUID string3AmpereChannel;\n+    private ChannelUID string3VoltChannel;\n+    private ChannelUID string3WattChannel;\n+\n+    private final ArrayList<E3DCWallboxThingHandler> listeners = new ArrayList<E3DCWallboxThingHandler>();\n+    private final Logger logger = LoggerFactory.getLogger(E3DCThingHandler.class);\n+    private final Parser dataParser = new Parser(DataType.DATA);\n+    private ReadStatus dataRead = ReadStatus.NOT_RECEIVED;\n+    private final Parser infoParser = new Parser(DataType.INFO);\n+    private ReadStatus infoRead = ReadStatus.NOT_RECEIVED;\n+    private @Nullable PollTask infoPoller;\n+    private @Nullable PollTask dataPoller;\n+    private @Nullable E3DCConfiguration config;\n+\n+    /**\n+     * Communication interface to the slave endpoint we're connecting to\n+     */\n+    protected volatile @Nullable ModbusCommunicationInterface comms = null;\n+    private int slaveId;\n+\n+    public E3DCThingHandler(Bridge thing) {\n+        super(thing);\n+\n+        modbusIdChannel = channelUID(thing, INFO_GROUP, MODBUS_ID_CHANNEL);", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5MzQ2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467493461", "bodyText": "Are you really sure? Channel is bound to  thing.getUID. I placed it into the constructor because for each thing an own Channel needs to be allocated.  So I don't think static final is fitting for updating different Things.", "author": "weymann", "createdAt": "2020-08-08T18:50:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MTU5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NTMwNw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r468875307", "bodyText": "You're right, they can't be made static.", "author": "fwolter", "createdAt": "2020-08-11T21:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MTU5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2Mjg5NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466662894", "bodyText": "Do you need the additional log message, as the framework already logs the message in updateStatus()? Same for below.", "author": "fwolter", "createdAt": "2020-08-06T20:18:52Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/handler/E3DCThingHandler.java", "diffHunk": "@@ -0,0 +1,453 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.handler;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.ArrayList;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.modbus.e3dc.internal.E3DCConfiguration;\n+import org.openhab.binding.modbus.e3dc.internal.dto.EmergencyBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.InfoBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.PowerBlock;\n+import org.openhab.binding.modbus.e3dc.internal.dto.StringBlock;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Parser;\n+import org.openhab.binding.modbus.handler.EndpointNotInitializedException;\n+import org.openhab.binding.modbus.handler.ModbusEndpointThingHandler;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusReadFunctionCode;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.PollTask;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCThingHandler extends BaseBridgeHandler {\n+    public enum ReadStatus {\n+        NOT_RECEIVED,\n+        READ_SUCCESS,\n+        READ_FAILED\n+    }\n+\n+    static final String INFO_DATA_READ_ERROR = \"Information And Data Modbus Read Errors\";\n+    static final String INFO_READ_ERROR = \"Information Modbus Read Error\";\n+    static final String DATA_READ_ERROR = \"Data Modbus Read Error\";\n+\n+    static final String INFO_GROUP = \"info\";\n+    static final String EMERGENCY_GROUP = \"emergency\";\n+    static final String POWER_GROUP = \"power\";\n+    static final String STRINGS_GROUP = \"strings\";\n+\n+    private ChannelUID modbusIdChannel;\n+    private ChannelUID modbusVersionChannel;\n+    private ChannelUID supportedRegistersChannel;\n+    private ChannelUID manufacturerChannel;\n+    private ChannelUID modelNameChannel;\n+    private ChannelUID serialNumberChannel;\n+    private ChannelUID firmwareChannel;\n+\n+    private ChannelUID epStatusChannel;\n+    private ChannelUID batteryChargingLockedChannel;\n+    private ChannelUID batteryDischargingLockedChannel;\n+    private ChannelUID epPossibleChannel;\n+    private ChannelUID weatherPredictedChargingChannel;\n+    private ChannelUID regulationStatusChannel;\n+    private ChannelUID chargeLockTimeChannel;\n+    private ChannelUID dischargeLockTimeChannel;\n+\n+    private ChannelUID pvPowerSupplyChannel;\n+    private ChannelUID batteryPowerSupplyChannel;\n+    private ChannelUID batteryPowerConsumptionChannel;\n+    private ChannelUID householdPowerConsumptionChannel;\n+    private ChannelUID gridPowerConsumpitionChannel;\n+    private ChannelUID gridPowerSupplyChannel;\n+    private ChannelUID externalPowerSupplyChannel;\n+    private ChannelUID wallboxPowerConsumptionChannel;\n+    private ChannelUID wallboxPVPowerConsumptionChannel;\n+    private ChannelUID autarkyChannel;\n+    private ChannelUID selfConsumptionChannel;\n+    private ChannelUID batterySOCChannel;\n+\n+    private ChannelUID string1AmpereChannel;\n+    private ChannelUID string1VoltChannel;\n+    private ChannelUID string1WattChannel;\n+    private ChannelUID string2AmpereChannel;\n+    private ChannelUID string2VoltChannel;\n+    private ChannelUID string2WattChannel;\n+    private ChannelUID string3AmpereChannel;\n+    private ChannelUID string3VoltChannel;\n+    private ChannelUID string3WattChannel;\n+\n+    private final ArrayList<E3DCWallboxThingHandler> listeners = new ArrayList<E3DCWallboxThingHandler>();\n+    private final Logger logger = LoggerFactory.getLogger(E3DCThingHandler.class);\n+    private final Parser dataParser = new Parser(DataType.DATA);\n+    private ReadStatus dataRead = ReadStatus.NOT_RECEIVED;\n+    private final Parser infoParser = new Parser(DataType.INFO);\n+    private ReadStatus infoRead = ReadStatus.NOT_RECEIVED;\n+    private @Nullable PollTask infoPoller;\n+    private @Nullable PollTask dataPoller;\n+    private @Nullable E3DCConfiguration config;\n+\n+    /**\n+     * Communication interface to the slave endpoint we're connecting to\n+     */\n+    protected volatile @Nullable ModbusCommunicationInterface comms = null;\n+    private int slaveId;\n+\n+    public E3DCThingHandler(Bridge thing) {\n+        super(thing);\n+\n+        modbusIdChannel = channelUID(thing, INFO_GROUP, MODBUS_ID_CHANNEL);\n+        modbusVersionChannel = channelUID(thing, INFO_GROUP, MODBUS_FIRMWARE_CHANNEL);\n+        supportedRegistersChannel = channelUID(thing, INFO_GROUP, SUPPORTED_REGISTERS_CHANNEL);\n+        manufacturerChannel = channelUID(thing, INFO_GROUP, MANUFACTURER_NAME_CHANNEL);\n+        modelNameChannel = channelUID(thing, INFO_GROUP, MODEL_NAME_CHANNEL);\n+        serialNumberChannel = channelUID(thing, INFO_GROUP, SERIAL_NUMBER_CHANNEL);\n+        firmwareChannel = channelUID(thing, INFO_GROUP, FIRMWARE_RELEASE_CHANNEL);\n+\n+        epStatusChannel = channelUID(thing, EMERGENCY_GROUP, EMERGENCY_POWER_STATUS);\n+        batteryChargingLockedChannel = channelUID(thing, EMERGENCY_GROUP, BATTERY_CHARGING_LOCKED);\n+        batteryDischargingLockedChannel = channelUID(thing, EMERGENCY_GROUP, BATTERY_DISCHARGING_LOCKED);\n+        epPossibleChannel = channelUID(thing, EMERGENCY_GROUP, EMERGENCY_POWER_POSSIBLE);\n+        weatherPredictedChargingChannel = channelUID(thing, EMERGENCY_GROUP, WEATHER_PREDICTED_CHARGING);\n+        regulationStatusChannel = channelUID(thing, EMERGENCY_GROUP, REGULATION_STATUS);\n+        chargeLockTimeChannel = channelUID(thing, EMERGENCY_GROUP, CHARGE_LOCK_TIME);\n+        dischargeLockTimeChannel = channelUID(thing, EMERGENCY_GROUP, DISCHARGE_LOCK_TIME);\n+\n+        pvPowerSupplyChannel = channelUID(thing, POWER_GROUP, PV_POWER_SUPPLY_CHANNEL);\n+        batteryPowerSupplyChannel = channelUID(thing, POWER_GROUP, BATTERY_POWER_SUPPLY_CHANNEL);\n+        batteryPowerConsumptionChannel = channelUID(thing, POWER_GROUP, BATTERY_POWER_CONSUMPTION);\n+        householdPowerConsumptionChannel = channelUID(thing, POWER_GROUP, HOUSEHOLD_POWER_CONSUMPTION_CHANNEL);\n+        gridPowerConsumpitionChannel = channelUID(thing, POWER_GROUP, GRID_POWER_CONSUMPTION_CHANNEL);\n+        gridPowerSupplyChannel = channelUID(thing, POWER_GROUP, GRID_POWER_SUPPLY_CHANNEL);\n+        externalPowerSupplyChannel = channelUID(thing, POWER_GROUP, EXTERNAL_POWER_SUPPLY_CHANNEL);\n+        wallboxPowerConsumptionChannel = channelUID(thing, POWER_GROUP, WALLBOX_POWER_CONSUMPTION_CHANNEL);\n+        wallboxPVPowerConsumptionChannel = channelUID(thing, POWER_GROUP, WALLBOX_PV_POWER_CONSUMPTION_CHANNEL);\n+        autarkyChannel = channelUID(thing, POWER_GROUP, AUTARKY_CHANNEL);\n+        selfConsumptionChannel = channelUID(thing, POWER_GROUP, SELF_CONSUMPTION_CHANNEL);\n+        batterySOCChannel = channelUID(thing, POWER_GROUP, BATTERY_STATE_OF_CHARGE_CHANNEL);\n+\n+        string1AmpereChannel = channelUID(thing, STRINGS_GROUP, STRING1_DC_CURRENT_CHANNEL);\n+        string1VoltChannel = channelUID(thing, STRINGS_GROUP, STRING1_DC_VOLTAGE_CHANNEL);\n+        string1WattChannel = channelUID(thing, STRINGS_GROUP, STRING1_DC_OUTPUT_CHANNEL);\n+        string2AmpereChannel = channelUID(thing, STRINGS_GROUP, STRING2_DC_CURRENT_CHANNEL);\n+        string2VoltChannel = channelUID(thing, STRINGS_GROUP, STRING2_DC_VOLTAGE_CHANNEL);\n+        string2WattChannel = channelUID(thing, STRINGS_GROUP, STRING2_DC_OUTPUT_CHANNEL);\n+        string3AmpereChannel = channelUID(thing, STRINGS_GROUP, STRING3_DC_CURRENT_CHANNEL);\n+        string3VoltChannel = channelUID(thing, STRINGS_GROUP, STRING3_DC_VOLTAGE_CHANNEL);\n+        string3WattChannel = channelUID(thing, STRINGS_GROUP, STRING3_DC_OUTPUT_CHANNEL);\n+    }\n+\n+    public @Nullable ModbusCommunicationInterface getComms() {\n+        return comms;\n+    }\n+\n+    public int getSlaveId() {\n+        return slaveId;\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        // no control of E3DC device possible yet\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        scheduler.execute(() -> {\n+            E3DCConfiguration localConfig = getConfigAs(E3DCConfiguration.class);\n+            config = localConfig;\n+            ModbusCommunicationInterface localComms = connectEndpoint();\n+            if (localComms != null) {\n+                // register low speed info poller\n+                ModbusReadRequestBlueprint infoRequest = new ModbusReadRequestBlueprint(slaveId,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, INFO_REG_START, INFO_REG_SIZE, 3);\n+                infoPoller = localComms.registerRegularPoll(infoRequest, INFO_POLL_REFRESH_TIME_MS, 0,\n+                        this::handleInfoResult, this::handleInfoFailure);\n+\n+                ModbusReadRequestBlueprint dataRequest = new ModbusReadRequestBlueprint(slaveId,\n+                        ModbusReadFunctionCode.READ_MULTIPLE_REGISTERS, POWER_REG_START,\n+                        REGISTER_LENGTH - INFO_REG_SIZE, 3);\n+                if (config != null) {\n+                    dataPoller = localComms.registerRegularPoll(dataRequest, localConfig.refresh, 0,\n+                            this::handleDataResult, this::handleDataFailure);\n+                } else {\n+                    updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                            \"E3DC Configuration missing\");\n+                }\n+            } // else state handling performed in connectEndPoint function\n+        });\n+    }\n+\n+    /**\n+     * Get a reference to the modbus endpoint\n+     */\n+    private @Nullable ModbusCommunicationInterface connectEndpoint() {\n+        if (comms != null) {\n+            return comms;\n+        }\n+\n+        ModbusEndpointThingHandler slaveEndpointThingHandler = getEndpointThingHandler();\n+        if (slaveEndpointThingHandler == null) {\n+            @SuppressWarnings(\"null\")\n+            String label = Optional.ofNullable(getBridge()).map(b -> b.getLabel()).orElse(\"<null>\");\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_OFFLINE,\n+                    String.format(\"Bridge '%s' is offline\", label));\n+            logger.debug(\"No bridge handler available -- aborting init for {}\", label);", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5MTE4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467491187", "bodyText": "I took over the code from @ssalonen and I didn't took a closer look on the debug messages so far. Now I removed additional debug message which are updated in the thing status", "author": "weymann", "createdAt": "2020-08-08T18:23:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2Mjg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2NDI4Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466664286", "bodyText": "Can this be removed?", "author": "fwolter", "createdAt": "2020-08-06T20:21:38Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/handler/E3DCWallboxThingHandler.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.handler;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.modbus.e3dc.internal.E3DCWallboxConfiguration;\n+import org.openhab.binding.modbus.e3dc.internal.dto.DataConverter;\n+import org.openhab.binding.modbus.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.modbus.e3dc.internal.dto.WallboxBlock;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Parser;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCWallboxThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCWallboxThingHandler extends BaseThingHandler {\n+    public enum ReadWriteSuccess {\n+        NOT_RECEIVED,\n+        SUCCESS,\n+        FAILED\n+    }\n+\n+    private static final String READ_WRITE_ERROR = \"Modbus Data Read/Write Error\";\n+    private static final String READ_ERROR = \"Modbus Read Error\";\n+    private static final String WRITE_ERROR = \"Modbus Write Error\";\n+\n+    private final Logger logger = LoggerFactory.getLogger(E3DCWallboxThingHandler.class);\n+    private final Parser dataParser = new Parser(DataType.DATA);\n+    private ReadWriteSuccess dataRead = ReadWriteSuccess.NOT_RECEIVED;\n+    private ReadWriteSuccess dataWrite = ReadWriteSuccess.NOT_RECEIVED;\n+    private volatile BitSet currentBitSet = new BitSet(16);\n+    private @Nullable E3DCWallboxConfiguration config;\n+    private @Nullable E3DCThingHandler bridgeHandler;\n+\n+    public E3DCWallboxThingHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        scheduler.execute(() -> {\n+            config = getConfigAs(E3DCWallboxConfiguration.class);\n+            Bridge bridge = getBridge();\n+            if (bridge != null) {\n+                ThingHandler handler = bridge.getHandler();\n+                if (handler != null) {\n+                    bridgeHandler = ((E3DCThingHandler) handler);\n+                } else {\n+                    logger.warn(\"Thing Handler null\");\n+                }\n+            } else {\n+                logger.warn(\"Bridge null\");\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void dispose() {\n+    }", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5MDU3OA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467490578", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-08T18:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2NDI4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2ODI3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r466668275", "bodyText": "You could add min/max values.", "author": "fwolter", "createdAt": "2020-08-06T20:29:37Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/resources/ESH-INF/thing/thing-e3dc-wallbox.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"modbus\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<thing-type id=\"e3dc-wallbox\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"e3dc\"/>\n+\t\t</supported-bridge-type-refs>\n+\t\t<label>E3DC Wallbox</label>\n+\t\t<description>Provide your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed</description>\n+\t\t<channels>\n+\t\t\t<channel id=\"wb-available\" typeId=\"wb-available-channel\"/>\n+\t\t\t<channel id=\"wb-sunmode\" typeId=\"wb-sunmode-channel\"/>\n+\t\t\t<channel id=\"wb-charging-aborted\" typeId=\"wb-charging-aborted-channel\"/>\n+\t\t\t<channel id=\"wb-charging\" typeId=\"wb-charging-channel\"/>\n+\t\t\t<channel id=\"wb-jack-locked\" typeId=\"wb-jack-locked-channel\"/>\n+\t\t\t<channel id=\"wb-jack-plugged\" typeId=\"wb-jack-plugged-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-on\" typeId=\"wb-schuko-on-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-plugged\" typeId=\"wb-schuko-plugged-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-locked\" typeId=\"wb-schuko-locked-channel\"/>\n+\t\t\t<channel id=\"wb-schuko-relay-16a\" typeId=\"wb-schuko-relay-16a-channel\"/>\n+\t\t\t<channel id=\"wb-relay-16a\" typeId=\"wb-relay-16a-channel\"/>\n+\t\t\t<channel id=\"wb-relay-32a\" typeId=\"wb-relay-32a-channel\"/>\n+\t\t\t<channel id=\"wb-1phase\" typeId=\"wb-1phase-channel\"/>\n+\t\t</channels>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"wallboxId\" type=\"integer\" required=\"true\">", "originalCommit": "9bf8e8b07c0eee12a08fbb5020bfd2fcef483846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5MDgwNA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r467490804", "bodyText": "Right - min / max adapted to 0 / 7", "author": "weymann", "createdAt": "2020-08-08T18:19:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2ODI3NQ=="}], "type": "inlineReview"}, {"oid": "2e9bd7d9df8c1635e67b36bb57c42cf1d214d1f7", "url": "https://github.com/openhab/openhab-addons/commit/2e9bd7d9df8c1635e67b36bb57c42cf1d214d1f7", "message": "Samme ChannelUID creation in WallboxthingHandler as in E3DCThingHandler\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-08T15:53:49Z", "type": "commit"}, {"oid": "06aa1340485455520f1335b0a6bd7f924238f72a", "url": "https://github.com/openhab/openhab-addons/commit/06aa1340485455520f1335b0a6bd7f924238f72a", "message": "DataConverter, Handler updates, Readme and Configuration changes\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-09T10:31:27Z", "type": "commit"}, {"oid": "dde78257d2595c157c789bd9699073426ef3a690", "url": "https://github.com/openhab/openhab-addons/commit/dde78257d2595c157c789bd9699073426ef3a690", "message": "readme with more detailed setup description including picture\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-09T17:42:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5NzI5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r469497297", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |\n          \n          \n            \n            | port            | integer | TCP Port of your E3DC device Modbus Settings. Default is 502 |", "author": "fwolter", "createdAt": "2020-08-12T19:42:24Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\"/>\n+\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. \n+\n+See chapter [Thing Configuration](#thing-configuration) how to set them up or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Wallbox          | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. \n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+<img align=\"right\" src=\"./doc/E3DC_Modbus_Settings.png\"/>\n+\n+1. Create _Modbus TCP Bridge_ with matching Settings of your E3DC Device\n+\n+* IP Address\n+* Device ID\n+* Port ID\n+\n+2. Create _E3DC Home Power Plant_ and attach it to the previous installed _Modbus TCP Bridge_. Configuration requires an approriate Data Refresh Interval with more than 1000 Milliseconds\n+\n+3. If you have a Wallbox attached add _E3DC Wallbox_ Thing with your previous installed _E3DC Home Power Plant_ as Bridge. Configuration requires a Wallbox ID between 0 and 7.\n+\n+Check the [full example Things](#things) for manual setup.\n+\n+### Modbus TCP Slave \n+\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                               |\n+| port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |", "originalCommit": "dde78257d2595c157c789bd9699073426ef3a690", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1NTEwNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r470055106", "bodyText": "oh man - so sorry for all these documentation errors.\nFixed", "author": "weymann", "createdAt": "2020-08-13T15:54:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5NzI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwNzY1Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r470207652", "bodyText": "Never mind!", "author": "fwolter", "createdAt": "2020-08-13T19:49:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5NzI5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5NzYzNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r469497635", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1           |\n          \n          \n            \n            | deviceid        | integer | Modbus ID of your E3DC device Modbus Settings. Default is 1           |", "author": "fwolter", "createdAt": "2020-08-12T19:43:11Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\"/>\n+\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. \n+\n+See chapter [Thing Configuration](#thing-configuration) how to set them up or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Wallbox          | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. \n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+<img align=\"right\" src=\"./doc/E3DC_Modbus_Settings.png\"/>\n+\n+1. Create _Modbus TCP Bridge_ with matching Settings of your E3DC Device\n+\n+* IP Address\n+* Device ID\n+* Port ID\n+\n+2. Create _E3DC Home Power Plant_ and attach it to the previous installed _Modbus TCP Bridge_. Configuration requires an approriate Data Refresh Interval with more than 1000 Milliseconds\n+\n+3. If you have a Wallbox attached add _E3DC Wallbox_ Thing with your previous installed _E3DC Home Power Plant_ as Bridge. Configuration requires a Wallbox ID between 0 and 7.\n+\n+Check the [full example Things](#things) for manual setup.\n+\n+### Modbus TCP Slave \n+\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                               |\n+| port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1           |", "originalCommit": "dde78257d2595c157c789bd9699073426ef3a690", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1OTYwMg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r470059602", "bodyText": "Fixed", "author": "weymann", "createdAt": "2020-08-13T16:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5NzYzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5ODg1NA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r469498854", "bodyText": "If these are percent, you could mention it in the description.", "author": "fwolter", "createdAt": "2020-08-12T19:45:35Z", "path": "bundles/org.openhab.binding.modbus.e3dc/README.md", "diffHunk": "@@ -0,0 +1,371 @@\n+# E3DC Binding\n+\n+<img align=\"right\" src=\"./doc/E3DC_logo.png\"/>\n+\n+Integrates the Home Power Plants from E3/DC GmbH into openHAB. See [E3DC Website](https://www.e3dc.com/) to find more informations about the device.\n+The Power Plant handles all your Electrical Energy Resources like Photovoltaic Producers, Battery Storage, Wallbox Power Supply, Household Consumption and even more.  \n+E3DC devices are integrated into the Modbus Binding. \n+\n+See chapter [Thing Configuration](#thing-configuration) how to set them up or check the [full example Things](#things) for manual setup. \n+\n+\n+## Supported Things\n+\n+First you need a Bridge which establishes the basic connection towards your E3DC device\n+\n+| Name                  | Thing Type ID | Description                                                                                          |\n+|-----------------------|---------------|------------------------------------------------------------------------------------------------------|\n+| E3DC Home Power Plant | e3dc          | Provides Power values, String Details, Emergency Power Status and general Information of your E3DC Home Power Plant    |\n+| E3DC Wallbox          | e3dc-wallbox  | Provides your Wallbox Settings. Switches like \"Sunmode\" or \"1-Phase Charging\" can be changed     |\n+\n+\n+## Discovery\n+\n+There's no discovery. Modbus registers are available for all devices. \n+\n+\n+## Thing Configuration\n+\n+As mentioned earlier in the [Binding Description](#e3dc-binding) the needed Things can be found in the **Modbus Binding** and have to be added manually without Discovery\n+\n+<img align=\"right\" src=\"./doc/E3DC_Modbus_Settings.png\"/>\n+\n+1. Create _Modbus TCP Bridge_ with matching Settings of your E3DC Device\n+\n+* IP Address\n+* Device ID\n+* Port ID\n+\n+2. Create _E3DC Home Power Plant_ and attach it to the previous installed _Modbus TCP Bridge_. Configuration requires an approriate Data Refresh Interval with more than 1000 Milliseconds\n+\n+3. If you have a Wallbox attached add _E3DC Wallbox_ Thing with your previous installed _E3DC Home Power Plant_ as Bridge. Configuration requires a Wallbox ID between 0 and 7.\n+\n+Check the [full example Things](#things) for manual setup.\n+\n+### Modbus TCP Slave \n+\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| host            | text    | IP Address of your device                                               |\n+| port            | integer | Modbus Port of your E3DC device Modbus Settings.. Default is 502 |\n+| deviceid        | integer | Modbus Port of your E3DC device Modbus Settings. Default is 1           |\n+\n+### E3DC Home Power Plant \n+\n+Select as Bridge your previously created Modbus TCP Slave.\n+| Parameter       | Type    | Description                                                             |           \n+|-----------------|---------|-------------------------------------------------------------------------|\n+| refresh         | integer | Refresh Rate of E3DC values in Milliseconds                             |\n+\n+\n+### E3DC Wallbox\n+\n+Select as Bridge your previously created E3DC Home Power Plant.\n+\n+| Parameter       | Type    | Description                                                                 |           \n+|-----------------|---------|-----------------------------------------------------------------------------|\n+| wallboxId       | integer | E3DC supports up to 8 Wallboxes - select a value from 0 to 7                |\n+\n+## Channels\n+\n+The E3DC device offers quite an amount of channels. For clustering 4 Channel Groups are used: \n+\n+### Channel Group _Information Block_\n+\n+| Channel Label         | Channel Group ID | Channel ID          | Type   | Description                                       |\n+|-----------------------|------------------|---------------------|--------|---------------------------------------------------|\n+| Modbus-ID             | info             | modbus-id           | String | Modbus ID / Magic Byte of E3DC                    |\n+| Modbus Firmware       | info             | modbus-firmware     | String | Version of Modbus Firmware                        |\n+| Supported Registers   | info             | supported-registers | Number | Number of registers supported by Modbus           |\n+| Manufacturer Name     | info             | manufacturer-name   | String | Name of the Device Manufacturer                   |\n+| E3DC Model Name       | info             | model-name          | String | Name of the E3DC Model                            |\n+| E3DC Firmware Release | info             | firmware-release    | String | Firmware installed on this particular E3DC Device |\n+| E3DC Serial Number    | info             | serial-number       | String | Serial Number of this particular E3DC Device      |\n+\n+\n+### Channel Group _Power Block_\n+\n+| Channel Label                 |  Channel Group ID | Channel ID                   | Type                   | Description                  |\n+|-------------------------------|-------------------|------------------------------|------------------------|------------------------------|\n+| PV Output                     | power             | pv-power-supply              |  Number:Power          | Photovoltaic Power Production    |\n+| Battery Discharge             | power             | battery-power-supply         |  Number:Power          | Battery discharges and provides Power    |\n+| Battery Charge                | power             | battery-power-consumption    |  Number:Power          | Battery charges and consumes Power    |\n+| Household Consumption         | power             | household-power-consumption  |  Number:Power          | Household consuming Power    |\n+| Grid Power Consumption        | power             | grid-power-consumption       |  Number:Power          | Grid Power is needed in order to satisfy your overall Power consumption    |\n+| Grid Power Supply             | power             | grid-power-supply            |  Number:Power          | More Photovoltaic Power is produced than needed. Additional Power is provided towards the Grid    |\n+| External Power Supply         | power             | external-power-supply        |  Number:Power          | Power produced by an external device which is attached to your E3DC device    |\n+| Wallbox Power Consumption     | power             | wallbox-power-consumption    |  Number:Power          | Power consumption of attached Wallboxes    |\n+| Wallbox PV Power Consumption  | power             | wallbox-pv-power-consumption |  Number:Power          | Photovoltaic Power consumption (PV plus Battery) of attached Wallboxes    |\n+| Autarky                       | power             | autarky-channel              |  Number:Dimensionless  | Your current Autarky Level    |\n+| Self Consumption              | power             | self-consumption             |  Number:Dimensionless  | Your current Photovoltaic Self Consumption Level    |\n+| Battery State Of Charge       | power             | battery-soc                  |  Number:Dimensionless  | Charge Level of your attached Battery    |", "originalCommit": "dde78257d2595c157c789bd9699073426ef3a690", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA2MTAwMw==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r470061003", "bodyText": "Done in readme.md and channel-types.xml to be consistent", "author": "weymann", "createdAt": "2020-08-13T16:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ5ODg1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwMDU1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r469500555", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Integer d = getUInt16Value(wrap);\n          \n          \n            \n                    int d = getUInt16Value(wrap);", "author": "fwolter", "createdAt": "2020-08-12T19:48:46Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/DataConverter.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link DataConverter} Helper class to convert bytes from modbus into desired data format\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class DataConverter {\n+    private static final long MAX_INT32 = (long) Math.pow(2, Integer.SIZE);\n+\n+    /**\n+     * Get unit16 value from 2 bytes\n+     *\n+     * @param wrap\n+     * @return\n+     */\n+    public static int getUInt16Value(ByteBuffer wrap) {\n+        return Short.toUnsignedInt(wrap.getShort());\n+    }\n+\n+    public static long getLongValue(ByteBuffer wrap) {\n+        return Integer.toUnsignedLong(wrap.getInt());\n+    }\n+\n+    /**\n+     * Get double value from 2 bytes with correction factor\n+     *\n+     * @param wrap\n+     * @return\n+     */\n+    public static double getUDoubleValue(ByteBuffer wrap, double factor) {\n+        Integer d = getUInt16Value(wrap);", "originalCommit": "dde78257d2595c157c789bd9699073426ef3a690", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA2MzY2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r470063665", "bodyText": "Right, reduced it to a one liner", "author": "weymann", "createdAt": "2020-08-13T16:07:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwMDU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwNDM0Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r469504342", "bodyText": "Is there a reason why you execute this asynchronously?", "author": "fwolter", "createdAt": "2020-08-12T19:56:03Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/handler/E3DCWallboxThingHandler.java", "diffHunk": "@@ -0,0 +1,261 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.handler;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.E3DCBindingConstants.*;\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.util.BitSet;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.modbus.e3dc.internal.E3DCWallboxConfiguration;\n+import org.openhab.binding.modbus.e3dc.internal.dto.DataConverter;\n+import org.openhab.binding.modbus.e3dc.internal.dto.WallboxArray;\n+import org.openhab.binding.modbus.e3dc.internal.dto.WallboxBlock;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data.DataType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Parser;\n+import org.openhab.io.transport.modbus.AsyncModbusFailure;\n+import org.openhab.io.transport.modbus.AsyncModbusReadResult;\n+import org.openhab.io.transport.modbus.ModbusCommunicationInterface;\n+import org.openhab.io.transport.modbus.ModbusReadRequestBlueprint;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+import org.openhab.io.transport.modbus.ModbusWriteRegisterRequestBlueprint;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link E3DCWallboxThingHandler} Basic modbus connection towards the E3DC device\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class E3DCWallboxThingHandler extends BaseThingHandler {\n+    public enum ReadWriteSuccess {\n+        NOT_RECEIVED,\n+        SUCCESS,\n+        FAILED\n+    }\n+\n+    private static final String READ_WRITE_ERROR = \"Modbus Data Read/Write Error\";\n+    private static final String READ_ERROR = \"Modbus Read Error\";\n+    private static final String WRITE_ERROR = \"Modbus Write Error\";\n+\n+    ChannelUID wbAvailableChannel;\n+    ChannelUID wbSunmodeChannel;\n+    ChannelUID wbChargingAbortedChannel;\n+    ChannelUID wbChargingChannel;\n+    ChannelUID wbJackLockedChannel;\n+    ChannelUID wbJackPluggedChannel;\n+    ChannelUID wbSchukoOnChannel;\n+    ChannelUID wbSchukoPluggedChannel;\n+    ChannelUID wbSchukoLockedChannel;\n+    ChannelUID wbSchukoRelay16Channel;\n+    ChannelUID wbRelay16Channel;\n+    ChannelUID wbRelay32Channel;\n+    ChannelUID wb1phaseChannel;\n+\n+    private final Logger logger = LoggerFactory.getLogger(E3DCWallboxThingHandler.class);\n+    private final Parser dataParser = new Parser(DataType.DATA);\n+    private ReadWriteSuccess dataRead = ReadWriteSuccess.NOT_RECEIVED;\n+    private ReadWriteSuccess dataWrite = ReadWriteSuccess.NOT_RECEIVED;\n+    private volatile BitSet currentBitSet = new BitSet(16);\n+    private @Nullable E3DCWallboxConfiguration config;\n+    private @Nullable E3DCThingHandler bridgeHandler;\n+\n+    public E3DCWallboxThingHandler(Thing thing) {\n+        super(thing);\n+        wbAvailableChannel = new ChannelUID(thing.getUID(), WB_AVAILABLE_CHANNEL);\n+        wbSunmodeChannel = new ChannelUID(thing.getUID(), WB_SUNMODE_CHANNEL);\n+        wbChargingAbortedChannel = new ChannelUID(thing.getUID(), WB_CHARGING_ABORTED_CHANNEL);\n+        wbChargingChannel = new ChannelUID(thing.getUID(), WB_CHARGING_CHANNEL);\n+        wbJackLockedChannel = new ChannelUID(thing.getUID(), WB_JACK_LOCKED_CHANNEL);\n+        wbJackPluggedChannel = new ChannelUID(thing.getUID(), WB_JACK_PLUGGED_CHANNEL);\n+        wbSchukoOnChannel = new ChannelUID(thing.getUID(), WB_SCHUKO_ON_CHANNEL);\n+        wbSchukoPluggedChannel = new ChannelUID(thing.getUID(), WB_SCHUKO_PLUGGED_CHANNEL);\n+        wbSchukoLockedChannel = new ChannelUID(thing.getUID(), WB_SCHUKO_LOCKED_CHANNEL);\n+        wbSchukoRelay16Channel = new ChannelUID(thing.getUID(), WB_SCHUKO_RELAY_16A_CHANNEL);\n+        wbRelay16Channel = new ChannelUID(thing.getUID(), WB_RELAY_16A_CHANNEL);\n+        wbRelay32Channel = new ChannelUID(thing.getUID(), WB_RELAY_32A_CHANNEL);\n+        wb1phaseChannel = new ChannelUID(thing.getUID(), WB_1PHASE_CHANNEL);\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        updateStatus(ThingStatus.UNKNOWN);\n+        scheduler.execute(() -> {", "originalCommit": "dde78257d2595c157c789bd9699073426ef3a690", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA3MDI4OA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r470070288", "bodyText": "It's the pattern generated by the binding skeleton script. But of course there are no extensive actions. I removed scheduler and get config and bridge synchronous.", "author": "weymann", "createdAt": "2020-08-13T16:19:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwNDM0Mg=="}], "type": "inlineReview"}, {"oid": "4cf0feb1298b81f43aea1857c34e273740c7d318", "url": "https://github.com/openhab/openhab-addons/commit/4cf0feb1298b81f43aea1857c34e273740c7d318", "message": "correct review findings\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-13T22:18:17Z", "type": "commit"}, {"oid": "8c051c46b81c21c646caf610d93d70507df707da", "url": "https://github.com/openhab/openhab-addons/commit/8c051c46b81c21c646caf610d93d70507df707da", "message": "adapt translations according to channel description changes\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-14T09:05:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI0ODQ4MA==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r477248480", "bodyText": "Not really something to change, but you can use:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    batteryChargingLocked = bs.get(EMS_CHARGING_LOCK_BIT) ? OnOffType.ON : OnOffType.OFF;\n          \n          \n            \n                    batteryChargingLocked = OnOffType.from(bs.get(EMS_CHARGING_LOCK_BIT));\n          \n      \n    \n    \n  \n\nMakes the code a bit more readable with all these lines.", "author": "Hilbrand", "createdAt": "2020-08-26T12:06:21Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/dto/EmergencyBlock.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.modbus.e3dc.internal.dto;\n+\n+import static org.openhab.binding.modbus.e3dc.internal.modbus.E3DCModbusConstans.*;\n+\n+import java.nio.ByteBuffer;\n+import java.util.BitSet;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.StringType;\n+import org.openhab.binding.modbus.e3dc.internal.modbus.Data;\n+\n+/**\n+ * The {@link EmergencyBlock} Data object for E3DC Info Block\n+ *\n+ * @author Bernd Weymann - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EmergencyBlock implements Data {\n+    public StringType epStatus = EP_UNKOWN;\n+    public OnOffType batteryChargingLocked = OnOffType.OFF;\n+    public OnOffType batteryDischargingLocked = OnOffType.OFF;\n+    public OnOffType epPossible = OnOffType.OFF;\n+    public OnOffType weatherPredictedCharging = OnOffType.OFF;\n+    public OnOffType regulationStatus = OnOffType.OFF;\n+    public OnOffType chargeLockTime = OnOffType.OFF;\n+    public OnOffType dischargeLockTime = OnOffType.OFF;\n+\n+    // Possible Status definitions according to chapter 3.1.2, Register 40084, page 14 & 15\n+    public static final StringType EP_NOT_SUPPORTED = new StringType(\"EP not supported\");\n+    public static final StringType EP_ACTIVE = new StringType(\"EP active\");\n+    public static final StringType EP_NOT_ACTIVE = new StringType(\"EP not active\");\n+    public static final StringType EP_POSSIBLE = new StringType(\"EP possible\");\n+    public static final StringType EP_SWITCH = new StringType(\"EP Switch in wrong position\");\n+    public static final StringType EP_UNKOWN = new StringType(\"EP Status unknown\");\n+    public static final StringType[] EP_STATUS_ARRAY = new StringType[] { EP_NOT_SUPPORTED, EP_ACTIVE, EP_NOT_ACTIVE,\n+            EP_POSSIBLE, EP_SWITCH };\n+\n+    /**\n+     * For decoding see Modbus Register Mapping Chapter 3.1.2 page 14 & 15\n+     *\n+     * @param bArray - Modbus Registers as bytes from 40084 to 40085\n+     */\n+    public EmergencyBlock(byte[] bArray) {\n+        // uint16 status register 40084 - possible Status Strings are defined in Constants above\n+        int status = DataConverter.getUInt16Value(ByteBuffer.wrap(bArray));\n+        if (status >= 0 && status < 5) {\n+            epStatus = EP_STATUS_ARRAY[status];\n+        } else {\n+            epStatus = EP_UNKOWN;\n+        }\n+\n+        // uint16 status register 40085 shall be handled as Bits - check cahpter 3.1.3 page 17\n+        byte[] emsStatusBytes = new byte[] { bArray[3], bArray[2] };\n+        BitSet bs = BitSet.valueOf(emsStatusBytes);\n+        batteryChargingLocked = bs.get(EMS_CHARGING_LOCK_BIT) ? OnOffType.ON : OnOffType.OFF;", "originalCommit": "8c051c46b81c21c646caf610d93d70507df707da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU0ODQ5OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r478548499", "bodyText": "Sure, applied changes also in WallboxBlock with the same pattern", "author": "weymann", "createdAt": "2020-08-27T16:32:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI0ODQ4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI1NjQ5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r477256492", "bodyText": "These channels look more like properties of a thing/bridge? Maybe this was discussed before, but is there a reason to create channels instead of properties?", "author": "Hilbrand", "createdAt": "2020-08-26T12:20:31Z", "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/resources/ESH-INF/thing/info-channel-groups.xml", "diffHunk": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"modbus\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\t<channel-group-type id=\"info-values\">\n+\t\t<label>Information</label>", "originalCommit": "8c051c46b81c21c646caf610d93d70507df707da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MTcyNg==", "url": "https://github.com/openhab/openhab-addons/pull/8172#discussion_r478561726", "bodyText": "There was one remark regarding properties and as result the implementation contains a \"low speed\" update of these registers while Data is updated frequently.\nSeveral enrties will change due to remote updates like Modbus Firmware Version, Supported Registers and Firmware. After the Device Installation the Serial Number wasn't set and was updated remotely. Also the Modbus-ID can change because you can operate the device either in Sunspec Mode or in the Manufacturers own Mode.\nIn addition I would like to have these values in my UI. It's quite handy to check currently installed Software Versions for Support. With Properties I have to change to PaperUI, search the device and check the properties. On Smartphone I didn't find a possibility to check properties yet.", "author": "weymann", "createdAt": "2020-08-27T16:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI1NjQ5Mg=="}], "type": "inlineReview"}, {"oid": "57b8d026572982974055aaad6d2bf5489924f04e", "url": "https://github.com/openhab/openhab-addons/commit/57b8d026572982974055aaad6d2bf5489924f04e", "message": "optimize OnOffType assignment\n\nSigned-off-by: Bernd <bernd.weymann@gmail.com>", "committedDate": "2020-08-27T16:56:30Z", "type": "commit"}]}