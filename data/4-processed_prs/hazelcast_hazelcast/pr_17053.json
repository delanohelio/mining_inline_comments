{"pr_number": 17053, "pr_title": "Count of map metric with backup read enabled", "pr_createdAt": "2020-06-05T10:34:07Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17053", "timeline": [{"oid": "9e666f94ec296433ed0c26498608c1c071dac4c3", "url": "https://github.com/hazelcast/hazelcast/commit/9e666f94ec296433ed0c26498608c1c071dac4c3", "message": "map metric count with backup read enabled", "committedDate": "2020-06-05T10:31:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwMTI4NA==", "url": "https://github.com/hazelcast/hazelcast/pull/17053#discussion_r436301284", "bodyText": "I'm worried about config.getMapConfig() returning null in some edge cases (eg. if the map exists when we collect the maps from the node, but it is already destroyed when this line gets executed?). So please make this NPE-proof.", "author": "erosb", "createdAt": "2020-06-06T21:16:28Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/MapInfoCollector.java", "diffHunk": "@@ -39,7 +39,13 @@\n         Map<String, String> mapInfo = new HashMap<>();\n \n         mapInfo.put(\"mpct\", String.valueOf(maps.size()));\n+        mapInfo.put(\"mpbrct\", String.valueOf(countMapWithBackupReadEnabled(hazelcastNode)));\n \n         return mapInfo;\n     }\n+\n+    private long countMapWithBackupReadEnabled(Node node) {\n+        return maps.stream().filter(distributedObject -> node.getConfig().\n+                getMapConfig(distributedObject.getName()).isReadBackupData()).count();", "originalCommit": "9e666f94ec296433ed0c26498608c1c071dac4c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwMTU4Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17053#discussion_r436301587", "bodyText": "I think it would make sense to test more things in one integration test, so please rename testMapCount() and change it to cover this metric as well. Partly because it is faster (integ test setup and tear-down can be significantly slow), and partly because that way the integ test is closer to what happens in reality.", "author": "erosb", "createdAt": "2020-06-06T21:21:26Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/util/phonehome/PhoneHomeIntegrationTest.java", "diffHunk": "@@ -56,5 +56,23 @@ public void testMapCount() {\n         verify(1, getRequestedFor(urlPathEqualTo(\"/ping\")).withQueryParam(\"mpct\", equalTo(\"2\")));\n \n     }\n+\n+    @Test\n+    public void testMapCountWithBackupReadEnabled() {\n+        HazelcastInstance hz = createHazelcastInstance();\n+        Node node = getNode(hz);\n+        PhoneHome phoneHome = new PhoneHome(node, \"http://localhost:8080/ping\");\n+        Map<String, String> map1 = hz.getMap(\"hazelcast\");\n+        node.getConfig().getMapConfig(\"hazelcast\").setReadBackupData(true);", "originalCommit": "9e666f94ec296433ed0c26498608c1c071dac4c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwMTY3OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17053#discussion_r436301678", "bodyText": "These 3 lines seem to be duplicated in all unittests. Can you extract it into a @Before method and have the node and phoneHome initialized as fields?", "author": "erosb", "createdAt": "2020-06-06T21:22:53Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/util/phonehome/PhoneHomeTest.java", "diffHunk": "@@ -145,5 +145,23 @@ public void testMapCount() {\n         parameters = phoneHome.phoneHome(true);\n         assertEquals(parameters.get(\"mpct\"), \"3\");\n     }\n+\n+    @Test\n+    public void testMapCountWithBackupReadEnabled() {\n+        HazelcastInstance hz = createHazelcastInstance();\n+        Node node = getNode(hz);\n+        PhoneHome phoneHome = new PhoneHome(node);", "originalCommit": "9e666f94ec296433ed0c26498608c1c071dac4c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4ca498671e9e5382a6f638d669542b5b5cf6f311", "url": "https://github.com/hazelcast/hazelcast/commit/4ca498671e9e5382a6f638d669542b5b5cf6f311", "message": "update with requested chnages", "committedDate": "2020-06-07T14:04:59Z", "type": "commit"}, {"oid": "5e715ed8b7f7c2bcdd091b86e4ab480b2a2554c7", "url": "https://github.com/hazelcast/hazelcast/commit/5e715ed8b7f7c2bcdd091b86e4ab480b2a2554c7", "message": "Updates", "committedDate": "2020-06-08T15:11:53Z", "type": "commit"}, {"oid": "ae182bff7949c5c7e8a97231c169b5ddc1217957", "url": "https://github.com/hazelcast/hazelcast/commit/ae182bff7949c5c7e8a97231c169b5ddc1217957", "message": "Updates", "committedDate": "2020-06-08T16:13:58Z", "type": "commit"}, {"oid": "aab95ad4bc637bb271ce8f0ce2efa88c31075b8a", "url": "https://github.com/hazelcast/hazelcast/commit/aab95ad4bc637bb271ce8f0ce2efa88c31075b8a", "message": "Updates", "committedDate": "2020-06-08T16:19:30Z", "type": "commit"}, {"oid": "5417f5094aa38b97c66dd90ef9b284db16bafd94", "url": "https://github.com/hazelcast/hazelcast/commit/5417f5094aa38b97c66dd90ef9b284db16bafd94", "message": "Updates", "committedDate": "2020-06-08T16:37:01Z", "type": "commit"}]}