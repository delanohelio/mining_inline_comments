{"pr_number": 17996, "pr_title": "SQL: support \"NOT LIKE\" expression [IMDG-148]", "pr_createdAt": "2020-12-22T10:11:35Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17996", "timeline": [{"oid": "f60fe6277a09ff17a06b149e0a91904fe4de893a", "url": "https://github.com/hazelcast/hazelcast/commit/f60fe6277a09ff17a06b149e0a91904fe4de893a", "message": "SQL: support \"NOT LIKE\" expression", "committedDate": "2020-12-22T10:09:11Z", "type": "commit"}, {"oid": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18", "url": "https://github.com/hazelcast/hazelcast/commit/2d877a19f30afc9ef29b2deb862feb7c5df3ff18", "message": "Fix test", "committedDate": "2020-12-22T12:22:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk0OTk2NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17996#discussion_r547949965", "bodyText": "Question: do we use java reflections to instantiate so that we have to have empty public constructor?", "author": "alex-dukhno", "createdAt": "2020-12-23T13:06:46Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/expression/string/LikeFunction.java", "diffHunk": "@@ -54,18 +57,26 @@\n     /** Special characters which require escaping in Java. */\n     private static final String ESCAPE_CHARACTERS_JAVA = \"[]()|^+*?{}$\\\\.\";\n \n+    private boolean negated;\n     private transient State state;\n \n     public LikeFunction() {", "originalCommit": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4MTYyMg==", "url": "https://github.com/hazelcast/hazelcast/pull/17996#discussion_r549281622", "bodyText": "The public constructor is required by our serialization engine, see SqlDataSerializerHook.", "author": "devozerov", "createdAt": "2020-12-28T09:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk0OTk2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYyNTM3MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17996#discussion_r556625371", "bodyText": "If you have just one parameter, you don't need to use a nested collection:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static Collection<Object[]> parameters() {\n          \n          \n            \n                    return Arrays.asList(new Object[][]{ { false }, { true } });\n          \n          \n            \n                public static List<Boolean> parameters() {\n          \n          \n            \n                    return Arrays.asList(false, true);", "author": "viliam-durina", "createdAt": "2021-01-13T15:50:10Z", "path": "hazelcast-sql-core/src/test/java/com/hazelcast/sql/impl/expression/string/LikeFunctionIntegrationTest.java", "diffHunk": "@@ -37,132 +43,149 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n-@RunWith(HazelcastParallelClassRunner.class)\n+@RunWith(Parameterized.class)\n+@Parameterized.UseParametersRunnerFactory(HazelcastParallelParametersRunnerFactory.class)\n @Category({QuickTest.class, ParallelJVMTest.class})\n public class LikeFunctionIntegrationTest extends ExpressionTestSupport {\n+\n+    private static final ConstantExpression<?> CONST_1 = ConstantExpression.create(\"1\", QueryDataType.VARCHAR);\n+    private static final ConstantExpression<?> CONST_2 = ConstantExpression.create(\"2\", QueryDataType.VARCHAR);\n+    private static final ConstantExpression<?> CONST_3 = ConstantExpression.create(\"3\", QueryDataType.VARCHAR);\n+    private static final ConstantExpression<?> CONST_OTHER = ConstantExpression.create(\"100\", QueryDataType.VARCHAR);\n+\n+    @Parameterized.Parameter\n+    public boolean negated;\n+\n+    @Parameterized.Parameters(name = \"mode:{0}\")\n+    public static Collection<Object[]> parameters() {\n+        return Arrays.asList(new Object[][]{ { false }, { true } });", "originalCommit": "2d877a19f30afc9ef29b2deb862feb7c5df3ff18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA2NTMyMg==", "url": "https://github.com/hazelcast/hazelcast/pull/17996#discussion_r557065322", "bodyText": "Fixed as suggested.", "author": "devozerov", "createdAt": "2021-01-14T06:16:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYyNTM3MQ=="}], "type": "inlineReview"}, {"oid": "d27a5e8f9b5f9e2e2c0243d153288798ce575964", "url": "https://github.com/hazelcast/hazelcast/commit/d27a5e8f9b5f9e2e2c0243d153288798ce575964", "message": "Merge branch 'master' into sql-expr-not-like", "committedDate": "2021-01-14T06:14:53Z", "type": "commit"}, {"oid": "d344be66caf8552cf07c8d32a3e0de432aeb6065", "url": "https://github.com/hazelcast/hazelcast/commit/d344be66caf8552cf07c8d32a3e0de432aeb6065", "message": "Minors.", "committedDate": "2021-01-14T06:15:48Z", "type": "commit"}]}