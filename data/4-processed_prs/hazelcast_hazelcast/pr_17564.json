{"pr_number": 17564, "pr_title": "Fixes for issues in partitioning/migration system", "pr_createdAt": "2020-09-17T09:58:13Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17564", "timeline": [{"oid": "2acf55fbe97c2a57f7ae3773fac102b7d6744886", "url": "https://github.com/hazelcast/hazelcast/commit/2acf55fbe97c2a57f7ae3773fac102b7d6744886", "message": "Fixes for issues in partitioning/migration system\n\n- _Avoid duplicate migration finalization on former backup replica_:\nFormer backup owner does not participate in migration transaction, data always copied\nfrom the primary replica. Former backup replica is notified after the migration is\ncommitted on the destination. So in some cases, finalization operation for the same\nmigration can be scheduled multiple times. To fix that, we validate the migration\nagainst the local partition table to determine whether migration is stale or not.\n\n- Anti-entropy operation submitted to the backup replicas should verify the local\npartition table whether the local member is the owner of the given replica and\nsender is the primary replica of the partition. Normally this is verified\nwhile processing backup replication operation. But a prior verification is needed\nbecause otherwise it can cause removal of replica namespaces accidentally.\n\n- Added more debug/trace logs.\n\n- Also added an assertion to check whether a collection/map is modified while\nserializing.", "committedDate": "2020-09-16T13:20:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4NDcyMw==", "url": "https://github.com/hazelcast/hazelcast/pull/17564#discussion_r492584723", "bodyText": "probably guard with a check if fine level is enabled? (similarly below)", "author": "vbekiaris", "createdAt": "2020-09-22T09:09:24Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/operation/PartitionBackupReplicaAntiEntropyOperation.java", "diffHunk": "@@ -63,9 +66,35 @@ public void run() {\n         int partitionId = getPartitionId();\n         int replicaIndex = getReplicaIndex();\n \n+        InternalPartitionImpl partition = partitionService.getPartitionStateManager().getPartitionImpl(partitionId);\n+        int currentReplicaIndex = partition.getReplicaIndex(PartitionReplica.from(getNodeEngine().getLocalMember()));\n+\n+        ILogger logger = getLogger();\n+        if (replicaIndex != currentReplicaIndex) {\n+            logger.fine(\"Anti-entropy operation for partitionId=\" + getPartitionId() + \", replicaIndex=\" + getReplicaIndex()", "originalCommit": "2acf55fbe97c2a57f7ae3773fac102b7d6744886", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMjc2MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17564#discussion_r492612761", "bodyText": "I didn't add an if guard here because this is a very edge case, this is not printed often. During testing I've just seen these logs a few times only.", "author": "mdogan", "createdAt": "2020-09-22T09:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4NDcyMw=="}], "type": "inlineReview"}]}