{"pr_number": 17113, "pr_title": "[4.1] Fine-tuning cluster properties for EE WAN throttling (#17092)", "pr_createdAt": "2020-06-19T11:10:24Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17113", "timeline": [{"oid": "67386d9695440a0d6a13a14765a028722ac96feb", "url": "https://github.com/hazelcast/hazelcast/commit/67386d9695440a0d6a13a14765a028722ac96feb", "message": "Fine-tuning cluster properties for EE WAN throttling (#17092)\n\nAdding the fine-tuning group properties for the EE WAN throttling\nfeature.", "committedDate": "2020-06-19T11:07:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4NDkyMA==", "url": "https://github.com/hazelcast/hazelcast/pull/17113#discussion_r443484920", "bodyText": "Why are you using a string here? A Double won't do?", "author": "pveentjer", "createdAt": "2020-06-22T11:11:20Z", "path": "hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java", "diffHunk": "@@ -1130,6 +1130,63 @@ private int getWhenNoSSLDetected() {\n     public static final HazelcastProperty METRICS_COLLECTION_FREQUENCY\n             = new HazelcastProperty(\"hazelcast.metrics.collection.frequency\");\n \n+    /**\n+     * Defines the pending invocation threshold for the Enterprise WAN\n+     * replication implementation. Exceeding this threshold on a WAN\n+     * consumer member makes the member delaying the WAN acknowledgment,\n+     * thus slowing down the WAN publishers on the source side that send\n+     * WAN events to the given WAN consumer. Setting this value to\n+     * negative turns off the acknowledgement delaying feature.\n+     *\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_INVOCATION_THRESHOLD\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.invocation.threshold\", 50000);\n+\n+    /**\n+     * Defines the initial backoff delay for the Enterprise WAN\n+     * implementation's consumer. It is used if the acknowledgment\n+     * delaying feature is enabled by setting\n+     * {@link #WAN_CONSUMER_INVOCATION_THRESHOLD} to a non-negative value\n+     * and that the threshold is exceeded.\n+     *\n+     * @see #WAN_CONSUMER_INVOCATION_THRESHOLD\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.ack.delay.backoff.init\", 1);\n+\n+    /**\n+     * Defines the maximum backoff delay for the Enterprise WAN\n+     * implementation's consumer. It is used if the acknowledgment\n+     * delaying feature is enabled by setting\n+     * {@link #WAN_CONSUMER_INVOCATION_THRESHOLD} to a non-negative value\n+     * and that the threshold is exceeded.\n+     *\n+     * @see #WAN_CONSUMER_INVOCATION_THRESHOLD\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.ack.delay.backoff.max\", 100);\n+\n+    /**\n+     * Defines the multiplier (the speed of the function) for the backoff\n+     * delay for the Enterprise WAN implementation's consumer. It is used\n+     * if the acknowledgment delaying feature is enabled by setting\n+     * {@link #WAN_CONSUMER_INVOCATION_THRESHOLD} to a non-negative value\n+     * and that the threshold is exceeded.\n+     *\n+     * @see #WAN_CONSUMER_INVOCATION_THRESHOLD\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.ack.delay.backoff.multiplier\", \"1.5\");", "originalCommit": "67386d9695440a0d6a13a14765a028722ac96feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUzNDcxNw==", "url": "https://github.com/hazelcast/hazelcast/pull/17113#discussion_r443534717", "bodyText": "It was a clean cherry-pick of an already approved PR, didn't modify this part. We can take a look cc @blazember", "author": "mmedenjak", "createdAt": "2020-06-22T12:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4NDkyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU4OTAxMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17113#discussion_r443589011", "bodyText": "There is no constructor with double param. I can add it though.", "author": "blazember", "createdAt": "2020-06-22T14:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4NDkyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2MzM5NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17113#discussion_r444263395", "bodyText": "Added the double/float support to HazelcastProperties and made this double.", "author": "blazember", "createdAt": "2020-06-23T14:22:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4NDkyMA=="}], "type": "inlineReview"}, {"oid": "c6507bad83aad6de25258dd856fbd3088b200138", "url": "https://github.com/hazelcast/hazelcast/commit/c6507bad83aad6de25258dd856fbd3088b200138", "message": "Add float/double support to HazelcastProperty", "committedDate": "2020-06-23T14:12:00Z", "type": "commit"}]}