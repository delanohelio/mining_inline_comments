{"pr_number": 17406, "pr_title": "Throw descriptive Exception when field is missing", "pr_createdAt": "2020-08-26T06:35:02Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17406", "timeline": [{"oid": "c47e1669e4eb1660ad00327ac2e7db779134cdb5", "url": "https://github.com/hazelcast/hazelcast/commit/c47e1669e4eb1660ad00327ac2e7db779134cdb5", "message": "Throw descriptive Exception when field is missing\n\nMake GenericRecord.Builder#build method throw\na HazelcastSerializaitonException with missing field info\ninstead of NullPointerException\n\nfixes #17404", "committedDate": "2020-08-26T06:30:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE2MzU0NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17406#discussion_r477163545", "bodyText": "nit this assertion (and other similar ones in this test) can be simplified to assertThrows(HazelcastSerializationException.class, builder::build);", "author": "puzpuzpuz", "createdAt": "2020-08-26T09:25:23Z", "path": "hazelcast/src/test/java/com/hazelcast/genericrecord/GenericRecordBuilderTest.java", "diffHunk": "@@ -101,4 +101,20 @@ public void run() {\n             }\n         });\n     }\n+\n+    @Test\n+    public void testUnwrittenFieldsThrowException() {\n+        ClassDefinition classDefinition =\n+                new ClassDefinitionBuilder(TestSerializationConstants.PORTABLE_FACTORY_ID, TestSerializationConstants.NAMED_PORTABLE)\n+                        .addUTFField(\"name\").addIntField(\"myint\").build();\n+\n+        GenericRecord.Builder builder = GenericRecord.Builder.portable(classDefinition);\n+        builder.writeInt(\"myint\", 1);\n+        assertThrows(HazelcastSerializationException.class, new Runnable() {", "originalCommit": "c47e1669e4eb1660ad00327ac2e7db779134cdb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4124eeabe6a9673bd263d97a4f2d9169e878b503", "url": "https://github.com/hazelcast/hazelcast/commit/4124eeabe6a9673bd263d97a4f2d9169e878b503", "message": "convert Runnable's to lambda in the test", "committedDate": "2020-08-26T09:34:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3OTg0Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17406#discussion_r477279846", "bodyText": "if i do cloneWithBuilder (all isWritten fields are false) and i only overwrite one field, some fields of isWritten will be left as false, right? and this check would fail? am i missing something here?", "author": "ihsandemir", "createdAt": "2020-08-26T12:58:50Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/portable/PortableGenericRecordBuilder.java", "diffHunk": "@@ -29,25 +29,39 @@\n \n     private final ClassDefinition classDefinition;\n     private final Object[] objects;\n-    private final boolean[] isOverWritten;\n+    private final boolean[] isWritten;\n     private final boolean isClone;\n \n     public PortableGenericRecordBuilder(ClassDefinition classDefinition) {\n         this.classDefinition = classDefinition;\n         this.objects = new Object[classDefinition.getFieldCount()];\n         this.isClone = false;\n-        this.isOverWritten = null;\n+        this.isWritten = new boolean[objects.length];\n     }\n \n     PortableGenericRecordBuilder(ClassDefinition classDefinition, Object[] objects) {\n         this.classDefinition = classDefinition;\n         this.objects = objects;\n         this.isClone = true;\n-        this.isOverWritten = new boolean[objects.length];\n+        this.isWritten = new boolean[objects.length];\n     }\n \n+    /**\n+     * @return newly created GenericRecord\n+     * @throws HazelcastSerializationException if a field is not written when building with builder from\n+     *                                         {@link GenericRecord.Builder#portable(ClassDefinition)} and\n+     *                                         {@link GenericRecord#newBuilder()}\n+     */\n     @Override\n     public GenericRecord build() {\n+        if (!isClone) {\n+            for (int i = 0; i < isWritten.length; i++) {\n+                if (!isWritten[i]) {", "originalCommit": "4124eeabe6a9673bd263d97a4f2d9169e878b503", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI4NjM5Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17406#discussion_r477286392", "bodyText": "If you do clone with the builder this check will not be done. see  if (!isClone) { at the beginning.\nI have a test that verifies the behavior.", "author": "sancar", "createdAt": "2020-08-26T13:09:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3OTg0Ng=="}], "type": "inlineReview"}]}