{"pr_number": 17518, "pr_title": "Fixes AbstractInvocationFuture#thenApply", "pr_createdAt": "2020-09-10T10:08:31Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17518", "timeline": [{"oid": "e5f7360f33562af0a240c94de0d202d6fe1b20b9", "url": "https://github.com/hazelcast/hazelcast/commit/e5f7360f33562af0a240c94de0d202d6fe1b20b9", "message": "Fixes AbstractInvocationFuture#thenApply\n\nWhen a user function is registered on a not-yet\ncomplete future, the ApplyNode would not catch\nan exception thrown from the user function. Now it\nis caught and completes exceptionally the returned\nCompletionStage.", "committedDate": "2020-09-10T10:05:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQxMDQ2MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17518#discussion_r486410461", "bodyText": "Bad indentation", "author": "viliam-durina", "createdAt": "2020-09-10T14:55:41Z", "path": "hazelcast/src/test/java/com/hazelcast/spi/impl/CompletableFutureAbstractTest.java", "diffHunk": "@@ -1065,12 +1163,17 @@ public void acceptEitherAsync() {\n     }\n \n     @Test\n-    public void applyToEitherAsync_onIncompleteFuture_whenExecutionRejected() {\n+        public void acceptEither_whenActionThrowsException() {", "originalCommit": "e5f7360f33562af0a240c94de0d202d6fe1b20b9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "30495530d1f2d2b9af1293b389cf0862673b7333", "url": "https://github.com/hazelcast/hazelcast/commit/30495530d1f2d2b9af1293b389cf0862673b7333", "message": "fix identation", "committedDate": "2020-09-11T14:12:58Z", "type": "commit"}]}