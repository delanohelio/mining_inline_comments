{"pr_number": 16524, "pr_title": "Do not serialize optimize-queries option in MapConfig", "pr_createdAt": "2020-01-22T10:08:03Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16524", "timeline": [{"oid": "5d9fd8294ef952f1c93b7ce61db856b109059254", "url": "https://github.com/hazelcast/hazelcast/commit/5d9fd8294ef952f1c93b7ce61db856b109059254", "message": "Do not serialize optimize-queries option in MapConfig\n\nThis setting is a derived value and when serializing there\nis no need to set it in the generated XML", "committedDate": "2020-01-22T09:58:06Z", "type": "commit"}, {"oid": "2076302a3a01da62ab339da2f3d00d4eb26d50b0", "url": "https://github.com/hazelcast/hazelcast/commit/2076302a3a01da62ab339da2f3d00d4eb26d50b0", "message": "Fix for wrong conflicting state detection when both optimize queries and setCacheDeserializedValues is set", "committedDate": "2020-01-22T10:06:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzA3Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369593072", "bodyText": "Probably not that important but this is just one of possible 4 allowed combinations. I don't think we cover setOptimizeQueries(false) followed by setCacheDeserializedValues(CacheDeserializedValues.INDEX_ONLY), and setCacheDeserializedValues(CacheDeserializedValues.NEVER/INDEX_ONLY) followed by setOptimizeQueries(false).", "author": "vojtechtoman", "createdAt": "2020-01-22T14:31:36Z", "path": "hazelcast/src/test/java/com/hazelcast/config/MapConfigTest.java", "diffHunk": "@@ -401,6 +401,16 @@ public void givenSetOptimizeQueryIsTrue_whenSetCacheDeserializedValuesToINDEX_ON\n         mapConfig.setCacheDeserializedValues(CacheDeserializedValues.INDEX_ONLY);\n     }\n \n+    @Test\n+    public void givenSetOptimizeQueryIsFalse_whenSetCacheDeserializedValuesToNEVER_thenNoException() {", "originalCommit": "2076302a3a01da62ab339da2f3d00d4eb26d50b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MTE1MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369671151", "bodyText": "what's the expected behaviour when INDEX_ONLY is set?", "author": "cangencer", "createdAt": "2020-01-22T16:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY4MDAyMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369680021", "bodyText": "We actually had another bug which wasn't covered. I've updated the tests and cleaned up the code", "author": "cangencer", "createdAt": "2020-01-22T16:53:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NTgxMg==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369975812", "bodyText": "I actually don't know what the expected behaviour is with INDEX_ONLY, I simply looked at the current impl. INDEX_ONLY is the default and when setOptimizeQueries(false) is called, this default value does not change.", "author": "vojtechtoman", "createdAt": "2020-01-23T08:08:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NzMzMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369977331", "bodyText": "ok, so nothing should happen when it's set to false and it's set to INDEX_ONLY?", "author": "cangencer", "createdAt": "2020-01-23T08:13:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3ODM0MA==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369978340", "bodyText": "To be honest, I actually don't know - maybe @jerrinot will be able to help?", "author": "vojtechtoman", "createdAt": "2020-01-23T08:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5MzA3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwNTgyMA==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369605820", "bodyText": "I believe this if can be removed now as it has become just a subset of the following if (I think).", "author": "vojtechtoman", "createdAt": "2020-01-22T14:52:31Z", "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -851,17 +851,19 @@ private void validateCacheDeserializedValuesOption(CacheDeserializedValues valid\n         if (optimizeQueryExplicitlyInvoked) {\n             // deprecated {@link #setOptimizeQueries(boolean)} was explicitly invoked\n             // we need to be strict with validation to detect conflicts\n-            boolean optimizeQuerySet = (cacheDeserializedValues == CacheDeserializedValues.ALWAYS);\n-            if (optimizeQuerySet && validatedCacheDeserializedValues == CacheDeserializedValues.NEVER) {\n+            boolean optimizeQueryFlag = (cacheDeserializedValues == CacheDeserializedValues.ALWAYS);\n+            if (!optimizeQueryFlag && validatedCacheDeserializedValues == CacheDeserializedValues.NEVER) {\n+                // settings are compatible\n+                return;\n+            }\n+            if (optimizeQueryFlag && validatedCacheDeserializedValues == CacheDeserializedValues.NEVER) {", "originalCommit": "2076302a3a01da62ab339da2f3d00d4eb26d50b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "371fd7b9eccc04cc31f90143f27f11e2fb18fb16", "url": "https://github.com/hazelcast/hazelcast/commit/371fd7b9eccc04cc31f90143f27f11e2fb18fb16", "message": "add missing cases, cleanup code", "committedDate": "2020-01-22T16:54:37Z", "type": "forcePushed"}, {"oid": "9778cb7c6183161b159d732b21e4cac67ea42b94", "url": "https://github.com/hazelcast/hazelcast/commit/9778cb7c6183161b159d732b21e4cac67ea42b94", "message": "add missing cases, cleanup code", "committedDate": "2020-01-22T17:13:08Z", "type": "forcePushed"}, {"oid": "9778cb7c6183161b159d732b21e4cac67ea42b94", "url": "https://github.com/hazelcast/hazelcast/commit/9778cb7c6183161b159d732b21e4cac67ea42b94", "message": "add missing cases, cleanup code", "committedDate": "2020-01-22T17:13:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NzQ0Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369977446", "bodyText": "Is this really what we want? INDEX_ONLY is the default, so what makes calling setCacheDeserializedValues(INDEX_ONLY) so significant that it should suddenly trigger an error?", "author": "vojtechtoman", "createdAt": "2020-01-23T08:13:27Z", "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -819,16 +819,21 @@ public MapConfig setOptimizeQueries(boolean optimizeQueries) {\n     }\n \n     private void validateSetOptimizeQueriesOption(boolean optimizeQueries) {\n-        if (setCacheDeserializedValuesExplicitlyInvoked) {\n-            if (optimizeQueries && cacheDeserializedValues == CacheDeserializedValues.NEVER) {\n-                throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to true, \"\n-                        + \"but 'cacheDeserializedValues' is set to NEVER. \"\n-                        + \"These are conflicting options. Please remove the `optimize-queries'\");\n-            } else if (!optimizeQueries && cacheDeserializedValues == CacheDeserializedValues.ALWAYS) {\n-                throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to false, \"\n-                        + \"but 'cacheDeserializedValues' is set to ALWAYS. \"\n-                        + \"These are conflicting options. Please remove the `optimize-queries'\");\n-            }\n+        if (!setCacheDeserializedValuesExplicitlyInvoked) {\n+            return;\n+        }\n+        if (cacheDeserializedValues == CacheDeserializedValues.INDEX_ONLY) {", "originalCommit": "9778cb7c6183161b159d732b21e4cac67ea42b94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4ODk5Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369988992", "bodyText": "typo: \"begin\" - > \"being\"", "author": "vojtechtoman", "createdAt": "2020-01-23T08:43:36Z", "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -861,13 +858,13 @@ private void validateCacheDeserializedValuesOption(CacheDeserializedValues valid\n         // we need to be strict with validation to detect conflicts\n         boolean optimizeQueryFlag = (cacheDeserializedValues == CacheDeserializedValues.ALWAYS);\n \n-        if (optimizeQueryFlag && validatedCacheDeserializedValues != CacheDeserializedValues.ALWAYS) {\n+        if (optimizeQueryFlag && newValue != CacheDeserializedValues.ALWAYS) {\n             throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to `true`, \"\n                     + \"but 'cacheDeserializedValues' is being set to NEVER or INDEX_ONLY.\"\n                     + \" These are conflicting options. Please remove the `optimize-queries'\");\n-        } else if (!optimizeQueryFlag && validatedCacheDeserializedValues != CacheDeserializedValues.NEVER) {\n+        } else if (!optimizeQueryFlag && newValue == CacheDeserializedValues.ALWAYS) {\n             throw new ConfigurationException(\"Deprecated option 'optimize-queries' is set to `false`, \"\n-                    + \"but 'cacheDeserializedValues' is begin set to ALWAYS or INDEX_ONLY. These are conflicting options.\"\n+                    + \"but 'cacheDeserializedValues' is begin set to ALWAYS. These are conflicting options.\"", "originalCommit": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4OTUzMg==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369989532", "bodyText": "really minor: for symmetry with validateCacheDeserializedValuesOption, maybe use: if (cacheDeserializedValues != CacheDeserializedValues.ALWAYS)?", "author": "vojtechtoman", "createdAt": "2020-01-23T08:44:54Z", "path": "hazelcast/src/main/java/com/hazelcast/config/MapConfig.java", "diffHunk": "@@ -822,17 +822,14 @@ private void validateSetOptimizeQueriesOption(boolean optimizeQueries) {\n         if (!setCacheDeserializedValuesExplicitlyInvoked) {\n             return;\n         }\n-        if (cacheDeserializedValues == CacheDeserializedValues.INDEX_ONLY) {\n-            throw new ConfigurationException(\"Deprecated option 'optimize-queries' is being set\"\n-                    + \", but 'cacheDeserializedValues' was set to INDEX_ONLY. \"\n-                    + \"These are conflicting options. Please remove the `optimize-queries'\");\n-        } else if (cacheDeserializedValues == CacheDeserializedValues.NEVER && optimizeQueries) {\n+        if ((cacheDeserializedValues == CacheDeserializedValues.INDEX_ONLY ||\n+                cacheDeserializedValues == CacheDeserializedValues.NEVER) && optimizeQueries) {", "originalCommit": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5Mjc3OA==", "url": "https://github.com/hazelcast/hazelcast/pull/16524#discussion_r369992778", "bodyText": "At the risk of becoming really annoying now: what about adding givenCacheDeserializedValuesSetToNEVER_whenSetOptimizeQueriesToFalse, too?", "author": "vojtechtoman", "createdAt": "2020-01-23T08:52:09Z", "path": "hazelcast/src/test/java/com/hazelcast/config/MapConfigTest.java", "diffHunk": "@@ -312,8 +312,8 @@ public void givenCacheDeserializedValuesSetToALWAYS_whenSetOptimizeQueriesToFals\n         mapConfig.setOptimizeQueries(false);\n     }\n \n-    @Test(expected = ConfigurationException.class)\n-    public void givenCacheDeserializedValuesSetToINDEX_ONLY_whenSetOptimizeQueriesToFalse_thenThrowConfigurationException() {\n+    @Test\n+    public void givenCacheDeserializedValuesSetToINDEX_ONLY_whenSetOptimizeQueriesToFalse_thenNoException() {", "originalCommit": "2246ba35dbcd7145b210d3476cad9f88e3fa1beb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "url": "https://github.com/hazelcast/hazelcast/commit/9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "message": "add better support for INDEX_ONLY", "committedDate": "2020-01-23T08:54:23Z", "type": "forcePushed"}, {"oid": "9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "url": "https://github.com/hazelcast/hazelcast/commit/9053b9459cf75a5f62079ba04f45abc2ab08b6d3", "message": "add better support for INDEX_ONLY", "committedDate": "2020-01-23T08:54:23Z", "type": "commit"}, {"oid": "2bfc94db5d1fc6e433ae005e9052c8d744ed147a", "url": "https://github.com/hazelcast/hazelcast/commit/2bfc94db5d1fc6e433ae005e9052c8d744ed147a", "message": "Address review comments", "committedDate": "2020-01-23T08:59:26Z", "type": "commit"}]}