{"pr_number": 18017, "pr_title": "Collection of javadoc fixes", "pr_createdAt": "2020-12-29T14:43:10Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/18017", "timeline": [{"oid": "908e10269152d51113ddc90db23cc991f4fb8bd8", "url": "https://github.com/hazelcast/hazelcast/commit/908e10269152d51113ddc90db23cc991f4fb8bd8", "message": "Collection of javadoc fixes", "committedDate": "2020-12-29T14:41:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557094739", "bodyText": "Will it always be called from the same thread?", "author": "ihsandemir", "createdAt": "2021-01-14T07:20:25Z", "path": "hazelcast/src/main/java/com/hazelcast/topic/MessageListener.java", "diffHunk": "@@ -20,23 +20,23 @@\n \n /**\n  * Message listener for {@link ITopic}.\n+ * <p>\n+ * A MessageListener will never be called concurrently (provided that it's not registered twice). So there\n+ * is no need to synchronize access to the state it reads or writes. Also there is no need to synchronize", "originalCommit": "908e10269152d51113ddc90db23cc991f4fb8bd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzEzOTM4NA==", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557139384", "bodyText": "Not necessarily from the same, but there will be happens-before relation between the previous and next calls.", "author": "viliam-durina", "createdAt": "2021-01-14T07:55:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzI2NDM2Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557264363", "bodyText": "Ok, but if can be called from different threads than the shared state needs to be protected, right?", "author": "ihsandemir", "createdAt": "2021-01-14T09:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ5Nzk1Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/18017#discussion_r557497953", "bodyText": "Nope if the environment ensures h-b relation...\nFor example\nint[] value = {10};\nThread t = new Thread(() -> {value[0] = 20;});\nt.start();\nt.join();\nSystem.out.println(value[0]);\nvalue[0] is accessed from 2 threads in this piece of code, but doesn't need to be synchronized or volatile. Access from 2 threads doesn't imply it's concurrent.", "author": "viliam-durina", "createdAt": "2021-01-14T15:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzA5NDczOQ=="}], "type": "inlineReview"}]}