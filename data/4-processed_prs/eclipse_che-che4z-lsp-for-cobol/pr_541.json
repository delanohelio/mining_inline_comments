{"pr_number": 541, "pr_title": "Introduce Predefined Variables Support", "pr_createdAt": "2020-10-01T11:20:11Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541", "timeline": [{"oid": "8547ece985520d1e8d79b74b5fd85070dd5e4157", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/8547ece985520d1e8d79b74b5fd85070dd5e4157", "message": "feat: Introduce predefined EIB variables support #527", "committedDate": "2020-10-01T09:59:49Z", "type": "commit"}, {"oid": "bbd288c076266bb64965474d3092311fe7a8e368", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/bbd288c076266bb64965474d3092311fe7a8e368", "message": "test: Add predefined variables support in use case engine", "committedDate": "2020-10-01T10:03:46Z", "type": "commit"}, {"oid": "f60c70f44b98a019db6eae3b7c9158d0e5b5b722", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/f60c70f44b98a019db6eae3b7c9158d0e5b5b722", "message": "test: Add use case for EIB variables #527", "committedDate": "2020-10-01T10:05:05Z", "type": "commit"}, {"oid": "075c3f719648493acf462fb6b9deff7aaa0401d5", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/075c3f719648493acf462fb6b9deff7aaa0401d5", "message": "feat: Add Go To Definition and Referrences for constants #527", "committedDate": "2020-10-01T10:54:57Z", "type": "commit"}, {"oid": "48aaced3495848d7585dd44da3ef5af7746c26a0", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/48aaced3495848d7585dd44da3ef5af7746c26a0", "message": "feat: Introduce autocompletion for constants #527\nReorder completion suggestion to place constants before snippets", "committedDate": "2020-10-01T11:02:33Z", "type": "commit"}, {"oid": "db2d5cf35d942b43f38b618f60cd1c446bbbe503", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/db2d5cf35d942b43f38b618f60cd1c446bbbe503", "message": "refactor: Explicitly define completions order", "committedDate": "2020-10-01T11:17:00Z", "type": "commit"}, {"oid": "c6578a8f1ac6f703f29277f4d30b6fd25941bc2e", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/c6578a8f1ac6f703f29277f4d30b6fd25941bc2e", "message": "feat: Add XML special registers #479", "committedDate": "2020-10-01T14:20:54Z", "type": "commit"}, {"oid": "6250d479b3f15fda98a289db9d0367ecb16e42ec", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/6250d479b3f15fda98a289db9d0367ecb16e42ec", "message": "doc: Update Use Case Engine manual with predefined variables", "committedDate": "2020-10-01T14:26:05Z", "type": "commit"}, {"oid": "f392bd09ddc8bd539bc8bc0036e4e450acf3533e", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/f392bd09ddc8bd539bc8bc0036e4e450acf3533e", "message": "feat: Add JNIENVPTR special register support #479", "committedDate": "2020-10-01T14:44:09Z", "type": "commit"}, {"oid": "d873b2cfb3fbaf42724eb183b12054bbac0fd673", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/d873b2cfb3fbaf42724eb183b12054bbac0fd673", "message": "feat: Add JSON special register support #479", "committedDate": "2020-10-01T14:59:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNTMwMA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541#discussion_r498735300", "bodyText": "I guess now it must be PREDEFINED_VARIABLES because it contains XML, etc.", "author": "grianbrcom", "createdAt": "2020-10-02T10:14:09Z", "path": "server/src/test/java/com/ca/lsp/cobol/usecases/engine/UseCasePreprocessorListener.java", "diffHunk": "@@ -43,11 +44,54 @@\n  * UseCasePreprocessor.g4\n  */\n public class UseCasePreprocessorListener extends UseCasePreprocessorBaseListener {\n+  private List<String> PREDEFINED_EIB_VARIABLES =", "originalCommit": "d873b2cfb3fbaf42724eb183b12054bbac0fd673", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNzAyOQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541#discussion_r498737029", "bodyText": "What's about constructing a list and then convert it into a map?\nLike you did in server/src/test/java/com/ca/lsp/cobol/usecases/engine/UseCasePreprocessorListener.java.", "author": "grianbrcom", "createdAt": "2020-10-02T10:18:07Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/semantics/PredefinedVariableContext.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.ca.lsp.core.cobol.semantics;\n+\n+import com.ca.lsp.core.cobol.model.Variable;\n+import com.google.common.collect.HashMultimap;\n+import com.google.common.collect.Multimap;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import org.eclipse.lsp4j.Location;\n+\n+import java.util.List;\n+\n+/**\n+ * This class represents a structure to store variables of a COBOL program and build a variable\n+ * hierarchy.\n+ */\n+@EqualsAndHashCode\n+@NoArgsConstructor\n+public class PredefinedVariableContext implements SubContext<Variable> {\n+  private static final Location MOCK_LOCATION = new Location();\n+  private static final Multimap<String, Location> VARIABLE_DEFINITIONS = HashMultimap.create();\n+\n+  private final Multimap<String, Location> variableUsages = HashMultimap.create();\n+\n+  static {\n+    // EXEC interface block fields\n+    VARIABLE_DEFINITIONS.put(\"EIBAID\", MOCK_LOCATION);", "originalCommit": "d873b2cfb3fbaf42724eb183b12054bbac0fd673", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1MjM2Mw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541#discussion_r498752363", "bodyText": "I wanted to avoid unnecessary objects in the production code", "author": "temanbrcom", "createdAt": "2020-10-02T10:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNzAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczOTEyOA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541#discussion_r498739128", "bodyText": "Just in case if you want an autonumbering:\nfinal String prefix = String.valueOf(this.ordinal());", "author": "grianbrcom", "createdAt": "2020-10-02T10:22:37Z", "path": "server/src/main/java/com/ca/lsp/cobol/service/delegates/completions/CompletionOrder.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.ca.lsp.cobol.service.delegates.completions;\n+\n+import lombok.AllArgsConstructor;\n+\n+/** This enum explicitly defines the order for completions suggestions with sorting prefixes */\n+@AllArgsConstructor\n+public enum CompletionOrder {\n+  VARIABLES(\"0\"),\n+  PARAGRAPHS(\"1\"),\n+  COPYBOOKS(\"2\"),\n+  CONSTANTS(\"3\"),\n+  SNIPPETS(\"4\"),\n+  KEYWORDS(\"5\");\n+  final String prefix;", "originalCommit": "d873b2cfb3fbaf42724eb183b12054bbac0fd673", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0Njk0MA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541#discussion_r498746940", "bodyText": "Nice one", "author": "temanbrcom", "createdAt": "2020-10-02T10:40:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczOTEyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MDU2Mg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541#discussion_r498740562", "bodyText": "The third time you describe constants. It will be good to define them once.", "author": "grianbrcom", "createdAt": "2020-10-02T10:25:42Z", "path": "server/src/test/java/com/ca/lsp/core/cobol/engine/CobolLanguageEngineTest.java", "diffHunk": "@@ -123,11 +127,68 @@ void testLanguageEngineRun() {\n     ResultWithErrors<SemanticContext> expected =\n         new ResultWithErrors<>(\n             new SemanticContext(\n-                Map.of(), Map.of(), Map.of(), Map.of(), Map.of(), Map.of(), expectedOutlineTree),\n+                Map.of(),\n+                Map.of(),\n+                Map.of(),\n+                Map.of(),\n+                getConstantDefinitions(),\n+                Map.of(),\n+                Map.of(),\n+                Map.of(),\n+                expectedOutlineTree),\n             List.of(error));\n \n     ResultWithErrors<SemanticContext> actual = engine.run(URI, TEXT, PROCESSING_MODE);\n \n     assertEquals(expected, actual);\n   }\n+\n+  private Map<String, Collection<Location>> getConstantDefinitions() {\n+    Location mockLocation = new Location();\n+    Multimap<String, Location> result = HashMultimap.create();\n+    result.put(\"EIBAID\", mockLocation);", "originalCommit": "d873b2cfb3fbaf42724eb183b12054bbac0fd673", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0NjUxOQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/541#discussion_r498746519", "bodyText": "I agree. I am planning to split this test and leave only the significant logic as a part of reducing the level of duplication in the entire test set.", "author": "temanbrcom", "createdAt": "2020-10-02T10:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MDU2Mg=="}], "type": "inlineReview"}, {"oid": "9eff07af5b7291db85e95ef1f4c8a632eec589c3", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/9eff07af5b7291db85e95ef1f4c8a632eec589c3", "message": "refactor: Make completion order prefix defintion automatic", "committedDate": "2020-10-02T10:52:59Z", "type": "commit"}, {"oid": "60f8a583b415467fbc938cc2c7a62c206720f064", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/60f8a583b415467fbc938cc2c7a62c206720f064", "message": "refactor: Change the obsolete variable name", "committedDate": "2020-10-02T10:55:56Z", "type": "commit"}]}