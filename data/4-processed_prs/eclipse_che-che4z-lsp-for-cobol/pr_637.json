{"pr_number": 637, "pr_title": "refactor : get rid of LangServerCtx", "pr_createdAt": "2020-11-11T08:50:52Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NDI0OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637#discussion_r521254249", "bodyText": "Why is it protected?", "author": "temanbrcom", "createdAt": "2020-11-11T10:15:45Z", "path": "server/src/test/java/com/broadcom/lsp/cobol/ConfigurableTest.java", "diffHunk": "@@ -14,20 +14,29 @@\n  */\n package com.broadcom.lsp.cobol;\n \n-import com.broadcom.lsp.cobol.domain.modules.EngineModule;\n-import com.broadcom.lsp.cobol.domain.modules.LangServerCtx;\n import com.broadcom.lsp.cobol.domain.modules.DatabusModule;\n-import org.junit.jupiter.api.AfterAll;\n-import org.junit.jupiter.api.BeforeAll;\n+import com.broadcom.lsp.cobol.domain.modules.EngineModule;\n+import com.broadcom.lsp.cobol.positive.CobolTextRegistry;\n+import com.broadcom.lsp.cobol.positive.FolderTextRegistry;\n+import com.google.inject.Guice;\n+import com.google.inject.Injector;\n+import org.junit.jupiter.api.TestInstance;\n \n+import static java.lang.System.getProperty;\n+import static java.util.Optional.ofNullable;\n+\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n public abstract class ConfigurableTest {\n-  @BeforeAll\n-  public static void setUp() {\n-    LangServerCtx.getGuiceCtx(new TestModule(), new EngineModule(), new DatabusModule());\n-  }\n+  protected static final String PATH_TO_TEST_RESOURCES = \"filesToTestPath\";\n+  protected Injector injector =", "originalCommit": "1db8754412d3a86f10494887ae7baad5649d99b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NTc3OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637#discussion_r521255779", "bodyText": "Yes, correct need not be. Private would suffice.", "author": "ap891843", "createdAt": "2020-11-11T10:18:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NDI0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2MzQ5Mw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637#discussion_r521263493", "bodyText": "resolved on chat.", "author": "ap891843", "createdAt": "2020-11-11T10:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NDI0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NDU2NA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637#discussion_r521254564", "bodyText": "Seems like it may be encapsulated in PositiveTest", "author": "temanbrcom", "createdAt": "2020-11-11T10:16:18Z", "path": "server/src/test/java/com/broadcom/lsp/cobol/ConfigurableTest.java", "diffHunk": "@@ -14,20 +14,29 @@\n  */\n package com.broadcom.lsp.cobol;\n \n-import com.broadcom.lsp.cobol.domain.modules.EngineModule;\n-import com.broadcom.lsp.cobol.domain.modules.LangServerCtx;\n import com.broadcom.lsp.cobol.domain.modules.DatabusModule;\n-import org.junit.jupiter.api.AfterAll;\n-import org.junit.jupiter.api.BeforeAll;\n+import com.broadcom.lsp.cobol.domain.modules.EngineModule;\n+import com.broadcom.lsp.cobol.positive.CobolTextRegistry;\n+import com.broadcom.lsp.cobol.positive.FolderTextRegistry;\n+import com.google.inject.Guice;\n+import com.google.inject.Injector;\n+import org.junit.jupiter.api.TestInstance;\n \n+import static java.lang.System.getProperty;\n+import static java.util.Optional.ofNullable;\n+\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n public abstract class ConfigurableTest {\n-  @BeforeAll\n-  public static void setUp() {\n-    LangServerCtx.getGuiceCtx(new TestModule(), new EngineModule(), new DatabusModule());\n-  }\n+  protected static final String PATH_TO_TEST_RESOURCES = \"filesToTestPath\";\n+  protected Injector injector =\n+      Guice.createInjector(new TestModule(), new EngineModule(), new DatabusModule());\n \n-  @AfterAll\n-  public static void tearDown() {\n-    LangServerCtx.shutdown();\n+  /**\n+   * Retrieve {@link CobolTextRegistry} using file-based implementation.\n+   *\n+   * @return {@link CobolTextRegistry}.\n+   */\n+  public static CobolTextRegistry retrieveTextsRegistry() {\n+    return new FolderTextRegistry(ofNullable(getProperty(PATH_TO_TEST_RESOURCES)).orElse(\"\"));\n   }", "originalCommit": "1db8754412d3a86f10494887ae7baad5649d99b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NTk0NQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637#discussion_r521255945", "bodyText": "We need this for negativeTest as well", "author": "ap891843", "createdAt": "2020-11-11T10:18:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NDU2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI4Mjk1OA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637#discussion_r521282958", "bodyText": "copybooks not initialized", "author": "temanbrcom", "createdAt": "2020-11-11T11:08:12Z", "path": "server/src/test/java/com/broadcom/lsp/cobol/positive/PositiveTest.java", "diffHunk": "@@ -47,10 +44,7 @@\n    * @return a collection of objects that would be passed to the constructor one by one.\n    */\n   private static Stream<CobolText> retrieveTextsToTest() {\n-    CobolTextRegistry registry =\n-        new FolderTextRegistry(ofNullable(getProperty(PATH_TO_TEST_RESOURCES)).orElse(\"\"));\n-    copybooks = registry.getCopybooks();", "originalCommit": "1db8754412d3a86f10494887ae7baad5649d99b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI4NTgyMw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/637#discussion_r521285823", "bodyText": "Great catch!\nDone.", "author": "ap891843", "createdAt": "2020-11-11T11:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI4Mjk1OA=="}], "type": "inlineReview"}, {"oid": "0ff5f549ba5c56f14950dfc4f5a0a6de06487bdc", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/0ff5f549ba5c56f14950dfc4f5a0a6de06487bdc", "message": "refactor : remove todo for MisspelledKeywordDistance utility class.\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-11-11T11:12:42Z", "type": "forcePushed"}, {"oid": "25afe580dd2e9206c82f2f895c9cdca09e821227", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/25afe580dd2e9206c82f2f895c9cdca09e821227", "message": "refactor : remove todo for MisspelledKeywordDistance utility class.\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-11-11T11:53:05Z", "type": "forcePushed"}, {"oid": "5df2092697c7f21686c5cffcd263b75d79a0ac94", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/5df2092697c7f21686c5cffcd263b75d79a0ac94", "message": "refactor : get rid of LangServerCtx #637\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-11-11T11:55:33Z", "type": "commit"}, {"oid": "58b46558ee611ff556fdc1dee1ad5f11b9e1ac73", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/58b46558ee611ff556fdc1dee1ad5f11b9e1ac73", "message": "refactor : remove todo for MisspelledKeywordDistance utility class.\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-11-11T11:55:33Z", "type": "commit"}, {"oid": "58b46558ee611ff556fdc1dee1ad5f11b9e1ac73", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/58b46558ee611ff556fdc1dee1ad5f11b9e1ac73", "message": "refactor : remove todo for MisspelledKeywordDistance utility class.\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-11-11T11:55:33Z", "type": "forcePushed"}]}