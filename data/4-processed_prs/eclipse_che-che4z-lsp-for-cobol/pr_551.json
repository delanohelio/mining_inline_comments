{"pr_number": 551, "pr_title": "Typed variable model + split definition logic", "pr_createdAt": "2020-10-09T08:40:02Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551", "timeline": [{"oid": "9a5a24da7610d5237928fa7d2e3465a385a814a1", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/9a5a24da7610d5237928fa7d2e3465a385a814a1", "message": "refactor: Provide a typed model for variables", "committedDate": "2020-10-07T08:07:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4NzE1OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502287159", "bodyText": "seems not formatted", "author": "asatklichov", "createdAt": "2020-10-09T08:57:22Z", "path": "server/src/main/antlr4/com/ca/lsp/core/cobol/parser/CobolParser.g4", "diffHunk": "@@ -932,17 +932,27 @@ libraryIsGlobalClause\n    ;\n \n dataDescriptionEntry\n-   : dataDescriptionEntryFormat1 | dataDescriptionEntryFormat2 | dataDescriptionEntryFormat3 | dataDescriptionEntryExecSql\n+   : dataDescriptionEntryFormat1 | dataDescriptionEntryFormat2 | dataDescriptionEntryFormat1Level77 | dataDescriptionEntryFormat3 | dataDescriptionEntryExecSql\n    ;\n \n dataDescriptionEntryFormat1\n-   : otherLevel (FILLER | dataName1)? (dataGroupUsageClause | dataRedefinesClause | dataIntegerStringClause | dataExternalClause | dataGlobalClause | dataTypeDefClause | dataThreadLocalClause | dataPictureClause | dataCommonOwnLocalClause | dataTypeClause | dataUsingClause | dataUsageClause | dataValueClause | dataReceivedByClause | dataOccursClause | dataSignClause | dataSynchronizedClause | dataJustifiedClause | dataBlankWhenZeroClause | dataWithLowerBoundsClause | dataAlignedClause | dataRecordAreaClause)* (DOT_FS|DOT_FS2)\n+   : LEVEL_NUMBER (FILLER | dataName1)? (dataGroupUsageClause | dataRedefinesClause | dataIntegerStringClause | dataExternalClause\n+   | dataGlobalClause | dataTypeDefClause | dataThreadLocalClause | dataPictureClause | dataCommonOwnLocalClause | dataTypeClause\n+   | dataUsingClause | dataUsageClause | dataValueClause | dataReceivedByClause | dataOccursClause | dataSignClause | dataSynchronizedClause\n+   | dataJustifiedClause | dataBlankWhenZeroClause | dataWithLowerBoundsClause | dataAlignedClause | dataRecordAreaClause)* (DOT_FS|DOT_FS2)\n    ;\n \n dataDescriptionEntryFormat2\n    : LEVEL_NUMBER_66 dataName1 dataRenamesClause DOT_FS\n    ;\n \n+dataDescriptionEntryFormat1Level77\n+   : LEVEL_NUMBER_77 dataName1 (dataPictureClause | dataRedefinesClause | dataIntegerStringClause | dataExternalClause\n+   | dataGlobalClause | dataTypeDefClause | dataThreadLocalClause | dataCommonOwnLocalClause | dataTypeClause | dataUsingClause\n+   | dataUsageClause | dataValueClause | dataReceivedByClause | dataOccursClause | dataSignClause | dataSynchronizedClause\n+   | dataJustifiedClause | dataBlankWhenZeroClause | dataWithLowerBoundsClause | dataAlignedClause | dataRecordAreaClause)* (DOT_FS|DOT_FS2)", "originalCommit": "442af2d4a5ab029e5c367d221d681ceeeb293322", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4ODIxNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502288217", "bodyText": "optional: ConditionalDataName  looks more nice", "author": "asatklichov", "createdAt": "2020-10-09T08:59:08Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/model/variables/ConditionalName.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.ca.lsp.core.cobol.model.variables;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Value;\n+\n+/**\n+ * This value class represents a conditional data name entry, that has a level number 88. It cannot\n+ * be a top element in the structure. It always contains a variable name and a value, but not PIC\n+ * clause.\n+ */\n+@Value\n+@AllArgsConstructor\n+public class ConditionalName implements Variable {", "originalCommit": "442af2d4a5ab029e5c367d221d681ceeeb293322", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMzMTY5NA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502331694", "bodyText": "Makes sense", "author": "temanbrcom", "createdAt": "2020-10-09T10:19:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI4ODIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyNDExMA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502324110", "bodyText": "Do we modify this returned list? Otherwise better  to use List.of(children)", "author": "asatklichov", "createdAt": "2020-10-09T10:04:43Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/model/variables/GroupItem.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.ca.lsp.core.cobol.model.variables;\n+\n+import lombok.Value;\n+\n+import javax.annotation.Nonnull;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * This value class represents a group item COBOL variable. Group elements can have nested\n+ * variables. They cannot have neither PIC nor VALUE clauses. Can be the top element of the\n+ * structure with level 01, as well as nested ones with higher level numbers.\n+ */\n+@Value\n+public class GroupItem implements StructuredVariable {\n+  private String name;\n+  private List<Variable> children = new ArrayList<>();\n+\n+  public GroupItem(@Nonnull String name) {\n+    this.name = name;\n+  }\n+\n+  /**\n+   * Add a new nested variable to this structure\n+   *\n+   * @param child - a nested variable. Can be a group or element, or all the other allowed type\n+   *     item.\n+   */\n+  public void addChild(Variable child) {\n+    children.add(child);\n+  }\n+\n+  /**\n+   * Return a list of already defined nested variables\n+   *\n+   * @return defined nested variables.\n+   */\n+  public List<Variable> getChildren() {", "originalCommit": "442af2d4a5ab029e5c367d221d681ceeeb293322", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM0Njg2OA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502346868", "bodyText": "List.of will create a list of lists in this case. I will use Collections.unmodifiableList instead", "author": "temanbrcom", "createdAt": "2020-10-09T10:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyNDExMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyNjY0MQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502326641", "bodyText": "if used as read-only purpose later the better use List.of(children)", "author": "asatklichov", "createdAt": "2020-10-09T10:09:40Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/model/variables/Table.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+\n+package com.ca.lsp.core.cobol.model.variables;\n+\n+import lombok.Value;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * This value class represents the Table variable that may have nested variables, and an optional\n+ * index\n+ */\n+@Value\n+public class Table implements StructuredVariable {\n+\n+  private String name;\n+  private int occursTimes;\n+  private IndexItem index;\n+  private List<Variable> children = new ArrayList<>();\n+\n+  public Table(@Nonnull String name, int occursTimes, @Nullable IndexItem index) {\n+    this.name = name;\n+    this.occursTimes = occursTimes;\n+    this.index = index;\n+  }\n+\n+  /**\n+   * Add a new nested variable to this one\n+   *\n+   * @param child - a nested variable. Can be a group or element item.\n+   */\n+  public void addChild(Variable child) {\n+    children.add(child);\n+  }\n+\n+  /**\n+   * Return a list of already defined nested variables\n+   *\n+   * @return defined nested variables.\n+   */\n+  public List<Variable> getChildren() {", "originalCommit": "442af2d4a5ab029e5c367d221d681ceeeb293322", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyNzczNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502327737", "bodyText": "\"01\" isn't it Level 01?", "author": "asatklichov", "createdAt": "2020-10-09T10:11:45Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/visitor/CobolVisitor.java", "diffHunk": "@@ -332,10 +333,10 @@ public Class visitParagraphName(ParagraphNameContext ctx) {\n   public Class visitDataDescriptionEntryFormat1(DataDescriptionEntryFormat1Context ctx) {\n     Token token = ctx.getStart();\n     String tokenText = token.getText();\n-    if (tokenText.equals(\"01\") || tokenText.equals(\"1\") || tokenText.equals(\"77\")) {\n+    if (tokenText.equals(\"01\") || tokenText.equals(\"1\")) {", "originalCommit": "442af2d4a5ab029e5c367d221d681ceeeb293322", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMzMTUxOA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/551#discussion_r502331518", "bodyText": "Yes, it is", "author": "temanbrcom", "createdAt": "2020-10-09T10:19:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyNzczNw=="}], "type": "inlineReview"}, {"oid": "3cfc8840006903f1dd35d32a78ef37ee2269dd12", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/3cfc8840006903f1dd35d32a78ef37ee2269dd12", "message": "refactor: Extract processing of 77 level number\n\nExtract 77 level definition grammar rule. Make visitor process\nthis type of definitions separately to allow additional type checks.", "committedDate": "2020-10-09T10:32:31Z", "type": "commit"}, {"oid": "78940266633a8fecfedfcec17c5cd24c5de5895f", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/78940266633a8fecfedfcec17c5cd24c5de5895f", "message": "refactor: Provide more descriptive names for variable model", "committedDate": "2020-10-09T10:57:24Z", "type": "commit"}, {"oid": "78940266633a8fecfedfcec17c5cd24c5de5895f", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/78940266633a8fecfedfcec17c5cd24c5de5895f", "message": "refactor: Provide more descriptive names for variable model", "committedDate": "2020-10-09T10:57:24Z", "type": "forcePushed"}, {"oid": "4e8fd8775d75820e137bb3fb4eb8374b599a0026", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/4e8fd8775d75820e137bb3fb4eb8374b599a0026", "message": "refactor: Store unique definitions for variables", "committedDate": "2020-10-09T11:12:03Z", "type": "commit"}, {"oid": "b448f564c907b90fb88e5d27c7e59419021270f9", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/b448f564c907b90fb88e5d27c7e59419021270f9", "message": "refactor: Make children lists of group items immutable", "committedDate": "2020-10-09T13:05:17Z", "type": "commit"}]}