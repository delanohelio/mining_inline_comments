{"pr_number": 1017, "pr_title": "KOGITO-2120: Kogito Tooling i18n", "pr_createdAt": "2020-08-03T21:10:02Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1017", "timeline": [{"oid": "9ea2c928e521d6592ee3deed63b94bcf9cbb1729", "url": "https://github.com/kiegroup/appformer/commit/9ea2c928e521d6592ee3deed63b94bcf9cbb1729", "message": "KOGITO-2120 Add I18n interop service", "committedDate": "2020-07-31T14:12:19Z", "type": "commit"}, {"oid": "1c46844753cdbdf2d39456e0fdf0e6047d4a0f1f", "url": "https://github.com/kiegroup/appformer/commit/1c46844753cdbdf2d39456e0fdf0e6047d4a0f1f", "message": "KOGITO-2120 Change i18n service name", "committedDate": "2020-07-31T22:30:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0NjE1MA==", "url": "https://github.com/kiegroup/appformer/pull/1017#discussion_r465046150", "bodyText": "Rename to i18n.", "author": "tiagobento", "createdAt": "2020-08-04T13:23:07Z", "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/i18n/I18nApiInteropWrapper.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.i18n;\n+\n+import elemental2.promise.Promise;\n+import jsinterop.annotations.JsMethod;\n+import jsinterop.annotations.JsProperty;\n+import jsinterop.annotations.JsType;\n+\n+@JsType(isNative = true, namespace = \"window\", name = \"envelope\")\n+public class I18nApiInteropWrapper {\n+\n+    @JsMethod\n+    public native void onLocaleChange(LocaleChangeCallback callback);\n+\n+    @JsMethod\n+    public native Promise<String> getLocale();\n+\n+    @JsProperty(name = \"i18nService\")", "originalCommit": "1c46844753cdbdf2d39456e0fdf0e6047d4a0f1f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}