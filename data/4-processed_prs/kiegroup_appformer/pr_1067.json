{"pr_number": 1067, "pr_title": "AF-2637: Implement SVG backend Service for Kie Server", "pr_createdAt": "2020-10-27T00:03:35Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1067", "timeline": [{"oid": "3c414045558e43509d8c2922d566b99002d4f941", "url": "https://github.com/kiegroup/appformer/commit/3c414045558e43509d8c2922d566b99002d4f941", "message": "AF-2637: Implement SVG backend Service for Kie Server", "committedDate": "2020-10-26T23:43:15Z", "type": "commit"}, {"oid": "574f9f22ffd3c356e5a66a6f68ab8ce0ccf4e834", "url": "https://github.com/kiegroup/appformer/commit/574f9f22ffd3c356e5a66a6f68ab8ce0ccf4e834", "message": "Improvements", "committedDate": "2020-10-27T13:35:43Z", "type": "commit"}, {"oid": "da8f0780fe426fca14dc460d7d37a99bfe979c33", "url": "https://github.com/kiegroup/appformer/commit/da8f0780fe426fca14dc460d7d37a99bfe979c33", "message": "Checking optional before getting value", "committedDate": "2020-10-27T13:44:28Z", "type": "commit"}, {"oid": "9b3f2d0a93e8ec16f5fed674e2d4c7ada6a619b7", "url": "https://github.com/kiegroup/appformer/commit/9b3f2d0a93e8ec16f5fed674e2d4c7ada6a619b7", "message": "fixing method", "committedDate": "2020-10-27T14:57:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0MDgyMA==", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512740820", "bodyText": "Can we use generics instead of Object?", "author": "caponetto", "createdAt": "2020-10-27T14:29:29Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/BackendComponentFunction.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.external.impl;\n+\n+import java.util.Map;\n+\n+public interface BackendComponentFunction {\n+\n+    default String getName() {\n+        return this.getClass().getSimpleName();\n+    }\n+\n+    Object exec(Map<String, Object> params);", "originalCommit": "da8f0780fe426fca14dc460d7d37a99bfe979c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0NTkxOA==", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512745918", "bodyText": "Do we need a client.close() here?", "author": "caponetto", "createdAt": "2020-10-27T14:35:22Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-kie-server-backend/src/main/java/org/dashbuilder/kieserver/backend/rest/KieServerQueryClient.java", "diffHunk": "@@ -94,6 +99,23 @@ public void unregisterQuery(KieServerConnectionInfo connectionInfo, String dataS\n         client.close();\n     }\n \n+    public String processSVG(KieServerConnectionInfo connectionInfo, String containerId, String processId) {\n+        Client client = ClientBuilder.newClient();\n+        Optional<String> location = connectionInfo.getLocation();\n+        if (location.isPresent()) {\n+            WebTarget target = client.target(location.get())\n+                                     .path(PROCESS_SVG_URI)\n+                                     .resolveTemplate(CONTAINER_ID_PARAM, containerId)\n+                                     .resolveTemplate(PROCESS_ID_PARAM, processId);\n+            addAuth(connectionInfo, target);\n+            String svg = target.request().get(String.class);\n+            client.close();\n+            return svg;\n+        }\n+        ", "originalCommit": "da8f0780fe426fca14dc460d7d37a99bfe979c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0NjYwOA==", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512746608", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String UNKNOW_BACKEND_ERROR = \"Unknow backend error.\";\n          \n          \n            \n                private static final String UNKNOWN_BACKEND_ERROR = \"Unknown backend error.\";", "author": "caponetto", "createdAt": "2020-10-27T14:36:16Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-client/src/main/java/org/dashbuilder/displayer/client/component/function/BackendFunctionLoader.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.displayer.client.component.function;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.displayer.external.ExternalComponentFunction;\n+import org.dashbuilder.external.service.BackendComponentFunctionService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.api.EntryPoint;\n+\n+/**\n+ * Generated wrapped client functions to proxy the call using BackendFunctionLoaderService.\n+ *\n+ */\n+@EntryPoint\n+public class BackendFunctionLoader {\n+\n+    private static final String UNKNOW_BACKEND_ERROR = \"Unknow backend error.\";", "originalCommit": "da8f0780fe426fca14dc460d7d37a99bfe979c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0NzkwMw==", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512747903", "bodyText": "Is it necessary?", "author": "caponetto", "createdAt": "2020-10-27T14:37:50Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-client/src/test/java/org/dashbuilder/displayer/client/component/function/ComponentFunctionLocatorTest.java", "diffHunk": "@@ -18,6 +18,7 @@\n import java.util.Collections;\n import java.util.Optional;\n \n+import org.dashbuilder.displayer.external.ExternalComponentFunction;", "originalCommit": "da8f0780fe426fca14dc460d7d37a99bfe979c33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a74dccf13c50f2c0a09078924b7c40f8f7c23d1d", "url": "https://github.com/kiegroup/appformer/commit/a74dccf13c50f2c0a09078924b7c40f8f7c23d1d", "message": "Improvements", "committedDate": "2020-10-27T17:39:37Z", "type": "commit"}, {"oid": "730810504c3f23ebd1df76c590efee9401afdd9e", "url": "https://github.com/kiegroup/appformer/commit/730810504c3f23ebd1df76c590efee9401afdd9e", "message": "fixing typo", "committedDate": "2020-10-27T18:33:02Z", "type": "commit"}, {"oid": "730810504c3f23ebd1df76c590efee9401afdd9e", "url": "https://github.com/kiegroup/appformer/commit/730810504c3f23ebd1df76c590efee9401afdd9e", "message": "fixing typo", "committedDate": "2020-10-27T18:33:02Z", "type": "forcePushed"}]}