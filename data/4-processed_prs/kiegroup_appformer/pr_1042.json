{"pr_number": 1042, "pr_title": "AF-2555: Link BC <-> DB", "pr_createdAt": "2020-09-05T00:08:09Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1042", "timeline": [{"oid": "c4fa88b96e174deed2d5315d1e83f9a905fb13c6", "url": "https://github.com/kiegroup/appformer/commit/c4fa88b96e174deed2d5315d1e83f9a905fb13c6", "message": "AF-2555: Link BC <-> DB", "committedDate": "2020-09-11T16:00:00Z", "type": "forcePushed"}, {"oid": "0a68def877f50447cfd93ef4856980a2d61b2602", "url": "https://github.com/kiegroup/appformer/commit/0a68def877f50447cfd93ef4856980a2d61b2602", "message": "AF-2555: Link BC <-> DB", "committedDate": "2020-09-15T20:36:39Z", "type": "forcePushed"}, {"oid": "b3a33bc74a877013e0d9353d945faabb7522e803", "url": "https://github.com/kiegroup/appformer/commit/b3a33bc74a877013e0d9353d945faabb7522e803", "message": "improvements", "committedDate": "2020-09-28T15:17:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5ODUxNA==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r496998514", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ExportInfo(List<DataSetDef> datasetsDefinitions,\n          \n          \n            \n                                   List<String> pages,\n          \n          \n            \n                                   boolean externalServerAvailable) {\n          \n          \n            \n                public ExportInfo(List<DataSetDef> datasetsDefinitions,\n          \n          \n            \n                                  List<String> pages,\n          \n          \n            \n                                  boolean externalServerAvailable) {", "author": "caponetto", "createdAt": "2020-09-29T19:40:18Z", "path": "dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/transfer/ExportInfo.java", "diffHunk": "@@ -20,17 +20,22 @@\n \n import org.dashbuilder.dataset.def.DataSetDef;\n \n-public class DataTransferAssets {\n+public class ExportInfo {\n+\n+    private boolean externalServerAvailable;\n \n     private List<DataSetDef> datasetsDefinitions;\n \n     private List<String> pages;\n \n-    public DataTransferAssets() {}\n+    public ExportInfo() {}\n \n-    public DataTransferAssets(List<DataSetDef> datasetsDefinitions, List<String> pages) {\n+    public ExportInfo(List<DataSetDef> datasetsDefinitions,\n+                       List<String> pages,\n+                       boolean externalServerAvailable) {", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5OTEwNw==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r496999107", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \n          \n          \n            \n                public List<String> doImport() throws Exception;\n          \n          \n            \n            \n          \n          \n            \n                public List<String> doImport() throws Exception;", "author": "caponetto", "createdAt": "2020-09-29T19:41:27Z", "path": "dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/transfer/DataTransferServices.java", "diffHunk": "@@ -27,12 +27,16 @@\n     public static final String EXPORT_FILE_NAME = \"export.zip\";\n     public static final String IMPORT_FILE_NAME = \"import.zip\";\n     public static final String COMPONENTS_EXPORT_PATH = \"dashbuilder/components/\";\n-\n+    \n+    public static final String EXPORT_LOCATION_PROP = \"dashbuilder.import.base.dir\";\n+    public static final String DB_STANDALONE_LOCATION_PROP = \"dashbuilder.runtime.location\";\n \n     public String doExport(DataTransferExportModel exportsModel) throws java.io.IOException;\n-\n+    \n     public List<String> doImport() throws Exception;", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMDY3Ng==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r497000676", "bodyText": "Nice!", "author": "caponetto", "createdAt": "2020-09-29T19:44:32Z", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/RuntimeOptions.java", "diffHunk": "@@ -75,28 +75,32 @@\n      * If true components will be partitioned by the Runtime Model ID.\n      */\n     private static final String COMPONENT_PARTITION_PROP = \"dashbuilder.components.partition\";\n+    \n+    /**\n+     * Boolean property that allows Runtime to check model last update in FS to update its content.\n+     */\n+    private static final String MODEL_UPDATE_PROP = \"dashbuilder.model.update\";\n \n     private boolean multipleImport;\n     private boolean datasetPartition;\n     private boolean componentPartition;\n     private boolean allowExternal;\n+    private boolean modelUpdate;\n     private String importFileLocation;\n     private String importsBaseDir;\n     private int uploadSize;\n \n     @PostConstruct\n     public void init() {\n-        String multipleImportStr = System.getProperty(DASHBUILDER_RUNTIME_MULTIPLE_IMPORT_PROP, Boolean.FALSE.toString());\n-        String allowExternalStr = System.getProperty(ALLOW_EXTERNAL_FILE_REGISTER_PROP, Boolean.FALSE.toString());\n-        String datasetPartitionStr = System.getProperty(DATASET_PARTITION_PROP, Boolean.TRUE.toString());\n-        String componentPartitionStr = System.getProperty(COMPONENT_PARTITION_PROP, Boolean.TRUE.toString());\n \n         importFileLocation = System.getProperty(IMPORT_FILE_LOCATION_PROP);\n         importsBaseDir = System.getProperty(IMPORTS_BASE_DIR_PROP, DEFAULT_MODEL_DIR);\n-        multipleImport = Boolean.parseBoolean(multipleImportStr);\n-        allowExternal = Boolean.parseBoolean(allowExternalStr);\n-        datasetPartition = Boolean.parseBoolean(datasetPartitionStr);\n-        componentPartition = Boolean.parseBoolean(componentPartitionStr);\n+        \n+        multipleImport = booleanProp(DASHBUILDER_RUNTIME_MULTIPLE_IMPORT_PROP, Boolean.FALSE);\n+        allowExternal = booleanProp(ALLOW_EXTERNAL_FILE_REGISTER_PROP, Boolean.FALSE);\n+        datasetPartition = booleanProp(DATASET_PARTITION_PROP, Boolean.TRUE);\n+        componentPartition = booleanProp(COMPONENT_PARTITION_PROP, Boolean.TRUE);\n+        modelUpdate = booleanProp(MODEL_UPDATE_PROP, Boolean.TRUE);", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMzczNg==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r497003736", "bodyText": "My only concern here is that Open could be misinterpreted in the wizard screen.\nSince it is right beside the Download button, I wouldn't expect that it'd open DB.\nMaybe we could add some informative text and then the Open button, wdyt?", "author": "caponetto", "createdAt": "2020-09-29T19:50:05Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-cms-client/src/main/resources/org/dashbuilder/client/cms/resources/i18n/ContentManagerConstants.properties", "diffHunk": "@@ -70,6 +70,7 @@ datasetLabel=dataset\n pagesLabel=pages\n datasetsLabel=datasets\n ExportSummaryWizardPageView.download=Download\n+ExportSummaryWizardPageView.open=Open", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwNTY4MA==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r497005680", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean connectedToDashbuilder = isExternalServerConfigured();\n          \n          \n            \n                    return new ExportInfo(datasetsDefs, pages, connectedToDashbuilder);\n          \n          \n            \n                    return new ExportInfo(datasetsDefs, pages, isExternalServerConfigured());", "author": "caponetto", "createdAt": "2020-09-29T19:53:50Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-services/src/main/java/org/dashbuilder/transfer/DataTransferServicesImpl.java", "diffHunk": "@@ -242,7 +253,35 @@ public DataTransferAssets assetsToExport() {\n                                                                                .map(this::parseDataSetDefinition)\n                                                                                .filter(DataSetDef::isPublic)\n                                                                                .collect(Collectors.toList());\n-        return new DataTransferAssets(datasetsDefs, pages);\n+        boolean connectedToDashbuilder = isExternalServerConfigured();\n+        return new ExportInfo(datasetsDefs, pages, connectedToDashbuilder);", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwOTIzNw==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r497009237", "bodyText": "Consider moving these 2 lines into the if block below.\nYou don't need them if options.isComponentPartition() == false.", "author": "caponetto", "createdAt": "2020-09-29T20:00:30Z", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/ExternalComponentsContentListener.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.backend;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.dashbuilder.shared.event.RemovedRuntimeModelEvent;\n+\n+/**\n+ * When a runtime model is removed then we should remove components content as well.\n+ *\n+ */\n+@ApplicationScoped\n+public class ExternalComponentsContentListener {\n+\n+    @Inject\n+    ExternalComponentLoader loader;\n+\n+    @Inject\n+    RuntimeOptions options;\n+\n+    public void onRuntimeModelRemoved(@Observes RemovedRuntimeModelEvent event) {\n+        String externalComponentsDir = loader.getExternalComponentsDir();\n+        String runtimeModelId = event.getRuntimeModelId();", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxMDI1NA==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r497010254", "bodyText": "Can we assume that runtimeModelComponentsFile, externalComponentsDir and runtimeModelId will always be != null?", "author": "caponetto", "createdAt": "2020-09-29T20:02:20Z", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/ExternalComponentsContentListener.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.backend;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.dashbuilder.shared.event.RemovedRuntimeModelEvent;\n+\n+/**\n+ * When a runtime model is removed then we should remove components content as well.\n+ *\n+ */\n+@ApplicationScoped\n+public class ExternalComponentsContentListener {\n+\n+    @Inject\n+    ExternalComponentLoader loader;\n+\n+    @Inject\n+    RuntimeOptions options;\n+\n+    public void onRuntimeModelRemoved(@Observes RemovedRuntimeModelEvent event) {\n+        String externalComponentsDir = loader.getExternalComponentsDir();\n+        String runtimeModelId = event.getRuntimeModelId();\n+        if (options.isComponentPartition()) {\n+            File runtimeModelComponentsFile = Paths.get(externalComponentsDir, runtimeModelId).toFile();\n+            FileUtils.deleteQuietly(runtimeModelComponentsFile);", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxMTM2MQ==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r497011361", "bodyText": "You don't need this line, right?", "author": "caponetto", "createdAt": "2020-09-29T20:04:31Z", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/remote/services/RuntimeModelServiceImpl.java", "diffHunk": "@@ -98,4 +102,30 @@ public RuntimeServiceResponse info(String runtimeModelId) {\n         return Optional.empty();\n     }\n \n+    private Optional<RuntimeModel> loadLatestModel(String id, RuntimeModel runtimeModel) {\n+        Optional<String> modelPath = runtimeOptions.modelPath(id);\n+        if (runtimeOptions.isModelUpdate() && modelPath.isPresent()) {\n+            String modelFilePath = modelPath.get();\n+            if (lastModified(modelFilePath) > runtimeModel.getLastModified()) {\n+                logger.info(\"Replacing model {}\", id);\n+                registry.remove(id);\n+                return registry.registerFile(modelFilePath);\n+            }\n+        }\n+        return Optional.of(runtimeModel);\n+    }\n+\n+    private long lastModified(String modelFilePath) {\n+        try {\n+            System.currentTimeMillis();", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxMjgzMw==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r497012833", "bodyText": "Suggested change", "author": "caponetto", "createdAt": "2020-09-29T20:07:22Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-services/src/main/java/org/dashbuilder/transfer/DataTransferServicesImpl.java", "diffHunk": "@@ -84,9 +86,12 @@\n     private NavTreeStorage navTreeStorage;\n     private byte[] buffer = new byte[1024];\n     private ExternalComponentLoader externalComponentLoader;\n+    \n+    private String dashbuilderLocation;\n+    private String exportDir;\n \n     public DataTransferServicesImpl() {}\n-\n+    ", "originalCommit": "b3a33bc74a877013e0d9353d945faabb7522e803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7e5a7a04ce77cb456f5557d79a370190f4dc4abc", "url": "https://github.com/kiegroup/appformer/commit/7e5a7a04ce77cb456f5557d79a370190f4dc4abc", "message": "Improvements", "committedDate": "2020-09-29T21:27:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NzUzMg==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r500397532", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ExportInfo assets = new ExportInfo(Collections.singletonList(def1), Collections.emptyList(), false);\n          \n          \n            \n                    ExportInfo exportInfo = new ExportInfo(Collections.singletonList(def1), Collections.emptyList(), false);", "author": "barboras7", "createdAt": "2020-10-06T15:35:52Z", "path": "dashbuilder/dashbuilder-client/dashbuilder-cms-client/src/test/java/org/dashbuilder/client/cms/screen/transfer/export/wizard/ExportSummaryWizardPageTest.java", "diffHunk": "@@ -52,9 +52,9 @@ public void testRemapMissingDependencies() {\n         HashMap<String, List<String>> validation = new HashMap<>();\n         validation.put(PAGE, Collections.singletonList(UUID));\n \n-        DataTransferAssets assets = new DataTransferAssets(Collections.singletonList(def1), Collections.emptyList());\n+        ExportInfo assets = new ExportInfo(Collections.singletonList(def1), Collections.emptyList(), false);", "originalCommit": "7e5a7a04ce77cb456f5557d79a370190f4dc4abc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5ODIwMA==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r500398200", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ExportInfo assetsToExport = dataTransferServices.exportInfo();\n          \n          \n            \n                    ExportInfo exportInfo = dataTransferServices.exportInfo();", "author": "barboras7", "createdAt": "2020-10-06T15:36:38Z", "path": "dashbuilder/dashbuilder-backend/dashbuilder-services/src/test/java/org/dashbuilder/transfer/DataTransferServicesTest.java", "diffHunk": "@@ -559,7 +559,7 @@ public void testAssetsToImport() throws Exception {\n         createFile(perspectivesFS, PAGE, \"\");\n         createFile(perspectivesFS, PAGE_PLUGIN, \"\");\n \n-        DataTransferAssets assetsToExport = dataTransferServices.assetsToExport();\n+        ExportInfo assetsToExport = dataTransferServices.exportInfo();", "originalCommit": "7e5a7a04ce77cb456f5557d79a370190f4dc4abc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMjQ1Mg==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r500402452", "bodyText": "Is it safe to define the property like this? The dashbuilder.import.base.dir is defined also in another place for dashbuilder runtime and it might happen that the property will change only in one of the places and they will not be the same (although the intention is to have the same String for the two properties)", "author": "barboras7", "createdAt": "2020-10-06T15:41:30Z", "path": "dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/transfer/DataTransferServices.java", "diffHunk": "@@ -27,12 +27,16 @@\n     public static final String EXPORT_FILE_NAME = \"export.zip\";\n     public static final String IMPORT_FILE_NAME = \"import.zip\";\n     public static final String COMPONENTS_EXPORT_PATH = \"dashbuilder/components/\";\n-\n+    \n+    public static final String EXPORT_LOCATION_PROP = \"dashbuilder.import.base.dir\";", "originalCommit": "7e5a7a04ce77cb456f5557d79a370190f4dc4abc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwMjY2OA==", "url": "https://github.com/kiegroup/appformer/pull/1042#discussion_r500502668", "bodyText": "That's a good point! I did forget to change this property name, but I will change it and it will make easier to distinguish from the Runtime one. Thanks!", "author": "jesuino", "createdAt": "2020-10-06T18:17:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMjQ1Mg=="}], "type": "inlineReview"}, {"oid": "7f9362f07d8244aec4ce5c47f6d7f9b3817e6f27", "url": "https://github.com/kiegroup/appformer/commit/7f9362f07d8244aec4ce5c47f6d7f9b3817e6f27", "message": "AF-2555: Link BC <-> DB", "committedDate": "2020-10-07T16:19:09Z", "type": "commit"}, {"oid": "bf9e08040ba3dd01820ee8ceb6cc17c97b07bdca", "url": "https://github.com/kiegroup/appformer/commit/bf9e08040ba3dd01820ee8ceb6cc17c97b07bdca", "message": "improvements", "committedDate": "2020-10-07T16:19:09Z", "type": "commit"}, {"oid": "17a1ca82b809a288bf72e57f61dd3b8dfdc2d51f", "url": "https://github.com/kiegroup/appformer/commit/17a1ca82b809a288bf72e57f61dd3b8dfdc2d51f", "message": "Improvements", "committedDate": "2020-10-07T16:19:10Z", "type": "commit"}, {"oid": "7c756726a2d2795ce999c5043fd973b60979ea67", "url": "https://github.com/kiegroup/appformer/commit/7c756726a2d2795ce999c5043fd973b60979ea67", "message": "Sharing model and improvements", "committedDate": "2020-10-07T16:19:10Z", "type": "commit"}, {"oid": "7c756726a2d2795ce999c5043fd973b60979ea67", "url": "https://github.com/kiegroup/appformer/commit/7c756726a2d2795ce999c5043fd973b60979ea67", "message": "Sharing model and improvements", "committedDate": "2020-10-07T16:19:10Z", "type": "forcePushed"}]}