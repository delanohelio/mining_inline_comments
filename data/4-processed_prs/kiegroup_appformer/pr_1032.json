{"pr_number": 1032, "pr_title": "AF-2452 : Making LRUCache configurable to avoid large memory retention", "pr_createdAt": "2020-08-20T19:56:00Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1032", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ1ODg3OA==", "url": "https://github.com/kiegroup/appformer/pull/1032#discussion_r477458878", "bodyText": "in this case MAX_ENTRIES should be lowercase", "author": "adrielparedes", "createdAt": "2020-08-26T17:12:52Z", "path": "uberfire-services/uberfire-services-api/src/main/java/org/guvnor/common/services/backend/cache/LRUCache.java", "diffHunk": "@@ -32,14 +32,11 @@\n     private Map<Path, V> cache;\n \n     public LRUCache() {\n-        cache = new LinkedHashMap<Path, V>(MAX_ENTRIES + 1,\n-                                           0.75f,\n-                                           true) {\n-            public boolean removeEldestEntry(Map.Entry eldest) {\n-                return size() > MAX_ENTRIES;\n-            }\n-        };\n-        cache = (Map) Collections.synchronizedMap(cache);\n+        setCache(this.MAX_ENTRIES);\n+    }\n+\n+    public LRUCache(final int MAX_ENTRIES) {", "originalCommit": "53619db8f25c248f415eaa1e59402d90eeffef5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI3MDQ5NA==", "url": "https://github.com/kiegroup/appformer/pull/1032#discussion_r479270494", "bodyText": "Done", "author": "akumar074", "createdAt": "2020-08-28T13:08:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ1ODg3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ1OTExNA==", "url": "https://github.com/kiegroup/appformer/pull/1032#discussion_r477459114", "bodyText": "same here", "author": "adrielparedes", "createdAt": "2020-08-26T17:13:14Z", "path": "uberfire-services/uberfire-services-api/src/main/java/org/guvnor/common/services/backend/cache/LRUCache.java", "diffHunk": "@@ -75,4 +72,15 @@ public void invalidateCache(final Path path) {\n     public Set<Path> getKeys() {\n         return cache.keySet();\n     }\n+\n+    private void setCache(final int MAX_ENTRIES) {", "originalCommit": "53619db8f25c248f415eaa1e59402d90eeffef5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI3MDU5NA==", "url": "https://github.com/kiegroup/appformer/pull/1032#discussion_r479270594", "bodyText": "Done", "author": "akumar074", "createdAt": "2020-08-28T13:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ1OTExNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MDU3Nw==", "url": "https://github.com/kiegroup/appformer/pull/1032#discussion_r477460577", "bodyText": "since it is static, you should use class name (LRUCache.MAX_ENTRIES) or just omit this", "author": "adrielparedes", "createdAt": "2020-08-26T17:15:38Z", "path": "uberfire-services/uberfire-services-api/src/main/java/org/guvnor/common/services/backend/cache/LRUCache.java", "diffHunk": "@@ -32,14 +32,11 @@\n     private Map<Path, V> cache;\n \n     public LRUCache() {\n-        cache = new LinkedHashMap<Path, V>(MAX_ENTRIES + 1,\n-                                           0.75f,\n-                                           true) {\n-            public boolean removeEldestEntry(Map.Entry eldest) {\n-                return size() > MAX_ENTRIES;\n-            }\n-        };\n-        cache = (Map) Collections.synchronizedMap(cache);\n+        setCache(this.MAX_ENTRIES);", "originalCommit": "53619db8f25c248f415eaa1e59402d90eeffef5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI3MDY1Ng==", "url": "https://github.com/kiegroup/appformer/pull/1032#discussion_r479270656", "bodyText": "Done", "author": "akumar074", "createdAt": "2020-08-28T13:08:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MDU3Nw=="}], "type": "inlineReview"}, {"oid": "2706de6d9815ea8315c3c7128741088874a91bf1", "url": "https://github.com/kiegroup/appformer/commit/2706de6d9815ea8315c3c7128741088874a91bf1", "message": "AF-2452 : Making LRUCache configurable to avoid large memory retention\n\n * Added parameterized constructor to configure MAX_ENTRIES in LRUCache", "committedDate": "2020-08-28T12:54:55Z", "type": "commit"}, {"oid": "2706de6d9815ea8315c3c7128741088874a91bf1", "url": "https://github.com/kiegroup/appformer/commit/2706de6d9815ea8315c3c7128741088874a91bf1", "message": "AF-2452 : Making LRUCache configurable to avoid large memory retention\n\n * Added parameterized constructor to configure MAX_ENTRIES in LRUCache", "committedDate": "2020-08-28T12:54:55Z", "type": "forcePushed"}]}