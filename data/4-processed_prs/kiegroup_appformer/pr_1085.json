{"pr_number": 1085, "pr_title": "BAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles", "pr_createdAt": "2020-12-09T16:17:07Z", "pr_url": "https://github.com/kiegroup/appformer/pull/1085", "timeline": [{"oid": "0d2b752d14917284a61fca6144d0c2f11aa605f2", "url": "https://github.com/kiegroup/appformer/commit/0d2b752d14917284a61fca6144d0c2f11aa605f2", "message": "BAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles", "committedDate": "2020-12-10T14:15:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyNDI0MQ==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540224241", "bodyText": "Can this be null or fail somehow?", "author": "adrielparedes", "createdAt": "2020-12-10T14:43:54Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-keycloak/src/main/java/org/uberfire/ext/security/management/keycloak/KeyCloakGroupManager.java", "diffHunk": "@@ -104,9 +104,10 @@ public Group get(String identifier) throws SecurityManagementException {\n     @Override\n     public List<Group> getAll() throws SecurityManagementException {\n         final List<Group> roles = new LinkedList<>();\n+        final RolesResource[] rolesResource = new RolesResource[1];\n         consumeRealm(realmResource -> {\n-            final RolesResource rolesResource = realmResource.roles();\n-            final List<RoleRepresentation> roleRepresentations = rolesResource.list();\n+            rolesResource[0] = getRolesResource(realmResource, useResourceRoleMapping);", "originalCommit": "0d2b752d14917284a61fca6144d0c2f11aa605f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyNjk1MA==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540226950", "bodyText": "Why there is a list of 1 element here? Can't we wait until the list is needed to create a Collection.singletonList()?", "author": "adrielparedes", "createdAt": "2020-12-10T14:47:12Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-keycloak/src/main/java/org/uberfire/ext/security/management/keycloak/KeyCloakGroupManager.java", "diffHunk": "@@ -104,9 +104,10 @@ public Group get(String identifier) throws SecurityManagementException {\n     @Override\n     public List<Group> getAll() throws SecurityManagementException {\n         final List<Group> roles = new LinkedList<>();\n+        final RolesResource[] rolesResource = new RolesResource[1];", "originalCommit": "0d2b752d14917284a61fca6144d0c2f11aa605f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI2MTY1NQ==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540261655", "bodyText": "@adrielparedes you are right we dont need a list here. But  in method \"Group get(String identifier)\", i remember it was added to intialise the interface RolesResource since it was used inside and outside lambda expression. Please see", "author": "RishiRajAnand", "createdAt": "2020-12-10T15:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyNjk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI2OTE1OQ==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540269159", "bodyText": "Got it!", "author": "adrielparedes", "createdAt": "2020-12-10T15:37:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyNjk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyNzQ4NQ==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540227485", "bodyText": "Is this always going to return a value or could be null?", "author": "adrielparedes", "createdAt": "2020-12-10T14:47:49Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-keycloak/src/main/java/org/uberfire/ext/security/management/keycloak/BaseKeyCloakManager.java", "diffHunk": "@@ -288,4 +318,19 @@ protected void handleResponse(ClientResponse response) {\n             }\n         }\n     }\n+\n+    protected RolesResource getRolesResource(RealmResource realmResource, boolean useClientRoles) {\n+        if (useClientRoles) {\n+            return realmResource.clients().get(getClientIdByName(realmResource)).roles();", "originalCommit": "0d2b752d14917284a61fca6144d0c2f11aa605f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI0ODQ5MQ==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540248491", "bodyText": "IMO it shouldn't never return a null value since these function chain just helps to generate the right URI for the SSO calls. The return value of this method which is of type RolesResource is the final URI created.", "author": "RishiRajAnand", "createdAt": "2020-12-10T15:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyNzQ4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIzMzc3MQ==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540233771", "bodyText": "I saw this IF Pattern 3 times. Can't we do something to extract that first part?\nSomething like:\npublic ACommonInterface getSomething(){\n  if (useResourceRoleMapping) {\n    return roleMappingResource.clientLevel(getClientIdByName(getRealmResource()))\n   } else {\n     return roleMappingResource.realmLevel()\n   }\n}", "author": "adrielparedes", "createdAt": "2020-12-10T14:55:19Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-keycloak/src/main/java/org/uberfire/ext/security/management/keycloak/BaseKeyCloakManager.java", "diffHunk": "@@ -165,7 +174,13 @@ protected Group createGroup(String name) {\n \n     protected Set[] getUserGroupsAndRoles(final RoleMappingResource roleMappingResource) {\n         if (roleMappingResource != null) {\n-            List<RoleRepresentation> roles = roleMappingResource.realmLevel().listEffective();\n+            List<RoleRepresentation> roles;\n+            if (useResourceRoleMapping) {", "originalCommit": "0d2b752d14917284a61fca6144d0c2f11aa605f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3MjAwNA==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540872004", "bodyText": "@adrielparedes I have refractored the code. Thanks", "author": "RishiRajAnand", "createdAt": "2020-12-11T11:11:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIzMzc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI0Mjc0Mw==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540242743", "bodyText": "Is this a default value? Does client always have to be kie?", "author": "tomasdavidorg", "createdAt": "2020-12-10T15:06:06Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-keycloak/src/main/java/org/uberfire/ext/security/management/keycloak/BaseKeyCloakManager.java", "diffHunk": "@@ -56,6 +61,10 @@\n \n     static final int STATUS_NOT_AUTHORIZED = 403;\n \n+    protected static final String DEFAULT_USE_RESOURCE_ROLE_MAPPING = \"false\";\n+    protected static final String CLIENT_ID = \"kie\";", "originalCommit": "0d2b752d14917284a61fca6144d0c2f11aa605f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI2Njk5NQ==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540266995", "bodyText": "@tomasdavidorg I guess It should be \"kie\" always. because this BC uses this identifier to find the client where business central URI is configured in RHSSO. We mention the same way in doc\nhttps://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.8/html-single/integrating_red_hat_process_automation_manager_with_red_hat_single_sign-on/index#sso-central-client-create-proc", "author": "RishiRajAnand", "createdAt": "2020-12-10T15:35:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI0Mjc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI2Nzk2Ng==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540267966", "bodyText": "though i think this should be mentioned in our docs as a mandatory.", "author": "RishiRajAnand", "createdAt": "2020-12-10T15:36:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI0Mjc0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2OTIyMA==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540769220", "bodyText": "The formatting of the header is broken on the new files.", "author": "tomasdavidorg", "createdAt": "2020-12-11T08:22:58Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-api/src/main/java/org/uberfire/ext/security/management/api/exception/ClientNotFoundException.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ *\n+ *   Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ *\n+ */\n+", "originalCommit": "0d2b752d14917284a61fca6144d0c2f11aa605f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3MDQyNA==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540870424", "bodyText": "done", "author": "RishiRajAnand", "createdAt": "2020-12-11T11:08:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2OTIyMA=="}], "type": "inlineReview"}, {"oid": "fd22d1da3461f393cbc2ae4cd186f1159797fc1c", "url": "https://github.com/kiegroup/appformer/commit/fd22d1da3461f393cbc2ae4cd186f1159797fc1c", "message": "BAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles", "committedDate": "2020-12-11T11:07:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NzMxNw==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540877317", "bodyText": "Please format also here.", "author": "tomasdavidorg", "createdAt": "2020-12-11T11:21:20Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-keycloak/src/main/java/org/uberfire/ext/security/management/keycloak/client/resource/ClientResource.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ *\n+ *   Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ *\n+ */\n+", "originalCommit": "fd22d1da3461f393cbc2ae4cd186f1159797fc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3OTY2Mw==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540879663", "bodyText": "done", "author": "RishiRajAnand", "createdAt": "2020-12-11T11:25:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NzMxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NzQ3OA==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540877478", "bodyText": "Please format also here.", "author": "tomasdavidorg", "createdAt": "2020-12-11T11:21:37Z", "path": "uberfire-extensions/uberfire-security/uberfire-security-management/uberfire-security-management-keycloak/src/main/java/org/uberfire/ext/security/management/keycloak/client/resource/ClientsResource.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ *\n+ *   Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ *\n+ */", "originalCommit": "fd22d1da3461f393cbc2ae4cd186f1159797fc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3OTc2MA==", "url": "https://github.com/kiegroup/appformer/pull/1085#discussion_r540879760", "bodyText": "done, thanks", "author": "RishiRajAnand", "createdAt": "2020-12-11T11:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NzQ3OA=="}], "type": "inlineReview"}, {"oid": "82dfca0c7d5449d0db043d9b97db3b61b627b524", "url": "https://github.com/kiegroup/appformer/commit/82dfca0c7d5449d0db043d9b97db3b61b627b524", "message": "BAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles", "committedDate": "2020-12-11T11:24:23Z", "type": "forcePushed"}, {"oid": "52eafc71f7af61f46857c57527ddf39434eb0de9", "url": "https://github.com/kiegroup/appformer/commit/52eafc71f7af61f46857c57527ddf39434eb0de9", "message": "BAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles\nBAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles", "committedDate": "2020-12-17T10:25:35Z", "type": "commit"}, {"oid": "52eafc71f7af61f46857c57527ddf39434eb0de9", "url": "https://github.com/kiegroup/appformer/commit/52eafc71f7af61f46857c57527ddf39434eb0de9", "message": "BAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles\nBAPL-1735 :[GSS-RFE] RHPAM + RHSSO customer asking for support of Client Roles", "committedDate": "2020-12-17T10:25:35Z", "type": "forcePushed"}]}