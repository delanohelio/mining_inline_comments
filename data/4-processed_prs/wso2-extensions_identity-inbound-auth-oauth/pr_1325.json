{"pr_number": 1325, "pr_title": "Fix for issue when OAuth scope creation gives 500 error code for invalid request body ", "pr_createdAt": "2020-02-19T06:35:21Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNDAyNA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r381104024", "bodyText": "scope is not required here", "author": "IsuraD", "createdAt": "2020-02-19T06:49:51Z", "path": "pom.xml", "diffHunk": "@@ -460,6 +460,12 @@\n             </dependency>\n \n             <!--Swagger Dependencies-->\n+            <dependency>\n+                <groupId>com.fasterxml.jackson.core</groupId>\n+                <artifactId>jackson-core</artifactId>\n+                <scope>provided</scope>", "originalCommit": "8f291c972757e969620a5a0abc3e86b6f9ce04f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNzQzNQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r381107435", "bodyText": "removed", "author": "mevan-karu", "createdAt": "2020-02-19T07:01:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNDAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNDI0Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r381104243", "bodyText": "Shall we put the actual description in the error message? That would be more meaningful", "author": "IsuraD", "createdAt": "2020-02-19T06:50:41Z", "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/java/org/wso2/carbon/identity/oauth/scope/endpoint/exceptionMapper/JsonProcessingExceptionMapper.java", "diffHunk": "@@ -0,0 +1,58 @@\n+\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.scope.endpoint.exceptionMapper;\n+\n+import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.oauth.scope.endpoint.dto.ErrorDTO;\n+\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+\n+/**\n+ * Handles exceptions when an incorrect json requests body is received.\n+ * Sends a default error response.\n+ */\n+public class JsonProcessingExceptionMapper implements ExceptionMapper<UnrecognizedPropertyException> {\n+\n+    private static final Log log = LogFactory.getLog(JsonProcessingExceptionMapper.class);\n+    public static final String ERROR_MESSAGE = \"Invalid Request\";\n+    public static final String DESCRIPTION = \"Provided JSON request content is not in the valid format.\";\n+\n+    @Override\n+    public Response toResponse(UnrecognizedPropertyException e) {\n+\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Provided JSON request content is not in the valid format:\", e);\n+        }\n+\n+        ErrorDTO errorDTO = new ErrorDTO();\n+        errorDTO.setCode(Response.Status.BAD_REQUEST.toString());\n+        errorDTO.setMessage(ERROR_MESSAGE);\n+        errorDTO.setDescription(DESCRIPTION);", "originalCommit": "8f291c972757e969620a5a0abc3e86b6f9ce04f9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc8584a2b26f1c5c11e011f62eff298bcdcdc4d8", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/fc8584a2b26f1c5c11e011f62eff298bcdcdc4d8", "message": "Fix for issue\n\nhttps://github.com/wso2/product-is/issues/7615", "committedDate": "2020-02-19T06:59:17Z", "type": "forcePushed"}, {"oid": "fe4d6ac45d52c25bf79acee55fdd165189405e1b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/fe4d6ac45d52c25bf79acee55fdd165189405e1b", "message": "Fix for issue\n\nhttps://github.com/wso2/product-is/issues/7615", "committedDate": "2020-02-19T08:49:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MTMyMw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r381161323", "bodyText": "Add a new line EOF", "author": "DMHP", "createdAt": "2020-02-19T09:14:00Z", "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/webapp/WEB-INF/beans.xml", "diffHunk": "@@ -13,6 +13,7 @@\n         </jaxrs:serviceBeans>\n         <jaxrs:providers>\n             <bean class=\"com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider\"/>\n+            <bean class=\"org.wso2.carbon.identity.oauth.scope.endpoint.expmapper.JsonProcessingExceptionMapper\"/>\n         </jaxrs:providers>\n     </jaxrs:server>\n </beans>", "originalCommit": "fe4d6ac45d52c25bf79acee55fdd165189405e1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNDg2Ng==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r381334866", "bodyText": "Added", "author": "mevan-karu", "createdAt": "2020-02-19T14:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MTMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MTg3Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r381161877", "bodyText": "Shall we move the constants to Oauth2ScopeConstants.java file", "author": "DMHP", "createdAt": "2020-02-19T09:15:06Z", "path": "components/org.wso2.carbon.identity.oauth.scope.endpoint/src/main/java/org/wso2/carbon/identity/oauth/scope/endpoint/expmapper/JsonProcessingExceptionMapper.java", "diffHunk": "@@ -0,0 +1,58 @@\n+\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.oauth.scope.endpoint.expmapper;\n+\n+import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.oauth.scope.endpoint.dto.ErrorDTO;\n+\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+\n+/**\n+ * Handles exceptions when an incorrect json requests body is received.\n+ * Sends a default error response.\n+ */\n+public class JsonProcessingExceptionMapper implements ExceptionMapper<UnrecognizedPropertyException> {\n+\n+    private static final Log log = LogFactory.getLog(JsonProcessingExceptionMapper.class);\n+    public static final String ERROR_MESSAGE = \"Invalid Request\";", "originalCommit": "fe4d6ac45d52c25bf79acee55fdd165189405e1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNDc3MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r381334770", "bodyText": "Added a new error message to Oauth2ScopeConstants.java", "author": "mevan-karu", "createdAt": "2020-02-19T14:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MTg3Nw=="}], "type": "inlineReview"}, {"oid": "44db29f2abafa6c7b4a13fe9f5ca3529b634d58b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/44db29f2abafa6c7b4a13fe9f5ca3529b634d58b", "message": "Fix for issue\n\nhttps://github.com/wso2/product-is/issues/7615", "committedDate": "2020-02-19T14:38:30Z", "type": "commit"}, {"oid": "44db29f2abafa6c7b4a13fe9f5ca3529b634d58b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/44db29f2abafa6c7b4a13fe9f5ca3529b634d58b", "message": "Fix for issue\n\nhttps://github.com/wso2/product-is/issues/7615", "committedDate": "2020-02-19T14:38:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA5NDU1Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1325#discussion_r464094553", "bodyText": "Let's add a full stop", "author": "Buddhimah", "createdAt": "2020-08-02T16:01:46Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java", "diffHunk": "@@ -42,6 +42,7 @@\n                 \"Scope with the name %s already exists in the system. Please use a different scope name.\"),\n         ERROR_CODE_BAD_REQUEST_SCOPE_NOT_SPECIFIED(\"41005\", \"Scope is not specified.\"),\n         ERROR_CODE_BAD_REQUEST_SCOPE_NAME_CONTAINS_WHITESPACES(\"41006\", \"Scope name: %s contains white spaces.\"),\n+        ERROR_CODE_BAD_REQUEST(\"41007\", \"Invalid request\"),", "originalCommit": "44db29f2abafa6c7b4a13fe9f5ca3529b634d58b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}