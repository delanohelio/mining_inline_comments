{"pr_number": 2359, "pr_title": "Reinitialize random seed at runtime in Windows Native image, JDK 11", "pr_createdAt": "2020-04-17T17:53:27Z", "pr_url": "https://github.com/oracle/graal/pull/2359", "timeline": [{"oid": "3ffe508715b301ae2e4db7355024d5c7ce3ef642", "url": "https://github.com/oracle/graal/commit/3ffe508715b301ae2e4db7355024d5c7ce3ef642", "message": "Reinitialize random seed at runtime in Windows Native image\n\nJDK 11 needs this tweak to have fresh seed for random number\ngenerator on each native image start.\n\nJDK 8 does not hold the seed in a static final field in\nsun.security.provider.AbstractDrbg$SeederHolder so\nit doesn't have this problem.", "committedDate": "2020-04-20T22:14:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwNzU5OQ==", "url": "https://github.com/oracle/graal/pull/2359#discussion_r412407599", "bodyText": "Since sun.security.provider.AbstractDrbg$SeederHolder is a shared class this should be enabled for Linux/Darwin platforms too, not only Windows, so please just remove JNIRegistrationUtil.isWindows().", "author": "cstancu", "createdAt": "2020-04-21T18:50:46Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/SecurityServicesFeature.java", "diffHunk": "@@ -109,6 +109,11 @@ public void duringSetup(DuringSetupAccess access) {\n         ImageSingletons.lookup(RuntimeClassInitializationSupport.class).rerunInitialization(clazz(access, \"sun.security.provider.SeedGenerator\"), \"for substitutions\");\n         ImageSingletons.lookup(RuntimeClassInitializationSupport.class).rerunInitialization(clazz(access, \"sun.security.provider.SecureRandom$SeederHolder\"), \"for substitutions\");\n \n+        if(JNIRegistrationUtil.isWindows() && JavaVersionUtil.JAVA_SPEC >= 11) {", "originalCommit": "3ffe508715b301ae2e4db7355024d5c7ce3ef642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyOTkzOQ==", "url": "https://github.com/oracle/graal/pull/2359#discussion_r412729939", "bodyText": "@cstancu Thank you for the comment. I will.\nAs I am learning this, could you take a minute to explain why the bug does not manifest on Linux for me, please? The class is used even with my Linux native-image build:\n$ grep AbstractDrbg /home/karm/workspaceRH/UUID/reports/build_time_classes_20200422_090211.txt\nsun.security.provider.AbstractDrbg\nsun.security.provider.AbstractDrbg$$Lambda$674/0x00000007c0bd8c40\nsun.security.provider.AbstractDrbg$NonceProvider\nsun.security.provider.AbstractDrbg$SeederHolder\nsun.security.provider.AbstractDrbg$SeederHolder$$Lambda$680/0x00000007c0bdf440\n\nAlthough it is apparently not necessary to re-initialize it at runtime to get a new seed on startup, see:\n$ strace ./main \n\naccess(\"/dev/random\", R_OK)             = 0\naccess(\"/dev/random\", R_OK)             = 0\naccess(\"/dev/urandom\", R_OK)            = 0\nlstat(\"/dev\", {st_mode=S_IFDIR|0755, st_size=4200, ...}) = 0\nlstat(\"/dev/random\", {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 8), ...}) = 0\nopen(\"/dev/random\", O_RDONLY)           = 3\nfstat(3, {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 8), ...}) = 0\nlstat(\"/dev\", {st_mode=S_IFDIR|0755, st_size=4200, ...}) = 0\nlstat(\"/dev/urandom\", {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 9), ...}) = 0\nopen(\"/dev/urandom\", O_RDONLY)          = 4\nfstat(4, {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 9), ...}) = 0\nread(4, \"\\327?\\206LS\\r\\235x\\332\\3723b|tv'\\304\\202=\\254\", 20) = 20\nread(4, \"^\\310\\333 \\37\\\"\\1\\0323\\23\\34\\346U\\224S\\374\\23\\354?\\235%]\\2\\213\\356P\\26\\355\\351l\\207l\"..., 256) = 256\n\nThank you for your time.\nK.", "author": "Karm", "createdAt": "2020-04-22T07:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwNzU5OQ=="}], "type": "inlineReview"}, {"oid": "1d980edb3691291a0fd0f925198ba19941070341", "url": "https://github.com/oracle/graal/commit/1d980edb3691291a0fd0f925198ba19941070341", "message": "Reinitialize random seed at runtime in Windows Native image\n\nJDK 11 needs this tweak to have fresh seed for random number\ngenerator on each native image start.\n\nJDK 8 does not hold the seed in a static final field in\nsun.security.provider.AbstractDrbg$SeederHolder so\nit doesn't have this problem.", "committedDate": "2020-04-22T22:44:22Z", "type": "commit"}, {"oid": "1d980edb3691291a0fd0f925198ba19941070341", "url": "https://github.com/oracle/graal/commit/1d980edb3691291a0fd0f925198ba19941070341", "message": "Reinitialize random seed at runtime in Windows Native image\n\nJDK 11 needs this tweak to have fresh seed for random number\ngenerator on each native image start.\n\nJDK 8 does not hold the seed in a static final field in\nsun.security.provider.AbstractDrbg$SeederHolder so\nit doesn't have this problem.", "committedDate": "2020-04-22T22:44:22Z", "type": "forcePushed"}]}