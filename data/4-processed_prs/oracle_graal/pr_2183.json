{"pr_number": 2183, "pr_title": "sulong: Initial AArch64 syscall support", "pr_createdAt": "2020-02-24T09:50:04Z", "pr_url": "https://github.com/oracle/graal/pull/2183", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjEyNQ==", "url": "https://github.com/oracle/graal/pull/2183#discussion_r383346125", "bodyText": "I'd rename cachedsyscallNum to cachedSyscallNum.", "author": "zapster", "createdAt": "2020-02-24T15:49:22Z", "path": "sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/asm/syscall/LLVMSyscallNode.java", "diffHunk": "@@ -41,29 +41,29 @@\n import com.oracle.truffle.llvm.runtime.memory.LLVMSyscallOperationNode;\n import com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode;\n \n-@NodeChild(\"rax\")\n-@NodeChild(\"rdi\")\n-@NodeChild(\"rsi\")\n-@NodeChild(\"rdx\")\n-@NodeChild(\"r10\")\n-@NodeChild(\"r8\")\n-@NodeChild(\"r9\")\n-public abstract class LLVMAMD64SyscallNode extends LLVMExpressionNode {\n+@NodeChild(\"syscallNum\")\n+@NodeChild(\"arg1\")\n+@NodeChild(\"arg2\")\n+@NodeChild(\"arg3\")\n+@NodeChild(\"arg4\")\n+@NodeChild(\"arg5\")\n+@NodeChild(\"arg6\")\n+public abstract class LLVMSyscallNode extends LLVMExpressionNode {\n     protected static final int NUM_SYSCALLS = 332;\n \n-    protected LLVMSyscallOperationNode createNode(long rax) {\n-        return LLVMLanguage.getLanguage().getCapability(PlatformCapability.class).createSyscallNode(rax);\n+    protected LLVMSyscallOperationNode createNode(long syscallNum) {\n+        return LLVMLanguage.getLanguage().getCapability(PlatformCapability.class).createSyscallNode(syscallNum);\n     }\n \n-    @Specialization(guards = \"rax == cachedRax\", limit = \"NUM_SYSCALLS\")\n-    protected long cachedSyscall(@SuppressWarnings(\"unused\") long rax, Object rdi, Object rsi, Object rdx, Object r10, Object r8, Object r9,\n-                    @Cached(\"rax\") @SuppressWarnings(\"unused\") long cachedRax,\n-                    @Cached(\"createNode(rax)\") LLVMSyscallOperationNode node,\n+    @Specialization(guards = \"syscallNum == cachedsyscallNum\", limit = \"NUM_SYSCALLS\")\n+    protected long cachedSyscall(@SuppressWarnings(\"unused\") long syscallNum, Object arg1, Object arg2, Object arg3, Object arg4, Object arg5, Object arg6,\n+                    @Cached(\"syscallNum\") @SuppressWarnings(\"unused\") long cachedsyscallNum,", "originalCommit": "f58aa9040f50146dc53fbaff98c425a3a51ba27d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxNjMyMw==", "url": "https://github.com/oracle/graal/pull/2183#discussion_r383816323", "bodyText": "Done.", "author": "a74nh", "createdAt": "2020-02-25T11:17:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxNjU3OA==", "url": "https://github.com/oracle/graal/pull/2183#discussion_r383816578", "bodyText": "(along with the travis formatting fixes)", "author": "a74nh", "createdAt": "2020-02-25T11:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjEyNQ=="}], "type": "inlineReview"}, {"oid": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "url": "https://github.com/oracle/graal/commit/7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files.", "committedDate": "2020-02-25T11:08:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTQ5Mw==", "url": "https://github.com/oracle/graal/pull/2183#discussion_r384969493", "bodyText": "Please drop the \"All rights reserved.\" In the BSD header this is superfluous since its already there just 2 lines below.", "author": "zapster", "createdAt": "2020-02-27T08:15:22Z", "path": "sulong/projects/com.oracle.truffle.llvm.parser.factories/src/com/oracle/truffle/llvm/parser/factories/LinuxAArch64PlatformCapability.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates.\n+ * Copyright (c) 2020, Arm Limited. All rights reserved.", "originalCommit": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4MjgyMw==", "url": "https://github.com/oracle/graal/pull/2183#discussion_r384982823", "bodyText": "Done.", "author": "a74nh", "createdAt": "2020-02-27T08:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTQ5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTcwMQ==", "url": "https://github.com/oracle/graal/pull/2183#discussion_r384969701", "bodyText": "Please drop the \"All rights reserved.\" In the BSD header this is superfluous since its already there just 2 lines below.", "author": "zapster", "createdAt": "2020-02-27T08:15:51Z", "path": "sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/asm/syscall/linux/aarch64/LinuxAArch64Syscall.java", "diffHunk": "@@ -0,0 +1,331 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates.\n+ * Copyright (c) 2020, Arm Limited. All rights reserved.", "originalCommit": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4Mjk5MQ==", "url": "https://github.com/oracle/graal/pull/2183#discussion_r384982991", "bodyText": "Done.", "author": "a74nh", "createdAt": "2020-02-27T08:46:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTcwMQ=="}], "type": "inlineReview"}, {"oid": "7b448824c36cc0c29cad071db757e78e2fd64e23", "url": "https://github.com/oracle/graal/commit/7b448824c36cc0c29cad071db757e78e2fd64e23", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files.", "committedDate": "2020-02-27T08:43:05Z", "type": "commit"}, {"oid": "7b448824c36cc0c29cad071db757e78e2fd64e23", "url": "https://github.com/oracle/graal/commit/7b448824c36cc0c29cad071db757e78e2fd64e23", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files.", "committedDate": "2020-02-27T08:43:05Z", "type": "forcePushed"}]}