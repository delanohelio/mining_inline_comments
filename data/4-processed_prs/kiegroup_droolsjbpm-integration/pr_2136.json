{"pr_number": 2136, "pr_title": "[JBPM-9195] Case traceability from a Task Instance", "pr_createdAt": "2020-06-19T15:09:57Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2136", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5ODA1OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2136#discussion_r444098058", "bodyText": "what about correlation key ?", "author": "elguardian", "createdAt": "2020-06-23T09:43:29Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseSLAComplianceIntegrationTest.java", "diffHunk": "@@ -89,6 +90,7 @@ public void testStartCaseWithSLAEscalation() throws Exception{\n         TaskSummary johnTask = johnTasks.get(0);\n         assertThat(johnTasks).hasSize(1);\n         assertThat(johnTask.getName()).isEqualTo(\"Hello1\");\n+        assertThat(johnTask.getProcessType()).isEqualTo(WorkflowProcess.CASE_TYPE);", "originalCommit": "b08e540ea3bc27614662cee35a363f3273d80747", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1MjQ4MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2136#discussion_r444752480", "bodyText": "Now is testing that is not null not empty (so the conversion from TaskSummary model to TaskSummary service, that is what we are testing here, is properly perfomed)", "author": "fjtirado", "createdAt": "2020-06-24T09:06:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5ODA1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwMjQ5MQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2136#discussion_r444102491", "bodyText": "promote to api.", "author": "elguardian", "createdAt": "2020-06-23T09:51:02Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java", "diffHunk": "@@ -513,9 +516,15 @@ public static TaskSummaryList convertToTaskSummaryList(Collection<TaskSummary> t\n                 .processInstanceId(taskSummary.getProcessInstanceId())\n                 .status(taskSummary.getStatusId())\n                 .skipable(taskSummary.isSkipable())\n-                .subject(taskSummary.getSubject())\n-                .build();\n-        return task;\n+                .subject(taskSummary.getSubject());\n+         // alternative to that instanceof is to use default interface methods in task summary, but this requires java8 >\n+         // in all implementors\n+         if (taskSummary instanceof TaskSummaryImpl)   \n+         {\n+             builder.correlationKey(((TaskSummaryImpl)taskSummary).getCorrelationKey());", "originalCommit": "b08e540ea3bc27614662cee35a363f3273d80747", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE5MDcyNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2136#discussion_r444190727", "bodyText": "if we promote to API, we are breaking backward compatibility, I do not think that will be wise, taking into account the API is defined in a separate repository, which potentially have different implementations in other repositories different than JBPM", "author": "fjtirado", "createdAt": "2020-06-23T12:39:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwMjQ5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE5Mzc0Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2136#discussion_r444193742", "bodyText": "There is no other implementation rather than JBPM one, so the interface can be changed", "author": "fjtirado", "createdAt": "2020-06-23T12:44:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwMjQ5MQ=="}], "type": "inlineReview"}, {"oid": "4b0724022542a521d93e10bfa7f2d12de7d839e3", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/4b0724022542a521d93e10bfa7f2d12de7d839e3", "message": "[JBPM-9195] Case traceability from a Task Instance\n\ncorrelationKey and processType has been added to TaskInstance and\nTaskSummary", "committedDate": "2020-06-23T18:42:30Z", "type": "forcePushed"}, {"oid": "c9bf272d552789a24bc89496baf43bc005e5b0ff", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c9bf272d552789a24bc89496baf43bc005e5b0ff", "message": "[JBPM-9195] Case traceability from a Task Instance\n\ncorrelationKey and processType has been added to TaskInstance and\nTaskSummary", "committedDate": "2020-06-24T09:03:29Z", "type": "forcePushed"}, {"oid": "0f3b15dec65d9eb28709ab2c81ca0f024284acb4", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0f3b15dec65d9eb28709ab2c81ca0f024284acb4", "message": "[JBPM-9195] Case traceability from a Task Instance\n\ncorrelationKey and processType has been added to TaskInstance and\nTaskSummary", "committedDate": "2020-06-24T09:25:54Z", "type": "forcePushed"}, {"oid": "f7f065f4fcc95cb8505ae83629b7d9a0f2bb1b04", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/f7f065f4fcc95cb8505ae83629b7d9a0f2bb1b04", "message": "[JBPM-9195] Case traceability from a Task Instance\n\ncorrelationKey and processType has been added to TaskInstance and\nTaskSummary", "committedDate": "2020-06-24T14:45:07Z", "type": "forcePushed"}, {"oid": "04f020b76948124d826f59409504b5b9bff5b4f8", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/04f020b76948124d826f59409504b5b9bff5b4f8", "message": "[JBPM-9195] Case traceability from a Task Instance\n\ncorrelationKey and processType has been added to TaskInstance and\nTaskSummary", "committedDate": "2020-07-07T11:47:46Z", "type": "commit"}, {"oid": "04f020b76948124d826f59409504b5b9bff5b4f8", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/04f020b76948124d826f59409504b5b9bff5b4f8", "message": "[JBPM-9195] Case traceability from a Task Instance\n\ncorrelationKey and processType has been added to TaskInstance and\nTaskSummary", "committedDate": "2020-07-07T11:47:46Z", "type": "forcePushed"}]}