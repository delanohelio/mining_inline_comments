{"pr_number": 2548, "pr_title": "Add spec-first build changes", "pr_createdAt": "2020-01-03T21:55:53Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2548", "timeline": [{"oid": "88741102440695ece1fe9add554d3d0785edab2b", "url": "https://github.com/candlepin/candlepin/commit/88741102440695ece1fe9add554d3d0785edab2b", "message": "Add spec-first build changes\n\nAfter this is in place, the process for porting a given resource or DTO\nto spec-first is:\n\n1. Add the resource definition to `api/candlepin-api-spec.yaml`\n(editor.swagger.io works well for this).\n2. Add any DTOs to `api/candlepin-api-spec.yaml`.\n3. Change the resource to implement the generated API interface.\n4. Remove all `javax.ws.rs` annotations from the resource\nimplementation.\n5. Remove all `io.swagger` annotations from the resource implementation.\n6. Remove old DTOs from the codebase (refactor to use the generated ones\ninstead).\n7. Fix any broken code or tests.\n8. Ensure unit tests still pass and the resource still works.\n9. Ensure swagger.json is still generated and is equivalent.\n\nNote: After building, you can view generated code in\n`api/build/generated/src/gen/java`.", "committedDate": "2020-01-03T21:53:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM5MDkyMw==", "url": "https://github.com/candlepin/candlepin/pull/2548#discussion_r363390923", "bodyText": "What are the implications of the package changing with API version differences? That is, how painful is it going to be if we change this to a v2 or some such in the future?", "author": "Ceiu", "createdAt": "2020-01-06T17:13:56Z", "path": "api/candlepin-api-config.json", "diffHunk": "@@ -0,0 +1,8 @@\n+{\n+  \"modelPackage\": \"org.candlepin.dto.api.v1\",", "originalCommit": "88741102440695ece1fe9add554d3d0785edab2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzNTY3NQ==", "url": "https://github.com/candlepin/candlepin/pull/2548#discussion_r364435675", "bodyText": "We could always have two API specification files that generate to different package names.  That wouldn't be awesome, but that's one way we could manage a change to v2.", "author": "awood", "createdAt": "2020-01-08T20:47:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM5MDkyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM5MTMxMg==", "url": "https://github.com/candlepin/candlepin/pull/2548#discussion_r363391312", "bodyText": "Is this for a generic, unhandled exception? Do more specific exceptions get their own entry in this area?", "author": "Ceiu", "createdAt": "2020-01-06T17:14:53Z", "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -0,0 +1,28 @@\n+openapi: 3.0.2\n+info:\n+  title: Candlepin\n+  description: Candlepin is a subscription management server written in Java. It helps with management of software subscriptions.\n+  version: 3.0.0-draft\n+\n+servers:\n+  - url: /candlepin\n+\n+security:\n+  - basicAuth: []\n+\n+paths: {}\n+\n+components:\n+  schemas:\n+    ExceptionMessage:\n+      description: An exception occurred", "originalCommit": "88741102440695ece1fe9add554d3d0785edab2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2ODQxNg==", "url": "https://github.com/candlepin/candlepin/pull/2548#discussion_r365368416", "bodyText": "This essentially a port of org.candlepin.common.exceptions.ExceptionMessage to the swagger YAML. As resources require it we could have additional schemas (e.g. org.candlepin.common.exceptions.DeletedConsumerExceptionMessage). That looks like the only other place we've done this.", "author": "kahowell", "createdAt": "2020-01-10T18:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM5MTMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMTk2Mw==", "url": "https://github.com/candlepin/candlepin/pull/2548#discussion_r365421963", "bodyText": "That sounds fine, and we can discuss specifics if it comes up during actual implementation.", "author": "Ceiu", "createdAt": "2020-01-10T20:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM5MTMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzNjUzOQ==", "url": "https://github.com/candlepin/candlepin/pull/2548#discussion_r364436539", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      generatePom: false\n          \n          \n            \n                      generatePom: false,\n          \n          \n            \n                      dateLibrary: \"java8\"\n          \n      \n    \n    \n  \n\nNot mandatory or anything, but helpful for future proofing", "author": "awood", "createdAt": "2020-01-08T20:49:33Z", "path": "build.gradle", "diffHunk": "@@ -194,6 +211,74 @@ subprojects {\n     }\n }\n \n+project(\":api\") {\n+    apply plugin: \"org.openapi.generator\"\n+\n+    // This project should only contain generated code.  No point in running checkstyle\n+    checkstyle.sourceSets = []\n+\n+    ext {\n+        api_spec_path = \"${projectDir}/candlepin-api-spec.yaml\"\n+        config_file = \"${projectDir}/candlepin-api-config.json\"\n+    }\n+\n+    openApiGenerate {\n+      generatorName = \"jaxrs-spec\"\n+      inputSpec = api_spec_path\n+      configFile = config_file\n+      outputDir = \"$buildDir/generated\"\n+      configOptions = [\n+          interfaceOnly: true,\n+          generatePom: false", "originalCommit": "88741102440695ece1fe9add554d3d0785edab2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2OTM4MQ==", "url": "https://github.com/candlepin/candlepin/pull/2548#discussion_r365369381", "bodyText": "\ud83d\udc4d", "author": "kahowell", "createdAt": "2020-01-10T18:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzNjUzOQ=="}], "type": "inlineReview"}, {"oid": "d45aa4a4df366c82fbfed1cd0dc3c10236c24b0c", "url": "https://github.com/candlepin/candlepin/commit/d45aa4a4df366c82fbfed1cd0dc3c10236c24b0c", "message": "Specify java8 date library in code gen", "committedDate": "2020-01-10T18:27:47Z", "type": "commit"}]}