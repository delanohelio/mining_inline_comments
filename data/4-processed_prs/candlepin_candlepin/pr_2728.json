{"pr_number": 2728, "pr_title": "[Bug 1844258]: Job Manager Logging Format Changes for Splunk (ENT-2480)", "pr_createdAt": "2020-06-18T10:41:25Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2728", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5ODg2OA==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442198868", "bodyText": "For the displayed value, we want to use snake case, so \"job_key\" here is more appropriate.", "author": "Ceiu", "createdAt": "2020-06-18T12:47:06Z", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -1293,6 +1295,9 @@ private void setupJobRuntimeEnvironment(AsyncJobStatus status) {\n         MDC.put(MDC_REQUEST_TYPE_KEY, \"job\");\n         MDC.put(MDC_REQUEST_UUID_KEY, status.getId());\n \n+        MDC.put(MDC_REQUEST_SUB_TYPE_KEY, \"jobKey\");", "originalCommit": "8ca73f3ee33fcf39c2f73d566184e2cd9dba0902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMTc0Ng==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442311746", "bodyText": "Dropped this key from here.", "author": "wolfdale", "createdAt": "2020-06-18T15:26:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5ODg2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMjQ2Ng==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442202466", "bodyText": "This is going to result in a floating \"=, \" for the majority of log entries. If we're going to use this method for omitting the entry when it's not present, we also need to do that for the separators as well, which is a bit hack.\nWe should look for a better option here, such that we can avoid printing the whole thing if the target variable is empty. All else failing, we can update the logging format here to specify the value separator and the keypair separator, and then inject them ourselves as suggested above.", "author": "Ceiu", "createdAt": "2020-06-18T12:52:48Z", "path": "server/src/main/resources/logback.xml", "diffHunk": "@@ -20,7 +20,7 @@\n     <appender name=\"CandlepinAppender\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n         <file>${LOG_DIR}/candlepin.log</file>\n         <encoder>\n-            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>\n+            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, %X{requestSubType}=%X{requestName}, org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>", "originalCommit": "8ca73f3ee33fcf39c2f73d566184e2cd9dba0902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNDg2OA==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442234868", "bodyText": "Looks like %equals{job_key=%X{jobKey}, }{job_key=, }{} would omit the job key printing if the value is not present in the MDC. This would also allow us to drop the request name bit as well, unless there's some other intended use for that.", "author": "Ceiu", "createdAt": "2020-06-18T13:42:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMjQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0NjM2OA==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442246368", "bodyText": "Scratch that; wrong logging format. This works, however:\n%replace(job_key=%X{jobKey}, ){'job_key=, ', ''}", "author": "Ceiu", "createdAt": "2020-06-18T13:57:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMjQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMjA2Nw==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442312067", "bodyText": "Replacement is working correctly for job key field.\nLeaving other as it is (org=, csid=).\nPS: Even a slightest mistake in Logback patterns will make your logs disappears. Learnt this the hard way :(", "author": "wolfdale", "createdAt": "2020-06-18T15:26:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMjQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxOTUwNg==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442319506", "bodyText": "Yeah, leaving the others is fine for now. I'm poking people on the value of conditionally removing them, and we can make a decision on that front later.", "author": "Ceiu", "createdAt": "2020-06-18T15:37:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMjQ2Ng=="}], "type": "inlineReview"}, {"oid": "88e56a51bc860a9df97f1f868e4e2f0587ec2610", "url": "https://github.com/candlepin/candlepin/commit/88e56a51bc860a9df97f1f868e4e2f0587ec2610", "message": "1844258: Job Manager Logging Format Changes for Splunk", "committedDate": "2020-06-18T15:18:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNjI5NQ==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442316295", "bodyText": "Looks like a refactor artifact here.", "author": "Ceiu", "createdAt": "2020-06-18T15:32:52Z", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -1197,7 +1198,7 @@ public AsyncJobStatus executeJob(JobMessage message) throws JobException {\n         // rather than failing directly. This would allow use of aliases and explicit job\n         // classes.\n         if (jobClass == null) {\n-            String errmsg = String.format(\"No registered job class for job: %s\", status.getJobKey());\n+            String errmsg = String.format(\"No registered job class for jobKey=%s\", status.getJobKey());", "originalCommit": "88e56a51bc860a9df97f1f868e4e2f0587ec2610", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyOTUzMQ==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442329531", "bodyText": "Changed it to job_key.", "author": "wolfdale", "createdAt": "2020-06-18T15:51:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNjI5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNjk1Mw==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442316953", "bodyText": "No space between the final } and the org=. If we have it in there, you get a double space between org and the preceding value.", "author": "Ceiu", "createdAt": "2020-06-18T15:33:41Z", "path": "server/src/main/resources/logback.xml", "diffHunk": "@@ -20,7 +20,7 @@\n     <appender name=\"CandlepinAppender\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n         <file>${LOG_DIR}/candlepin.log</file>\n         <encoder>\n-            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>\n+            <pattern>%d{ISO8601} [thread=%thread] [%X{requestType}=%X{requestUuid}, %replace(job_key=%X{jobKey}, ){'job_key=, ', ''} org=%X{org}, csid=%X{csid}] %-5p %c - %m%n</pattern>", "originalCommit": "88e56a51bc860a9df97f1f868e4e2f0587ec2610", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyOTU3Nw==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442329577", "bodyText": "fixed.", "author": "wolfdale", "createdAt": "2020-06-18T15:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNjk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxODAwNQ==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442318005", "bodyText": "MDC_JOB_KEY_KEY\nThe name sounds a bit silly and redundant, but it is the key for the job key.", "author": "Ceiu", "createdAt": "2020-06-18T15:35:14Z", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -93,6 +93,7 @@\n \n     private static final String MDC_REQUEST_TYPE_KEY = \"requestType\";\n     private static final String MDC_REQUEST_UUID_KEY = \"requestUuid\";\n+    private static final String MDC_REQUEST_JOB_KEY = \"jobKey\";", "originalCommit": "88e56a51bc860a9df97f1f868e4e2f0587ec2610", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyOTYxOA==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442329618", "bodyText": "Done.", "author": "wolfdale", "createdAt": "2020-06-18T15:52:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxODAwNQ=="}], "type": "inlineReview"}, {"oid": "cb27a0f8a23f5a85c286f1237546ae89b14b6565", "url": "https://github.com/candlepin/candlepin/commit/cb27a0f8a23f5a85c286f1237546ae89b14b6565", "message": "1844258: Job Manager Logging Format Changes for Splunk", "committedDate": "2020-06-18T15:44:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNTQwNw==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442335407", "bodyText": "I'm guessing the intent here is to make this particular line searchable as part of the same log query? If so, changing the message isn't the way to go here. This block can safely live in the try block below immediately following the setupJobRuntimeEnvironment call (with proper whitespace).\nI also noticed a bug unrelated to your code in the log message below regarding job instantiation. We can fix that here as well:\n        try {\n            this.setupJobRuntimeEnvironment(status);\n\n            // Maybe in this case it'd be better to attempt to use the job key as the job class\n            // rather than failing directly. This would allow use of aliases and explicit job\n            // classes.\n            Class<? extends AsyncJob> jobClass = getJobClass(status.getJobKey());\n            if (jobClass == null) {\n                String errmsg = String.format(\"No registered job class for job: %s\", status.getJobKey());\n\n                this.updateJobStatus(status, JobState.FAILED, errmsg);\n\n                log.error(errmsg);\n                throw new JobInitializationException(errmsg, true);\n            }\n\n            EventSink eventSink = injector.getInstance(EventSink.class);\n            AsyncJob job = injector.getInstance(jobClass);\n\n            if (job == null) {\n                String errmsg = String.format(\"Unable to instantiate job class \\\"%s\\\" for job: %s\",\n                    jobClass.getName(), status.getJobKey());\n\n                log.error(errmsg);\n                throw new JobInitializationException(errmsg);\n            }", "author": "Ceiu", "createdAt": "2020-06-18T16:00:29Z", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -1197,7 +1198,7 @@ public AsyncJobStatus executeJob(JobMessage message) throws JobException {\n         // rather than failing directly. This would allow use of aliases and explicit job\n         // classes.\n         if (jobClass == null) {\n-            String errmsg = String.format(\"No registered job class for job: %s\", status.getJobKey());\n+            String errmsg = String.format(\"No registered job class for job_key=%s\", status.getJobKey());", "originalCommit": "cb27a0f8a23f5a85c286f1237546ae89b14b6565", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY0MjA4MA==", "url": "https://github.com/candlepin/candlepin/pull/2728#discussion_r442642080", "bodyText": "Done.", "author": "wolfdale", "createdAt": "2020-06-19T05:44:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNTQwNw=="}], "type": "inlineReview"}, {"oid": "942c5c3d495e00b1e1e73a47dad39f1e40687cb3", "url": "https://github.com/candlepin/candlepin/commit/942c5c3d495e00b1e1e73a47dad39f1e40687cb3", "message": "1844258: Job Manager Logging Format Changes for Splunk", "committedDate": "2020-06-19T05:41:44Z", "type": "commit"}, {"oid": "942c5c3d495e00b1e1e73a47dad39f1e40687cb3", "url": "https://github.com/candlepin/candlepin/commit/942c5c3d495e00b1e1e73a47dad39f1e40687cb3", "message": "1844258: Job Manager Logging Format Changes for Splunk", "committedDate": "2020-06-19T05:41:44Z", "type": "forcePushed"}]}