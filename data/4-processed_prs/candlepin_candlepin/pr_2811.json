{"pr_number": 2811, "pr_title": "[M] 1854221: Validate early if executing job in RUNNING state", "pr_createdAt": "2020-09-18T13:03:09Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2811", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk0NjAwMA==", "url": "https://github.com/candlepin/candlepin/pull/2811#discussion_r490946000", "bodyText": "Can we change the error message to something that gives more information on the situation? Something along the lines of:\n\"Job \\\"%s\\\" (%s) is already running on host \\\"%s\\\"; ignoring execution request\"\nWe could also add a test here where if the host equals the current host, we just manually set the job state to QUEUED and continue execution as normal.", "author": "Ceiu", "createdAt": "2020-09-18T13:23:39Z", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -1539,6 +1539,14 @@ private AsyncJobStatus fetchJobStatus(JobMessage message)\n             log.error(errmsg);\n             throw new JobInitializationException(errmsg, true);\n         }\n+        else if (jobState == JobState.RUNNING) {\n+            String errmsg =\n+                String.format(\"Job \\\"%s\\\" (%s) is in the %s state, which is non-terminal and invalid\",", "originalCommit": "39933819b6c6832edc302f8bd644f1167d88fe6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1NjU5Mg==", "url": "https://github.com/candlepin/candlepin/pull/2811#discussion_r492656592", "bodyText": "Done", "author": "nikosmoum", "createdAt": "2020-09-22T11:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk0NjAwMA=="}], "type": "inlineReview"}, {"oid": "a2993411e5e03a65826f8bc3df348d6fc31fa5db", "url": "https://github.com/candlepin/candlepin/commit/a2993411e5e03a65826f8bc3df348d6fc31fa5db", "message": "1854221: Validate early if executing job in RUNNING state\n\n- In a clustered environment, if somehow a job that is\n  already in the RUNNING state would get picked up for\n  execution, we would update the executor field for that record\n  (before eventually failing), causing the original node that\n  previously executed it to never recover that job.\n- This change makes it so that we error out early when trying to\n  execute a job that is in the RUNNING state, and don't end up\n  updating it's record.\n- In the special case that the job is in the RUNNING state, but\n  was previously executed on the current node, we don't fail at\n  all, but move the job to QUEUED, so that it will be executed\n  as normal.", "committedDate": "2020-09-22T10:54:29Z", "type": "forcePushed"}, {"oid": "571469697edc31240e7af148fb55e0160d43187e", "url": "https://github.com/candlepin/candlepin/commit/571469697edc31240e7af148fb55e0160d43187e", "message": "1854221: Validate early if executing job in RUNNING state\n\n- In a clustered environment, if somehow a job that is\n  already in the RUNNING state would get picked up for\n  execution, we would update the executor field for that record\n  (before eventually failing), causing the original node that\n  previously executed it to never recover that job.\n- This change makes it so that we error out early when trying to\n  execute a job that is in the RUNNING state, and don't end up\n  updating it's record.\n- In the special case that the job is in the RUNNING state, but\n  was previously executed on the current node, we don't fail at\n  all, but move the job to QUEUED, so that it will be executed\n  as normal.", "committedDate": "2020-09-22T11:20:12Z", "type": "commit"}, {"oid": "571469697edc31240e7af148fb55e0160d43187e", "url": "https://github.com/candlepin/candlepin/commit/571469697edc31240e7af148fb55e0160d43187e", "message": "1854221: Validate early if executing job in RUNNING state\n\n- In a clustered environment, if somehow a job that is\n  already in the RUNNING state would get picked up for\n  execution, we would update the executor field for that record\n  (before eventually failing), causing the original node that\n  previously executed it to never recover that job.\n- This change makes it so that we error out early when trying to\n  execute a job that is in the RUNNING state, and don't end up\n  updating it's record.\n- In the special case that the job is in the RUNNING state, but\n  was previously executed on the current node, we don't fail at\n  all, but move the job to QUEUED, so that it will be executed\n  as normal.", "committedDate": "2020-09-22T11:20:12Z", "type": "forcePushed"}]}