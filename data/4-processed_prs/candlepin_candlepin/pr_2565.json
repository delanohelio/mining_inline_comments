{"pr_number": 2565, "pr_title": "[F] ENT-1829: Populate provided products and derived provided products", "pr_createdAt": "2020-01-14T10:29:57Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2565", "timeline": [{"oid": "361b417644f449411fea4ba34e815acca5d3150e", "url": "https://github.com/candlepin/candlepin/commit/361b417644f449411fea4ba34e815acca5d3150e", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-14T10:45:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366415255", "bodyText": "These need to be n-tier aware translations", "author": "Ceiu", "createdAt": "2020-01-14T15:47:31Z", "path": "server/src/main/java/org/candlepin/dto/rules/v1/PoolTranslator.java", "diffHunk": "@@ -80,7 +80,8 @@ public PoolDTO populate(ModelTranslator modelTranslator, Pool source, PoolDTO de\n         // Process nested objects if we have a model translator to use to the translation...\n         if (modelTranslator != null) {\n \n-            Set<Product> products = source.getProvidedProducts();\n+            Collection<Product> products = source.getProduct() == null ? null :", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5MTQ5MQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366691491", "bodyText": "@sonalidhome @Ceiu\nDo we need to combined stacked entitlements provided products here like we are doing in other pool translators?", "author": "abhiskum", "createdAt": "2020-01-15T04:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NzQwNg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366947406", "bodyText": "@Ceiu Can you explain what you mean by \"n-tier aware\"?", "author": "nikosmoum", "createdAt": "2020-01-15T15:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MjQyNQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368042425", "bodyText": "Based on the brief discussion I posed the other day during post-scrum, these particular bits where we copy the products to the pool DTO should be recursive and grab provided products of the provided products.", "author": "Ceiu", "createdAt": "2020-01-17T17:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4MDUxOQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368980519", "bodyText": "Updated the code to support n-tier.", "author": "sonalidhome", "createdAt": "2020-01-21T12:48:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTkzMQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366415931", "bodyText": "Add the provided product to the product itself up on line 2208.", "author": "Ceiu", "createdAt": "2020-01-14T15:48:35Z", "path": "server/src/test/java/org/candlepin/policy/AutobindRulesTest.java", "diffHunk": "@@ -2205,7 +2209,7 @@ public void testSelectBestPoolsShouldSelectBothPoolsInStackWhenOneOfThemProvides\n         Pool MCT80 = TestUtil.createPool(owner, prodMCT80);\n         MCT80.setId(\"MCT80\");\n         MCT80.setQuantity(1L);\n-        MCT80.addProvidedProduct(product69);\n+        MCT80.getProduct().addProvidedProduct(product69);", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3OTU0Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368979542", "bodyText": "Updated.", "author": "sonalidhome", "createdAt": "2020-01-21T12:46:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTkzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNjYxMA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366416610", "bodyText": "Add these to the product directly during product declaration.", "author": "Ceiu", "createdAt": "2020-01-14T15:49:40Z", "path": "server/src/test/java/org/candlepin/policy/AutobindRulesTest.java", "diffHunk": "@@ -2707,14 +2711,14 @@ public void testShouldSelectPoolWhenRoleMatchesButOtherSysPurposeAttributesAndSo\n         prodMCT1650.setAttribute(Product.Attributes.RAM, \"19960912\");\n         Pool MCT1650 = TestUtil.createPool(owner, prodMCT1650);\n         MCT1650.setId(\"MCT1650\");\n-        MCT1650.addProvidedProduct(product69);\n+        MCT1650.getProduct().addProvidedProduct(product69);", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4MDAwNA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368980004", "bodyText": "Updated.", "author": "sonalidhome", "createdAt": "2020-01-21T12:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNjYxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMzQ2Mw==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366923463", "bodyText": "This should also add the derived_provided_products here. And the create_mkt_product_and_pools method should now stop adding those. Also, this is part of another task (ENT-1834), so if it's going to be in this PR we should also add it to the commit & PR summary to reflect that.", "author": "nikosmoum", "createdAt": "2020-01-15T15:01:48Z", "path": "server/bin/import_test_data.rb", "diffHunk": "@@ -207,7 +207,8 @@ def create_product(cp, owner, product)\n     :attributes => attrs,\n     :dependentProductIds => dependent_products,\n     :relies_on => relies_on,\n-    :branding => branding\n+    :branding => branding,\n+    :providedProducts => provided_products", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NTY0MQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r367375641", "bodyText": "Products have provided products. When we create product as derived products, provided products property will behave like derived provided products for it. There is no need to add derived provided product explicitly into product.\nI thought, for create_mkt_product_and_pools, code of adding provided products into a pool will be removed under ENT-1832.", "author": "sonalidhome", "createdAt": "2020-01-16T11:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMzQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5MzMzMA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r367393330", "bodyText": "Regarding 2: This file (import_test_data.rb), is only called by the deploy script to load the test data codified in test_data.json, so it is unrelated to the rest of the changes or the rspec tests, and doesn't need to happen as part of this task. (this test data do not affect rspec tests at all, and are only used for manual testing after we run deploy script with the -t flag). This is what ENT-1834 was created for. So there is no need for it to be changed incrementally, and it will be cleaner to do it all at once, either in this PR, or in a separate PR specifically for ENT-1834.\nAbout 1: You are right that there is no derived provided products field on the Product model any more, but in the test_data.json, we still codify it like that (there is a single test product with derived_product_id / derived_provided_products fields). So here, instead of always doing :providedProducts => provided_products, we should add some logic that looks like this:\nIf derived_product_id is there, then do this: :providedProducts => derived_provided_products\notherwise, do this: :providedProducts => provided_products", "author": "nikosmoum", "createdAt": "2020-01-16T12:34:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMzQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4NDY2OA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r367784668", "bodyText": "Regarding 2: I needed to change the method def create_product(cp, owner, product) of import_test_data.json beacuse it's used in various rspec test methods. I'll update the necessary changes required for card ENT-1834 in this PR only.\nAbout 1: As per my understanding, in test_data.json, when derived product JSON is created,  it's equivalent derived provided products should also be a part of it. And we should be able to create the derived product with it's derived provided products.", "author": "sonalidhome", "createdAt": "2020-01-17T06:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMzQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4NTM3Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368985372", "bodyText": "Removed the code of  passing provided products from create_product method.\nChanges related to test data will be done under card ENT-1834.", "author": "sonalidhome", "createdAt": "2020-01-21T12:59:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMzQ2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyODAwNA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366928004", "bodyText": "I'm unsure of what this does? Is it needed?", "author": "nikosmoum", "createdAt": "2020-01-15T15:09:57Z", "path": "server/client/ruby/candlepin_api.rb", "diffHunk": "@@ -809,7 +809,7 @@ def create_product(owner_key, id, name, params={})\n       'dependentProductIds' => dependentProductIds,\n       'branding' => branding,\n       'reliesOn' => relies_on,\n-      'providedProducts' => providedProducts.collect { |pid| {'id' => pid} },\n+      'providedProducts' => providedProducts.collect { |pid| {'id' => pid} || pid}", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NjMyMg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r367376322", "bodyText": "This is added because some places provided products are used as object or string(id)", "author": "sonalidhome", "createdAt": "2020-01-16T11:51:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MzYwMg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368043602", "bodyText": "The ruby stuff is on life-support at this point, but we should try to avoid conflating them. If we're not consistent in how we pass provided products, we should spend a bit investigating how much work it would be to fix that inconsistency, rather than codifying it. From there we can decide if it's low enough effort to fix properly, or leaving something like this (along with a comment explaining it).", "author": "Ceiu", "createdAt": "2020-01-17T17:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4ODk3Nw==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368988977", "bodyText": "I recollect this was added because I was passing the whole provided-product object. After discussion with @abhiskum, I understood this will work even if we just pass a string of Ids.\nHence now removed passing whole object to create_product.", "author": "sonalidhome", "createdAt": "2020-01-21T13:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyODAwNA=="}], "type": "inlineReview"}, {"oid": "2bceff3564aa3f8d037dae223e7f4d389b8e9546", "url": "https://github.com/candlepin/candlepin/commit/2bceff3564aa3f8d037dae223e7f4d389b8e9546", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-21T12:44:57Z", "type": "forcePushed"}, {"oid": "1d7b0e41d98017aa74d78a2c8632e5bc9eb284ce", "url": "https://github.com/candlepin/candlepin/commit/1d7b0e41d98017aa74d78a2c8632e5bc9eb284ce", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-21T12:56:03Z", "type": "forcePushed"}, {"oid": "6769d650701c3a1df7541b1d586db9b5d75e802d", "url": "https://github.com/candlepin/candlepin/commit/6769d650701c3a1df7541b1d586db9b5d75e802d", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-21T14:08:55Z", "type": "forcePushed"}, {"oid": "4e00f372d913d6ff1fa5e77f1e5fbcf9bab212cc", "url": "https://github.com/candlepin/candlepin/commit/4e00f372d913d6ff1fa5e77f1e5fbcf9bab212cc", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-22T08:27:36Z", "type": "forcePushed"}, {"oid": "811eb79246369eef97c8cf0de18fb23c96eb0c8a", "url": "https://github.com/candlepin/candlepin/commit/811eb79246369eef97c8cf0de18fb23c96eb0c8a", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-23T11:50:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370160969", "bodyText": "I don't think the new method resolveProvidedProducts is needed. We could simply use the existing resolveProduct/resolveProducts methods to lookup any existing provided products we have, assuming they were already created.\nspec tests would have to make sure that the provided products are created first, and then create a marketing product that references them.\nThe only reason the resolveBranding method was created this way was because you can't really create a branding standalone. It is an entity fully owned by a product.", "author": "nikosmoum", "createdAt": "2020-01-23T14:48:26Z", "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java", "diffHunk": "@@ -289,6 +289,8 @@ public ProductInfo createProduct(ProductInfo pinfo) {\n         pdata.setCreated(new Date());\n         pdata.setUpdated(new Date());\n         pdata.setBranding(this.resolveBranding(pinfo.getBranding()));\n+        pdata.setProvidedProducts(this.resolveProvidedProducts(pinfo.getProvidedProducts()));", "originalCommit": "811eb79246369eef97c8cf0de18fb23c96eb0c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ5Mjg5Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370492892", "bodyText": "This was done to resolve 'verify branding info is correct in json blob' spec test. Provided product is created in non-hosted mode. When the marketing products get created in hosted mode, it doesn't recognize provided product in productMap. Hence for the solution, I added resolveProvidedProducts method.\nPossible approaches :\n\nAs suggested, modify the spec test to create provided product before marketing product in hosted.\nKeeping resolveProvidedProducts without identifying either the provided product is created in hosted or not.", "author": "sonalidhome", "createdAt": "2020-01-24T06:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2MjcyMA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370562720", "bodyText": "We should use approach 1 because it is consistent with how the HostedTest adapter works so far. That test already has an if is_hosted? condition; you can use that to create the engineering product either in hosted or in normal mode.", "author": "nikosmoum", "createdAt": "2020-01-24T10:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NDIzMA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370584230", "bodyText": "Did changes as per approach 1.", "author": "sonalidhome", "createdAt": "2020-01-24T11:14:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ=="}], "type": "inlineReview"}, {"oid": "56ca2d43be290fb99689d017f57876e1f00177ad", "url": "https://github.com/candlepin/candlepin/commit/56ca2d43be290fb99689d017f57876e1f00177ad", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-24T11:07:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODQxNA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370718414", "bodyText": "Move this block up and add it directly to the product instead of going indirectly through pool.", "author": "Ceiu", "createdAt": "2020-01-24T16:17:57Z", "path": "server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java", "diffHunk": "@@ -75,19 +79,15 @@ protected Pool initSourceObject() {\n         derivedProduct.setAttribute(Product.Attributes.STACKING_ID, \"2221\");\n         source.setDerivedProduct(derivedProduct);\n \n-        ProvidedProduct providedProd = new ProvidedProduct();\n-        providedProd.setProductId(\"provided-product-id-1\");\n-        providedProd.setProductName(\"provided-product-name-1\");\n-        Set<ProvidedProduct> providedProducts = new HashSet<>();\n-        providedProducts.add(providedProd);\n-        source.setProvidedProductDtos(providedProducts);\n+        Product providedProd = new Product();\n+        providedProd.setId(\"provided-product-id-1\");\n+        providedProd.setName(\"provided-product-name-1\");\n+        source.getProduct().addProvidedProduct(providedProd);", "originalCommit": "56ca2d43be290fb99689d017f57876e1f00177ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2ODU2Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r371068562", "bodyText": "Corrected the adding provided product to product.", "author": "sonalidhome", "createdAt": "2020-01-27T05:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODUxOA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370718518", "bodyText": "Add this directly to the derived product instead.", "author": "Ceiu", "createdAt": "2020-01-24T16:18:09Z", "path": "server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java", "diffHunk": "@@ -75,19 +79,15 @@ protected Pool initSourceObject() {\n         derivedProduct.setAttribute(Product.Attributes.STACKING_ID, \"2221\");\n         source.setDerivedProduct(derivedProduct);\n \n-        ProvidedProduct providedProd = new ProvidedProduct();\n-        providedProd.setProductId(\"provided-product-id-1\");\n-        providedProd.setProductName(\"provided-product-name-1\");\n-        Set<ProvidedProduct> providedProducts = new HashSet<>();\n-        providedProducts.add(providedProd);\n-        source.setProvidedProductDtos(providedProducts);\n+        Product providedProd = new Product();\n+        providedProd.setId(\"provided-product-id-1\");\n+        providedProd.setName(\"provided-product-name-1\");\n+        source.getProduct().addProvidedProduct(providedProd);\n \n-        ProvidedProduct derivedProvidedProd = new ProvidedProduct();\n-        derivedProvidedProd.setProductId(\"derived-provided-product-id-1\");\n-        derivedProvidedProd.setProductName(\"derived-provided-product-name-1\");\n-        Set<ProvidedProduct> derivedProvidedProducts = new HashSet<>();\n-        derivedProvidedProducts.add(derivedProvidedProd);\n-        source.setDerivedProvidedProductDtos(derivedProvidedProducts);\n+        Product derivedProvidedProd = new Product();\n+        derivedProvidedProd.setId(\"derived-provided-product-id-1\");\n+        derivedProvidedProd.setName(\"derived-provided-product-name-1\");\n+        source.getDerivedProduct().addProvidedProduct(derivedProvidedProd);", "originalCommit": "56ca2d43be290fb99689d017f57876e1f00177ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2ODU3Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r371068572", "bodyText": "Corrected the adding provided product to product.", "author": "sonalidhome", "createdAt": "2020-01-27T05:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODUxOA=="}], "type": "inlineReview"}, {"oid": "b6f27cc16064a69094fdad93b4192ecb26e1a76f", "url": "https://github.com/candlepin/candlepin/commit/b6f27cc16064a69094fdad93b4192ecb26e1a76f", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-27T05:26:19Z", "type": "commit"}, {"oid": "b6f27cc16064a69094fdad93b4192ecb26e1a76f", "url": "https://github.com/candlepin/candlepin/commit/b6f27cc16064a69094fdad93b4192ecb26e1a76f", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-27T05:26:19Z", "type": "forcePushed"}]}