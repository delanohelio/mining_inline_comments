{"pr_number": 2763, "pr_title": "1855830: Cannot autobind pools asynchronously", "pr_createdAt": "2020-07-24T07:00:01Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2763", "timeline": [{"oid": "c66fefe4570caafae16102885bbd0040c579ede9", "url": "https://github.com/candlepin/candlepin/commit/c66fefe4570caafae16102885bbd0040c579ede9", "message": "1855830: Cannot autobind pools asynchronously", "committedDate": "2020-07-24T07:39:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MDkxNw==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459980917", "bodyText": "This method is deprecated. We should only use @cp.create_pool (from candlepin_api.rb) from now on", "author": "nikosmoum", "createdAt": "2020-07-24T10:47:06Z", "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)", "originalCommit": "c66fefe4570caafae16102885bbd0040c579ede9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0OTkzNQ==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r460049935", "bodyText": "Done.", "author": "Januson", "createdAt": "2020-07-24T13:25:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MDkxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MDk3OA==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459980978", "bodyText": "same here, use create_pool", "author": "nikosmoum", "createdAt": "2020-07-24T10:47:15Z", "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)", "originalCommit": "c66fefe4570caafae16102885bbd0040c579ede9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0OTg3MA==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r460049870", "bodyText": "Done.", "author": "Januson", "createdAt": "2020-07-24T13:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MDk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MzE3Mw==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459983173", "bodyText": "redundant line", "author": "nikosmoum", "createdAt": "2020-07-24T10:53:03Z", "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)\n+\n+    installed = [\n+        {'productId' => product2.id, 'productName' => product2['name']}]\n+\n+    consumer = @cp.register(\n+        random_string('systempurpose'), :system, nil, {}, nil, owner_key, [], installed, nil, [],\n+        nil, [], nil, nil, nil, nil, nil, 0, nil, nil, nil, nil, ['addon1'])\n+    status = @cp.get_purpose_compliance(consumer['uuid'])\n+    status['status'].should == 'mismatched'\n+    status['nonCompliantAddOns'].include?('addon1').should == true\n+\n+    status = @cp.consume_product(nil, {:uuid => consumer.uuid, :async => true})\n+    wait_for_job(status['id'], 15)\n+    entitlements = @cp.list_entitlements(:uuid => consumer.uuid)\n+    entitlements.size.should == 2\n+    # print (\"entitlements: \" + entitlements.inspect())", "originalCommit": "c66fefe4570caafae16102885bbd0040c579ede9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0OTgyMw==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r460049823", "bodyText": "Done.", "author": "Januson", "createdAt": "2020-07-24T13:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MzE3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MzcxOA==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459983718", "bodyText": "I don't think we need all this. We only care the the consume_product resulted in a job that didn't fail, and 2 entitlements were attached", "author": "nikosmoum", "createdAt": "2020-07-24T10:54:29Z", "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)\n+\n+    installed = [\n+        {'productId' => product2.id, 'productName' => product2['name']}]\n+\n+    consumer = @cp.register(\n+        random_string('systempurpose'), :system, nil, {}, nil, owner_key, [], installed, nil, [],\n+        nil, [], nil, nil, nil, nil, nil, 0, nil, nil, nil, nil, ['addon1'])\n+    status = @cp.get_purpose_compliance(consumer['uuid'])\n+    status['status'].should == 'mismatched'\n+    status['nonCompliantAddOns'].include?('addon1').should == true\n+\n+    status = @cp.consume_product(nil, {:uuid => consumer.uuid, :async => true})\n+    wait_for_job(status['id'], 15)\n+    entitlements = @cp.list_entitlements(:uuid => consumer.uuid)\n+    entitlements.size.should == 2\n+    # print (\"entitlements: \" + entitlements.inspect())\n+    status = @cp.get_purpose_compliance(consumer.uuid)\n+    status['status'].should == 'matched'\n+    status['nonCompliantAddOns'].size.should == 0\n+    status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id", "originalCommit": "c66fefe4570caafae16102885bbd0040c579ede9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0OTc4NA==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r460049784", "bodyText": "Done.", "author": "Januson", "createdAt": "2020-07-24T13:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MzcxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4Mzk1NQ==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459983955", "bodyText": "Same here, no need for these checks, since we only care about the entitlement job not throwing an error and actually providing entitlements", "author": "nikosmoum", "createdAt": "2020-07-24T10:55:06Z", "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)\n+\n+    installed = [\n+        {'productId' => product2.id, 'productName' => product2['name']}]\n+\n+    consumer = @cp.register(\n+        random_string('systempurpose'), :system, nil, {}, nil, owner_key, [], installed, nil, [],\n+        nil, [], nil, nil, nil, nil, nil, 0, nil, nil, nil, nil, ['addon1'])\n+    status = @cp.get_purpose_compliance(consumer['uuid'])\n+    status['status'].should == 'mismatched'\n+    status['nonCompliantAddOns'].include?('addon1').should == true", "originalCommit": "c66fefe4570caafae16102885bbd0040c579ede9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0OTczNg==", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r460049736", "bodyText": "Done.", "author": "Januson", "createdAt": "2020-07-24T13:24:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4Mzk1NQ=="}], "type": "inlineReview"}, {"oid": "f29f4d0c65eca1415fa019a205a88f9403c6293f", "url": "https://github.com/candlepin/candlepin/commit/f29f4d0c65eca1415fa019a205a88f9403c6293f", "message": "1855830: Cannot autobind pools asynchronously", "committedDate": "2020-07-24T13:19:27Z", "type": "commit"}, {"oid": "f29f4d0c65eca1415fa019a205a88f9403c6293f", "url": "https://github.com/candlepin/candlepin/commit/f29f4d0c65eca1415fa019a205a88f9403c6293f", "message": "1855830: Cannot autobind pools asynchronously", "committedDate": "2020-07-24T13:19:27Z", "type": "forcePushed"}]}