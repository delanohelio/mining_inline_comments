{"pr_number": 500, "pr_title": "Preferences DSL", "pr_createdAt": "2020-06-02T16:06:40Z", "pr_url": "https://github.com/jellyfin/jellyfin-androidtv/pull/500", "timeline": [{"oid": "3eb3a2f5e90ca4500700ca514bf0314caf3ca421", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/3eb3a2f5e90ca4500700ca514bf0314caf3ca421", "message": "Add custom DSL for preference screen and replace the XML preferences with it", "committedDate": "2020-06-07T08:41:20Z", "type": "commit"}, {"oid": "c2e7797c40dfff7442c2fd4117ad58964ce5044f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/c2e7797c40dfff7442c2fd4117ad58964ce5044f", "message": "Add DSL for shortcut preference", "committedDate": "2020-06-07T08:41:21Z", "type": "commit"}, {"oid": "fdd1cf29e3bd381b6f4b5e46fe3cbefbbd9e2099", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/fdd1cf29e3bd381b6f4b5e46fe3cbefbbd9e2099", "message": "Add new preference syntax", "committedDate": "2020-06-07T08:41:28Z", "type": "commit"}, {"oid": "66fe71f2db2d7f118669b5a6f538e79cb494af56", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/66fe71f2db2d7f118669b5a6f538e79cb494af56", "message": "Add function to bind preferences to the preferences UI", "committedDate": "2020-06-07T08:41:28Z", "type": "commit"}, {"oid": "1ff888f305aaaa374f464cbbd93a2007ae9357ad", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/1ff888f305aaaa374f464cbbd93a2007ae9357ad", "message": "Split categories to own files", "committedDate": "2020-06-07T08:41:29Z", "type": "commit"}, {"oid": "cc38559ed44d2661669abe454245625b4644e20b", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/cc38559ed44d2661669abe454245625b4644e20b", "message": "Remove longpreference", "committedDate": "2020-06-07T08:41:38Z", "type": "commit"}, {"oid": "8b3fecf279d5998d3f3073625c7986f45ab8a3be", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/8b3fecf279d5998d3f3073625c7986f45ab8a3be", "message": "Fix shortcut reset", "committedDate": "2020-06-07T08:41:39Z", "type": "commit"}, {"oid": "4bf4b2bb2c0f7ddaa7c4cdfcb231d31e881dc8ae", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/4bf4b2bb2c0f7ddaa7c4cdfcb231d31e881dc8ae", "message": "Fix AppTheme enum names capitalization", "committedDate": "2020-06-07T08:41:40Z", "type": "commit"}, {"oid": "64af0e458b23749da4275140c7e6499e0172643f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/64af0e458b23749da4275140c7e6499e0172643f", "message": "Rewrite options DSL", "committedDate": "2020-06-07T08:41:40Z", "type": "commit"}, {"oid": "7209a8763bbcab906a205038d003eb775306e0e4", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/7209a8763bbcab906a205038d003eb775306e0e4", "message": "Remove old preferences XML configuration", "committedDate": "2020-06-07T08:41:41Z", "type": "commit"}, {"oid": "08fd12bf00c55d49f2483b137780975d88ce2afe", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/08fd12bf00c55d49f2483b137780975d88ce2afe", "message": "Code cleanup", "committedDate": "2020-06-07T08:41:42Z", "type": "commit"}, {"oid": "19f3466de1f070974a3645c1c7df42ec676d8f54", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/19f3466de1f070974a3645c1c7df42ec676d8f54", "message": "Add dependency code", "committedDate": "2020-06-07T08:41:42Z", "type": "commit"}, {"oid": "2e9e59901408d4f208373d3cb861c74dc34ab4f1", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2e9e59901408d4f208373d3cb861c74dc34ab4f1", "message": "Add on/off content for checkbox", "committedDate": "2020-06-07T08:41:43Z", "type": "commit"}, {"oid": "2e9e59901408d4f208373d3cb861c74dc34ab4f1", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2e9e59901408d4f208373d3cb861c74dc34ab4f1", "message": "Add on/off content for checkbox", "committedDate": "2020-06-07T08:41:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NTgwMg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/500#discussion_r436545802", "bodyText": "Issue found: LateinitUsage - [binder] at /src/app/src/main/java/org/jellyfin/androidtv/preferences/ui/dsl/OptionsItemMutable.kt:12:2", "author": "jellyfin-bot", "createdAt": "2020-06-08T08:51:38Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/dsl/OptionsItemMutable.kt", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.jellyfin.androidtv.preferences.ui.dsl\n+\n+import org.jellyfin.androidtv.preferences.Preference\n+import org.jellyfin.androidtv.preferences.SharedPreferenceStore\n+\n+abstract class OptionsItemMutable<T : Any> : OptionsItem {\n+\tvar title: String? = null\n+\tvar enabled: Boolean = true\n+\tvar visible: Boolean = true\n+\n+\tprotected var dependencyCheckFun: () -> Boolean = { true }\n+\tprotected lateinit var binder: OptionsBinder<T>", "originalCommit": "2e9e59901408d4f208373d3cb861c74dc34ab4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NTgxMg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/500#discussion_r436545812", "bodyText": "Issue found: LongMethod - 119/60 - [playbackCategory] at /src/app/src/main/java/org/jellyfin/androidtv/preferences/ui/category/playback.kt:14:19", "author": "jellyfin-bot", "createdAt": "2020-06-08T08:51:39Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/category/playback.kt", "diffHunk": "@@ -0,0 +1,150 @@\n+package org.jellyfin.androidtv.preferences.ui.category\n+\n+import android.app.Activity\n+import android.app.AlertDialog\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.preferences.UserPreferences\n+import org.jellyfin.androidtv.preferences.enums.AudioBehavior\n+import org.jellyfin.androidtv.preferences.enums.PreferredVideoPlayer\n+import org.jellyfin.androidtv.preferences.ui.dsl.*\n+import org.jellyfin.androidtv.preferences.ui.preference.DurationSeekBarPreference\n+import org.jellyfin.androidtv.util.DeviceUtils\n+import org.jellyfin.androidtv.util.TimeUtils\n+\n+fun OptionsScreen.playbackCategory(", "originalCommit": "2e9e59901408d4f208373d3cb861c74dc34ab4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NTgxOA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/500#discussion_r436545818", "bodyText": "Issue found: StringLiteralDuplication - 3/3 - [videoPlayer] at /src/app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt:103:37", "author": "jellyfin-bot", "createdAt": "2020-06-08T08:51:40Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -11,166 +12,169 @@ import org.jellyfin.androidtv.preferences.enums.*\n  *\n  * @param context Context to get the SharedPreferences from\n  */\n-class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManager.getDefaultSharedPreferences(context)) {\n-\t/* Authentication */\n-\t/**\n-\t * Behavior for login when starting the app.\n-\t * **note**: Currently settable via user-preferences only due too custom logic\n-\t */\n-\tvar loginBehavior by enumPreference(\"login_behavior\", LoginBehavior.SHOW_LOGIN)\n-\t\tprivate set\n-\n-\t/**\n-\t * Ask for password when starting the app\n-\t */\n-\tvar passwordPromptEnabled by booleanPreference(\"pref_auto_pw_prompt\", false)\n-\n-\t/**\n-\t * Use login using pin (when set)\n-\t */\n-\tvar passwordDPadEnabled by booleanPreference(\"pref_alt_pw_entry\", false)\n-\n-\t/* Display */\n-\t/**\n-\t * Select the app theme\n-\t */\n-\tvar appTheme by enumPreference(\"app_theme\", AppTheme.Theme_Jellyfin)\n-\n-\t/**\n-\t * Enable background images while browsing\n-\t */\n-\tvar backdropEnabled by booleanPreference(\"pref_show_backdrop\", true)\n-\n-\t/**\n-\t * Preferred direction of grids, will not be used for **all** grids\n-\t */\n-\tvar gridDirection by enumPreference(\"grid_direction\", GridDirection.HORIZONTAL)\n-\n-\t/**\n-\t * Show premieres on home screen\n-\t */\n-\tvar premieresEnabled by booleanPreference(\"pref_enable_premieres\", false)\n-\n-\t/**\n-\t * Show a little notification to celebrate a set of holidays\n-\t */\n-\tvar seasonalGreetingsEnabled by booleanPreference(\"pref_enable_themes\", true)\n-\n-\t/**\n-\t * Show additional debug information\n-\t */\n-\tvar debuggingEnabled by booleanPreference(\"pref_enable_debug\", false)\n-\n-\t/* Playback - General*/\n-\t/**\n-\t * Maximum bitrate in megabit for playback. A value of 0 means \"auto\".\n-\t */\n-\tvar maxBitrate by stringPreference(\"pref_max_bitrate\", \"0\")\n-\n-\t/**\n-\t * Auto-play next item\n-\t */\n-\tvar mediaQueuingEnabled by booleanPreference(\"pref_enable_tv_queuing\", true)\n-\n-\t/**\n-\t * Enable the next up screen or not\n-\t */\n-\tvar nextUpEnabled by booleanPreference(\"next_up_enabled\", true)\n-\n-\t/**\n-\t * Next up timeout before playing next item\n-\t * Stored in milliseconds\n-\t */\n-\tvar nextUpTimeout by intPreference(\"next_up_timeout\", 1000 * 7)\n-\n-\t/**\n-\t * Duration in seconds to subtract from resume time\n-\t */\n-\tvar resumeSubtractDuration by stringPreference(\"pref_resume_preroll\", \"0\")\n-\n-\t/**\n-\t * Enable cinema mode\n-\t */\n-\tvar cinemaModeEnabled by booleanPreference(\"pref_enable_cinema_mode\", true)\n-\n-\t/* Playback - Video */\n-\t/**\n-\t * Preferred video player.\n-\t */\n-\tvar videoPlayer by enumPreference(\"video_player\", PreferredVideoPlayer.AUTO)\n-\n-\t/**\n-\t * Enable refresh rate switching when device supports it\n-\t */\n-\tvar refreshRateSwitchingEnabled by booleanPreference(\"pref_refresh_switching\", false)\n-\n-\t/**\n-\t * Send a path instead to the external player\n-\t */\n-\tvar externalVideoPlayerSendPath by booleanPreference(\"pref_send_path_external\", false)\n-\n-\t/* Playback - Audio related */\n-\t/**\n-\t * Preferred behavior for audio streaming.\n-\t */\n-\tvar audioBehaviour by enumPreference(\"audio_behavior\", AudioBehavior.DIRECT_STREAM)\n-\n-\t/**\n-\t * Enable DTS\n-\t */\n-\tvar dtsEnabled by booleanPreference(\"pref_bitstream_dts\", false)\n-\n-\t/**\n-\t * Enable AC3\n-\t */\n-\tvar ac3Enabled by booleanPreference(\"pref_bitstream_ac3\", true)\n-\n-\t/**\n-\t * Default audio delay in milliseconds for libVLC\n-\t */\n-\tvar libVLCAudioDelay by longPreference(\"libvlc_audio_delay\", 0)\n-\n-\t/* Live TV */\n-\t/**\n-\t * Open live tv when opening the app\n-\t */\n-\tvar liveTvMode by booleanPreference(\"pref_live_tv_mode\", false)\n-\n-\t/**\n-\t * Use direct play\n-\t */\n-\tvar liveTvDirectPlayEnabled by booleanPreference(\"pref_live_direct\", true)\n-\n-\t/**\n-\t * Preferred video player for live TV\n-\t */\n-\tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n-\n-\t/**\n-\t * Shortcut used for changing the audio track\n-\t */\n-\tvar shortcutAudioTrack by intPreference(\"shortcut_audio_track\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n-\n-\t/**\n-\t * Shortcut used for changing the subtitle track\n-\t */\n-\tvar shortcutSubtitleTrack by intPreference(\"shortcut_subtitle_track\", KeyEvent.KEYCODE_CAPTIONS)\n-\n-\t/* ACRA */\n-\t/**\n-\t * Enable ACRA crash reporting\n-\t */\n-\tvar acraEnabled by booleanPreference(\"acra.enable\", true)\n-\n-\t/**\n-\t * Never prompt to report crash logs\n-\t */\n-\tvar acraNoPrompt by booleanPreference(\"acra.alwaysaccept\", false)\n-\n-\t/**\n-\t * Include system logs in crash reports\n-\t */\n-\tvar acraIncludeSystemLogs by booleanPreference(\"acra.syslog.enable\", true)\n+class UserPreferences(context: Context) : SharedPreferenceStore(\n+\tsharedPreferences = PreferenceManager.getDefaultSharedPreferences(context)\n+) {\n+\tcompanion object {\n+\t\t/* Authentication */\n+\t\t/**\n+\t\t * Behavior for login when starting the app.\n+\t\t * **note**: Make sure to update the stored credentials when changing to AUTO_LOGIN\n+\t\t */\n+\t\tvar loginBehavior = Preference.enum(\"login_behavior\", LoginBehavior.SHOW_LOGIN)\n+\n+\t\t/**\n+\t\t * Ask for password when starting the app\n+\t\t */\n+\t\tvar passwordPromptEnabled = Preference.boolean(\"pref_auto_pw_prompt\", false)\n+\n+\t\t/**\n+\t\t * Use login using pin (when set)\n+\t\t */\n+\t\tvar passwordDPadEnabled = Preference.boolean(\"pref_alt_pw_entry\", false)\n+\n+\t\t/* Display */\n+\t\t/**\n+\t\t * Select the app theme\n+\t\t */\n+\t\tvar appTheme = Preference.enum(\"app_theme\", AppTheme.DARK)\n+\n+\t\t/**\n+\t\t * Enable background images while browsing\n+\t\t */\n+\t\tvar backdropEnabled = Preference.boolean(\"pref_show_backdrop\", true)\n+\n+\t\t/**\n+\t\t * Preferred direction of grids, will not be used for **all** grids\n+\t\t */\n+\t\tvar gridDirection = Preference.enum(\"grid_direction\", GridDirection.HORIZONTAL)\n+\n+\t\t/**\n+\t\t * Show premieres on home screen\n+\t\t */\n+\t\tvar premieresEnabled = Preference.boolean(\"pref_enable_premieres\", false)\n+\n+\t\t/**\n+\t\t * Show a little notification to celebrate a set of holidays\n+\t\t */\n+\t\tvar seasonalGreetingsEnabled = Preference.boolean(\"pref_enable_themes\", true)\n+\n+\t\t/**\n+\t\t * Show additional debug information\n+\t\t */\n+\t\tvar debuggingEnabled = Preference.boolean(\"pref_enable_debug\", false)\n+\n+\t\t/* Playback - General*/\n+\t\t/**\n+\t\t * Maximum bitrate in megabit for playback. A value of 0 means \"auto\".\n+\t\t */\n+\t\tvar maxBitrate = Preference.string(\"pref_max_bitrate\", \"0\")\n+\n+\t\t/**\n+\t\t * Auto-play next item\n+\t\t */\n+\t\tvar mediaQueuingEnabled = Preference.boolean(\"pref_enable_tv_queuing\", true)\n+\n+\t\t/**\n+\t\t * Enable the next up screen or not\n+\t\t */\n+\t\tvar nextUpEnabled = Preference.boolean(\"next_up_enabled\", true)\n+\n+\t\t/**\n+\t\t * Next up timeout before playing next item\n+\t\t * Stored in milliseconds\n+\t\t */\n+\t\tvar nextUpTimeout = Preference.int(\"next_up_timeout\", 1000 * 7)\n+\n+\t\t/**\n+\t\t * Duration in seconds to subtract from resume time\n+\t\t */\n+\t\tvar resumeSubtractDuration = Preference.string(\"pref_resume_preroll\", \"0\")\n+\n+\t\t/**\n+\t\t * Enable cinema mode\n+\t\t */\n+\t\tvar cinemaModeEnabled = Preference.boolean(\"pref_enable_cinema_mode\", true)\n+\n+\t\t/* Playback - Video */\n+\t\t/**\n+\t\t * Preferred video player.\n+\t\t */\n+\t\tvar videoPlayer = Preference.enum(\"video_player\", PreferredVideoPlayer.AUTO)", "originalCommit": "2e9e59901408d4f208373d3cb861c74dc34ab4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NTgyOQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/500#discussion_r436545829", "bodyText": "Issue found: StringLiteralDuplication - 3/3 - [libVLCAudioDelay] at /src/app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt:134:41", "author": "jellyfin-bot", "createdAt": "2020-06-08T08:51:41Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -11,166 +12,169 @@ import org.jellyfin.androidtv.preferences.enums.*\n  *\n  * @param context Context to get the SharedPreferences from\n  */\n-class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManager.getDefaultSharedPreferences(context)) {\n-\t/* Authentication */\n-\t/**\n-\t * Behavior for login when starting the app.\n-\t * **note**: Currently settable via user-preferences only due too custom logic\n-\t */\n-\tvar loginBehavior by enumPreference(\"login_behavior\", LoginBehavior.SHOW_LOGIN)\n-\t\tprivate set\n-\n-\t/**\n-\t * Ask for password when starting the app\n-\t */\n-\tvar passwordPromptEnabled by booleanPreference(\"pref_auto_pw_prompt\", false)\n-\n-\t/**\n-\t * Use login using pin (when set)\n-\t */\n-\tvar passwordDPadEnabled by booleanPreference(\"pref_alt_pw_entry\", false)\n-\n-\t/* Display */\n-\t/**\n-\t * Select the app theme\n-\t */\n-\tvar appTheme by enumPreference(\"app_theme\", AppTheme.Theme_Jellyfin)\n-\n-\t/**\n-\t * Enable background images while browsing\n-\t */\n-\tvar backdropEnabled by booleanPreference(\"pref_show_backdrop\", true)\n-\n-\t/**\n-\t * Preferred direction of grids, will not be used for **all** grids\n-\t */\n-\tvar gridDirection by enumPreference(\"grid_direction\", GridDirection.HORIZONTAL)\n-\n-\t/**\n-\t * Show premieres on home screen\n-\t */\n-\tvar premieresEnabled by booleanPreference(\"pref_enable_premieres\", false)\n-\n-\t/**\n-\t * Show a little notification to celebrate a set of holidays\n-\t */\n-\tvar seasonalGreetingsEnabled by booleanPreference(\"pref_enable_themes\", true)\n-\n-\t/**\n-\t * Show additional debug information\n-\t */\n-\tvar debuggingEnabled by booleanPreference(\"pref_enable_debug\", false)\n-\n-\t/* Playback - General*/\n-\t/**\n-\t * Maximum bitrate in megabit for playback. A value of 0 means \"auto\".\n-\t */\n-\tvar maxBitrate by stringPreference(\"pref_max_bitrate\", \"0\")\n-\n-\t/**\n-\t * Auto-play next item\n-\t */\n-\tvar mediaQueuingEnabled by booleanPreference(\"pref_enable_tv_queuing\", true)\n-\n-\t/**\n-\t * Enable the next up screen or not\n-\t */\n-\tvar nextUpEnabled by booleanPreference(\"next_up_enabled\", true)\n-\n-\t/**\n-\t * Next up timeout before playing next item\n-\t * Stored in milliseconds\n-\t */\n-\tvar nextUpTimeout by intPreference(\"next_up_timeout\", 1000 * 7)\n-\n-\t/**\n-\t * Duration in seconds to subtract from resume time\n-\t */\n-\tvar resumeSubtractDuration by stringPreference(\"pref_resume_preroll\", \"0\")\n-\n-\t/**\n-\t * Enable cinema mode\n-\t */\n-\tvar cinemaModeEnabled by booleanPreference(\"pref_enable_cinema_mode\", true)\n-\n-\t/* Playback - Video */\n-\t/**\n-\t * Preferred video player.\n-\t */\n-\tvar videoPlayer by enumPreference(\"video_player\", PreferredVideoPlayer.AUTO)\n-\n-\t/**\n-\t * Enable refresh rate switching when device supports it\n-\t */\n-\tvar refreshRateSwitchingEnabled by booleanPreference(\"pref_refresh_switching\", false)\n-\n-\t/**\n-\t * Send a path instead to the external player\n-\t */\n-\tvar externalVideoPlayerSendPath by booleanPreference(\"pref_send_path_external\", false)\n-\n-\t/* Playback - Audio related */\n-\t/**\n-\t * Preferred behavior for audio streaming.\n-\t */\n-\tvar audioBehaviour by enumPreference(\"audio_behavior\", AudioBehavior.DIRECT_STREAM)\n-\n-\t/**\n-\t * Enable DTS\n-\t */\n-\tvar dtsEnabled by booleanPreference(\"pref_bitstream_dts\", false)\n-\n-\t/**\n-\t * Enable AC3\n-\t */\n-\tvar ac3Enabled by booleanPreference(\"pref_bitstream_ac3\", true)\n-\n-\t/**\n-\t * Default audio delay in milliseconds for libVLC\n-\t */\n-\tvar libVLCAudioDelay by longPreference(\"libvlc_audio_delay\", 0)\n-\n-\t/* Live TV */\n-\t/**\n-\t * Open live tv when opening the app\n-\t */\n-\tvar liveTvMode by booleanPreference(\"pref_live_tv_mode\", false)\n-\n-\t/**\n-\t * Use direct play\n-\t */\n-\tvar liveTvDirectPlayEnabled by booleanPreference(\"pref_live_direct\", true)\n-\n-\t/**\n-\t * Preferred video player for live TV\n-\t */\n-\tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n-\n-\t/**\n-\t * Shortcut used for changing the audio track\n-\t */\n-\tvar shortcutAudioTrack by intPreference(\"shortcut_audio_track\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n-\n-\t/**\n-\t * Shortcut used for changing the subtitle track\n-\t */\n-\tvar shortcutSubtitleTrack by intPreference(\"shortcut_subtitle_track\", KeyEvent.KEYCODE_CAPTIONS)\n-\n-\t/* ACRA */\n-\t/**\n-\t * Enable ACRA crash reporting\n-\t */\n-\tvar acraEnabled by booleanPreference(\"acra.enable\", true)\n-\n-\t/**\n-\t * Never prompt to report crash logs\n-\t */\n-\tvar acraNoPrompt by booleanPreference(\"acra.alwaysaccept\", false)\n-\n-\t/**\n-\t * Include system logs in crash reports\n-\t */\n-\tvar acraIncludeSystemLogs by booleanPreference(\"acra.syslog.enable\", true)\n+class UserPreferences(context: Context) : SharedPreferenceStore(\n+\tsharedPreferences = PreferenceManager.getDefaultSharedPreferences(context)\n+) {\n+\tcompanion object {\n+\t\t/* Authentication */\n+\t\t/**\n+\t\t * Behavior for login when starting the app.\n+\t\t * **note**: Make sure to update the stored credentials when changing to AUTO_LOGIN\n+\t\t */\n+\t\tvar loginBehavior = Preference.enum(\"login_behavior\", LoginBehavior.SHOW_LOGIN)\n+\n+\t\t/**\n+\t\t * Ask for password when starting the app\n+\t\t */\n+\t\tvar passwordPromptEnabled = Preference.boolean(\"pref_auto_pw_prompt\", false)\n+\n+\t\t/**\n+\t\t * Use login using pin (when set)\n+\t\t */\n+\t\tvar passwordDPadEnabled = Preference.boolean(\"pref_alt_pw_entry\", false)\n+\n+\t\t/* Display */\n+\t\t/**\n+\t\t * Select the app theme\n+\t\t */\n+\t\tvar appTheme = Preference.enum(\"app_theme\", AppTheme.DARK)\n+\n+\t\t/**\n+\t\t * Enable background images while browsing\n+\t\t */\n+\t\tvar backdropEnabled = Preference.boolean(\"pref_show_backdrop\", true)\n+\n+\t\t/**\n+\t\t * Preferred direction of grids, will not be used for **all** grids\n+\t\t */\n+\t\tvar gridDirection = Preference.enum(\"grid_direction\", GridDirection.HORIZONTAL)\n+\n+\t\t/**\n+\t\t * Show premieres on home screen\n+\t\t */\n+\t\tvar premieresEnabled = Preference.boolean(\"pref_enable_premieres\", false)\n+\n+\t\t/**\n+\t\t * Show a little notification to celebrate a set of holidays\n+\t\t */\n+\t\tvar seasonalGreetingsEnabled = Preference.boolean(\"pref_enable_themes\", true)\n+\n+\t\t/**\n+\t\t * Show additional debug information\n+\t\t */\n+\t\tvar debuggingEnabled = Preference.boolean(\"pref_enable_debug\", false)\n+\n+\t\t/* Playback - General*/\n+\t\t/**\n+\t\t * Maximum bitrate in megabit for playback. A value of 0 means \"auto\".\n+\t\t */\n+\t\tvar maxBitrate = Preference.string(\"pref_max_bitrate\", \"0\")\n+\n+\t\t/**\n+\t\t * Auto-play next item\n+\t\t */\n+\t\tvar mediaQueuingEnabled = Preference.boolean(\"pref_enable_tv_queuing\", true)\n+\n+\t\t/**\n+\t\t * Enable the next up screen or not\n+\t\t */\n+\t\tvar nextUpEnabled = Preference.boolean(\"next_up_enabled\", true)\n+\n+\t\t/**\n+\t\t * Next up timeout before playing next item\n+\t\t * Stored in milliseconds\n+\t\t */\n+\t\tvar nextUpTimeout = Preference.int(\"next_up_timeout\", 1000 * 7)\n+\n+\t\t/**\n+\t\t * Duration in seconds to subtract from resume time\n+\t\t */\n+\t\tvar resumeSubtractDuration = Preference.string(\"pref_resume_preroll\", \"0\")\n+\n+\t\t/**\n+\t\t * Enable cinema mode\n+\t\t */\n+\t\tvar cinemaModeEnabled = Preference.boolean(\"pref_enable_cinema_mode\", true)\n+\n+\t\t/* Playback - Video */\n+\t\t/**\n+\t\t * Preferred video player.\n+\t\t */\n+\t\tvar videoPlayer = Preference.enum(\"video_player\", PreferredVideoPlayer.AUTO)\n+\n+\t\t/**\n+\t\t * Enable refresh rate switching when device supports it\n+\t\t */\n+\t\tvar refreshRateSwitchingEnabled = Preference.boolean(\"pref_refresh_switching\", false)\n+\n+\t\t/**\n+\t\t * Send a path instead to the external player\n+\t\t */\n+\t\tvar externalVideoPlayerSendPath = Preference.boolean(\"pref_send_path_external\", false)\n+\n+\t\t/* Playback - Audio related */\n+\t\t/**\n+\t\t * Preferred behavior for audio streaming.\n+\t\t */\n+\t\tvar audioBehaviour = Preference.enum(\"audio_behavior\", AudioBehavior.DIRECT_STREAM)\n+\n+\t\t/**\n+\t\t * Enable DTS\n+\t\t */\n+\t\tvar dtsEnabled = Preference.boolean(\"pref_bitstream_dts\", false)\n+\n+\t\t/**\n+\t\t * Enable AC3\n+\t\t */\n+\t\tvar ac3Enabled = Preference.boolean(\"pref_bitstream_ac3\", true)\n+\n+\t\t/**\n+\t\t * Default audio delay in milliseconds for libVLC\n+\t\t */\n+\t\tvar libVLCAudioDelay = Preference.int(\"libvlc_audio_delay\", 0)", "originalCommit": "2e9e59901408d4f208373d3cb861c74dc34ab4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}