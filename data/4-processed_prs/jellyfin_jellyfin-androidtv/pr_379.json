{"pr_number": 379, "pr_title": "Replace leanback details fragment with custom implementation", "pr_createdAt": "2020-03-06T18:40:22Z", "pr_url": "https://github.com/jellyfin/jellyfin-androidtv/pull/379", "timeline": [{"oid": "543e72621339d1e427e748ee9991ced01606c730", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/543e72621339d1e427e748ee9991ced01606c730", "message": "Replace leanback details fragment with custom implementation", "committedDate": "2020-03-07T10:20:30Z", "type": "forcePushed"}, {"oid": "7103e2d8bfa0953931e8f8452017c0ec98551103", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/7103e2d8bfa0953931e8f8452017c0ec98551103", "message": "Replace leanback details fragment with custom implementation", "committedDate": "2020-03-07T13:55:56Z", "type": "forcePushed"}, {"oid": "4d566b31bd9dc278f54205d2c2afc8dc16679be0", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/4d566b31bd9dc278f54205d2c2afc8dc16679be0", "message": "Replace leanback details fragment with custom implementation", "committedDate": "2020-03-10T21:02:35Z", "type": "commit"}, {"oid": "4d566b31bd9dc278f54205d2c2afc8dc16679be0", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/4d566b31bd9dc278f54205d2c2afc8dc16679be0", "message": "Replace leanback details fragment with custom implementation", "committedDate": "2020-03-10T21:02:35Z", "type": "forcePushed"}, {"oid": "b16055bb8c45983e12ad2d72e199579ed273584b", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/b16055bb8c45983e12ad2d72e199579ed273584b", "message": "Convert actions to LiveData", "committedDate": "2020-03-13T12:34:16Z", "type": "forcePushed"}, {"oid": "d9bce59d52135ef1c707ae593c91110ca5e3614f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d9bce59d52135ef1c707ae593c91110ca5e3614f", "message": "Convert actions to LiveData", "committedDate": "2020-03-13T12:54:41Z", "type": "commit"}, {"oid": "d9bce59d52135ef1c707ae593c91110ca5e3614f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d9bce59d52135ef1c707ae593c91110ca5e3614f", "message": "Convert actions to LiveData", "committedDate": "2020-03-13T12:54:41Z", "type": "forcePushed"}, {"oid": "d20d60396080c9a0245be090f5756fbb9dd22d74", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d20d60396080c9a0245be090f5756fbb9dd22d74", "message": "Misc fixes\n\n- Interfaces for action\n- fixed ugly casting for actions\n- random cleanup", "committedDate": "2020-03-13T13:10:16Z", "type": "commit"}, {"oid": "9e6fdc48362329d965a6801ab57458d47c2e37dc", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/9e6fdc48362329d965a6801ab57458d47c2e37dc", "message": "Fix duplicate actions", "committedDate": "2020-03-14T20:02:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwOTE2MQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/379#discussion_r392709161", "bodyText": "We probably should decide on one image handling library before we ship this", "author": "AndreasGB", "createdAt": "2020-03-15T20:24:23Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -52,17 +68,41 @@ class DetailsDescriptionPresenter : Presenter() {\n \t\tval textStreamValue: TextView = view.details_description_streams_text_value\n \t}\n \n-\toverride fun onCreateViewHolder(parent: ViewGroup): ViewHolder {\n+\toverride fun createRowViewHolder(parent: ViewGroup): ViewHolder {\n \t\tval view = LayoutInflater\n \t\t\t.from(parent.context)\n \t\t\t.inflate(R.layout.row_details_description, parent, false)\n \n \t\treturn ViewHolder(view)\n \t}\n \n-\toverride fun onBindViewHolder(viewHolder: Presenter.ViewHolder, item: Any) {\n+\toverride fun onBindRowViewHolder(viewHolder: RowPresenter.ViewHolder, row: Any) {\n \t\tviewHolder as ViewHolder\n-\t\titem as BaseItem\n+\t\trow as DetailsOverviewRow\n+\t\tval item = row.item\n+\n+\t\t// banner\n+\t\t//todo hide banner view when none found, support multiple banners\n+\t\titem.images.backdrops.firstOrNull()?.let {\n+\t\t\t// Android doesn't crop automatically but Glide does\n+\t\t\t// Picasso can also do this but doesn't read the XML attributes of the target view for it\n+\t\t\t// so the way Glide does it is preferred to avoid duplicate settings\n+\t\t\tGlide.with(viewHolder.view.context).load(it.url).into(viewHolder.banner)", "originalCommit": "9e6fdc48362329d965a6801ab57458d47c2e37dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MDE3Mw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/379#discussion_r395890173", "bodyText": "I made a separate issue for this.", "author": "nielsvanvelzen", "createdAt": "2020-03-20T21:07:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwOTE2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxMDk1Mw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/379#discussion_r392710953", "bodyText": "Should this be changed on unbind?", "author": "AndreasGB", "createdAt": "2020-03-15T20:45:14Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ActionAdapter.kt", "diffHunk": "@@ -1,86 +1,74 @@\n package org.jellyfin.androidtv.details.actions\n \n+import android.content.res.ColorStateList\n+import android.os.Build\n import android.view.LayoutInflater\n import android.view.View\n import android.view.ViewGroup\n import android.widget.Button\n-import androidx.leanback.widget.Action\n-import androidx.leanback.widget.ObjectAdapter\n-import androidx.leanback.widget.Presenter\n+import androidx.lifecycle.Lifecycle\n+import androidx.lifecycle.LifecycleOwner\n+import androidx.lifecycle.LifecycleRegistry\n+import androidx.lifecycle.Observer\n+import androidx.recyclerview.widget.RecyclerView\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n import org.jellyfin.androidtv.R\n \n-class ActionAdapter : ObjectAdapter(ActionPresenter()) {\n-\tprivate val actions = arrayListOf<Action>()\n-\tprivate var visibleActions = emptyList<Action>()\n+class ActionAdapter() {\n+\tfun createViewHolder(parent: ViewGroup): ActionViewHolder {\n+\t\tval view = LayoutInflater\n+\t\t\t.from(parent.context)\n+\t\t\t.inflate(R.layout.action, parent, false)\n \n-\tfun add(action: Action) {\n-\t\t// Add action\n-\t\tactions += action\n-\n-\t\t// Bind listener\n-\t\tif (action is BaseAction) action.onVisibilityChanged = ::commit\n+\t\treturn ActionViewHolder(view)\n \t}\n \n-\tfun commit() {\n-\t\t// Update visible actions\n-\t\tvisibleActions = actions.filter { action -> action !is BaseAction || action.isVisible }\n-\n-\t\t// Notify the actions have changed\n-\t\tnotifyChanged()\n-\t}\n-\n-\toverride fun size() = visibleActions.size\n-\toverride fun get(position: Int) = visibleActions.getOrNull(position)\n-\n-\tfun setVisibility(action: BaseAction, visible: Boolean) {\n-\t\taction.isVisible = visible\n-\n-\t\tcommit()\n-\t}\n-\n-\tprivate class ActionPresenter : Presenter() {\n-\t\toverride fun onCreateViewHolder(parent: ViewGroup): ViewHolder {\n-\t\t\tval view = LayoutInflater\n-\t\t\t\t.from(parent.context)\n-\t\t\t\t.inflate(R.layout.action, parent, false)\n-\n-\t\t\treturn ActionViewHolder(view)\n+\tfun bindViewHolder(viewHolder: ActionViewHolder, action: Action) {\n+\t\t// Visibility\n+\t\taction.visible.observe(viewHolder, Observer { visible ->\n+\t\t\tviewHolder.view.visibility = if (visible) View.VISIBLE else View.GONE\n+\t\t\tviewHolder.button.visibility = if (visible) View.VISIBLE else View.GONE\n+\t\t})\n+\n+\t\t// Icon\n+\t\taction.icon.observe(viewHolder, Observer { icon ->\n+\t\t\tviewHolder.button.setCompoundDrawablesWithIntrinsicBounds(null, icon, null, null)\n+\t\t})\n+\n+\t\t// Text\n+\t\taction.text.observe(viewHolder, Observer { text ->\n+\t\t\tviewHolder.button.text = text\n+\t\t})\n+\n+\t\t// Active state\n+\t\tif (action is ToggleableAction) {\n+\t\t\taction.active.observe(viewHolder, Observer { active ->\n+\t\t\t\tval color = viewHolder.button.resources.getColor(if (active) R.color.action_active else R.color.white)\n+\t\t\t\tviewHolder.button.setTextColor(color)\n+\t\t\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)\n+\t\t\t\t\tviewHolder.button.compoundDrawableTintList = ColorStateList.valueOf(color)\n+\t\t\t})\n \t\t}\n \n-\t\toverride fun onBindViewHolder(viewHolder: ViewHolder, action: Any) {\n-\t\t\t// Cast types\n-\t\t\taction as Action\n-\t\t\tviewHolder as ActionViewHolder\n-\n-\t\t\t// Set data\n-\t\t\tviewHolder.button.setCompoundDrawablesWithIntrinsicBounds(null, action.icon, null, null)\n-\t\t\tviewHolder.button.text = action.label1\n-\n-\t\t\tif (action is SecondariesPopupAction) {\n-\t\t\t\taction.anchor = viewHolder.button\n-\t\t\t}\n-\n-\t\t\tif (action is ToggleAction) {\n-\t\t\t\tval color = if (action.active) R.color.action_active else R.color.white\n-\n-\t\t\t\tviewHolder.button.apply {\n-\t\t\t\t\taction.icon.setTint(resources.getColor(color))\n-\t\t\t\t\tsetTextColor(resources.getColor(color))\n-\t\t\t\t}\n+\t\t// Click listener\n+\t\tviewHolder.button.setOnClickListener { view ->\n+\t\t\tGlobalScope.launch(Dispatchers.Main) {\n+\t\t\t\taction.onClick(view)\n \t\t\t}\n \t\t}\n \n-\t\toverride fun onUnbindViewHolder(viewHolder: ViewHolder) {\n-\t\t\tviewHolder as ActionViewHolder\n+\t\t// Set state so the observers initialize\n+\t\tviewHolder.lifecycle.currentState = Lifecycle.State.STARTED", "originalCommit": "9e6fdc48362329d965a6801ab57458d47c2e37dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7a471bf81b7bf93d19760d0c0d163a339cbe18f4", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/7a471bf81b7bf93d19760d0c0d163a339cbe18f4", "message": "Implement unbinding for action adapter", "committedDate": "2020-03-21T08:54:19Z", "type": "commit"}]}