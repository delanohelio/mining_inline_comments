{"pr_number": 347, "pr_title": "Remaining actions for movie details", "pr_createdAt": "2020-02-17T21:54:40Z", "pr_url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347", "timeline": [{"oid": "57f9da8e7c16ccd798cab7d59d948c368515bc4a", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/57f9da8e7c16ccd798cab7d59d948c368515bc4a", "message": "Implement DeleteAction as well as SecondaryPopupAction", "committedDate": "2020-02-17T21:20:04Z", "type": "commit"}, {"oid": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/e6dce196775e8497286458b470dbcd6b5ffd13d3", "message": "AddToQueue Action implemented + Refactoring", "committedDate": "2020-02-17T21:49:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDE0Ng==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380384146", "bodyText": "I think you meant comment AddToQueueAction", "author": "nielsvanvelzen", "createdAt": "2020-02-17T22:23:54Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -49,12 +48,17 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t(detailsRow.actionsAdapter as ActionAdapter).apply {\n \t\t\treset()\n \n-\t\t\tif (item.canResume) add(ResumeAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_resume) })\n-\n-\t\t\tadd(PlayFromBeginningAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_play) })\n-\t\t\tadd(ToggleWatchedAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_watch) })\n-\t\t\tadd(ToggleFavoriteAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_heart) })\n-\t\t\tadd(Action(0, \"More\").apply { icon = context!!.getDrawable(R.drawable.ic_more) }) // Show menu with more options\n+\t\t\tif (item.canResume) add(ResumeAction(context!!, item))\n+\t\t\tadd(PlayFromBeginningAction(context!!, item))\n+\t\t\t// TODO: Bring this back once we have a more understandable queue implementation for users\n+\t\t\t//add(ToggleWatchedAction(context!!, item))", "originalCommit": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM5MDEzNg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380390136", "bodyText": "Uh, yes", "author": "AndreasGB", "createdAt": "2020-02-17T22:51:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDE0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDI0MA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380384240", "bodyText": "This one depends on the permissions of the authenticated user", "author": "nielsvanvelzen", "createdAt": "2020-02-17T22:24:22Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -49,12 +48,17 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t(detailsRow.actionsAdapter as ActionAdapter).apply {\n \t\t\treset()\n \n-\t\t\tif (item.canResume) add(ResumeAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_resume) })\n-\n-\t\t\tadd(PlayFromBeginningAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_play) })\n-\t\t\tadd(ToggleWatchedAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_watch) })\n-\t\t\tadd(ToggleFavoriteAction(context!!, item).apply { icon = context!!.getDrawable(R.drawable.ic_heart) })\n-\t\t\tadd(Action(0, \"More\").apply { icon = context!!.getDrawable(R.drawable.ic_more) }) // Show menu with more options\n+\t\t\tif (item.canResume) add(ResumeAction(context!!, item))\n+\t\t\tadd(PlayFromBeginningAction(context!!, item))\n+\t\t\t// TODO: Bring this back once we have a more understandable queue implementation for users\n+\t\t\t//add(ToggleWatchedAction(context!!, item))\n+\t\t\tadd(ToggleFavoriteAction(context!!, item))\n+\t\t\tadd(AddToQueueAction(context!!, item))\n+\n+\t\t\t// Menu with more actions\n+\t\t\tadd(SecondariesPopupAction(context!!).apply {\n+\t\t\t\tadd(DeleteAction(context!!, item) { activity?.finish() })", "originalCommit": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDgxOA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380384818", "bodyText": "Just use Toast.makeText(context, text, length).show() instead of a util function for a one-liner.", "author": "nielsvanvelzen", "createdAt": "2020-02-17T22:27:08Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/DeleteAction.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.app.AlertDialog\n+import android.content.Context\n+import android.content.DialogInterface.BUTTON_NEGATIVE\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+import org.jellyfin.androidtv.util.DelayedMessage\n+import org.jellyfin.androidtv.util.Utils\n+import org.jellyfin.apiclient.interaction.EmptyResponse\n+\n+class DeleteAction(context: Context, private val item: BaseItem, private val onItemDeleted: () -> Unit) : BaseAction(ActionID.DELETE.id, context) {\n+\n+\tinit {\n+\t\tlabel1 = context.getString(R.string.lbl_delete)\n+\t\ticon = context.getDrawable(R.drawable.ic_trash)\n+\t}\n+\n+\toverride fun onClick() {\n+\t\tAlertDialog.Builder(context).apply {\n+\t\t\tsetIcon(R.drawable.ic_trash)\n+\t\t\tsetTitle(R.string.lbl_really_delete_item_title)\n+\t\t\tsetMessage(context.getString(R.string.lbl_item_deletion_warning, item.title))\n+\t\t\tsetPositiveButton(R.string.lbl_delete) { _, _ ->\n+\t\t\t\tval msg = DelayedMessage(context, 150)\n+\t\t\t\tTvApp.getApplication().apiClient.DeleteItem(item.id, object : EmptyResponse() {\n+\t\t\t\t\toverride fun onResponse() {\n+\t\t\t\t\t\tmsg.Cancel()\n+\t\t\t\t\t\tUtils.showToast(context, context.getString(R.string.lbl_item_deleted, item.title))\n+\t\t\t\t\t\tTvApp.getApplication().lastDeletedItemId = item.id\n+\t\t\t\t\t\tonItemDeleted()\n+\t\t\t\t\t}\n+\n+\t\t\t\t\toverride fun onError(ex: Exception) {\n+\t\t\t\t\t\tmsg.Cancel()\n+\t\t\t\t\t\tTvApp.getApplication().logger.ErrorException(\"Failed to delete item %s\", ex, item.title)\n+\t\t\t\t\t\tUtils.showToast(context, ex.localizedMessage)\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t}\n+\t\t\tsetNegativeButton(context.getText(R.string.lbl_cancel)) { dialog, which -> Utils.showToast(context, R.string.lbl_item_not_deleted) }", "originalCommit": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDgzOQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380384839", "bodyText": "Just use Toast.makeText(context, text, length).show() instead of a util function for a one-liner.", "author": "nielsvanvelzen", "createdAt": "2020-02-17T22:27:15Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/DeleteAction.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.app.AlertDialog\n+import android.content.Context\n+import android.content.DialogInterface.BUTTON_NEGATIVE\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+import org.jellyfin.androidtv.util.DelayedMessage\n+import org.jellyfin.androidtv.util.Utils\n+import org.jellyfin.apiclient.interaction.EmptyResponse\n+\n+class DeleteAction(context: Context, private val item: BaseItem, private val onItemDeleted: () -> Unit) : BaseAction(ActionID.DELETE.id, context) {\n+\n+\tinit {\n+\t\tlabel1 = context.getString(R.string.lbl_delete)\n+\t\ticon = context.getDrawable(R.drawable.ic_trash)\n+\t}\n+\n+\toverride fun onClick() {\n+\t\tAlertDialog.Builder(context).apply {\n+\t\t\tsetIcon(R.drawable.ic_trash)\n+\t\t\tsetTitle(R.string.lbl_really_delete_item_title)\n+\t\t\tsetMessage(context.getString(R.string.lbl_item_deletion_warning, item.title))\n+\t\t\tsetPositiveButton(R.string.lbl_delete) { _, _ ->\n+\t\t\t\tval msg = DelayedMessage(context, 150)\n+\t\t\t\tTvApp.getApplication().apiClient.DeleteItem(item.id, object : EmptyResponse() {\n+\t\t\t\t\toverride fun onResponse() {\n+\t\t\t\t\t\tmsg.Cancel()\n+\t\t\t\t\t\tUtils.showToast(context, context.getString(R.string.lbl_item_deleted, item.title))", "originalCommit": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDkwOA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380384908", "bodyText": "Just use Toast.makeText(context, text, length).show() instead of a util function for a one-liner.", "author": "nielsvanvelzen", "createdAt": "2020-02-17T22:27:32Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/DeleteAction.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.app.AlertDialog\n+import android.content.Context\n+import android.content.DialogInterface.BUTTON_NEGATIVE\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+import org.jellyfin.androidtv.util.DelayedMessage\n+import org.jellyfin.androidtv.util.Utils\n+import org.jellyfin.apiclient.interaction.EmptyResponse\n+\n+class DeleteAction(context: Context, private val item: BaseItem, private val onItemDeleted: () -> Unit) : BaseAction(ActionID.DELETE.id, context) {\n+\n+\tinit {\n+\t\tlabel1 = context.getString(R.string.lbl_delete)\n+\t\ticon = context.getDrawable(R.drawable.ic_trash)\n+\t}\n+\n+\toverride fun onClick() {\n+\t\tAlertDialog.Builder(context).apply {\n+\t\t\tsetIcon(R.drawable.ic_trash)\n+\t\t\tsetTitle(R.string.lbl_really_delete_item_title)\n+\t\t\tsetMessage(context.getString(R.string.lbl_item_deletion_warning, item.title))\n+\t\t\tsetPositiveButton(R.string.lbl_delete) { _, _ ->\n+\t\t\t\tval msg = DelayedMessage(context, 150)\n+\t\t\t\tTvApp.getApplication().apiClient.DeleteItem(item.id, object : EmptyResponse() {\n+\t\t\t\t\toverride fun onResponse() {\n+\t\t\t\t\t\tmsg.Cancel()\n+\t\t\t\t\t\tUtils.showToast(context, context.getString(R.string.lbl_item_deleted, item.title))\n+\t\t\t\t\t\tTvApp.getApplication().lastDeletedItemId = item.id\n+\t\t\t\t\t\tonItemDeleted()\n+\t\t\t\t\t}\n+\n+\t\t\t\t\toverride fun onError(ex: Exception) {\n+\t\t\t\t\t\tmsg.Cancel()\n+\t\t\t\t\t\tTvApp.getApplication().logger.ErrorException(\"Failed to delete item %s\", ex, item.title)\n+\t\t\t\t\t\tUtils.showToast(context, ex.localizedMessage)", "originalCommit": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDk0OA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380384948", "bodyText": "It doesn't look like this is used?", "author": "nielsvanvelzen", "createdAt": "2020-02-17T22:27:44Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/DeleteAction.kt", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.app.AlertDialog\n+import android.content.Context\n+import android.content.DialogInterface.BUTTON_NEGATIVE\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+import org.jellyfin.androidtv.util.DelayedMessage\n+import org.jellyfin.androidtv.util.Utils\n+import org.jellyfin.apiclient.interaction.EmptyResponse\n+\n+class DeleteAction(context: Context, private val item: BaseItem, private val onItemDeleted: () -> Unit) : BaseAction(ActionID.DELETE.id, context) {\n+\n+\tinit {\n+\t\tlabel1 = context.getString(R.string.lbl_delete)\n+\t\ticon = context.getDrawable(R.drawable.ic_trash)\n+\t}\n+\n+\toverride fun onClick() {\n+\t\tAlertDialog.Builder(context).apply {\n+\t\t\tsetIcon(R.drawable.ic_trash)\n+\t\t\tsetTitle(R.string.lbl_really_delete_item_title)\n+\t\t\tsetMessage(context.getString(R.string.lbl_item_deletion_warning, item.title))\n+\t\t\tsetPositiveButton(R.string.lbl_delete) { _, _ ->\n+\t\t\t\tval msg = DelayedMessage(context, 150)", "originalCommit": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4OTk0Nw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380389947", "bodyText": "You would think so, but this inherited piece of premium poetry starts itself in its constructor :D", "author": "AndreasGB", "createdAt": "2020-02-17T22:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDk0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyMjcxNw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380522717", "bodyText": "I looked at the code of DelayedMessage and now I understand it. wtf", "author": "nielsvanvelzen", "createdAt": "2020-02-18T08:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NDk0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NTMyMg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380385322", "bodyText": "Can we add icons to the menu too?", "author": "nielsvanvelzen", "createdAt": "2020-02-17T22:29:19Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/SecondariesPopupAction.kt", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.view.View\n+import android.widget.PopupMenu\n+import org.jellyfin.androidtv.R\n+\n+class SecondariesPopupAction(context: Context) : BaseAction(ActionID.SECONDARIES_ACTION_POPUP.id, context) {\n+\tprivate val containedActions = mutableListOf<BaseAction>()\n+\tvar anchor: View? = null\n+\n+\tinit {\n+\t\tlabel1 = context.getString(R.string.lbl_more_actions)\n+\t\ticon = context.getDrawable(R.drawable.ic_more)\n+\t}\n+\n+\tfun add(toAdd: BaseAction) {\n+\t\tcontainedActions.add(toAdd)\n+\t}\n+\n+\tfun remove(toRemove: BaseAction) {\n+\t\tcontainedActions.remove(toRemove)\n+\t}\n+\n+\toverride fun onClick() {\n+\t\tval menu = PopupMenu(context, anchor)\n+\t\tcontainedActions.forEach { action ->\n+\t\t\tval item = menu.menu.add(action.label1)", "originalCommit": "e6dce196775e8497286458b470dbcd6b5ffd13d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM5NDcyMg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380394722", "bodyText": "Not easily it seems, there is this, but it crashes weirdly although I am using it just as in the example.", "author": "AndreasGB", "createdAt": "2020-02-17T23:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NTMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyNDE5MQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380524191", "bodyText": "The .add method returns a Menuitem instance. This class contains a setIcon function", "author": "nielsvanvelzen", "createdAt": "2020-02-18T08:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NTMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYyODY0Ng==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380628646", "bodyText": "Ah my bad, did not link the correct answer. I used the .icon property, but icons are only shown in certain cases normally if you don't force them on. I meant to link to this answer instead of just the question, and this one fails with some weird crash during measuring (iirc)", "author": "AndreasGB", "createdAt": "2020-02-18T11:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NTMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYyOTg0NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380629845", "bodyText": "Hmm weird, let's leave them out for now", "author": "nielsvanvelzen", "createdAt": "2020-02-18T12:02:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4NTMyMg=="}], "type": "inlineReview"}, {"oid": "f9729308e4d608690055f4b9ed87e2c592fe2ffa", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f9729308e4d608690055f4b9ed87e2c592fe2ffa", "message": "Address Code Review", "committedDate": "2020-02-17T23:16:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyMTI4OQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380521289", "bodyText": "This if statement should be for the DeleteAction only. I imagine you did it this way to the popup button wouldn't show when there's no items but we need to fix that in another way.\n\nExtend action with a isvisible property or something similar\nimplement it for secondariespopupaction and check if the amount if children >= 1\nWhen showing the actions, look if it's visible\nthat's it", "author": "nielsvanvelzen", "createdAt": "2020-02-18T08:32:42Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -50,15 +50,17 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \n \t\t\tif (item.canResume) add(ResumeAction(context!!, item))\n \t\t\tadd(PlayFromBeginningAction(context!!, item))\n-\t\t\t// TODO: Bring this back once we have a more understandable queue implementation for users\n-\t\t\t//add(ToggleWatchedAction(context!!, item))\n+\t\t\tadd(ToggleWatchedAction(context!!, item))\n \t\t\tadd(ToggleFavoriteAction(context!!, item))\n-\t\t\tadd(AddToQueueAction(context!!, item))\n+\t\t\t// TODO: Bring this back once we have a more understandable queue implementation for users\n+\t\t\t//add(AddToQueueAction(context!!, item))\n \n \t\t\t// Menu with more actions\n-\t\t\tadd(SecondariesPopupAction(context!!).apply {\n-\t\t\t\tadd(DeleteAction(context!!, item) { activity?.finish() })\n-\t\t\t})\n+\t\t\tif (TvApp.getApplication().currentUser.policy.enableContentDeletion) {", "originalCommit": "f9729308e4d608690055f4b9ed87e2c592fe2ffa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1346b3299b181c8a3cf823281b5430d44abe6ecc", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/1346b3299b181c8a3cf823281b5430d44abe6ecc", "message": "Add isVisible property to actions", "committedDate": "2020-02-18T12:49:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY3NDI3NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/347#discussion_r380674275", "bodyText": "containedActions.filter { it.isVisible }.forEach {", "author": "nielsvanvelzen", "createdAt": "2020-02-18T13:35:52Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/SecondariesPopupAction.kt", "diffHunk": "@@ -9,26 +9,37 @@ class SecondariesPopupAction(context: Context) : BaseAction(ActionID.SECONDARIES\n \tprivate val containedActions = mutableListOf<BaseAction>()\n \tvar anchor: View? = null\n \n+\tprivate fun recomputeVisibility() {\n+\t\tisVisible = containedActions.any { action -> action.isVisible }\n+\t}\n+\n \tinit {\n \t\tlabel1 = context.getString(R.string.lbl_more_actions)\n \t\ticon = context.getDrawable(R.drawable.ic_more)\n \t}\n \n \tfun add(toAdd: BaseAction) {\n+\t\ttoAdd.onVisibilityChanged = ::recomputeVisibility\n \t\tcontainedActions.add(toAdd)\n+\t\trecomputeVisibility()\n \t}\n \n \tfun remove(toRemove: BaseAction) {\n+\t\tif (toRemove.onVisibilityChanged == ::recomputeVisibility) toRemove.onVisibilityChanged = null\n \t\tcontainedActions.remove(toRemove)\n+\t\trecomputeVisibility()\n \t}\n \n \toverride fun onClick() {\n \t\tval menu = PopupMenu(context, anchor)\n \t\tcontainedActions.forEach { action ->", "originalCommit": "1346b3299b181c8a3cf823281b5430d44abe6ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "daf2127863a11e5a80fd805d15ac33ba9b377ddf", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/daf2127863a11e5a80fd805d15ac33ba9b377ddf", "message": "Tiny beautification", "committedDate": "2020-02-18T22:57:00Z", "type": "commit"}]}