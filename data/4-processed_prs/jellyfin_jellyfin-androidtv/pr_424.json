{"pr_number": 424, "pr_title": "Implementing EpisodeDetailsFragment", "pr_createdAt": "2020-04-09T13:52:44Z", "pr_url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424", "timeline": [{"oid": "fdcd3159e4436351d210a913e198b27e5993bb96", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/fdcd3159e4436351d210a913e198b27e5993bb96", "message": "Add unadapted EpisodeDetailsFragment", "committedDate": "2020-04-09T13:42:32Z", "type": "commit"}, {"oid": "6616acc4e8cef8e9e6a7efc90e14bb54c9d15c02", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/6616acc4e8cef8e9e6a7efc90e14bb54c9d15c02", "message": "Make DetailsOverviewRow primary image and backdrop configurable", "committedDate": "2020-04-09T15:52:31Z", "type": "commit"}, {"oid": "68d454d76580fb0b1ebf2b103bb9d52288b7db9f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/68d454d76580fb0b1ebf2b103bb9d52288b7db9f", "message": "Adapt EpisodeDetailsFragment to new configurable DetailsOverviewRow\n\nThis is done in a second commit to make the other one cherrypickable", "committedDate": "2020-04-09T15:53:29Z", "type": "commit"}, {"oid": "87d8a00df87d69dfb8d46a1ff5c6d7660a90414f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/87d8a00df87d69dfb8d46a1ff5c6d7660a90414f", "message": "Add GoToItem Action and fix crash on clicking secondary action", "committedDate": "2020-04-09T16:29:51Z", "type": "commit"}, {"oid": "04aa60cdc15933c565c70b5c2fef4a8405095712", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/04aa60cdc15933c565c70b5c2fef4a8405095712", "message": "Refactor GoToItem Action to also accept raw IDs", "committedDate": "2020-04-09T17:23:43Z", "type": "commit"}, {"oid": "e006352aca751beb6608fa321cdc73f58fdfbe2d", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/e006352aca751beb6608fa321cdc73f58fdfbe2d", "message": "Add parent primary and backdrops to Image Collection", "committedDate": "2020-04-09T18:18:12Z", "type": "commit"}, {"oid": "4a28c832600d1748a774aaff70b89c1b30e56133", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/4a28c832600d1748a774aaff70b89c1b30e56133", "message": "Add Series and Season Actions as well as proper images to EpisodeDetailsFragment", "committedDate": "2020-04-09T18:19:12Z", "type": "commit"}, {"oid": "98492fbe54b982662ae3861018754d24616543c2", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/98492fbe54b982662ae3861018754d24616543c2", "message": "Add \"More from this Season\" + guest stars to EpisodeDetailsFragment", "committedDate": "2020-04-10T00:25:48Z", "type": "commit"}, {"oid": "a90d98ecbaa93ece327a2f0c08e2092d24e39c92", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/a90d98ecbaa93ece327a2f0c08e2092d24e39c92", "message": "Introduce Ratable Interface and use it", "committedDate": "2020-04-10T09:36:36Z", "type": "commit"}, {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "message": "Beautify DetailsOverviewRow", "committedDate": "2020-04-10T09:42:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTAzNA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695034", "bodyText": "I think we have an enum somewhere for item types that you can use.", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:09:38Z", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTE1NA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695154", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tthis.GetItemsAsync(query, object : Response<ItemsResult>() {\n          \n          \n            \n            \tGetItemsAsync(query, object : Response<ItemsResult>() {", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:10:02Z", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")\n+\tquery.startIndex = 0\n+\tquery.fields = FIELDS_REQUIRED_FOR_LIFT\n+\tquery.userId = this.currentUserId\n+\n+\tthis.GetItemsAsync(query, object : Response<ItemsResult>() {", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTM2Mg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695362", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\toverride fun onError(exception: java.lang.Exception?) {\n          \n          \n            \n            \t\toverride fun onError(exception: Exception?) {\n          \n      \n    \n    \n  \n\nMaybe even\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\toverride fun onError(exception: java.lang.Exception?) {\n          \n          \n            \n            \t\toverride fun onError(exception: Exception) {", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:10:47Z", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")\n+\tquery.startIndex = 0\n+\tquery.fields = FIELDS_REQUIRED_FOR_LIFT\n+\tquery.userId = this.currentUserId\n+\n+\tthis.GetItemsAsync(query, object : Response<ItemsResult>() {\n+\t\toverride fun onResponse(response: ItemsResult?) {\n+\t\t\tcontinuation.resume(response?.items?.map {it.liftToNewFormat() as Episode }?.toList())\n+\t\t}\n+\n+\t\toverride fun onError(exception: java.lang.Exception?) {", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwNzMzOA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406707338", "bodyText": "There can be null as exception, I'll just drop the java.lang", "author": "AndreasGB", "createdAt": "2020-04-10T10:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTM2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NzA0MA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406697040", "bodyText": "Assuming this will display month & day too I'd suggest renaming \"year\" to \"premiere\" or something similar to avoid confusion.", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:16:24Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n \t\t\t\tviewHolder.year.text = item.productionYear.toString()\n \t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n \t\t\t}\n+\t\t}\n \n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {\n+\t\t\t\tval format = DateFormat.getDateFormat(context)\n+\t\t\t\tviewHolder.year.text = format.format(item.premiereDate)", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5ODU4Mw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406698583", "bodyText": "I can't post it as code suggestion because of the deleted lines but try to use the not-null assertion operator as little as possible. Same applies for the other places you made the same change.\nitem.officialRating?.let { rating -> \n    viewHolder.officialRating.text = rating\n    viewHolder.officialRating.visibility = View.VISIBLE\n} ?: run {\n    viewHolder.officialRating.visibility = View.GONE\n}", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:21:14Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n \t\t\t\tviewHolder.year.text = item.productionYear.toString()\n \t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n \t\t\t}\n+\t\t}\n \n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {\n+\t\t\t\tval format = DateFormat.getDateFormat(context)\n+\t\t\t\tviewHolder.year.text = format.format(item.premiereDate)\n+\t\t\t\tviewHolder.year.visibility = View.VISIBLE\n+\t\t\t}\n+\t\t}\n+\n+\t\t// rating\n+\t\tif (item is Ratable) {\n \t\t\tif (item.officialRating != null) {", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwODE5NA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406708194", "bodyText": "Will do", "author": "AndreasGB", "createdAt": "2020-04-10T10:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5ODU4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDUwOQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406700509", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class GoToItemAction(private val context: Context, label: String,private val targetId: String) : Action {\n          \n          \n            \n            class GoToItemAction(private val context: Context, label: String, private val targetId: String) : Action {", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:27:42Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/GoToItemAction.kt", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.view.View\n+import androidx.lifecycle.MutableLiveData\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.details.DetailsActivity\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+\n+class GoToItemAction(private val context: Context, label: String,private val targetId: String) : Action {", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDk5Nw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406700997", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n          \n          \n            \n            \t\t\t\tepisode.seasonId?.let {\n          \n          \n            \n            \t\t\t\t\tGoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it)\n          \n          \n            \n            \t\t\t\t},", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:29:18Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTA4OQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406701089", "bodyText": "Same as the previous one, use multiple lines", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:29:38Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjEzOQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702139", "bodyText": "Hardcoded string", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:33:17Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702157", "bodyText": "Hardcoded string", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:33:22Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjUxOA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702518", "bodyText": "Btw, why not the full cast?", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:34:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzQ4Mg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406703482", "bodyText": "That was the behaviour of the old screen, I don't have a preference on it", "author": "AndreasGB", "createdAt": "2020-04-10T10:37:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwNjE4Ng==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406706186", "bodyText": "Let's just show the full cast", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwOTY3Mw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406709673", "bodyText": "Hm, it seems like we're not sent a cast, but I now implemented it in a way that guest stars are in one row if there are any, and remaining cast in a second one", "author": "AndreasGB", "createdAt": "2020-04-10T10:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcxMDg1NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406710855", "bodyText": "Turns out we would be if it were implemented. Changed it to have two rows, one for Guest Stars and one for the normal cast without them.", "author": "AndreasGB", "createdAt": "2020-04-10T11:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE3Mg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702172", "bodyText": "Hardcoded string", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:33:27Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjIwMg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702202", "bodyText": "Hardcoded string", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:33:32Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }\n+\tprivate val streamInfoRow by lazy { createListRow(\"Media info\", episode.mediaInfo.streams, InfoCardPresenter()) }", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjg5MA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702890", "bodyText": "I'd rather have chapters as second row (after the details). Users already went to the season/series to open this episode so seeing other episodes isn't that important for them.", "author": "nielsvanvelzen", "createdAt": "2020-04-10T10:35:34Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }\n+\tprivate val streamInfoRow by lazy { createListRow(\"Media info\", episode.mediaInfo.streams, InfoCardPresenter()) }\n+\n+\toverride suspend fun onCreateAdapters(rowSelector: ClassPresenterSelector, rowAdapter: ArrayObjectAdapter) {\n+\t\tsuper.onCreateAdapters(rowSelector, rowAdapter)\n+\n+\t\tloadAdditionalInformation()\n+\n+\t\t// Add rows\n+\t\trowAdapter.apply {\n+\t\t\tadd(detailRow)\n+\t\t\taddIfNotEmpty(moreFromThisSeason)\n+\t\t\taddIfNotEmpty(guestStars)\n+\t\t\taddIfNotEmpty(chaptersRow)", "originalCommit": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f813ea50d2af40c40b91609f2468776c786164b6", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f813ea50d2af40c40b91609f2468776c786164b6", "message": "Address Code Review", "committedDate": "2020-04-10T11:05:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyMzAwNA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406723004", "bodyText": "You can use some of the ?.let magic here too", "author": "nielsvanvelzen", "createdAt": "2020-04-10T11:47:50Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n-\t\t\t\tviewHolder.year.text = item.productionYear.toString()\n-\t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n+\t\t\t\tviewHolder.premiereDate.text = item.productionYear.toString()\n+\t\t\t\tviewHolder.premiereDate.visibility = View.VISIBLE\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {", "originalCommit": "f813ea50d2af40c40b91609f2468776c786164b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyMzAzMg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406723032", "bodyText": "You can use some of the ?.let magic here too", "author": "nielsvanvelzen", "createdAt": "2020-04-10T11:47:55Z", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {", "originalCommit": "f813ea50d2af40c40b91609f2468776c786164b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d9a04e5a89d5cb6df25158ae19663588870b89db", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d9a04e5a89d5cb6df25158ae19663588870b89db", "message": "Unified Cast row in EpisodeDetailsFragment", "committedDate": "2020-04-10T11:48:27Z", "type": "commit"}, {"oid": "c3cbda9e975df090fc01cd396678edf61f051ce1", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/c3cbda9e975df090fc01cd396678edf61f051ce1", "message": "Address code review", "committedDate": "2020-04-10T11:59:41Z", "type": "commit"}]}