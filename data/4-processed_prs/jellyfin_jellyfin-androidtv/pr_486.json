{"pr_number": 486, "pr_title": "add settings to remap tv remote buttons", "pr_createdAt": "2020-05-27T20:15:37Z", "pr_url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486", "timeline": [{"oid": "2a12c25ce7a4c537614ed0f600446e69c555d2d7", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2a12c25ce7a4c537614ed0f600446e69c555d2d7", "message": "add settings to remap tv remote buttons, implemented are audio language button and subtitle language button\nalso add logic for handling audio language button", "committedDate": "2020-05-27T20:10:41Z", "type": "commit"}, {"oid": "b7dd9988c5a2db05bd2d39945ce1ea154bb5279f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/b7dd9988c5a2db05bd2d39945ce1ea154bb5279f", "message": "fix wrong indent", "committedDate": "2020-05-27T20:15:48Z", "type": "commit"}, {"oid": "6b534d9c24b6f2fc2b51d89fe986fc93e989ae8f", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/6b534d9c24b6f2fc2b51d89fe986fc93e989ae8f", "message": "add missing code documentation", "committedDate": "2020-05-27T20:26:43Z", "type": "commit"}, {"oid": "418106128e2d1daf53a4ebad88479946198e56da", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/418106128e2d1daf53a4ebad88479946198e56da", "message": "add punctuation to KDoc", "committedDate": "2020-05-28T07:53:17Z", "type": "commit"}, {"oid": "f1bf9a219835d67562ae54ef58cc718f4cc1da57", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f1bf9a219835d67562ae54ef58cc718f4cc1da57", "message": "improve button remapping preference dialog", "committedDate": "2020-05-30T12:57:50Z", "type": "commit"}, {"oid": "2f12bb4b241913d4087d50c1be19c0ad777ac021", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2f12bb4b241913d4087d50c1be19c0ad777ac021", "message": "cleanup + comments", "committedDate": "2020-05-30T12:59:39Z", "type": "commit"}, {"oid": "3b68e0a946f6ca10fc45919cf79f16983f37909e", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/3b68e0a946f6ca10fc45919cf79f16983f37909e", "message": "use SummaryProvider for ButtonRemapPreference and auto close dialog on Save/Reset click", "committedDate": "2020-05-30T14:12:55Z", "type": "commit"}, {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/54a76e555a3a15695e58202759da7c74cbc5231d", "message": "use syntactic binding and fix complex code", "committedDate": "2020-05-30T15:15:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NzEzMA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431997130", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Default keycode for audio language switch button on a tv remote\n          \n          \n            \n            \t * Shortcut used for changing the audio track", "author": "nielsvanvelzen", "createdAt": "2020-05-28T17:16:38Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote", "originalCommit": "418106128e2d1daf53a4ebad88479946198e56da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NzIxNQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431997215", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Default keycode for subtitle language switch button on a tv remote\n          \n          \n            \n            \t * Shortcut used for changing the subtitle track", "author": "nielsvanvelzen", "createdAt": "2020-05-28T17:16:50Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote\n+\t */\n+\tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n+\n+\t/**\n+\t * Default keycode for subtitle language switch button on a tv remote", "originalCommit": "418106128e2d1daf53a4ebad88479946198e56da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5ODA4NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431998085", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n          \n          \n            \n            \tvar shortcutAudioTrack by intPreference(\"shortcut_audio_track\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)", "author": "nielsvanvelzen", "createdAt": "2020-05-28T17:18:19Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote\n+\t */\n+\tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)", "originalCommit": "418106128e2d1daf53a4ebad88479946198e56da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5ODQ2MQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431998461", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tvar subtitleLanguageButtonKeyCode by intPreference(\"subtitle_language_button_keycode\", KeyEvent.KEYCODE_CAPTIONS)\n          \n          \n            \n            \tvar shortcutSubtitleTrack by intPreference(\"shortcut_subtitle_track\", KeyEvent.KEYCODE_CAPTIONS)", "author": "nielsvanvelzen", "createdAt": "2020-05-28T17:18:59Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote\n+\t */\n+\tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n+\n+\t/**\n+\t * Default keycode for subtitle language switch button on a tv remote\n+\t */\n+\tvar subtitleLanguageButtonKeyCode by intPreference(\"subtitle_language_button_keycode\", KeyEvent.KEYCODE_CAPTIONS)", "originalCommit": "418106128e2d1daf53a4ebad88479946198e56da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwMTA4MQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432001081", "bodyText": "You should use strings, Android Studio should be able to do that for you.\n(also applies for the other strings in this file)", "author": "nielsvanvelzen", "createdAt": "2020-05-28T17:23:16Z", "path": "app/src/main/res/xml/preferences.xml", "diffHunk": "@@ -156,6 +156,25 @@\n             android:title=\"@string/lbl_direct_stream_live\" />\n     </PreferenceCategory>\n \n+    <PreferenceCategory\n+        android:key=\"button_remapping\"\n+        android:title=\"Button Remapping\">", "originalCommit": "418106128e2d1daf53a4ebad88479946198e56da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDU2OA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432864568", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n          \n          \n            \n            \t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n          \n          \n            \n            \t\t\tKeyEvent.KEYCODE_ENTER\n          \n          \n            \n            \t\t)\n          \n      \n    \n    \n  \n\nAdded enter button (otherwise the buttons can't be used) and add the closing parenthese on a separate line", "author": "nielsvanvelzen", "createdAt": "2020-05-30T15:38:48Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDY0Mw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432864643", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n          \n          \n            \n            \t\t\tcontainer, false)\n          \n          \n            \n            \t\treturn view\n          \n          \n            \n            \t\treturn styledInflater.inflate(R.layout.button_remap_preference, container, false)", "author": "nielsvanvelzen", "createdAt": "2020-05-30T15:39:47Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n+\t\t\tcontainer, false)\n+\t\treturn view", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODA5Ng==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878096", "bodyText": "Use a more clear name like \"fragment\"", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:48:43Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/UserPreferencesFragment.kt", "diffHunk": "@@ -28,6 +22,16 @@ class UserPreferencesFragment : LeanbackSettingsFragmentCompat() {\n \t\tstartPreferenceFragment(InnerUserPreferencesFragment())\n \t}\n \n+\toverride fun onPreferenceDisplayDialog(caller: PreferenceFragmentCompat, pref: Preference?): Boolean {\n+\t\tif (pref is ButtonRemapPreference) {\n+\t\t\tval f = ButtonRemapDialogFragment.newInstance(pref.key)", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODEzNQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878135", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n          \n          \n            \n            \t\treturn a!!.getInt(index, -1)\n          \n          \n            \n            \toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n          \n          \n            \n            \t\treturn a.getInt(index, -1)", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:49:15Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODE2OQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878169", "bodyText": "Should use a string resource", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:49:39Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+}\n+\n+class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\treturn provideSummary(preference.getKeyCode())\n+\t}\n+\n+\tfun provideSummary(keyCode: Int): CharSequence {\n+\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n+\t\t} else {\n+\t\t\tkeyCodeString = \"Unknown ($keyCodeString)\"", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODI3NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878275", "bodyText": "We don't prefix our property names with m. We try to stick to the official Kotlin Coding Conventions as possible.", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:50:49Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODMyNQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878325", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tval preference = preference\n          \n      \n    \n    \n  \n\nNo need for this", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:51:45Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODM2Mg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878362", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n          \n          \n            \n            \t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n          \n          \n            \n            \toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:52:16Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODM5NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878395", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tval theme = R.style.PreferenceThemeOverlayLeanback\n          \n          \n            \n            \t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n          \n          \n            \n            \t\tval styledContext = ContextThemeWrapper(activity, R.style.PreferenceThemeOverlayLeanback)", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:52:30Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODQ3NA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878474", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfun newInstance(key: String?): ButtonRemapDialogFragment {\n          \n          \n            \n            \t\tfun newInstance(key: String): ButtonRemapDialogFragment {", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:53:35Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n+\t\t\tcontainer, false)\n+\t\treturn view\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(mDialogTitle)) {\n+\t\t\tdecor_title.text = mDialogTitle\n+\t\t}\n+\t\tif (!TextUtils.isEmpty(mDialogMessage)) {\n+\t\t\tmessage.visibility = View.VISIBLE\n+\t\t\tmessage.text = mDialogMessage\n+\t\t}\n+\n+\t\tbuttonSave.setOnClickListener { _ ->\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonSave.isEnabled = false\n+\t\tbuttonSave.setOnKeyListener(mCheckKeys)\n+\n+\t\tbuttonReset.setOnClickListener { _ ->\n+\t\t\t// TODO: refactor this once the new preference workflow is here\n+\t\t\twhen (preference.key) {\n+\t\t\t\t\"audio_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK\n+\t\t\t\t\"subtitle_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_CAPTIONS\n+\t\t\t}\n+\n+\t\t\tsetKeyCodeText()\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonReset.setOnKeyListener(mCheckKeys)\n+\t\tbuttonReset.requestFocus()\n+\n+\t\tsetKeyCodeText()\n+\t}\n+\n+\tprivate fun setKeyCodeText() {\n+\t\ttextViewKeyCode.text = ButtonRemapSummaryProvider.instance!!.provideSummary(mKeyCode)\n+\t}\n+\n+\tcompanion object {\n+\t\tprivate const val SAVE_STATE_TITLE = \"ButtonRemapDialog.title\"\n+\t\tprivate const val SAVE_STATE_MESSAGE = \"ButtonRemapDialog.message\"\n+\t\tprivate const val SAVE_STATE_KEYCODE = \"ButtonRemapDialog.keycode\"\n+\n+\t\t/**\n+\t\t * Creates a new ButtonRemapDialogFragment instance.\n+\t\t *\n+\t\t * @param key the preference key\n+\t\t * @return the new ButtonRemapDialogFragment instance\n+\t\t */\n+\t\tfun newInstance(key: String?): ButtonRemapDialogFragment {", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODUyMA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878520", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tval args = Bundle(1)\n          \n          \n            \n            \t\t\targs.putString(ARG_KEY, key)\n          \n          \n            \n            \t\t\tval fragment = ButtonRemapDialogFragment()\n          \n          \n            \n            \t\t\tfragment.arguments = args\n          \n          \n            \n            \t\t\treturn fragment\n          \n          \n            \n            \t\t\treturn ButtonRemapDialogFragment().apply {\n          \n          \n            \n            \t\t\t\targuments = Bundle().apply {\n          \n          \n            \n            \t\t\t\t\tputString(ARG_KEY, key)\n          \n          \n            \n            \t\t\t\t}\n          \n          \n            \n            \t\t\t}", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:54:30Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n+\t\t\tcontainer, false)\n+\t\treturn view\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(mDialogTitle)) {\n+\t\t\tdecor_title.text = mDialogTitle\n+\t\t}\n+\t\tif (!TextUtils.isEmpty(mDialogMessage)) {\n+\t\t\tmessage.visibility = View.VISIBLE\n+\t\t\tmessage.text = mDialogMessage\n+\t\t}\n+\n+\t\tbuttonSave.setOnClickListener { _ ->\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonSave.isEnabled = false\n+\t\tbuttonSave.setOnKeyListener(mCheckKeys)\n+\n+\t\tbuttonReset.setOnClickListener { _ ->\n+\t\t\t// TODO: refactor this once the new preference workflow is here\n+\t\t\twhen (preference.key) {\n+\t\t\t\t\"audio_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK\n+\t\t\t\t\"subtitle_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_CAPTIONS\n+\t\t\t}\n+\n+\t\t\tsetKeyCodeText()\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonReset.setOnKeyListener(mCheckKeys)\n+\t\tbuttonReset.requestFocus()\n+\n+\t\tsetKeyCodeText()\n+\t}\n+\n+\tprivate fun setKeyCodeText() {\n+\t\ttextViewKeyCode.text = ButtonRemapSummaryProvider.instance!!.provideSummary(mKeyCode)\n+\t}\n+\n+\tcompanion object {\n+\t\tprivate const val SAVE_STATE_TITLE = \"ButtonRemapDialog.title\"\n+\t\tprivate const val SAVE_STATE_MESSAGE = \"ButtonRemapDialog.message\"\n+\t\tprivate const val SAVE_STATE_KEYCODE = \"ButtonRemapDialog.keycode\"\n+\n+\t\t/**\n+\t\t * Creates a new ButtonRemapDialogFragment instance.\n+\t\t *\n+\t\t * @param key the preference key\n+\t\t * @return the new ButtonRemapDialogFragment instance\n+\t\t */\n+\t\tfun newInstance(key: String?): ButtonRemapDialogFragment {\n+\t\t\tval args = Bundle(1)\n+\t\t\targs.putString(ARG_KEY, key)\n+\t\t\tval fragment = ButtonRemapDialogFragment()\n+\t\t\tfragment.arguments = args\n+\t\t\treturn fragment", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODYzNQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878635", "bodyText": "Make this an inner class (add it inside the ButtonRemapPreference class)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n          \n          \n            \n            private class ButtonRemapSummaryProvider() : SummaryProvider<ButtonRemapPreference> {", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:55:48Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+}\n+\n+class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODY3Mg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878672", "bodyText": "Don't use a singleton for this", "author": "nielsvanvelzen", "createdAt": "2020-05-30T18:56:29Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+}\n+\n+class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\treturn provideSummary(preference.getKeyCode())\n+\t}\n+\n+\tfun provideSummary(keyCode: Int): CharSequence {\n+\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n+\t\t} else {\n+\t\t\tkeyCodeString = \"Unknown ($keyCodeString)\"\n+\t\t}\n+\t\treturn keyCodeString\n+\t}\n+\n+\tcompanion object {", "originalCommit": "54a76e555a3a15695e58202759da7c74cbc5231d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "90744726121d9a35983e8a787fedea90edf8698d", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/90744726121d9a35983e8a787fedea90edf8698d", "message": "Apply suggestions from code review\n\nCo-authored-by: Niels van Velzen <nielsvanvelzen@users.noreply.github.com>", "committedDate": "2020-05-31T16:20:53Z", "type": "commit"}, {"oid": "d59dc5fd2bbb38fba0e76e6bb0ce92ecb05dcded", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d59dc5fd2bbb38fba0e76e6bb0ce92ecb05dcded", "message": "fix variable names, use proper naming conventions\nimprove naming of preference keys + texts\nconvert strings to resources", "committedDate": "2020-05-31T16:35:55Z", "type": "commit"}, {"oid": "de6fbf32a51307aaa061939c770913d298de53bd", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/de6fbf32a51307aaa061939c770913d298de53bd", "message": "make SummaryProvider usable from the dialog again", "committedDate": "2020-05-31T16:39:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MTU2Mw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433241563", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tfun setKeyCode(mKeyCode: Int) {\n          \n          \n            \n            \tfun setKeyCode(keyCode: Int) {", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:43:37Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MTkxNA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433241914", "bodyText": "a is really ambiguous, should be called something more clear", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:44:17Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MjA1NA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433242054", "bodyText": "Move the init block to the top of the class", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:44:32Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MzQyMQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433243421", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n          \n          \n            \n            \t\t\t\tkeyCodeString = keyCodeString\n          \n          \n            \n            \t\t\t\t\t.removePrefix(\"KEYCODE_\")\n          \n          \n            \n            \t\t\t\t\t.toLowerCase()\n          \n          \n            \n            \t\t\t\t\t.capitalize()", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:47:01Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+\tinternal class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\t\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\t\treturn provideSummary(preference.context, preference.getKeyCode())\n+\t\t}\n+\n+\t\tfun provideSummary(context: Context, keyCode: Int): CharSequence {\n+\t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MzgzNQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433243835", "bodyText": "Use string formatting for the code;\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tkeyCodeString = \"${context.getString(R.string.lbl_unknown_key)} ($keyCodeString)\"\n          \n          \n            \n            \t\t\t\tkeyCodeString = context.getString(R.string.lbl_unknown_key, keyCodeString)\n          \n      \n    \n    \n  \n\n(don't forget to update the string itself)", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:47:45Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+\tinternal class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\t\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\t\treturn provideSummary(preference.context, preference.getKeyCode())\n+\t\t}\n+\n+\t\tfun provideSummary(context: Context, keyCode: Int): CharSequence {\n+\t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n+\t\t\t} else {\n+\t\t\t\tkeyCodeString = \"${context.getString(R.string.lbl_unknown_key)} ($keyCodeString)\"", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NDYxNA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433244614", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n          \n          \n            \n            \t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n          \n          \n            \n            \t\t\tval keyCodeString = KeyEvent.keyCodeToString(keyCode)\n          \n          \n            \n            \t\t\treturn if (keyCodeString.startsWith(\"KEYCODE\")) {\n          \n      \n    \n    \n  \n\nRemove the keyCodeString =  parts within the if and else blocks. Remove the return statement after the else block.", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:49:07Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+\tinternal class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\t\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\t\treturn provideSummary(preference.context, preference.getKeyCode())\n+\t\t}\n+\n+\t\tfun provideSummary(context: Context, keyCode: Int): CharSequence {\n+\t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NTIxNQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433245215", "bodyText": "Missing a string resource", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:50:12Z", "path": "app/src/main/res/layout/button_remap_preference.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:id=\"@+id/main_frame\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?android:attr/windowBackground\"\n+    android:elevation=\"@dimen/lb_preference_decor_elevation\"\n+    android:orientation=\"vertical\"\n+    android:transitionGroup=\"false\">\n+\n+    <FrameLayout\n+        android:id=\"@+id/decor_title_container\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:background=\"?attr/defaultBrandColor\"\n+        android:elevation=\"@dimen/lb_preference_decor_title_container_elevation\"\n+        android:transitionGroup=\"false\"\n+        >\n+        <TextView\n+            android:id=\"@+id/decor_title\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            style=\"?android:attr/titleTextStyle\" />\n+    </FrameLayout>\n+\n+    <TextView\n+        android:id=\"@android:id/message\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        android:visibility=\"gone\" />\n+\n+    <TextView\n+        android:id=\"@+id/textViewKeyCode\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        />\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"horizontal\"\n+\n+            app:layout_constraintBottom_toBottomOf=\"parent\"\n+            app:layout_constraintEnd_toEndOf=\"parent\">\n+\n+            <Button\n+                android:id=\"@+id/buttonSave\"\n+                style=\"@style/Widget.AppCompat.Button.ButtonBar.AlertDialog\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_weight=\"1\"\n+                android:text=\"Save\" />", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NTI1Ng==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433245256", "bodyText": "Missing a string resource", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:50:15Z", "path": "app/src/main/res/layout/button_remap_preference.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:id=\"@+id/main_frame\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?android:attr/windowBackground\"\n+    android:elevation=\"@dimen/lb_preference_decor_elevation\"\n+    android:orientation=\"vertical\"\n+    android:transitionGroup=\"false\">\n+\n+    <FrameLayout\n+        android:id=\"@+id/decor_title_container\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:background=\"?attr/defaultBrandColor\"\n+        android:elevation=\"@dimen/lb_preference_decor_title_container_elevation\"\n+        android:transitionGroup=\"false\"\n+        >\n+        <TextView\n+            android:id=\"@+id/decor_title\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            style=\"?android:attr/titleTextStyle\" />\n+    </FrameLayout>\n+\n+    <TextView\n+        android:id=\"@android:id/message\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        android:visibility=\"gone\" />\n+\n+    <TextView\n+        android:id=\"@+id/textViewKeyCode\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        />\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"horizontal\"\n+\n+            app:layout_constraintBottom_toBottomOf=\"parent\"\n+            app:layout_constraintEnd_toEndOf=\"parent\">\n+\n+            <Button\n+                android:id=\"@+id/buttonSave\"\n+                style=\"@style/Widget.AppCompat.Button.ButtonBar.AlertDialog\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_weight=\"1\"\n+                android:text=\"Save\" />\n+\n+            <Button\n+                android:id=\"@+id/buttonReset\"\n+                style=\"@style/Widget.AppCompat.Button.ButtonBar.AlertDialog\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_weight=\"1\"\n+                android:text=\"Reset\" />", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NjE1OA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433246158", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode\n          \n          \n            \n            \t\t\trequireView().buttonSave.isEnabled = this.keyCode != originalKeyCode", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:52:00Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var dialogTitle: CharSequence? = null\n+\tprivate var dialogMessage: CharSequence? = null\n+\tprivate var keyCode: Int = 0\n+\tprivate var originalKeyCode: Int = 0\n+\tprivate var ignoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n+\t\t\tKeyEvent.KEYCODE_ENTER\n+\t\t)\n+\tprivate var checkKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (ignoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tthis.keyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0Njg0MA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433246840", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (!TextUtils.isEmpty(dialogTitle)) {\n          \n          \n            \n            \t\tif (dialogTitle.isNotBlank()) {", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:53:10Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var dialogTitle: CharSequence? = null\n+\tprivate var dialogMessage: CharSequence? = null\n+\tprivate var keyCode: Int = 0\n+\tprivate var originalKeyCode: Int = 0\n+\tprivate var ignoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n+\t\t\tKeyEvent.KEYCODE_ENTER\n+\t\t)\n+\tprivate var checkKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (ignoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tthis.keyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tdialogTitle = preference.dialogTitle\n+\t\t\tdialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tdialogTitle = preference.getDialogTitle()\n+\t\t\t\tdialogMessage = preference.getDialogMessage()\n+\t\t\t\tkeyCode = (preference as ButtonRemapPreference).getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tdialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tdialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tkeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\toriginalKeyCode = keyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, dialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, dialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, keyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {\n+\t\tval styledContext = ContextThemeWrapper(activity, R.style.PreferenceThemeOverlayLeanback)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\treturn styledInflater.inflate(R.layout.button_remap_preference, container, false)\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(dialogTitle)) {", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NjkwNw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433246907", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (!TextUtils.isEmpty(dialogMessage)) {\n          \n          \n            \n            \t\tif (dialogMessage.isNotBlank()) {", "author": "nielsvanvelzen", "createdAt": "2020-06-01T13:53:16Z", "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var dialogTitle: CharSequence? = null\n+\tprivate var dialogMessage: CharSequence? = null\n+\tprivate var keyCode: Int = 0\n+\tprivate var originalKeyCode: Int = 0\n+\tprivate var ignoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n+\t\t\tKeyEvent.KEYCODE_ENTER\n+\t\t)\n+\tprivate var checkKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (ignoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tthis.keyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tdialogTitle = preference.dialogTitle\n+\t\t\tdialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tdialogTitle = preference.getDialogTitle()\n+\t\t\t\tdialogMessage = preference.getDialogMessage()\n+\t\t\t\tkeyCode = (preference as ButtonRemapPreference).getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tdialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tdialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tkeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\toriginalKeyCode = keyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, dialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, dialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, keyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {\n+\t\tval styledContext = ContextThemeWrapper(activity, R.style.PreferenceThemeOverlayLeanback)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\treturn styledInflater.inflate(R.layout.button_remap_preference, container, false)\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(dialogTitle)) {\n+\t\t\tdecor_title.text = dialogTitle\n+\t\t}\n+\t\tif (!TextUtils.isEmpty(dialogMessage)) {", "originalCommit": "de6fbf32a51307aaa061939c770913d298de53bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3383f9bd4809b5957521dda55161ea68301299b3", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/3383f9bd4809b5957521dda55161ea68301299b3", "message": "Apply suggestions from code review\n\nCo-authored-by: Niels van Velzen <nielsvanvelzen@users.noreply.github.com>", "committedDate": "2020-06-01T14:19:23Z", "type": "commit"}, {"oid": "1ecc55e4b28ff58909eb7aa7e288c56956d7a6bf", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/1ecc55e4b28ff58909eb7aa7e288c56956d7a6bf", "message": "make more strings use resources\ncode cleanup", "committedDate": "2020-06-01T14:37:23Z", "type": "commit"}, {"oid": "95c9faee1b465269dc586fe6c4f5580cd75c4be2", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/95c9faee1b465269dc586fe6c4f5580cd75c4be2", "message": "make ButtonRemapSummaryProvider capitalize each word again", "committedDate": "2020-06-01T19:37:31Z", "type": "commit"}]}