{"pr_number": 251, "pr_title": "Player overlay redesign", "pr_createdAt": "2020-01-03T18:29:23Z", "pr_url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251", "timeline": [{"oid": "e4cc64200ef7fc3d14ebd1678f8979586cdd57e5", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/e4cc64200ef7fc3d14ebd1678f8979586cdd57e5", "message": "Initial migration to Leanback PlaybackSupportFragment", "committedDate": "2020-01-03T12:52:15Z", "type": "commit"}, {"oid": "b816dd77a07067c004bba9247c2ec82d43e5e302", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/b816dd77a07067c004bba9247c2ec82d43e5e302", "message": "Add state change listener, Add seeking", "committedDate": "2020-01-03T17:48:29Z", "type": "commit"}, {"oid": "8c78c82c3e742f79f92ccb8e79ed1176149fdd7b", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/8c78c82c3e742f79f92ccb8e79ed1176149fdd7b", "message": "Set play button states appropriately", "committedDate": "2020-01-03T18:28:31Z", "type": "commit"}, {"oid": "0c8e217f5d60c0bbd659fac873c39010e0ec1e3d", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/0c8e217f5d60c0bbd659fac873c39010e0ec1e3d", "message": "Add support for custom actions", "committedDate": "2020-01-04T15:00:36Z", "type": "commit"}, {"oid": "de7fab20b6afd8c660b874e7a392e9f96ea3af6e", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/de7fab20b6afd8c660b874e7a392e9f96ea3af6e", "message": "Move subtitle action to primary row", "committedDate": "2020-01-04T15:00:57Z", "type": "commit"}, {"oid": "395064ea7113775d387492811083c0a5049bcfb2", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/395064ea7113775d387492811083c0a5049bcfb2", "message": "Add custom language select action", "committedDate": "2020-01-04T15:40:48Z", "type": "commit"}, {"oid": "b71f9db517087ac62b37dcf7082b1edc890f2e2c", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/b71f9db517087ac62b37dcf7082b1edc890f2e2c", "message": "Refactor structure", "committedDate": "2020-01-04T16:07:50Z", "type": "commit"}, {"oid": "53eaa593c0806a11de378b5fc87ab17a6b1df3d9", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/53eaa593c0806a11de378b5fc87ab17a6b1df3d9", "message": "Add audio track switching from custom action", "committedDate": "2020-01-04T16:36:18Z", "type": "commit"}, {"oid": "d4988e9ab63c519a82a8d0a47f2ca6fdd0b87ae3", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d4988e9ab63c519a82a8d0a47f2ca6fdd0b87ae3", "message": "Add functionality to custom closed captioning action", "committedDate": "2020-01-04T20:51:44Z", "type": "commit"}, {"oid": "71deb4648630568bf2bd82473f27fa277b6ee259", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/71deb4648630568bf2bd82473f27fa277b6ee259", "message": "Add audio adjustment action", "committedDate": "2020-01-04T21:09:38Z", "type": "commit"}, {"oid": "154ac9ea0a290f0b77976718fc948f54ab1746fb", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/154ac9ea0a290f0b77976718fc948f54ab1746fb", "message": "Add zoom adjustment action", "committedDate": "2020-01-04T21:16:31Z", "type": "commit"}, {"oid": "ee44ff57869a267f84397b6a0f9b1edc774248ae", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/ee44ff57869a267f84397b6a0f9b1edc774248ae", "message": "Cleanup and refactoring", "committedDate": "2020-01-04T21:32:19Z", "type": "commit"}, {"oid": "7450c63ed04105b8d02c6601b1cd8517cee418a8", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/7450c63ed04105b8d02c6601b1cd8517cee418a8", "message": "Cleanup and refactoring", "committedDate": "2020-01-04T21:34:07Z", "type": "commit"}, {"oid": "2ce52ab75575c9d729a9ae6ed01f48781b10e3d9", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2ce52ab75575c9d729a9ae6ed01f48781b10e3d9", "message": "Add conditions to button visibility", "committedDate": "2020-01-04T21:51:32Z", "type": "commit"}, {"oid": "650c144276266222d74337ee7ef6e75c9daf9923", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/650c144276266222d74337ee7ef6e75c9daf9923", "message": "Reverts accidental change", "committedDate": "2020-01-04T21:54:32Z", "type": "commit"}, {"oid": "1f4b19d92817ce2251d84e35e3a8b0385cf14c4b", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/1f4b19d92817ce2251d84e35e3a8b0385cf14c4b", "message": "Add previous live tv channel action", "committedDate": "2020-01-05T11:30:03Z", "type": "commit"}, {"oid": "f5f197100355075f1eab0d17009f4d642c1bfbea", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f5f197100355075f1eab0d17009f4d642c1bfbea", "message": "Intercept key events and integrate quick channel switcher", "committedDate": "2020-01-05T18:42:42Z", "type": "commit"}, {"oid": "0b93a4b0b1a1e208589cd41e8b4815ae15d44ef2", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/0b93a4b0b1a1e208589cd41e8b4815ae15d44ef2", "message": "Add quick channel changer action", "committedDate": "2020-01-05T18:47:04Z", "type": "commit"}, {"oid": "a58e6845afd93e803eca3eb28fb841c99ac95877", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/a58e6845afd93e803eca3eb28fb841c99ac95877", "message": "Add guide action", "committedDate": "2020-01-05T18:55:03Z", "type": "commit"}, {"oid": "a8984b7218dce657b855071e3df1c25ce3648009", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/a8984b7218dce657b855071e3df1c25ce3648009", "message": "Add record action", "committedDate": "2020-01-06T17:33:23Z", "type": "commit"}, {"oid": "12eb56672c029d59a8d237de07ce1cdca15ffa5b", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/12eb56672c029d59a8d237de07ce1cdca15ffa5b", "message": "Replace zoom icon with more matching aspect ratio icon", "committedDate": "2020-01-06T17:40:07Z", "type": "commit"}, {"oid": "f1f1d01568074fd1bc64a0d46bd58552174b9425", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f1f1d01568074fd1bc64a0d46bd58552174b9425", "message": "Add temporary banner and description to overlay", "committedDate": "2020-01-06T19:56:15Z", "type": "commit"}, {"oid": "cd4118d9b7035a5da5b532a58fefebec119c51f6", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/cd4118d9b7035a5da5b532a58fefebec119c51f6", "message": "Remove Logo and full description for now", "committedDate": "2020-01-07T19:07:46Z", "type": "commit"}, {"oid": "ed01855a66309d1092b86a45e007aea0b2ff1422", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/ed01855a66309d1092b86a45e007aea0b2ff1422", "message": "Begin cleanup of old overlay", "committedDate": "2020-01-08T17:38:15Z", "type": "commit"}, {"oid": "1ff16bee98aee28fa9aa9e842720a1733f3dd94d", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/1ff16bee98aee28fa9aa9e842720a1733f3dd94d", "message": "Fix quick channel changer layout", "committedDate": "2020-01-10T13:12:01Z", "type": "commit"}, {"oid": "37b64b350c6ba05db408eabdb9a82344e5f24340", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/37b64b350c6ba05db408eabdb9a82344e5f24340", "message": "Add chapter action", "committedDate": "2020-01-10T13:28:51Z", "type": "commit"}, {"oid": "2e199b6068b30bc61110eed4bf5c10e3d9a81f91", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2e199b6068b30bc61110eed4bf5c10e3d9a81f91", "message": "Fix inconsistent fading of overlays", "committedDate": "2020-01-10T13:56:02Z", "type": "commit"}, {"oid": "2ada7b65a8f752781f0ad421caec99155128d9d2", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2ada7b65a8f752781f0ad421caec99155128d9d2", "message": "Merge branch 'master' into player-overlay-redesign", "committedDate": "2020-01-10T14:26:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4NTgzOQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365385839", "bodyText": "I think the createPopMenu function which accepts an Activity instance can be removed now", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:06:49Z", "path": "app/src/main/java/org/jellyfin/androidtv/util/Utils.java", "diffHunk": "@@ -206,6 +206,10 @@ public static PopupMenu createPopupMenu(Activity activity, View view, int gravit\n         return new PopupMenu(activity, view, gravity);\n     }\n \n+    public static PopupMenu createPopupMenu(Context context, View view, int gravity) {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4NzM3OA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365387378", "bodyText": "A lot of actions have the exact same code with only the name and icon changed. Wouldn't it be better to create an IconAction which accepts the icon as parameter in the constructor? This way you can re-use that class for all simple actions.\nMaybe even add it to the CustomAction class so you don't even need to extend it.", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:10:41Z", "path": "app/src/main/java/org/jellyfin/androidtv/playback/overlay/actions/AdjustAudioDelayAction.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package org.jellyfin.androidtv.playback.overlay.actions;\n+\n+import android.content.Context;\n+\n+import org.jellyfin.androidtv.R;\n+import org.jellyfin.androidtv.playback.overlay.CustomPlaybackTransportControlGlue;\n+\n+public class AdjustAudioDelayAction extends CustomAction {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4NzkyNg==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365387926", "bodyText": "(addition to the previous suggestion for the action classes) adding a second icon parameter to the (to-be-made) constructor could trigger the active/inactive behavior. When the second icon is null it will always use the first one.", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:12:10Z", "path": "app/src/main/java/org/jellyfin/androidtv/playback/overlay/actions/RecordAction.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jellyfin.androidtv.playback.overlay.actions;\n+\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+\n+import org.jellyfin.androidtv.R;\n+import org.jellyfin.androidtv.playback.overlay.CustomPlaybackTransportControlGlue;\n+\n+public class RecordAction extends CustomAction {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Mjc1Ng==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365452756", "bodyText": "Good point, but as you can see, I check which type of action is clicked in the onCustomActionClicked method in the CustomPlaybackTransportControlGlue class. But maybe I can instead use some sort of enum (eg. ACTION_SUBTITLES) which I pass in the IconAction object on initialization which I can later check against.", "author": "Florianisme", "createdAt": "2020-01-10T22:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4NzkyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4ODM4NA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365388384", "bodyText": "I don't think I saw this constructor use in any other place. I'd suggest moving the super call to the other constructor.", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:13:21Z", "path": "app/src/main/java/org/jellyfin/androidtv/playback/overlay/actions/CustomAction.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.jellyfin.androidtv.playback.overlay.actions;\n+\n+\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.view.View;\n+\n+import androidx.leanback.widget.PlaybackControlsRow;\n+\n+import org.jellyfin.androidtv.playback.overlay.CustomPlaybackTransportControlGlue;\n+\n+public abstract class CustomAction extends PlaybackControlsRow.MultiAction {\n+\n+    private Context context;\n+    private CustomPlaybackTransportControlGlue customPlaybackTransportControlGlue;\n+\n+    public CustomAction(Context context, CustomPlaybackTransportControlGlue customPlaybackTransportControlGlue) {\n+        this(0);\n+        this.context = context;\n+        this.customPlaybackTransportControlGlue = customPlaybackTransportControlGlue;\n+    }\n+\n+    private CustomAction(int id) {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5MTI1OA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365391258", "bodyText": "I don't really like how this one class is responsible for all click handlers, I'd rather see them added to their respective action class.", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:20:14Z", "path": "app/src/main/java/org/jellyfin/androidtv/playback/overlay/CustomActionClickedHandler.java", "diffHunk": "@@ -0,0 +1,147 @@\n+package org.jellyfin.androidtv.playback.overlay;\n+\n+import android.content.Context;\n+import android.view.Gravity;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.widget.PopupMenu;\n+\n+import org.jellyfin.androidtv.R;\n+import org.jellyfin.androidtv.TvApp;\n+import org.jellyfin.androidtv.livetv.TvManager;\n+import org.jellyfin.androidtv.model.compat.SubtitleStreamInfo;\n+import org.jellyfin.androidtv.playback.CustomPlaybackOverlayFragment;\n+import org.jellyfin.androidtv.playback.PlaybackController;\n+import org.jellyfin.androidtv.playback.VideoManager;\n+import org.jellyfin.androidtv.ui.AudioDelayPopup;\n+import org.jellyfin.androidtv.ui.ValueChangedListener;\n+import org.jellyfin.androidtv.util.Utils;\n+import org.jellyfin.apiclient.model.entities.MediaStream;\n+\n+import java.util.List;\n+\n+public class CustomActionClickedHandler {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5MjkxOA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365392918", "bodyText": "See my previous comment on the way these handlers are implemented. Would be better if you could just do action.onClicked(); or something like that", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:24:09Z", "path": "app/src/main/java/org/jellyfin/androidtv/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -0,0 +1,239 @@\n+package org.jellyfin.androidtv.playback.overlay;\n+\n+import android.content.Context;\n+import android.view.View;\n+\n+import androidx.leanback.media.PlaybackTransportControlGlue;\n+import androidx.leanback.widget.Action;\n+import androidx.leanback.widget.ArrayObjectAdapter;\n+import androidx.leanback.widget.PlaybackControlsRow;\n+\n+import org.jellyfin.androidtv.playback.PlaybackController;\n+import org.jellyfin.androidtv.playback.overlay.actions.AdjustAudioDelayAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.ChannelBarChannelAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.ChapterAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.ClosedCaptionsAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.GuideAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.PreviousLiveTvChannelAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.RecordAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.SelectAudioAction;\n+import org.jellyfin.androidtv.playback.overlay.actions.ZoomAction;\n+\n+public class CustomPlaybackTransportControlGlue extends PlaybackTransportControlGlue {\n+\n+    // Normal playback actions\n+    private PlaybackControlsRow.PlayPauseAction playPauseAction;\n+    private PlaybackControlsRow.RewindAction rewindAction;\n+    private PlaybackControlsRow.FastForwardAction fastForwardAction;\n+    private PlaybackControlsRow.SkipNextAction skipNextAction;\n+    private SelectAudioAction selectAudioAction;\n+    private ClosedCaptionsAction closedCaptionsAction;\n+    private AdjustAudioDelayAction adjustAudioDelayAction;\n+    private ZoomAction zoomAction;\n+    private ChapterAction chapterAction;\n+\n+    // TV actions\n+    private PreviousLiveTvChannelAction previousLiveTvChannelAction;\n+    private ChannelBarChannelAction channelBarChannelAction;\n+    private GuideAction guideAction;\n+    private RecordAction recordAction;\n+\n+    private final VideoPlayerAdapter playerAdapter;\n+    private final LeanbackOverlayFragment leanbackOverlayFragment;\n+    private final CustomActionClickedHandler customActionClickedHandler;\n+    private ArrayObjectAdapter primaryActionsAdapter;\n+    private ArrayObjectAdapter secondaryActionsAdapter;\n+\n+    CustomPlaybackTransportControlGlue(Context context, VideoPlayerAdapter playerAdapter, PlaybackController playbackController, LeanbackOverlayFragment leanbackOverlayFragment) {\n+        super(context, playerAdapter);\n+        this.playerAdapter = playerAdapter;\n+        this.leanbackOverlayFragment = leanbackOverlayFragment;\n+        customActionClickedHandler = new CustomActionClickedHandler(playbackController, leanbackOverlayFragment, context);\n+        initActions(context);\n+    }\n+\n+    private void initActions(Context context) {\n+        playPauseAction = new PlaybackControlsRow.PlayPauseAction(context);\n+        rewindAction = new PlaybackControlsRow.RewindAction(context);\n+        fastForwardAction = new PlaybackControlsRow.FastForwardAction(context);\n+        skipNextAction = new PlaybackControlsRow.SkipNextAction(context);\n+        selectAudioAction = new SelectAudioAction(context, this);\n+        closedCaptionsAction = new ClosedCaptionsAction(context, this);\n+        adjustAudioDelayAction = new AdjustAudioDelayAction(context, this);\n+        zoomAction = new ZoomAction(context, this);\n+        chapterAction = new ChapterAction(context, this);\n+\n+        previousLiveTvChannelAction = new PreviousLiveTvChannelAction(context, this);\n+        channelBarChannelAction = new ChannelBarChannelAction(context, this);\n+        guideAction = new GuideAction(context, this);\n+        recordAction = new RecordAction(context, this);\n+    }\n+\n+    @Override\n+    protected void onCreatePrimaryActions(ArrayObjectAdapter primaryActionsAdapter) {\n+        this.primaryActionsAdapter = primaryActionsAdapter;\n+\n+        primaryActionsAdapter.add(playPauseAction);\n+\n+        if (canSeek()) {\n+            primaryActionsAdapter.add(rewindAction);\n+            primaryActionsAdapter.add(fastForwardAction);\n+        }\n+\n+        if (hasSubs()) {\n+            primaryActionsAdapter.add(closedCaptionsAction);\n+        }\n+\n+        if (hasMultiAudio()) {\n+            primaryActionsAdapter.add(selectAudioAction);\n+        }\n+\n+        if (isLiveTv()) {\n+            primaryActionsAdapter.add(channelBarChannelAction);\n+            primaryActionsAdapter.add(guideAction);\n+        }\n+    }\n+\n+    @Override\n+    protected void onCreateSecondaryActions(ArrayObjectAdapter secondaryActionsAdapter) {\n+        this.secondaryActionsAdapter = secondaryActionsAdapter;\n+\n+        if (isLiveTv()) {\n+            secondaryActionsAdapter.add(previousLiveTvChannelAction);\n+            if (canRecordLiveTv()) {\n+                secondaryActionsAdapter.add(recordAction);\n+                recordingStateChanged();\n+            }\n+        }\n+\n+        if (hasNextItem()) {\n+            secondaryActionsAdapter.add(skipNextAction);\n+        }\n+\n+\n+        if (hasChapters()) {\n+            secondaryActionsAdapter.add(chapterAction);\n+        }\n+\n+        if (!isNativeMode()) {\n+            secondaryActionsAdapter.add(adjustAudioDelayAction);\n+        } else {\n+            secondaryActionsAdapter.add(zoomAction);\n+        }\n+    }\n+\n+    @Override\n+    public void onActionClicked(Action action) {\n+        if (action == playPauseAction) {\n+            if (playPauseAction.getIndex() == PlaybackControlsRow.PlayPauseAction.INDEX_PAUSE) {\n+                getPlayerAdapter().pause();\n+            } else if (playPauseAction.getIndex() == PlaybackControlsRow.PlayPauseAction.INDEX_PLAY) {\n+                getPlayerAdapter().play();\n+            }\n+            playPauseAction.nextIndex();\n+        } else if (action == rewindAction) {\n+            getPlayerAdapter().rewind();\n+        } else if (action == fastForwardAction) {\n+            getPlayerAdapter().fastForward();\n+        } else if (action == skipNextAction) {\n+            getPlayerAdapter().next();\n+        }\n+        notifyActionChanged(action);\n+    }\n+\n+    public void onCustomActionClicked(Action action, View view) {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MzQyNw==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365453427", "bodyText": "Good point!\nBut then I will have to keep an action class for every action I add.", "author": "Florianisme", "createdAt": "2020-01-10T22:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5MjkxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5Mzc1NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365393755", "bodyText": "I'm not really sure what this class does. Is it providing the possible \"seek positions\" to the player? And if so, does this mean that whatever I watch it can only seek to 30 positions? Which would mean that if I watched a movie of 30 hours I would skip one hour every time?", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:26:13Z", "path": "app/src/main/java/org/jellyfin/androidtv/playback/overlay/CustomSeekProvider.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package org.jellyfin.androidtv.playback.overlay;\n+\n+import androidx.leanback.widget.PlaybackSeekDataProvider;\n+\n+public class CustomSeekProvider extends PlaybackSeekDataProvider {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMTg2OQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365431869", "bodyText": "I just confirmed this myself while testing. I think adding stepts for every x seconds would be better.", "author": "nielsvanvelzen", "createdAt": "2020-01-10T21:11:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5Mzc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Mzg1Ng==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365453856", "bodyText": "Yes, I also think I saw a code example of a quick seeker, which means the faster you click (or the longer you hold to the right), the faster you seek", "author": "Florianisme", "createdAt": "2020-01-10T22:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5Mzc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MDE0OA==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r367570148", "bodyText": "Can you update this one so it works better for movies / long episodes? 30 steps is enough for a 30 minute show but it isn't for a 3 hour movie. The behavior you mentioned you saw in an example would be awesome to have", "author": "nielsvanvelzen", "createdAt": "2020-01-16T18:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5Mzc1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5NDE2NQ==", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/251#discussion_r365394165", "bodyText": "Typo in live", "author": "nielsvanvelzen", "createdAt": "2020-01-10T19:27:15Z", "path": "app/src/main/java/org/jellyfin/androidtv/playback/overlay/VideoPlayerAdapter.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.jellyfin.androidtv.playback.overlay;\n+\n+import androidx.leanback.media.PlayerAdapter;\n+\n+import org.jellyfin.androidtv.TvApp;\n+import org.jellyfin.androidtv.playback.CustomPlaybackOverlayFragment;\n+import org.jellyfin.androidtv.playback.PlaybackController;\n+import org.jellyfin.androidtv.util.DeviceUtils;\n+import org.jellyfin.androidtv.util.apiclient.StreamHelper;\n+import org.jellyfin.apiclient.model.dto.BaseItemDto;\n+import org.jellyfin.apiclient.model.dto.ChapterInfoDto;\n+\n+import java.util.List;\n+\n+public class VideoPlayerAdapter extends PlayerAdapter {\n+\n+    private final PlaybackController playbackController;\n+    private CustomPlaybackOverlayFragment customPlaybackOverlayFragment;\n+\n+    VideoPlayerAdapter(PlaybackController playbackController) {\n+        this.playbackController = playbackController;\n+    }\n+\n+    @Override\n+    public void play() {\n+        playbackController.play(playbackController.getCurrentPosition());\n+    }\n+\n+    @Override\n+    public void pause() {\n+        playbackController.pause();\n+    }\n+\n+    @Override\n+    public void rewind() {\n+        playbackController.skip(-30000);\n+        updateCurrentPosition();\n+    }\n+\n+    @Override\n+    public void fastForward() {\n+        playbackController.skip(30000);\n+        updateCurrentPosition();\n+    }\n+\n+    @Override\n+    public void seekTo(long positionInMs) {\n+        playbackController.seek(positionInMs);\n+        updateCurrentPosition();\n+    }\n+\n+    @Override\n+    public void next() {\n+        playbackController.next();\n+    }\n+\n+    @Override\n+    public long getDuration() {\n+        return getCurrentlyPlayingItem().getRunTimeTicks() != null ?\n+                getCurrentlyPlayingItem().getRunTimeTicks() / 10000 : -1;\n+    }\n+\n+    @Override\n+    public long getCurrentPosition() {\n+        return playbackController.getCurrentPosition();\n+    }\n+\n+    @Override\n+    public boolean isPlaying() {\n+        return playbackController.isPlaying();\n+    }\n+\n+    @Override\n+    public long getBufferedPosition() {\n+        return getDuration();\n+    }\n+\n+    void updateCurrentPosition() {\n+        getCallback().onCurrentPositionChanged(this);\n+    }\n+\n+    void updatePlayState() {\n+        getCallback().onPlayStateChanged(this);\n+    }\n+\n+    boolean hasSubs() {\n+        return StreamHelper.getSubtitleStreams(playbackController.getCurrentMediaSource()).size() > 0;\n+    }\n+\n+    boolean hasMultiAudio() {\n+        return StreamHelper.getAudioStreams(playbackController.getCurrentMediaSource()).size() > 1;\n+    }\n+\n+    boolean hasNextItem() {\n+        return playbackController.hasNextItem();\n+    }\n+\n+    boolean isNativeMode() {\n+        return playbackController.isNativeMode();\n+    }\n+\n+    boolean canSeek() {\n+        return !DeviceUtils.isFireTv() && playbackController.canSeek();\n+    }\n+\n+    boolean isLiveTv() {\n+        return playbackController.isLiveTv();\n+    }\n+\n+    void setMasterOverlayFragment(CustomPlaybackOverlayFragment customPlaybackOverlayFragment) {\n+        this.customPlaybackOverlayFragment = customPlaybackOverlayFragment;\n+    }\n+\n+    CustomPlaybackOverlayFragment getMasterOverlayFragment() {\n+        return customPlaybackOverlayFragment;\n+    }\n+\n+    boolean canRecordLieTv() {", "originalCommit": "2ada7b65a8f752781f0ad421caec99155128d9d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5368e97333dee60a38916ab08796e07e7b47fc70", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/5368e97333dee60a38916ab08796e07e7b47fc70", "message": "Initial fix of requested changes", "committedDate": "2020-01-10T22:57:16Z", "type": "commit"}, {"oid": "944960540a445c6c61f3d52c3796d21c271b14c2", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/944960540a445c6c61f3d52c3796d21c271b14c2", "message": "Fix crash when exiting playback view", "committedDate": "2020-02-01T13:02:39Z", "type": "commit"}, {"oid": "a11141afe7c4a373b111d87fdbe90cd195f1c752", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/a11141afe7c4a373b111d87fdbe90cd195f1c752", "message": "Set fixed seek duration of 30 seconds", "committedDate": "2020-02-01T20:09:55Z", "type": "commit"}, {"oid": "0bfe099638200fea15f705f908204f69de2f2366", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/0bfe099638200fea15f705f908204f69de2f2366", "message": "Extract click handling to each action class", "committedDate": "2020-02-01T20:34:01Z", "type": "commit"}, {"oid": "1a044394e810ca56b56f3f08fc3a14466c9d9343", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/1a044394e810ca56b56f3f08fc3a14466c9d9343", "message": "Fix crash when exiting playback view", "committedDate": "2020-02-01T20:34:29Z", "type": "commit"}, {"oid": "a232313d8bd4727b594b5765d83c0266dd6f26c0", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/a232313d8bd4727b594b5765d83c0266dd6f26c0", "message": "Prevent seeking in live tv mode", "committedDate": "2020-02-01T21:00:41Z", "type": "commit"}, {"oid": "2c2d18545c87f7024195872036b0c902ef573517", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2c2d18545c87f7024195872036b0c902ef573517", "message": "Keep chapter selection focused when pressing left on first item", "committedDate": "2020-02-01T21:46:33Z", "type": "commit"}, {"oid": "b8415e645851c4730eaf3f5c6d08fc1e71790ac6", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/b8415e645851c4730eaf3f5c6d08fc1e71790ac6", "message": "Merge remote-tracking branch 'upstream/master' into player-overlay-redesign", "committedDate": "2020-02-05T16:23:14Z", "type": "commit"}, {"oid": "f8fe612bdb2279244ec813f31106f30580f079b3", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f8fe612bdb2279244ec813f31106f30580f079b3", "message": "Merge remote-tracking branch 'upstream/master' into player-overlay-redesign", "committedDate": "2020-02-05T16:44:30Z", "type": "commit"}, {"oid": "e83788b4905b6d32d4713e5c4de8918db9d5f73c", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/e83788b4905b6d32d4713e5c4de8918db9d5f73c", "message": "Fix play/pause out of sync error", "committedDate": "2020-02-05T18:24:15Z", "type": "commit"}, {"oid": "c0b21764b0b2e7ccdb770cec0265df503728c9fd", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/c0b21764b0b2e7ccdb770cec0265df503728c9fd", "message": "Fix wrong last position when media player is closed and progress still reported", "committedDate": "2020-02-05T18:37:33Z", "type": "commit"}, {"oid": "0cc9430412f78c3e8a9fed46362a288771b58900", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/0cc9430412f78c3e8a9fed46362a288771b58900", "message": "Fix quick channel switcher not showing when pressing DPAD_DOWN", "committedDate": "2020-02-07T19:30:35Z", "type": "commit"}, {"oid": "21a3e3395665c827500c7c31879c0dbcbefa893c", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/21a3e3395665c827500c7c31879c0dbcbefa893c", "message": "Merge remote-tracking branch 'upstream/master' into player-overlay-redesign\n\n# Conflicts:\n#\tapp/src/main/java/org/jellyfin/androidtv/playback/VideoManager.java", "committedDate": "2020-02-07T19:35:56Z", "type": "commit"}, {"oid": "b356904cb754079c1891b358fa2bd7221c713646", "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/b356904cb754079c1891b358fa2bd7221c713646", "message": "Merge remote-tracking branch 'upstream/master' into player-overlay-redesign\n\n# Conflicts:\n#\tapp/src/main/java/org/jellyfin/androidtv/playback/CustomPlaybackOverlayFragment.java", "committedDate": "2020-02-09T20:43:04Z", "type": "commit"}]}