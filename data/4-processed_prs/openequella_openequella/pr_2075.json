{"pr_number": 2075, "pr_title": "Created new OEQThumb component", "pr_createdAt": "2020-07-20T00:04:23Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2075", "timeline": [{"oid": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "url": "https://github.com/openequella/openEQUELLA/commit/3c32874e652a42ea1a996568ecfaec7d2441c96f", "message": "Created new OEQThumb component\n\nThis commit covers\n- oEQThumb component, which will display a real thumbnail for an attachment (if it exists). Otherwise an appropriate placeholder icon is returned\n- Add null check inside SearchHelper.scala. If this is not performed the fileExists method can return incorrect results, when the filename parameter is null oEQ falls back to checking if the item file handle exists (which it always will exists)\n- Slight modification to SearchResult component to use the oEQThumb component. We are still always using the first attachment as the display thumbnail. This will be expanded out in future PRs to reflect the SaerchResult's displayOptions", "committedDate": "2020-07-19T23:39:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NDk2MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456974961", "bodyText": "This should be before the param and return statements.", "author": "edalex-ian", "createdAt": "2020-07-20T00:21:37Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Goodle books)\n+ * Otherwise, an appropriate Icon is returned\n+ */\n+export default function OEQThumb({\n+  mimeType,\n+  attachmentType,\n+  hasGeneratedThumb,\n+  description,\n+  links,\n+}: OEQ.Search.Attachment) {\n+  const classes = useStyles();\n+  const generalThumbStyles: ThumbProps = {\n+    className: `MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail} ${classes.placeholderThumbnail}`,\n+    fontSize: \"large\",\n+  };\n+  let oeqThumb: React.ReactElement = (\n+    <DefaultFileIcon {...generalThumbStyles} />\n+  );\n+\n+  const oeqProvidedThumb: React.ReactElement = (\n+    <img\n+      className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail}`}\n+      src={links.thumbnail}\n+      alt={description}\n+    />\n+  );\n+  /**\n+   * @param {string} mimeType - Attachment's Mimetype. eg. image/png application/pdf\n+   * @return {ReactElement} Image, video and pdf based mimetypes are thumbnailed by oEQ.\n+   * We need to check if a thumbnail has been generated, and return a generic icon if not", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NjA4Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456976086", "bodyText": "My eye was immediate draw to this block due to what appears to be excessive nesting. As excessive nesting can make code hard to follow/read/understand intent.\nLooking at this, I wonder why if(hasGeneratedThumb) is in the nesting. It feels as though this whole level can be replaced with an opening statement in this function of:\nif(hasGeneratedThumb) {\n  return oeqProvidedThumb;\n}\nIf that is valid, it then looks like this function could be:\nconst handleMimeType = (mimeType?: string): React.ReactElement => {\n  if (hasGeneratedThumb) {\n    return oeqProvidedThumb;\n  }\n\n  let result = <DefaultFileIcon {...generalThumbStyles} />;\n  if (mimeType?.startsWith(\"image\")) {\n    result = <ImageIcon {...generalThumbStyles} />;\n  } else if (mimeType?.startsWith(\"video\")) {\n    result = <VideoIcon {...generalThumbStyles} />;\n  }\n\n  return result;\n}", "author": "edalex-ian", "createdAt": "2020-07-20T00:30:56Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Goodle books)\n+ * Otherwise, an appropriate Icon is returned\n+ */\n+export default function OEQThumb({\n+  mimeType,\n+  attachmentType,\n+  hasGeneratedThumb,\n+  description,\n+  links,\n+}: OEQ.Search.Attachment) {\n+  const classes = useStyles();\n+  const generalThumbStyles: ThumbProps = {\n+    className: `MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail} ${classes.placeholderThumbnail}`,\n+    fontSize: \"large\",\n+  };\n+  let oeqThumb: React.ReactElement = (\n+    <DefaultFileIcon {...generalThumbStyles} />\n+  );\n+\n+  const oeqProvidedThumb: React.ReactElement = (\n+    <img\n+      className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail}`}\n+      src={links.thumbnail}\n+      alt={description}\n+    />\n+  );\n+  /**\n+   * @param {string} mimeType - Attachment's Mimetype. eg. image/png application/pdf\n+   * @return {ReactElement} Image, video and pdf based mimetypes are thumbnailed by oEQ.\n+   * We need to check if a thumbnail has been generated, and return a generic icon if not\n+   */\n+  const handleMimeType = (mimeType?: string): React.ReactElement => {\n+    let result = <DefaultFileIcon {...generalThumbStyles} />;\n+    if (\n+      mimeType?.startsWith(\"image\") ||\n+      mimeType?.startsWith(\"video\") ||\n+      mimeType?.endsWith(\"/pdf\")\n+    ) {\n+      if (hasGeneratedThumb) {\n+        result = oeqProvidedThumb;\n+      } else {\n+        if (mimeType?.startsWith(\"image\")) {\n+          result = <ImageIcon {...generalThumbStyles} />;\n+        } else if (mimeType?.startsWith(\"video\")) {\n+          result = <VideoIcon {...generalThumbStyles} />;\n+        }\n+      }\n+    }", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4NDM4Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456984387", "bodyText": "That should be valid (and more readable) Thanks for the suggestion. I think maybe I had been looking at it for too long \ud83e\udd14 \ud83e\udd2f", "author": "mrblippy", "createdAt": "2020-07-20T01:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NjA4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NjU5OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456976599", "bodyText": "These should all just be a fall-through. E.g.:\n    case \"custom/flickr\":\n    case \"custom/youtube\":\n    case \"custom/googlebook\":\n      oeqThumb = oeqProvidedThumb;\n      break;\nAlso note, no need for the braces on your case statements. (Both here and in the rest of this switch.)", "author": "edalex-ian", "createdAt": "2020-07-20T00:34:58Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Goodle books)\n+ * Otherwise, an appropriate Icon is returned\n+ */\n+export default function OEQThumb({\n+  mimeType,\n+  attachmentType,\n+  hasGeneratedThumb,\n+  description,\n+  links,\n+}: OEQ.Search.Attachment) {\n+  const classes = useStyles();\n+  const generalThumbStyles: ThumbProps = {\n+    className: `MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail} ${classes.placeholderThumbnail}`,\n+    fontSize: \"large\",\n+  };\n+  let oeqThumb: React.ReactElement = (\n+    <DefaultFileIcon {...generalThumbStyles} />\n+  );\n+\n+  const oeqProvidedThumb: React.ReactElement = (\n+    <img\n+      className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail}`}\n+      src={links.thumbnail}\n+      alt={description}\n+    />\n+  );\n+  /**\n+   * @param {string} mimeType - Attachment's Mimetype. eg. image/png application/pdf\n+   * @return {ReactElement} Image, video and pdf based mimetypes are thumbnailed by oEQ.\n+   * We need to check if a thumbnail has been generated, and return a generic icon if not\n+   */\n+  const handleMimeType = (mimeType?: string): React.ReactElement => {\n+    let result = <DefaultFileIcon {...generalThumbStyles} />;\n+    if (\n+      mimeType?.startsWith(\"image\") ||\n+      mimeType?.startsWith(\"video\") ||\n+      mimeType?.endsWith(\"/pdf\")\n+    ) {\n+      if (hasGeneratedThumb) {\n+        result = oeqProvidedThumb;\n+      } else {\n+        if (mimeType?.startsWith(\"image\")) {\n+          result = <ImageIcon {...generalThumbStyles} />;\n+        } else if (mimeType?.startsWith(\"video\")) {\n+          result = <VideoIcon {...generalThumbStyles} />;\n+        }\n+      }\n+    }\n+    return result;\n+  };\n+\n+  switch (attachmentType) {\n+    case \"file\": {\n+      oeqThumb = handleMimeType(mimeType);\n+      break;\n+    }\n+    case \"link\": {\n+      oeqThumb = <LinkIcon {...generalThumbStyles} />;\n+      break;\n+    }\n+    case \"custom/flickr\": {\n+      oeqThumb = oeqProvidedThumb;\n+      break;\n+    }\n+    case \"custom/youtube\": {\n+      oeqThumb = oeqProvidedThumb;\n+      break;\n+    }\n+    case \"custom/googlebook\": {\n+      oeqThumb = oeqProvidedThumb;\n+      break;\n+    }", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3Njc0Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456976747", "bodyText": "Seeing this is a variable, it makes sense to keep down next to where it's changed/used - i.e. down near the switch statement.", "author": "edalex-ian", "createdAt": "2020-07-20T00:36:15Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Goodle books)\n+ * Otherwise, an appropriate Icon is returned\n+ */\n+export default function OEQThumb({\n+  mimeType,\n+  attachmentType,\n+  hasGeneratedThumb,\n+  description,\n+  links,\n+}: OEQ.Search.Attachment) {\n+  const classes = useStyles();\n+  const generalThumbStyles: ThumbProps = {\n+    className: `MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail} ${classes.placeholderThumbnail}`,\n+    fontSize: \"large\",\n+  };\n+  let oeqThumb: React.ReactElement = (\n+    <DefaultFileIcon {...generalThumbStyles} />\n+  );", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4NzE0Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456987142", "bodyText": "Yeah, it's sort of hanging out in the middle of nowhere as-is", "author": "mrblippy", "createdAt": "2020-07-20T01:43:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3Njc0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NzAxMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456977013", "bodyText": "So it's interesting to have this duplicated here to match the oEQThumb. Is there something that can be done about this?\nI'm kind of wondering if maybe the generation of the 'placeholder' is also part of OEQThumb.", "author": "edalex-ian", "createdAt": "2020-07-20T00:38:28Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -60,6 +61,8 @@ const useStyles = makeStyles((theme: Theme) => {\n     },\n     placeholderThumbnail: {\n       color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",\n     },", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5MDgwOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456990808", "bodyText": "I did consider putting the placeholder inside the oEQThumb component. But the search placeholder icon is only really relevant to the SearchResult component.\nI intended that this oEQThumb component could be used in other areas of the oEQ new ui. Eg. Item summary page, attachment details panel.\nIn that case the oEQThumb component would only be used if there were 1 or more attachments, and would never need to produce a placeholder thumbnail.\nNot sure if that justification makes sense. So we can have a chat about it if necessary", "author": "mrblippy", "createdAt": "2020-07-20T02:01:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NzAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NDUzMg==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456994532", "bodyText": "Maybe following YAGNI then, how about we put it in there for now, and then when we get to that bit see how things look and rework as required.", "author": "edalex-ian", "createdAt": "2020-07-20T02:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NzAxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwMTQxNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457001416", "bodyText": "Ok, sure thing", "author": "mrblippy", "createdAt": "2020-07-20T02:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NzAxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3NzU2Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456977562", "bodyText": "Based on what you have here, we'd really just expect a ternary statement. Such as:\nconst thumbnail = (disableThumb: boolean): React.ReactElement =>\n  (attachments.length > 0 && !disableThumb)\n    ? <Subject\n        className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.placeholderThumbnail} ${classes.thumbnail}`}\n        fontSize=\"large\"\n      />\n    : <OEQThumb {...attachments[0]} />;\nBut as noted above, maybe this functionality is simply part of OEQThumb. \ud83e\udd14", "author": "edalex-ian", "createdAt": "2020-07-20T00:42:28Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -116,24 +119,16 @@ export default function SearchResult({\n    * Otherwise, return a placeholder icon, to ensure a consistent layout\n    */\n   const thumbnail = (disableThumb: boolean): React.ReactElement => {\n-    let result: any;\n+    let thumb: any = (\n+      <Subject\n+        className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.placeholderThumbnail} ${classes.thumbnail}`}\n+        fontSize=\"large\"\n+      />\n+    );\n     if (attachments.length > 0 && !disableThumb) {\n-      result = (\n-        <img\n-          className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail}`}\n-          src={attachments[0].links.thumbnail}\n-          alt={attachments[0].description}\n-        />\n-      );\n-    } else {\n-      result = (\n-        <Subject\n-          className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.placeholderThumbnail} ${classes.thumbnail}`}\n-          fontSize=\"large\"\n-        />\n-      );\n+      thumb = <OEQThumb {...attachments[0]} />;\n     }\n-    return result;\n+    return thumb;\n   };", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3ODU5Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456978596", "bodyText": "Can you simply combine these three lines to the more pipeline approach of:\nOption(fileBean.getThumbnail).map { LegacyGuice.fileSystemService.fileExists(item.getFileHandle, _) }", "author": "edalex-ian", "createdAt": "2020-07-20T00:49:53Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -224,10 +224,13 @@ object SearchHelper {\n     * Determines if attachment contains a generated thumbnail in filestore\n     */\n   def thumbExists(itemKey: ItemIdKey, attachBean: AttachmentBean): Option[Boolean] = {\n+\n     attachBean match {\n       case fileBean: FileAttachmentBean =>\n-        val item = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n-        Some(LegacyGuice.fileSystemService.fileExists(item.getFileHandle, fileBean.getThumbnail))\n+        val item  = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+        val thumb = fileBean.getThumbnail\n+        if (thumb == null) Some(false)\n+        else Some(LegacyGuice.fileSystemService.fileExists(item.getFileHandle, thumb))", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwNjkzNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457006937", "bodyText": "Yep, that will do nicely", "author": "mrblippy", "createdAt": "2020-07-20T03:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk3ODU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4MDQ0NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456980444", "bodyText": "should this height rule be in thumbnail above? Or are true oEQ thumbnails sometimes different to that?", "author": "SammyIsConfused", "createdAt": "2020-07-20T01:02:33Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzNjA5Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457836096", "bodyText": "google books are the outlier, which seem to come across in portrait orientation", "author": "mrblippy", "createdAt": "2020-07-21T04:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4MDQ0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4MTM0NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456981344", "bodyText": "This can be typed as ReactElement.", "author": "SammyIsConfused", "createdAt": "2020-07-20T01:08:48Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -116,24 +119,16 @@ export default function SearchResult({\n    * Otherwise, return a placeholder icon, to ensure a consistent layout\n    */\n   const thumbnail = (disableThumb: boolean): React.ReactElement => {\n-    let result: any;\n+    let thumb: any = (", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwNzQ5Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457007497", "bodyText": "yeah, that's true", "author": "mrblippy", "createdAt": "2020-07-20T03:10:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4MTM0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4MTkzNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r456981936", "bodyText": "You have a stray \"Goodle\" in here :P\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Goodle books)\n          \n          \n            \n             * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, PDF based files, YouTube, Flickr, Google books)", "author": "SammyIsConfused", "createdAt": "2020-07-20T01:12:25Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Goodle books)", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwNzM0Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457007347", "bodyText": "You have a stray \"Goodle\" in here :P\n\nAre you saying goodle is not a real company name \ud83d\ude1d", "author": "mrblippy", "createdAt": "2020-07-20T03:09:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4MTkzNg=="}], "type": "inlineReview"}, {"oid": "e83e330c3a0bad0b3884d37cd382f499d178d83a", "url": "https://github.com/openequella/openEQUELLA/commit/e83e330c3a0bad0b3884d37cd382f499d178d83a", "message": "Map on FileAttachmentBean's thumbnail value", "committedDate": "2020-07-20T03:14:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAzNDUzOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457034539", "bodyText": "numbers are automatically px in material ui\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  width: \"88px\",\n          \n          \n            \n                  width: 88,", "author": "ChristianMurphy", "createdAt": "2020-07-20T04:20:29Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAzNTA1Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457035053", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param {string} mimeType - Attachment's Mimetype. eg. image/png application/pdf\n          \n          \n            \n               * @return {ReactElement} Image, video and pdf based mimetypes are thumbnailed by oEQ.\n          \n          \n            \n               * We need to check if a thumbnail has been generated, and return a generic icon if not\n          \n          \n            \n               * We need to check if a thumbnail has been generated, and return a generic icon if not\n          \n          \n            \n               *\n          \n          \n            \n               * @param {string} mimeType - Attachment's Mimetype. eg. image/png application/pdf\n          \n          \n            \n               * @return {ReactElement} Image, video and pdf based mimetypes are thumbnailed by oEQ.", "author": "ChristianMurphy", "createdAt": "2020-07-20T04:21:40Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Goodle books)\n+ * Otherwise, an appropriate Icon is returned\n+ */\n+export default function OEQThumb({\n+  mimeType,\n+  attachmentType,\n+  hasGeneratedThumb,\n+  description,\n+  links,\n+}: OEQ.Search.Attachment) {\n+  const classes = useStyles();\n+  const generalThumbStyles: ThumbProps = {\n+    className: `MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail} ${classes.placeholderThumbnail}`,\n+    fontSize: \"large\",\n+  };\n+  let oeqThumb: React.ReactElement = (\n+    <DefaultFileIcon {...generalThumbStyles} />\n+  );\n+\n+  const oeqProvidedThumb: React.ReactElement = (\n+    <img\n+      className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail}`}\n+      src={links.thumbnail}\n+      alt={description}\n+    />\n+  );\n+  /**\n+   * @param {string} mimeType - Attachment's Mimetype. eg. image/png application/pdf\n+   * @return {ReactElement} Image, video and pdf based mimetypes are thumbnailed by oEQ.\n+   * We need to check if a thumbnail has been generated, and return a generic icon if not", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAzNTkwNA==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457035904", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  height: \"66px\",\n          \n          \n            \n                  height: 66,", "author": "ChristianMurphy", "createdAt": "2020-07-20T04:23:41Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -60,6 +61,8 @@ const useStyles = makeStyles((theme: Theme) => {\n     },\n     placeholderThumbnail: {\n       color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAzNjY4Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457036682", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  height: \"66px\",\n          \n          \n            \n                  height: 66,", "author": "ChristianMurphy", "createdAt": "2020-07-20T04:24:57Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88px\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66px\",", "originalCommit": "3c32874e652a42ea1a996568ecfaec7d2441c96f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a41ba2c62a104ee4621c48f00e222707f05b1799", "url": "https://github.com/openequella/openEQUELLA/commit/a41ba2c62a104ee4621c48f00e222707f05b1799", "message": "Rework logic inside of OEQThumb component\n\n- Make attachment prop optional, which allows the PlaceholderIcon to be moved from SearchResult to OEQthumb. Simplify switch statement to aid in readability\n- Fix typos in javadoc", "committedDate": "2020-07-21T05:16:16Z", "type": "commit"}, {"oid": "ec02bf01e68aec3cfceec9b060cbbf11a7c8a482", "url": "https://github.com/openequella/openEQUELLA/commit/ec02bf01e68aec3cfceec9b060cbbf11a7c8a482", "message": "Move OEQThumb component into regular components directory, since it makes more sense for it to live there.", "committedDate": "2020-07-21T05:36:13Z", "type": "commit"}, {"oid": "8da127c4ce62a3bd2e54d27629dd72851c473a61", "url": "https://github.com/openequella/openEQUELLA/commit/8da127c4ce62a3bd2e54d27629dd72851c473a61", "message": "Document OEQThumb props", "committedDate": "2020-07-21T05:55:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg1ODYwOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457858609", "bodyText": "Nit: can we have a blank line here please?", "author": "edalex-ian", "createdAt": "2020-07-21T06:09:56Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+  Subject as PlaceholderIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+interface OEQThumbProps {", "originalCommit": "8da127c4ce62a3bd2e54d27629dd72851c473a61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg1ODcwNA==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457858704", "bodyText": "Nit: and another above here?", "author": "edalex-ian", "createdAt": "2020-07-21T06:10:11Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+  Subject as PlaceholderIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+interface OEQThumbProps {\n+  /**\n+   * On object representing an oEQ attachment. If undefined, a placeholder icon is returned\n+   */\n+  attachment?: OEQ.Search.Attachment;\n+  /**\n+   * True indicates that a placeholder icon should be used instead of the 'real' thumbnail\n+   */\n+  showPlaceholder: boolean;\n+}\n+/**", "originalCommit": "8da127c4ce62a3bd2e54d27629dd72851c473a61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg1OTU4Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457859583", "bodyText": "To make things simpler later, how about here you just go with:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if (!attachment) {\n          \n          \n            \n              if (!attachment || showPlaceholder) {", "author": "edalex-ian", "createdAt": "2020-07-21T06:12:50Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+  Subject as PlaceholderIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+interface OEQThumbProps {\n+  /**\n+   * On object representing an oEQ attachment. If undefined, a placeholder icon is returned\n+   */\n+  attachment?: OEQ.Search.Attachment;\n+  /**\n+   * True indicates that a placeholder icon should be used instead of the 'real' thumbnail\n+   */\n+  showPlaceholder: boolean;\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Google books)\n+ * Otherwise, an appropriate Icon is returned\n+ */\n+export default function OEQThumb({\n+  attachment,\n+  showPlaceholder,\n+}: OEQThumbProps) {\n+  const classes = useStyles();\n+  const generalThumbStyles: ThumbProps = {\n+    className: `MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail} ${classes.placeholderThumbnail}`,\n+    fontSize: \"large\",\n+  };\n+\n+  if (!attachment) {", "originalCommit": "8da127c4ce62a3bd2e54d27629dd72851c473a61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MTQ4MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457861480", "bodyText": "Couple of things here:\n\nWith my suggestion above regarding showPlaceholder, this no longer needs the ternary; and\nYou've now repeated <DefaultFileIcon {...generalThumbStyles} />. You should just move this to a constant up above the handleMimeType function so that you can use it in there and here. (i.e. const defaultThumb = <DefaultFileIcon {...generalThumbStyles} />)\n\nWith that in mind, this block would then just be:\nlet oeqThumb = defaultThumb;", "author": "edalex-ian", "createdAt": "2020-07-21T06:18:11Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+  Subject as PlaceholderIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66\",\n+    },\n+  };\n+});\n+\n+interface ThumbProps {\n+  className: string;\n+  fontSize: \"inherit\" | \"default\" | \"small\" | \"large\";\n+}\n+interface OEQThumbProps {\n+  /**\n+   * On object representing an oEQ attachment. If undefined, a placeholder icon is returned\n+   */\n+  attachment?: OEQ.Search.Attachment;\n+  /**\n+   * True indicates that a placeholder icon should be used instead of the 'real' thumbnail\n+   */\n+  showPlaceholder: boolean;\n+}\n+/**\n+ * OEQThumb component\n+ * Takes an OEQ.Search.Attachment object as a parameter.\n+ * The thumbnail will be served up from oEQ if the attachment has had a thumbnail generated (Image, video, pdf based files, Youtube, Flickr, Google books)\n+ * Otherwise, an appropriate Icon is returned\n+ */\n+export default function OEQThumb({\n+  attachment,\n+  showPlaceholder,\n+}: OEQThumbProps) {\n+  const classes = useStyles();\n+  const generalThumbStyles: ThumbProps = {\n+    className: `MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail} ${classes.placeholderThumbnail}`,\n+    fontSize: \"large\",\n+  };\n+\n+  if (!attachment) {\n+    return <PlaceholderIcon {...generalThumbStyles} />;\n+  }\n+\n+  const {\n+    description,\n+    mimeType,\n+    attachmentType,\n+    hasGeneratedThumb,\n+    links,\n+  } = attachment;\n+\n+  const oeqProvidedThumb: React.ReactElement = (\n+    <img\n+      className={`MuiPaper-elevation1 MuiPaper-rounded ${classes.thumbnail}`}\n+      src={links.thumbnail}\n+      alt={description}\n+    />\n+  );\n+\n+  /**\n+   * We need to check if a thumbnail has been generated, and return a generic icon if not\n+   * @param {string} mimeType - Attachment's Mimetype. eg. image/png application/pdf\n+   * @return {ReactElement} Image, video and pdf based mimetypes are thumbnailed by oEQ.\n+   */\n+  const handleMimeType = (mimeType?: string): React.ReactElement => {\n+    if (hasGeneratedThumb) {\n+      return oeqProvidedThumb;\n+    }\n+    let result = <DefaultFileIcon {...generalThumbStyles} />;\n+    if (mimeType?.startsWith(\"image\")) {\n+      result = <ImageIcon {...generalThumbStyles} />;\n+    } else if (mimeType?.startsWith(\"video\")) {\n+      result = <VideoIcon {...generalThumbStyles} />;\n+    }\n+    return result;\n+  };\n+\n+  let oeqThumb: React.ReactElement = showPlaceholder ? (\n+    <PlaceholderIcon {...generalThumbStyles} />\n+  ) : (\n+    <DefaultFileIcon {...generalThumbStyles} />\n+  );", "originalCommit": "8da127c4ce62a3bd2e54d27629dd72851c473a61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0fea8d2b5641acf4562bedb74d0fb6dbe6a9f4b9", "url": "https://github.com/openequella/openEQUELLA/commit/0fea8d2b5641acf4562bedb74d0fb6dbe6a9f4b9", "message": "Simplify handling of Default and placeholder thumbnails", "committedDate": "2020-07-21T06:48:43Z", "type": "commit"}, {"oid": "23e19414c746795dbd1d820a3e9e6c3277c948bd", "url": "https://github.com/openequella/openEQUELLA/commit/23e19414c746795dbd1d820a3e9e6c3277c948bd", "message": "Replace DefaultFileIcon with constant, further aiding in less repetition", "committedDate": "2020-07-21T07:30:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5NjEzMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457896133", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  width: \"88\",\n          \n          \n            \n                  width: 88,", "author": "edalex-ian", "createdAt": "2020-07-21T07:35:31Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+  Subject as PlaceholderIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88\",", "originalCommit": "23e19414c746795dbd1d820a3e9e6c3277c948bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg5NjQ4OA==", "url": "https://github.com/openequella/openEQUELLA/pull/2075#discussion_r457896488", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  height: \"66\",\n          \n          \n            \n                  height: 66,", "author": "edalex-ian", "createdAt": "2020-07-21T07:36:13Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/OEQThumb.tsx", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { Theme } from \"@material-ui/core\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  Link as LinkIcon,\n+  Movie as VideoIcon,\n+  Panorama as ImageIcon,\n+  InsertDriveFile as DefaultFileIcon,\n+  Language as WebIcon,\n+  Subject as PlaceholderIcon,\n+} from \"@material-ui/icons\";\n+\n+const useStyles = makeStyles((theme: Theme) => {\n+  return {\n+    thumbnail: {\n+      //if material UI changes such that the MuiPaper-elevation1 MuiPaper-rounded no longer map, add the rules here.\n+      marginRight: theme.spacing(2),\n+      width: \"88\",\n+      height: \"auto\",\n+    },\n+    placeholderThumbnail: {\n+      color: theme.palette.text.secondary,\n+      opacity: 0.4,\n+      height: \"66\",", "originalCommit": "23e19414c746795dbd1d820a3e9e6c3277c948bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e6b7fb7b1a1958071a69f48b40ab41d5634a3516", "url": "https://github.com/openequella/openEQUELLA/commit/e6b7fb7b1a1958071a69f48b40ab41d5634a3516", "message": "Make width and height styling values numbers instead of a strings", "committedDate": "2020-07-21T07:42:18Z", "type": "commit"}, {"oid": "16fca2141d31f211af21d0b1239e943d3484f465", "url": "https://github.com/openequella/openEQUELLA/commit/16fca2141d31f211af21d0b1239e943d3484f465", "message": "Replace dupilcated img tag with the const that I was already using elsewhere", "committedDate": "2020-07-21T08:07:53Z", "type": "commit"}]}