{"pr_number": 1896, "pr_title": "Integrate search page with search result component", "pr_createdAt": "2020-06-22T02:48:16Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/1896", "timeline": [{"oid": "c910976f8ff8fda96eb9a596a1c300f2f0751176", "url": "https://github.com/openequella/openEQUELLA/commit/c910976f8ff8fda96eb9a596a1c300f2f0751176", "message": "Modify the link types for SearchResultItem and Attachment. It's confirmed\nthat two key/value pairs that are always added into a SearchResultItem\nare 'view' and 'self', and those two of Attachment are 'view' and 'thumbsail'.", "committedDate": "2020-06-21T23:55:32Z", "type": "commit"}, {"oid": "f5b1be78b1a223c3d106ac09ef77f9213c37f25c", "url": "https://github.com/openequella/openEQUELLA/commit/f5b1be78b1a223c3d106ac09ef77f9213c37f25c", "message": "Integrate the Search page place holder with REST APIs and the Search\nresult component.", "committedDate": "2020-06-22T02:35:46Z", "type": "commit"}, {"oid": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "url": "https://github.com/openequella/openEQUELLA/commit/6c20a70b340772039ad1d9069e0cf4a3f30bff76", "message": "Catch and handle errors if fail to search.", "committedDate": "2020-06-22T02:56:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTU3NA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443295574", "bodyText": "I'm confused - I thought we weren't supposed to refer to the rest-api-client directly, it should be through the module?", "author": "SammyIsConfused", "createdAt": "2020-06-22T02:59:15Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -16,63 +16,113 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { templateDefaults, TemplateUpdateProps } from \"../mainui/Template\";\n-import { useEffect } from \"react\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  templateDefaults,\n+  templateError,\n+  TemplateUpdateProps,\n+} from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  Card,\n   IconButton,\n   List,\n   ListItem,\n-  ListItemText,\n   ListSubheader,\n   TextField,\n+  Grid,\n+  Card,\n } from \"@material-ui/core\";\n import SearchIcon from \"@material-ui/icons/Search\";\n+import { searchItems } from \"./SearchModule\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  defaultSearchSettings,\n+  getSearchSettingsFromServer,\n+  SearchSettings,\n+} from \"../settings/Search/SearchSettingsModule\";\n+import SearchResult from \"./components/SearchResult\";\n+import { generateFromError } from \"../api/errors\";\n \n const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   const searchStrings = languageStrings.searchpage;\n-  const placeholderData: string[] = [\n-    \"item1\",\n-    \"item2\",\n-    \"item3\",\n-    \"item4\",\n-    \"item5\",\n-  ];\n+  const [searchResultItems, setSearchResultItems] = useState<\n+    OEQ.Search.SearchResultItem[]", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjgyMg==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443296822", "bodyText": "Or does that not apply to simply evaluating types?", "author": "SammyIsConfused", "createdAt": "2020-06-22T03:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMxNDc2NA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443314764", "bodyText": "I think we can reuse these interfaces. We use modules because we may need to do some checks before calling the function in some cases. So the module is the best place to do these checks.", "author": "PenghaiZhang", "createdAt": "2020-06-22T04:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyNDQzOA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443324438", "bodyText": "Yup, for the types it is fine. It should act as the authoritative source for the raw oEQ types. Now and then the various Modules might choose to have their own representation to better fit the domain, and that's fine too.", "author": "edalex-ian", "createdAt": "2020-06-22T05:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTcwNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443295705", "bodyText": "The first sentence of this comment (up to and including the colon) can be omitted.", "author": "SammyIsConfused", "createdAt": "2020-06-22T02:59:56Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -16,63 +16,113 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { templateDefaults, TemplateUpdateProps } from \"../mainui/Template\";\n-import { useEffect } from \"react\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  templateDefaults,\n+  templateError,\n+  TemplateUpdateProps,\n+} from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  Card,\n   IconButton,\n   List,\n   ListItem,\n-  ListItemText,\n   ListSubheader,\n   TextField,\n+  Grid,\n+  Card,\n } from \"@material-ui/core\";\n import SearchIcon from \"@material-ui/icons/Search\";\n+import { searchItems } from \"./SearchModule\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  defaultSearchSettings,\n+  getSearchSettingsFromServer,\n+  SearchSettings,\n+} from \"../settings/Search/SearchSettingsModule\";\n+import SearchResult from \"./components/SearchResult\";\n+import { generateFromError } from \"../api/errors\";\n \n const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   const searchStrings = languageStrings.searchpage;\n-  const placeholderData: string[] = [\n-    \"item1\",\n-    \"item2\",\n-    \"item3\",\n-    \"item4\",\n-    \"item5\",\n-  ];\n+  const [searchResultItems, setSearchResultItems] = useState<\n+    OEQ.Search.SearchResultItem[]\n+  >([]);\n+  const [searchSettings, setSearchSettings] = useState<SearchSettings>(\n+    defaultSearchSettings\n+  );\n \n+  /**\n+   * What is done in this hook include: updating the page title, retrieving search settings, and", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTk3Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443295972", "bodyText": "Perhaps have an @see pointing towards SearchParams for this one?", "author": "SammyIsConfused", "createdAt": "2020-06-22T03:01:18Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -16,63 +16,113 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { templateDefaults, TemplateUpdateProps } from \"../mainui/Template\";\n-import { useEffect } from \"react\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  templateDefaults,\n+  templateError,\n+  TemplateUpdateProps,\n+} from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  Card,\n   IconButton,\n   List,\n   ListItem,\n-  ListItemText,\n   ListSubheader,\n   TextField,\n+  Grid,\n+  Card,\n } from \"@material-ui/core\";\n import SearchIcon from \"@material-ui/icons/Search\";\n+import { searchItems } from \"./SearchModule\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  defaultSearchSettings,\n+  getSearchSettingsFromServer,\n+  SearchSettings,\n+} from \"../settings/Search/SearchSettingsModule\";\n+import SearchResult from \"./components/SearchResult\";\n+import { generateFromError } from \"../api/errors\";\n \n const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   const searchStrings = languageStrings.searchpage;\n-  const placeholderData: string[] = [\n-    \"item1\",\n-    \"item2\",\n-    \"item3\",\n-    \"item4\",\n-    \"item5\",\n-  ];\n+  const [searchResultItems, setSearchResultItems] = useState<\n+    OEQ.Search.SearchResultItem[]\n+  >([]);\n+  const [searchSettings, setSearchSettings] = useState<SearchSettings>(\n+    defaultSearchSettings\n+  );\n \n+  /**\n+   * What is done in this hook include: updating the page title, retrieving search settings, and\n+   * doing a default search.\n+   */\n   useEffect(() => {\n     updateTemplate((tp) => ({\n       ...templateDefaults(searchStrings.title)(tp),\n     }));\n+\n+    getSearchSettingsFromServer().then((settings: SearchSettings) => {\n+      setSearchSettings(settings);\n+      search({\n+        status: [OEQ.Common.ItemStatus.LIVE, OEQ.Common.ItemStatus.REVIEW],\n+      });\n+    });\n   }, []);\n \n-  const searchResults = placeholderData.map((data: string) => {\n-    return (\n-      <ListItem>\n-        <ListItemText primary={data} />\n+  const handleError = (error: Error) => {\n+    updateTemplate(templateError(generateFromError(error)));\n+  };\n+\n+  /**\n+   * Search items with specified search criteria.\n+   * @param params Search criteria", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMxOTg0OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443319849", "bodyText": "I tried   @param params Search crierial, also see {@link OEQ.Search.SearchParams } but IDE can't resolve Search.SearchParams from namespace OEQ \ud83e\udd14", "author": "PenghaiZhang", "createdAt": "2020-06-22T05:10:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyNDYyNA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443324624", "bodyText": "Ahh well, in that case it's okay as you can still see the type on the function signature and find out more from there.", "author": "edalex-ian", "createdAt": "2020-06-22T05:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjE3Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443296172", "bodyText": "Is there a way to do this redirect with Router rather than window.location?", "author": "SammyIsConfused", "createdAt": "2020-06-22T03:02:21Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -16,63 +16,113 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { templateDefaults, TemplateUpdateProps } from \"../mainui/Template\";\n-import { useEffect } from \"react\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  templateDefaults,\n+  templateError,\n+  TemplateUpdateProps,\n+} from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  Card,\n   IconButton,\n   List,\n   ListItem,\n-  ListItemText,\n   ListSubheader,\n   TextField,\n+  Grid,\n+  Card,\n } from \"@material-ui/core\";\n import SearchIcon from \"@material-ui/icons/Search\";\n+import { searchItems } from \"./SearchModule\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import {\n+  defaultSearchSettings,\n+  getSearchSettingsFromServer,\n+  SearchSettings,\n+} from \"../settings/Search/SearchSettingsModule\";\n+import SearchResult from \"./components/SearchResult\";\n+import { generateFromError } from \"../api/errors\";\n \n const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   const searchStrings = languageStrings.searchpage;\n-  const placeholderData: string[] = [\n-    \"item1\",\n-    \"item2\",\n-    \"item3\",\n-    \"item4\",\n-    \"item5\",\n-  ];\n+  const [searchResultItems, setSearchResultItems] = useState<\n+    OEQ.Search.SearchResultItem[]\n+  >([]);\n+  const [searchSettings, setSearchSettings] = useState<SearchSettings>(\n+    defaultSearchSettings\n+  );\n \n+  /**\n+   * What is done in this hook include: updating the page title, retrieving search settings, and\n+   * doing a default search.\n+   */\n   useEffect(() => {\n     updateTemplate((tp) => ({\n       ...templateDefaults(searchStrings.title)(tp),\n     }));\n+\n+    getSearchSettingsFromServer().then((settings: SearchSettings) => {\n+      setSearchSettings(settings);\n+      search({\n+        status: [OEQ.Common.ItemStatus.LIVE, OEQ.Common.ItemStatus.REVIEW],\n+      });\n+    });\n   }, []);\n \n-  const searchResults = placeholderData.map((data: string) => {\n-    return (\n-      <ListItem>\n-        <ListItemText primary={data} />\n+  const handleError = (error: Error) => {\n+    updateTemplate(templateError(generateFromError(error)));\n+  };\n+\n+  /**\n+   * Search items with specified search criteria.\n+   * @param params Search criteria\n+   */\n+  const search = (params?: OEQ.Search.SearchParams): void => {\n+    searchItems(params)\n+      .then((items: OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>) =>\n+        setSearchResultItems(items.results)\n+      )\n+      .catch((error: Error) => handleError(error));\n+  };\n+\n+  /**\n+   * A SearchResult that represents one of the search result items.\n+   */\n+  const searchResults = searchResultItems.map(\n+    (item: OEQ.Search.SearchResultItem) => (\n+      <ListItem key={item.uuid}>\n+        <SearchResult\n+          resultData={item}\n+          onClick={() => (window.location.href = item.links.view)}", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMxMzgyMw==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443313823", "bodyText": "I guess we can't do that at the moment because we don't have a route for this specific URL and a react component for ItemSummary page.\nBut maybe we can try hook useHistory to do ?", "author": "PenghaiZhang", "createdAt": "2020-06-22T04:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyNTE1Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443325157", "bodyText": "Yeah, it's an interesting this one - as will be the attachments - as it's where we still need to straddle over into the Legacy UI. \ud83e\udd14\nYes, maybe the useHistory hook could be the goer for now.", "author": "edalex-ian", "createdAt": "2020-06-22T05:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5MjI1MA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443892250", "bodyText": "I just had a talk with Tom. A better way could be to tweak SearchResult to make it be a hyperlink.", "author": "PenghaiZhang", "createdAt": "2020-06-23T00:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjE3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjQ2MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443296461", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The URL of viewing this attachment.\n          \n          \n            \n                 * The URL for viewing this attachment.", "author": "SammyIsConfused", "createdAt": "2020-06-22T03:03:57Z", "path": "oeq-ts-rest-api/src/Search.ts", "diffHunk": "@@ -124,7 +124,16 @@ export interface Attachment {\n   /**\n    * Links to the attachment.\n    */\n-  links: Record<string, string>;\n+  links: {\n+    /**\n+     * The URL of viewing this attachment.", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjUwOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443296509", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The URL of viewing this attachment's thumbnail.\n          \n          \n            \n                 * The URL for viewing this attachment's thumbnail.", "author": "SammyIsConfused", "createdAt": "2020-06-22T03:04:15Z", "path": "oeq-ts-rest-api/src/Search.ts", "diffHunk": "@@ -124,7 +124,16 @@ export interface Attachment {\n   /**\n    * Links to the attachment.\n    */\n-  links: Record<string, string>;\n+  links: {\n+    /**\n+     * The URL of viewing this attachment.\n+     */\n+    view: string;\n+    /**\n+     * The URL of viewing this attachment's thumbnail.", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjU1NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443296555", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The URL of viewing this item.\n          \n          \n            \n                 * The URL for viewing this item.", "author": "SammyIsConfused", "createdAt": "2020-06-22T03:04:33Z", "path": "oeq-ts-rest-api/src/Search.ts", "diffHunk": "@@ -182,7 +191,16 @@ export interface SearchResultItem {\n   /**\n    * Links to an item.\n    */\n-  links: Record<string, string>;\n+  links: {\n+    /**\n+     * The URL of viewing this item.", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NjY2MA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443296660", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The REST API path used to get details of this item.\n          \n          \n            \n                 * The REST API path used to get this item's details.", "author": "SammyIsConfused", "createdAt": "2020-06-22T03:05:03Z", "path": "oeq-ts-rest-api/src/Search.ts", "diffHunk": "@@ -182,7 +191,16 @@ export interface SearchResultItem {\n   /**\n    * Links to an item.\n    */\n-  links: Record<string, string>;\n+  links: {\n+    /**\n+     * The URL of viewing this item.\n+     */\n+    view: string;\n+    /**\n+     * The REST API path used to get details of this item.", "originalCommit": "6c20a70b340772039ad1d9069e0cf4a3f30bff76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ce581c6f1b682c27131b934ca236d263000eadb4", "url": "https://github.com/openequella/openEQUELLA/commit/ce581c6f1b682c27131b934ca236d263000eadb4", "message": "Don't get search settings as they do not get used at this stage.", "committedDate": "2020-06-22T04:05:50Z", "type": "commit"}, {"oid": "148f4a4038ae02385480f1a035af62e64c93038d", "url": "https://github.com/openequella/openEQUELLA/commit/148f4a4038ae02385480f1a035af62e64c93038d", "message": "Remove the imports of Search settings.\n\nReword comments.", "committedDate": "2020-06-22T04:39:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyNDQ1Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443324453", "bodyText": "Good pickup here \ud83d\udc4d , I thought i had added keys to all of the ListItem components, but must've missed this one", "author": "mrblippy", "createdAt": "2020-06-22T05:30:22Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -158,9 +158,9 @@ export default function SearchResult({\n   );\n \n   const customDisplayMetadata = displayFields.map(\n-    (element: OEQ.Search.DisplayFields) => {\n+    (element: OEQ.Search.DisplayFields, index: number) => {\n       return (\n-        <ListItem disableGutters dense>\n+        <ListItem disableGutters dense key={element.name + index}>", "originalCommit": "148f4a4038ae02385480f1a035af62e64c93038d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyOTE2MA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443329160", "bodyText": "Should we make it so the SearchResults takes up the full width of the page when there is no refine search panel? Probably something to address once we implement the refine search panel component.", "author": "mrblippy", "createdAt": "2020-06-22T05:49:44Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -16,63 +16,101 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { templateDefaults, TemplateUpdateProps } from \"../mainui/Template\";\n-import { useEffect } from \"react\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  templateDefaults,\n+  templateError,\n+  TemplateUpdateProps,\n+} from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  Card,\n   IconButton,\n   List,\n   ListItem,\n-  ListItemText,\n   ListSubheader,\n   TextField,\n+  Grid,\n+  Card,\n } from \"@material-ui/core\";\n import SearchIcon from \"@material-ui/icons/Search\";\n+import { searchItems } from \"./SearchModule\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import SearchResult from \"./components/SearchResult\";\n+import { generateFromError } from \"../api/errors\";\n \n const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   const searchStrings = languageStrings.searchpage;\n-  const placeholderData: string[] = [\n-    \"item1\",\n-    \"item2\",\n-    \"item3\",\n-    \"item4\",\n-    \"item5\",\n-  ];\n+  const [searchResultItems, setSearchResultItems] = useState<\n+    OEQ.Search.SearchResultItem[]\n+  >([]);\n \n+  /**\n+   * Update the page title and do a default search.\n+   */\n   useEffect(() => {\n     updateTemplate((tp) => ({\n       ...templateDefaults(searchStrings.title)(tp),\n     }));\n+\n+    search({\n+      status: [OEQ.Common.ItemStatus.LIVE, OEQ.Common.ItemStatus.REVIEW],\n+    });\n   }, []);\n \n-  const searchResults = placeholderData.map((data: string) => {\n-    return (\n-      <ListItem>\n-        <ListItemText primary={data} />\n+  const handleError = (error: Error) => {\n+    updateTemplate(templateError(generateFromError(error)));\n+  };\n+\n+  /**\n+   * Search items with specified search criteria.\n+   * @param params Search criteria\n+   */\n+  const search = (params?: OEQ.Search.SearchParams): void => {\n+    searchItems(params)\n+      .then((items: OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>) =>\n+        setSearchResultItems(items.results)\n+      )\n+      .catch((error: Error) => handleError(error));\n+  };\n+\n+  /**\n+   * A SearchResult that represents one of the search result items.\n+   */\n+  const searchResults = searchResultItems.map(\n+    (item: OEQ.Search.SearchResultItem) => (\n+      <ListItem key={item.uuid}>\n+        <SearchResult\n+          resultData={item}\n+          onClick={() => (window.location.href = item.links.view)}\n+        />\n       </ListItem>\n-    );\n-  });\n+    )\n+  );\n+\n+  /**\n+   * A list that consists of search result items.\n+   */\n   const searchResultList = (\n-    <List\n-      subheader={\n-        <ListSubheader disableGutters>{searchStrings.subtitle}</ListSubheader>\n-      }\n-    >\n+    <List subheader={<ListSubheader>{searchStrings.subtitle}</ListSubheader>}>\n       {searchResults}\n     </List>\n   );\n \n   return (\n-    <>\n-      <Card>\n-        <IconButton>\n-          <SearchIcon fontSize={\"large\"} />\n-        </IconButton>\n-        <TextField />\n-      </Card>\n-      <Card>{searchResultList}</Card>\n-    </>\n+    <Grid container direction={\"column\"} spacing={2}>\n+      <Grid item xs={9}>\n+        <Card>\n+          <IconButton>\n+            <SearchIcon fontSize={\"large\"} />\n+          </IconButton>\n+          <TextField />\n+        </Card>\n+      </Grid>\n+\n+      <Grid item xs={9}>", "originalCommit": "148f4a4038ae02385480f1a035af62e64c93038d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzMDgwOA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443330808", "bodyText": "Yeah, true, we could conditionally do that. For now I guess this is just a nice default while we lay things out. But I guess it's especially in the case of selection sessions we wont have a refine search panel?", "author": "edalex-ian", "createdAt": "2020-06-22T05:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyOTE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NTk5OA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443895998", "bodyText": "Yeah, mainly for selection sessions. But also in the regular ui, when the horizontal screen size goes below a certain level.\nEither way, it makes sense to revisit this when we get to actually implementing the refine panel component", "author": "mrblippy", "createdAt": "2020-06-23T00:30:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyOTE2MA=="}], "type": "inlineReview"}, {"oid": "6ac3cc9913169087a2e764481c65ed24534a189b", "url": "https://github.com/openequella/openEQUELLA/commit/6ac3cc9913169087a2e764481c65ed24534a189b", "message": "A few tweaks for component SearchResult:\n1. only click title to navigate to Item's summary page; and\n2. allow other texts to be selected and copied; and\n3. refactor props of SearchResult", "committedDate": "2020-06-23T01:42:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzMjgwOA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443932808", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        <SearchIcon fontSize={\"large\"} />\n          \n          \n            \n                        <SearchIcon fontSize=\"large\" />", "author": "ChristianMurphy", "createdAt": "2020-06-23T02:54:44Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -16,63 +16,98 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { templateDefaults, TemplateUpdateProps } from \"../mainui/Template\";\n-import { useEffect } from \"react\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  templateDefaults,\n+  templateError,\n+  TemplateUpdateProps,\n+} from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  Card,\n   IconButton,\n   List,\n   ListItem,\n-  ListItemText,\n   ListSubheader,\n   TextField,\n+  Grid,\n+  Card,\n } from \"@material-ui/core\";\n import SearchIcon from \"@material-ui/icons/Search\";\n+import { searchItems } from \"./SearchModule\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import SearchResult from \"./components/SearchResult\";\n+import { generateFromError } from \"../api/errors\";\n \n const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   const searchStrings = languageStrings.searchpage;\n-  const placeholderData: string[] = [\n-    \"item1\",\n-    \"item2\",\n-    \"item3\",\n-    \"item4\",\n-    \"item5\",\n-  ];\n+  const [searchResultItems, setSearchResultItems] = useState<\n+    OEQ.Search.SearchResultItem[]\n+  >([]);\n \n+  /**\n+   * Update the page title and do a default search.\n+   */\n   useEffect(() => {\n     updateTemplate((tp) => ({\n       ...templateDefaults(searchStrings.title)(tp),\n     }));\n+\n+    search({\n+      status: [OEQ.Common.ItemStatus.LIVE, OEQ.Common.ItemStatus.REVIEW],\n+    });\n   }, []);\n \n-  const searchResults = placeholderData.map((data: string) => {\n-    return (\n-      <ListItem>\n-        <ListItemText primary={data} />\n+  const handleError = (error: Error) => {\n+    updateTemplate(templateError(generateFromError(error)));\n+  };\n+\n+  /**\n+   * Search items with specified search criteria.\n+   * @param params Search criteria\n+   */\n+  const search = (params?: OEQ.Search.SearchParams): void => {\n+    searchItems(params)\n+      .then((items: OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>) =>\n+        setSearchResultItems(items.results)\n+      )\n+      .catch((error: Error) => handleError(error));\n+  };\n+\n+  /**\n+   * A SearchResult that represents one of the search result items.\n+   */\n+  const searchResults = searchResultItems.map(\n+    (item: OEQ.Search.SearchResultItem) => (\n+      <ListItem key={item.uuid}>\n+        <SearchResult {...item} />\n       </ListItem>\n-    );\n-  });\n+    )\n+  );\n+\n+  /**\n+   * A list that consists of search result items.\n+   */\n   const searchResultList = (\n-    <List\n-      subheader={\n-        <ListSubheader disableGutters>{searchStrings.subtitle}</ListSubheader>\n-      }\n-    >\n+    <List subheader={<ListSubheader>{searchStrings.subtitle}</ListSubheader>}>\n       {searchResults}\n     </List>\n   );\n \n   return (\n-    <>\n-      <Card>\n-        <IconButton>\n-          <SearchIcon fontSize={\"large\"} />\n-        </IconButton>\n-        <TextField />\n-      </Card>\n-      <Card>{searchResultList}</Card>\n-    </>\n+    <Grid container direction={\"column\"} spacing={2}>\n+      <Grid item xs={9}>\n+        <Card>\n+          <IconButton>\n+            <SearchIcon fontSize={\"large\"} />", "originalCommit": "6ac3cc9913169087a2e764481c65ed24534a189b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzMjg4MA==", "url": "https://github.com/openequella/openEQUELLA/pull/1896#discussion_r443932880", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <Grid container direction={\"column\"} spacing={2}>\n          \n          \n            \n                <Grid container direction=\"column\" spacing={2}>", "author": "ChristianMurphy", "createdAt": "2020-06-23T02:55:01Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -16,63 +16,98 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { templateDefaults, TemplateUpdateProps } from \"../mainui/Template\";\n-import { useEffect } from \"react\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  templateDefaults,\n+  templateError,\n+  TemplateUpdateProps,\n+} from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  Card,\n   IconButton,\n   List,\n   ListItem,\n-  ListItemText,\n   ListSubheader,\n   TextField,\n+  Grid,\n+  Card,\n } from \"@material-ui/core\";\n import SearchIcon from \"@material-ui/icons/Search\";\n+import { searchItems } from \"./SearchModule\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import SearchResult from \"./components/SearchResult\";\n+import { generateFromError } from \"../api/errors\";\n \n const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   const searchStrings = languageStrings.searchpage;\n-  const placeholderData: string[] = [\n-    \"item1\",\n-    \"item2\",\n-    \"item3\",\n-    \"item4\",\n-    \"item5\",\n-  ];\n+  const [searchResultItems, setSearchResultItems] = useState<\n+    OEQ.Search.SearchResultItem[]\n+  >([]);\n \n+  /**\n+   * Update the page title and do a default search.\n+   */\n   useEffect(() => {\n     updateTemplate((tp) => ({\n       ...templateDefaults(searchStrings.title)(tp),\n     }));\n+\n+    search({\n+      status: [OEQ.Common.ItemStatus.LIVE, OEQ.Common.ItemStatus.REVIEW],\n+    });\n   }, []);\n \n-  const searchResults = placeholderData.map((data: string) => {\n-    return (\n-      <ListItem>\n-        <ListItemText primary={data} />\n+  const handleError = (error: Error) => {\n+    updateTemplate(templateError(generateFromError(error)));\n+  };\n+\n+  /**\n+   * Search items with specified search criteria.\n+   * @param params Search criteria\n+   */\n+  const search = (params?: OEQ.Search.SearchParams): void => {\n+    searchItems(params)\n+      .then((items: OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>) =>\n+        setSearchResultItems(items.results)\n+      )\n+      .catch((error: Error) => handleError(error));\n+  };\n+\n+  /**\n+   * A SearchResult that represents one of the search result items.\n+   */\n+  const searchResults = searchResultItems.map(\n+    (item: OEQ.Search.SearchResultItem) => (\n+      <ListItem key={item.uuid}>\n+        <SearchResult {...item} />\n       </ListItem>\n-    );\n-  });\n+    )\n+  );\n+\n+  /**\n+   * A list that consists of search result items.\n+   */\n   const searchResultList = (\n-    <List\n-      subheader={\n-        <ListSubheader disableGutters>{searchStrings.subtitle}</ListSubheader>\n-      }\n-    >\n+    <List subheader={<ListSubheader>{searchStrings.subtitle}</ListSubheader>}>\n       {searchResults}\n     </List>\n   );\n \n   return (\n-    <>\n-      <Card>\n-        <IconButton>\n-          <SearchIcon fontSize={\"large\"} />\n-        </IconButton>\n-        <TextField />\n-      </Card>\n-      <Card>{searchResultList}</Card>\n-    </>\n+    <Grid container direction={\"column\"} spacing={2}>", "originalCommit": "6ac3cc9913169087a2e764481c65ed24534a189b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d071d57327e2e2649c8b27f0fed69148b5dd472f", "url": "https://github.com/openequella/openEQUELLA/commit/d071d57327e2e2649c8b27f0fed69148b5dd472f", "message": "Update the story for SearchResult.", "committedDate": "2020-06-23T03:05:33Z", "type": "commit"}, {"oid": "2d17cc51f8d9332c3a2d3a2cdfd6d8cb2f8869fe", "url": "https://github.com/openequella/openEQUELLA/commit/2d17cc51f8d9332c3a2d3a2cdfd6d8cb2f8869fe", "message": "Fix a couple styling issues for Search page\n\nCo-authored-by: Christian Murphy <christian.murphy.42@gmail.com>", "committedDate": "2020-06-23T03:08:34Z", "type": "commit"}]}