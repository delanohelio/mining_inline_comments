{"pr_number": 2113, "pr_title": "oeq-ts-rest-api: Add support for /userquery/search", "pr_createdAt": "2020-07-28T07:06:41Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2113", "timeline": [{"oid": "ccf789a5f0f50adcbb6e2afdc719b41e92ceba3d", "url": "https://github.com/openequella/openEQUELLA/commit/ccf789a5f0f50adcbb6e2afdc719b41e92ceba3d", "message": "oeq-ts-rest-api: Add support for /userquery/search", "committedDate": "2020-07-28T06:35:04Z", "type": "commit"}, {"oid": "1a463251b94a639c7b9ddd0baa8e94419f3e4a83", "url": "https://github.com/openequella/openEQUELLA/commit/1a463251b94a639c7b9ddd0baa8e94419f3e4a83", "message": "oeq-ts-rest-api: Add eslint/prettier formatting support", "committedDate": "2020-07-28T06:52:16Z", "type": "commit"}, {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4", "url": "https://github.com/openequella/openEQUELLA/commit/a602ad979872b85c35595dd761bfc3a054d6fab4", "message": "oeq-ts-rest-api: Apply formatting", "committedDate": "2020-07-28T06:55:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMzY1Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461913656", "bodyText": "If uuid the string is different from other strings, would it make sense to make it an opaque type?\nhttps://codemix.com/opaque-types-in-javascript\nhttps://github.com/sindresorhus/type-fest", "author": "ChristianMurphy", "createdAt": "2020-07-28T22:02:33Z", "path": "oeq-ts-rest-api/src/Common.ts", "diffHunk": "@@ -5,6 +5,8 @@ export type i18nString = string;\n \n export type I18nStrings = Record<string, string>;\n \n+export type UuidString = string;", "originalCommit": "a602ad979872b85c35595dd761bfc3a054d6fab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1ODUzMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461958533", "bodyText": "Thanks Christian. I'm only using the type here for documentation purposes.", "author": "edalex-ian", "createdAt": "2020-07-28T23:53:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMzY1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTMyNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461959327", "bodyText": "what parts of the node env are being used?", "author": "ChristianMurphy", "createdAt": "2020-07-28T23:55:35Z", "path": "oeq-ts-rest-api/.eslintrc.js", "diffHunk": "@@ -1,6 +1,7 @@\n module.exports = {\n   root: true,\n   env: {\n+    node: true,", "originalCommit": "a602ad979872b85c35595dd761bfc3a054d6fab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2MDQyNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461960425", "bodyText": "The Jest tests are running in node mode.\nBut more so.... This was added due to an eslint error from the precommit hook about module does not exist. SO seemed to point to adding this line which indeed then solved the error and all was fine. \ud83e\udd14\nOdd, as when in the directory and simply doing npm run format all was fine, but the root setup was not happy until I did this.", "author": "edalex-ian", "createdAt": "2020-07-28T23:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2MTI2NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461961264", "bodyText": "Interesting \ud83e\udd14\nThanks for the context!", "author": "ChristianMurphy", "createdAt": "2020-07-29T00:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTMyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzkxNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461983916", "bodyText": "Since this type is specific to uuid, should we update types of uuid for other objects later ? such as uuid of BaseEntity and SearchResultItem", "author": "PenghaiZhang", "createdAt": "2020-07-29T01:25:32Z", "path": "oeq-ts-rest-api/src/Common.ts", "diffHunk": "@@ -5,6 +5,8 @@ export type i18nString = string;\n \n export type I18nStrings = Record<string, string>;\n \n+export type UuidString = string;", "originalCommit": "a602ad979872b85c35595dd761bfc3a054d6fab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5MzkxOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461993919", "bodyText": "Yeah, I was also thinking that'll be something good to do - just didn't want to blur things too much in this PR. Will need to go back and confirm too which are UUIDs. (Guess that's another good argument for adding this type.)", "author": "edalex-ian", "createdAt": "2020-07-29T02:02:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4OTg2Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461989867", "bodyText": "Is params optional ?  If we want to get all users, groups and roles we probably don't need to pass params", "author": "PenghaiZhang", "createdAt": "2020-07-29T01:47:43Z", "path": "oeq-ts-rest-api/src/UserQuery.ts", "diffHunk": "@@ -0,0 +1,66 @@\n+import { GET } from './AxiosInstance';\n+import { is } from 'typescript-is';\n+import { UuidString } from './Common';\n+\n+export interface UserDetails {\n+  id: UuidString;\n+  username: string;\n+  firstName: string;\n+  lastName: string;\n+  email?: string;\n+}\n+\n+export interface GroupDetails {\n+  id: UuidString;\n+  name: string;\n+}\n+\n+export interface RoleDetails {\n+  id: UuidString;\n+  name: string;\n+}\n+\n+/**\n+ * Results for the Search operation, where lists will be populated based on Search criteria. If\n+ * the Search criteria results in no results for one of the lists, then they will be returned as\n+ * an empty list.\n+ *\n+ * Based on com.tle.web.api.users.LookupQueryResult\n+ */\n+export interface SearchResult {\n+  users: UserDetails[];\n+  groups: GroupDetails[];\n+  roles: RoleDetails[];\n+}\n+\n+export interface SearchParams {\n+  /** Wildcard supporting text string to filter results by. */\n+  q?: string;\n+  /** Include groups in the results. */\n+  groups: boolean;\n+  /** Include roles in the results. */\n+  roles: boolean;\n+  /** Include users in the results. */\n+  users: boolean;\n+}\n+\n+const isSearchResult = (instance: unknown): instance is SearchResult =>\n+  is<SearchResult>(instance);\n+\n+const USERQUERY_ROOT_PATH = '/userquery';\n+\n+/**\n+ * Search for users and related entities (i.e. groups and roles).\n+ *\n+ * @param apiBasePath Base URI to the oEQ institution and API\n+ * @param params Query parameters to customize result\n+ */\n+export const search = (\n+  apiBasePath: string,\n+  params: SearchParams", "originalCommit": "a602ad979872b85c35595dd761bfc3a054d6fab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5NDI1OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461994259", "bodyText": "We could, and probably get away with that... But I feel that'd be accidentally supported. It'd work for now, but if we changed things then people's code could easily break. It feels like here it'd just be better if people were deliberate. \ud83e\udd14", "author": "edalex-ian", "createdAt": "2020-07-29T02:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4OTg2Nw=="}], "type": "inlineReview"}]}