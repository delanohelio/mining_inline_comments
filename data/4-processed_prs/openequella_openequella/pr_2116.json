{"pr_number": 2116, "pr_title": "Improve Date range selector", "pr_createdAt": "2020-07-29T01:12:32Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2116", "timeline": [{"oid": "071b3c4104ef84ec08a63f7d2e5bf4eeb758785d", "url": "https://github.com/openequella/openEQUELLA/commit/071b3c4104ef84ec08a63f7d2e5bf4eeb758785d", "message": "Improvements for Date range selector\n\n1. Use MUI KeyboardDatePicker to allow typing a custom date; and\n2. Use state to control Date picker values; and\n3. Change the default label to 'From' and 'To'; and\n4. Create a util function to help convert a date object to string in\n   ISO format without changing time.", "committedDate": "2020-07-29T00:12:43Z", "type": "commit"}, {"oid": "ee64a86b98ddabaefd5c2efea2658feb5dcd9630", "url": "https://github.com/openequella/openEQUELLA/commit/ee64a86b98ddabaefd5c2efea2658feb5dcd9630", "message": "Ensure the updated date range is valid.", "committedDate": "2020-07-29T00:47:04Z", "type": "commit"}, {"oid": "6d8b830855ce6f1d3b2e2e98636acf52e8d2eb5c", "url": "https://github.com/openequella/openEQUELLA/commit/6d8b830855ce6f1d3b2e2e98636acf52e8d2eb5c", "message": "Don't update date range at the first render.", "committedDate": "2020-07-29T01:04:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MTg5Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r461981897", "bodyText": "The initial date range always meets one of the below four conditions and therefore onDateRangeChange is called. This results in an extra render which should not be performed. So here I want  this effect to skip the first render.", "author": "PenghaiZhang", "createdAt": "2020-07-29T01:18:07Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/DateRangeSelector.tsx", "diffHunk": "@@ -118,6 +120,38 @@ export const DateRangeSelector = ({\n   const startLabel = startDatePickerLabel ?? defaultStartDatePickerLabel;\n   const endLabel = endDatePickerLabel ?? defaultEndDatePickerLabel;\n \n+  /**\n+   * MUI KeyboardDatePicker requires its value to be controlled by state,\n+   * in order to properly parse and validate TextField inputs.\n+   */\n+  const [stateDateRange, setStateDateRange] = useState<DateRange | undefined>(\n+    dateRange\n+  );\n+\n+  const isInitialRender = useRef(true);", "originalCommit": "6d8b830855ce6f1d3b2e2e98636acf52e8d2eb5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4OTk3NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r461989974", "bodyText": "How would either of these fail the isValid check? If they're not undefined then they're a Date and shouldn't they be valid?", "author": "edalex-ian", "createdAt": "2020-07-29T01:48:06Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/DateRangeSelector.tsx", "diffHunk": "@@ -118,6 +120,38 @@ export const DateRangeSelector = ({\n   const startLabel = startDatePickerLabel ?? defaultStartDatePickerLabel;\n   const endLabel = endDatePickerLabel ?? defaultEndDatePickerLabel;\n \n+  /**\n+   * MUI KeyboardDatePicker requires its value to be controlled by state,\n+   * in order to properly parse and validate TextField inputs.\n+   */\n+  const [stateDateRange, setStateDateRange] = useState<DateRange | undefined>(\n+    dateRange\n+  );\n+\n+  const isInitialRender = useRef(true);\n+  useEffect(() => {\n+    if (isInitialRender.current) {\n+      isInitialRender.current = false;\n+      return;\n+    }\n+    const start = stateDateRange?.start;\n+    const end = stateDateRange?.end;\n+    const isStartValid = start && DateTime.fromJSDate(start).isValid;\n+    const isEndValid = end && DateTime.fromJSDate(end).isValid;", "originalCommit": "6d8b830855ce6f1d3b2e2e98636acf52e8d2eb5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAyNjU5NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r462026594", "bodyText": "The Date picker returns a value whose type is DateTime rather than Date.  An object of DateTime could be an invalid date. For example, users can put an incomplete date 01/01/202 in the TextField.\n\nYou can see the second log indicates a DateTime object has an invalid date.", "author": "PenghaiZhang", "createdAt": "2020-07-29T04:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4OTk3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAyOTEzNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r462029137", "bodyText": "Aaaahhhh gotcha! I thought it was post that. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-07-29T04:21:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4OTk3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5MDkwOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r461990908", "bodyText": "I would've been inclined to leave this as was (taking a parameter) so that you have a nice simple pure stand-alone function (easier to maintain and reason out). But it's done now, so up to you.", "author": "edalex-ian", "createdAt": "2020-07-29T01:51:32Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/DateRangeSelector.tsx", "diffHunk": "@@ -163,18 +197,18 @@ export const DateRangeSelector = ({\n    *\n    * @param dateRange A date range to be converted to a Quick date option label.\n    */\n-  const dateRangeToDateOptionConverter = (dateRange?: DateRange): string => {\n+  const dateRangeToDateOptionConverter = (): string => {", "originalCommit": "6d8b830855ce6f1d3b2e2e98636acf52e8d2eb5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5MjcwMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r461992703", "bodyText": "I think here we should either:\na. Use the Locale again; or\nb. Go with the more internationally acceptable ISO format.", "author": "edalex-ian", "createdAt": "2020-07-29T01:58:16Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/DateRangeSelector.tsx", "diffHunk": "@@ -224,36 +258,47 @@ export const DateRangeSelector = ({\n       {\n         field: \"start\",\n         label: startLabel,\n-        value: dateRange?.start,\n+        value: stateDateRange?.start,\n       },\n       {\n         field: \"end\",\n         label: endLabel,\n-        value: dateRange?.end,\n+        value: stateDateRange?.end,\n       },\n     ];\n \n-    return dateRangePickers.map(({ field, label, value }) => (\n-      <Grid item key={field}>\n-        <DatePicker\n-          disableFuture\n-          variant=\"inline\"\n-          inputVariant=\"outlined\"\n-          autoOk\n-          labelFunc={(value, invalidLabel) =>\n-            value?.toLocaleString() ?? invalidLabel\n-          }\n-          label={!value ? label : \"\"}\n-          value={value ?? null}\n-          onChange={(newDate: MaterialUiPickersDate) =>\n-            onDateRangeChange({\n-              ...dateRange,\n-              [field]: newDate?.toJSDate(),\n-            })\n-          }\n-        />\n-      </Grid>\n-    ));\n+    return dateRangePickers.map(({ field, label, value }) => {\n+      const isStart = field === \"start\";\n+      return (\n+        <Grid item key={field} xs={12} md={6}>\n+          <KeyboardDatePicker\n+            disableFuture\n+            variant=\"dialog\"\n+            clearable\n+            inputVariant=\"outlined\"\n+            autoOk\n+            // Show date in locale string, or nothing if date is null.\n+            labelFunc={(date, _) => {\n+              return date?.toLocaleString() ?? \"\";\n+            }}\n+            // TextField inputs are parsed to this format.\n+            format=\"dd/MM/yyyy\"", "originalCommit": "6d8b830855ce6f1d3b2e2e98636acf52e8d2eb5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAyNzUyMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r462027521", "bodyText": "I have not found any approach to change the format depending on locale. If we go with ISO, should we give some help texts ?", "author": "PenghaiZhang", "createdAt": "2020-07-29T04:14:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5MjcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzMzE3Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2116#discussion_r462033176", "bodyText": "Okay, as discussed, let's just go ISO on both sides and leave this for now.", "author": "edalex-ian", "createdAt": "2020-07-29T04:38:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5MjcwMw=="}], "type": "inlineReview"}, {"oid": "7713f2b19c91710551607ecb63efcb43f1de5bca", "url": "https://github.com/openequella/openEQUELLA/commit/7713f2b19c91710551607ecb63efcb43f1de5bca", "message": "Three tweaks for Date range selector\n\n1. Specify the locale used by MuiPickersUtilsProvider; and\n2. Rollback function 'dateRangeToDateOptionConverter' to take a parameter; and\n3. Make Date pickers parse and display date values in ISO format.", "committedDate": "2020-07-29T04:39:11Z", "type": "commit"}]}