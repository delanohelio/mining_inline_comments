{"pr_number": 2074, "pr_title": "Remember search options when going 'back' to the search page", "pr_createdAt": "2020-07-19T23:56:41Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2074", "timeline": [{"oid": "be55b9f1361e730641bd398ade6ca717fc058c4a", "url": "https://github.com/openequella/openEQUELLA/commit/be55b9f1361e730641bd398ade6ca717fc058c4a", "message": "Persist SearchPageOptions in history\n\nSo that when users go 'back' to the SearchPage the can continue with their previous search.", "committedDate": "2020-07-17T07:40:14Z", "type": "commit"}, {"oid": "ad3746dc02ee1b8950417395197e04779817df0d", "url": "https://github.com/openequella/openEQUELLA/commit/ad3746dc02ee1b8950417395197e04779817df0d", "message": "Refactor SearchBar to raise up state\n\nThe SearchBar was attempting to handle too much state, and this\nspecifically became problematic when trying to persist the Raw Mode\nsetting in history. Further, the business logic around Raw Mode had also\nended up in the UI layer (component) rather than the module.", "committedDate": "2020-07-17T07:48:53Z", "type": "commit"}, {"oid": "ade507381e8fb06c6180a5eb825c4741dc07bdf7", "url": "https://github.com/openequella/openEQUELLA/commit/ade507381e8fb06c6180a5eb825c4741dc07bdf7", "message": "Support storing Sort Order in history", "committedDate": "2020-07-17T07:49:02Z", "type": "commit"}, {"oid": "00570cf8f591233453a8f2bb602b9dda4a8edcc0", "url": "https://github.com/openequella/openEQUELLA/commit/00570cf8f591233453a8f2bb602b9dda4a8edcc0", "message": "Fix issue with Raw Mode flipping on submit", "committedDate": "2020-07-17T07:49:02Z", "type": "commit"}, {"oid": "18069e256b770ae6d3ae8312672962680d585acf", "url": "https://github.com/openequella/openEQUELLA/commit/18069e256b770ae6d3ae8312672962680d585acf", "message": "Rework tests to support refactored SearchPage/Bar/etc.", "committedDate": "2020-07-17T07:54:42Z", "type": "commit"}, {"oid": "e53a2a2214be8adf0af30ca236b4848a0cc4f1a0", "url": "https://github.com/openequella/openEQUELLA/commit/e53a2a2214be8adf0af30ca236b4848a0cc4f1a0", "message": "Reduce prominence of the Raw search toggle", "committedDate": "2020-07-17T07:54:46Z", "type": "commit"}, {"oid": "c471d3fdc8895efbaf19e845a7c537c5659624c1", "url": "https://github.com/openequella/openEQUELLA/commit/c471d3fdc8895efbaf19e845a7c537c5659624c1", "message": "Remove requirement to press enter in raw search mode\n\nThe team discussion decided this was unneeded complexity.", "committedDate": "2020-07-17T07:54:46Z", "type": "commit"}, {"oid": "2e5c6c623ad21ee90d6b33a20c424f580fff7305", "url": "https://github.com/openequella/openEQUELLA/commit/2e5c6c623ad21ee90d6b33a20c424f580fff7305", "message": "Tidy up SearchModule raw mode comments", "committedDate": "2020-07-20T00:03:00Z", "type": "commit"}, {"oid": "774c7ea8db4c46180a81aefb375568302d841f84", "url": "https://github.com/openequella/openEQUELLA/commit/774c7ea8db4c46180a81aefb375568302d841f84", "message": "Update SearchBar story\n\nSo as to match updated SearchBar.", "committedDate": "2020-07-20T02:14:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NTk3MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2074#discussion_r456995971", "bodyText": "May I ask why not use toHaveBeenCalledWith({...defaultSearchOptions, query: \"\"}) ?", "author": "PenghaiZhang", "createdAt": "2020-07-20T02:26:15Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchModule.test.ts", "diffHunk": "@@ -32,4 +32,40 @@ describe(\"SearchModule\", () => {\n     expect(searchResult.available).toBe(12);\n     expect(searchResult.results).toHaveLength(12);\n   });\n+\n+  const validateSearchQuery = (expectedQuery: string) => {\n+    const calls = mockedSearch.mock.calls;\n+    const params = calls[0][1]; // Second parameter of the call is the 'params'\n+    expect(params.query).toEqual(expectedQuery);\n+  };\n+\n+  it(\"should not append a wildcard for a search which is empty when trimmed\", async () => {\n+    mockedSearch.mockReset();\n+    await SearchModule.searchItems({\n+      ...SearchModule.defaultSearchOptions,\n+      query: \"   \",\n+    });\n+    validateSearchQuery(\"\");", "originalCommit": "774c7ea8db4c46180a81aefb375568302d841f84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyODY1OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2074#discussion_r457028659", "bodyText": "You may. :)\nIt's because under the hood in the search module, we then go and add additional values to make up the search params. And so I'm actually validating against the search params which includes things like statuses.\nIndeed, I initially did the exact thing you mention there - and was confused where all these LIVE, REVIEW etc ones were coming from... And then it clicked. See statuses at https://github.com/openequella/openEQUELLA/blob/component/new-search-page/Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchModule.ts#L54\n(As an aside, I do wonder if some point we'll want to support filtering on those. \ud83e\udd14 )", "author": "edalex-ian", "createdAt": "2020-07-20T04:05:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NTk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA0NDI5Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2074#discussion_r457044297", "bodyText": "Ah I see! Thanks for explaining!", "author": "PenghaiZhang", "createdAt": "2020-07-20T04:43:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NTk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NjI1Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2074#discussion_r456996253", "bodyText": "I am not familiar with mock.calls.  May I ask if 0 means this is the first call ? And what does 1 stand for ?", "author": "PenghaiZhang", "createdAt": "2020-07-20T02:27:55Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchModule.test.ts", "diffHunk": "@@ -32,4 +32,40 @@ describe(\"SearchModule\", () => {\n     expect(searchResult.available).toBe(12);\n     expect(searchResult.results).toHaveLength(12);\n   });\n+\n+  const validateSearchQuery = (expectedQuery: string) => {\n+    const calls = mockedSearch.mock.calls;\n+    const params = calls[0][1]; // Second parameter of the call is the 'params'", "originalCommit": "774c7ea8db4c46180a81aefb375568302d841f84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5OTQyNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2074#discussion_r456999426", "bodyText": "OK now I know calls[0][1] means The second arg of the first call", "author": "PenghaiZhang", "createdAt": "2020-07-20T02:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NjI1Mw=="}], "type": "inlineReview"}]}