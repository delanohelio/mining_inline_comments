{"pr_number": 2437, "pr_title": "Feature/integrate new search page in selection section", "pr_createdAt": "2020-10-19T06:16:56Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2437", "timeline": [{"oid": "b99fc0c6e7f4bb7332e976a757a441073533b3e6", "url": "https://github.com/openequella/openEQUELLA/commit/b99fc0c6e7f4bb7332e976a757a441073533b3e6", "message": "Display new search ui in Selection Section.", "committedDate": "2020-10-19T03:32:11Z", "type": "commit"}, {"oid": "bf5b601a3818474255f3327418857202cb71fefe", "url": "https://github.com/openequella/openEQUELLA/commit/bf5b601a3818474255f3327418857202cb71fefe", "message": "Add the new search page entry files in 'entrybuild'.", "committedDate": "2020-10-19T03:32:36Z", "type": "commit"}, {"oid": "149699d1856b8ad7479daf79fe638a58ca2c2f7a", "url": "https://github.com/openequella/openEQUELLA/commit/149699d1856b8ad7479daf79fe638a58ca2c2f7a", "message": "Rename the ID of new search page DIV.", "committedDate": "2020-10-19T03:32:49Z", "type": "commit"}, {"oid": "d2e7120b78cd11b66b06c72049a57facc0d32587", "url": "https://github.com/openequella/openEQUELLA/commit/d2e7120b78cd11b66b06c72049a57facc0d32587", "message": "Fix a broken comment format for RootSearchSection.", "committedDate": "2020-10-19T03:33:01Z", "type": "commit"}, {"oid": "8c7f31a63d3f4a43a79c0fbdab192748a9f3d39b", "url": "https://github.com/openequella/openEQUELLA/commit/8c7f31a63d3f4a43a79c0fbdab192748a9f3d39b", "message": "Selection Section CSS styles tweaks\n\n1. Make sure the new search UI display properly.\n2. Also improve other pages and the LMS side panel.", "committedDate": "2020-10-19T03:33:10Z", "type": "commit"}, {"oid": "7e0317a129fe3e54409b6c39ad572895fce45535", "url": "https://github.com/openequella/openEQUELLA/commit/7e0317a129fe3e54409b6c39ad572895fce45535", "message": "Show new search page in Selection Section when the mode is\n'structured'.", "committedDate": "2020-10-19T05:22:53Z", "type": "commit"}, {"oid": "5c2d907eaea575b90e1ddd0e90a1e40d9f1e6ec2", "url": "https://github.com/openequella/openEQUELLA/commit/5c2d907eaea575b90e1ddd0e90a1e40d9f1e6ec2", "message": "Improve the UI of Selection Section when it's in\n'selectOrAdd' mode.", "committedDate": "2020-10-19T06:06:00Z", "type": "commit"}, {"oid": "e789f2060cf834d7216027c5b486eb1fb20801ef", "url": "https://github.com/openequella/openEQUELLA/commit/e789f2060cf834d7216027c5b486eb1fb20801ef", "message": "Create header for RenderNewSearchPage.scala", "committedDate": "2020-10-19T22:26:13Z", "type": "commit"}, {"oid": "58d4cb55bbf970cf9dec9421315f3d6cf21295f1", "url": "https://github.com/openequella/openEQUELLA/commit/58d4cb55bbf970cf9dec9421315f3d6cf21295f1", "message": "Ensure CSS changes made for Selection Section do not\napply to other UI pages", "committedDate": "2020-10-20T00:42:05Z", "type": "commit"}, {"oid": "7fd77379af2b162c92a40cbd6c274fed27d8f7f0", "url": "https://github.com/openequella/openEQUELLA/commit/7fd77379af2b162c92a40cbd6c274fed27d8f7f0", "message": "Remove MUI class name conflicts in production environment.\n\nLoading NewSearchPage.tsx in Selection Section with New UI turned\non causes MUI class name conflicts. For example, there would be\ntwo styles named 'jss1'. This can be fixed by using 'Class Name\ngenerator' to differentiate styles.", "committedDate": "2020-10-21T01:16:59Z", "type": "commit"}, {"oid": "5cc78ca3e58394efb5c6e1127469e8642ff08560", "url": "https://github.com/openequella/openEQUELLA/commit/5cc78ca3e58394efb5c6e1127469e8642ff08560", "message": "Also display new search UI when Selection Session is in\nNORMAL layout.", "committedDate": "2020-10-21T03:28:30Z", "type": "commit"}, {"oid": "85357985dd7c44c219b455141f6df02331a6d0bc", "url": "https://github.com/openequella/openEQUELLA/commit/85357985dd7c44c219b455141f6df02331a6d0bc", "message": "Ensure new search UI displays properly with the Two Column\nLayout in Selection Session.", "committedDate": "2020-10-21T03:45:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4ODQ3NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r508988474", "bodyText": "I guess we don't need to use StylesProvider in dev environment ?", "author": "PenghaiZhang", "createdAt": "2020-10-21T04:52:51Z", "path": "Source/Plugins/Core/com.equella.core/js/entrydev/NewSearchPage.tsx", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { ThemeProvider } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import * as ReactDOM from \"react-dom\";\n+import { BrowserRouter } from \"react-router-dom\";\n+import { basePath } from \"../tsrc/mainui/App\";\n+import SearchPage from \"../tsrc/search/SearchPage\";\n+import { oeqTheme } from \"../tsrc/theme\";\n+\n+const searchPageProps = { updateTemplate: () => {} };\n+const renderSearchPage = () => {\n+  ReactDOM.render(\n+    <BrowserRouter basename={basePath}>\n+      <ThemeProvider theme={oeqTheme}>", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYwNjM1Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510606353", "bodyText": "I think we should keep it the same for both.", "author": "edalex-ian", "createdAt": "2020-10-23T05:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4ODQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4OTA1MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r508989050", "bodyText": "This 100vw will cause a problem - when there is a vertical scroll bar, the actual width of the page is bigger than 100vw, so a horizontal scroll bar gets displayed. If  100% is used instead, then we also need to add 100% to <main>...</main>, which seems to require some fundamental changes in template.tsx.", "author": "PenghaiZhang", "createdAt": "2020-10-21T04:54:54Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4461,22 +4472,37 @@ img.warningimg {\n }\n \n #selection-page {\n-  margin: 0 auto;\n-  width: 784px;\n-  position: relative;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  // The width of this div is Full viewport width minus vertical scrollbar width.\n+  // Ideally we should us JS to get scrollbar width.\n+  width: 100vw;", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4OTIwNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r508989205", "bodyText": "I just forgot to remove this comment. But I think we need to do what this comment says with JS in future EBP work so I did not do it now.", "author": "PenghaiZhang", "createdAt": "2020-10-21T04:55:22Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4461,22 +4472,37 @@ img.warningimg {\n }\n \n #selection-page {\n-  margin: 0 auto;\n-  width: 784px;\n-  position: relative;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  // The width of this div is Full viewport width minus vertical scrollbar width.", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU5NTY3MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510595670", "bodyText": "So this file is only for displaying the New Search Page inside a selection session? If so, could the filename be modified to reflect this?", "author": "mrblippy", "createdAt": "2020-10-23T05:09:02Z", "path": "Source/Plugins/Core/com.equella.core/js/entrydev/NewSearchPage.html", "diffHunk": "@@ -0,0 +1,3 @@\n+<div id=\"newSearchPage\">", "originalCommit": "b99fc0c6e7f4bb7332e976a757a441073533b3e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4ODg3OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r512388879", "bodyText": "Selection session and the Resource Selector are the two places where this file is used. And it can be used in other places as long as we need. And this file has been renamed to SearchPage.html.", "author": "PenghaiZhang", "createdAt": "2020-10-27T03:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU5NTY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYwNjA2NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510606064", "bodyText": "Would it be good to keep it shorter and go with something specific to oEQ. Maybe oeq-nsp. Then maybe we should also specify one for our normal full build - perhaps just oeq.", "author": "edalex-ian", "createdAt": "2020-10-23T05:22:26Z", "path": "Source/Plugins/Core/com.equella.core/js/entrybuild/NewSearchPage.tsx", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { ThemeProvider } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import * as ReactDOM from \"react-dom\";\n+import { BrowserRouter } from \"react-router-dom\";\n+import { basePath } from \"../tsrc/mainui/App\";\n+import SearchPage from \"../tsrc/search/SearchPage\";\n+import { oeqTheme } from \"../tsrc/theme\";\n+import { StylesProvider, createGenerateClassName } from \"@material-ui/core\";\n+\n+const searchPageProps = { updateTemplate: () => {} };\n+const generateClassName = createGenerateClassName({\n+  productionPrefix: \"new-search-page\",", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3NTAyNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r512375025", "bodyText": "The normal full build is not happy with StylesProvider due to PrivateHiddenCss.\nFor example, without the provider, a style from PrivateHiddenCss is named jss25 which is unique.\nHowever, with the provider being used and the prefix being oeq, this style is named oeq1 which is duplicated. I expect it should be named oeq25 or something else unique.\nHad talks with Tom and we guessed there are different ThemeProvider existing in oEQ but I have not found any yet.\nAny help is appreciated!", "author": "PenghaiZhang", "createdAt": "2020-10-27T02:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYwNjA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYwOTY5MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510609690", "bodyText": "Why 98%? Could be handy to add a comment here.", "author": "edalex-ian", "createdAt": "2020-10-23T05:26:25Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4461,22 +4472,37 @@ img.warningimg {\n }\n \n #selection-page {\n-  margin: 0 auto;\n-  width: 784px;\n-  position: relative;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  // The width of this div is Full viewport width minus vertical scrollbar width.\n+  // Ideally we should us JS to get scrollbar width.\n+  width: 100vw;\n+  overflow-x: hidden;\n }\n \n #selection-content {\n   background: url(../images/content-middle.gif) repeat-y 0px 0px;\n-  position: relative;\n-  width: 784px;\n-  float: left;\n+  width: 98%;", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM5MTUzOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r512391538", "bodyText": "I have changed this back to 100%", "author": "PenghaiZhang", "createdAt": "2020-10-27T03:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYwOTY5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYwOTg0Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510609843", "bodyText": "Why 98%? Could be handy to add a comment here.", "author": "edalex-ian", "createdAt": "2020-10-23T05:26:34Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4461,22 +4472,37 @@ img.warningimg {\n }\n \n #selection-page {\n-  margin: 0 auto;\n-  width: 784px;\n-  position: relative;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  // The width of this div is Full viewport width minus vertical scrollbar width.\n+  // Ideally we should us JS to get scrollbar width.\n+  width: 100vw;\n+  overflow-x: hidden;\n }\n \n #selection-content {\n   background: url(../images/content-middle.gif) repeat-y 0px 0px;\n-  position: relative;\n-  width: 784px;\n-  float: left;\n+  width: 98%;\n }\n \n #selection-content #breadcrumb-inner {\n   margin-left: 18px;\n }\n \n+#selection-content #new-search-page {\n+  margin: 0 15px 0 0;\n+  width: 80%;", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYxMDI3NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510610275", "bodyText": "I believe there is a variable along the lines of $doubleMargin which is 16px. Would that be appropriate here?", "author": "edalex-ian", "createdAt": "2020-10-23T05:27:04Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4461,22 +4472,37 @@ img.warningimg {\n }\n \n #selection-page {\n-  margin: 0 auto;\n-  width: 784px;\n-  position: relative;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  // The width of this div is Full viewport width minus vertical scrollbar width.\n+  // Ideally we should us JS to get scrollbar width.\n+  width: 100vw;\n+  overflow-x: hidden;\n }\n \n #selection-content {\n   background: url(../images/content-middle.gif) repeat-y 0px 0px;\n-  position: relative;\n-  width: 784px;\n-  float: left;\n+  width: 98%;\n }\n \n #selection-content #breadcrumb-inner {\n   margin-left: 18px;\n }\n \n+#selection-content #new-search-page {\n+  margin: 0 15px 0 0;", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMDkzMA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510620930", "bodyText": "The below code is not immediately clear, as it seems it has gone more with a pattern of augmentation. I wonder if instead the above code can be broken into a few useful private methods, and then further up in this method the below if becomes part of an if/else.", "author": "edalex-ian", "createdAt": "2020-10-23T05:39:00Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java", "diffHunk": "@@ -104,6 +106,20 @@ protected TemplateResult getTemplateResult(RenderEventContext info) {\n     templateResult.addNamedResult(\n         OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n \n+    // If new search UI should be rendered, keep the right column content and override", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMTMxOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510621318", "bodyText": "Could this fail to getNamedResult?", "author": "edalex-ian", "createdAt": "2020-10-23T05:39:23Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java", "diffHunk": "@@ -104,6 +106,20 @@ protected TemplateResult getTemplateResult(RenderEventContext info) {\n     templateResult.addNamedResult(\n         OneColumnLayout.BODY, CombinedRenderer.combineMultipleResults(cssIncludes));\n \n+    // If new search UI should be rendered, keep the right column content and override\n+    // the body content with new search UI.\n+    if (model.isNewSearchUIInNormalLayout()) {\n+      TemplateRenderable rightColumnContent =\n+          templateResult.getNamedResult(info, TwoColumnLayout.RIGHT);", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMjA5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510622092", "bodyText": "I reckon a bit of JavaDoc would go a long way here to help readers understand what you mean by 'Normal Layout'.", "author": "edalex-ian", "createdAt": "2020-10-23T05:40:07Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/search/base/AbstractRootSearchSection.java", "diffHunk": "@@ -150,5 +168,21 @@ public InfoBookmark getPermanentUrl() {\n     public void setPermanentUrl(InfoBookmark permanentUrl) {\n       this.permanentUrl = permanentUrl;\n     }\n+\n+    public boolean isNewSearchUIInNormalLayout() {", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMjkyOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r513102928", "bodyText": "I think this method is redundant so I remove it.", "author": "PenghaiZhang", "createdAt": "2020-10-28T00:05:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyMjA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyNjIwOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r510626209", "bodyText": "Should this be an else if, and then follow with an else to throw an IllegalStateException if we've ended up with an unexpected Layout? Or are there only two Layouts? (Maybe if there are only two, we might want to protect from the unknown future.", "author": "edalex-ian", "createdAt": "2020-10-23T05:44:39Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java", "diffHunk": "@@ -80,6 +85,21 @@ public SectionResult renderHtml(RenderEventContext context) {\n       throw new AccessDeniedException(\n           urlHelper.getString(\"missingprivileges\", WebConstants.SEARCH_PAGE_PRIVILEGE));\n     }\n+\n+    // If this method is triggered from Selection Section, then check if Selection Section\n+    // is in 'structured' mode. If yes, then render the new search page if it's enabled.\n+    SelectionSession selectionSession = selectionService.getCurrentSession(context);\n+    if (isNewSearchUIInSelectionSession(selectionSession)) {\n+      SimpleSectionResult newSearchUIContent = RenderNewSearchPage.renderNewSearchPage(context);\n+      // For 'structured' layout, output the new search UI content directly.\n+      // For 'addOrSelected' layout, save the content in model.\n+      if (selectionSession.getLayout() == Layout.COURSE) {\n+        return newSearchUIContent;\n+      } else {", "originalCommit": "85357985dd7c44c219b455141f6df02331a6d0bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MTY3Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r513791673", "bodyText": "After more digging I realised that there is no need to check what layout is used.\nBut to answer your question, there are three layouts: NORMAL, COURSE, SKINNY. So far, I have seen NORMAL and COURSE in selection session. Take Moodle as an example, if the openEQUELLA action is configured to use selectOrAdd then NORMAL is used, and if that's configured to use 'structured' then COURSE is used.", "author": "PenghaiZhang", "createdAt": "2020-10-28T22:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDYyNjIwOQ=="}], "type": "inlineReview"}, {"oid": "188bd95b7208f07a32d0ac4363d860e8c4859fd1", "url": "https://github.com/openequella/openEQUELLA/commit/188bd95b7208f07a32d0ac4363d860e8c4859fd1", "message": "Remove folder 'entrydev' and rename 'entrybuild' to\n'entrypoint'.", "committedDate": "2020-10-26T01:08:19Z", "type": "commit"}, {"oid": "aca1cbbaa9a34ce4f10abf48eaaa1c8452ae9d83", "url": "https://github.com/openequella/openEQUELLA/commit/aca1cbbaa9a34ce4f10abf48eaaa1c8452ae9d83", "message": "Update the js entry path used in 'package.json' and\n'tsconfig.json'.", "committedDate": "2020-10-26T02:56:46Z", "type": "commit"}, {"oid": "7932628147cb14e39b80f6ccf352393d99134685", "url": "https://github.com/openequella/openEQUELLA/commit/7932628147cb14e39b80f6ccf352393d99134685", "message": "Let the default function of 'index.tsx' take an argument\nwhich indicates where the function is called.", "committedDate": "2020-10-26T03:23:31Z", "type": "commit"}, {"oid": "d944d3eb4f1971f9534b2feabc6f653f484c1e7f", "url": "https://github.com/openequella/openEQUELLA/commit/d944d3eb4f1971f9534b2feabc6f653f484c1e7f", "message": "Update the html and ts files under 'entrypoint'\n\n1. Each html file now has their own ts file.\n2. Each ts file calls the default function of 'Index.tsx' with\na string literal argument.", "committedDate": "2020-10-26T03:40:56Z", "type": "commit"}, {"oid": "15573e4944b3e89d18fe18612c4c19611b5d4901", "url": "https://github.com/openequella/openEQUELLA/commit/15573e4944b3e89d18fe18612c4c19611b5d4901", "message": "Use 'runtypes' to determine what component should be rendered.", "committedDate": "2020-10-26T05:42:22Z", "type": "commit"}, {"oid": "f37e4482cd9384e989c3d106a70052600ebe14cc", "url": "https://github.com/openequella/openEQUELLA/commit/f37e4482cd9384e989c3d106a70052600ebe14cc", "message": "Use 'runtypes' to match the entry JS file", "committedDate": "2020-10-27T02:56:33Z", "type": "commit"}, {"oid": "3a76ecc0b149d3e0c1d493a8c51bb5df1ad9af0b", "url": "https://github.com/openequella/openEQUELLA/commit/3a76ecc0b149d3e0c1d493a8c51bb5df1ad9af0b", "message": "More Css work for selection session\n\n1. Make sure all pages have consistent horizontal margin by reusing\npre-defined variable '$doubleMargin'.\n\n2. Improve the LMS side panel in Normal layout.\n\n3. Adjust the width of contribution page.\n\n4. Add comments to explain the purposes of some styles.", "committedDate": "2020-10-27T04:58:25Z", "type": "commit"}, {"oid": "a1263d7e562fd1bf35830c0efe32e51da0342e01", "url": "https://github.com/openequella/openEQUELLA/commit/a1263d7e562fd1bf35830c0efe32e51da0342e01", "message": "Refactor the logic of generating contents of AbstractRootSearchSection.", "committedDate": "2020-10-28T01:05:01Z", "type": "commit"}, {"oid": "63ad4a65b5a31f9f4e13c35742441a24b80adcdf", "url": "https://github.com/openequella/openEQUELLA/commit/63ad4a65b5a31f9f4e13c35742441a24b80adcdf", "message": "Override the CSS of 'mainCols' and 'col2' in different contexts.", "committedDate": "2020-10-28T01:06:11Z", "type": "commit"}, {"oid": "ecd45a7d8cb01ca66324ebf3898ef3c85d591d45", "url": "https://github.com/openequella/openEQUELLA/commit/ecd45a7d8cb01ca66324ebf3898ef3c85d591d45", "message": "Update how to render new search UI in selection\nsession.\n\nThe previous approach results in unnecessary DOM tree\ndifferences: in COURSE layout new search UI is just under\n'selection-content-inner' whereas in NORMAL layout it is\nunder 'selection-content-inner/mainCols/col1'. This commit\nensure the DOM tree keeps consistent. By doing this, some\nCSS styles made previously can be removed.", "committedDate": "2020-10-29T06:57:32Z", "type": "commit"}, {"oid": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "url": "https://github.com/openequella/openEQUELLA/commit/b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "message": "Remove unused imports in RootSearchSection", "committedDate": "2020-10-29T08:42:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwNzk4MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514607981", "bodyText": "How about merging into a single parcelEntryFiles? It'd make things a bit simpler, as we don't need this fragmentation.", "author": "edalex-ian", "createdAt": "2020-10-29T22:40:41Z", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -9,20 +9,23 @@\n     \"dist\": \"target/resources/web/reactjs\",\n     \"jest\": {\n       \"verbose\": true\n-    }\n+    },\n+    \"entryHtml\": \"entrypoint/*.html\",\n+    \"entryScript\": \"entrypoint/scripts/*.js\",", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwODYwNA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514608604", "bodyText": "Should be a pinned version. Mind you though, this is now on develop, so whether you want to merge into component and then into this one......", "author": "edalex-ian", "createdAt": "2020-10-29T22:42:18Z", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -60,7 +63,8 @@\n     \"typescript-fsa\": \"2.5.0\",\n     \"typescript-fsa-reducers\": \"0.4.5\",\n     \"uuid\": \"8.3.1\",\n-    \"wicked-good-xpath\": \"1.3.0\"\n+    \"wicked-good-xpath\": \"1.3.0\",\n+    \"runtypes\": \"^5.0.1\"", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0Mjc1MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514642750", "bodyText": "My understanding of this config value is that it's really only used for the output of the purescript upload component which has historically gone into a target folder within the entry folders. With all that in mind I suggest a few things:\n\nThis folder should just use the shared target/ folder;\nAs a result, this config value becomes redundant - so don't add it - simply use that path prefix down in the bundleps:uploadlist task; and\nUpdate the require in entrypoint/scripts/uploadlist.js to be require(\"../../target/uploadlist.js\")\n\nThis will have the added bonus that the clean script will now also clean this previously missed file.\n(This is not a perfect solution, that would require a whole lot of extra tidy up of this package.json - but that's well outside the scope of this PR. We really need to better organise the output and target directories - and understand if we even need pulp)", "author": "edalex-ian", "createdAt": "2020-10-30T00:33:42Z", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -9,20 +9,23 @@\n     \"dist\": \"target/resources/web/reactjs\",\n     \"jest\": {\n       \"verbose\": true\n-    }\n+    },\n+    \"entryHtml\": \"entrypoint/*.html\",\n+    \"entryScript\": \"entrypoint/scripts/*.js\",\n+    \"entryTarget\": \"entrypoint/target\"", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQyNTY2Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r516425667", "bodyText": "Since we moved 'uploadlist.js' from entrypoint/target to target, we need to run npm run dev:build first after we do a clean.", "author": "PenghaiZhang", "createdAt": "2020-11-03T04:44:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0Mjc1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2MjQ2Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r517762467", "bodyText": "You mean rather than just going straight to npm run dev?\nBecause in theory sbt cleanrun would also have already done what's needed. \ud83e\udd14", "author": "edalex-ian", "createdAt": "2020-11-05T02:52:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0Mjc1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0ODA4Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514648083", "bodyText": "Nit (just maybe a bit more understandable as to intention).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const emptyFunc = () => {};\n          \n          \n            \n              const nop = () => {};", "author": "edalex-ian", "createdAt": "2020-10-30T00:53:50Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/App.tsx", "diffHunk": "@@ -183,95 +193,145 @@ function IndexPage() {\n   }\n \n   return (\n-    <BrowserRouter\n-      basename={basePath}\n-      getUserConfirmation={(message, cb) => {\n-        if (errorShowing.current) {\n-          errorShowing.current = false;\n-          setFullPageError(undefined);\n-          cb(true);\n-        } else {\n-          setNavAwayCallback({ message, cb });\n-        }\n-      }}\n-    >\n-      <Prompt\n-        when={Boolean(preventNavMessage) || errorShowing.current}\n-        message={nonBlankNavMessage}\n-      />\n-      <NavAwayDialog\n-        open={Boolean(navAwayCallback)}\n-        message={nonBlankNavMessage}\n-        navigateConfirm={(confirm) => {\n-          if (navAwayCallback) navAwayCallback.cb(confirm);\n-          if (confirm) setPreventNavMessage(undefined);\n-          setNavAwayCallback(undefined);\n+    <ThemeProvider theme={oeqTheme}>\n+      <BrowserRouter\n+        basename={basePath}\n+        getUserConfirmation={(message, cb) => {\n+          if (errorShowing.current) {\n+            errorShowing.current = false;\n+            setFullPageError(undefined);\n+            cb(true);\n+          } else {\n+            setNavAwayCallback({ message, cb });\n+          }\n         }}\n-      />\n-      <LegacyContent\n-        {...legacyContentProps}\n-        render={(content) => {\n-          const tp = content\n-            ? templatePropsForLegacy(content)\n-            : {\n-                ...templateProps,\n-                fullscreenMode: legacyContentProps.enabled\n-                  ? templateProps.fullscreenMode\n-                  : undefined,\n-              };\n-          const withErr = fullPageError\n-            ? { ...tp, title: fullPageError.error, fullscreenMode: undefined }\n-            : tp;\n-          const template = (\n-            <Template {...withErr} currentUser={currentUser}>\n-              {routeSwitch(content)}\n-            </Template>\n-          );\n-          const render = () => {\n-            if (!content || content.noForm) {\n-              return template;\n-            } else {\n-              const { form } = content.html;\n-              return (\n-                <>\n-                  <LegacyForm state={content.state}>{template}</LegacyForm>\n-                  {form && HtmlParser(form)}\n-                </>\n-              );\n-            }\n-          };\n-          return render();\n-        }}\n-      />\n-    </BrowserRouter>\n+      >\n+        <Prompt\n+          when={Boolean(preventNavMessage) || errorShowing.current}\n+          message={nonBlankNavMessage}\n+        />\n+        <NavAwayDialog\n+          open={Boolean(navAwayCallback)}\n+          message={nonBlankNavMessage}\n+          navigateConfirm={(confirm) => {\n+            if (navAwayCallback) navAwayCallback.cb(confirm);\n+            if (confirm) setPreventNavMessage(undefined);\n+            setNavAwayCallback(undefined);\n+          }}\n+        />\n+        <LegacyContent\n+          {...legacyContentProps}\n+          render={(content) => {\n+            const tp = content\n+              ? templatePropsForLegacy(content)\n+              : {\n+                  ...templateProps,\n+                  fullscreenMode: legacyContentProps.enabled\n+                    ? templateProps.fullscreenMode\n+                    : undefined,\n+                };\n+            const withErr = fullPageError\n+              ? { ...tp, title: fullPageError.error, fullscreenMode: undefined }\n+              : tp;\n+            const template = (\n+              <Template {...withErr} currentUser={currentUser}>\n+                {routeSwitch(content)}\n+              </Template>\n+            );\n+            const render = () => {\n+              if (!content || content.noForm) {\n+                return template;\n+              } else {\n+                const { form } = content.html;\n+                return (\n+                  <>\n+                    <LegacyForm state={content.state}>{template}</LegacyForm>\n+                    {form && HtmlParser(form)}\n+                  </>\n+                );\n+              }\n+            };\n+            return render();\n+          }}\n+        />\n+      </BrowserRouter>\n+    </ThemeProvider>\n   );\n }\n \n-interface AppProps {\n-  legacySettingsMode: boolean;\n+interface NewPageProps {\n+  page: ReactNode;\n+  classPrefix: string;\n+  isOpenInSelectonSession: boolean;\n }\n \n-export const App = ({ legacySettingsMode }: AppProps) => {\n-  if (legacySettingsMode) {\n-    return (\n-      <BrowserRouter basename={basePath} forceRefresh>\n-        <ThemeProvider theme={oeqTheme}>\n-          <SettingsPage\n-            refreshUser={() => {}}\n-            updateTemplate={() => {}}\n-            isReloadNeeded={false}\n-          />\n-        </ThemeProvider>\n-      </BrowserRouter>\n-    );\n-  } else {\n-    startHeartbeat();\n-    return (\n+/**\n+ * Build a single oEQ new UI page.\n+ * @param page A tsx page such as SearchPage.tsx\n+ * @param forceRefresh Whether to refresh the page when navigating to different route\n+ * @param classPrefix The prefix added in MUI styles\n+ */\n+function NewPage({ page, isOpenInSelectonSession, classPrefix }: NewPageProps) {\n+  const generateClassName = createGenerateClassName({\n+    productionPrefix: classPrefix,\n+  });\n+\n+  return (\n+    <StylesProvider generateClassName={generateClassName}>\n       <ThemeProvider theme={oeqTheme}>\n-        <IndexPage />\n+        <BrowserRouter\n+          basename={basePath}\n+          forceRefresh={!isOpenInSelectonSession}\n+        >\n+          {page}\n+        </BrowserRouter>\n       </ThemeProvider>\n-    );\n-  }\n+    </StylesProvider>\n+  );\n+}\n+\n+interface AppProps {\n+  entryPage: EntryPage;\n+}\n+\n+const App = ({ entryPage }: AppProps) => {\n+  const emptyFunc = () => {};", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0ODcxMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514648713", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              page: ReactNode;\n          \n          \n            \n              children: ReactNode;\n          \n      \n    \n    \n  \n\nAnd then that way below you can go with the more usual:\n<NewPage>\n  <SettingsPage ... />\n</NewPage>\n\nRather than the current slightly unusual:\n<NewPage\n  page={(<SettingsPage .../>})\n/>\n\n(It was that unusual pattern that caught my eye.)", "author": "edalex-ian", "createdAt": "2020-10-30T00:56:23Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/App.tsx", "diffHunk": "@@ -183,95 +193,145 @@ function IndexPage() {\n   }\n \n   return (\n-    <BrowserRouter\n-      basename={basePath}\n-      getUserConfirmation={(message, cb) => {\n-        if (errorShowing.current) {\n-          errorShowing.current = false;\n-          setFullPageError(undefined);\n-          cb(true);\n-        } else {\n-          setNavAwayCallback({ message, cb });\n-        }\n-      }}\n-    >\n-      <Prompt\n-        when={Boolean(preventNavMessage) || errorShowing.current}\n-        message={nonBlankNavMessage}\n-      />\n-      <NavAwayDialog\n-        open={Boolean(navAwayCallback)}\n-        message={nonBlankNavMessage}\n-        navigateConfirm={(confirm) => {\n-          if (navAwayCallback) navAwayCallback.cb(confirm);\n-          if (confirm) setPreventNavMessage(undefined);\n-          setNavAwayCallback(undefined);\n+    <ThemeProvider theme={oeqTheme}>\n+      <BrowserRouter\n+        basename={basePath}\n+        getUserConfirmation={(message, cb) => {\n+          if (errorShowing.current) {\n+            errorShowing.current = false;\n+            setFullPageError(undefined);\n+            cb(true);\n+          } else {\n+            setNavAwayCallback({ message, cb });\n+          }\n         }}\n-      />\n-      <LegacyContent\n-        {...legacyContentProps}\n-        render={(content) => {\n-          const tp = content\n-            ? templatePropsForLegacy(content)\n-            : {\n-                ...templateProps,\n-                fullscreenMode: legacyContentProps.enabled\n-                  ? templateProps.fullscreenMode\n-                  : undefined,\n-              };\n-          const withErr = fullPageError\n-            ? { ...tp, title: fullPageError.error, fullscreenMode: undefined }\n-            : tp;\n-          const template = (\n-            <Template {...withErr} currentUser={currentUser}>\n-              {routeSwitch(content)}\n-            </Template>\n-          );\n-          const render = () => {\n-            if (!content || content.noForm) {\n-              return template;\n-            } else {\n-              const { form } = content.html;\n-              return (\n-                <>\n-                  <LegacyForm state={content.state}>{template}</LegacyForm>\n-                  {form && HtmlParser(form)}\n-                </>\n-              );\n-            }\n-          };\n-          return render();\n-        }}\n-      />\n-    </BrowserRouter>\n+      >\n+        <Prompt\n+          when={Boolean(preventNavMessage) || errorShowing.current}\n+          message={nonBlankNavMessage}\n+        />\n+        <NavAwayDialog\n+          open={Boolean(navAwayCallback)}\n+          message={nonBlankNavMessage}\n+          navigateConfirm={(confirm) => {\n+            if (navAwayCallback) navAwayCallback.cb(confirm);\n+            if (confirm) setPreventNavMessage(undefined);\n+            setNavAwayCallback(undefined);\n+          }}\n+        />\n+        <LegacyContent\n+          {...legacyContentProps}\n+          render={(content) => {\n+            const tp = content\n+              ? templatePropsForLegacy(content)\n+              : {\n+                  ...templateProps,\n+                  fullscreenMode: legacyContentProps.enabled\n+                    ? templateProps.fullscreenMode\n+                    : undefined,\n+                };\n+            const withErr = fullPageError\n+              ? { ...tp, title: fullPageError.error, fullscreenMode: undefined }\n+              : tp;\n+            const template = (\n+              <Template {...withErr} currentUser={currentUser}>\n+                {routeSwitch(content)}\n+              </Template>\n+            );\n+            const render = () => {\n+              if (!content || content.noForm) {\n+                return template;\n+              } else {\n+                const { form } = content.html;\n+                return (\n+                  <>\n+                    <LegacyForm state={content.state}>{template}</LegacyForm>\n+                    {form && HtmlParser(form)}\n+                  </>\n+                );\n+              }\n+            };\n+            return render();\n+          }}\n+        />\n+      </BrowserRouter>\n+    </ThemeProvider>\n   );\n }\n \n-interface AppProps {\n-  legacySettingsMode: boolean;\n+interface NewPageProps {\n+  page: ReactNode;", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0OTA1Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514649057", "bodyText": "Be advised that this component has been pushed out into its own .tsx file on develop to assist with lazy loading. So I'd suggest you get that stuff merged across as you'll need to do the same (lazy loading) here/below.", "author": "edalex-ian", "createdAt": "2020-10-30T00:57:53Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/App.tsx", "diffHunk": "@@ -57,6 +64,9 @@ export const basePath = baseFullPath.substr(0, baseFullPath.length - 1);\n \n declare const renderData: RenderData | undefined;\n \n+/**\n+ * Build the full oEQ Index page.\n+ */\n function IndexPage() {", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0OTgzMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514649831", "bodyText": "Nice work with the pattern matching. Very tidy. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-10-30T00:59:31Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/App.tsx", "diffHunk": "@@ -183,95 +193,145 @@ function IndexPage() {\n   }\n \n   return (\n-    <BrowserRouter\n-      basename={basePath}\n-      getUserConfirmation={(message, cb) => {\n-        if (errorShowing.current) {\n-          errorShowing.current = false;\n-          setFullPageError(undefined);\n-          cb(true);\n-        } else {\n-          setNavAwayCallback({ message, cb });\n-        }\n-      }}\n-    >\n-      <Prompt\n-        when={Boolean(preventNavMessage) || errorShowing.current}\n-        message={nonBlankNavMessage}\n-      />\n-      <NavAwayDialog\n-        open={Boolean(navAwayCallback)}\n-        message={nonBlankNavMessage}\n-        navigateConfirm={(confirm) => {\n-          if (navAwayCallback) navAwayCallback.cb(confirm);\n-          if (confirm) setPreventNavMessage(undefined);\n-          setNavAwayCallback(undefined);\n+    <ThemeProvider theme={oeqTheme}>\n+      <BrowserRouter\n+        basename={basePath}\n+        getUserConfirmation={(message, cb) => {\n+          if (errorShowing.current) {\n+            errorShowing.current = false;\n+            setFullPageError(undefined);\n+            cb(true);\n+          } else {\n+            setNavAwayCallback({ message, cb });\n+          }\n         }}\n-      />\n-      <LegacyContent\n-        {...legacyContentProps}\n-        render={(content) => {\n-          const tp = content\n-            ? templatePropsForLegacy(content)\n-            : {\n-                ...templateProps,\n-                fullscreenMode: legacyContentProps.enabled\n-                  ? templateProps.fullscreenMode\n-                  : undefined,\n-              };\n-          const withErr = fullPageError\n-            ? { ...tp, title: fullPageError.error, fullscreenMode: undefined }\n-            : tp;\n-          const template = (\n-            <Template {...withErr} currentUser={currentUser}>\n-              {routeSwitch(content)}\n-            </Template>\n-          );\n-          const render = () => {\n-            if (!content || content.noForm) {\n-              return template;\n-            } else {\n-              const { form } = content.html;\n-              return (\n-                <>\n-                  <LegacyForm state={content.state}>{template}</LegacyForm>\n-                  {form && HtmlParser(form)}\n-                </>\n-              );\n-            }\n-          };\n-          return render();\n-        }}\n-      />\n-    </BrowserRouter>\n+      >\n+        <Prompt\n+          when={Boolean(preventNavMessage) || errorShowing.current}\n+          message={nonBlankNavMessage}\n+        />\n+        <NavAwayDialog\n+          open={Boolean(navAwayCallback)}\n+          message={nonBlankNavMessage}\n+          navigateConfirm={(confirm) => {\n+            if (navAwayCallback) navAwayCallback.cb(confirm);\n+            if (confirm) setPreventNavMessage(undefined);\n+            setNavAwayCallback(undefined);\n+          }}\n+        />\n+        <LegacyContent\n+          {...legacyContentProps}\n+          render={(content) => {\n+            const tp = content\n+              ? templatePropsForLegacy(content)\n+              : {\n+                  ...templateProps,\n+                  fullscreenMode: legacyContentProps.enabled\n+                    ? templateProps.fullscreenMode\n+                    : undefined,\n+                };\n+            const withErr = fullPageError\n+              ? { ...tp, title: fullPageError.error, fullscreenMode: undefined }\n+              : tp;\n+            const template = (\n+              <Template {...withErr} currentUser={currentUser}>\n+                {routeSwitch(content)}\n+              </Template>\n+            );\n+            const render = () => {\n+              if (!content || content.noForm) {\n+                return template;\n+              } else {\n+                const { form } = content.html;\n+                return (\n+                  <>\n+                    <LegacyForm state={content.state}>{template}</LegacyForm>\n+                    {form && HtmlParser(form)}\n+                  </>\n+                );\n+              }\n+            };\n+            return render();\n+          }}\n+        />\n+      </BrowserRouter>\n+    </ThemeProvider>\n   );\n }\n \n-interface AppProps {\n-  legacySettingsMode: boolean;\n+interface NewPageProps {\n+  page: ReactNode;\n+  classPrefix: string;\n+  isOpenInSelectonSession: boolean;\n }\n \n-export const App = ({ legacySettingsMode }: AppProps) => {\n-  if (legacySettingsMode) {\n-    return (\n-      <BrowserRouter basename={basePath} forceRefresh>\n-        <ThemeProvider theme={oeqTheme}>\n-          <SettingsPage\n-            refreshUser={() => {}}\n-            updateTemplate={() => {}}\n-            isReloadNeeded={false}\n-          />\n-        </ThemeProvider>\n-      </BrowserRouter>\n-    );\n-  } else {\n-    startHeartbeat();\n-    return (\n+/**\n+ * Build a single oEQ new UI page.\n+ * @param page A tsx page such as SearchPage.tsx\n+ * @param forceRefresh Whether to refresh the page when navigating to different route\n+ * @param classPrefix The prefix added in MUI styles\n+ */\n+function NewPage({ page, isOpenInSelectonSession, classPrefix }: NewPageProps) {\n+  const generateClassName = createGenerateClassName({\n+    productionPrefix: classPrefix,\n+  });\n+\n+  return (\n+    <StylesProvider generateClassName={generateClassName}>\n       <ThemeProvider theme={oeqTheme}>\n-        <IndexPage />\n+        <BrowserRouter\n+          basename={basePath}\n+          forceRefresh={!isOpenInSelectonSession}\n+        >\n+          {page}\n+        </BrowserRouter>\n       </ThemeProvider>\n-    );\n-  }\n+    </StylesProvider>\n+  );\n+}\n+\n+interface AppProps {\n+  entryPage: EntryPage;\n+}\n+\n+const App = ({ entryPage }: AppProps) => {\n+  const emptyFunc = () => {};\n+  const renderApp = match(\n+    [\n+      Literal(\"mainDiv\"),\n+      () => {\n+        startHeartbeat();\n+        return <IndexPage />;\n+      },\n+    ],\n+    [\n+      Literal(\"searchPage\"),\n+      () => (\n+        <NewPage\n+          page={<SearchPage updateTemplate={emptyFunc} />}\n+          classPrefix=\"oeq-nsp\"\n+          isOpenInSelectonSession\n+        />\n+      ),\n+    ],\n+    [\n+      Literal(\"settingsPage\"),\n+      () => (\n+        <NewPage\n+          page={\n+            <SettingsPage\n+              refreshUser={emptyFunc}\n+              updateTemplate={emptyFunc}\n+              isReloadNeeded={false}\n+            />\n+          }\n+          classPrefix=\"oeq-nst\"\n+          isOpenInSelectonSession={false}\n+        />\n+      ),\n+    ]\n+  );\n+  return renderApp(entryPage);", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY1MTYzNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514651637", "bodyText": "You probably want to look at using curvedCorners mixin whenever you find yourself doing this.", "author": "edalex-ian", "createdAt": "2020-10-30T01:02:36Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4701,12 +4720,13 @@ div#sssh_finishedButton {\n   border: none;\n   box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n   background: none;\n+  border-radius: 4px;\n }\n \n .box_head {\n   background-color: white;\n   border: none;\n-\n+  border-radius: 4px;", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY1MTc5OA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r514651798", "bodyText": "As above, look at using curvedCorners.", "author": "edalex-ian", "createdAt": "2020-10-30T01:02:49Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4720,6 +4740,7 @@ div#sssh_finishedButton {\n .box_content {\n   background: none;\n   border: none;\n+  border-radius: 4px;", "originalCommit": "b20cfec6310061e7e6c898feae5a2a0a6e8e0c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ce22a021f6a69b69c19ed9424ccb697e98c5b9f", "url": "https://github.com/openequella/openEQUELLA/commit/5ce22a021f6a69b69c19ed9424ccb697e98c5b9f", "message": "Merge branch 'component/new-search-page-in-selection-section' into feature/integrate-new-search-page-in-selection-section", "committedDate": "2020-11-02T05:43:12Z", "type": "commit"}, {"oid": "16122511c64fad3d2c788bef7c7536337bbe2082", "url": "https://github.com/openequella/openEQUELLA/commit/16122511c64fad3d2c788bef7c7536337bbe2082", "message": "Use the pinned version of 'runtypes'.", "committedDate": "2020-11-02T05:44:41Z", "type": "commit"}, {"oid": "9ae3500c57175e0a27447c9a3c715063e4ca64c3", "url": "https://github.com/openequella/openEQUELLA/commit/9ae3500c57175e0a27447c9a3c715063e4ca64c3", "message": "Wrap component IndexPage by ThemeProvider in App.tsx.", "committedDate": "2020-11-02T05:51:08Z", "type": "commit"}, {"oid": "839057e9546c2fb6b871a864c10366a0e14e1aec", "url": "https://github.com/openequella/openEQUELLA/commit/839057e9546c2fb6b871a864c10366a0e14e1aec", "message": "Reuse sass mixin 'curvedCorners' in CSS class 'box_head'\nand 'box_content'.", "committedDate": "2020-11-02T06:04:48Z", "type": "commit"}, {"oid": "d91192b3da938c05138ac8705a6368c8157eb4cd", "url": "https://github.com/openequella/openEQUELLA/commit/d91192b3da938c05138ac8705a6368c8157eb4cd", "message": "A couple tweaks for 'App.tsx'.\n\n1. Rename 'page' to 'children' for 'NewPageProps' and update\nhow 'children' is passed into 'NewPage'.\n2. Rename function 'emptyFunc' to 'nop'.", "committedDate": "2020-11-02T22:30:59Z", "type": "commit"}, {"oid": "b4084222b0d63147b1e9805de09e700274882465", "url": "https://github.com/openequella/openEQUELLA/commit/b4084222b0d63147b1e9805de09e700274882465", "message": "Move the compiled 'uploadlist.js' to the correct target folder.", "committedDate": "2020-11-03T02:45:40Z", "type": "commit"}, {"oid": "7c636222ec7d9916f7155ad8dfec057e63cf8ef2", "url": "https://github.com/openequella/openEQUELLA/commit/7c636222ec7d9916f7155ad8dfec057e63cf8ef2", "message": "Clean up the NPM scripts for Parcel build/watch.", "committedDate": "2020-11-03T03:04:14Z", "type": "commit"}, {"oid": "7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553", "url": "https://github.com/openequella/openEQUELLA/commit/7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553", "message": "Update react route to ensure new search UI displays\nproperly in Selection Session.", "committedDate": "2020-11-04T04:25:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDA5OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r517764099", "bodyText": "Oooh, this looks like something recently added to fix EBP stuff for 2020.2. Removing it's not removing a fix is it?", "author": "edalex-ian", "createdAt": "2020-11-05T02:58:39Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4511,7 +4531,6 @@ img.warningimg {\n \n .selectiondashboard #col2 {\n   width: 368px;\n-  margin-left: $doubleMargin;", "originalCommit": "7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDg3MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r517764870", "bodyText": "This change, combined with the above, looks like you're attempting to achieve the standard style defined in buttonShadowBorder. Should that be used instead? (And maybe still keeping the background declaration.)\nOtherwise at the very least, it should be using curvedCorners.", "author": "edalex-ian", "createdAt": "2020-11-05T03:01:25Z", "path": "Source/Plugins/Core/com.equella.core/resources/web/sass/legacy.scss", "diffHunk": "@@ -4701,12 +4720,13 @@ div#sssh_finishedButton {\n   border: none;\n   box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n   background: none;\n+  border-radius: 4px;", "originalCommit": "7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MzI2Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r517793266", "bodyText": "Yes buttonShadowBorder is good. Thanks for reminding!", "author": "PenghaiZhang", "createdAt": "2020-11-05T04:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDg3MA=="}], "type": "inlineReview"}, {"oid": "6868196bdbebadae9a708b0c336369d2679da32f", "url": "https://github.com/openequella/openEQUELLA/commit/6868196bdbebadae9a708b0c336369d2679da32f", "message": "Revert \"Update react route to ensure new search UI displays\"\n\nThis reverts commit 7e9f5f3e6d38383680ba7a2bfc3f1d7eb3c22553.", "committedDate": "2020-11-05T04:30:23Z", "type": "commit"}, {"oid": "38a5481ea4fd8f92a41ebe17d7189803136a7ec2", "url": "https://github.com/openequella/openEQUELLA/commit/38a5481ea4fd8f92a41ebe17d7189803136a7ec2", "message": "Support accessing Legacy Search page through\n'/access/selectoradd/searching.do'.\n\nThe intention of this commit is to differentiate the URL\nused to access the old Search UI from Selection Session.\nWith the changes made in #2414, once New Search UI is enabled,\n'searching.do' will be captured by react-route, which results\nin incorrect contents of Search page displayed in Selection\nSession. Therefore, we need to have a new URL to access old\nSearch page in Selection Session.", "committedDate": "2020-11-05T04:52:02Z", "type": "commit"}, {"oid": "fa77e5b06920ea2d4e8ee446b4b6cf34df2ec251", "url": "https://github.com/openequella/openEQUELLA/commit/fa77e5b06920ea2d4e8ee446b4b6cf34df2ec251", "message": "Reuse mixin 'buttonShadowBorder' for CSS class 'box'.", "committedDate": "2020-11-05T05:01:56Z", "type": "commit"}, {"oid": "adc09192d6b064403c861df6b90433df0f8328e1", "url": "https://github.com/openequella/openEQUELLA/commit/adc09192d6b064403c861df6b90433df0f8328e1", "message": "Remove unneeded prefix from the URL used to access\nold Search UI in 'selectoradd' mode.", "committedDate": "2020-11-05T05:14:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTU2MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2437#discussion_r517799561", "bodyText": "I'm just wondering how this may inadvertently affect clients who are not using the new ui?\nI can't think of any specific examples, but it might be safe to check if the new UI is enabled before using this path?", "author": "mrblippy", "createdAt": "2020-11-05T05:24:41Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/selection/SearchSelectable.java", "diffHunk": "@@ -50,7 +50,7 @@ public SectionInfo createSectionInfo(SectionInfo info, SelectionSession session)\n \n   @SuppressWarnings(\"nls\")\n   protected SectionInfo getSearchTree(SectionInfo info) {\n-    return controller.createForward(info, \"/searching.do\");\n+    return controller.createForward(info, \"/selectoradd/searching.do\");", "originalCommit": "adc09192d6b064403c861df6b90433df0f8328e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "20437199406caf8006162e7958fc2fa430348370", "url": "https://github.com/openequella/openEQUELLA/commit/20437199406caf8006162e7958fc2fa430348370", "message": "Only forward to \"/selectoradd/searching.do\" when new\nUI is enabled.", "committedDate": "2020-11-05T05:45:24Z", "type": "commit"}]}