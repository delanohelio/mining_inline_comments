{"pr_number": 2198, "pr_title": "Feature/search with classification terms", "pr_createdAt": "2020-08-18T05:55:35Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2198", "timeline": [{"oid": "26b090099fdeda33fbdefc9c06965e2c96db487b", "url": "https://github.com/openequella/openEQUELLA/commit/26b090099fdeda33fbdefc9c06965e2c96db487b", "message": "Add Classification terms to SearchOption.\n\nThis field is basically a list of terms selected from Classifications.\nThe final query sent to server is a combination of these terms and the\nquery which is formatted depending on raw mode.", "committedDate": "2020-08-18T05:21:46Z", "type": "commit"}, {"oid": "bcca68d55bf2e153d4c0d8865a9c6054c9131a70", "url": "https://github.com/openequella/openEQUELLA/commit/bcca68d55bf2e153d4c0d8865a9c6054c9131a70", "message": "Add Jest tests to ensure Classification terms and query are correctly processed.", "committedDate": "2020-08-18T05:43:01Z", "type": "commit"}, {"oid": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "url": "https://github.com/openequella/openEQUELLA/commit/18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "message": "Merge branch 'component/new-search-page' into feature/search-with-classification-terms", "committedDate": "2020-08-18T05:48:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1NjI5NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472556294", "bodyText": "I think this test is redundant, as it's already covered by the test on line 51.", "author": "edalex-ian", "createdAt": "2020-08-18T23:53:38Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/modules/SearchModule.test.ts", "diffHunk": "@@ -68,4 +68,42 @@ describe(\"SearchModule\", () => {\n     });\n     validateSearchQuery(`${queryTerm}`);\n   });\n+\n+  it(\"should append Classification terms to query if one or more Classifications are selected\", async () => {\n+    mockedSearch.mockReset();\n+    const query = \"technology\";\n+    const terms = [\"Java\", \"Scala\", \"SBT\"];\n+    await SearchModule.searchItems({\n+      ...SearchModule.defaultSearchOptions,\n+      query: query,\n+      rawMode: false,\n+      classificationTerms: terms,\n+    });\n+    validateSearchQuery(`${query}* AND (Java OR Scala OR SBT)`);\n+  });\n+\n+  it(\"should not append Classification terms to query if no Classifications are selected\", async () => {", "originalCommit": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1NjkxMA==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472556910", "bodyText": "It'd be preferable to have this function declared before it's use. (i.e. above the searchItems function, but after the formatQuery function.)", "author": "edalex-ian", "createdAt": "2020-08-18T23:55:44Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -106,6 +106,40 @@ export const searchItems = ({\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n+/**", "originalCommit": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1Nzk2OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472557969", "bodyText": "Should this more so be marked as an optional?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              classificationTerms: string[] | undefined\n          \n          \n            \n              classificationTerms?: string[]", "author": "edalex-ian", "createdAt": "2020-08-18T23:59:15Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -106,6 +106,40 @@ export const searchItems = ({\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n+/**\n+ * This function processes the query put in the SearchBar and terms selected from Classifications.\n+ * It firstly formats the query based on whether raw mode is on or off.\n+ * If there are no Classifications terms selected, it returns the formatted query.\n+ * Otherwise, it consolidates all terms into one Lucene query by OR, and combines the two queries\n+ * by AND, and return the combined one.\n+ *\n+ * @param query The query put in the SearchBar.\n+ * @param rawMode Whether raw mode is on or off.\n+ * @param classificationTerms A list of selected Classification terms.\n+ */\n+export const processQuery = (\n+  query: string | undefined,\n+  rawMode: boolean,\n+  classificationTerms: string[] | undefined", "originalCommit": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1OTI0Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472559246", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const terms: string =\n          \n          \n            \n                \"(\" +\n          \n          \n            \n                classificationTerms.reduce((previousTerm, nextTerm) =>\n          \n          \n            \n                  previousTerm.concat(or, nextTerm)\n          \n          \n            \n                ) +\n          \n          \n            \n                \")\";\n          \n          \n            \n              const terms: string =\n          \n          \n            \n                `(${classificationTerms.join(or)})`;", "author": "edalex-ian", "createdAt": "2020-08-19T00:03:55Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -106,6 +106,40 @@ export const searchItems = ({\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n+/**\n+ * This function processes the query put in the SearchBar and terms selected from Classifications.\n+ * It firstly formats the query based on whether raw mode is on or off.\n+ * If there are no Classifications terms selected, it returns the formatted query.\n+ * Otherwise, it consolidates all terms into one Lucene query by OR, and combines the two queries\n+ * by AND, and return the combined one.\n+ *\n+ * @param query The query put in the SearchBar.\n+ * @param rawMode Whether raw mode is on or off.\n+ * @param classificationTerms A list of selected Classification terms.\n+ */\n+export const processQuery = (\n+  query: string | undefined,\n+  rawMode: boolean,\n+  classificationTerms: string[] | undefined\n+): string | undefined => {\n+  // If query is undefined, then we want to keep 'undefined'; but otherwise let's pre-process it.\n+  const textQuery = query ? formatQuery(query, !rawMode) : undefined;\n+\n+  if (!classificationTerms || classificationTerms.length === 0) {\n+    return textQuery;\n+  }\n+\n+  const or = \" OR \";\n+  const and = \" AND \";\n+  // Each term should be concatenated by 'OR'.\n+  const terms: string =\n+    \"(\" +\n+    classificationTerms.reduce((previousTerm, nextTerm) =>\n+      previousTerm.concat(or, nextTerm)\n+    ) +\n+    \")\";", "originalCommit": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2ODkzMA==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472568930", "bodyText": "This is a lot more concise and readable!", "author": "PenghaiZhang", "createdAt": "2020-08-19T00:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1OTI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1OTU5NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472559595", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              return textQuery ? textQuery.concat(and, terms) : terms;\n          \n          \n            \n              return textQuery ? (textQuery+ and + terms) : terms;", "author": "edalex-ian", "createdAt": "2020-08-19T00:05:12Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -106,6 +106,40 @@ export const searchItems = ({\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n+/**\n+ * This function processes the query put in the SearchBar and terms selected from Classifications.\n+ * It firstly formats the query based on whether raw mode is on or off.\n+ * If there are no Classifications terms selected, it returns the formatted query.\n+ * Otherwise, it consolidates all terms into one Lucene query by OR, and combines the two queries\n+ * by AND, and return the combined one.\n+ *\n+ * @param query The query put in the SearchBar.\n+ * @param rawMode Whether raw mode is on or off.\n+ * @param classificationTerms A list of selected Classification terms.\n+ */\n+export const processQuery = (\n+  query: string | undefined,\n+  rawMode: boolean,\n+  classificationTerms: string[] | undefined\n+): string | undefined => {\n+  // If query is undefined, then we want to keep 'undefined'; but otherwise let's pre-process it.\n+  const textQuery = query ? formatQuery(query, !rawMode) : undefined;\n+\n+  if (!classificationTerms || classificationTerms.length === 0) {\n+    return textQuery;\n+  }\n+\n+  const or = \" OR \";\n+  const and = \" AND \";\n+  // Each term should be concatenated by 'OR'.\n+  const terms: string =\n+    \"(\" +\n+    classificationTerms.reduce((previousTerm, nextTerm) =>\n+      previousTerm.concat(or, nextTerm)\n+    ) +\n+    \")\";\n+  return textQuery ? textQuery.concat(and, terms) : terms;", "originalCommit": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1OTk0Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472559942", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * A list of classification terms.\n          \n          \n            \n               * A list of classification terms. (Typically a subset of those generated by Search Facets.)", "author": "edalex-ian", "createdAt": "2020-08-19T00:06:30Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -147,6 +181,10 @@ export interface SearchOptions {\n    * Filter search results to only include items with the specified statuses.\n    */\n   status?: OEQ.Common.ItemStatus[];\n+  /**\n+   * A list of classification terms.", "originalCommit": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2MDIxMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2198#discussion_r472560211", "bodyText": "Do we need to use this externally? Can export be removed?", "author": "edalex-ian", "createdAt": "2020-08-19T00:07:22Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -106,6 +106,40 @@ export const searchItems = ({\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n+/**\n+ * This function processes the query put in the SearchBar and terms selected from Classifications.\n+ * It firstly formats the query based on whether raw mode is on or off.\n+ * If there are no Classifications terms selected, it returns the formatted query.\n+ * Otherwise, it consolidates all terms into one Lucene query by OR, and combines the two queries\n+ * by AND, and return the combined one.\n+ *\n+ * @param query The query put in the SearchBar.\n+ * @param rawMode Whether raw mode is on or off.\n+ * @param classificationTerms A list of selected Classification terms.\n+ */\n+export const processQuery = (", "originalCommit": "18577c53481c6ad7a4f3518c8f5cedc9cbd33ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "879c71d8057f8a2d62ef95240923a8cc0fb991ec", "url": "https://github.com/openequella/openEQUELLA/commit/879c71d8057f8a2d62ef95240923a8cc0fb991ec", "message": "Tweaks for SearchModule and its test\n\n1. Move the definition of 'SearchOptions' to the top of the file.\n2. Move function 'processQuery' to above function 'searchItems'.\n3. Use 'array.join()' to handle multiple terms.\n4. Remove redundant test.", "committedDate": "2020-08-19T00:44:27Z", "type": "commit"}]}