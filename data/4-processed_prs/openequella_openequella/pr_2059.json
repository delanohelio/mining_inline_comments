{"pr_number": 2059, "pr_title": "Feature/collection selector", "pr_createdAt": "2020-07-16T04:56:35Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2059", "timeline": [{"oid": "920afecfadcea47726c59f05e4c598b784831fc9", "url": "https://github.com/openequella/openEQUELLA/commit/920afecfadcea47726c59f05e4c598b784831fc9", "message": "Create a new component for Collection Selector\n\n1. The component is implemented by MUI Autocomplete, which supports\n   multiple selection.\n2. Integrate this component with CollectionModule and Search page.\n3. Update function 'searchItems' and interface 'SearchOptions' to include\n   collections.", "committedDate": "2020-07-16T04:54:01Z", "type": "commit"}, {"oid": "3ce437bc462a8d8946dc1cc61810f25bf9461997", "url": "https://github.com/openequella/openEQUELLA/commit/3ce437bc462a8d8946dc1cc61810f25bf9461997", "message": "Add a Jest test for the Collection Selector.", "committedDate": "2020-07-16T04:54:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMTE0OA==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455511148", "bodyText": "I was trying to add one more  expect here.\nexpect(SearchModule.searchItems).toHaveBeenCalledWith({\n  ...defaultSearchOptions,\n  collections: selectedCollections\n})\n\nBut this expect always failed which is strange, but I will try to fix it.", "author": "PenghaiZhang", "createdAt": "2020-07-16T05:01:35Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -228,4 +239,17 @@ describe(\"<SearchPage/>\", () => {\n     and the search triggered by the Enter key.*/\n     expect(SearchModule.searchItems).toHaveBeenCalledTimes(2);\n   });\n+\n+  it(\"should filter search results by collections\", async () => {\n+    const selectedCollections = [\n+      \"8e3caf16-f3cb-b3dd-d403-e5eb8d545fff\",\n+      \"8e3caf16-f3cb-b3dd-d403-e5eb8d545ffe\",\n+    ];\n+    const collectionSelector = component.find(CollectionSelector);\n+    const handleCollectionChange: (\n+      collections: string[]\n+    ) => void = collectionSelector.prop(\"onSelectionChange\");\n+    await awaitAct(() => handleCollectionChange(selectedCollections));\n+    expect(SearchModule.searchItems).toHaveBeenCalledTimes(2);", "originalCommit": "3ce437bc462a8d8946dc1cc61810f25bf9461997", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "113c6b1f7ad417b25203dbd914253c060789e2a5", "url": "https://github.com/openequella/openEQUELLA/commit/113c6b1f7ad417b25203dbd914253c060789e2a5", "message": "Enable the portal of Autocomplete.", "committedDate": "2020-07-16T05:28:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMDEzNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455530135", "bodyText": "I did not know you could find like this directly. That's really neat.", "author": "SammyIsConfused", "createdAt": "2020-07-16T06:07:08Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -228,4 +239,17 @@ describe(\"<SearchPage/>\", () => {\n     and the search triggered by the Enter key.*/\n     expect(SearchModule.searchItems).toHaveBeenCalledTimes(2);\n   });\n+\n+  it(\"should filter search results by collections\", async () => {\n+    const selectedCollections = [\n+      \"8e3caf16-f3cb-b3dd-d403-e5eb8d545fff\",\n+      \"8e3caf16-f3cb-b3dd-d403-e5eb8d545ffe\",\n+    ];\n+    const collectionSelector = component.find(CollectionSelector);", "originalCommit": "113c6b1f7ad417b25203dbd914253c060789e2a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNDI2Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455534266", "bodyText": "Yes when we want to access a component instead of a dom element we can do this.", "author": "PenghaiZhang", "createdAt": "2020-07-16T06:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMDEzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMDQ3NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455530475", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Fire when collection selections are changed.\n          \n          \n            \n               * Fires when collection selections are changed.", "author": "SammyIsConfused", "createdAt": "2020-07-16T06:08:08Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/CollectionSelector.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { Checkbox, TextField } from \"@material-ui/core\";\n+import { useEffect, useState } from \"react\";\n+import { collectionListSummary } from \"../../modules/CollectionsModule\";\n+import { Autocomplete } from \"@material-ui/lab\";\n+import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n+import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n+\n+interface CollectionSelectorProps {\n+  /**\n+   * Fire when collection selections are changed.", "originalCommit": "113c6b1f7ad417b25203dbd914253c060789e2a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTI4NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455531284", "bodyText": "This should be a language string.", "author": "SammyIsConfused", "createdAt": "2020-07-16T06:10:33Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/CollectionSelector.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { Checkbox, TextField } from \"@material-ui/core\";\n+import { useEffect, useState } from \"react\";\n+import { collectionListSummary } from \"../../modules/CollectionsModule\";\n+import { Autocomplete } from \"@material-ui/lab\";\n+import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n+import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n+\n+interface CollectionSelectorProps {\n+  /**\n+   * Fire when collection selections are changed.\n+   * @param collections Selected collections.\n+   */\n+  onSelectionChange: (collections: string[]) => void;\n+}\n+\n+/**\n+ * As a refine search control, this component is used to filter search results by collections.\n+ */\n+export const CollectionSelector = ({\n+  onSelectionChange,\n+}: CollectionSelectorProps) => {\n+  const [collections, setCollections] = useState<[string, string][]>([]);\n+  useEffect(() => {\n+    collectionListSummary([\n+      \"SEARCH_COLLECTION\",\n+    ]).then((collections: Map<string, string>) =>\n+      setCollections(Array.from(collections))\n+    );\n+  }, []);\n+\n+  return (\n+    <Autocomplete\n+      multiple\n+      fullWidth\n+      limitTags={2}\n+      onChange={(event: React.ChangeEvent<{}>, value: [string, string][]) => {\n+        onSelectionChange(value.map((collection) => collection[0]));\n+      }}\n+      options={collections}\n+      disableCloseOnSelect\n+      getOptionLabel={(collection) => collection[1]}\n+      renderOption={(collection, { selected }) => (\n+        <>\n+          <Checkbox\n+            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n+            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n+            checked={selected}\n+          />\n+          {collection[1]}\n+        </>\n+      )}\n+      renderInput={(params) => (\n+        <TextField\n+          {...params}\n+          variant=\"outlined\"\n+          label=\"Collections\"", "originalCommit": "113c6b1f7ad417b25203dbd914253c060789e2a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMjQwMg==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455532402", "bodyText": "Yes! THanks for reminding!", "author": "PenghaiZhang", "createdAt": "2020-07-16T06:13:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMTI4NA=="}], "type": "inlineReview"}, {"oid": "422f7efef153684db8f91087a069cf56b6eb8f3a", "url": "https://github.com/openequella/openEQUELLA/commit/422f7efef153684db8f91087a069cf56b6eb8f3a", "message": "Add language strings for Collection selector.", "committedDate": "2020-07-16T06:17:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNDk1Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455534956", "bodyText": "I wonder if people are confused by collection[0] and collection[1]. They refer to the uuid and name of a collection. Perhaps another interface can help this ?", "author": "PenghaiZhang", "createdAt": "2020-07-16T06:21:01Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/CollectionSelector.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { Checkbox, TextField } from \"@material-ui/core\";\n+import { useEffect, useState } from \"react\";\n+import { collectionListSummary } from \"../../modules/CollectionsModule\";\n+import { Autocomplete } from \"@material-ui/lab\";\n+import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n+import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n+\n+interface CollectionSelectorProps {\n+  /**\n+   * Fire when collection selections are changed.\n+   * @param collections Selected collections.\n+   */\n+  onSelectionChange: (collections: string[]) => void;\n+}\n+\n+/**\n+ * As a refine search control, this component is used to filter search results by collections.\n+ */\n+export const CollectionSelector = ({\n+  onSelectionChange,\n+}: CollectionSelectorProps) => {\n+  const [collections, setCollections] = useState<[string, string][]>([]);\n+  useEffect(() => {\n+    collectionListSummary([\n+      \"SEARCH_COLLECTION\",\n+    ]).then((collections: Map<string, string>) =>\n+      setCollections(Array.from(collections))\n+    );\n+  }, []);\n+\n+  return (\n+    <Autocomplete\n+      multiple\n+      fullWidth\n+      limitTags={2}\n+      onChange={(event: React.ChangeEvent<{}>, value: [string, string][]) => {\n+        onSelectionChange(value.map((collection) => collection[0]));", "originalCommit": "113c6b1f7ad417b25203dbd914253c060789e2a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1MDMyMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r455550321", "bodyText": "If I remember right you can destructure.\n([uuid, name] => uuid)", "author": "SammyIsConfused", "createdAt": "2020-07-16T06:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNDk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyNjI5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456126292", "bodyText": "Yes, would be good to do the destructure. As one question I had earlier on in this was whether or not collection: string was the UUID or the name - and was hoping this would clarify for me (which in its current state does not).", "author": "edalex-ian", "createdAt": "2020-07-16T23:05:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNDk1Ng=="}], "type": "inlineReview"}, {"oid": "b7b4dc75f41161333fc3906d14acb62e9f169a06", "url": "https://github.com/openequella/openEQUELLA/commit/b7b4dc75f41161333fc3906d14acb62e9f169a06", "message": "Add a test to ensure selected collections are included in a search.", "committedDate": "2020-07-16T06:37:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3NzE3Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456077173", "bodyText": "Would it make sense to destructure this directly in the function params?", "author": "ChristianMurphy", "createdAt": "2020-07-16T21:04:47Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchModule.ts", "diffHunk": "@@ -40,7 +40,13 @@ export const defaultPagedSearchResult: OEQ.Common.PagedResult<OEQ.Search.SearchR\n export const searchItems = (\n   searchOptions: SearchOptions\n ): Promise<OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>> => {\n-  const { query, rowsPerPage, currentPage, sortOrder } = searchOptions;\n+  const {\n+    query,\n+    rowsPerPage,\n+    currentPage,\n+    sortOrder,\n+    collections,\n+  } = searchOptions;", "originalCommit": "b7b4dc75f41161333fc3906d14acb62e9f169a06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMzE4Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456133187", "bodyText": "Good idea!", "author": "PenghaiZhang", "createdAt": "2020-07-16T23:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3NzE3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyNTI3Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456125277", "bodyText": "For the other onChange type handlers above we've used handler functions (e.g. handleSortOrderChanged()). For consistency, let's stick with that. (As an aside, when working through some refactoring on this, having them split out like this (even for simple functions) has been handy.", "author": "edalex-ian", "createdAt": "2020-07-16T23:02:42Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -137,11 +138,11 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n \n       <Grid item xs={3}>\n         <RefineSearchPanel>\n-          <Typography>place holder 1</Typography>\n-          <Typography>place holder 2</Typography>\n-          <Typography>place holder 3</Typography>\n-          <Typography>place holder 4</Typography>\n-          <Typography>place holder 5</Typography>\n+          <CollectionSelector\n+            onSelectionChange={(collections: string[]) =>", "originalCommit": "b7b4dc75f41161333fc3906d14acb62e9f169a06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEyNjkxNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456126917", "bodyText": "In my current work to support 'back' to the search page, we need a prop that allows us to set the initial selections. Any chance you could add this?", "author": "edalex-ian", "createdAt": "2020-07-16T23:07:42Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/CollectionSelector.tsx", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { Checkbox, TextField } from \"@material-ui/core\";\n+import { useEffect, useState } from \"react\";\n+import { collectionListSummary } from \"../../modules/CollectionsModule\";\n+import { Autocomplete } from \"@material-ui/lab\";\n+import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n+import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface CollectionSelectorProps {\n+  /**\n+   * Fires when collection selections are changed.\n+   * @param collections Selected collections.\n+   */\n+  onSelectionChange: (collections: string[]) => void;\n+}", "originalCommit": "b7b4dc75f41161333fc3906d14acb62e9f169a06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzODU0NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456138545", "bodyText": "what are collection[0] and collection[1]?\nAre these things we could destructure and give more meaningful names?", "author": "ChristianMurphy", "createdAt": "2020-07-16T23:44:42Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/CollectionSelector.tsx", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { Checkbox, TextField } from \"@material-ui/core\";\n+import { useEffect, useState } from \"react\";\n+import { collectionListSummary } from \"../../modules/CollectionsModule\";\n+import { Autocomplete } from \"@material-ui/lab\";\n+import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n+import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface CollectionSelectorProps {\n+  /**\n+   * Fires when collection selections are changed.\n+   * @param collections Selected collections.\n+   */\n+  onSelectionChange: (collections: string[]) => void;\n+}\n+\n+/**\n+ * As a refine search control, this component is used to filter search results by collections.\n+ */\n+export const CollectionSelector = ({\n+  onSelectionChange,\n+}: CollectionSelectorProps) => {\n+  const collectionSelectorStrings =\n+    languageStrings.searchpage.collectionSelector;\n+  const [collections, setCollections] = useState<[string, string][]>([]);\n+  useEffect(() => {\n+    collectionListSummary([\n+      \"SEARCH_COLLECTION\",\n+    ]).then((collections: Map<string, string>) =>\n+      setCollections(Array.from(collections))\n+    );\n+  }, []);\n+\n+  return (\n+    <Autocomplete\n+      multiple\n+      fullWidth\n+      limitTags={2}\n+      onChange={(_, value: [string, string][]) => {\n+        onSelectionChange(value.map((collection) => collection[0]));\n+      }}\n+      options={collections}\n+      disableCloseOnSelect\n+      getOptionLabel={(collection) => collection[1]}\n+      renderOption={(collection, { selected }) => (\n+        <>\n+          <Checkbox\n+            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n+            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n+            checked={selected}\n+          />\n+          {collection[1]}", "originalCommit": "b7b4dc75f41161333fc3906d14acb62e9f169a06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MDQzMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456150431", "bodyText": "Yes I will give more meaningful names.", "author": "PenghaiZhang", "createdAt": "2020-07-17T00:25:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzODU0NQ=="}], "type": "inlineReview"}, {"oid": "4cf9953f3f0228d080626f4d084789482cf5b2d2", "url": "https://github.com/openequella/openEQUELLA/commit/4cf9953f3f0228d080626f4d084789482cf5b2d2", "message": "A few updates for Collection selector\n\n1. Allow the component to take an initial value to support the feature\n   of 'back to Search page'.\n2. The component's value is now controlled by state.\n3. Add a simplified type for Collection.\n4. Update Search page test to use the Collection type.", "committedDate": "2020-07-17T01:56:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4MDMxMA==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456180310", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A simplified type of Collection used when only collection'uuid and name are required.\n          \n          \n            \n             * A simplified type of Collection used when only collection uuid and name are required.", "author": "SammyIsConfused", "createdAt": "2020-07-17T02:16:09Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/CollectionsModule.ts", "diffHunk": "@@ -35,3 +35,17 @@ export const collectionListSummary = (\n     length: 100,\n     privilege: requiredPrivileges,\n   }).then(summarisePagedBaseEntities);\n+\n+/**\n+ * A simplified type of Collection used when only collection'uuid and name are required.", "originalCommit": "4cf9953f3f0228d080626f4d084789482cf5b2d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b6ab50681116b5b2106df7e8d6b85becd988a992", "url": "https://github.com/openequella/openEQUELLA/commit/b6ab50681116b5b2106df7e8d6b85becd988a992", "message": "Properly use 'getOptionSelected' to check if a collection is selected", "committedDate": "2020-07-17T02:20:54Z", "type": "commit"}, {"oid": "1404db5a04196b5f3687abdd931c244ca58505e2", "url": "https://github.com/openequella/openEQUELLA/commit/1404db5a04196b5f3687abdd931c244ca58505e2", "message": "Fix a typo issue for Collection module.\n\nCo-authored-by: SammyIsConfused <samantha.fisher@edalex.com>", "committedDate": "2020-07-17T02:22:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4OTQ2NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456189464", "bodyText": "If it's more useful, how about changing collectionListSummary to return Collection[]?", "author": "edalex-ian", "createdAt": "2020-07-17T02:52:10Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/CollectionSelector.tsx", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { Checkbox, TextField } from \"@material-ui/core\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  Collection,\n+  collectionListSummary,\n+} from \"../../modules/CollectionsModule\";\n+import { Autocomplete } from \"@material-ui/lab\";\n+import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n+import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface CollectionSelectorProps {\n+  /**\n+   * Fires when collection selections are changed.\n+   * @param collections Selected collections.\n+   */\n+  onSelectionChange: (collections: Collection[]) => void;\n+  /**\n+   * Initially selected collections.\n+   */\n+  value?: Collection[];\n+}\n+\n+/**\n+ * As a refine search control, this component is used to filter search results by collections.\n+ * The initially selected collections are either provided through props or an empty array.\n+ */\n+export const CollectionSelector = ({\n+  onSelectionChange,\n+  value,\n+}: CollectionSelectorProps) => {\n+  const collectionSelectorStrings =\n+    languageStrings.searchpage.collectionSelector;\n+  const [collections, setCollections] = useState<Collection[]>([]);\n+  const [selectedCollections, setSelectedCollections] = useState<Collection[]>(\n+    value ?? []\n+  );\n+\n+  useEffect(() => {\n+    collectionListSummary([", "originalCommit": "1404db5a04196b5f3687abdd931c244ca58505e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNjk1NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456206955", "bodyText": "Good idea.", "author": "PenghaiZhang", "createdAt": "2020-07-17T04:07:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4OTQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE5MDUxMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456190511", "bodyText": "Do you need that in state at all?\nI'd assume you'd just use value directly down on the AutoComplete's value, and then rely on two way binding via onSelectionChange. \ud83e\udd14", "author": "edalex-ian", "createdAt": "2020-07-17T02:56:21Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/CollectionSelector.tsx", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { Checkbox, TextField } from \"@material-ui/core\";\n+import { useEffect, useState } from \"react\";\n+import {\n+  Collection,\n+  collectionListSummary,\n+} from \"../../modules/CollectionsModule\";\n+import { Autocomplete } from \"@material-ui/lab\";\n+import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n+import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface CollectionSelectorProps {\n+  /**\n+   * Fires when collection selections are changed.\n+   * @param collections Selected collections.\n+   */\n+  onSelectionChange: (collections: Collection[]) => void;\n+  /**\n+   * Initially selected collections.\n+   */\n+  value?: Collection[];\n+}\n+\n+/**\n+ * As a refine search control, this component is used to filter search results by collections.\n+ * The initially selected collections are either provided through props or an empty array.\n+ */\n+export const CollectionSelector = ({\n+  onSelectionChange,\n+  value,\n+}: CollectionSelectorProps) => {\n+  const collectionSelectorStrings =\n+    languageStrings.searchpage.collectionSelector;\n+  const [collections, setCollections] = useState<Collection[]>([]);\n+  const [selectedCollections, setSelectedCollections] = useState<Collection[]>(\n+    value ?? []\n+  );", "originalCommit": "1404db5a04196b5f3687abdd931c244ca58505e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNjg2Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456206866", "bodyText": "The reason for using this state to avoid this warning:  A component is changing the uncontrolled value state of Autocomplete to be controlled.", "author": "PenghaiZhang", "createdAt": "2020-07-17T04:07:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE5MDUxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNzY3OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456207679", "bodyText": "But we can also avoid the warning by setting  value ?? []  to AutoComplete's value.", "author": "PenghaiZhang", "createdAt": "2020-07-17T04:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE5MDUxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwOTM4MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2059#discussion_r456209381", "bodyText": "Well, sounds like a plan to me. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-07-17T04:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE5MDUxMQ=="}], "type": "inlineReview"}, {"oid": "9e4bfa7d48e229a9419ffc1cca6ef84d81d72189", "url": "https://github.com/openequella/openEQUELLA/commit/9e4bfa7d48e229a9419ffc1cca6ef84d81d72189", "message": "Change the return of collectionListSummary from Map to Array.", "committedDate": "2020-07-17T04:35:39Z", "type": "commit"}, {"oid": "07e724b472d0e4d5b92e1745be6ffe507c21727c", "url": "https://github.com/openequella/openEQUELLA/commit/07e724b472d0e4d5b92e1745be6ffe507c21727c", "message": "Remove CollectionSelector's unnecessary state usage.", "committedDate": "2020-07-17T04:36:00Z", "type": "commit"}]}