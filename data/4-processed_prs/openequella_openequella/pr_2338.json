{"pr_number": 2338, "pr_title": "Add lookup functionality to UserQuery rest module, with a few basic tests", "pr_createdAt": "2020-09-28T01:01:45Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2338", "timeline": [{"oid": "b3ae10b45b92b700c8a3ca0f5989521ca2cff450", "url": "https://github.com/openequella/openEQUELLA/commit/b3ae10b45b92b700c8a3ca0f5989521ca2cff450", "message": "Add lookup functionality to UserQuery rest module, with a few basic tests", "committedDate": "2020-09-28T00:31:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0Mzg3Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495643872", "bodyText": "No need to put the type info in the comment. So this (and the below three) can be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** String array of User IDs to lookup. */\n          \n          \n            \n              /** User IDs to lookup. */\n          \n      \n    \n    \n  \n\nOr if you want more, keep it abstract:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** String array of User IDs to lookup. */\n          \n          \n            \n              /** List of User IDs to lookup. */", "author": "edalex-ian", "createdAt": "2020-09-28T01:05:17Z", "path": "oeq-ts-rest-api/src/UserQuery.ts", "diffHunk": "@@ -61,6 +61,15 @@ export interface SearchParams {\n   users: boolean;\n }\n \n+export interface LookupParams {\n+  /** String array of User IDs to lookup. */", "originalCommit": "b3ae10b45b92b700c8a3ca0f5989521ca2cff450", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0NDM0OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495644349", "bodyText": "Be good to highlight in this description how this is different from search().", "author": "edalex-ian", "createdAt": "2020-09-28T01:08:09Z", "path": "oeq-ts-rest-api/src/UserQuery.ts", "diffHunk": "@@ -81,3 +90,18 @@ export const search = (\n     isSearchResult,\n     params\n   );\n+\n+/**\n+ * Lookup for users and related entities (i.e. groups and roles).", "originalCommit": "b3ae10b45b92b700c8a3ca0f5989521ca2cff450", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0NDU0NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495644544", "bodyText": "Please include support for a validator here (like in GET).", "author": "edalex-ian", "createdAt": "2020-09-28T01:09:25Z", "path": "oeq-ts-rest-api/src/AxiosInstance.ts", "diffHunk": "@@ -68,4 +68,10 @@ export const PUT = <T, R>(path: string, data?: T): Promise<R> =>\n     .then((response: AxiosResponse<R>) => response.data)\n     .catch(catchHandler);\n \n+export const POST = <T, R>(path: string, data?: T): Promise<R> =>", "originalCommit": "b3ae10b45b92b700c8a3ca0f5989521ca2cff450", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY1MDU1Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495650556", "bodyText": "Ok, I will give it a go", "author": "mrblippy", "createdAt": "2020-09-28T01:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0NDU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0NDYzNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495644637", "bodyText": "Once you add support for a validator to POST, you want to add that in here too.", "author": "edalex-ian", "createdAt": "2020-09-28T01:09:56Z", "path": "oeq-ts-rest-api/src/UserQuery.ts", "diffHunk": "@@ -81,3 +90,18 @@ export const search = (\n     isSearchResult,\n     params\n   );\n+\n+/**\n+ * Lookup for users and related entities (i.e. groups and roles).\n+ *\n+ * @param apiBasePath Base URI to the oEQ institution and API\n+ * @param params Query parameters to customize result\n+ */\n+export const lookup = (\n+  apiBasePath: string,\n+  params: LookupParams\n+): Promise<SearchResult> =>\n+  POST<LookupParams, SearchResult>(\n+    apiBasePath + USERQUERY_ROOT_PATH + '/lookup',\n+    params\n+  );", "originalCommit": "b3ae10b45b92b700c8a3ca0f5989521ca2cff450", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6c784aaf947c9c7f2cc6a517652a3367273059f1", "url": "https://github.com/openequella/openEQUELLA/commit/6c784aaf947c9c7f2cc6a517652a3367273059f1", "message": "Add validator to axios POST function", "committedDate": "2020-09-28T03:26:45Z", "type": "commit"}, {"oid": "91c576e2830e2a48909d8a1a779a5ab078911ce5", "url": "https://github.com/openequella/openEQUELLA/commit/91c576e2830e2a48909d8a1a779a5ab078911ce5", "message": "Tidy up comments for UserQuery lookup", "committedDate": "2020-09-28T03:37:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY4MzEwOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495683109", "bodyText": "Do we know that the AxiosResponse contains R yet?\nI though that is what validator on line 87 is for?\nmight it be unknown at this point in time?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                .then((response: AxiosResponse<R>) => {\n          \n          \n            \n                .then((response: AxiosResponse<unknown>) => {", "author": "ChristianMurphy", "createdAt": "2020-09-28T04:28:23Z", "path": "oeq-ts-rest-api/src/AxiosInstance.ts", "diffHunk": "@@ -68,4 +68,29 @@ export const PUT = <T, R>(path: string, data?: T): Promise<R> =>\n     .then((response: AxiosResponse<R>) => response.data)\n     .catch(catchHandler);\n \n+/**\n+ * Executes a HTTP POST for a given path.\n+ *\n+ * @param path The URL path for the target POST\n+ * @param validator A function to perform runtime type checking against the result - typically with typescript-is\n+ * @param data The data to be sent in POST request\n+ */\n+export const POST = <T, R>(\n+  path: string,\n+  validator: (data: unknown) => data is R,\n+  data?: T\n+): Promise<R> =>\n+  axios\n+    .post(path, data)\n+    .then((response: AxiosResponse<R>) => {", "originalCommit": "91c576e2830e2a48909d8a1a779a5ab078911ce5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5Mjc3MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495692770", "bodyText": "Good catch. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-09-28T05:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY4MzEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5MzE4Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2338#discussion_r495693187", "bodyText": "Oh yes, i didn't update that after putting the validator in.  Thank you @ChristianMurphy", "author": "mrblippy", "createdAt": "2020-09-28T05:16:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY4MzEwOQ=="}], "type": "inlineReview"}, {"oid": "dd9a4be5855e4ecc1603ad1de500e07f687d6a26", "url": "https://github.com/openequella/openEQUELLA/commit/dd9a4be5855e4ecc1603ad1de500e07f687d6a26", "message": "Change AxiosResponse to unknown type, we won't know the type until the validator does its thing", "committedDate": "2020-09-28T05:21:16Z", "type": "commit"}]}