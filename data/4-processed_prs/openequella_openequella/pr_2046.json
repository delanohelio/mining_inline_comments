{"pr_number": 2046, "pr_title": "Add support for GET /api/collection to API module", "pr_createdAt": "2020-07-13T22:28:28Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2046", "timeline": [{"oid": "557fea271e165ccc84a4e4c4a38b297dfdc3b771", "url": "https://github.com/openequella/openEQUELLA/commit/557fea271e165ccc84a4e4c4a38b297dfdc3b771", "message": "Add support to API module for listing Collections", "committedDate": "2020-07-13T07:45:15Z", "type": "commit"}, {"oid": "65b647291081d042a3737bd513a006e94cd72c5c", "url": "https://github.com/openequella/openEQUELLA/commit/65b647291081d042a3737bd513a006e94cd72c5c", "message": "chore: Tidy up formatting", "committedDate": "2020-07-13T22:21:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTExMA==", "url": "https://github.com/openequella/openEQUELLA/pull/2046#discussion_r454011110", "bodyText": "Since params is optional,  I think we can just pass params.", "author": "PenghaiZhang", "createdAt": "2020-07-13T23:41:45Z", "path": "oeq-ts-rest-api/src/Collection.ts", "diffHunk": "@@ -0,0 +1,48 @@\n+import * as Common from './Common';\n+import { GET } from './AxiosInstance';\n+import * as Security from './Security';\n+import { is } from 'typescript-is';\n+\n+export interface CollectionSecurity extends Security.BaseEntitySecurity {\n+  dynamicRules: Security.DynamicRule[];\n+  metadata: Record<string, Security.ItemMetadataSecurity>;\n+  statuses: Record<string, Security.TargetListEntry[]>;\n+}\n+\n+export interface Collection extends Common.BaseEntity {\n+  schema: Common.BaseEntityReference;\n+  workflow?: Common.BaseEntityReference;\n+  reviewPeriod?: number;\n+  security: CollectionSecurity;\n+  filestoreId: string;\n+}\n+\n+const isPagedCollection = (\n+  instance: unknown\n+): instance is Common.PagedResult<Collection> =>\n+  is<Common.PagedResult<Collection>>(instance);\n+\n+const COLLECTION_ROOT_PATH = '/collection';\n+\n+/**\n+ * List all available collections which the currently authenticated user has access to. Results can\n+ * be customised based on params, and if the `full` param is specified then the return value is\n+ * actually `Collection` with all details.\n+ *\n+ * @param apiBasePath Base URI to the oEQ institution and API\n+ * @param params Query parameters to customize (and/or page) result\n+ */\n+export const listCollections = (\n+  apiBasePath: string,\n+  params?: Common.ListCommonParams\n+): Promise<Common.PagedResult<Common.BaseEntity>> => {\n+  // Only if the `full` param is specified do you get a whole Collection definition, otherwise\n+  // it's the bare minimum of BaseEntity.\n+  const validator = params?.full ? isPagedCollection : Common.isPagedBaseEntity;\n+\n+  return GET<Common.PagedResult<Common.BaseEntity>>(\n+    apiBasePath + COLLECTION_ROOT_PATH,\n+    validator,\n+    params ?? undefined", "originalCommit": "65b647291081d042a3737bd513a006e94cd72c5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMDc3Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2046#discussion_r454030777", "bodyText": "Aha! Nice find @PenghaiZhang . I'll fix this up in Schema as well, it's hangover from when this change was made:\n9b1f37f", "author": "edalex-ian", "createdAt": "2020-07-14T00:46:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTExMA=="}], "type": "inlineReview"}, {"oid": "1b135195c25f2e6f00757de29baf0147e8ceed6b", "url": "https://github.com/openequella/openEQUELLA/commit/1b135195c25f2e6f00757de29baf0147e8ceed6b", "message": "Remove unnecessary nullish coalescing operator\n\nThis was a hangover from back when listSchemas accepted `| null`. Was\nraised as part of PR #2046.", "committedDate": "2020-07-14T00:47:23Z", "type": "commit"}]}