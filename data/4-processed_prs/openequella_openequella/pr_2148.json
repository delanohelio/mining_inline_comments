{"pr_number": 2148, "pr_title": "Feature/search page clear all options", "pr_createdAt": "2020-08-06T08:04:57Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2148", "timeline": [{"oid": "26d2f3ec5f3d7ddbb088c30c47b13bab4fb97f40", "url": "https://github.com/openequella/openEQUELLA/commit/26d2f3ec5f3d7ddbb088c30c47b13bab4fb97f40", "message": "Add a new button to allow clearing search options.", "committedDate": "2020-08-06T01:34:55Z", "type": "commit"}, {"oid": "4a7713998cd0b6b7ecb8c89ac94a5f880a381031", "url": "https://github.com/openequella/openEQUELLA/commit/4a7713998cd0b6b7ecb8c89ac94a5f880a381031", "message": "Clear Date modified range when start a new search.", "committedDate": "2020-08-06T02:21:03Z", "type": "commit"}, {"oid": "1957e49c8f122a7574f44b67d1a8807c15702e98", "url": "https://github.com/openequella/openEQUELLA/commit/1957e49c8f122a7574f44b67d1a8807c15702e98", "message": "Clear SearchBar query when start a new search.", "committedDate": "2020-08-06T03:30:26Z", "type": "commit"}, {"oid": "23efa5059ed7f4daf5073ddc5e2a2376999f0ec2", "url": "https://github.com/openequella/openEQUELLA/commit/23efa5059ed7f4daf5073ddc5e2a2376999f0ec2", "message": "Make the Sorting Dropdown not look like a button.", "committedDate": "2020-08-06T08:00:52Z", "type": "commit"}, {"oid": "09f4ddc6f7d9745d65f14021d60a74760332daac", "url": "https://github.com/openequella/openEQUELLA/commit/09f4ddc6f7d9745d65f14021d60a74760332daac", "message": "A couple tweaks for clearing search options\n\n1. Remove styles previously applied to New search button.\n2. Ensure the state of Date range selector is accordingly\n   updated when perform a new search.", "committedDate": "2020-08-06T08:02:58Z", "type": "commit"}, {"oid": "01f08091907df02066f8ae1bbf2f557da6388c5c", "url": "https://github.com/openequella/openEQUELLA/commit/01f08091907df02066f8ae1bbf2f557da6388c5c", "message": "Jest test for clearing search options\n\nAs we are moving to a different testing framework, create a second describe block\nin which test cases are written with 'react-testing-library'. Later on when we\nrefactor previous test cases, they should be moved into the new describe block.", "committedDate": "2020-08-10T01:05:08Z", "type": "commit"}, {"oid": "3336a0e5ddc6ef853a7763672b635de3dba1e4e7", "url": "https://github.com/openequella/openEQUELLA/commit/3336a0e5ddc6ef853a7763672b635de3dba1e4e7", "message": "Merge branch 'component/new-search-page' into feature/search-page-clear-all-options", "committedDate": "2020-08-10T01:12:57Z", "type": "commit"}, {"oid": "2954445c825d89fd85d2dbf62965bcadf192c697", "url": "https://github.com/openequella/openEQUELLA/commit/2954445c825d89fd85d2dbf62965bcadf192c697", "message": "Remove window.scrollTo warning and MUI warning for SearchPage test.", "committedDate": "2020-08-10T01:53:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3OTU3Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467679576", "bodyText": "date range is both a prop and state?\nWould it make sense to unify it to one.\nFor example prop, and making it a controlled component (https://reactjs.org/docs/forms.html#controlled-components).", "author": "ChristianMurphy", "createdAt": "2020-08-10T04:09:30Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/DateRangeSelector.tsx", "diffHunk": "@@ -134,24 +134,36 @@ export const DateRangeSelector = ({\n       isInitialRender.current = false;\n       return;\n     }\n+    // When state is cleared, do not proceed to avoid duplicated search.\n+    if (!stateDateRange) {\n+      return;\n+    }\n     const start = stateDateRange?.start;\n     const end = stateDateRange?.end;\n     const isStartValid = start && DateTime.fromJSDate(start).isValid;\n     const isEndValid = end && DateTime.fromJSDate(end).isValid;\n \n-    // start is undefined and end is a valid date\n+    // start is undefined and end is a valid date.\n     const openStart = !start && isEndValid;\n-    // End is undefined and start is a valid date\n+    // End is undefined and start is a valid date.\n     const openEnd = !end && isStartValid;\n-    // Both are undefined\n+    // Both are undefined.\n     const openRange = !start && !end;\n-    // Both are valid dates and start is equal or less than end\n+    // Both are valid dates and start is equal or less than end.\n     const closedRange = isStartValid && isEndValid && start! <= end!;\n-    // Call onDateRangeChange for above four cases\n+    // Call onDateRangeChange for above four cases.\n     if (openStart || openEnd || openRange || closedRange) {\n       onDateRangeChange(stateDateRange);\n     }\n   }, [stateDateRange]);\n+\n+  // Only when prop dateRange is cleared, clear stateDateRange as well.\n+  useEffect(() => {\n+    if (!dateRange) {\n+      setStateDateRange(dateRange);\n+    }\n+  }, [dateRange]);", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY4OTY3Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467689672", "bodyText": "We used to have only one. We then changed to both prop and state because MUI Date picker required its valued controlled by state in order to properly validate values.\nWithout State:\n\nWtih state:\n\nI guess we can remove the prop date range \ud83e\udd14", "author": "PenghaiZhang", "createdAt": "2020-08-10T05:07:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3OTU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5ODA2Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467698066", "bodyText": "Do we need to check that the sort order indeed changes when we request it? (We discussed and thought not. Mind you though, if it did that'd probably be in a test elsewhere for the Sort Order Selector.)", "author": "edalex-ian", "createdAt": "2020-08-10T05:49:14Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -49,21 +52,86 @@ const searchPromise = mockSearch.mockImplementation(() =>\n   Promise.resolve(getSearchResult)\n );\n mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+window.scrollTo = jest.fn();\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"<SearchPage/> with react-testing-library\", () => {\n+  let container: HTMLElement = document.createElement(\"div\");\n+  const renderSearchPage = async () => {\n+    const { container } = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />\n+      </BrowserRouter>\n+    );\n+    // When Pagination shows the correct data, the render is completed.\n+    await waitFor(() =>\n+      screen.getByText(FIRST_PAGE_PAGINATION, { selector: \"p\" })\n+    );\n+    return container;\n+  };\n+\n+  beforeEach(async () => {\n+    container = await renderSearchPage();\n+  });\n+\n+  afterEach(() => {\n+    jest.clearAllMocks();\n+  });\n+\n+  it(\"should clear search options and perform a new search\", async () => {\n+    const query = \"clear query\";\n+    const queryBar = container.querySelector(\"#searchBar\");\n+    if (!queryBar) {\n+      throw new Error(\"Failed to locate the search bar, unable to continue.\");\n+    }\n+    const sortingDropdown = screen.getByDisplayValue(\n+      SearchSettingsModule.SortOrder.RANK\n+    );\n+    const newSearchButton = screen.getByText(\"New search\");\n+\n+    // We will change the debounced query so use fake timer here.\n+    jest.useFakeTimers(\"modern\");\n+    // Change search options now.\n+    fireEvent.change(queryBar, { target: { value: query } });\n+    await waitFor(() => {\n+      expect(queryBar).toHaveDisplayValue(query);\n+      jest.advanceTimersByTime(1000);\n+    });\n+    fireEvent.change(sortingDropdown, {\n+      target: { value: SearchSettingsModule.SortOrder.NAME },\n+    });\n+    await waitFor(() => {\n+      expect(sortingDropdown).toHaveValue(SearchSettingsModule.SortOrder.NAME);\n+    });", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5ODk3Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467698976", "bodyText": "Aaahhhh, yes. Nice. We'll probably be using them very soon to disable Refine Search controls inline with config. (Although I appreciate here you're using for something else.)", "author": "edalex-ian", "createdAt": "2020-08-10T05:53:00Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -93,6 +93,7 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n     // Show spinner before calling API to retrieve Search settings.\n     setShowSpinner(true);\n     getSearchSettingsFromServer().then((settings: SearchSettings) => {\n+      setSearchSettings(settings);", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5OTczNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467699735", "bodyText": "This isn't a typo. It's 'if and only if'.", "author": "edalex-ian", "createdAt": "2020-08-10T05:56:23Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -92,9 +92,18 @@ export default function SearchBar({\n     doSearch,\n   ]);\n \n+  /**\n+   * Update state when search query is cleared.\n+   */\n+  useEffect(() => {\n+    if (!query) {\n+      setCurrentQuery(query);\n+    }\n+  }, [query]);\n+\n   const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n     if (event.keyCode === ESCAPE_KEY_CODE && currentQuery) {\n-      // iff there is a current query, clear it out and trigger a search\n+      // if there is a current query, clear it out and trigger a search", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMDQ4Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467700487", "bodyText": "This doesn't need to be a JSDoc - should just be a oneliner comment. As it's not the kind of documentation that would add value standalone (i.e. in generated doco).", "author": "edalex-ian", "createdAt": "2020-08-10T05:59:41Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -92,9 +92,18 @@ export default function SearchBar({\n     doSearch,\n   ]);\n \n+  /**", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMDg5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467700892", "bodyText": "I feel I'm missing something as to why we need this. I'd like to avoid an effect if possible - as it definitely amps the complexity soon as a component has it. Goes from a simple component, to something a bit more involved.\nCould you elaborate as to why this is needed? I'm gathering you encountered an issue.", "author": "edalex-ian", "createdAt": "2020-08-10T06:01:31Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -92,9 +92,18 @@ export default function SearchBar({\n     doSearch,\n   ]);\n \n+  /**\n+   * Update state when search query is cleared.\n+   */\n+  useEffect(() => {\n+    if (!query) {\n+      setCurrentQuery(query);\n+    }\n+  }, [query]);", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMDk5MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467700990", "bodyText": "Ha! Amazing how much discussion went into this one line. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-08-10T06:01:54Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchOrderSelect.tsx", "diffHunk": "@@ -60,7 +60,6 @@ export const SearchOrderSelect = ({\n \n   return (\n     <Select\n-      variant=\"outlined\"", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMTIwMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467701201", "bodyText": "Be good to use the language string here. That way it's already in a constant, no need for us to have to maintain these.", "author": "edalex-ian", "createdAt": "2020-08-10T06:02:58Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -49,21 +52,86 @@ const searchPromise = mockSearch.mockImplementation(() =>\n   Promise.resolve(getSearchResult)\n );\n mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+window.scrollTo = jest.fn();\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"<SearchPage/> with react-testing-library\", () => {\n+  let container: HTMLElement = document.createElement(\"div\");\n+  const renderSearchPage = async () => {\n+    const { container } = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />\n+      </BrowserRouter>\n+    );\n+    // When Pagination shows the correct data, the render is completed.\n+    await waitFor(() =>\n+      screen.getByText(FIRST_PAGE_PAGINATION, { selector: \"p\" })\n+    );\n+    return container;\n+  };\n+\n+  beforeEach(async () => {\n+    container = await renderSearchPage();\n+  });\n+\n+  afterEach(() => {\n+    jest.clearAllMocks();\n+  });\n+\n+  it(\"should clear search options and perform a new search\", async () => {\n+    const query = \"clear query\";\n+    const queryBar = container.querySelector(\"#searchBar\");\n+    if (!queryBar) {\n+      throw new Error(\"Failed to locate the search bar, unable to continue.\");\n+    }\n+    const sortingDropdown = screen.getByDisplayValue(\n+      SearchSettingsModule.SortOrder.RANK\n+    );\n+    const newSearchButton = screen.getByText(\"New search\");", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwNzUwNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467707505", "bodyText": "Is spacing of 1 the default? You might not need to specify.", "author": "SammyIsConfused", "createdAt": "2020-08-10T06:26:20Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResultList.tsx", "diffHunk": "@@ -109,10 +116,21 @@ export const SearchResultList = ({\n       <CardHeader\n         title={searchPageStrings.subtitle}\n         action={\n-          <SearchOrderSelect\n-            value={orderSelectProps.value}\n-            onChange={orderSelectProps.onChange}\n-          />\n+          <Grid container spacing={1}>", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzMDI5Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r468230297", "bodyText": "The default spacing is 0 I reckon.", "author": "PenghaiZhang", "createdAt": "2020-08-10T22:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwNzUwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwODI2NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r467708264", "bodyText": "I dunno if we need to specify that it uses react-testing-library here \ud83e\udd14", "author": "SammyIsConfused", "createdAt": "2020-08-10T06:29:03Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -49,21 +52,86 @@ const searchPromise = mockSearch.mockImplementation(() =>\n   Promise.resolve(getSearchResult)\n );\n mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+window.scrollTo = jest.fn();\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"<SearchPage/> with react-testing-library\", () => {", "originalCommit": "2954445c825d89fd85d2dbf62965bcadf192c697", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzMTE3NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r468231175", "bodyText": "We just specified it for a short term. When we refactor the whole test we will remove it.", "author": "PenghaiZhang", "createdAt": "2020-08-10T22:58:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwODI2NA=="}], "type": "inlineReview"}, {"oid": "015849ee94fd601a4e6e5ec16ab9846cfaff5824", "url": "https://github.com/openequella/openEQUELLA/commit/015849ee94fd601a4e6e5ec16ab9846cfaff5824", "message": "Tidy ups for SearchPage test and SearchBar.\n\n1. Reuse language strings and remove unnecessary expect in tests; and\n2. Update comments for SearchBar.", "committedDate": "2020-08-10T23:24:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0NTAzNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2148#discussion_r468245035", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              //Update state when search query is cleared.\n          \n          \n            \n              // Update state when search query is cleared.", "author": "ChristianMurphy", "createdAt": "2020-08-10T23:43:20Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -92,6 +92,13 @@ export default function SearchBar({\n     doSearch,\n   ]);\n \n+  //Update state when search query is cleared.", "originalCommit": "015849ee94fd601a4e6e5ec16ab9846cfaff5824", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "334b14fa8a6a732d357c6cad19ba70e96088cd97", "url": "https://github.com/openequella/openEQUELLA/commit/334b14fa8a6a732d357c6cad19ba70e96088cd97", "message": "Update SearchBar comments.\n\nCo-authored-by: Christian Murphy <christian.murphy.42@gmail.com>", "committedDate": "2020-08-10T23:56:50Z", "type": "commit"}, {"oid": "7682428742f51f8bc5669e29e7d9050d286a6df0", "url": "https://github.com/openequella/openEQUELLA/commit/7682428742f51f8bc5669e29e7d9050d286a6df0", "message": "Merge branch 'component/new-search-page' into feature/search-page-clear-all-options", "committedDate": "2020-08-11T05:52:28Z", "type": "commit"}, {"oid": "6f5df4f77d9fcc45edb29d2559ddb08d0fa5ed3f", "url": "https://github.com/openequella/openEQUELLA/commit/6f5df4f77d9fcc45edb29d2559ddb08d0fa5ed3f", "message": "Resolve branch divergence.", "committedDate": "2020-08-11T05:59:09Z", "type": "commit"}]}