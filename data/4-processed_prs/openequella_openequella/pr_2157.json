{"pr_number": 2157, "pr_title": "Feature/refine by user", "pr_createdAt": "2020-08-10T02:37:44Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2157", "timeline": [{"oid": "366b9004d8306825e6c8f9e5b219f318af3ccc8f", "url": "https://github.com/openequella/openEQUELLA/commit/366b9004d8306825e6c8f9e5b219f318af3ccc8f", "message": "chore(storybook): Ensure Roboto font is available\n\nOur UI uses this font, so we're not properly seeing things in Storybook without it.", "committedDate": "2020-08-10T02:20:07Z", "type": "commit"}, {"oid": "2b605fe6d4580a93d1c6e34651f0a014f16162a1", "url": "https://github.com/openequella/openEQUELLA/commit/2b605fe6d4580a93d1c6e34651f0a014f16162a1", "message": "front-end: Fix UserSearch label wrapping\n\nThe label was wrapping when using Roboto font, so instead we now ensure that the field is full width of the container. Issue will still be seen on very small containers - but then that is possibly a display context we don't support.", "committedDate": "2020-08-10T02:20:07Z", "type": "commit"}, {"oid": "f0ef1e0fd0f36ede60e54e370bd125507e8820ec", "url": "https://github.com/openequella/openEQUELLA/commit/f0ef1e0fd0f36ede60e54e370bd125507e8820ec", "message": "front-end: Add spinner for UserSearch", "committedDate": "2020-08-10T02:20:08Z", "type": "commit"}, {"oid": "2311dc5ee109604658efbbe7df16abeed6cf2f14", "url": "https://github.com/openequella/openEQUELLA/commit/2311dc5ee109604658efbbe7df16abeed6cf2f14", "message": "front-end: Add a component for filtering by Owner", "committedDate": "2020-08-10T02:20:08Z", "type": "commit"}, {"oid": "698a4c0ba5fa2c28a91a910f88006eebb35a07c4", "url": "https://github.com/openequella/openEQUELLA/commit/698a4c0ba5fa2c28a91a910f88006eebb35a07c4", "message": "front-end: Integrate Owner filter to search page", "committedDate": "2020-08-10T02:20:08Z", "type": "commit"}, {"oid": "6ca7695eaa5280961e85a0cc1d6c96a96d86d690", "url": "https://github.com/openequella/openEQUELLA/commit/6ca7695eaa5280961e85a0cc1d6c96a96d86d690", "message": "front-end: Missed a language string", "committedDate": "2020-08-10T02:20:08Z", "type": "commit"}, {"oid": "7f9b8911ab55502df64549a4326992b09c336aa1", "url": "https://github.com/openequella/openEQUELLA/commit/7f9b8911ab55502df64549a4326992b09c336aa1", "message": "front-end: Add tests for OwnerSelector", "committedDate": "2020-08-10T02:20:08Z", "type": "commit"}, {"oid": "019aae6703dbc4873649e27d90620797ff498a67", "url": "https://github.com/openequella/openEQUELLA/commit/019aae6703dbc4873649e27d90620797ff498a67", "message": "front-end: Add id attributes to Refine Search controls\n\nTo assist in testing and theming.", "committedDate": "2020-08-10T02:20:08Z", "type": "commit"}, {"oid": "48b54ad774387f9c928eba664c384a75592f850d", "url": "https://github.com/openequella/openEQUELLA/commit/48b54ad774387f9c928eba664c384a75592f850d", "message": "front-end: Add tests for OwnerSelector on SearchPage", "committedDate": "2020-08-10T02:20:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MTE3Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467691173", "bodyText": "We had talks about using spread for objects in Storybook. As I recall, actions are fine with spread. So why not do\n{...commonParams}?", "author": "PenghaiZhang", "createdAt": "2020-08-10T05:15:19Z", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/search/OwnerSelector.stories.tsx", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";\n+import { action } from \"@storybook/addon-actions\";\n+import * as UserSearchMock from \"../../__mocks__/UserSearch.mock\";\n+\n+export default {\n+  title: \"Search/OwnerSelector\",\n+  component: OwnerSelector,\n+};\n+\n+const commonParams = {\n+  onClearSelect: action(\"onClearSelect\"),\n+  onSelect: action(\"onSelect\"),\n+  userListProvider: UserSearchMock.userDetailsProvider,\n+};\n+\n+export const NoSelectedUser = () => <OwnerSelector {...commonParams} />;\n+\n+export const SelectedUser = () => (\n+  <OwnerSelector\n+    onClearSelect={action(\"onClearSelect\")}\n+    onSelect={action(\"onSelect\")}\n+    userListProvider={UserSearchMock.userDetailsProvider}", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcxODIwOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467718209", "bodyText": "You raise a good question. Not sure why I took them off here, as it all works fine. Fixed.", "author": "edalex-ian", "createdAt": "2020-08-10T06:59:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MTE3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MTI3NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467691274", "bodyText": "Would it be easier to read if use Promise.resolve() ?", "author": "PenghaiZhang", "createdAt": "2020-08-10T05:15:55Z", "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/UserSearch.mock.ts", "diffHunk": "@@ -58,9 +58,12 @@ export const users: OEQ.UserQuery.UserDetails[] = [\n  *\n  * @param query A simple string to filter by (no wildcard support)\n  */\n-export const userDetailsProvider = (\n+export const userDetailsProvider = async (\n   query?: string\n-): Promise<OEQ.UserQuery.UserDetails[]> =>\n-  new Promise((resolve) =>\n+): Promise<OEQ.UserQuery.UserDetails[]> => {\n+  // A sleep to emulate latency\n+  await new Promise((resolve) => setTimeout(resolve, 500));\n+  return new Promise((resolve) =>", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyMDU4Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467720582", "bodyText": "Could be. Less to read. Change. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-08-10T07:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MTI3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MjIyNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467692227", "bodyText": "matches return a boolean so I think we can remove as boolean  ?", "author": "PenghaiZhang", "createdAt": "2020-08-10T05:21:19Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/MuiQueries.ts", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { queryByText } from \"@testing-library/react\";\n+\n+/**\n+ * Helper function to find MUI buttons with React Testing Library.\n+ *\n+ * @param container A root element to start the search from\n+ * @param text The text to identify the button by.\n+ */\n+export const queryMuiButtonByText = (container: HTMLElement, text: string) =>\n+  queryByText(\n+    container,\n+    (content: string, element: HTMLElement) =>\n+      content === text && (element.parentElement?.matches(\"button\") as boolean)", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyMjY0Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467722643", "bodyText": "The coercian is due to the safe navigator from the parentElement?.. That is, if it can't get the parentElement (or it's undefined) then the resulting null will resolve to an explicit false (and keep TS happy).\nWithout:\n    __tests__/tsrc/MuiQueries.ts:29:5 - error TS2345: Argument of type '(content: string, element: HTMLElement) => boolean | undefined' is not assignable to parameter of type 'Matcher'.\n      Type '(content: string, element: HTMLElement) => boolean | undefined' is not assignable to type 'MatcherFunction'.\n        Type 'boolean | undefined' is not assignable to type 'boolean'.\n          Type 'undefined' is not assignable to type 'boolean'.", "author": "edalex-ian", "createdAt": "2020-08-10T07:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MjIyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0MDA2NQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468240065", "bodyText": "Ah I see! \ud83d\udc4d", "author": "PenghaiZhang", "createdAt": "2020-08-10T23:27:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MjIyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzczOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467693738", "bodyText": "Do we want to use await waitFor(() => searchPromise ) instead ?", "author": "PenghaiZhang", "createdAt": "2020-08-10T05:29:09Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -28,34 +28,118 @@ import { act } from \"react-dom/test-utils\";\n import * as SearchModule from \"../../../tsrc/modules/SearchModule\";\n import * as CollectionsModule from \"../../../tsrc/modules/CollectionsModule\";\n import * as SearchSettingsModule from \"../../../tsrc/modules/SearchSettingsModule\";\n+import * as UserModule from \"../../../tsrc/modules/UserModule\";\n import { BrowserRouter } from \"react-router-dom\";\n import { CircularProgress } from \"@material-ui/core\";\n import { CollectionSelector } from \"../../../tsrc/search/components/CollectionSelector\";\n import { paginatorControls } from \"../components/SearchPaginationTestHelper\";\n import { DateRangeSelector } from \"../../../tsrc/components/DateRangeSelector\";\n+import * as UserSearchMock from \"../../../__mocks__/UserSearch.mock\";\n+import { render, RenderResult, screen, waitFor } from \"@testing-library/react\";\n+import {\n+  clearSelection,\n+  selectUser,\n+} from \"./components/OwnerSelectTestHelpers\";\n \n const SEARCHBAR_ID = \"input[id='searchBar']\";\n const RAW_SEARCH_TOGGLE_ID = \"input[id='rawSearch']\";\n+\n+const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n+const mockListUsers = jest.spyOn(UserModule, \"listUsers\");\n const mockSearch = jest.spyOn(SearchModule, \"searchItems\");\n const mockSearchSettings = jest.spyOn(\n   SearchSettingsModule,\n   \"getSearchSettingsFromServer\"\n );\n-const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n-const searchSettingPromise = mockSearchSettings.mockImplementation(() =>\n-  Promise.resolve(SearchSettingsModule.defaultSearchSettings)\n-);\n-const searchPromise = mockSearch.mockImplementation(() =>\n-  Promise.resolve(getSearchResult)\n+\n+const searchSettingPromise = mockSearchSettings.mockResolvedValue(\n+  SearchSettingsModule.defaultSearchSettings\n );\n-mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+const searchPromise = mockSearch.mockResolvedValue(getSearchResult);\n+\n+mockCollections.mockResolvedValue(getCollectionMap);\n+mockListUsers.mockResolvedValue(UserSearchMock.users);\n+\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"Refine search by Owner\", () => {\n+  const testUser = UserSearchMock.users[0];\n+  let page: RenderResult;\n+\n+  beforeEach(async () => {\n+    window.history.replaceState({}, \"Clean history state\");\n+    page = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />{\" \"}\n+      </BrowserRouter>\n+    );\n+    // Wait for the first completion of initial search\n+    await act(async () => {", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyNTkxNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467725916", "bodyText": "Not sure I follow.\nwaitFor works by repeatedly calling the passed function at a set interval for a maximum timeout period until it stops getting an Error thrown. All we want to do here is wait for the promise call to complete - however we need to wrap it in an act to ensure we don't get the error:\nconsole.error\n    Warning: An update to SearchPage inside a test was not wrapped in act(...).\n\nThe test passes, but we get yet another console error.\nAm I missing something?", "author": "edalex-ian", "createdAt": "2020-08-10T07:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1Njc3OA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468256778", "bodyText": "Hmmm, I just checked out your branch and ran the whole test and I did not see this warning again. I saw three warnings: one about MUI unique \"key\" prop, one about window.scrollTo and one about MuiPickersUtilsProvider.", "author": "PenghaiZhang", "createdAt": "2020-08-11T00:23:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2MDY2Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468260662", "bodyText": "Correct. You only get the error if you remove the act call.", "author": "edalex-ian", "createdAt": "2020-08-11T00:37:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5NDg4OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467694889", "bodyText": "Is there any reason that you need this argument ? In next line, can we just use page.container ? This function is not shared to other tests.", "author": "PenghaiZhang", "createdAt": "2020-08-10T05:34:05Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -28,34 +28,118 @@ import { act } from \"react-dom/test-utils\";\n import * as SearchModule from \"../../../tsrc/modules/SearchModule\";\n import * as CollectionsModule from \"../../../tsrc/modules/CollectionsModule\";\n import * as SearchSettingsModule from \"../../../tsrc/modules/SearchSettingsModule\";\n+import * as UserModule from \"../../../tsrc/modules/UserModule\";\n import { BrowserRouter } from \"react-router-dom\";\n import { CircularProgress } from \"@material-ui/core\";\n import { CollectionSelector } from \"../../../tsrc/search/components/CollectionSelector\";\n import { paginatorControls } from \"../components/SearchPaginationTestHelper\";\n import { DateRangeSelector } from \"../../../tsrc/components/DateRangeSelector\";\n+import * as UserSearchMock from \"../../../__mocks__/UserSearch.mock\";\n+import { render, RenderResult, screen, waitFor } from \"@testing-library/react\";\n+import {\n+  clearSelection,\n+  selectUser,\n+} from \"./components/OwnerSelectTestHelpers\";\n \n const SEARCHBAR_ID = \"input[id='searchBar']\";\n const RAW_SEARCH_TOGGLE_ID = \"input[id='rawSearch']\";\n+\n+const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n+const mockListUsers = jest.spyOn(UserModule, \"listUsers\");\n const mockSearch = jest.spyOn(SearchModule, \"searchItems\");\n const mockSearchSettings = jest.spyOn(\n   SearchSettingsModule,\n   \"getSearchSettingsFromServer\"\n );\n-const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n-const searchSettingPromise = mockSearchSettings.mockImplementation(() =>\n-  Promise.resolve(SearchSettingsModule.defaultSearchSettings)\n-);\n-const searchPromise = mockSearch.mockImplementation(() =>\n-  Promise.resolve(getSearchResult)\n+\n+const searchSettingPromise = mockSearchSettings.mockResolvedValue(\n+  SearchSettingsModule.defaultSearchSettings\n );\n-mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+const searchPromise = mockSearch.mockResolvedValue(getSearchResult);\n+\n+mockCollections.mockResolvedValue(getCollectionMap);\n+mockListUsers.mockResolvedValue(UserSearchMock.users);\n+\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"Refine search by Owner\", () => {\n+  const testUser = UserSearchMock.users[0];\n+  let page: RenderResult;\n+\n+  beforeEach(async () => {\n+    window.history.replaceState({}, \"Clean history state\");\n+    page = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />{\" \"}\n+      </BrowserRouter>\n+    );\n+    // Wait for the first completion of initial search\n+    await act(async () => {\n+      await searchPromise;\n+    });\n+  });\n+\n+  afterEach(() => {\n+    // Needed to keep Enzyme tests below happy\n+    jest.clearAllMocks();\n+  });\n+\n+  const getOwnerFilter = (container: Element): HTMLElement => {", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyNzE0Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467727147", "bodyText": "This is deliberate the make the function a nice unit. The inputs and outputs are (mostly) known - leaning towards a more pure function. Not just closing over various variables which may change.\nI think we should be doing more of this, and be cautious not to be doing almost OO style coding by closing over variables in our current scope. Can make for harder maintenance and refactoring later on.", "author": "edalex-ian", "createdAt": "2020-08-10T07:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5NDg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0MjA3Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468242077", "bodyText": "Yeah I agree! Good choice!", "author": "PenghaiZhang", "createdAt": "2020-08-10T23:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5NDg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5ODY2Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467698663", "bodyText": "Is there any handler listening to this event?", "author": "PenghaiZhang", "createdAt": "2020-08-10T05:51:41Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/UserSearch.tsx", "diffHunk": "@@ -88,6 +94,7 @@ const UserSearch = ({\n         setUsers([]);\n         setSelectedUser(undefined);\n         setHasSearched(false);\n+        event.stopPropagation();", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyNzY5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467727692", "bodyText": "Yup. If you place this generic component in say... a Dialog... you press enter to clear the field (which it does) but then also triggers the dialog close. So it makes sense to stop it on this field.\nThoughts?", "author": "edalex-ian", "createdAt": "2020-08-10T07:25:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5ODY2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0NTczNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468245736", "bodyText": "If we don't want the dialog to be closed when click escape, we can add disableEscapeKeyDown to the dialog.", "author": "PenghaiZhang", "createdAt": "2020-08-10T23:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5ODY2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0OTg3Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468249876", "bodyText": "Cool. Might leave here for now though - as it feels like it's a concern for UserSearch - but if later we feel we do want it to percolate for some reason we can revisit.", "author": "edalex-ian", "createdAt": "2020-08-10T23:59:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5ODY2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjQ0Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467702443", "bodyText": "Do you want to explicitly say the type of selection could be undefined? If no we can do selection?: OEQ.UserQuery.UserDetails .", "author": "PenghaiZhang", "createdAt": "2020-08-10T06:08:11Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OwnerSelector.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import * as React from \"react\";\n+import { useState } from \"react\";\n+import {\n+  Button,\n+  Dialog,\n+  DialogActions,\n+  DialogContent,\n+  DialogTitle,\n+  Grid,\n+  IconButton,\n+  List,\n+  ListItem,\n+  ListItemIcon,\n+  ListItemSecondaryAction,\n+  ListItemText,\n+} from \"@material-ui/core\";\n+import { AccountCircle } from \"@material-ui/icons\";\n+import DeleteIcon from \"@material-ui/icons/Delete\";\n+import UserSearch from \"../../components/UserSearch\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface OwnerSelectorProps {\n+  /** The currently selected user or. */\n+  value?: OEQ.UserQuery.UserDetails;\n+  /** Handler for when current selection is cleared. */\n+  onClearSelect: () => void;\n+  /** Handler for when a user is selected. */\n+  onSelect: (selection: OEQ.UserQuery.UserDetails) => void;\n+  /** Function which will provide the list of users for UserSearch. */\n+  userListProvider?: (query?: string) => Promise<OEQ.UserQuery.UserDetails[]>;\n+}\n+\n+const OwnerSelector = ({\n+  value,\n+  onClearSelect,\n+  onSelect,\n+  userListProvider,\n+}: OwnerSelectorProps) => {\n+  const [showFindUserDialog, setShowFindUserDialog] = useState<boolean>(false);\n+\n+  const handleCloseFindUserDialog = (\n+    selection: OEQ.UserQuery.UserDetails | undefined", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyODM5Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467728397", "bodyText": "Ah yes, bad habit of mine. Will fix.", "author": "edalex-ian", "createdAt": "2020-08-10T07:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjQ0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5OTYyMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467699623", "bodyText": "Confused - is this a stray comment or in the wrong place?", "author": "SammyIsConfused", "createdAt": "2020-08-10T05:55:45Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/components/UserSearchTestHelpers.ts", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+// Helper function to execute a search (assuming rendered component)", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMTEyMg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467731122", "bodyText": "Stray evolutionary comment. Removed.", "author": "edalex-ian", "createdAt": "2020-08-10T07:33:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5OTYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMTE1OA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467701158", "bodyText": "I think this is what you meant? Or have I misunderstood?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** The currently selected user or. */\n          \n          \n            \n              /** The currently selected user or undefined. */", "author": "SammyIsConfused", "createdAt": "2020-08-10T06:02:47Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OwnerSelector.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import * as React from \"react\";\n+import { useState } from \"react\";\n+import {\n+  Button,\n+  Dialog,\n+  DialogActions,\n+  DialogContent,\n+  DialogTitle,\n+  Grid,\n+  IconButton,\n+  List,\n+  ListItem,\n+  ListItemIcon,\n+  ListItemSecondaryAction,\n+  ListItemText,\n+} from \"@material-ui/core\";\n+import { AccountCircle } from \"@material-ui/icons\";\n+import DeleteIcon from \"@material-ui/icons/Delete\";\n+import UserSearch from \"../../components/UserSearch\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface OwnerSelectorProps {\n+  /** The currently selected user or. */", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMTY0Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467731642", "bodyText": "Ah yes, mostly. Fixed up. :)", "author": "edalex-ian", "createdAt": "2020-08-10T07:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMTE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjE4Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467702186", "bodyText": "Is this a stray comment or just in the wrong place?", "author": "SammyIsConfused", "createdAt": "2020-08-10T06:07:02Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/components/UserSearchTestHelpers.ts", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+// Helper function to execute a search (assuming rendered component)", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMjIwNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467732206", "bodyText": "Hmmm, that's odd. I'm seeing double here. This is your comment from above. I'll mark it as resolved too.", "author": "edalex-ian", "createdAt": "2020-08-10T07:36:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjYzMA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467702630", "bodyText": "What is the {\" \"} for in this context?", "author": "SammyIsConfused", "createdAt": "2020-08-10T06:08:58Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -28,34 +28,118 @@ import { act } from \"react-dom/test-utils\";\n import * as SearchModule from \"../../../tsrc/modules/SearchModule\";\n import * as CollectionsModule from \"../../../tsrc/modules/CollectionsModule\";\n import * as SearchSettingsModule from \"../../../tsrc/modules/SearchSettingsModule\";\n+import * as UserModule from \"../../../tsrc/modules/UserModule\";\n import { BrowserRouter } from \"react-router-dom\";\n import { CircularProgress } from \"@material-ui/core\";\n import { CollectionSelector } from \"../../../tsrc/search/components/CollectionSelector\";\n import { paginatorControls } from \"../components/SearchPaginationTestHelper\";\n import { DateRangeSelector } from \"../../../tsrc/components/DateRangeSelector\";\n+import * as UserSearchMock from \"../../../__mocks__/UserSearch.mock\";\n+import { render, RenderResult, screen, waitFor } from \"@testing-library/react\";\n+import {\n+  clearSelection,\n+  selectUser,\n+} from \"./components/OwnerSelectTestHelpers\";\n \n const SEARCHBAR_ID = \"input[id='searchBar']\";\n const RAW_SEARCH_TOGGLE_ID = \"input[id='rawSearch']\";\n+\n+const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n+const mockListUsers = jest.spyOn(UserModule, \"listUsers\");\n const mockSearch = jest.spyOn(SearchModule, \"searchItems\");\n const mockSearchSettings = jest.spyOn(\n   SearchSettingsModule,\n   \"getSearchSettingsFromServer\"\n );\n-const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n-const searchSettingPromise = mockSearchSettings.mockImplementation(() =>\n-  Promise.resolve(SearchSettingsModule.defaultSearchSettings)\n-);\n-const searchPromise = mockSearch.mockImplementation(() =>\n-  Promise.resolve(getSearchResult)\n+\n+const searchSettingPromise = mockSearchSettings.mockResolvedValue(\n+  SearchSettingsModule.defaultSearchSettings\n );\n-mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+const searchPromise = mockSearch.mockResolvedValue(getSearchResult);\n+\n+mockCollections.mockResolvedValue(getCollectionMap);\n+mockListUsers.mockResolvedValue(UserSearchMock.users);\n+\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"Refine search by Owner\", () => {\n+  const testUser = UserSearchMock.users[0];\n+  let page: RenderResult;\n+\n+  beforeEach(async () => {\n+    window.history.replaceState({}, \"Clean history state\");\n+    page = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />{\" \"}", "originalCommit": "48b54ad774387f9c928eba664c384a75592f850d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMzY2Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467703667", "bodyText": "I removed it in my PR.", "author": "PenghaiZhang", "createdAt": "2020-08-10T06:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjYzMA=="}], "type": "inlineReview"}, {"oid": "a475855bbfaf31e8b2b69bacea5d78e17ac50842", "url": "https://github.com/openequella/openEQUELLA/commit/a475855bbfaf31e8b2b69bacea5d78e17ac50842", "message": "front-end: Use shared actions in OwnerSelector.stories.tsx", "committedDate": "2020-08-10T06:59:12Z", "type": "commit"}, {"oid": "1f92d1a96a2e464867d5e35cbd0bce4be7d378d9", "url": "https://github.com/openequella/openEQUELLA/commit/1f92d1a96a2e464867d5e35cbd0bce4be7d378d9", "message": "front-end: Simplify UserSearch.mock.ts with straight Promise.resolve(value)", "committedDate": "2020-08-10T07:05:50Z", "type": "commit"}, {"oid": "3302fa66773945c17e1b07dadf1c7bae8269f97b", "url": "https://github.com/openequella/openEQUELLA/commit/3302fa66773945c17e1b07dadf1c7bae8269f97b", "message": "front-end (OwnerSelector): Make dialog's selection optional.\n\nMis-use of `| undefined`.", "committedDate": "2020-08-10T07:32:21Z", "type": "commit"}, {"oid": "90bdcecc563cc603fc9dc54685c2f335ae5e18f0", "url": "https://github.com/openequella/openEQUELLA/commit/90bdcecc563cc603fc9dc54685c2f335ae5e18f0", "message": "front-end: Tidy up comments\n\nFeedback from #2157", "committedDate": "2020-08-10T07:37:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0Mjk5MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467942990", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  content === text && (element.parentElement?.matches(\"button\") as boolean)\n          \n          \n            \n                  content === text && (element.parentElement?.matches(\"button\") ?? false)", "author": "ChristianMurphy", "createdAt": "2020-08-10T14:28:17Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/MuiQueries.ts", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { queryByText } from \"@testing-library/react\";\n+\n+/**\n+ * Helper function to find MUI buttons with React Testing Library.\n+ *\n+ * @param container A root element to start the search from\n+ * @param text The text to identify the button by.\n+ */\n+export const queryMuiButtonByText = (container: HTMLElement, text: string) =>\n+  queryByText(\n+    container,\n+    (content: string, element: HTMLElement) =>\n+      content === text && (element.parentElement?.matches(\"button\") as boolean)", "originalCommit": "90bdcecc563cc603fc9dc54685c2f335ae5e18f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0MTQ5Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468241492", "bodyText": "Aww yeah, I'd say that improves readability. Thanks. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-08-10T23:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0Mjk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1ODU4MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467958580", "bodyText": "Possibly outside the scope of this PR.\nWould it make sense to unify the loading experiences using something like https://github.com/async-library/react-async?", "author": "ChristianMurphy", "createdAt": "2020-08-10T14:50:42Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/UserSearch.tsx", "diffHunk": "@@ -66,20 +67,25 @@ const UserSearch = ({\n     OEQ.Common.UuidString | undefined\n   >(undefined);\n   const [hasSearched, setHasSearched] = useState<boolean>(false);\n+  const [showSpinner, setShowSpinner] = useState<boolean>(false);", "originalCommit": "90bdcecc563cc603fc9dc54685c2f335ae5e18f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0MTgyNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468241827", "bodyText": "Thanks @ChristianMurphy . Will have a read. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-08-10T23:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1ODU4MA=="}], "type": "inlineReview"}, {"oid": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c", "url": "https://github.com/openequella/openEQUELLA/commit/5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c", "message": "front-end (testing - MuiQueries): Improve readability\r\n\r\nFeedback from #2157\n\nCo-authored-by: Christian Murphy <christian.murphy.42@gmail.com>", "committedDate": "2020-08-10T23:32:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1OTcyOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468259728", "bodyText": "Stylistically, I've personally found it easier to have node module import first, the internal imports after.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";\n          \n          \n            \n            import { action } from \"@storybook/addon-actions\";\n          \n          \n            \n            import { action } from \"@storybook/addon-actions\";\n          \n          \n            \n            import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";", "author": "ChristianMurphy", "createdAt": "2020-08-11T00:34:15Z", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/search/OwnerSelector.stories.tsx", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";\n+import { action } from \"@storybook/addon-actions\";", "originalCommit": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2MTIxNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468261216", "bodyText": "Yes, I was wondering about this. We've accrued a bit of a mess. Is there an ESLint rule you've ever found to support this notion?\nI'd be interested (in another place) go through and tidy this all up. (I'm disappointed that the intellij optimise imports does not do something like this - than again, maybe there's an option...)", "author": "edalex-ian", "createdAt": "2020-08-11T00:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1OTcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2Mzc2OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468263769", "bodyText": "eslint and eslint-plugin-import come with https://eslint.org/docs/rules/sort-imports and https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/order.md which can be setup.\nAlternatively there is https://github.com/lydell/eslint-plugin-simple-import-sort", "author": "ChristianMurphy", "createdAt": "2020-08-11T00:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1OTcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3MDYyMg==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468270622", "bodyText": "Nice. The simple-import-sort looks nice and... simple. \ud83d\ude01", "author": "edalex-ian", "createdAt": "2020-08-11T01:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1OTcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2MDEyOQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468260129", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { queryMuiButtonByText } from \"../../MuiQueries\";\n          \n          \n            \n            import { languageStrings } from \"../../../../tsrc/util/langstrings\";\n          \n          \n            \n            import { fireEvent, screen, waitFor } from \"@testing-library/react\";\n          \n          \n            \n            import { fireEvent, screen, waitFor } from \"@testing-library/react\";\n          \n          \n            \n            import { queryMuiButtonByText } from \"../../MuiQueries\";\n          \n          \n            \n            import { languageStrings } from \"../../../../tsrc/util/langstrings\";", "author": "ChristianMurphy", "createdAt": "2020-08-11T00:35:33Z", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/OwnerSelectTestHelpers.ts", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { queryMuiButtonByText } from \"../../MuiQueries\";\n+import { languageStrings } from \"../../../../tsrc/util/langstrings\";\n+import { fireEvent, screen, waitFor } from \"@testing-library/react\";", "originalCommit": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}