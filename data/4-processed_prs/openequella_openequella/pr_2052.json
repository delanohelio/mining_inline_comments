{"pr_number": 2052, "pr_title": "Feature/search2 API attachment enhancements", "pr_createdAt": "2020-07-15T00:09:11Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2052", "timeline": [{"oid": "516ad556eff3d9dbabc409a88b5b51101c5a729b", "url": "https://github.com/openequella/openEQUELLA/commit/516ad556eff3d9dbabc409a88b5b51101c5a729b", "message": "Add MimeType and Thumbnail properties to attachments for Search2 endpoint", "committedDate": "2020-07-14T03:43:51Z", "type": "commit"}, {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "url": "https://github.com/openequella/openEQUELLA/commit/967d58e9d28568789badbe9c9c6bd10b6c0689f2", "message": "Give method for extracting mimetypes a more descirptive name", "committedDate": "2020-07-14T04:17:06Z", "type": "commit"}, {"oid": "d69daf36f5583f2d73f084945019ad0c46dbfa65", "url": "https://github.com/openequella/openEQUELLA/commit/d69daf36f5583f2d73f084945019ad0c46dbfa65", "message": "add documentation for isPlacehoderThumb property for SearchResultAttachment class", "committedDate": "2020-07-15T00:06:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454718049", "bodyText": "Can getAttachmentByUuid return null? Or does it simply throw an exception?\nIf it can return null, maybe we should handle it and return false.", "author": "edalex-ian", "createdAt": "2020-07-15T00:20:21Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)", "originalCommit": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxOTY5MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454719691", "bodyText": "Good question. I will double check, and adjust accordingly", "author": "mrblippy", "createdAt": "2020-07-15T00:26:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczMzc1Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454733752", "bodyText": "It throws an exception", "author": "mrblippy", "createdAt": "2020-07-15T01:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNTg2OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454735869", "bodyText": "Good oh. ;)", "author": "edalex-ian", "createdAt": "2020-07-15T01:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODYwOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454718608", "bodyText": "This makes for slightly awkward reading. It'd possibly be improved by either:\n\nUsing named arguments here; or\nUsing a variable.\n\nI think 1 would be worthwhile.", "author": "edalex-ian", "createdAt": "2020-07-15T00:22:26Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),", "originalCommit": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMDA1NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454720054", "bodyText": "I think named arguments would be a good approach", "author": "mrblippy", "createdAt": "2020-07-15T00:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODYwOA=="}], "type": "inlineReview"}, {"oid": "143ba45d50ce2d24a221a7c603d78bed966f54c7", "url": "https://github.com/openequella/openEQUELLA/commit/143ba45d50ce2d24a221a7c603d78bed966f54c7", "message": "pass named arguments to SearchResultAttachment, to aid in readability", "committedDate": "2020-07-15T01:22:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxNzg0NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454717844", "bodyText": "Let's remove this blank line.", "author": "PenghaiZhang", "createdAt": "2020-07-15T00:19:39Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -20,6 +20,7 @@ package com.tle.web.api.search\n \n import java.text.{ParseException, SimpleDateFormat}\n import java.util.Date\n+", "originalCommit": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxNzg2Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454717863", "bodyText": "Let's remove this blank line.", "author": "PenghaiZhang", "createdAt": "2020-07-15T00:19:45Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -32,9 +33,10 @@ import com.tle.core.freetext.queries.FreeTextBooleanQuery\n import com.tle.core.item.serializer.{ItemSerializerItemBean, ItemSerializerService}\n import com.tle.legacy.LegacyGuice\n import com.tle.web.api.interfaces.beans.AbstractExtendableBean\n-import com.tle.web.api.item.equella.interfaces.beans.EquellaItemBean\n+import com.tle.web.api.item.equella.interfaces.beans.{AbstractFileAttachmentBean, EquellaItemBean}\n import com.tle.web.api.item.interfaces.beans.AttachmentBean\n import com.tle.web.api.search.model.{SearchResultAttachment, SearchParam, SearchResultItem}\n+", "originalCommit": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODc0Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454718742", "bodyText": "Javadoc for this parameter is missing.", "author": "PenghaiZhang", "createdAt": "2020-07-15T00:22:54Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/model/SearchResultItem.scala", "diffHunk": "@@ -62,12 +62,15 @@ case class SearchResultItem(\n   * @param id The unique ID of an attachment.\n   * @param description The description of an attachment.\n   * @param preview If an attachment can be previewed or not.\n+  * @param mimeType Mime Type of file based attachments\n   * @param links Attachment's links.\n   */\n case class SearchResultAttachment(\n     attachmentType: String,\n     id: String,\n     description: Option[String],\n     preview: Boolean,\n+    mimeType: Option[String],\n+    isPlaceholderThumb: Boolean,", "originalCommit": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc0NTg5Mw==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454745893", "bodyText": "This was added in one of my commits in this PR", "author": "mrblippy", "createdAt": "2020-07-15T02:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODc0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxOTYyNg==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454719626", "bodyText": "Not much difference, but using Some(..) here seems to be more scala idiomatic.", "author": "PenghaiZhang", "createdAt": "2020-07-15T00:26:08Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)\n+    LegacyGuice.fileSystemService.fileExists(item.getFileHandle, attach.getThumbnail)\n+  }\n+\n+  /**\n+    * Extract the mimetype for AbstractExtendableBean.\n+    */\n+  def getMimetypeForAttachment[T <: AbstractExtendableBean](bean: T): Option[String] = {\n+    bean match {\n+      case file: AbstractFileAttachmentBean =>\n+        Option(LegacyGuice.mimeTypeService.getMimeTypeForFilename(file.getFilename))", "originalCommit": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzA3NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454737074", "bodyText": "Perhaps we can this to avoid checking if thumbnail exists for non-file attachments.\ndef thumbExists(itemKey: ItemIdKey, attachBean: AttachmentBean): Boolean = {\nattachBean match {\ncase bean: FileAttachmentBean =>\nval item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\nLegacyGuice.fileSystemService.fileExists(item.getFileHandle, bean.getThumbnail)\ncase _ => false\n}\n}", "author": "PenghaiZhang", "createdAt": "2020-07-15T01:30:40Z", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)\n+    LegacyGuice.fileSystemService.fileExists(item.getFileHandle, attach.getThumbnail)\n+  }", "originalCommit": "967d58e9d28568789badbe9c9c6bd10b6c0689f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzc1Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454737752", "bodyText": "Need to verify if bean.getThumbnail is equivalent to attach.getThumbnail.\nMy testing result is they are the same.", "author": "PenghaiZhang", "createdAt": "2020-07-15T01:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzA3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczODU3OQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454738579", "bodyText": "Yeah, i agree. Doing that will simplify things on the front end too", "author": "mrblippy", "createdAt": "2020-07-15T01:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzA3NA=="}], "type": "inlineReview"}, {"oid": "393e2301acbbb69f17089a481ae9dbcb6811d591", "url": "https://github.com/openequella/openEQUELLA/commit/393e2301acbbb69f17089a481ae9dbcb6811d591", "message": "Refactor thumbExists and getMimetypeForAttachment methods in SearchHelper\n\n- Using pattern matching inside the thumbExists ensures that filestore attachment lookups only occurs for File based attachments. It's pointless to do filestore lookups for other attachment types, since they will never have thumbnails stored in filestore", "committedDate": "2020-07-15T01:52:52Z", "type": "commit"}]}