{"pr_number": 1998, "pr_title": "Add sorting options for Search page", "pr_createdAt": "2020-07-03T05:14:40Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/1998", "timeline": [{"oid": "c0126f0a636e3034530a9b0ad56f09a34aa3c8fe", "url": "https://github.com/openequella/openEQUELLA/commit/c0126f0a636e3034530a9b0ad56f09a34aa3c8fe", "message": "Add sorting options for Search page\n\n1. Move the title of Search result list into a MUI CardHeader.\n2. Add a MUI Select in the CardHeader's action as the search sorting control.\n3. Create a functions which provides data for above Select.", "committedDate": "2020-07-03T05:09:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3OTczMg==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449379732", "bodyText": "Do we want a separate component for this control like the Search query bar?", "author": "PenghaiZhang", "createdAt": "2020-07-03T05:17:23Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -135,6 +135,26 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n \n       <Grid item xs={9}>\n         <Card>\n+          <CardHeader\n+            title={searchStrings.subtitle}\n+            action={\n+              <Select", "originalCommit": "c0126f0a636e3034530a9b0ad56f09a34aa3c8fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMTU3Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449931577", "bodyText": "I think at least pulling it out to a component within this function would be worthwhile for now. That way we have this key component at least stand-alone and here we can have <CardHeader ... action={<SearchOrderSelect />}/>} which is more readable.", "author": "edalex-ian", "createdAt": "2020-07-05T23:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3OTczMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4MDYxNg==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449380616", "bodyText": "I noted that the style of CardHeader's title seems to be consistent with SettingsListHeading.", "author": "PenghaiZhang", "createdAt": "2020-07-03T05:20:52Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -135,6 +135,26 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n \n       <Grid item xs={9}>\n         <Card>\n+          <CardHeader\n+            title={searchStrings.subtitle}", "originalCommit": "c0126f0a636e3034530a9b0ad56f09a34aa3c8fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMTAyNA==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449931024", "bodyText": "Nice work. Not sure how I missed that. May need to go back and refactor my refactors once they're done. ;)", "author": "edalex-ian", "createdAt": "2020-07-05T23:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4MDYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMjgzNw==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449932837", "bodyText": "This really should be a return type of Map<SortOrder, string>, and maybe then a name to better reflect it's purpose like: getSortingOptionStrings(). Then, it'd also possibly worthwhile to memoize it - as it is completely static for each run (no need to build the data structure again).", "author": "edalex-ian", "createdAt": "2020-07-05T23:52:10Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchModule.ts", "diffHunk": "@@ -40,33 +72,22 @@ export const searchItems = (\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n-export const defaultPagedSearchResult: OEQ.Common.PagedResult<OEQ.Search.SearchResultItem> = {\n-  start: 0,\n-  length: 10,\n-  available: 10,\n-  results: [],\n-};\n-\n /**\n- * Type of all search options on Search page\n+ * Provide the search sorting control's data source.\n  */\n-export interface SearchOptions {\n-  /**\n-   * The number of items displayed in one page.\n-   */\n-  rowsPerPage: number;\n-  /**\n-   * Selected page.\n-   */\n-  currentPage: number;\n-  /**\n-   * Selected search result sorting order.\n-   */\n-  sortOrder: SortOrder | undefined;\n-}\n-\n-export const defaultSearchOptions: SearchOptions = {\n-  rowsPerPage: 10,\n-  currentPage: 0,\n-  sortOrder: undefined,\n+export const getSortingOptions = (): Record<string, SortOrder> => {", "originalCommit": "c0126f0a636e3034530a9b0ad56f09a34aa3c8fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk1NTAzNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449955035", "bodyText": "I am curious that if the cost of using useMemo is more expensive than rebuilding that simple map. This map only needs to be built when the component is mounted.  So I feel it might be more worthwhile to memorize this sorting component to avoid unnecessary re-render.", "author": "PenghaiZhang", "createdAt": "2020-07-06T02:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMjgzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3MjQxNg==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449972416", "bodyText": "Not sure I'm seeing the cost you mention, so I'd be interested to discuss that. But really, that is a bit of a premature optimisations, and so requires no action right now. ;)", "author": "edalex-ian", "createdAt": "2020-07-06T04:01:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMjgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0MTgyMA==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449941820", "bodyText": "Is it worth having a test for this function?", "author": "SammyIsConfused", "createdAt": "2020-07-06T01:09:05Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchModule.ts", "diffHunk": "@@ -40,33 +72,22 @@ export const searchItems = (\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n-export const defaultPagedSearchResult: OEQ.Common.PagedResult<OEQ.Search.SearchResultItem> = {\n-  start: 0,\n-  length: 10,\n-  available: 10,\n-  results: [],\n-};\n-\n /**\n- * Type of all search options on Search page\n+ * Provide the search sorting control's data source.\n  */\n-export interface SearchOptions {\n-  /**\n-   * The number of items displayed in one page.\n-   */\n-  rowsPerPage: number;\n-  /**\n-   * Selected page.\n-   */\n-  currentPage: number;\n-  /**\n-   * Selected search result sorting order.\n-   */\n-  sortOrder: SortOrder | undefined;\n-}\n-\n-export const defaultSearchOptions: SearchOptions = {\n-  rowsPerPage: 10,\n-  currentPage: 0,\n-  sortOrder: undefined,\n+export const getSortingOptions = (): Record<string, SortOrder> => {", "originalCommit": "c0126f0a636e3034530a9b0ad56f09a34aa3c8fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDA0Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r450000046", "bodyText": "I have refactored this to a simple map so we probably do not need a test.", "author": "PenghaiZhang", "createdAt": "2020-07-06T06:04:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0MTgyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0MjE2Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r449942167", "bodyText": "Not sure I quite understand this return - so depending on language strings the shape of the return data will change? If someone changed these values in a language pack would the data remain the same or map to the new strings? And would that break anything if so?", "author": "SammyIsConfused", "createdAt": "2020-07-06T01:11:26Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchModule.ts", "diffHunk": "@@ -40,33 +72,22 @@ export const searchItems = (\n   return OEQ.Search.search(API_BASE_URL, searchParams);\n };\n \n-export const defaultPagedSearchResult: OEQ.Common.PagedResult<OEQ.Search.SearchResultItem> = {\n-  start: 0,\n-  length: 10,\n-  available: 10,\n-  results: [],\n-};\n-\n /**\n- * Type of all search options on Search page\n+ * Provide the search sorting control's data source.\n  */\n-export interface SearchOptions {\n-  /**\n-   * The number of items displayed in one page.\n-   */\n-  rowsPerPage: number;\n-  /**\n-   * Selected page.\n-   */\n-  currentPage: number;\n-  /**\n-   * Selected search result sorting order.\n-   */\n-  sortOrder: SortOrder | undefined;\n-}\n-\n-export const defaultSearchOptions: SearchOptions = {\n-  rowsPerPage: 10,\n-  currentPage: 0,\n-  sortOrder: undefined,\n+export const getSortingOptions = (): Record<string, SortOrder> => {\n+  const {\n+    relevance,\n+    lastModified,\n+    dateCreated,\n+    title,\n+    userRating,\n+  } = languageStrings.settings.searching.searchPageSettings;\n+  return {\n+    [relevance]: SortOrder.RANK,", "originalCommit": "c0126f0a636e3034530a9b0ad56f09a34aa3c8fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDUxNw==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r450000517", "bodyText": "I think it would be fine as long as the values provided by eunm SortOrder keep consistent because which option is selected is determined by the value rather than the text. But anyway, this function has been removed.", "author": "PenghaiZhang", "createdAt": "2020-07-06T06:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0MjE2Nw=="}], "type": "inlineReview"}, {"oid": "638fa01ab6796294c348689889e022e708d4c41e", "url": "https://github.com/openequella/openEQUELLA/commit/638fa01ab6796294c348689889e022e708d4c41e", "message": "Create a separate component for Search order control\n\nPull the search order control out from Search page and add a dedicated\ncomponent for it. Also make this component memorized so that it does not\nget re-rendered when other controls change search options.", "committedDate": "2020-07-06T05:58:21Z", "type": "commit"}, {"oid": "12c48d321df286f686a6365da89150e4de2b121d", "url": "https://github.com/openequella/openEQUELLA/commit/12c48d321df286f686a6365da89150e4de2b121d", "message": "Update the JSDoc for 'sortingOptionStrings'.", "committedDate": "2020-07-06T06:09:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxMzkwNw==", "url": "https://github.com/openequella/openEQUELLA/pull/1998#discussion_r450013907", "bodyText": "This gave me pause, until I saw it's to maintain referential consistency when passed into your memoised SearchOrderSelect. \ud83d\udc4d", "author": "edalex-ian", "createdAt": "2020-07-06T06:44:56Z", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -120,6 +115,16 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n    */\n   const searchResultList = <List>{searchResults}</List>;\n \n+  /**\n+   * Provide a memorized callback for updating sort order in order to avoid re-rendering\n+   * component SearchOrderSelect when other search control values are changed.\n+   */\n+  const handleSortOrderChanged = useCallback(\n+    (order: SortOrder) =>\n+      setSearchOptions({ ...searchOptions, sortOrder: order }),\n+    []", "originalCommit": "12c48d321df286f686a6365da89150e4de2b121d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}