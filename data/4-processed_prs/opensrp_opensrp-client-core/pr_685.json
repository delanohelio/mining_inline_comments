{"pr_number": 685, "pr_title": "use set to check formsubmissionid during batch insert", "pr_createdAt": "2020-11-11T07:08:16Z", "pr_url": "https://github.com/opensrp/opensrp-client-core/pull/685", "timeline": [{"oid": "27017db00ac9eeedf0ce2be3dc6afe853d6d56ce", "url": "https://github.com/opensrp/opensrp-client-core/commit/27017db00ac9eeedf0ce2be3dc6afe853d6d56ce", "message": "use set to check formsubmissionid during bathc insert", "committedDate": "2020-11-11T07:06:27Z", "type": "commit"}, {"oid": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "url": "https://github.com/opensrp/opensrp-client-core/commit/9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "message": "Merge branch 'master' into update-checkFormSubmissionId", "committedDate": "2020-11-11T07:08:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5Mzg3Mg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521193872", "bodyText": "this should be checking the form submission ids  from the events in the JSONArray", "author": "githengi", "createdAt": "2020-11-11T08:29:58Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -532,14 +569,17 @@ public boolean batchInsertEvents(JSONArray array, long serverVersion) {\n         return batchInsertEvents(array, serverVersion, getWritableDatabase());\n     }\n \n-    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase sqLiteDatabase) {\n+    public boolean batchInsertEvents(JSONArray array, long serverVersion, SQLiteDatabase\n+            sqLiteDatabase) {\n         if (array == null || array.length() == 0) {\n             return false;\n         }\n \n         SQLiteStatement insertStatement = null;\n         SQLiteStatement updateStatement = null;\n \n+        populateFormSubmissionIds();", "originalCommit": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMzEzNA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521203134", "bodyText": "What if there are other events already saved?", "author": "bennsimon", "createdAt": "2020-11-11T08:47:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5Mzg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMjQ5Nw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521222497", "bodyText": "this is to check the new events if they are already saved on the database. What other events are you referring to", "author": "githengi", "createdAt": "2020-11-11T09:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5Mzg3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NDE5MQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521194191", "bodyText": "This should check for submissionids from those passed in the array. Also return the set in this method", "author": "githengi", "createdAt": "2020-11-11T08:30:28Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {", "originalCommit": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMjI3NQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521202275", "bodyText": "What if there are events already saved?", "author": "bennsimon", "createdAt": "2020-11-11T08:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NDE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NDI5OQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521194299", "bodyText": "use try with resources", "author": "githengi", "createdAt": "2020-11-11T08:30:40Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {\n+        Cursor mCursor = null;\n+        if (formSubmissionIds == null)\n+            formSubmissionIds = new HashSet<>();\n+\n+        try {", "originalCommit": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NTUyNQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521195525", "bodyText": "This should be returned in the method and should not be an instance variable so that its reclaimed after batchInsert completes", "author": "githengi", "createdAt": "2020-11-11T08:33:01Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -63,6 +63,8 @@\n     protected Table clientTable;\n     protected Table eventTable;\n \n+    private Set<String> formSubmissionIds;", "originalCommit": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521196193", "bodyText": "Not sure of this, can this just be formSubmissionIds.contains(formSubmissionId)", "author": "githengi", "createdAt": "2020-11-11T08:34:23Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +257,45 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    public void populateFormSubmissionIds() {\n+        Cursor mCursor = null;\n+        if (formSubmissionIds == null)\n+            formSubmissionIds = new HashSet<>();\n+\n+        try {\n+            String query = \"SELECT \"\n+                    + event_column.formSubmissionId\n+                    + \" FROM \"\n+                    + eventTable.name();\n+            mCursor = getReadableDatabase().rawQuery(query, new String[]{});\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e);\n+        } finally {\n+            if (mCursor != null) {\n+                mCursor.close();\n+            }\n+        }\n+\n+    }\n+\n+    public Boolean checkIfExistsByFormSubmissionId(String formSubmissionId) {\n+        if (formSubmissionIds != null && StringUtils.isNotBlank(formSubmissionId)) {\n+            return !formSubmissionIds.add(formSubmissionId);\n+        }\n+        return false;\n+    }", "originalCommit": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMjc1Ng==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521202756", "bodyText": ".add returns true if id does not exist ... i also need to insert the ids to the set when this happens", "author": "bennsimon", "createdAt": "2020-11-11T08:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMzg5OQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521223899", "bodyText": "Assuming the set has all the ids that already exist, I don't see the need to add to this list here", "author": "githengi", "createdAt": "2020-11-11T09:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIzNDIxNw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521234217", "bodyText": "If i remove this i will need to add a separate .add after .contains  ... .add already tells me if it exists in the set", "author": "bennsimon", "createdAt": "2020-11-11T09:41:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjE5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjQ3Mg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521196472", "bodyText": "check formatting here", "author": "githengi", "createdAt": "2020-11-11T08:34:57Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -1467,7 +1508,8 @@ public JSONObject getEventsByBaseEntityIdAndEventType(String baseEntityId, Strin\n         return null;\n     }\n \n-    public List<EventClient> getEventsByBaseEntityIdsAndSyncStatus(String syncStatus, List<String> baseEntityIds) {\n+    public List<EventClient> getEventsByBaseEntityIdsAndSyncStatus(String\n+                                                                           syncStatus, List<String> baseEntityIds) {", "originalCommit": "9d08cbec07e2c2468376e6edb1cf3252e643b8c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIwMzIwOA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r521203208", "bodyText": "changing", "author": "bennsimon", "createdAt": "2020-11-11T08:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NjQ3Mg=="}], "type": "inlineReview"}, {"oid": "a0677d2e96d7a0f471504841b17a2d88bb603fd5", "url": "https://github.com/opensrp/opensrp-client-core/commit/a0677d2e96d7a0f471504841b17a2d88bb603fd5", "message": "code cleanup", "committedDate": "2020-11-11T09:30:11Z", "type": "commit"}, {"oid": "9cd05cca3d58fd71e567eb350152dbd08d229970", "url": "https://github.com/opensrp/opensrp-client-core/commit/9cd05cca3d58fd71e567eb350152dbd08d229970", "message": "Merge branch 'update-checkFormSubmissionId' of github.com:OpenSRP/opensrp-client-core into update-checkFormSubmissionId", "committedDate": "2020-11-11T09:30:52Z", "type": "commit"}, {"oid": "84b887c21d079e968709279b5e3781b431076657", "url": "https://github.com/opensrp/opensrp-client-core/commit/84b887c21d079e968709279b5e3781b431076657", "message": "use try with resources", "committedDate": "2020-11-11T09:35:24Z", "type": "commit"}, {"oid": "c558f1b4d578e4fa126db03645648577ee3ca3ca", "url": "https://github.com/opensrp/opensrp-client-core/commit/c558f1b4d578e4fa126db03645648577ee3ca3ca", "message": "update selection args", "committedDate": "2020-11-11T09:36:23Z", "type": "commit"}, {"oid": "0b5ef683e26f389511cf0f5aeeb209baa21bb1c2", "url": "https://github.com/opensrp/opensrp-client-core/commit/0b5ef683e26f389511cf0f5aeeb209baa21bb1c2", "message": "add tests and code cleanup", "committedDate": "2020-11-12T07:15:24Z", "type": "commit"}, {"oid": "0b5ef683e26f389511cf0f5aeeb209baa21bb1c2", "url": "https://github.com/opensrp/opensrp-client-core/commit/0b5ef683e26f389511cf0f5aeeb209baa21bb1c2", "message": "add tests and code cleanup", "committedDate": "2020-11-12T07:15:24Z", "type": "forcePushed"}, {"oid": "c693e986854c6718169d8fe0b88ed40d0ebdff35", "url": "https://github.com/opensrp/opensrp-client-core/commit/c693e986854c6718169d8fe0b88ed40d0ebdff35", "message": "remove lastServerVersion (-1) offset", "committedDate": "2020-11-13T10:08:41Z", "type": "commit"}, {"oid": "385836ff1f0497ef52f9611f2529d05c5e216af6", "url": "https://github.com/opensrp/opensrp-client-core/commit/385836ff1f0497ef52f9611f2529d05c5e216af6", "message": "code cleanup", "committedDate": "2020-11-13T10:13:40Z", "type": "commit"}, {"oid": "4eca573914a4e4fa7e22457fd2bc36c0e9c649d1", "url": "https://github.com/opensrp/opensrp-client-core/commit/4eca573914a4e4fa7e22457fd2bc36c0e9c649d1", "message": "revert offset change", "committedDate": "2020-11-13T11:52:31Z", "type": "commit"}, {"oid": "53a69301f31b15df1a9e8e651957340168d8b0c2", "url": "https://github.com/opensrp/opensrp-client-core/commit/53a69301f31b15df1a9e8e651957340168d8b0c2", "message": "code cleanup", "committedDate": "2020-11-13T11:53:25Z", "type": "commit"}, {"oid": "1007d874e3d27cc203bf05055c252118670c1139", "url": "https://github.com/opensrp/opensrp-client-core/commit/1007d874e3d27cc203bf05055c252118670c1139", "message": "Merge branch 'master' into update-checkFormSubmissionId", "committedDate": "2020-11-13T15:36:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA0NTYzOQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r523045639", "bodyText": "use ? i.e    StringUtils.repeat(\"?\",tempList.length) and pass the formsubmissions in rawQuery as second args. This is a safer database operation", "author": "githengi", "createdAt": "2020-11-13T16:02:50Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer pageSizeInteger = pageSize;\n+\n+        if (pageSizeInteger == null) {\n+            pageSizeInteger = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= pageSizeInteger) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, pageSizeInteger);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - pageSizeInteger;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ('\" + StringUtils.join(tempList, \"','\") + \"')\";", "originalCommit": "1007d874e3d27cc203bf05055c252118670c1139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA0NzUzNw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r523047537", "bodyText": "This should return formSubmissionIds as this is a recursive function", "author": "githengi", "createdAt": "2020-11-13T16:05:54Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer pageSizeInteger = pageSize;\n+\n+        if (pageSizeInteger == null) {\n+            pageSizeInteger = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= pageSizeInteger) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, pageSizeInteger);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - pageSizeInteger;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ('\" + StringUtils.join(tempList, \"','\") + \"')\";\n+\n+        try (Cursor mCursor = getReadableDatabase().rawQuery(query, null)) {\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (SQLException e) {\n+            Timber.e(e);\n+        }\n+\n+        if (shouldEnd) {\n+            return;", "originalCommit": "1007d874e3d27cc203bf05055c252118670c1139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA0OTA5NQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r523049095", "bodyText": "can be properly named", "author": "githengi", "createdAt": "2020-11-13T16:08:30Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer pageSizeInteger = pageSize;", "originalCommit": "1007d874e3d27cc203bf05055c252118670c1139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0ec9a37a10082ddba60b578d3381e7354167bf7f", "url": "https://github.com/opensrp/opensrp-client-core/commit/0ec9a37a10082ddba60b578d3381e7354167bf7f", "message": "code cleanup", "committedDate": "2020-11-16T07:26:40Z", "type": "commit"}, {"oid": "74e15f037b6d0f930c8e87bf2f1eaec59082c912", "url": "https://github.com/opensrp/opensrp-client-core/commit/74e15f037b6d0f930c8e87bf2f1eaec59082c912", "message": "Merge branch 'update-checkFormSubmissionId' of github.com:OpenSRP/opensrp-client-core into update-checkFormSubmissionId", "committedDate": "2020-11-16T07:27:23Z", "type": "commit"}, {"oid": "71213bb121415192f6598db6ddba9ad8d61a26a8", "url": "https://github.com/opensrp/opensrp-client-core/commit/71213bb121415192f6598db6ddba9ad8d61a26a8", "message": "Merge branch 'master' into update-checkFormSubmissionId", "committedDate": "2020-11-16T07:29:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMzNTQ3Mg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524335472", "bodyText": "limit = formSubmissionIdsList.size() - tempPageSize;\nand we are passing tempPageSize + limit which is simplified to formSubmissionIdsList.size()", "author": "githengi", "createdAt": "2020-11-16T15:05:29Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer tempPageSize = pageSize;\n+\n+        if (tempPageSize == null) {\n+            tempPageSize = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= tempPageSize) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, tempPageSize);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - tempPageSize;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ( \" + StringUtils.repeat(\"?\", \", \", tempList.size()) + \")\";\n+\n+        try (Cursor mCursor = getReadableDatabase().rawQuery(query, tempList.toArray(new String[0]))) {\n+            if (mCursor != null) {\n+                while (mCursor.moveToNext()) {\n+                    formSubmissionIds.add(mCursor.getString(0));\n+                }\n+            }\n+        } catch (SQLException e) {\n+            Timber.e(e);\n+        }\n+\n+        if (shouldEnd) {\n+            return;\n+        }\n+\n+        populateFormSubmissionIds(formSubmissionIdsList.subList(tempPageSize, tempPageSize + limit), formSubmissionIds, tempPageSize);", "originalCommit": "71213bb121415192f6598db6ddba9ad8d61a26a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMzODIwNg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524338206", "bodyText": "Can we just remove creation of additional variables and just use FORM_SUBMISSION_IDS_PAGE_SIZE", "author": "githengi", "createdAt": "2020-11-16T15:09:22Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer tempPageSize = pageSize;\n+\n+        if (tempPageSize == null) {\n+            tempPageSize = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+", "originalCommit": "71213bb121415192f6598db6ddba9ad8d61a26a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMzODYzMw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524338633", "bodyText": "not sure can we remove parameter @Nullable Integer pageSize and use FORM_SUBMISSION_IDS_PAGE_SIZE", "author": "githengi", "createdAt": "2020-11-16T15:09:56Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {", "originalCommit": "71213bb121415192f6598db6ddba9ad8d61a26a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM0MDE3NA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/685#discussion_r524340174", "bodyText": "Can we define the whole query variable here", "author": "githengi", "createdAt": "2020-11-16T15:12:05Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/EventClientRepository.java", "diffHunk": "@@ -255,11 +259,78 @@ public Boolean checkIfExists(Table table, String baseEntityId, SQLiteDatabase sq\n         return false;\n     }\n \n+    private List<String> getFormSubmissionIdsFromJsonArray(JSONArray array) {\n+        if (array != null && array.length() != 0) {\n+            List<String> stringList = new ArrayList<>();\n+            for (int i = 0; i < array.length(); i++) {\n+                JSONObject jsonObject = array.optJSONObject(i);\n+                if (jsonObject != null) {\n+                    String formSubmissionId = jsonObject.optString(event_column.formSubmissionId.name());\n+                    if (StringUtils.isNotBlank(formSubmissionId)) {\n+                        stringList.add(formSubmissionId);\n+                    }\n+                }\n+            }\n+            return stringList;\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds) {\n+        populateFormSubmissionIds(formSubmissionIdsList, formSubmissionIds, null);\n+    }\n+\n+    protected void populateFormSubmissionIds(@NonNull List<String> formSubmissionIdsList,\n+                                             Set<String> formSubmissionIds, @Nullable Integer pageSize) {\n+        Integer tempPageSize = pageSize;\n+\n+        if (tempPageSize == null) {\n+            tempPageSize = FORM_SUBMISSION_IDS_PAGE_SIZE;\n+        }\n+\n+        String query = \"SELECT \"\n+                + EventClientRepository.event_column.formSubmissionId\n+                + \" FROM event\";\n+\n+        List<String> tempList;\n+\n+        boolean shouldEnd = false;\n+\n+        if (formSubmissionIdsList.size() <= tempPageSize) {\n+            tempList = formSubmissionIdsList;\n+            shouldEnd = true;\n+        } else {\n+            tempList = formSubmissionIdsList.subList(0, tempPageSize);\n+        }\n+\n+        int limit = formSubmissionIdsList.size() - tempPageSize;\n+\n+        query += \" WHERE \" + EventClientRepository.event_column.formSubmissionId + \" IN ( \" + StringUtils.repeat(\"?\", \", \", tempList.size()) + \")\";", "originalCommit": "71213bb121415192f6598db6ddba9ad8d61a26a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "376c7bb4560117e05dcadf082ed692f59d59266c", "url": "https://github.com/opensrp/opensrp-client-core/commit/376c7bb4560117e05dcadf082ed692f59d59266c", "message": "code cleanup", "committedDate": "2020-11-17T06:18:36Z", "type": "commit"}, {"oid": "653f2b742a04ca05014503eba6b192768dd30873", "url": "https://github.com/opensrp/opensrp-client-core/commit/653f2b742a04ca05014503eba6b192768dd30873", "message": "Merge branch 'update-checkFormSubmissionId' of github.com:OpenSRP/opensrp-client-core into update-checkFormSubmissionId", "committedDate": "2020-11-17T06:19:07Z", "type": "commit"}, {"oid": "717b68795cef707647ecefc10bb05073cc0ac58f", "url": "https://github.com/opensrp/opensrp-client-core/commit/717b68795cef707647ecefc10bb05073cc0ac58f", "message": "Merge branch 'master' into update-checkFormSubmissionId", "committedDate": "2020-11-17T06:19:40Z", "type": "commit"}, {"oid": "d23a1f47ee63a97baaf97e8b31fb38edda73dd99", "url": "https://github.com/opensrp/opensrp-client-core/commit/d23a1f47ee63a97baaf97e8b31fb38edda73dd99", "message": "Merge branch 'master' into update-checkFormSubmissionId", "committedDate": "2020-11-18T07:22:45Z", "type": "commit"}, {"oid": "a857819c418747d9504ef091430939c5bfe0f289", "url": "https://github.com/opensrp/opensrp-client-core/commit/a857819c418747d9504ef091430939c5bfe0f289", "message": "Merge branch 'master' into update-checkFormSubmissionId", "committedDate": "2020-11-18T07:35:21Z", "type": "commit"}, {"oid": "1019b6f54ee90914424a815677dc6eb10599baff", "url": "https://github.com/opensrp/opensrp-client-core/commit/1019b6f54ee90914424a815677dc6eb10599baff", "message": "Merge branch 'master' into update-checkFormSubmissionId", "committedDate": "2020-11-18T12:36:14Z", "type": "commit"}, {"oid": "2401aa1daf0a7a0045bed8ddd81aac1c0ac2d445", "url": "https://github.com/opensrp/opensrp-client-core/commit/2401aa1daf0a7a0045bed8ddd81aac1c0ac2d445", "message": "update snapshot version", "committedDate": "2020-11-18T12:51:51Z", "type": "commit"}]}