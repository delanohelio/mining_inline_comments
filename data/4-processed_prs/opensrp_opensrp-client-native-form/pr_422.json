{"pr_number": 422, "pr_title": "Adding the edittext factory tests", "pr_createdAt": "2020-05-12T08:58:35Z", "pr_url": "https://github.com/opensrp/opensrp-client-native-form/pull/422", "timeline": [{"oid": "f185ef7f368fe4912031960697dd9b4322081c0e", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/f185ef7f368fe4912031960697dd9b4322081c0e", "message": ":zap: update the toaster notes factory to prepare for tests", "committedDate": "2020-05-08T08:37:04Z", "type": "commit"}, {"oid": "a5d8311d5016363c15f05ed60f1f30e647b4def0", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/a5d8311d5016363c15f05ed60f1f30e647b4def0", "message": ":heavy_check_mark: Adding the exdit text creation tests", "committedDate": "2020-05-12T08:56:04Z", "type": "commit"}, {"oid": "603213057713b4e218fad8aaf7deb93a145942c2", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/603213057713b4e218fad8aaf7deb93a145942c2", "message": ":zap: uncomment required code", "committedDate": "2020-05-12T08:58:51Z", "type": "commit"}, {"oid": "1b68e98d71e6cd3b24b9e595de5f47b605b662b4", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/1b68e98d71e6cd3b24b9e595de5f47b605b662b4", "message": ":heavy_check_mark: Added the `addCumulativeTotalValidator` test", "committedDate": "2020-05-12T09:35:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTk3Ng==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/422#discussion_r423675976", "bodyText": "I see we've altered the access modifier here, do we intend to override it on the  implementations?", "author": "ndegwamartin", "createdAt": "2020-05-12T11:58:41Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/widgets/EditTextFactory.java", "diffHunk": "@@ -412,7 +416,7 @@ private void attachRefreshLogic(Context context, JSONObject jsonObject, Material\n         }\n     }\n \n-    private MaterialEditText getViewUsingAddress(String stepName, String fieldKey, JsonApi jsonApi) {\n+    public MaterialEditText getViewUsingAddress(String stepName, String fieldKey, JsonApi jsonApi) {", "originalCommit": "1b68e98d71e6cd3b24b9e595de5f47b605b662b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NjU4Mw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/422#discussion_r423676583", "bodyText": "Its used in mocking on the tests", "author": "dubdabasoduba", "createdAt": "2020-05-12T11:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY5MjUwNw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/422#discussion_r423692507", "bodyText": "Ok, since the test is in a similar package you can give it a narrower scope and use protected instead. Also, annotate the method with @VisibleForTesting", "author": "ndegwamartin", "createdAt": "2020-05-12T12:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY5MzAxMQ==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/422#discussion_r423693011", "bodyText": "Yah this makes sense", "author": "dubdabasoduba", "createdAt": "2020-05-12T12:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTk3Ng=="}], "type": "inlineReview"}, {"oid": "5c5988751bcfa48dddc136983cddf19e33ca7ed3", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/5c5988751bcfa48dddc136983cddf19e33ca7ed3", "message": ":zap: revert the scope of the `getViewUsingAddress` back to private", "committedDate": "2020-05-12T12:30:58Z", "type": "commit"}, {"oid": "2c3f2275dec65e29d68f3f345490cc64a169f8c2", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/2c3f2275dec65e29d68f3f345490cc64a169f8c2", "message": ":zap: remove unused imports", "committedDate": "2020-05-12T12:31:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5MjEzNw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/422#discussion_r423792137", "bodyText": "I think we are better off asserting the exact value we expect based on the input in order to cover the ceiling edge case e.g. no duplicates", "author": "ndegwamartin", "createdAt": "2020-05-12T14:44:49Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/EditTextFactoryTest.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.content.res.Resources;\n+import android.text.Editable;\n+import android.text.SpannableStringBuilder;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.RelativeLayout;\n+\n+import com.rengwuxian.materialedittext.MaterialEditText;\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.R;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+import com.vijay.jsonwizard.interfaces.JsonApi;\n+import com.vijay.jsonwizard.utils.FormUtils;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+\n+import java.util.List;\n+\n+public class EditTextFactoryTest extends BaseTest {\n+    private EditTextFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+\n+    @Mock\n+    private JsonFormFragment formFragment;\n+\n+    @Mock\n+    private Resources resources;\n+\n+    @Mock\n+    private CommonListener listener;\n+\n+    @Mock\n+    private RelativeLayout rootLayout;\n+\n+    @Mock\n+    private RelativeLayout editTextLayout;\n+\n+    @Mock\n+    private MaterialEditText editText;\n+\n+    @Mock\n+    private ImageView editButton;\n+\n+    @Mock\n+    private MaterialEditText totalValueEditText;\n+\n+    @Mock\n+    private MaterialEditText relatedEditText1;\n+\n+    @Mock\n+    private MaterialEditText relatedEditText2;\n+\n+    private String jsonForm = \"{\\\"encounter_type\\\":\\\"Birth Registration\\\",\\\"show_errors_on_submit\\\":true,\\\"count\\\":\\\"1\\\",\\\"display_scroll_bars\\\":true,\\\"mother\\\":{\\\"encounter_type\\\":\\\"New Woman Registration\\\"},\\\"entity_id\\\":\\\"\\\",\\\"relational_id\\\":\\\"\\\",\\\"metadata\\\":{\\\"start\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"start\\\",\\\"openmrs_entity_id\\\":\\\"163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"end\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"end\\\",\\\"openmrs_entity_id\\\":\\\"163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"today\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"encounter\\\",\\\"openmrs_entity_id\\\":\\\"encounter_date\\\"},\\\"deviceid\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"deviceid\\\",\\\"openmrs_entity_id\\\":\\\"163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"subscriberid\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"subscriberid\\\",\\\"openmrs_entity_id\\\":\\\"163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"simserial\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"simserial\\\",\\\"openmrs_entity_id\\\":\\\"163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"phonenumber\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"phonenumber\\\",\\\"openmrs_entity_id\\\":\\\"163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"encounter_location\\\":\\\"\\\",\\\"look_up\\\":{\\\"entity_id\\\":\\\"\\\",\\\"value\\\":\\\"\\\"}},\\\"step1\\\":{\\\"display_back_button\\\":\\\"true\\\",\\\"title\\\":\\\"Birth Registration\\\",\\\"fields\\\":[{\\\"key\\\":\\\"medications_other\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"10\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}},{\\\"key\\\":\\\"medications_other2\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"10\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}},{\\\"key\\\":\\\"medications_other3\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"20\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}}]}}\";\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new EditTextFactory();\n+    }\n+\n+    @Test\n+    public void testNumberEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"34\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        String gpsString = \"{\\\"key\\\":\\\"current_weight\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"5089\\\",\\\"type\\\":\\\"edit_text\\\",\\\"edit_text_style\\\":\\\"bordered\\\",\\\"edit_type\\\":\\\"number\\\",\\\"hint\\\":\\\"30\\\",\\\"value\\\":\\\"34\\\",\\\"label_info_text\\\":\\\"The into text\\\",\\\"label_into_title\\\":\\\"The info title\\\",\\\"v_numeric\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"\\\"},\\\"v_numeric_integer\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"\\\"},\\\"v_min\\\":{\\\"value\\\":\\\"30\\\",\\\"err\\\":\\\"Weight must be equal or greater than 30\\\"},\\\"v_max\\\":{\\\"value\\\":\\\"180\\\",\\\"err\\\":\\\"Weight must be equal or less than 180\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the current weight\\\"},\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);\n+    }\n+\n+    @Test\n+    public void testNameEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"Lifted\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        String gpsString = \"{\\\"key\\\":\\\"user_last_name\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"User Last name\\\",\\\"edit_type\\\":\\\"name\\\",\\\"value\\\":\\\"Lifted\\\",\\\"v_min_length\\\":{\\\"value\\\":\\\"6\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_max_length\\\":{\\\"value\\\":\\\"10\\\",\\\"is_fixed_size\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the last name\\\"},\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_url\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_email\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"relevance\\\":{\\\"step1:user_first_name\\\":{\\\"type\\\":\\\"string\\\",\\\"ex\\\":\\\"equalTo(., \\\\\\\"test\\\\\\\")\\\"}}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);\n+    }\n+\n+    @Test\n+    public void testNameWithRelativeNumericIntegerEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"Lifted\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        Mockito.doReturn(jsonForm).when(formFragment).getCurrentJsonState();\n+\n+        String gpsString = \"{\\\"key\\\":\\\"user_last_name\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"User Last name\\\",\\\"edit_type\\\":\\\"name\\\",\\\"value\\\":\\\"Lifted\\\",\\\"v_min_length\\\":{\\\"value\\\":\\\"6\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_max_length\\\":{\\\"value\\\":\\\"10\\\",\\\"is_fixed_size\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the last name\\\"},\\\"v_relative_max\\\":{\\\"value\\\":\\\"medications_other3\\\",\\\"err\\\":\\\"Enter required fields\\\"}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);\n+    }\n+    @Test\n+    public void testNameWithCumulativeTotalValidatorEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"Lifted\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        Mockito.doReturn(jsonForm).when(formFragment).getCurrentJsonState();\n+\n+        Mockito.doReturn(relatedEditText1).when((JsonApi) context).getFormDataView(\"step1:medications_other\");\n+        Mockito.doReturn(relatedEditText2).when((JsonApi) context).getFormDataView(\"step1:medications_other2\");\n+        Mockito.doReturn(totalValueEditText).when((JsonApi) context).getFormDataView(\"step1:medications_other3\");\n+\n+        String gpsString = \"{\\\"key\\\":\\\"user_last_name\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"User Last name\\\",\\\"edit_type\\\":\\\"name\\\",\\\"value\\\":\\\"Lifted\\\",\\\"v_min_length\\\":{\\\"value\\\":\\\"6\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_max_length\\\":{\\\"value\\\":\\\"10\\\",\\\"is_fixed_size\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the last name\\\"},\\\"v_cumulative_total\\\":{\\\"value\\\":\\\"medications_other3\\\",\\\"err\\\":\\\"Enter required fields\\\",\\\"related_fields\\\":[\\\"medications_other\\\",\\\"medications_other2\\\"]}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"step1\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);", "originalCommit": "2c3f2275dec65e29d68f3f345490cc64a169f8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b0eb8c33b77f9f5594e199c9828b605972b61b37", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/b0eb8c33b77f9f5594e199c9828b605972b61b37", "message": ":ok_hand: add review requests", "committedDate": "2020-05-12T14:57:36Z", "type": "commit"}, {"oid": "a7fc6f4bd70bfd77bcb27fb0a897b85def747942", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/a7fc6f4bd70bfd77bcb27fb0a897b85def747942", "message": "add open jdk to the travis builds", "committedDate": "2020-05-12T21:32:08Z", "type": "commit"}, {"oid": "dec10ba3541e7d35f83aeff937efb24bd5329d02", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/dec10ba3541e7d35f83aeff937efb24bd5329d02", "message": "Remove extra jdk config", "committedDate": "2020-05-12T21:46:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5MjIxOA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/422#discussion_r423792218", "bodyText": "I think we are better off asserting the exact value we expect based on the input in order to cover the ceiling edge case e.g. no duplicates", "author": "ndegwamartin", "createdAt": "2020-05-12T14:44:55Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/EditTextFactoryTest.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.content.res.Resources;\n+import android.text.Editable;\n+import android.text.SpannableStringBuilder;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.RelativeLayout;\n+\n+import com.rengwuxian.materialedittext.MaterialEditText;\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.R;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+import com.vijay.jsonwizard.interfaces.JsonApi;\n+import com.vijay.jsonwizard.utils.FormUtils;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+\n+import java.util.List;\n+\n+public class EditTextFactoryTest extends BaseTest {\n+    private EditTextFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+\n+    @Mock\n+    private JsonFormFragment formFragment;\n+\n+    @Mock\n+    private Resources resources;\n+\n+    @Mock\n+    private CommonListener listener;\n+\n+    @Mock\n+    private RelativeLayout rootLayout;\n+\n+    @Mock\n+    private RelativeLayout editTextLayout;\n+\n+    @Mock\n+    private MaterialEditText editText;\n+\n+    @Mock\n+    private ImageView editButton;\n+\n+    @Mock\n+    private MaterialEditText totalValueEditText;\n+\n+    @Mock\n+    private MaterialEditText relatedEditText1;\n+\n+    @Mock\n+    private MaterialEditText relatedEditText2;\n+\n+    private String jsonForm = \"{\\\"encounter_type\\\":\\\"Birth Registration\\\",\\\"show_errors_on_submit\\\":true,\\\"count\\\":\\\"1\\\",\\\"display_scroll_bars\\\":true,\\\"mother\\\":{\\\"encounter_type\\\":\\\"New Woman Registration\\\"},\\\"entity_id\\\":\\\"\\\",\\\"relational_id\\\":\\\"\\\",\\\"metadata\\\":{\\\"start\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"start\\\",\\\"openmrs_entity_id\\\":\\\"163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"end\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"end\\\",\\\"openmrs_entity_id\\\":\\\"163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"today\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"encounter\\\",\\\"openmrs_entity_id\\\":\\\"encounter_date\\\"},\\\"deviceid\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"deviceid\\\",\\\"openmrs_entity_id\\\":\\\"163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"subscriberid\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"subscriberid\\\",\\\"openmrs_entity_id\\\":\\\"163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"simserial\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"simserial\\\",\\\"openmrs_entity_id\\\":\\\"163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"phonenumber\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"phonenumber\\\",\\\"openmrs_entity_id\\\":\\\"163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"encounter_location\\\":\\\"\\\",\\\"look_up\\\":{\\\"entity_id\\\":\\\"\\\",\\\"value\\\":\\\"\\\"}},\\\"step1\\\":{\\\"display_back_button\\\":\\\"true\\\",\\\"title\\\":\\\"Birth Registration\\\",\\\"fields\\\":[{\\\"key\\\":\\\"medications_other\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"10\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}},{\\\"key\\\":\\\"medications_other2\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"10\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}},{\\\"key\\\":\\\"medications_other3\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"20\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}}]}}\";\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new EditTextFactory();\n+    }\n+\n+    @Test\n+    public void testNumberEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"34\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        String gpsString = \"{\\\"key\\\":\\\"current_weight\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"5089\\\",\\\"type\\\":\\\"edit_text\\\",\\\"edit_text_style\\\":\\\"bordered\\\",\\\"edit_type\\\":\\\"number\\\",\\\"hint\\\":\\\"30\\\",\\\"value\\\":\\\"34\\\",\\\"label_info_text\\\":\\\"The into text\\\",\\\"label_into_title\\\":\\\"The info title\\\",\\\"v_numeric\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"\\\"},\\\"v_numeric_integer\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"\\\"},\\\"v_min\\\":{\\\"value\\\":\\\"30\\\",\\\"err\\\":\\\"Weight must be equal or greater than 30\\\"},\\\"v_max\\\":{\\\"value\\\":\\\"180\\\",\\\"err\\\":\\\"Weight must be equal or less than 180\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the current weight\\\"},\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);\n+    }\n+\n+    @Test\n+    public void testNameEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"Lifted\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        String gpsString = \"{\\\"key\\\":\\\"user_last_name\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"User Last name\\\",\\\"edit_type\\\":\\\"name\\\",\\\"value\\\":\\\"Lifted\\\",\\\"v_min_length\\\":{\\\"value\\\":\\\"6\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_max_length\\\":{\\\"value\\\":\\\"10\\\",\\\"is_fixed_size\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the last name\\\"},\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_url\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_email\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"relevance\\\":{\\\"step1:user_first_name\\\":{\\\"type\\\":\\\"string\\\",\\\"ex\\\":\\\"equalTo(., \\\\\\\"test\\\\\\\")\\\"}}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);\n+    }\n+\n+    @Test\n+    public void testNameWithRelativeNumericIntegerEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"Lifted\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        Mockito.doReturn(jsonForm).when(formFragment).getCurrentJsonState();\n+\n+        String gpsString = \"{\\\"key\\\":\\\"user_last_name\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"User Last name\\\",\\\"edit_type\\\":\\\"name\\\",\\\"value\\\":\\\"Lifted\\\",\\\"v_min_length\\\":{\\\"value\\\":\\\"6\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_max_length\\\":{\\\"value\\\":\\\"10\\\",\\\"is_fixed_size\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter a valid name\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the last name\\\"},\\\"v_relative_max\\\":{\\\"value\\\":\\\"medications_other3\\\",\\\"err\\\":\\\"Enter required fields\\\"}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);", "originalCommit": "2c3f2275dec65e29d68f3f345490cc64a169f8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5MjI3OA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/422#discussion_r423792278", "bodyText": "I think we are better off asserting the exact value we expect based on the input in order to cover the ceiling edge case e.g. no duplicates", "author": "ndegwamartin", "createdAt": "2020-05-12T14:44:59Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/EditTextFactoryTest.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.content.res.Resources;\n+import android.text.Editable;\n+import android.text.SpannableStringBuilder;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.RelativeLayout;\n+\n+import com.rengwuxian.materialedittext.MaterialEditText;\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.R;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+import com.vijay.jsonwizard.interfaces.JsonApi;\n+import com.vijay.jsonwizard.utils.FormUtils;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+\n+import java.util.List;\n+\n+public class EditTextFactoryTest extends BaseTest {\n+    private EditTextFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+\n+    @Mock\n+    private JsonFormFragment formFragment;\n+\n+    @Mock\n+    private Resources resources;\n+\n+    @Mock\n+    private CommonListener listener;\n+\n+    @Mock\n+    private RelativeLayout rootLayout;\n+\n+    @Mock\n+    private RelativeLayout editTextLayout;\n+\n+    @Mock\n+    private MaterialEditText editText;\n+\n+    @Mock\n+    private ImageView editButton;\n+\n+    @Mock\n+    private MaterialEditText totalValueEditText;\n+\n+    @Mock\n+    private MaterialEditText relatedEditText1;\n+\n+    @Mock\n+    private MaterialEditText relatedEditText2;\n+\n+    private String jsonForm = \"{\\\"encounter_type\\\":\\\"Birth Registration\\\",\\\"show_errors_on_submit\\\":true,\\\"count\\\":\\\"1\\\",\\\"display_scroll_bars\\\":true,\\\"mother\\\":{\\\"encounter_type\\\":\\\"New Woman Registration\\\"},\\\"entity_id\\\":\\\"\\\",\\\"relational_id\\\":\\\"\\\",\\\"metadata\\\":{\\\"start\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"start\\\",\\\"openmrs_entity_id\\\":\\\"163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"end\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"end\\\",\\\"openmrs_entity_id\\\":\\\"163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"today\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"encounter\\\",\\\"openmrs_entity_id\\\":\\\"encounter_date\\\"},\\\"deviceid\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"deviceid\\\",\\\"openmrs_entity_id\\\":\\\"163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"subscriberid\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"subscriberid\\\",\\\"openmrs_entity_id\\\":\\\"163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"simserial\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"simserial\\\",\\\"openmrs_entity_id\\\":\\\"163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"phonenumber\\\":{\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"concept\\\",\\\"openmrs_data_type\\\":\\\"phonenumber\\\",\\\"openmrs_entity_id\\\":\\\"163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\"},\\\"encounter_location\\\":\\\"\\\",\\\"look_up\\\":{\\\"entity_id\\\":\\\"\\\",\\\"value\\\":\\\"\\\"}},\\\"step1\\\":{\\\"display_back_button\\\":\\\"true\\\",\\\"title\\\":\\\"Birth Registration\\\",\\\"fields\\\":[{\\\"key\\\":\\\"medications_other\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"10\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}},{\\\"key\\\":\\\"medications_other2\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"10\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}},{\\\"key\\\":\\\"medications_other3\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"edit_text\\\",\\\"hint\\\":\\\"Specify\\\",\\\"v_regex\\\":{\\\"value\\\":\\\"[A-Za-z\\\\\\\\s\\\\\\\\.\\\\\\\\-]*\\\",\\\"err\\\":\\\"Please enter valid content\\\"},\\\"value\\\":\\\"20\\\",\\\"relevance\\\":{\\\"step1:medications\\\":{\\\"ex-checkbox\\\":[{\\\"or\\\":[\\\"other\\\"]}]}}}]}}\";\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new EditTextFactory();\n+    }\n+\n+    @Test\n+    public void testNumberEditTextFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        EditTextFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);\n+\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Assert.assertNotNull(resources);\n+\n+        context.setTheme(R.style.NativeFormsAppTheme);\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRelativeLayout(context);\n+        Assert.assertNotNull(rootLayout);\n+\n+        Mockito.doReturn(editTextLayout).when(rootLayout).findViewById(R.id.edit_text_layout);\n+        Assert.assertNotNull(editTextLayout);\n+\n+        Mockito.doReturn(editText).when(editTextLayout).findViewById(R.id.edit_text);\n+        Assert.assertNotNull(editText);\n+\n+        Mockito.doReturn(editButton).when(editTextLayout).findViewById(R.id.material_edit_text_edit_button);\n+        Assert.assertNotNull(editButton);\n+\n+        Editable editable = new SpannableStringBuilder(\"34\");\n+        Mockito.doReturn(editable).when(editText).getText();\n+\n+        String gpsString = \"{\\\"key\\\":\\\"current_weight\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"5089\\\",\\\"type\\\":\\\"edit_text\\\",\\\"edit_text_style\\\":\\\"bordered\\\",\\\"edit_type\\\":\\\"number\\\",\\\"hint\\\":\\\"30\\\",\\\"value\\\":\\\"34\\\",\\\"label_info_text\\\":\\\"The into text\\\",\\\"label_into_title\\\":\\\"The info title\\\",\\\"v_numeric\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"\\\"},\\\"v_numeric_integer\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"\\\"},\\\"v_min\\\":{\\\"value\\\":\\\"30\\\",\\\"err\\\":\\\"Weight must be equal or greater than 30\\\"},\\\"v_max\\\":{\\\"value\\\":\\\"180\\\",\\\"err\\\":\\\"Weight must be equal or less than 180\\\"},\\\"v_required\\\":{\\\"value\\\":\\\"true\\\",\\\"err\\\":\\\"Please enter the current weight\\\"},\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, new JSONObject(gpsString), listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertTrue(viewList.size() > 0);", "originalCommit": "2c3f2275dec65e29d68f3f345490cc64a169f8c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}