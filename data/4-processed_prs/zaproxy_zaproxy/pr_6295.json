{"pr_number": 6295, "pr_title": "Added support for dynamic technologies", "pr_createdAt": "2020-11-13T16:36:27Z", "pr_url": "https://github.com/zaproxy/zaproxy/pull/6295", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3OTY4Mg==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524279682", "bodyText": "Paros classes should have a ZAP comment.", "author": "thc202", "createdAt": "2020-11-16T13:49:11Z", "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/AbstractPlugin.java", "diffHunk": "@@ -123,7 +123,7 @@\n \n     /** Default Constructor */\n     public AbstractPlugin() {\n-        this.techSet = TechSet.AllTech;\n+        this.techSet = TechSet.getAllTech();", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDQ3OA==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524280478", "bodyText": "This resets the tree state, losing the previous selections.", "author": "thc202", "createdAt": "2020-11-16T13:50:19Z", "path": "zap/src/main/java/org/zaproxy/zap/extension/ascan/CustomScanDialog.java", "diffHunk": "@@ -643,6 +643,8 @@ private JPanel getTechPanel() {\n                             javax.swing.border.EtchedBorder.RAISED));\n \n             techPanel.add(scrollPane, LayoutHelper.getGBC(0, 0, 1, 1, 1.0D, 1.0D));\n+        } else {\n+            getTechTree().refresh();", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5NzMyOA==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524297328", "bodyText": "Any idea on how I can refresh the tree including the state when a tech gets added? I always got errors in awt stuff,and I'm not so into awt.", "author": "t4skforce", "createdAt": "2020-11-16T14:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzMjc5OQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r525232799", "bodyText": "Reworked and working now.", "author": "t4skforce", "createdAt": "2020-11-17T15:13:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDQ3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDU3MA==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524280570", "bodyText": "This should be removed, the codebase should not depend on core Log4j classes unless used specifically for logging.", "author": "thc202", "createdAt": "2020-11-16T13:50:26Z", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -19,6 +19,9 @@\n  */\n package org.zaproxy.zap.model;\n \n+import java.util.Arrays;\n+import java.util.TreeSet;\n+import org.apache.logging.log4j.core.util.Assert;", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MTAxMg==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524281012", "bodyText": "Should return a collection, rather than create a new array each time.\nShould have a since tag.", "author": "thc202", "createdAt": "2020-11-16T13:51:02Z", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -195,4 +206,68 @@ public int compareTo(Tech o) {\n \n         return this.toString().compareTo(o.toString());\n     }\n+\n+    /**\n+     * Returns all techs\n+     *\n+     * @return all techs\n+     */\n+    public static Tech[] getAll() {", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzMzIzNQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r525233235", "bodyText": "Hope v 2.10.0 works for @SInCE", "author": "t4skforce", "createdAt": "2020-11-17T15:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MTAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MTkzOA==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524281938", "bodyText": "Adds a new tech\nas new parent \u2192 as a top level tech.", "author": "thc202", "createdAt": "2020-11-16T13:52:23Z", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -195,4 +206,68 @@ public int compareTo(Tech o) {\n \n         return this.toString().compareTo(o.toString());\n     }\n+\n+    /**\n+     * Returns all techs\n+     *\n+     * @return all techs\n+     */\n+    public static Tech[] getAll() {\n+        return allTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Returns all top level techs\n+     *\n+     * @return top level techs\n+     */\n+    public static Tech[] getTopLevel() {\n+        return topLevelTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Adds entry from techs, if parent is omitted it is treated as new parent", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MjE5OA==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524282198", "bodyText": "Should be just a null check, like done in the following statement.", "author": "thc202", "createdAt": "2020-11-16T13:52:49Z", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -195,4 +206,68 @@ public int compareTo(Tech o) {\n \n         return this.toString().compareTo(o.toString());\n     }\n+\n+    /**\n+     * Returns all techs\n+     *\n+     * @return all techs\n+     */\n+    public static Tech[] getAll() {\n+        return allTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Returns all top level techs\n+     *\n+     * @return top level techs\n+     */\n+    public static Tech[] getTopLevel() {\n+        return topLevelTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Adds entry from techs, if parent is omitted it is treated as new parent\n+     *\n+     * @param tech to add\n+     */\n+    public static void add(Tech tech) {\n+        if (Assert.isNonEmpty(tech)) {", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzUzMg==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524283532", "bodyText": "Should have JavaDoc explaining that this returns a new TechSet each time, although it should not need to.", "author": "thc202", "createdAt": "2020-11-16T13:54:45Z", "path": "zap/src/main/java/org/zaproxy/zap/model/TechSet.java", "diffHunk": "@@ -117,4 +119,26 @@ public void print() {\n             System.out.println(\"\\tExclude: \" + tech);\n         }\n     }\n+\n+    public static TechSet getAllTech() {", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzcwOA==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524283708", "bodyText": "This prevents the techs from being saved.", "author": "thc202", "createdAt": "2020-11-16T13:55:01Z", "path": "zap/src/main/java/org/zaproxy/zap/view/ContextTechnologyPanel.java", "diffHunk": "@@ -73,6 +73,8 @@ private TechnologyTreePanel getTechTree() {\n             techPanel =\n                     new TechnologyTreePanel(\n                             Constant.messages.getString(\"context.technology.tree.root\"));\n+        } else {\n+            techPanel.refresh();", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5ODc3Nw==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524298777", "bodyText": "Ideas on fixing this? As stated before, awt.. is not my strong suite.", "author": "t4skforce", "createdAt": "2020-11-16T14:17:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzMzU2NA==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r525233564", "bodyText": "Reworked and working now.", "author": "t4skforce", "createdAt": "2020-11-17T15:14:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4NzI5Mg==", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524287292", "bodyText": "Typo in update.", "author": "thc202", "createdAt": "2020-11-16T14:00:16Z", "path": "zap/src/main/java/org/zaproxy/zap/view/TechnologyTreePanel.java", "diffHunk": "@@ -71,16 +73,30 @@ protected void setExpandedState(TreePath path, boolean state) {\n                         }\n                     }\n                 };\n-        // Initialise the structure based on all the tech we know about\n-        TechSet ts = new TechSet(Tech.builtInTech);\n-        Iterator<Tech> iter = ts.getIncludeTech().iterator();\n \n-        DefaultMutableTreeNode root = new DefaultMutableTreeNode(nameRootNode);\n-        Tech tech;\n+        root = new DefaultMutableTreeNode(nameRootNode);\n+        refresh();\n+\n+        JScrollPane scrollPane = new JScrollPane();\n+        scrollPane.setViewportView(techTree);\n+        scrollPane.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.RAISED));\n+\n+        add(scrollPane, BorderLayout.CENTER);\n+    }\n+\n+    /**\n+     * Initialise / updats the structure based on all the tech we know about", "originalCommit": "c663d944aa0f18024d8e331aa643a043b7d6e249", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3d8f9d05d1bb759214d03cdf9cc8cf61cdab16be", "url": "https://github.com/zaproxy/zaproxy/commit/3d8f9d05d1bb759214d03cdf9cc8cf61cdab16be", "message": "Added support for dynamic technologies\n\nSigned-off-by: t4skforce <t4skforce1337@gmail.com>", "committedDate": "2020-12-15T10:37:43Z", "type": "commit"}]}