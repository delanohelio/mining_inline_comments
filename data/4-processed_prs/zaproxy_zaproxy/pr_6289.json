{"pr_number": 6289, "pr_title": "Add convenience methods for identifying CSS related messages", "pr_createdAt": "2020-11-10T16:00:14Z", "pr_url": "https://github.com/zaproxy/zaproxy/pull/6289", "timeline": [{"oid": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "url": "https://github.com/zaproxy/zaproxy/commit/705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-11-11T00:13:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMDk2MQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6289#discussion_r521220961", "bodyText": "..WhenContentTypeDoesnNotIndicateCss ?", "author": "psiinon", "createdAt": "2020-11-11T09:19:01Z", "path": "zap/src/test/java/org/parosproxy/paros/network/HttpResponseHeaderUnitTest.java", "diffHunk": "@@ -126,4 +130,43 @@ public void shouldSetEmptyReasonPhraseIfNull() throws Exception {\n         assertThat(header.getReasonPhrase(), is(equalTo(\"\")));\n         assertThat(header.getPrimeHeader(), is(equalTo(\"HTTP/1.1 200\")));\n     }\n+\n+    @ParameterizedTest\n+    @ValueSource(\n+            strings = {\n+                \"text/html\", // Text but not css\n+                \"image/png\", // Not text or css\n+                \"teXt/hTmL\", // Mixed case\n+                \"text/html; charset=UTF-8\", // Expected charset\n+                \"text/html;charset=UTF-8\", // Charset without space\n+                \"charset=UTF-8; text/html\" // Charset first\n+            })\n+    public void isCssShouldReturnFalseWhenContentTypeIndicatesCss(String contentType) {", "originalCommit": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NTQwNg==", "url": "https://github.com/zaproxy/zaproxy/pull/6289#discussion_r521295406", "bodyText": "Oops, paste fail ...", "author": "kingthorin", "createdAt": "2020-11-11T11:32:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMDk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM0NDg4MA==", "url": "https://github.com/zaproxy/zaproxy/pull/6289#discussion_r521344880", "bodyText": "It was added one n before Not.", "author": "thc202", "createdAt": "2020-11-11T13:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMDk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM1OTMxNQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6289#discussion_r521359315", "bodyText": ":( we did it to each other, I copied psiinon's text above for the adjustment :(\nFixed the fix :)", "author": "kingthorin", "createdAt": "2020-11-11T13:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMDk2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2NTA3NQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6289#discussion_r521265075", "bodyText": "Can be static (same comment in the other test class).", "author": "thc202", "createdAt": "2020-11-11T10:34:52Z", "path": "zap/src/test/java/org/parosproxy/paros/network/HttpRequestHeaderUnitTest.java", "diffHunk": "@@ -183,6 +188,52 @@ public void shouldReplaceAnyCookieHeaderWhenSettingCookieParams() {\n         assertThat(header.getHeaderValues(HttpHeader.COOKIE), hasSize(1));\n     }\n \n+    @ParameterizedTest\n+    @ValueSource(\n+            strings = {\n+                \"http://example.org/css/file.ext\", // In directory path\n+                \"http://ericsson.com/\", // In domain name\n+                \"https://example.css\", // In domain extension (TLD)\n+                \"https://example.css/dir/file.ext\", // In domain extension (TLD)\n+                \"https://example.org/dir/file?foo=bar&thing=css\", // In parameter value\n+                \"http://example.org/css/file.ext?foo=bar&type=.css\", // In parameter value including\n+                // period\n+                \"http://example.org/css/file.ext?foo=bar&thing=styles.css\", // In parameter value,\n+                // plausible filename\n+                \"https://example.org/dir/file?foo=bar&css=file.ext\" // In parameter name\n+            })\n+    public void isCssShouldReturnFalseWhenUrlDoesNotIndicateCss(String url) {\n+        // Given\n+        HttpRequestHeader reqHeader = createRequestHeader(url);\n+        // When / Then\n+        assertFalse(reqHeader.isCss());\n+    }\n+\n+    @ParameterizedTest\n+    @ValueSource(\n+            strings = {\n+                \"http://example.org/styles.css\", // In path\n+                \"http://example.org/assets/css/styles.css\", // In deeper path\n+                \"http://example.org/css/styles.css?foo=bar\", // In path, ignoring params\n+                \"http://example.org/css/styles.css?foo=bar&thing=.css\", // In path, ignoring params\n+            })\n+    public void isCssShouldReturnTrueWhenUrlIndicatesCss(String url) {\n+        // Given\n+        HttpRequestHeader reqHeader = createRequestHeader(url);\n+        // When / Then\n+        assertTrue(reqHeader.isCss());\n+    }\n+\n+    private HttpRequestHeader createRequestHeader(String url) {", "originalCommit": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e2f77d86f84ce30451a7b1304bc0cf896ac6ff6e", "url": "https://github.com/zaproxy/zaproxy/commit/e2f77d86f84ce30451a7b1304bc0cf896ac6ff6e", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-11-11T12:28:44Z", "type": "forcePushed"}, {"oid": "0eb7835c0a25bfa20c6b75383ced6e6141506885", "url": "https://github.com/zaproxy/zaproxy/commit/0eb7835c0a25bfa20c6b75383ced6e6141506885", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-11-11T13:30:27Z", "type": "commit"}, {"oid": "0eb7835c0a25bfa20c6b75383ced6e6141506885", "url": "https://github.com/zaproxy/zaproxy/commit/0eb7835c0a25bfa20c6b75383ced6e6141506885", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-11-11T13:30:27Z", "type": "forcePushed"}]}