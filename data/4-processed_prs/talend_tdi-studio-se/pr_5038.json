{"pr_number": 5038, "pr_title": "feat(TDI-42668):update jar of tssh component branch 7.3", "pr_createdAt": "2020-08-05T23:31:15Z", "pr_url": "https://github.com/Talend/tdi-studio-se/pull/5038", "timeline": [{"oid": "ad97602dd93a877207abdca21fd616f803fa6cde", "url": "https://github.com/Talend/tdi-studio-se/commit/ad97602dd93a877207abdca21fd616f803fa6cde", "message": "feat(TDI-42668):update jar of tssh component", "committedDate": "2020-08-05T23:29:15Z", "type": "commit"}, {"oid": "a47966a23363568f88d925a5f0bc6859293b98da", "url": "https://github.com/Talend/tdi-studio-se/commit/a47966a23363568f88d925a5f0bc6859293b98da", "message": "fix status code", "committedDate": "2020-08-06T02:04:43Z", "type": "commit"}, {"oid": "0f61e4b1f78af2a90eb44afce8397625b959f227", "url": "https://github.com/Talend/tdi-studio-se/commit/0f61e4b1f78af2a90eb44afce8397625b959f227", "message": "fix error interactive", "committedDate": "2020-08-10T06:49:01Z", "type": "commit"}, {"oid": "db41c6d07888a3789b2c57e8524d491441980669", "url": "https://github.com/Talend/tdi-studio-se/commit/db41c6d07888a3789b2c57e8524d491441980669", "message": "support dsa", "committedDate": "2020-08-12T08:59:48Z", "type": "commit"}, {"oid": "749091b5cad8c0c92e7789bd0c44e2df185c23e6", "url": "https://github.com/Talend/tdi-studio-se/commit/749091b5cad8c0c92e7789bd0c44e2df185c23e6", "message": "fix compile error", "committedDate": "2020-08-12T09:06:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI5MzUyNg==", "url": "https://github.com/Talend/tdi-studio-se/pull/5038#discussion_r473293526", "bodyText": "hardcoded value. create a regression", "author": "pteyssier", "createdAt": "2020-08-19T20:16:56Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tSSH/tSSH_begin.javajet", "diffHunk": "@@ -83,104 +47,95 @@ if ((metadatas!=null)&&(metadatas.size()>0)) {\n \t\t<%if(isLog4jEnabled){%>\n \t\t\tlog.info(\"<%=cid%> - Connection attempt to '\" +hostname_<%=cid%> + \"' on the port '\"+<%=port%>+\"' as '\" + username_<%=cid%> + \"'.\");\n \t\t<%}%>\n-<%\n-        if((\"\").equals(port)){\n-%>\n-\t\t\t  ch.ethz.ssh2.Connection conn_<%=cid%> = new ch.ethz.ssh2.Connection(hostname_<%=cid%>);\n-<%\n-        } else {\n-%>\n-\t\t\t  ch.ethz.ssh2.Connection conn_<%=cid%> = new ch.ethz.ssh2.Connection(hostname_<%=cid%>,Integer.parseInt(<%=port %> + \"\"));\n-<%\n-        }\n-%>\n-\t\t/* Create a session */\n-\t\tch.ethz.ssh2.Session sess_<%=cid%> = null;\n-              /* Now connect */\n-<%\n-        if((\"true\").equals(useTimeout)){\n-%>\n-\t\t\t  conn_<%=cid%>.connect(null,0,<%=timeout%>*1000);\n-<%\n-        } else {\n-%>\n-\t\t\t  conn_<%=cid%>.connect();\n-<%\n-        }\n-        \n+\t\torg.apache.sshd.client.SshClient client_<%=cid%> = org.apache.sshd.client.SshClient.setUpDefaultClient();\n+\t\t\n+\t\t<%\n         if ((\"PUBLICKEY\").equals(authMethod)) {\n-%>\n-\t\t<%if(isLog4jEnabled){%>\n-\t\t\tlog.info(\"<%=cid%> - Authentication using a public key.\");\n-\t\t<%}%>\n-        java.io.File keyfile_<%=cid%> = new java.io.File(<%=privatekey%>); \n-        \n-        <%\n-        String passwordFieldName = \"__PASSPHRASE__\";\n         %>\n-        \n-        <%@ include file=\"@{org.talend.designer.components.localprovider}/components/templates/password.javajet\"%>        \n-        \n-\t\t    boolean isAuthenticated_<%=cid%> = conn_<%=cid%>.authenticateWithPublicKey(username_<%=cid%>, keyfile_<%=cid%>, decryptedPassword_<%=cid%>);\n-\t\t\t  if (isAuthenticated_<%=cid%> == false){\n-\t\t\t      throw new RuntimeException(\"Authentication failed.\");\n-\t\t\t  }\n-<%\n-        }\n-        if ((\"PASSWORD\").equals(authMethod)) {\n-%>\n \t\t<%if(isLog4jEnabled){%>\n-\t\t\tlog.info(\"<%=cid%> - Authentication using a password.\");\n+\t\t\tlog.info(\"<%=cid%> - Authentication using a public key.\");\n \t\t<%}%>\n+\t\tclient_<%=cid%>.setUserAuthFactories(java.util.Collections.singletonList(org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyFactory.INSTANCE));\n+\t\tjava.nio.file.Path privateKey_<%=cid%> = java.nio.file.Paths.get(<%=privatekey%>);\n+\t\tjava.util.List<String> lines_<%=cid%> = java.nio.file.Files.readAllLines(privateKey_tSSH_1);", "originalCommit": "749091b5cad8c0c92e7789bd0c44e2df185c23e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}