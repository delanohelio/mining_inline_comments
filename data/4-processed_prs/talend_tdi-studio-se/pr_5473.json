{"pr_number": 5473, "pr_title": "feat(TDI-44915) access token feature", "pr_createdAt": "2020-11-05T13:52:14Z", "pr_url": "https://github.com/Talend/tdi-studio-se/pull/5473", "timeline": [{"oid": "614324d11a20b6e889c0b74b032e594a6ea40b12", "url": "https://github.com/Talend/tdi-studio-se/commit/614324d11a20b6e889c0b74b032e594a6ea40b12", "message": "feat(TDI-44915): integrate Balazs POC", "committedDate": "2020-11-05T13:33:33Z", "type": "commit"}, {"oid": "3f4ecef02bc255578db537e8383bccc2b2b2788e", "url": "https://github.com/Talend/tdi-studio-se/commit/3f4ecef02bc255578db537e8383bccc2b2b2788e", "message": "feat(TDI-44915): implement other BigQuery component with access token", "committedDate": "2020-11-05T13:33:33Z", "type": "commit"}, {"oid": "44e196cbbbb04afcb666e848e6b6073c2eafabdd", "url": "https://github.com/Talend/tdi-studio-se/commit/44e196cbbbb04afcb666e848e6b6073c2eafabdd", "message": "feat(TDI-44915): update BigQuery bulkexec with new common jet", "committedDate": "2020-11-05T13:33:34Z", "type": "commit"}, {"oid": "ad6bb2803c93953ab528550404c6d20d35149ed2", "url": "https://github.com/Talend/tdi-studio-se/commit/ad6bb2803c93953ab528550404c6d20d35149ed2", "message": "feat(TDI-44915): update tGSBucketCreate", "committedDate": "2020-11-05T13:35:26Z", "type": "commit"}, {"oid": "b507ec3fec929ea5aba17009a2b32b3f1df0da6b", "url": "https://github.com/Talend/tdi-studio-se/commit/b507ec3fec929ea5aba17009a2b32b3f1df0da6b", "message": "feat(TDI-44915): update tGSBucketDelete", "committedDate": "2020-11-05T13:36:16Z", "type": "commit"}, {"oid": "b77a6209b40fb2214174d3bc5644a9de8e6ca966", "url": "https://github.com/Talend/tdi-studio-se/commit/b77a6209b40fb2214174d3bc5644a9de8e6ca966", "message": "feat(TDI-44915): update tGSBucketExist", "committedDate": "2020-11-05T13:37:02Z", "type": "commit"}, {"oid": "3568ab6e2657b49eefcbb878b86efe4a799e4aa6", "url": "https://github.com/Talend/tdi-studio-se/commit/3568ab6e2657b49eefcbb878b86efe4a799e4aa6", "message": "feat(TDI-44915): update tGSBucketList", "committedDate": "2020-11-05T13:37:36Z", "type": "commit"}, {"oid": "c60a51870465c266c2b0fca48f77a33de7a44846", "url": "https://github.com/Talend/tdi-studio-se/commit/c60a51870465c266c2b0fca48f77a33de7a44846", "message": "feat(TDI-44915): update connection and close part", "committedDate": "2020-11-05T13:38:10Z", "type": "commit"}, {"oid": "8ab0248b6000115d725b8558befa8bde3ebf89d9", "url": "https://github.com/Talend/tdi-studio-se/commit/8ab0248b6000115d725b8558befa8bde3ebf89d9", "message": "feat(TDI-44915): update tGSCopy", "committedDate": "2020-11-05T13:38:58Z", "type": "commit"}, {"oid": "435158dab609b9a43a5996b1fc000921220393ce", "url": "https://github.com/Talend/tdi-studio-se/commit/435158dab609b9a43a5996b1fc000921220393ce", "message": "feat(TDI-44915): update tGSDelete", "committedDate": "2020-11-05T13:39:28Z", "type": "commit"}, {"oid": "69c1f3bc489e970e5523d0fe0f8e122c0620c89e", "url": "https://github.com/Talend/tdi-studio-se/commit/69c1f3bc489e970e5523d0fe0f8e122c0620c89e", "message": "feat(TDI-44915): update tGSGet", "committedDate": "2020-11-05T13:40:02Z", "type": "commit"}, {"oid": "e32bbb0be490cd53d0d418c9e7fc5ee087e05bdc", "url": "https://github.com/Talend/tdi-studio-se/commit/e32bbb0be490cd53d0d418c9e7fc5ee087e05bdc", "message": "feat(TDI-44915): update tGSList", "committedDate": "2020-11-05T13:40:32Z", "type": "commit"}, {"oid": "9f430e0cb47a33884d687f270479e1272030bfbc", "url": "https://github.com/Talend/tdi-studio-se/commit/9f430e0cb47a33884d687f270479e1272030bfbc", "message": "feat(TDI-44915): update tGSPut", "committedDate": "2020-11-05T13:41:00Z", "type": "commit"}, {"oid": "08a1713a0372413716556d174b5a95d77e35144c", "url": "https://github.com/Talend/tdi-studio-se/commit/08a1713a0372413716556d174b5a95d77e35144c", "message": "feat(TDI-44915): use proxy to communicate with GS", "committedDate": "2020-11-06T14:45:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc3MDg0Ng==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518770846", "bodyText": "Maybe would be better to use comma instead of first \"or\"?", "author": "chmyga", "createdAt": "2020-11-06T14:03:51Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryBulkExec/tBigQueryBulkExec_begin.javajet", "diffHunk": "@@ -213,9 +213,35 @@\n \t\t/* ----END-CREATING-CLIENT (Cloud API)---- */\r\n \r\n \t\tlong nb_line_<%=cid%> = 0;\r\n+  <%\r\n+  } else if (authMode.equals(\"TOKEN\")) {\r\n+    if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+       final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+  <%} else {%>\n+       final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+  <%}%>\r\n+\t/* ----START-CREATING-CLIENT (OAuth based Token)---- */\r\n+\t\tfinal String PROJECT_ID_<%=cid %> = <%=projectId %>;\r\n+\r\n+\t\tcom.google.api.client.auth.oauth2.Credential cred_<%=cid%> =\r\n+\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\r\n+\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));\r\n+\r\n+\t\tcom.google.api.services.bigquery.Bigquery bigqueryclient_<%=cid%> = null;\r\n+\t\tlong nb_line_<%=cid%> = 0;\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.info(\"<%=cid%> - Creating client.\");\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tbigqueryclient_<%=cid%> =\r\n+\t\tnew com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(), new com.google.api.client.json.jackson2.JacksonFactory(), cred_<%=cid%>).setApplicationName(\"Talend\").build();\r\n+\t/* ----END-CREATING-CLIENT (OAuth based Token)---- */\r\n \t<%\r\n \t} else {\r\n-\t\tthrow new IllegalArgumentException(\"authentication mode should be either \\\"SERVICEACCOUNT\\\" or \\\"OAUTH\\\", but it is \" + authMode);\r\n+\t\tthrow new IllegalArgumentException(\"authentication mode should be either \\\"SERVICEACCOUNT\\\" or \\\"OAUTH\\\" or \\\"TOKEN\\\", but it is \" + authMode);\r", "originalCommit": "9f430e0cb47a33884d687f270479e1272030bfbc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc5ODkxMQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518798911", "bodyText": "if ACCESS_TOKEN is going to be a function and we need to call the function we should call the function here and not to set final String decryptedAccessToken_<%=cid%> here.", "author": "chmyga", "createdAt": "2020-11-06T14:49:11Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryBulkExec/tBigQueryBulkExec_begin.javajet", "diffHunk": "@@ -351,10 +360,13 @@\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t<%}%>\r\n-\t\t\r\n+\r\n \t\t<%if (createTableIfNotExist) { %>\r\n-\t\t\t\r\n+\r\n \t\t\ttry {\r\n+\t\t\t\t<% if(authMode.equals(\"TOKEN\") && !ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) { %>\r\n+\t\t\t\tcred_<%=cid%>.setAccessToken(decryptedAccessToken_<%=cid%>);\r", "originalCommit": "08a1713a0372413716556d174b5a95d77e35144c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgxNjQzNA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518816434", "bodyText": "Don't we need to update this token from function(if it is set as function) in BigQuery Input?", "author": "chmyga", "createdAt": "2020-11-06T15:15:42Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryInput/tBigQueryInput_begin.javajet", "diffHunk": "@@ -195,17 +199,23 @@\n \t\t\t\t// Store the refresh token for future use.\n \t\t\t\tjava.util.Properties storeProperties_<%=cid%> = new java.util.Properties();\n \t\t\t\tstoreProperties_<%=cid%>.setProperty(\"refreshtoken\", credential_<%=cid%>.getRefreshToken());\n-\t\t\t\tjava.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>);\n-\t\t\t\tstoreProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n-\t\t\t\tif (outputStream_<%=cid%> != null) {\n-\t\t\t\t    outputStream_<%=cid%>.close();\n-\t\t\t\t}\n-\n-\t\t\t\tbigqueryclient_<%=cid%> = new com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(),new com.google.api.client.json.jackson2.JacksonFactory(),credential_<%=cid%>).build();\n+        try (java.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>)) {\n+            storeProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n+        }\n \t\t\t}\n \t\t}\n-\n-\n+<%} else {\n+\n+  if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+     final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+  <%} else {%>\n+     final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+  <%}%>\n+\t\tcredential_<%=cid%> =\n+\t\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\n+\t\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));", "originalCommit": "08a1713a0372413716556d174b5a95d77e35144c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMDExMQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518820111", "bodyText": "For BigQueryOutput this token should be updated as well, I guess.", "author": "chmyga", "createdAt": "2020-11-06T15:20:23Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQuerySQLRow/tBigQuerySQLRow_begin.javajet", "diffHunk": "@@ -151,17 +155,27 @@\n \t\t\t\ttry(java.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>)) {\n \t\t\t\t\tstoreProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n \t\t\t\t}\n-\t\n-\t\t\t\tbigqueryclient_<%=cid%> = new com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(),new com.google.api.client.json.jackson2.JacksonFactory(),credential_<%=cid%>).build();\n \t\t\t}\n \t\t}\n+    <% } else {\n+\n+      if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+         final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+      <%} else {%>\n+         final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+      <%}%>\n+    \t\tcredential_<%=cid%> =\n+    \t\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\n+    \t\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));", "originalCommit": "08a1713a0372413716556d174b5a95d77e35144c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMzAzMg==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518823032", "bodyText": "Refresh the token from function.", "author": "chmyga", "createdAt": "2020-11-06T15:24:45Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQuerySQLRow/tBigQuerySQLRow_begin.javajet", "diffHunk": "@@ -151,17 +155,27 @@\n \t\t\t\ttry(java.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>)) {\n \t\t\t\t\tstoreProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n \t\t\t\t}\n-\t\n-\t\t\t\tbigqueryclient_<%=cid%> = new com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(),new com.google.api.client.json.jackson2.JacksonFactory(),credential_<%=cid%>).build();\n \t\t\t}\n \t\t}\n+    <% } else {\n+\n+      if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+         final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+      <%} else {%>\n+         final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+      <%}%>\n+    \t\tcredential_<%=cid%> =\n+    \t\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\n+    \t\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));", "originalCommit": "9f430e0cb47a33884d687f270479e1272030bfbc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNzY4OQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518827689", "bodyText": "Why did you remove check from existing connection? it should be shown if existing connection also uses service account authentication(or oauth token as well, I guess).", "author": "chmyga", "createdAt": "2020-11-06T15:31:53Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSPut/tGSPut_java.xml", "diffHunk": "@@ -158,16 +187,16 @@\n     </PARAMETERS>\n \n     <ADVANCED_PARAMETERS>\n-\t\n+\n \t\t<PARAMETER\n                 NAME=\"PART_SIZE\"\n                 FIELD=\"TEXT\"\n                 NUM_ROW=\"1\"\n-\t\t\t\tSHOW_IF=\"((USE_EXISTING_CONNECTION == 'true') AND (#LINK@NODE.CONNECTION.AUTH_TYPE == 'SERVICE_ACCOUNT')) OR ((USE_EXISTING_CONNECTION == 'false') AND (AUTH_TYPE == 'SERVICE_ACCOUNT'))\"\n+\t\t\t\tSHOW_IF=\"((AUTH_TYPE == 'SERVICE_ACCOUNT') OR (AUTH_TYPE == 'TOKEN'))\"", "originalCommit": "9f430e0cb47a33884d687f270479e1272030bfbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzMzUxNA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518833514", "bodyText": "agree. I missed this. Gonna update this.", "author": "mbasiuk-talend", "createdAt": "2020-11-06T15:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNzY4OQ=="}], "type": "inlineReview"}, {"oid": "383bcd21fb60d16774766f307e10dbf5cf6575d1", "url": "https://github.com/Talend/tdi-studio-se/commit/383bcd21fb60d16774766f307e10dbf5cf6575d1", "message": "feat(TDI-44915): update code due to PR comments", "committedDate": "2020-11-09T09:22:10Z", "type": "commit"}, {"oid": "d0fbc877ef40d06b1373b4400bc59e5bcb2959cc", "url": "https://github.com/Talend/tdi-studio-se/commit/d0fbc877ef40d06b1373b4400bc59e5bcb2959cc", "message": "feat(TDI-44915): update Input code generation", "committedDate": "2020-11-10T09:18:12Z", "type": "commit"}, {"oid": "4dc39d61b34b837cb4ee534a1622f50a12d68cf3", "url": "https://github.com/Talend/tdi-studio-se/commit/4dc39d61b34b837cb4ee534a1622f50a12d68cf3", "message": "feat(TDI-44915): fix tGSPut xml definition", "committedDate": "2020-11-20T10:42:43Z", "type": "commit"}, {"oid": "790637c3201d8e01ace9fe221cc95256c9cd4eb3", "url": "https://github.com/Talend/tdi-studio-se/commit/790637c3201d8e01ace9fe221cc95256c9cd4eb3", "message": "feat(TDI-44915): update BigQuery Output and generic connection", "committedDate": "2020-11-24T10:32:54Z", "type": "commit"}, {"oid": "1a11086e0df15abff32c3977c8cb619bc8809da3", "url": "https://github.com/Talend/tdi-studio-se/commit/1a11086e0df15abff32c3977c8cb619bc8809da3", "message": "feat(TDI-44915): fix _end javajet parts", "committedDate": "2020-11-25T08:07:28Z", "type": "commit"}, {"oid": "1a297ff7e4fe60fe5afbd33ef0be643f368718a3", "url": "https://github.com/Talend/tdi-studio-se/commit/1a297ff7e4fe60fe5afbd33ef0be643f368718a3", "message": "feat(TDI-44915): fix bigqueryoutput config mappings", "committedDate": "2020-11-25T15:52:23Z", "type": "commit"}, {"oid": "a769afe69bbfd8bc73b8e6ad6d79d0fdc19df368", "url": "https://github.com/Talend/tdi-studio-se/commit/a769afe69bbfd8bc73b8e6ad6d79d0fdc19df368", "message": "feat(TDI-44915): fix tGSBuckerCreate dependencies", "committedDate": "2020-11-26T09:23:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzNzQ1Nw==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530937457", "bodyText": "Maybe add \"break\" after this, so no need to iterate further?", "author": "dmytrogrygorenko", "createdAt": "2020-11-26T10:45:19Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSDelete/tGSDelete_end.javajet", "diffHunk": "@@ -19,16 +19,19 @@ imports=\"\n \r\n \tString connection = ElementParameterParser.getValue(node,\"__CONNECTION__\");\r\n \tString authType = ElementParameterParser.getValue(node, \"__AUTH_TYPE__\");\r\n-  boolean useHMACAuthType = false;\r\n-\r\n-\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\r\n-\tfor (INode ne : nodes) {\r\n-\t\tif (connection.equals(ne.getUniqueName())) {\r\n-\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\r\n-\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);\r\n-\t\t}\r\n-\t}\r\n-\r\n+\tboolean useHMACAuthType = false;\n+\tif((\"true\").equals(useExistingConn)) {\n+\t\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\n+\t\tfor (INode ne : nodes) {\n+\t\t\tif (connection.equals(ne.getUniqueName())) {\n+\t\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\n+\t\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);", "originalCommit": "1a11086e0df15abff32c3977c8cb619bc8809da3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0NTI2Ng==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530945266", "bodyText": "The main idea here was to change conditional property. As you see from the original code that was working before, it doesn't introduce a new issue. As for performance - it won't be even seen. (how many tGSConnection components can be present in the single job?)", "author": "mbasiuk-talend", "createdAt": "2020-11-26T10:57:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzNzQ1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzNzgzOA==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530937838", "bodyText": "Same here.", "author": "dmytrogrygorenko", "createdAt": "2020-11-26T10:45:57Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_end.javajet", "diffHunk": "@@ -21,16 +21,19 @@ imports=\"\n \tList<Map<String, String>> keys = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, \"__KEYS__\");\r\n \tString connection = ElementParameterParser.getValue(node,\"__CONNECTION__\");\r\n \tString authType = ElementParameterParser.getValue(node, \"__AUTH_TYPE__\");\r\n-  boolean useHMACAuthType = false;\r\n-\r\n-\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\r\n-\tfor (INode ne : nodes) {\r\n-\t\tif (connection.equals(ne.getUniqueName())) {\r\n-\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\r\n-\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);\r\n-\t\t}\r\n-\t}\r\n-\r\n+        boolean useHMACAuthType = false;\n+        if((\"true\").equals(useExistingConn)) {\n+            List< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\n+            for (INode ne : nodes) {\n+                if (connection.equals(ne.getUniqueName())) {\n+                        String authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\n+                        useHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);", "originalCommit": "1a11086e0df15abff32c3977c8cb619bc8809da3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzOTE2Mg==", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530939162", "bodyText": "And here.", "author": "dmytrogrygorenko", "createdAt": "2020-11-26T10:48:05Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSList/tGSList_end.javajet", "diffHunk": "@@ -19,16 +19,19 @@ imports=\"\n \tList<Map<String, String>> buckets = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, \"__BUCKETS__\");\r\n \tString connection = ElementParameterParser.getValue(node,\"__CONNECTION__\");\r\n \tString authType = ElementParameterParser.getValue(node, \"__AUTH_TYPE__\");\r\n-  boolean useHMACAuthType = false;\r\n-\r\n-  List< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\r\n-  for (INode ne : nodes) {\r\n-    if (connection.equals(ne.getUniqueName())) {\r\n-      String authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\r\n-      useHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);\r\n-    }\r\n-  }\r\n-\r\n+    boolean useHMACAuthType = false;\n+    if((\"true\").equals(useExistingConn)) {\n+        List< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\n+        for (INode ne : nodes) {\n+                if (connection.equals(ne.getUniqueName())) {\n+                        String authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\n+                        useHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);", "originalCommit": "1a11086e0df15abff32c3977c8cb619bc8809da3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "67255ada03a2ff1c98e545bf49b3b1db2d72583d", "url": "https://github.com/Talend/tdi-studio-se/commit/67255ada03a2ff1c98e545bf49b3b1db2d72583d", "message": "feat(TDI-44915): fix PR comments", "committedDate": "2020-11-26T11:05:44Z", "type": "commit"}]}