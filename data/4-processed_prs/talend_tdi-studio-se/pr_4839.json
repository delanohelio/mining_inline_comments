{"pr_number": 4839, "pr_title": "feat(TDI-38246): add new auth type to Google Storage family", "pr_createdAt": "2020-06-18T13:53:02Z", "pr_url": "https://github.com/Talend/tdi-studio-se/pull/4839", "timeline": [{"oid": "cd404eaf40aceab052c4013f79c8a5122626200c", "url": "https://github.com/Talend/tdi-studio-se/commit/cd404eaf40aceab052c4013f79c8a5122626200c", "message": "feat(TDI-38246): add new auth type to tGSConnection", "committedDate": "2020-06-04T13:08:28Z", "type": "commit"}, {"oid": "6e000c4240e6e34db7d83b1e9600269ba32dc30b", "url": "https://github.com/Talend/tdi-studio-se/commit/6e000c4240e6e34db7d83b1e9600269ba32dc30b", "message": "feat(TDI-38246): add auth to UI | add dependencies", "committedDate": "2020-06-05T06:55:25Z", "type": "commit"}, {"oid": "50d9b6235c563ad691079920d182c33040f09ea6", "url": "https://github.com/Talend/tdi-studio-se/commit/50d9b6235c563ad691079920d182c33040f09ea6", "message": "feat(TDI-38246): add new auth type to tGSBucketCreate", "committedDate": "2020-06-05T14:46:55Z", "type": "commit"}, {"oid": "c3de3d1bb032e454f019c725ed7f5307bafefde0", "url": "https://github.com/Talend/tdi-studio-se/commit/c3de3d1bb032e454f019c725ed7f5307bafefde0", "message": "feat(TDI-38246): add new auth type to tGSBucketDelete | small fixes", "committedDate": "2020-06-09T15:57:44Z", "type": "commit"}, {"oid": "7da08dc052c1fcb0463abf82f1518fb9e1aee5c1", "url": "https://github.com/Talend/tdi-studio-se/commit/7da08dc052c1fcb0463abf82f1518fb9e1aee5c1", "message": "feat(TDI-38246): add new auth type to tGSBucketExist", "committedDate": "2020-06-10T07:04:31Z", "type": "commit"}, {"oid": "a993264f6553d2f1b9cfa6df7d2a1ad2d51a0fa8", "url": "https://github.com/Talend/tdi-studio-se/commit/a993264f6553d2f1b9cfa6df7d2a1ad2d51a0fa8", "message": "feat(TDI-38246): add new auth type to tGSBucketList", "committedDate": "2020-06-10T10:07:44Z", "type": "commit"}, {"oid": "074ecadfae1e2e4c40de7552689615c3cae88f9f", "url": "https://github.com/Talend/tdi-studio-se/commit/074ecadfae1e2e4c40de7552689615c3cae88f9f", "message": "feat(TDI-38246): remove projectId from tGSBucketList", "committedDate": "2020-06-10T10:10:47Z", "type": "commit"}, {"oid": "aff7cedf7b84693cec7393ec4b08943cd7820fbd", "url": "https://github.com/Talend/tdi-studio-se/commit/aff7cedf7b84693cec7393ec4b08943cd7820fbd", "message": "feat(TDI-38246): add new auth type to tGSClose", "committedDate": "2020-06-10T10:25:55Z", "type": "commit"}, {"oid": "14351fdf09e8f062239e3bcfd498f1fa6a3e13a4", "url": "https://github.com/Talend/tdi-studio-se/commit/14351fdf09e8f062239e3bcfd498f1fa6a3e13a4", "message": "feat(TDI-38246): add filemap generation for blob", "committedDate": "2020-06-16T14:04:16Z", "type": "commit"}, {"oid": "68e8014ae30757d275c4fb25416a8b749b7137d3", "url": "https://github.com/Talend/tdi-studio-se/commit/68e8014ae30757d275c4fb25416a8b749b7137d3", "message": "feat(TDI-38246): add new auth type to tGSPut", "committedDate": "2020-06-16T14:05:08Z", "type": "commit"}, {"oid": "bb5177db7ba9bfe216d309d189ad7bb74de2c2c3", "url": "https://github.com/Talend/tdi-studio-se/commit/bb5177db7ba9bfe216d309d189ad7bb74de2c2c3", "message": "feat(TDI-38246): add new auth type to tGSDelete", "committedDate": "2020-06-16T17:27:48Z", "type": "commit"}, {"oid": "ee85cc9d4553e3b095521ded641a89132f03b782", "url": "https://github.com/Talend/tdi-studio-se/commit/ee85cc9d4553e3b095521ded641a89132f03b782", "message": "feat(TDI-38246): add new auth type to tGSList", "committedDate": "2020-06-17T13:19:42Z", "type": "commit"}, {"oid": "403c879721ef3c56a58e103fbd1320cffdcbd52e", "url": "https://github.com/Talend/tdi-studio-se/commit/403c879721ef3c56a58e103fbd1320cffdcbd52e", "message": "feat(TDI-38246): add new auth type to tGSGet", "committedDate": "2020-06-17T15:40:12Z", "type": "commit"}, {"oid": "43294d09f2e18e933c69337cd86f4f2cd823c43c", "url": "https://github.com/Talend/tdi-studio-se/commit/43294d09f2e18e933c69337cd86f4f2cd823c43c", "message": "feat(TDI-38246): add new auth type to tGSCopy", "committedDate": "2020-06-18T13:00:17Z", "type": "commit"}, {"oid": "cd664a5ac71d915678ce107a501ff9fcfc7e0375", "url": "https://github.com/Talend/tdi-studio-se/commit/cd664a5ac71d915678ce107a501ff9fcfc7e0375", "message": "feat(TDI-38246): remove projectID for service account auth type", "committedDate": "2020-06-18T13:46:16Z", "type": "commit"}, {"oid": "bd30dd9916202afab536cf0fe9ebe1d61264ab97", "url": "https://github.com/Talend/tdi-studio-se/commit/bd30dd9916202afab536cf0fe9ebe1d61264ab97", "message": "feat(TDI-38246): rename component properties", "committedDate": "2020-06-18T14:09:49Z", "type": "commit"}, {"oid": "a3ac226687a51cfdd81ce8a839e6221d6d97a255", "url": "https://github.com/Talend/tdi-studio-se/commit/a3ac226687a51cfdd81ce8a839e6221d6d97a255", "message": "feat(TDI-38246): extend locations for bucket creation", "committedDate": "2020-06-18T14:47:41Z", "type": "commit"}, {"oid": "792d488771ad16d17213299cef79dd9f5ab64b32", "url": "https://github.com/Talend/tdi-studio-se/commit/792d488771ad16d17213299cef79dd9f5ab64b32", "message": "feat(TDI-38246): remove dual locations", "committedDate": "2020-06-19T08:59:41Z", "type": "commit"}, {"oid": "6939b7e6da675bc0b3aa32945e202f952b20049f", "url": "https://github.com/Talend/tdi-studio-se/commit/6939b7e6da675bc0b3aa32945e202f952b20049f", "message": "Merge branch 'maintenance/7.3' of github.com:Talend/tdi-studio-se into rvoievidko/TDI-38246_GCS_service_account_auth", "committedDate": "2020-06-22T13:51:13Z", "type": "commit"}, {"oid": "681e97ac2981b0436270ae28139179b5480f0d04", "url": "https://github.com/Talend/tdi-studio-se/commit/681e97ac2981b0436270ae28139179b5480f0d04", "message": "feat(TDI-38246): change default auth type", "committedDate": "2020-06-22T14:19:31Z", "type": "commit"}, {"oid": "446481ab2e13ca50758b53c3c9d890934cfb69be", "url": "https://github.com/Talend/tdi-studio-se/commit/446481ab2e13ca50758b53c3c9d890934cfb69be", "message": "feat(TDI-38246): add migration task", "committedDate": "2020-06-22T15:35:08Z", "type": "commit"}, {"oid": "8fe1c77d184c5904ab62220cedd6b5ae3b008398", "url": "https://github.com/Talend/tdi-studio-se/commit/8fe1c77d184c5904ab62220cedd6b5ae3b008398", "message": "feat(TDI-38246): remove unused var", "committedDate": "2020-06-22T15:36:10Z", "type": "commit"}, {"oid": "18a0cf25aece46bc501f150a59852e203b4b82a6", "url": "https://github.com/Talend/tdi-studio-se/commit/18a0cf25aece46bc501f150a59852e203b4b82a6", "message": "Merge branch 'maintenance/7.3' of github.com:Talend/tdi-studio-se into rvoievidko/TDI-38246_GCS_service_account_auth", "committedDate": "2020-06-23T03:48:31Z", "type": "commit"}, {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d", "url": "https://github.com/Talend/tdi-studio-se/commit/49d01faad61d29385036cdbbf5eb31d630f3b28d", "message": "feat(TDI-38246): improve migration task", "committedDate": "2020-06-23T13:51:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMzI2OQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445033269", "bodyText": "Can directory be empty ?", "author": "ypiel-talend", "createdAt": "2020-06-24T16:49:00Z", "path": "main/plugins/org.talend.designer.components.libs/libs_src/google-storage-utils/src/main/java/org/talend/gs/util/GSObjectUtil.java", "diffHunk": "@@ -44,6 +46,50 @@\n         return objects;\n     }\n \n+    public Map<String, File> generateFileMap(File rootFile, String directory, Map<String, String> filter){\n+        Map<String, File> allFiles = generateFileMap(rootFile, directory);\n+        Map<String, File> resultMap = new HashMap<>();\n+        for (Map.Entry<String, String> entry : filter.entrySet()) {\n+            //key is path to file on local machine\n+            //value is new path in GS\n+            File currentFile = new File(entry.getKey());\n+            if (allFiles.containsValue(currentFile)){\n+                resultMap.put(entry.getValue(), currentFile);\n+            }\n+        }\n+        return resultMap;\n+    }\n+\n+    public Map<String, File> generateFileMap(File rootFile, String directory){\n+        if (rootFile == null){\n+            throw new IllegalArgumentException(\"File can't be null\");\n+        }\n+        if (directory == null){", "originalCommit": "49d01faad61d29385036cdbbf5eb31d630f3b28d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxMzY2NA==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445613664", "bodyText": "Yes. If string which represent directory is empty that means file will be written right in the root of bucket", "author": "Voievidko", "createdAt": "2020-06-25T14:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMzI2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNTU4MA==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445035580", "bodyText": "Maybe set e_<%=cid%> as second argument of error() log method to have the stacktrace.", "author": "ypiel-talend", "createdAt": "2020-06-24T16:52:55Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketCreate/tGSBucketCreate_main.javajet", "diffHunk": "@@ -112,5 +130,84 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n-\t\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "originalCommit": "49d01faad61d29385036cdbbf5eb31d630f3b28d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMTk4Ng==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445631986", "bodyText": "done for all cases", "author": "Voievidko", "createdAt": "2020-06-25T15:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNTU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNzI5MQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445037291", "bodyText": "Maybe add e_<%=cid%> to get the stacktrace ?", "author": "ypiel-talend", "createdAt": "2020-06-24T16:55:50Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketDelete/tGSBucketDelete_main.javajet", "diffHunk": "@@ -99,4 +116,78 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n+<%\r\n+} else {\r\n+%>\r\n+\r\n+\r\n+\r\n+\r\n+com.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+<%\r\n+if((\"true\").equals(useExistingConn)) {\r\n+%>\r\n+\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+<%\r\n+} else {\r\n+\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+%>\r\n+\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\ttry {\r\n+\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t} catch (IOException e_<%=cid%>) {\r\n+\t\t<%\r\n+\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t%>\r\n+\t\t\tthrow(e_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t}\r\n+\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+<%\r\n+}\r\n+%>\r\n+com.google.cloud.storage.Bucket bucket_<%=cid%> = storage_<%=cid%>.get(<%=bucketName%>);\r\n+if (bucket_<%=cid%> == null){\r\n+\tthrow new IllegalArgumentException(\"Can't find bucket with name: '\" + <%=bucketName%> + \"'.\");\r\n+} else {\r\n+\ttry {\r\n+\t\tbucket_<%=cid%>.delete();\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.debug(\"<%=cid%> - Bucket '\" + <%=bucketName%> + \"' was deleted.\");\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t} catch (com.google.cloud.storage.StorageException e_<%=cid%>){\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "originalCommit": "49d01faad61d29385036cdbbf5eb31d630f3b28d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMTkxNw==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445631917", "bodyText": "done", "author": "Voievidko", "createdAt": "2020-06-25T15:09:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNzI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MDcwMg==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445040702", "bodyText": "\"//start for\" uncomplete comment ?", "author": "ypiel-talend", "createdAt": "2020-06-24T17:01:27Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r", "originalCommit": "49d01faad61d29385036cdbbf5eb31d630f3b28d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMzAwNw==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445633007", "bodyText": "remove comment", "author": "Voievidko", "createdAt": "2020-06-25T15:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MDcwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzExMw==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445043113", "bodyText": "What if it returns false ?", "author": "ypiel-talend", "createdAt": "2020-06-24T17:05:32Z", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r\n+\t\t\tString currentBucketName_<%=cid%> = bucket_<%=cid%>.getName();\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(<%=objects_prefix%>);\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(<%=delimiter%>);\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = bucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}else if(useKeysList && keys.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<keys.size();i++){\r\n+\t\t\tMap<String, String> objKey=keys.get(i);\r\n+\t\t\tString bucket_name =objKey.get(\"BUCKET_NAME\");\r\n+\t\t\tString key =objKey.get(\"KEY\");\r\n+\t\t\tString newName =objKey.get(\"NEW_NAME\");\r\n+\t\t\tif(key!=null && key.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_KEY\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\tif(newName!=null && !\"\".equals(newName.trim()) && !\"\\\"\\\"\".equals(newName.trim())){\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=newName%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}else{\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t} else if(getList && buckets.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<buckets.size();i++){\r\n+\t\t\tMap<String, String> map=buckets.get(i);\r\n+\t\t\tString bucket_name =map.get(\"BUCKET_NAME\");\r\n+\t\t\tString object_prefix =map.get(\"OBJECT_PREFIX\");\r\n+\t\t\tString object_delimiter =map.get(\"OBJECT_DELIMITER\");\r\n+\t\t\t%>\r\n+\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t<%\r\n+\t\t\tif(object_prefix!=null && object_prefix.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_PREFIX\",<%=object_prefix%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\tif(object_delimiter!=null && object_delimiter.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_DELIMITER\",<%=object_delimiter%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\tcom.google.cloud.storage.Bucket currentBucket_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>);\r\n+\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(map_<%=cid %>.get(\"OBJECT_PREFIX\"));\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(map_<%=cid %>.get(\"OBJECT_DELIMITER\"));\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = currentBucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}\r\n+\tif((!getList && !useKeysList) || (useKeysList && keys.size()>0) || (getList && buckets.size()>0)){\r\n+\t\tif(!useKeysList){\r\n+\t\t%>\r\n+\t\t\tfor (com.google.cloud.storage.Blob blob_<%=cid%> : allBlobs_<%=cid%>.iterateAll()) {\r\n+\t\t\t\tString objkey_<%=cid%> = blob_<%=cid%>.getName();\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, objkey_<%=cid%>);\r\n+\r\n+\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, objkey_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}else{\r\n+\t\t%>\r\n+\t\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, map_<%=cid %>.get(\"OBJECT_NEWNAME\"));\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = null;\r\n+\t\t\t\tobj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, map_<%=cid %>.get(\"OBJECT_KEY\"));\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tif(obj_<%=cid%>!=null){\r\n+\t\t\tnb_line_<%=cid%>++;\r\n+\t\t\tboolean isDirectory_<%=cid%>=false;\r\n+\t\t\tString fileName_<%=cid%> =file_<%=cid%> .getAbsolutePath();\r\n+\t\t\tfileName_<%=cid%> =fileName_<%=cid%> .replace(\"\\\\\", \"/\");\r\n+\t\t\tString createDir_<%=cid%>=\"\";\r\n+\t\t\tif(obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tcreateDir_<%=cid%> = fileName_<%=cid%>;\r\n+\t\t\t}else{\r\n+\t\t\t\tcreateDir_<%=cid%>=\tfileName_<%=cid%>.substring(0,fileName_<%=cid%>.indexOf(\"/\"));\r\n+\t\t\t}\r\n+\t\t\tif (!\"\".equals(createDir_<%=cid%>)) {\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(createDir_<%=cid%>);\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\tif(!obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(file_<%=cid%>.getParent());\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r", "originalCommit": "49d01faad61d29385036cdbbf5eb31d630f3b28d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzNzY5MA==", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445637690", "bodyText": "Added error", "author": "Voievidko", "createdAt": "2020-06-25T15:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzExMw=="}], "type": "inlineReview"}, {"oid": "01f1d51c75f75d13680386e73244f10e67afc4d4", "url": "https://github.com/Talend/tdi-studio-se/commit/01f1d51c75f75d13680386e73244f10e67afc4d4", "message": "feat(TDI-38246): clean code", "committedDate": "2020-06-25T15:16:57Z", "type": "commit"}, {"oid": "6fefca58213b1a70698541aedbd0d8884502018d", "url": "https://github.com/Talend/tdi-studio-se/commit/6fefca58213b1a70698541aedbd0d8884502018d", "message": "feat(TDI-38246): correct showing some params when use exist connection", "committedDate": "2020-07-03T12:04:46Z", "type": "commit"}, {"oid": "cab286d4ab02e69e872b7e63271901e5bfe633ed", "url": "https://github.com/Talend/tdi-studio-se/commit/cab286d4ab02e69e872b7e63271901e5bfe633ed", "message": "feat(TDI-38246): mark all HMAC keys as deprecated", "committedDate": "2020-07-07T12:06:16Z", "type": "commit"}, {"oid": "13e3fa037c87d4328b9416ecdcf3337bb6edcefa", "url": "https://github.com/Talend/tdi-studio-se/commit/13e3fa037c87d4328b9416ecdcf3337bb6edcefa", "message": "feat(TDI-38246): avoid blob directories", "committedDate": "2020-07-07T13:07:23Z", "type": "commit"}, {"oid": "8db9fb445fafc84bdee5d307714895cf01065fb5", "url": "https://github.com/Talend/tdi-studio-se/commit/8db9fb445fafc84bdee5d307714895cf01065fb5", "message": "Merge branch 'maintenance/7.3' into rvoievidko/TDI-38246_GCS_service_account_auth", "committedDate": "2020-07-07T13:10:05Z", "type": "commit"}]}