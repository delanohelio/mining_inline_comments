{"pr_number": 3467, "pr_title": "Fix/seab 1132/collection entries", "pr_createdAt": "2020-05-11T20:08:10Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3467", "timeline": [{"oid": "e3f4e1bd68cde0e0324751cbd839eaf402544f9f", "url": "https://github.com/dockstore/dockstore/commit/e3f4e1bd68cde0e0324751cbd839eaf402544f9f", "message": "Custom type for collection entries", "committedDate": "2020-05-11T20:08:38Z", "type": "commit"}, {"oid": "7dd3c45511951505a4888f262ec902b513c5e4b6", "url": "https://github.com/dockstore/dockstore/commit/7dd3c45511951505a4888f262ec902b513c5e4b6", "message": "Update swagger/openapi", "committedDate": "2020-05-11T20:13:28Z", "type": "commit"}, {"oid": "7dd3c45511951505a4888f262ec902b513c5e4b6", "url": "https://github.com/dockstore/dockstore/commit/7dd3c45511951505a4888f262ec902b513c5e4b6", "message": "Update swagger/openapi", "committedDate": "2020-05-11T20:13:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMTEyMw==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r423311123", "bodyText": "This does reduce response size but getEntries will still load all entries (and thus their versions) into memory.\nIs there a reason the named query strategy was not used in this case?\nhttps://github.com/dockstore/dockstore/pull/3462/files#diff-f57cce37c04c1e6fa1392a205af9efefR41", "author": "denis-yuen", "createdAt": "2020-05-11T20:50:09Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Collection.java", "diffHunk": "@@ -142,6 +141,11 @@ public void setDescription(String description) {\n         return entries.stream().filter(entry -> entry.getIsPublished()).collect(Collectors.toSet());\n     }\n \n+    @JsonProperty(\"entries\")\n+    public Set<CollectionEntry> getCollectionEntries() {\n+        return getEntries().stream().map(entry -> new CollectionEntry(entry)).collect(Collectors.toSet());", "originalCommit": "7dd3c45511951505a4888f262ec902b513c5e4b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3ODE3NA==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r423378174", "bodyText": "Require DAO access which we normally do in a specific endpoint.  This is a JsonProperty.", "author": "garyluu", "createdAt": "2020-05-11T23:33:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMTEyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3MDAxNA==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r423770014", "bodyText": "Yes, I think you will need to modify the DAO and tackle specific endpoints to avoid loading entries and their versions and avert OOM\nAt least until #3455", "author": "denis-yuen", "createdAt": "2020-05-12T14:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMTEyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgwODE5Mg==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r423808192", "bodyText": "that would be a relatively major change for a hotfix, modifying almost every endpoint that uses collection, ideally creating another endpoint to specifically get entries, and major modifications to the frontend entries retrieval code.", "author": "garyluu", "createdAt": "2020-05-12T15:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMTEyMw=="}], "type": "inlineReview"}, {"oid": "8cc22319d290c557e83f03da888d318fe735e6d9", "url": "https://github.com/dockstore/dockstore/commit/8cc22319d290c557e83f03da888d318fe735e6d9", "message": "Database optimization", "committedDate": "2020-05-13T16:45:33Z", "type": "commit"}, {"oid": "8cc22319d290c557e83f03da888d318fe735e6d9", "url": "https://github.com/dockstore/dockstore/commit/8cc22319d290c557e83f03da888d318fe735e6d9", "message": "Database optimization", "committedDate": "2020-05-13T16:45:33Z", "type": "forcePushed"}, {"oid": "f6d0d8d2b75c86580bc17c0208697d94fa7ae1dd", "url": "https://github.com/dockstore/dockstore/commit/f6d0d8d2b75c86580bc17c0208697d94fa7ae1dd", "message": "Update openapi/swagger again", "committedDate": "2020-05-13T16:53:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5OTQyNQ==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r424699425", "bodyText": "I know it's a hassle, but why isn't the name value following the same naming convention as the other queries?", "author": "coverbeck", "createdAt": "2020-05-13T20:05:17Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java", "diffHunk": "@@ -78,7 +78,10 @@\n @NamedQueries({\n     @NamedQuery(name = \"Entry.getGenericEntryById\", query = \"SELECT e from Entry e WHERE :id = e.id\"),\n         @NamedQuery(name = \"Entry.getGenericEntryByAlias\", query = \"SELECT e from Entry e JOIN e.aliases a WHERE KEY(a) IN :alias\"),\n-        @NamedQuery(name = \"io.dockstore.webservice.core.Entry.findCollectionsByEntryId\", query = \"select new io.dockstore.webservice.core.CollectionOrganization(col.id, col.name, col.displayName, organization.id, organization.name, organization.displayName) from Collection col join col.entries as entry join col.organization as organization where entry.id = :entryId\")\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Entry.findCollectionsByEntryId\", query = \"select new io.dockstore.webservice.core.CollectionOrganization(col.id, col.name, col.displayName, organization.id, organization.name, organization.displayName) from Collection col join col.entries as entry join col.organization as organization where entry.id = :entryId\"),\n+        @NamedQuery(name = \"getCollectionWorkflows\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(w.id, w.dbUpdateDate, 'workflow', w.sourceControl, w.organization, w.repository, w.workflowName) from BioWorkflow w, Collection col join col.entries as e where col.id = :collectionId and w.id = e.id and w.isPublished = true\"),", "originalCommit": "f6d0d8d2b75c86580bc17c0208697d94fa7ae1dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3OTU2NQ==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r424779565", "bodyText": "There's only 3 other queries in the file and they don't seem to have the same naming convention.", "author": "garyluu", "createdAt": "2020-05-13T23:03:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5OTQyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4OTMzNA==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r425189334", "bodyText": "My understanding is that JPA named queries should have a namespace of some kind to avoid accidental collisions.\nI don't have a preference between package + class name or just class name since we don't have a Entry class in multiple packages\n\nDo note that query names are part of a global namespace and are not automatically put in any namespace  based on the file they are defined in. In the example above queries are pre-fixed with \"Website.\", which happens  to be the name of the entity but you can choose anything you want here.\n\nhttps://arjan-tijms.omnifaces.org/2010/09/where-to-put-named-queries-in-jpa.html", "author": "denis-yuen", "createdAt": "2020-05-14T14:39:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5OTQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NzYwMQ==", "url": "https://github.com/dockstore/dockstore/pull/3467#discussion_r425187601", "bodyText": "Would like Javadoc for the class", "author": "denis-yuen", "createdAt": "2020-05-14T14:37:17Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/CollectionEntry.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package io.dockstore.webservice.core;\n+\n+import java.io.Serializable;\n+import java.util.Date;\n+\n+import io.dockstore.common.SourceControl;\n+\n+public class CollectionEntry implements Serializable {", "originalCommit": "f6d0d8d2b75c86580bc17c0208697d94fa7ae1dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2446b86fe8f80015f360a1f92ffe574c8d1ea296", "url": "https://github.com/dockstore/dockstore/commit/2446b86fe8f80015f360a1f92ffe574c8d1ea296", "message": "PR changes", "committedDate": "2020-05-14T14:51:54Z", "type": "commit"}]}