{"pr_number": 3428, "pr_title": "Feature/3420/require file name", "pr_createdAt": "2020-04-27T23:19:41Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3428", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI0MzA1NA==", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416243054", "bodyText": "Unnecessary I think -- you're not using its return value.", "author": "coverbeck", "createdAt": "2020-04-28T00:34:56Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -301,6 +309,20 @@ protected String createValidationMessages(U version) {\n         return result.toString();\n     }\n \n+    protected String invalidFileNames(U version) {\n+        Set<SourceFile> sourceFiles = version.getSourceFiles();\n+        StringBuilder invalidFileNames = new StringBuilder();\n+\n+        sourceFiles.stream().forEach(sourceFile -> {\n+            sourceFile.getPath().endsWith(\"/\");", "originalCommit": "ef2c110eede08bca6a8a7960845e7985d0511ab8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1ODUzNA==", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416258534", "bodyText": "shouldn't need to lowercase it", "author": "garyluu", "createdAt": "2020-04-28T01:21:09Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/CRUDClientIT.java", "diffHunk": "@@ -329,6 +329,36 @@ public void testWorkflowEditingWithAuthorMetadataWDL() throws IOException {\n         assertTrue(!dockstoreWorkflow.getAuthor().isEmpty() && !dockstoreWorkflow.getEmail().isEmpty());\n     }\n \n+    @Test\n+    public void testValidHostedFileNames() throws IOException {\n+        HostedApi api = new HostedApi(getWebClient(ADMIN_USERNAME, testingPostgres));\n+        Workflow hostedWorkflow = api\n+                .createHostedWorkflow(\"awesomeTool\", null, DescriptorLanguage.WDL.toString().toLowerCase(), null, null);", "originalCommit": "ef2c110eede08bca6a8a7960845e7985d0511ab8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwMDMyNA==", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416700324", "bodyText": "Use a constant across this and the next file, otherwise can easily modify one and forget to modify the other", "author": "denis-yuen", "createdAt": "2020-04-28T15:19:04Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/CRUDClientIT.java", "diffHunk": "@@ -329,6 +329,36 @@ public void testWorkflowEditingWithAuthorMetadataWDL() throws IOException {\n         assertTrue(!dockstoreWorkflow.getAuthor().isEmpty() && !dockstoreWorkflow.getEmail().isEmpty());\n     }\n \n+    @Test\n+    public void testValidHostedFileNames() throws IOException {\n+        HostedApi api = new HostedApi(getWebClient(ADMIN_USERNAME, testingPostgres));\n+        Workflow hostedWorkflow = api\n+                .createHostedWorkflow(\"awesomeTool\", null, DescriptorLanguage.WDL.toString().toLowerCase(), null, null);\n+        SourceFile file = new SourceFile();\n+        file.setContent(FileUtils.readFileToString(new File(ResourceHelpers.resourceFilePath(\"metadata_example2.wdl\")), StandardCharsets.UTF_8));\n+        file.setType(SourceFile.TypeEnum.DOCKSTORE_WDL);\n+        file.setPath(\"/Dockstore.wdl\");\n+        SourceFile file2 = new SourceFile();\n+        file2.setContent(FileUtils.readFileToString(new File(ResourceHelpers.resourceFilePath(\"metadata_example2.wdl\")), StandardCharsets.UTF_8));\n+        file2.setPath(\"/\");\n+        List sourceFiles = new ArrayList();\n+        sourceFiles.add(file);\n+        sourceFiles.add(file2);\n+\n+        thrown.expectMessage(\"Files must have a name\");", "originalCommit": "ef2c110eede08bca6a8a7960845e7985d0511ab8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwNDk3Mw==", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416904973", "bodyText": "wait a min...isn't there an extra space at the end? I think it should be an array of strings and then join  with \" \"", "author": "garyluu", "createdAt": "2020-04-28T20:35:05Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -301,6 +309,19 @@ protected String createValidationMessages(U version) {\n         return result.toString();\n     }\n \n+    protected String invalidFileNames(U version) {\n+        Set<SourceFile> sourceFiles = version.getSourceFiles();\n+        StringBuilder invalidFileNames = new StringBuilder();\n+\n+        sourceFiles.stream().forEach(sourceFile -> {\n+            if (sourceFile.getPath().endsWith(\"/\")) {\n+                invalidFileNames.append(sourceFile.getPath() + \" \");", "originalCommit": "21cba0079fea39b5a4eacf37c9b6ac7730f92ab5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxMTkxNA==", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416911914", "bodyText": "Minor, optional stuff:\n\nPlural method name implies it returns a list/collection, but you return a string. I would either rename to something like invalidFileNamesMessage or leave the name and return a List<String> and let the caller convert to a string.\nIn general, not sure if so for hosted entries, filenames can contain spaces, so I would separate them with a comma-space rather than a space.\n\nEven more optional, but I prefer a more functional way of writing this, untested:\nreturn sourceFiles.stream()\n  .map(sf -> sf.getPath())\n  .filter(path -> path.endsWith(\"/\"))\n  .collect(Collectors.joining(\", \"));\n  //.collect(Collectors.toList()); // If you wanted to return a list instead", "author": "coverbeck", "createdAt": "2020-04-28T20:47:48Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -301,6 +309,19 @@ protected String createValidationMessages(U version) {\n         return result.toString();\n     }\n \n+    protected String invalidFileNames(U version) {", "originalCommit": "21cba0079fea39b5a4eacf37c9b6ac7730f92ab5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6c7c9b5b360e69c3bc974c8aa5b7aa9dc92dd1bb", "url": "https://github.com/dockstore/dockstore/commit/6c7c9b5b360e69c3bc974c8aa5b7aa9dc92dd1bb", "message": "Don't allow / as a name", "committedDate": "2020-04-29T16:21:57Z", "type": "commit"}, {"oid": "08df9b5bc4e3fc029af977faaff935dd01b633a0", "url": "https://github.com/dockstore/dockstore/commit/08df9b5bc4e3fc029af977faaff935dd01b633a0", "message": "remove comment", "committedDate": "2020-04-29T16:21:57Z", "type": "commit"}, {"oid": "1e1ce8bee8890fd4271447a189d754edfbdc77fc", "url": "https://github.com/dockstore/dockstore/commit/1e1ce8bee8890fd4271447a189d754edfbdc77fc", "message": "checkstyle", "committedDate": "2020-04-29T16:21:57Z", "type": "commit"}, {"oid": "fd048de9106e40446dd5e0d5eff06d971748becd", "url": "https://github.com/dockstore/dockstore/commit/fd048de9106e40446dd5e0d5eff06d971748becd", "message": "PR fixes", "committedDate": "2020-04-29T16:21:57Z", "type": "commit"}, {"oid": "58ad0e953f1605780b666b94d0ae0b06338ef467", "url": "https://github.com/dockstore/dockstore/commit/58ad0e953f1605780b666b94d0ae0b06338ef467", "message": "PR feedback", "committedDate": "2020-04-29T16:21:57Z", "type": "commit"}, {"oid": "58ad0e953f1605780b666b94d0ae0b06338ef467", "url": "https://github.com/dockstore/dockstore/commit/58ad0e953f1605780b666b94d0ae0b06338ef467", "message": "PR feedback", "committedDate": "2020-04-29T16:21:57Z", "type": "forcePushed"}, {"oid": "e36a313875949b6eefdf4d14a66e4cc3591e12da", "url": "https://github.com/dockstore/dockstore/commit/e36a313875949b6eefdf4d14a66e4cc3591e12da", "message": "Merge branch 'develop' into feature/3420/requireFileName", "committedDate": "2020-05-01T20:59:25Z", "type": "commit"}]}