{"pr_number": 3897, "pr_title": "log all admin actions, remove some admin permissions, see what tests \u2026", "pr_createdAt": "2020-10-28T20:22:59Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3897", "timeline": [{"oid": "9ad66d84a7ff24cec82611bed2dee22eb190972b", "url": "https://github.com/dockstore/dockstore/commit/9ad66d84a7ff24cec82611bed2dee22eb190972b", "message": "log all admin actions, remove some admin permissions, see what tests fail", "committedDate": "2020-10-28T20:13:27Z", "type": "commit"}, {"oid": "90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "url": "https://github.com/dockstore/dockstore/commit/90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "message": "fix broken tests", "committedDate": "2020-10-29T17:28:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU3OTgzOQ==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r514579839", "bodyText": "You could change this to if (principal instanceof User) {. If present, I'm guessing the principal must always be a User, but even so, it would give you more confidence for the next line where you cast it.", "author": "coverbeck", "createdAt": "2020-10-29T21:30:41Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AdminPrivilegesFilter.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.dockstore.webservice.resources;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.UriInfo;\n+import javax.ws.rs.ext.Provider;\n+\n+import io.dockstore.webservice.core.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider\n+public class AdminPrivilegesFilter implements ContainerResponseFilter {\n+    private static final Logger LOG = LoggerFactory.getLogger(AdminPrivilegesFilter.class);\n+    @Context\n+    UriInfo uriInfo;\n+\n+    @Override\n+    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) throws IOException {\n+        if (requestContext != null) {\n+            Principal principal = requestContext.getSecurityContext().getUserPrincipal();\n+            if (principal != null) {", "originalCommit": "90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4MDg3Ng==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r514580876", "bodyText": "You shouldn't need to cast u to User -- I think it should already be one.", "author": "coverbeck", "createdAt": "2020-10-29T21:32:58Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AuthenticatedResourceInterface.java", "diffHunk": "@@ -112,6 +112,19 @@ default void checkUser(User user, long id) {\n         }\n     }\n \n+    /**\n+     * Check if entry belongs to user\n+     *\n+     * @param user the user that is requesting something\n+     * @param entry entry to check permissions for\n+     */\n+    default void checkUserOwnsEntry(User user, Entry entry) {\n+        if (entry.getUsers().stream().noneMatch(u -> ((User)(u)).getId() == user.getId())) {", "originalCommit": "90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0Mzk5MQ==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r515243991", "bodyText": "Not sure why, but doesn't work for some reason. I copied this from elsewhere in the file", "author": "NatalieEO", "createdAt": "2020-10-30T17:02:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4MDg3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1Nzk2OQ==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r515257969", "bodyText": "You're right, interesting. I looked at it briefly. I think it's because the method parameter shouldn't be Entry,  but a generic. Like EntryVersionHelper does it:\npublic interface EntryVersionHelper<T extends Entry<T, U>, U extends Version, W extends EntryDAO<T>>\n...\n    default T filterContainersForHiddenTags(T entry) {\n\nBut this pattern is all over the file and there are lots of implementations of this interface, so not worth changing for this PR.", "author": "coverbeck", "createdAt": "2020-10-30T17:23:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4MDg3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4MjUxMQ==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r514582511", "bodyText": "Have you merged/rebased from develop recently? I thought this had been fixed by Gary (I just verified the ticket).", "author": "coverbeck", "createdAt": "2020-10-29T21:36:32Z", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -1841,7 +1841,7 @@ paths:\n           content:\n             application/json:\n               schema:\n-                $ref: '#/components/schemas/Aliasable'\n+                $ref: '#/components/schemas/WorkflowVersion'", "originalCommit": "90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1NjQwNA==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r515256404", "bodyText": "I based my branch off of develop from the day I made this PR. I just merged again from develop and built again and it got changed back.", "author": "NatalieEO", "createdAt": "2020-10-30T17:21:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4MjUxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4NDU0OQ==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r514584549", "bodyText": "Comment two lines up implies this is a renderer; it's not.", "author": "coverbeck", "createdAt": "2020-10-29T21:41:13Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/DockstoreWebserviceApplication.java", "diffHunk": "@@ -387,6 +388,7 @@ public void run(DockstoreWebserviceConfiguration configuration, Environment envi\n \n         // extra renderers\n         environment.jersey().register(new CharsetResponseFilter());\n+        environment.jersey().register(new AdminPrivilegesFilter());", "originalCommit": "90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4NTExNA==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r514585114", "bodyText": "A little JavaDoc explaining what this does would be nice.", "author": "coverbeck", "createdAt": "2020-10-29T21:42:32Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AdminPrivilegesFilter.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.dockstore.webservice.resources;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.UriInfo;\n+import javax.ws.rs.ext.Provider;\n+\n+import io.dockstore.webservice.core.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider", "originalCommit": "90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4NjkwNQ==", "url": "https://github.com/dockstore/dockstore/pull/3897#discussion_r514586905", "bodyText": "Should this be a ContainerRequestFilter instead? I think the way you have it now it's logging the request when it's sending the response. Ideally you want to log the request right when it comes in. It's a stretch, but if some admin request request crashed the server before the response could be sent, nothing would be logged.\nYou need for the principal to have been set though, or it won't work, so you'll have to see if it's feasible.", "author": "coverbeck", "createdAt": "2020-10-29T21:46:42Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AdminPrivilegesFilter.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.dockstore.webservice.resources;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.UriInfo;\n+import javax.ws.rs.ext.Provider;\n+\n+import io.dockstore.webservice.core.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider\n+public class AdminPrivilegesFilter implements ContainerResponseFilter {", "originalCommit": "90fe2967a83575bcc0d93c3108617c2a2da5bdd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "47446a98a4597d66044394145d23776554187977", "url": "https://github.com/dockstore/dockstore/commit/47446a98a4597d66044394145d23776554187977", "message": "PR feedback", "committedDate": "2020-10-30T17:00:35Z", "type": "commit"}, {"oid": "cb4d52860ca6def4adcb5ccadd8dba7a902f8485", "url": "https://github.com/dockstore/dockstore/commit/cb4d52860ca6def4adcb5ccadd8dba7a902f8485", "message": "Merge branch 'develop' into feature/seab-1812/logAdminActions", "committedDate": "2020-10-30T17:01:25Z", "type": "commit"}, {"oid": "920390067e0360ded23d2c29711d8a9d96fe83fe", "url": "https://github.com/dockstore/dockstore/commit/920390067e0360ded23d2c29711d8a9d96fe83fe", "message": "build after merge from develop", "committedDate": "2020-10-30T17:09:37Z", "type": "commit"}]}