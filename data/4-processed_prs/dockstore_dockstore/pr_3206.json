{"pr_number": 3206, "pr_title": "create better error message for workflow or tool registration", "pr_createdAt": "2020-02-03T18:35:56Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3206", "timeline": [{"oid": "603368c3fcc64d4c6a1abef8558ced5993c41575", "url": "https://github.com/dockstore/dockstore/commit/603368c3fcc64d4c6a1abef8558ced5993c41575", "message": "created better error message if workflow is registered as tool or vice versa", "committedDate": "2020-02-03T17:55:37Z", "type": "commit"}, {"oid": "b862262651e29d2960d3bb2cdb9d394a011158bc", "url": "https://github.com/dockstore/dockstore/commit/b862262651e29d2960d3bb2cdb9d394a011158bc", "message": "added ExpressionTool check when registering CWL tool as workflow", "committedDate": "2020-02-03T18:24:40Z", "type": "commit"}, {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9", "url": "https://github.com/dockstore/dockstore/commit/62eae48668c86059011b4d9ec5844274e9d74ad9", "message": "removed checkstyle warning suppression", "committedDate": "2020-02-03T18:31:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3OTg1NQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374279855", "bodyText": "I would find it easier to read if (numberOfTaskCalls != 1) {", "author": "coverbeck", "createdAt": "2020-02-03T18:57:52Z", "path": "dockstore-common/src/main/scala/io/dockstore/common/WdlBridge.scala", "diffHunk": "@@ -71,11 +92,16 @@ class WdlBridge {\n     */\n   @throws(classOf[WdlParser.SyntaxError])\n   def validateTool(filePath: String, sourceFilePath: String) = {\n-    validateWorkflow(filePath, sourceFilePath)\n+    validateWorkflowDeclaration(filePath, sourceFilePath)\n     val executableCallable = convertFilePathToExecutableCallable(filePath, sourceFilePath)\n+    val numberOfTaskCalls = executableCallable.taskCallNodes.seq.size\n \n-    if (executableCallable.taskCallNodes.seq.size > 1) {\n-      throw new WdlParser.SyntaxError(\"A WDL tool can only have one task.\")\n+    if (numberOfTaskCalls > 1 || numberOfTaskCalls == 0) {", "originalCommit": "62eae48668c86059011b4d9ec5844274e9d74ad9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4MjcyMg==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374282722", "bodyText": "Suggest mentioning the exact class(es) rather than the the possible choices.", "author": "coverbeck", "createdAt": "2020-02-03T19:03:53Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -736,7 +736,10 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n                 validationMessage = \"Primary descriptor is empty.\";\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage = \"A CWL workflow requires class: Workflow.\";\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    validationMessage += \" This file contains class: CommandLineTool or ExpressionTool. Did you mean to register a tool?\";", "originalCommit": "62eae48668c86059011b4d9ec5844274e9d74ad9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg0MDI3OQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r375840279", "bodyText": "Fixed so the message shows the exact class.\nCommandLineTool:\n\nExpressionTool:", "author": "kathy-t", "createdAt": "2020-02-06T13:44:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4MjcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NjQ1Mw==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374276453", "bodyText": "Should mention why it's invalid", "author": "garyluu", "createdAt": "2020-02-03T18:50:59Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/ValidationIT.java", "diffHunk": "@@ -168,12 +168,12 @@ public void testWdlWorkflow() {\n         workflow = workflowsApi.refresh(workflow.getId());\n         Assert.assertFalse(isWorkflowVersionValid(workflow, \"master\"));\n \n-        // change to valid tool - should be valid\n+        // change to valid tool - should be invalid\n         workflow.setWorkflowPath(\"/validTool.wdl\");\n         workflow = workflowsApi.updateWorkflow(workflow.getId(), workflow);\n         workflowsApi.updateWorkflowPath(workflow.getId(), workflow);\n         workflow = workflowsApi.refresh(workflow.getId());\n-        Assert.assertTrue(\"Should be valid\", isWorkflowVersionValid(workflow, \"master\"));\n+        Assert.assertFalse(\"Should be invalid\", isWorkflowVersionValid(workflow, \"master\"));", "originalCommit": "62eae48668c86059011b4d9ec5844274e9d74ad9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgzODk5Ng==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r375838996", "bodyText": "Reverted the test back to what it was originally because WDL tools with one task call can be registered as a WDL workflow (based on discussion with Denis).", "author": "kathy-t", "createdAt": "2020-02-06T13:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NjQ1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODY2OA==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374738668", "bodyText": "This is probably the fault of our definition, but while a WDL tool should be enforced to only have one task.\nI don't know if we want to enforce that a WDL workflow should have more than one task.\nI realize that this means that one-task workflows will basically count as \"both\", but I think that will be better because it won't confuse users who want to register and launch-with one-step workflows.", "author": "denis-yuen", "createdAt": "2020-02-04T15:25:30Z", "path": "dockstore-common/src/main/scala/io/dockstore/common/WdlBridge.scala", "diffHunk": "@@ -52,16 +52,37 @@ class WdlBridge {\n     secondaryWdlFiles = secondaryFiles\n   }\n \n+  /**\n+   *\n+   * Validates that the workflow or tool given by filePath has a workflow declaration\n+   * @param filePath absolute path to file\n+   */\n+  @throws(classOf[WdlParser.SyntaxError])\n+  def validateWorkflowDeclaration(filePath: String, sourceFilePath: String) = {\n+    val bundle = getBundle(filePath, sourceFilePath)\n+\n+    if (!bundle.primaryCallable.isDefined) {\n+      throw new WdlParser.SyntaxError(\"Workflow is missing a workflow declaration.\")\n+    }\n+  }\n+\n   /**\n     * Validates the workflow given by filePath\n     * @param filePath absolute path to file\n     */\n   @throws(classOf[WdlParser.SyntaxError])\n   def validateWorkflow(filePath: String, sourceFilePath: String) = {\n-    val bundle = getBundle(filePath, sourceFilePath)\n+    val executableCallable = convertFilePathToExecutableCallable(filePath, sourceFilePath)\n+    val numberOfTaskCalls = executableCallable.taskCallNodes.seq.size\n \n-    if (!bundle.primaryCallable.isDefined) {\n-      throw new WdlParser.SyntaxError(\"Workflow is missing a workflow declaration.\")\n+    validateWorkflowDeclaration(filePath, sourceFilePath)\n+\n+    if (numberOfTaskCalls <= 1) {\n+      val validationMessage = new StringBuilder(\"A WDL workflow must call more than one task.\")", "originalCommit": "62eae48668c86059011b4d9ec5844274e9d74ad9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDUzNw==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374740537", "bodyText": "Note that we can/should enforce this for CWL because of the much clearer definition", "author": "denis-yuen", "createdAt": "2020-02-04T15:28:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc3MTU5MQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374771591", "bodyText": "Should I remove the error message for WDL workflows then?\nAdditionally, how should WDL workflows and tools with zero tasks be handled? For example, if we enforce that a WDL tool should only have one task, would a WDL tool with zero tasks throw an error?", "author": "kathy-t", "createdAt": "2020-02-04T16:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc4Mzc2OA==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374783768", "bodyText": "Yeah, I think WDL workflows should be fine with 1 or many tasks.\nI would have thought that a WDL workflow or tool with zero tasks would be an error either way. But it might be worth looking at a few examples to double check. Or writing a few and having https://cromwell.readthedocs.io/en/develop/WOMtool/ validate them", "author": "denis-yuen", "createdAt": "2020-02-04T16:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgzNzg5Mw==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r375837893", "bodyText": "I reverted the WDL workflow validation back to what it was originally so WDL tools with 1 task call can be registered as a workflow.", "author": "kathy-t", "createdAt": "2020-02-06T13:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODY2OA=="}], "type": "inlineReview"}, {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f", "url": "https://github.com/dockstore/dockstore/commit/61bead7e2bd73dd4788c8b8140934b8b84d7345f", "message": "reverted WDL workflow validation back to original. made CWL workflow error message more specific.", "committedDate": "2020-02-06T13:30:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3ODIyNA==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376078224", "bodyText": "I think you can remove the numberOfTaskCalls != 0.", "author": "agduncan94", "createdAt": "2020-02-06T20:58:25Z", "path": "dockstore-common/src/main/scala/io/dockstore/common/WdlBridge.scala", "diffHunk": "@@ -73,9 +73,11 @@ class WdlBridge {\n   def validateTool(filePath: String, sourceFilePath: String) = {\n     validateWorkflow(filePath, sourceFilePath)\n     val executableCallable = convertFilePathToExecutableCallable(filePath, sourceFilePath)\n+    val numberOfTaskCalls = executableCallable.taskCallNodes.seq.size\n \n-    if (executableCallable.taskCallNodes.seq.size > 1) {\n-      throw new WdlParser.SyntaxError(\"A WDL tool can only have one task.\")\n+    // WDL tool with zero task calls are valid\n+    if (numberOfTaskCalls != 0 && numberOfTaskCalls > 1) {", "originalCommit": "61bead7e2bd73dd4788c8b8140934b8b84d7345f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4MTQxNA==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376081414", "bodyText": "Might be just me, but I think it'd look cleaner with String.format", "author": "garyluu", "createdAt": "2020-02-06T21:05:33Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -736,7 +736,12 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n                 validationMessage = \"Primary descriptor is empty.\";\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage = \"A CWL workflow requires class: Workflow.\";\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    validationMessage += \" This file contains class: \";\n+                    validationMessage += (content.contains(\"class: CommandLineTool\")) ? \"CommandLineTool.\" : \"ExpressionTool.\";\n+                    validationMessage += \" Did you mean to register a tool?\";", "originalCommit": "61bead7e2bd73dd4788c8b8140934b8b84d7345f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4ODgzOQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376088839", "bodyText": "Another consideration is efficiency, this repeated concatenation is pretty inefficient.\nConsider a StringBuilder https://stackoverflow.com/questions/4645020/when-to-use-stringbuilder-in-java", "author": "denis-yuen", "createdAt": "2020-02-06T21:22:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4MTQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4MzA1NQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376083055", "bodyText": "Perhaps single quotes around actual code", "author": "garyluu", "createdAt": "2020-02-06T21:09:11Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -768,7 +773,10 @@ public VersionTypeValidation validateToolSet(Set<SourceFile> sourcefiles, String\n                 validationMessage = \"Primary CWL descriptor is empty.\";\n             } else if (!content.contains(\"class: CommandLineTool\") && !content.contains(\"class: ExpressionTool\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: CommandLineTool or ExpressionTool.\";\n+                validationMessage = \"A CWL tool requires class: CommandLineTool or ExpressionTool.\";\n+                if (content.contains(\"class: Workflow\")) {\n+                    validationMessage += \" This file contains class: Workflow. Did you mean to register a workflow?\";", "originalCommit": "61bead7e2bd73dd4788c8b8140934b8b84d7345f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11", "url": "https://github.com/dockstore/dockstore/commit/9f75249ae3f185b2484eb7fbd7be8a80e2161a11", "message": "used StringBuilder for CWL workflow validation message. added single quotes for actual code in message", "committedDate": "2020-02-07T14:45:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzNzg1MA==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376437850", "bodyText": "I prefer: validationMessage.append(String.format(\" This file contains 'class: %s'. Did you mean to register a tool?\", cwlClass));", "author": "garyluu", "createdAt": "2020-02-07T15:04:59Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -725,28 +725,32 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n         Optional<SourceFile> mainDescriptor = filteredSourcefiles.stream().filter((sourceFile -> Objects.equals(sourceFile.getPath(), primaryDescriptorFilePath))).findFirst();\n \n         boolean isValid = true;\n-        String validationMessage = null;\n+        StringBuilder validationMessage = new StringBuilder();\n         Map<String, String> validationMessageObject = new HashMap<>();\n \n         if (mainDescriptor.isPresent()) {\n             Yaml yaml = new Yaml();\n             String content = mainDescriptor.get().getContent();\n             if (content == null || content.isEmpty()) {\n                 isValid = false;\n-                validationMessage = \"Primary descriptor is empty.\";\n+                validationMessage.append(\"Primary descriptor is empty.\");\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage.append(\"A CWL workflow requires 'class: Workflow'.\");\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    String cwlClass = content.contains(\"class: CommandLineTool\") ? \"CommandLineTool\" : \"ExpressionTool\";\n+                    validationMessage.append(\" This file contains 'class: \").append(cwlClass).append(\"'. Did you mean to register a tool?\");", "originalCommit": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2Mjc0OQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376462749", "bodyText": "String.format is less efficient than StringBuilder so I just stuck with using StringBuilder's append since using String.format would defeat the purpose of using StringBuilder for efficiency.", "author": "kathy-t", "createdAt": "2020-02-07T15:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzNzg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NDE3OQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376464179", "bodyText": "It's for readability: https://stackoverflow.com/a/44127617", "author": "garyluu", "createdAt": "2020-02-07T15:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzNzg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNTgzOQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376505839", "bodyText": "This is nit-picky and you don't need to change the PR for it, but FYI string searches can be relatively expensive so you should generally try to avoid searching for the same substring more than once. Imagine if content was 100K or bigger -- worst case it will go through the whole string two times if there's not a match for CommandLineTool, plus twice more for however far into the string the match for ExpressionTool is. Unless the compiler/runtime does some fancy optimization, but I wouldn't rely on it.\nOTOH, descriptors aren't typically that big, it will still be fast, and this code is not frequently executed.", "author": "coverbeck", "createdAt": "2020-02-07T17:11:12Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -725,28 +725,32 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n         Optional<SourceFile> mainDescriptor = filteredSourcefiles.stream().filter((sourceFile -> Objects.equals(sourceFile.getPath(), primaryDescriptorFilePath))).findFirst();\n \n         boolean isValid = true;\n-        String validationMessage = null;\n+        StringBuilder validationMessage = new StringBuilder();\n         Map<String, String> validationMessageObject = new HashMap<>();\n \n         if (mainDescriptor.isPresent()) {\n             Yaml yaml = new Yaml();\n             String content = mainDescriptor.get().getContent();\n             if (content == null || content.isEmpty()) {\n                 isValid = false;\n-                validationMessage = \"Primary descriptor is empty.\";\n+                validationMessage.append(\"Primary descriptor is empty.\");\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage.append(\"A CWL workflow requires 'class: Workflow'.\");\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    String cwlClass = content.contains(\"class: CommandLineTool\") ? \"CommandLineTool\" : \"ExpressionTool\";", "originalCommit": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwODkwMQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376508901", "bodyText": "I would personally use double quotes, but I can go either way: \"...\\\"class: Workflow\\\".\"", "author": "coverbeck", "createdAt": "2020-02-07T17:18:07Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -725,28 +725,32 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n         Optional<SourceFile> mainDescriptor = filteredSourcefiles.stream().filter((sourceFile -> Objects.equals(sourceFile.getPath(), primaryDescriptorFilePath))).findFirst();\n \n         boolean isValid = true;\n-        String validationMessage = null;\n+        StringBuilder validationMessage = new StringBuilder();\n         Map<String, String> validationMessageObject = new HashMap<>();\n \n         if (mainDescriptor.isPresent()) {\n             Yaml yaml = new Yaml();\n             String content = mainDescriptor.get().getContent();\n             if (content == null || content.isEmpty()) {\n                 isValid = false;\n-                validationMessage = \"Primary descriptor is empty.\";\n+                validationMessage.append(\"Primary descriptor is empty.\");\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage.append(\"A CWL workflow requires 'class: Workflow'.\");", "originalCommit": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzODQxOQ==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376538419", "bodyText": "This is what it would look like with double quotes:\n\nIt also looks like single quotes are used for some error messages, such as the one for /Dockstore.wdl when the file has no content. Do you think it would be better to just keep it as single quotes for uniformity?\nWhat it looks like with single quotes:", "author": "kathy-t", "createdAt": "2020-02-07T18:26:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwODkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MTk0Nw==", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376541947", "bodyText": "Ah, sorry, I did not look at other messages for comparison before I wrote my comment... If we're already using single quotes elsewhere, especially in the same message, we should be consistent and continue to use single quotes.\nI was commenting from more of a grammar perspective, although I don't actually know what the official rule is on that -- it just felt right to use double quotes. :)", "author": "coverbeck", "createdAt": "2020-02-07T18:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwODkwMQ=="}], "type": "inlineReview"}]}