{"pr_number": 328, "pr_title": "Add spock integration testing to the project and gradle-plugin module.", "pr_createdAt": "2020-06-17T20:55:03Z", "pr_url": "https://github.com/linkedin/rest.li/pull/328", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyOTU4OA==", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441829588", "bodyText": "NB: compile gradleApi() is applied automatically by the java-gradle-plugin, hence it's correct to remove it here", "author": "DPUkyle", "createdAt": "2020-06-17T20:56:50Z", "path": "gradle-plugins/build.gradle", "diffHunk": "@@ -1,10 +1,9 @@\n-apply plugin: 'java'\n+// Setup integTests\n+apply from: \"${buildScriptDirPath}/integTest.gradle\"\n \n dependencies {\n-  compile gradleApi()", "originalCommit": "2a87ed4d165fa4299a0201aad5a9bff7d3776105", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NDA3NA==", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441844074", "bodyText": "Exactly. That is why i put that note in \"integTest.gradle\"", "author": "Astro03", "createdAt": "2020-06-17T21:27:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyOTU4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgzMDYwNw==", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441830607", "bodyText": "This is implied by invoking GradleRunner#build - an exception is thrown if the build was not successful.\nInstead please change to result.task(': mainDataTemplateJar').outcome == TaskOutcome.SUCCESS", "author": "DPUkyle", "createdAt": "2020-06-17T20:58:53Z", "path": "gradle-plugins/src/integTest/groovy/com/linkedin/pegasus/gradle/PegasusPluginIntegrationTest.groovy", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.linkedin.pegasus.gradle\n+\n+import org.gradle.testkit.runner.GradleRunner\n+import org.junit.Rule\n+import org.junit.rules.TemporaryFolder\n+import spock.lang.Specification\n+\n+class PegasusPluginIntegrationTest extends Specification {\n+  @Rule\n+  TemporaryFolder tempDir = new TemporaryFolder()\n+\n+  def 'apply pegasus plugin'() {\n+    setup:\n+    def buildFile = tempDir.newFile('build.gradle')\n+    buildFile.text = \"plugins { id 'pegasus' }\"\n+\n+    when:\n+    def result = GradleRunner.create()\n+        .withProjectDir(tempDir.root)\n+        .withPluginClasspath()\n+        .withArguments(\"mainDataTemplateJar\")\n+        .forwardOutput()\n+        .build()\n+\n+    then:\n+    result.output.contains(\"BUILD SUCCESSFUL\")", "originalCommit": "2a87ed4d165fa4299a0201aad5a9bff7d3776105", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NjYyNA==", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441846624", "bodyText": "done.. thanks", "author": "Astro03", "createdAt": "2020-06-17T21:32:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgzMDYwNw=="}], "type": "inlineReview"}, {"oid": "8575f8498ea6f991948a1c90b7c5d5fd6736586f", "url": "https://github.com/linkedin/rest.li/commit/8575f8498ea6f991948a1c90b7c5d5fd6736586f", "message": "Add spock integration testing to the project and gradle-plugin module.\n\nThis script Create a script to allow spock integration testing.\n\nAs per https://guides.gradle.org/testing-gradle-plugins/#integration-tests:\nIntegration tests or \"functional tests verify the correctness of the [Gradle]\nplugin end-to-end. In practice that means applying, configuring and\nexecuting the functionality of the plugin implementation\".\n\n* Create a script that adds spock integration testing for a module\n* Add integration testing to the gradle-plugin module\n* Create an integ test that validates the pegasus plugin can be applied", "committedDate": "2020-06-17T21:25:02Z", "type": "forcePushed"}, {"oid": "037e79c58e34b698da0355ffc01c05ea8ac2891a", "url": "https://github.com/linkedin/rest.li/commit/037e79c58e34b698da0355ffc01c05ea8ac2891a", "message": "Add spock integration testing to the project and gradle-plugin module.\n\nThis script Create a script to allow spock integration testing.\n\nAs per https://guides.gradle.org/testing-gradle-plugins/#integration-tests:\nIntegration tests or \"functional tests verify the correctness of the [Gradle]\nplugin end-to-end. In practice that means applying, configuring and\nexecuting the functionality of the plugin implementation\".\n\n* Create a script that adds spock integration testing for a module\n* Add integration testing to the gradle-plugin module\n* Create an integ test that validates the pegasus plugin can be applied", "committedDate": "2020-06-17T21:30:29Z", "type": "forcePushed"}, {"oid": "8ee37ee1ed56f2a13da79d7bba1298095dbc4ef8", "url": "https://github.com/linkedin/rest.li/commit/8ee37ee1ed56f2a13da79d7bba1298095dbc4ef8", "message": "Add spock integration testing to the project and gradle-plugin module.\n\nThis script Create a script to allow spock integration testing.\n\nAs per https://guides.gradle.org/testing-gradle-plugins/#integration-tests:\nIntegration tests or \"functional tests verify the correctness of the [Gradle]\nplugin end-to-end. In practice that means applying, configuring and\nexecuting the functionality of the plugin implementation\".\n\n* Create a script that adds spock integration testing for a module\n* Add integration testing to the gradle-plugin module\n* Create an integ test that validates the pegasus plugin can be applied", "committedDate": "2020-06-17T21:34:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MDMxOQ==", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441850319", "bodyText": "I suggest:\nproject.tasks.withType(Test) {\n  if (it.options instanceof TestNGOptions) {\n    it.options.excludeGroups 'ci-flaky'\n    it.systemProperties['test.httpRequestTimeout'] = '20000'\n  }\n}", "author": "DPUkyle", "createdAt": "2020-06-17T21:41:15Z", "path": "build.gradle", "diffHunk": "@@ -286,10 +287,11 @@ subprojects {\n     }\n   }\n \n-  // Exclude tests which are known to be flaky in the Travis CI environment\n+  // Exclude tests which are known to be flaky in the Travis CI environment. Since all test tasks are TestNG tasks\n+  // EXCEPT the integTest task, exclude the options from being evaluated by travis for the integTest task.\n   if (System.getenv('TRAVIS') == 'true' && System.getenv('USER') == 'travis') {\n     afterEvaluate {\n-      project.tasks.withType(Test).forEach {\n+      project.tasks.withType(Test).matching { it.name != \"integTest\" }.forEach {", "originalCommit": "8ee37ee1ed56f2a13da79d7bba1298095dbc4ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTg4NA==", "url": "https://github.com/linkedin/rest.li/pull/328#discussion_r441851884", "bodyText": "good idea, it's better than what I was doing.", "author": "Astro03", "createdAt": "2020-06-17T21:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MDMxOQ=="}], "type": "inlineReview"}, {"oid": "1e69d77f6e8ecc872995957a4de3f1cba87c945c", "url": "https://github.com/linkedin/rest.li/commit/1e69d77f6e8ecc872995957a4de3f1cba87c945c", "message": "Add spock integration testing to the project and gradle-plugin module.\n\nThis script Create a script to allow spock integration testing.\n\nAs per https://guides.gradle.org/testing-gradle-plugins/#integration-tests:\nIntegration tests or \"functional tests verify the correctness of the [Gradle]\nplugin end-to-end. In practice that means applying, configuring and\nexecuting the functionality of the plugin implementation\".\n\n* Create a script that adds spock integration testing for a module\n* Add integration testing to the gradle-plugin module\n* Create an integ test that validates the pegasus plugin can be applied", "committedDate": "2020-06-17T21:44:33Z", "type": "commit"}, {"oid": "1e69d77f6e8ecc872995957a4de3f1cba87c945c", "url": "https://github.com/linkedin/rest.li/commit/1e69d77f6e8ecc872995957a4de3f1cba87c945c", "message": "Add spock integration testing to the project and gradle-plugin module.\n\nThis script Create a script to allow spock integration testing.\n\nAs per https://guides.gradle.org/testing-gradle-plugins/#integration-tests:\nIntegration tests or \"functional tests verify the correctness of the [Gradle]\nplugin end-to-end. In practice that means applying, configuring and\nexecuting the functionality of the plugin implementation\".\n\n* Create a script that adds spock integration testing for a module\n* Add integration testing to the gradle-plugin module\n* Create an integ test that validates the pegasus plugin can be applied", "committedDate": "2020-06-17T21:44:33Z", "type": "forcePushed"}, {"oid": "5522a5bd56fe9429e208abbdf82416c67ba55f19", "url": "https://github.com/linkedin/rest.li/commit/5522a5bd56fe9429e208abbdf82416c67ba55f19", "message": "Merge branch 'master' into fpe/add-integTest-to-gradle-plugin", "committedDate": "2020-06-23T20:08:34Z", "type": "commit"}]}