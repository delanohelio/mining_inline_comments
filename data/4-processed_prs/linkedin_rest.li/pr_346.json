{"pr_number": 346, "pr_title": "Disable string interning in Jackson JSON since it causes GC issues", "pr_createdAt": "2020-07-02T16:19:50Z", "pr_url": "https://github.com/linkedin/rest.li/pull/346", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDIzMw==", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449140233", "bodyText": "this is shouldn't be there in abstract class right? what if someone wants to override it?\nsame for other places", "author": "aman1309", "createdAt": "2020-07-02T16:37:05Z", "path": "data/src/main/java/com/linkedin/data/codec/entitystream/AbstractJacksonDataEncoder.java", "diffHunk": "@@ -46,12 +46,16 @@ protected AbstractJacksonDataEncoder(JsonFactory jsonFactory, DataMap dataMap, i\n   {\n     super(dataMap, bufferSize);\n     _jsonFactory = jsonFactory;\n+    // Disable field name interning since it causes GC issues.\n+    _jsonFactory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);\n   }\n \n   protected AbstractJacksonDataEncoder(JsonFactory jsonFactory, DataList dataList, int bufferSize)\n   {\n     super(dataList, bufferSize);\n     _jsonFactory = jsonFactory;\n+    // Disable field name interning since it causes GC issues.\n+    _jsonFactory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);", "originalCommit": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0Nzk2NQ==", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449147965", "bodyText": "Safe to do it here since its the topmost. Subclasses can change this if they want to.", "author": "karthikrg", "createdAt": "2020-07-02T16:51:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDIzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1OTM3MA==", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449159370", "bodyText": "This wouldn't allow someone to override the interning feature. Subclasses cannot override this behavior.\nSame for the decoder.", "author": "karthikbalasub", "createdAt": "2020-07-02T17:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDIzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MDczMw==", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449140733", "bodyText": "not required if you're doing it in abstract classes", "author": "aman1309", "createdAt": "2020-07-02T16:38:00Z", "path": "data/src/main/java/com/linkedin/data/codec/JacksonDataCodec.java", "diffHunk": "@@ -42,13 +42,24 @@\n  */\n public class JacksonDataCodec extends AbstractJacksonDataCodec implements TextDataCodec\n {\n+  /**\n+   * Default factory to be shared by all codec instances. This is done to maximize factory reuse for\n+   * performance reasons as recommended by Jackson authors.\n+   *\n+   * <a href=\"https://github.com/FasterXML/jackson-docs/wiki/Presentation:-Jackson-Performance\">Jackson Performance</a>\n+   */\n+  private static final JsonFactory JSON_FACTORY = new JsonFactory();\n+  static {\n+    JSON_FACTORY.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);\n+  }", "originalCommit": "3486986921489a51a50ffb3ccb6e61f71c5bfe1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3af70bd4b0c28e5ef5ab9a76b8a7b0c7c98e01ab", "url": "https://github.com/linkedin/rest.li/commit/3af70bd4b0c28e5ef5ab9a76b8a7b0c7c98e01ab", "message": "Disable string interning in Jackson JSON since it causes GC issues. Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary", "committedDate": "2020-07-02T16:46:17Z", "type": "forcePushed"}, {"oid": "98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1", "url": "https://github.com/linkedin/rest.li/commit/98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1", "message": "Disable string interning in Jackson JSON since it causes GC issues. Make JsonFactory parameterized so that multiple codec instances can share the same factory if necessary", "committedDate": "2020-07-02T16:53:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1OTkyNw==", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449159927", "bodyText": "This means it wouldn't be possible to override this behavior to enable interning", "author": "karthikbalasub", "createdAt": "2020-07-02T17:13:58Z", "path": "data/src/main/java/com/linkedin/data/codec/AbstractJacksonDataCodec.java", "diffHunk": "@@ -51,13 +51,26 @@\n  */\n public abstract class AbstractJacksonDataCodec implements DataCodec\n {\n+  /**\n+   * Default factory to be shared between all jackson JSON codec instances. This is done to maximize factory reuse for\n+   * performance reasons as recommended by Jackson authors.\n+   *\n+   * <a href=\"https://github.com/FasterXML/jackson-docs/wiki/Presentation:-Jackson-Performance\">Jackson Performance</a>\n+   */\n+  public static final JsonFactory JSON_FACTORY = new JsonFactory();\n+  static {\n+    JSON_FACTORY.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);\n+  }\n+\n   protected static final int DEFAULT_BUFFER_SIZE = 4096;\n \n   protected final JsonFactory _factory;\n \n   protected AbstractJacksonDataCodec(JsonFactory factory)\n   {\n     _factory = factory;\n+    // Disable string interning since it causes GC issues.\n+    _factory.disable(JsonFactory.Feature.INTERN_FIELD_NAMES);", "originalCommit": "98b98a7d66a92ad2023c9fc833fc24c5cfab1cb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NjE2MQ==", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449186161", "bodyText": "You can. You can always inject a custom factory and in your constructor enable interning by explicitly invoking it after calling super.", "author": "karthikrg", "createdAt": "2020-07-02T18:04:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1OTkyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5MzcyNA==", "url": "https://github.com/linkedin/rest.li/pull/346#discussion_r449193724", "bodyText": "It should be possible to customize the jsonfactory with the existing codec classes, without having to create a subclass.\nFor example, it would help some service to override the default behavior.\nSince we are disabling interning when the default constructor is used, it should cover the default behavior. When a custom json factory is provided, we should treat it as override and not force behavior on it.", "author": "karthikbalasub", "createdAt": "2020-07-02T18:19:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1OTkyNw=="}], "type": "inlineReview"}, {"oid": "873730ea07343380d5d797cd9893b75adb9b06df", "url": "https://github.com/linkedin/rest.li/commit/873730ea07343380d5d797cd9893b75adb9b06df", "message": "Disable string interning by default in Jackson JSON since it causes GC issues.\nMake JsonFactory parameterized so that multiple codec instances can share the same factory if necessary", "committedDate": "2020-07-02T18:29:12Z", "type": "commit"}, {"oid": "873730ea07343380d5d797cd9893b75adb9b06df", "url": "https://github.com/linkedin/rest.li/commit/873730ea07343380d5d797cd9893b75adb9b06df", "message": "Disable string interning by default in Jackson JSON since it causes GC issues.\nMake JsonFactory parameterized so that multiple codec instances can share the same factory if necessary", "committedDate": "2020-07-02T18:29:12Z", "type": "forcePushed"}]}