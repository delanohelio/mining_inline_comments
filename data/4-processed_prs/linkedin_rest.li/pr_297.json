{"pr_number": 297, "pr_title": "R2 resiency change to timeout HTTP/2 parent channel creation", "pr_createdAt": "2020-05-15T01:48:51Z", "pr_url": "https://github.com/linkedin/rest.li/pull/297", "timeline": [{"oid": "4f0c390390b339f31728477818392342f14cd12e", "url": "https://github.com/linkedin/rest.li/commit/4f0c390390b339f31728477818392342f14cd12e", "message": "R2 resiency change to timeout HTTP/2 parent channel creation", "committedDate": "2020-05-15T01:47:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzMjg5Mg==", "url": "https://github.com/linkedin/rest.li/pull/297#discussion_r425532892", "bodyText": "private static final int DEFAULT_CHANNEL_CREATION_TIMEOUT_MS", "author": "xuli-in", "createdAt": "2020-05-15T02:33:24Z", "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http2/Http2ChannelLifecycle.java", "diffHunk": "@@ -51,13 +53,15 @@\n class Http2ChannelLifecycle implements AsyncPool.Lifecycle<Channel>\n {\n   private static final Logger LOG = LoggerFactory.getLogger(Http2ChannelLifecycle.class);\n+  public static final int DEFAULT_OBJECT_CREATION_TIMEOUT = 10000;", "originalCommit": "4f0c390390b339f31728477818392342f14cd12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NjcxMw==", "url": "https://github.com/linkedin/rest.li/pull/297#discussion_r426796713", "bodyText": "Fixed", "author": "nizarm", "createdAt": "2020-05-18T17:50:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzMjg5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU0MDc4Ng==", "url": "https://github.com/linkedin/rest.li/pull/297#discussion_r425540786", "bodyText": "Log error before callback.onError?", "author": "xuli-in", "createdAt": "2020-05-15T03:05:36Z", "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http2/Http2ChannelLifecycle.java", "diffHunk": "@@ -186,11 +191,20 @@ private void notifyWaiters(Throwable e)\n    */\n   private void doBootstrapParentChannel(Callback<Channel> callback)\n   {\n-    _parentChannelLifecycle.create(new Callback<Channel>() {\n+    // Lets not trust the _parentChannelLifecycle to timely return a response here.\n+    // Embedding the callback inside a timeout callback (ObjectCreationTimeoutCallback)\n+    // to force a response within creationTimeout deadline\n+    _parentChannelLifecycle.create(new TimeoutCallback<>(_scheduler, _creationTimeout, TimeUnit.MILLISECONDS, new Callback<Channel>() {\n       @Override\n       public void onError(Throwable error)\n       {\n         callback.onError(error);\n+\n+        // Make sure to log the object creation timeout error\n+        if (error instanceof ObjectCreationTimeoutException)", "originalCommit": "4f0c390390b339f31728477818392342f14cd12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NzExNQ==", "url": "https://github.com/linkedin/rest.li/pull/297#discussion_r426797115", "bodyText": "This is intentionally placed after the callback to reduce any latency impact on the retriable error response as this request gets retried.", "author": "nizarm", "createdAt": "2020-05-18T17:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU0MDc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzMDcwMQ==", "url": "https://github.com/linkedin/rest.li/pull/297#discussion_r426830701", "bodyText": "ok", "author": "xuli-in", "createdAt": "2020-05-18T18:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU0MDc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4MDkxMQ==", "url": "https://github.com/linkedin/rest.li/pull/297#discussion_r426080911", "bodyText": "creationTimeoutMs?", "author": "FreCap", "createdAt": "2020-05-15T22:58:27Z", "path": "r2-netty/src/main/java/com/linkedin/r2/netty/client/http2/Http2ChannelLifecycle.java", "diffHunk": "@@ -51,13 +53,15 @@\n class Http2ChannelLifecycle implements AsyncPool.Lifecycle<Channel>\n {\n   private static final Logger LOG = LoggerFactory.getLogger(Http2ChannelLifecycle.class);\n+  public static final int DEFAULT_OBJECT_CREATION_TIMEOUT = 10000;\n \n   private final SocketAddress _address;\n   private final ScheduledExecutorService _scheduler;\n   private final Clock _clock;\n   private final boolean _ssl;\n   private final long _maxContentLength;\n   private final long _idleTimeout;\n+  private final long _creationTimeout;", "originalCommit": "4f0c390390b339f31728477818392342f14cd12e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NzM0MA==", "url": "https://github.com/linkedin/rest.li/pull/297#discussion_r426797340", "bodyText": "Fixed", "author": "nizarm", "createdAt": "2020-05-18T17:51:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4MDkxMQ=="}], "type": "inlineReview"}, {"oid": "1105d7556f9d0e598867b1cf6aa1e32cdb0763db", "url": "https://github.com/linkedin/rest.li/commit/1105d7556f9d0e598867b1cf6aa1e32cdb0763db", "message": "iterate with review commetns", "committedDate": "2020-05-18T17:57:16Z", "type": "commit"}, {"oid": "e466d035227fc594ed39ae0d86653d82ef86a6d9", "url": "https://github.com/linkedin/rest.li/commit/e466d035227fc594ed39ae0d86653d82ef86a6d9", "message": "Merge branch 'master' into feature/r2resiliency", "committedDate": "2020-05-18T19:40:09Z", "type": "commit"}]}