{"pr_number": 487, "pr_title": "Enable cycle check when serializing only when assertions are enabled.", "pr_createdAt": "2020-11-26T00:14:11Z", "pr_url": "https://github.com/linkedin/rest.li/pull/487", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3MzU0MA==", "url": "https://github.com/linkedin/rest.li/pull/487#discussion_r530773540", "bodyText": "nit: record cycles when assertions are .. (remove comma)", "author": "karthikbalasub", "createdAt": "2020-11-26T04:55:26Z", "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -112,8 +112,15 @@\n   /**\n    * Supplier for cycle checker used when traversing instances using a {@link Data.TraverseCallback}. Applications can\n    * choose to replace this with a supplier vending custom implementations, at their own risk of ensuring correctness.\n+   *\n+   * <p>The default implementation uses a {@link ThreadLocal} in every {@link DataList} and {@link DataMap} to detect\n+   * and record cycles, when assertions are enabled, and does NO checks when assertions are disabled.</p>", "originalCommit": "ad39c40fb615fb58b5d0e838ff54fc8f7f70c125", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTI0NTQyNw==", "url": "https://github.com/linkedin/rest.li/pull/487#discussion_r531245427", "bodyText": "Also made the checkers singletons to reduce garbage since they carry no internal state.", "author": "karthikrg", "createdAt": "2020-11-26T22:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3MzU0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3MzY2Mg==", "url": "https://github.com/linkedin/rest.li/pull/487#discussion_r530773662", "bodyText": "nice!", "author": "karthikbalasub", "createdAt": "2020-11-26T04:55:56Z", "path": "data/src/main/java/com/linkedin/data/Data.java", "diffHunk": "@@ -112,8 +112,15 @@\n   /**\n    * Supplier for cycle checker used when traversing instances using a {@link Data.TraverseCallback}. Applications can\n    * choose to replace this with a supplier vending custom implementations, at their own risk of ensuring correctness.\n+   *\n+   * <p>The default implementation uses a {@link ThreadLocal} in every {@link DataList} and {@link DataMap} to detect\n+   * and record cycles, when assertions are enabled, and does NO checks when assertions are disabled.</p>\n    */\n-  private static Supplier<CycleChecker> CYCLE_CHECKER_SUPPLIER = DefaultCycleChecker::new;\n+  private static Supplier<CycleChecker> CYCLE_CHECKER_SUPPLIER = () -> {\n+    boolean assertionsEnabled = false;\n+    assert assertionsEnabled = true;", "originalCommit": "ad39c40fb615fb58b5d0e838ff54fc8f7f70c125", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d43b29e2438a12f426ff379fad29f0f3d712bb68", "url": "https://github.com/linkedin/rest.li/commit/d43b29e2438a12f426ff379fad29f0f3d712bb68", "message": "Enable cycle check when serializing only when assertions are enabled, to avoid severe performance degradation at high QPS due to ThreadLocal slowdown.", "committedDate": "2020-11-26T22:46:52Z", "type": "commit"}, {"oid": "d43b29e2438a12f426ff379fad29f0f3d712bb68", "url": "https://github.com/linkedin/rest.li/commit/d43b29e2438a12f426ff379fad29f0f3d712bb68", "message": "Enable cycle check when serializing only when assertions are enabled, to avoid severe performance degradation at high QPS due to ThreadLocal slowdown.", "committedDate": "2020-11-26T22:46:52Z", "type": "forcePushed"}]}