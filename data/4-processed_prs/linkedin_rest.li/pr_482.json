{"pr_number": 482, "pr_title": "Fix bug where records/unions wrapping the same map were not updated when setting a field via the other record/union", "pr_createdAt": "2020-11-19T23:46:21Z", "pr_url": "https://github.com/linkedin/rest.li/pull/482", "timeline": [{"oid": "67f1b912975681b97a260de8048677800bff9c12", "url": "https://github.com/linkedin/rest.li/commit/67f1b912975681b97a260de8048677800bff9c12", "message": "Fix bug where records wrapping the same map were not updated when setter was invoked on one record", "committedDate": "2020-11-19T23:35:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4MjA4Nw==", "url": "https://github.com/linkedin/rest.li/pull/482#discussion_r527282087", "bodyText": "What about deep copy (if we have any)", "author": "BrianPin", "createdAt": "2020-11-19T23:56:19Z", "path": "generator-test/src/test/java/com/linkedin/pegasus/generator/override/TestRecord.java", "diffHunk": "@@ -530,4 +530,15 @@ public void testCopyChangeRecordField() throws CloneNotSupportedException\n     assertEquals(record.getRecordOptionalField().getLocation(), \"near\");\n     assertNull(recordCopy.getRecordOptionalField());\n   }\n+\n+  @Test\n+  public void testSetOnRecordWrappingSameMap()\n+  {\n+    RecordBar bar = new RecordBar();\n+    bar.setLocation(\"some\");\n+    RecordBar copy = new RecordBar(bar.data());", "originalCommit": "67f1b912975681b97a260de8048677800bff9c12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4MjE4MA==", "url": "https://github.com/linkedin/rest.li/pull/482#discussion_r527282180", "bodyText": "Those are already tested via other test cases.", "author": "karthikrg", "createdAt": "2020-11-19T23:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI4MjA4Nw=="}], "type": "inlineReview"}]}