{"pr_number": 230, "pr_title": "add env vars to make RJMX credentials user configurable", "pr_createdAt": "2020-08-06T19:33:00Z", "pr_url": "https://github.com/cryostatio/cryostat/pull/230", "timeline": [{"oid": "0c7386418288393090974427062125aa47defdf8", "url": "https://github.com/cryostatio/cryostat/commit/0c7386418288393090974427062125aa47defdf8", "message": "add env vars to make RJMX credentials user configurable", "committedDate": "2020-08-06T19:31:40Z", "type": "commit"}, {"oid": "a7aa8d0fdd8563fa3f86a09be79e98f71fedb494", "url": "https://github.com/cryostatio/cryostat/commit/a7aa8d0fdd8563fa3f86a09be79e98f71fedb494", "message": "fixed if statement", "committedDate": "2020-08-06T19:33:56Z", "type": "commit"}, {"oid": "cd825a25ed692f05c5f07df676ea605fd478e1c9", "url": "https://github.com/cryostatio/cryostat/commit/cd825a25ed692f05c5f07df676ea605fd478e1c9", "message": "update run.sh and override auth env var if user or password specified", "committedDate": "2020-08-06T20:27:49Z", "type": "commit"}, {"oid": "499dfc4e40f7f31e27a65cd68c84013863b41020", "url": "https://github.com/cryostatio/cryostat/commit/499dfc4e40f7f31e27a65cd68c84013863b41020", "message": "fix condition statement for using rjmx auth", "committedDate": "2020-08-07T14:17:13Z", "type": "commit"}, {"oid": "140ca66bc18348ac4d977c27b20c26fcd222de95", "url": "https://github.com/cryostatio/cryostat/commit/140ca66bc18348ac4d977c27b20c26fcd222de95", "message": "minor fix in condition statement", "committedDate": "2020-08-07T15:18:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEzNjk3MQ==", "url": "https://github.com/cryostatio/cryostat/pull/230#discussion_r467136971", "bodyText": "I don't think we should document this JVM flag specifically - it's what happens under the covers, and is really the only way that JMX auth can be enabled, but this might be confusing to an end user trying to figure out how to configure auth. In practice, all that matters are the env vars CONTAINER_JFR_RJMX_{AUTH,USER,PASS}. When actually deploying a ContainerJFR image somewhere, those env vars are how the user should expect to configure their auth, not the JVM flag directly, since configuring the JVM flags would require them to build their own custom image with a modified entrypoint.sh.", "author": "andrewazores", "createdAt": "2020-08-07T16:14:19Z", "path": "README.md", "diffHunk": "@@ -272,3 +272,11 @@ WebSocket SubProtocol header.\n If no appropriate auth manager is configured or can be automatically determined\n then the fallback is the NoopAuthManager, which does no external validation\n calls and simply accepts any provided token or credentials.\n+\n+## JMX AUTHORIZATION HANDLING\n+\n+JMX connections into `container-jfr` are secured using a username and password \n+(unless the following flag is set: `\"-Dcom.sun.management.jmxremote.authenticate=false\"`).", "originalCommit": "140ca66bc18348ac4d977c27b20c26fcd222de95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEzODY4Mg==", "url": "https://github.com/cryostatio/cryostat/pull/230#discussion_r467138682", "bodyText": "In fact, I would lean toward not documenting the ability to disable the JMX auth at all. That's only something that should be done in development or testing. I can't think of a valid reason that a production deployment would want JMX auth on the ContainerJFR instance itself disabled. Documenting that it can be disabled may make it seem like this is considered reasonably good practice or even encouraged.\nSo, the docs should convey the fact that JMX auth on the ContainerJFR instance itself is always enabled, and the USER/PASS vars can simply be used to customize the credentials used for this always-on auth.", "author": "andrewazores", "createdAt": "2020-08-07T16:17:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEzNjk3MQ=="}], "type": "inlineReview"}, {"oid": "fb1790ddc77e3896fc08adaecfc1fdf7c7816b19", "url": "https://github.com/cryostatio/cryostat/commit/fb1790ddc77e3896fc08adaecfc1fdf7c7816b19", "message": "update README", "committedDate": "2020-08-07T16:42:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4MzczMg==", "url": "https://github.com/cryostatio/cryostat/pull/230#discussion_r467183732", "bodyText": "Let's rename this heading INCOMING JMX CONNECTION AUTHENTICATION or similar. LGTM otherwise!", "author": "andrewazores", "createdAt": "2020-08-07T17:48:25Z", "path": "README.md", "diffHunk": "@@ -272,3 +272,10 @@ WebSocket SubProtocol header.\n If no appropriate auth manager is configured or can be automatically determined\n then the fallback is the NoopAuthManager, which does no external validation\n calls and simply accepts any provided token or credentials.\n+\n+## JMX AUTHORIZATION HANDLING", "originalCommit": "fb1790ddc77e3896fc08adaecfc1fdf7c7816b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5MDk2NQ==", "url": "https://github.com/cryostatio/cryostat/pull/230#discussion_r467190965", "bodyText": "Ok, done!", "author": "Alexjsenn", "createdAt": "2020-08-07T18:03:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4MzczMg=="}], "type": "inlineReview"}, {"oid": "d7640bc2d6f43b2209e3542f50bc449a237dbce8", "url": "https://github.com/cryostatio/cryostat/commit/d7640bc2d6f43b2209e3542f50bc449a237dbce8", "message": "change heading in README", "committedDate": "2020-08-07T18:02:41Z", "type": "commit"}]}