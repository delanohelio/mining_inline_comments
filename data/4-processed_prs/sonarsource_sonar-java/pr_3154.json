{"pr_number": 3154, "pr_title": "Handle correctly hardcoded behaviors and fix FP on S4449", "pr_createdAt": "2020-08-26T12:59:04Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3154", "timeline": [{"oid": "83946a9be619d7b6da9cb237ac3c4a9632c6073f", "url": "https://github.com/SonarSource/sonar-java/commit/83946a9be619d7b6da9cb237ac3c4a9632c6073f", "message": "SONARJAVA-3493 Fix access to resources files", "committedDate": "2020-08-26T09:36:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI4ODM1MA==", "url": "https://github.com/SonarSource/sonar-java/pull/3154#discussion_r477288350", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Preconditions.checkNotNull(null); // Compliant - a way to be sure it will be not null\n          \n          \n            \n                Preconditions.checkNotNull(o); // Compliant - a way to be sure it will be not null", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-08-26T13:12:01Z", "path": "java-checks-test-sources/src/main/java/symbolicexecution/checks/ParameterNullnessCheck.java", "diffHunk": "@@ -29,9 +30,10 @@ void foo(Object o) { // flow@foo [[order=2]] {{Method 'foo' declaration.}}\n     C c2 = new C(o, // Noncompliant [[sc=16;ec=17;flows=A]] {{Annotate the parameter with @javax.annotation.Nullable in constructor declaration, or make sure that null can not be passed as argument.}}\n       null); // flow@A [[order=1]] {{Argument can be null.}}\n     B b = new B();\n+  }\n \n-    Preconditions.checkNotNull( // Noncompliant [[sc=19;ec=31;flows=checkNotNull]] \n-      null); // flow@checkNotNull [[order=1]] {{Argument can be null.}}\n+  void qix(@Nullable Object o) {\n+    Preconditions.checkNotNull(null); // Compliant - a way to be sure it will be not null", "originalCommit": "2cedbee12ea7722e6b11a055b0b32405c0796978", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwODcwNA==", "url": "https://github.com/SonarSource/sonar-java/pull/3154#discussion_r477308704", "bodyText": "nice catch.", "author": "m-g-sonar", "createdAt": "2020-08-26T13:40:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI4ODM1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwMzk5OQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3154#discussion_r477303999", "bodyText": "For the record, the different issues additions/deletion in this PR (like these ones) correspond to issues removed in #3140.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-08-26T13:34:07Z", "path": "its/ruling/src/test/resources/sonar-server/java-S4165.json", "diffHunk": "@@ -1,4 +1,11 @@\n {\n+'org.sonarsource.sonarqube:sonar-server:src/main/java/org/sonar/server/es/textsearch/ComponentTextSearchQueryFactory.java':[\n+177,\n+178,\n+179,\n+180,\n+181,\n+],", "originalCommit": "83946a9be619d7b6da9cb237ac3c4a9632c6073f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwNzI4Mw==", "url": "https://github.com/SonarSource/sonar-java/pull/3154#discussion_r477307283", "bodyText": "Yep, I have seen that -_-", "author": "m-g-sonar", "createdAt": "2020-08-26T13:38:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMwMzk5OQ=="}], "type": "inlineReview"}, {"oid": "1e1171131e7a18a8334d5ade95344e9449afa9cc", "url": "https://github.com/SonarSource/sonar-java/commit/1e1171131e7a18a8334d5ade95344e9449afa9cc", "message": "SONARJAVA-3508 Fix FP on S4449 when using Guava's Preconditions.checkNotNull()", "committedDate": "2020-08-26T13:40:05Z", "type": "commit"}, {"oid": "1e1171131e7a18a8334d5ade95344e9449afa9cc", "url": "https://github.com/SonarSource/sonar-java/commit/1e1171131e7a18a8334d5ade95344e9449afa9cc", "message": "SONARJAVA-3508 Fix FP on S4449 when using Guava's Preconditions.checkNotNull()", "committedDate": "2020-08-26T13:40:05Z", "type": "forcePushed"}]}