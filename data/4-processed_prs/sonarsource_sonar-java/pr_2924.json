{"pr_number": 2924, "pr_title": "SONARJAVA-3353 Rule S5776: Exception testing via JUnit ExpectedException rule should not be mixed with other assertions", "pr_createdAt": "2020-04-28T11:55:39Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2924", "timeline": [{"oid": "27672e7546e6812510230fc7a3551bc2db2f1715", "url": "https://github.com/SonarSource/sonar-java/commit/27672e7546e6812510230fc7a3551bc2db2f1715", "message": "SONARJAVA-3353 Rule S5776: Exception testing via JUnit ExpectedException rule should not be mixed with other assertions", "committedDate": "2020-04-28T15:16:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM3MDk0OA==", "url": "https://github.com/SonarSource/sonar-java/pull/2924#discussion_r417370948", "bodyText": "Since we slightly changed the scope, I believe we should rework this description, to clearly reflect the behavior of the rule.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-04-29T14:42:42Z", "path": "java-checks/src/main/resources/org/sonar/l10n/java/rules/java/S5776_java.html", "diffHunk": "@@ -0,0 +1,46 @@\n+<p>When testing exception via <code>org.junit.rules.ExpectedException</code> any code after the raised exception will not be executed, resulting in", "originalCommit": "27672e7546e6812510230fc7a3551bc2db2f1715", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM3MjEzMQ==", "url": "https://github.com/SonarSource/sonar-java/pull/2924#discussion_r417372131", "bodyText": "This should be a list, it is due to a bug in rule-api, you have to remove the space before the * in the rule description. I already did the change, it will be fixed when you will regenerate the file.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-04-29T14:44:04Z", "path": "java-checks/src/main/resources/org/sonar/l10n/java/rules/java/S5776_java.html", "diffHunk": "@@ -0,0 +1,46 @@\n+<p>When testing exception via <code>org.junit.rules.ExpectedException</code> any code after the raised exception will not be executed, resulting in\n+unclear behavior of the test.</p>\n+<p> It has been deprecated in JUnit 4.13, and you should avoid it in any version.</p>\n+<p>You should consider using <a\n+href=\"https://github.com/junit-team/junit4/wiki/Exception-testing#using-assertthrows-method\">org.junit.Assert.assertThrows</a> instead.</p>\n+<p> Alternatively, you could use <a href=\"https://github.com/junit-team/junit4/wiki/Exception-testing#trycatch-idiom\">try-catch idiom</a> for JUnit\n+version &lt; 4.13 or if your project does not support lambdas.</p>\n+<h2>Noncompliant Code Example</h2>\n+<pre>\n+@Rule\n+public ExpectedException thrown = ExpectedException.none();\n+\n+@Test\n+public void test() throws IndexOutOfBoundsException {\n+  thrown.expect(IndexOutOfBoundsException.class); // Noncompliant\n+  Object o = get();\n+  // This test pass since execution will never get past this line.\n+  Assert.assertEquals(0, 1);\n+}\n+\n+private Object get() {\n+  throw new IndexOutOfBoundsException();\n+}\n+</pre>\n+<h2>Compliant Solution</h2>\n+<p> * For JUnit &gt;= 4.13, use <a\n+href=\"https://github.com/junit-team/junit4/wiki/Exception-testing#using-assertthrows-method\">org.junit.Assert.assertThrows</a>:</p>\n+<pre>\n+Assert.assertThrows(IndexOutOfBoundsException.class, () -&gt; get());\n+// This test correctly fails.\n+Assert.assertEquals(0, 1);\n+</pre>\n+<p> * For JUnit &lt; 4.13, use the <a href=\"https://github.com/junit-team/junit4/wiki/Exception-testing#trycatch-idiom\">try-catch idiom</a>:</p>", "originalCommit": "27672e7546e6812510230fc7a3551bc2db2f1715", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ba7efa0b4311bb1c676a473880bd6b63e8cac1a7", "url": "https://github.com/SonarSource/sonar-java/commit/ba7efa0b4311bb1c676a473880bd6b63e8cac1a7", "message": "Fix from review", "committedDate": "2020-04-30T14:29:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1NTE0MA==", "url": "https://github.com/SonarSource/sonar-java/pull/2924#discussion_r418455140", "bodyText": "As discussed, we should change the message to something actionable.\nConsider using org.junit.Assert.assertThrows instead for example.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-05-01T08:06:08Z", "path": "java-checks/src/main/java/org/sonar/java/checks/ExpectedExceptionCheck.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.sonar.check.Rule;\n+import org.sonar.java.checks.methods.AbstractMethodDetection;\n+import org.sonar.java.model.ExpressionUtils;\n+import org.sonar.plugins.java.api.JavaFileScannerContext.Location;\n+import org.sonar.plugins.java.api.semantic.MethodMatchers;\n+import org.sonar.plugins.java.api.tree.BaseTreeVisitor;\n+import org.sonar.plugins.java.api.tree.BlockTree;\n+import org.sonar.plugins.java.api.tree.ClassTree;\n+import org.sonar.plugins.java.api.tree.IdentifierTree;\n+import org.sonar.plugins.java.api.tree.LambdaExpressionTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+import org.sonar.plugins.java.api.tree.MethodTree;\n+\n+@Rule(key = \"S5776\")\n+public class ExpectedExceptionCheck extends AbstractMethodDetection {\n+\n+  private static final String MESSAGE = \"Do not test exceptions via ExpectedException before other assertions.\";", "originalCommit": "ba7efa0b4311bb1c676a473880bd6b63e8cac1a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7f0f208ede9055611d4e19867217af6e079a9d0a", "url": "https://github.com/SonarSource/sonar-java/commit/7f0f208ede9055611d4e19867217af6e079a9d0a", "message": "SONARJAVA-3353 Rule S5776: Exception testing via JUnit ExpectedException rule should not be mixed with other assertions", "committedDate": "2020-05-01T10:03:00Z", "type": "commit"}, {"oid": "87607909165291221e4229b8db98058a231e2747", "url": "https://github.com/SonarSource/sonar-java/commit/87607909165291221e4229b8db98058a231e2747", "message": "Fix from review", "committedDate": "2020-05-01T10:03:00Z", "type": "commit"}, {"oid": "dabea07e3ac2feb9c1cade764110e05fba3c66a6", "url": "https://github.com/SonarSource/sonar-java/commit/dabea07e3ac2feb9c1cade764110e05fba3c66a6", "message": "Fix from review", "committedDate": "2020-05-01T10:03:00Z", "type": "commit"}, {"oid": "dabea07e3ac2feb9c1cade764110e05fba3c66a6", "url": "https://github.com/SonarSource/sonar-java/commit/dabea07e3ac2feb9c1cade764110e05fba3c66a6", "message": "Fix from review", "committedDate": "2020-05-01T10:03:00Z", "type": "forcePushed"}]}