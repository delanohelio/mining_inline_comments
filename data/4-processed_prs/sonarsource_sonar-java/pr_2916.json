{"pr_number": 2916, "pr_title": "SONARJAVA-3351 Update S2391 to cover JUnit4/5", "pr_createdAt": "2020-04-23T09:00:25Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2916", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2MTYwMA==", "url": "https://github.com/SonarSource/sonar-java/pull/2916#discussion_r415861600", "bodyText": "JUnit 5 has 5 different test annotations.\nHere, we can use: org.sonar.java.checks.helpers.UnitTestUtils#hasJUnit5TestAnnotation(...)\nSo we can support the following test:\nclass JUnitMethodDeclarationCheck_JUnit5ParameterizedTest {\n  public void setUp() { } // Noncompliant\n  @ParameterizedTest\n  @ValueSource(strings = {\"a\", \"b\", \"c\"})\n  void test(String value) { }\n}", "author": "alban-auzeill", "createdAt": "2020-04-27T14:29:33Z", "path": "java-checks/src/main/java/org/sonar/java/checks/tests/JUnitMethodDeclarationCheck.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.tests;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang.StringUtils;\n+import org.sonar.check.Rule;\n+import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n+import org.sonar.plugins.java.api.semantic.Symbol;\n+import org.sonar.plugins.java.api.semantic.SymbolMetadata;\n+import org.sonar.plugins.java.api.tree.ClassTree;\n+import org.sonar.plugins.java.api.tree.MethodTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+\n+@Rule(key = \"S2391\")\n+public class JUnitMethodDeclarationCheck extends IssuableSubscriptionVisitor {\n+\n+  private static final String JUNIT_FRAMEWORK_TEST = \"junit.framework.Test\";\n+  private static final String JUNIT_SETUP = \"setUp\";\n+  private static final String JUNIT_TEARDOWN = \"tearDown\";\n+  private static final String JUNIT_SUITE = \"suite\";\n+  private static final int MAX_STRING_DISTANCE = 3;\n+\n+  @Override\n+  public List<Tree.Kind> nodesToVisit() {\n+    return Collections.singletonList(Tree.Kind.CLASS);\n+  }\n+\n+  @Override\n+  public void visitNode(Tree tree) {\n+    ClassTree classTree = (ClassTree) tree;\n+\n+    List<MethodTree> methods = classTree.members().stream()\n+      .filter(member -> member.is(Tree.Kind.METHOD))\n+      .map(MethodTree.class::cast)\n+      .collect(Collectors.toList());\n+\n+    int jUnitVersion = getJUnitVersion(classTree, methods);\n+    if (jUnitVersion > 0) {\n+      methods.forEach(methodTree -> checkJUnitMethod(methodTree, jUnitVersion));\n+    }\n+  }\n+\n+  private static int getJUnitVersion(ClassTree classTree, List<MethodTree> methods) {\n+    if (isJunit3Class(classTree)) {\n+      return 3;\n+    }\n+    boolean containsJUnit4Tests = false;\n+    for (MethodTree methodTree : methods) {\n+      SymbolMetadata metadata = methodTree.symbol().metadata();\n+      containsJUnit4Tests |= metadata.isAnnotatedWith(\"org.junit.Test\");\n+      if (metadata.isAnnotatedWith(\"org.junit.jupiter.api.Test\")) {", "originalCommit": "1ba030a6f7693d12e19bfbfe62437a73b42b7e8e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6b72bd5b3f374dd9fc57506982094b86788fcd70", "url": "https://github.com/SonarSource/sonar-java/commit/6b72bd5b3f374dd9fc57506982094b86788fcd70", "message": "Fix from review", "committedDate": "2020-04-29T16:35:26Z", "type": "forcePushed"}, {"oid": "36f1b056f7036fac9d14a7823629c49a40e1a0f4", "url": "https://github.com/SonarSource/sonar-java/commit/36f1b056f7036fac9d14a7823629c49a40e1a0f4", "message": "SONARJAVA-3351 Move test code in compiled sources and remove useless code\n\n* Since test code should compile, some code is not possible\n  * Overiddes can not reduce visibility\n  * Overiddes can not change return type\n* Drop useless code in rule as code can not compile in the situations it tries to catch", "committedDate": "2020-04-30T09:03:30Z", "type": "commit"}, {"oid": "823e7f4da68e7ff654413ed91a1a4e27d29d5001", "url": "https://github.com/SonarSource/sonar-java/commit/823e7f4da68e7ff654413ed91a1a4e27d29d5001", "message": "SONARJAVA-3351 Simplify rule and increase coverage", "committedDate": "2020-04-30T09:03:30Z", "type": "commit"}, {"oid": "860ddbd08446c29ed988382932e1da32e372eebe", "url": "https://github.com/SonarSource/sonar-java/commit/860ddbd08446c29ed988382932e1da32e372eebe", "message": "SONARJAVA-3351 Rework rule S2391 to also cover JUnit4/5", "committedDate": "2020-04-30T09:03:30Z", "type": "commit"}, {"oid": "704ef84c14123b1213f04aa94580debfc46ce008", "url": "https://github.com/SonarSource/sonar-java/commit/704ef84c14123b1213f04aa94580debfc46ce008", "message": "SONARJAVA-3351 Update description to cover JUnit4/5", "committedDate": "2020-04-30T09:03:30Z", "type": "commit"}, {"oid": "31ef527f966ba346b0176b52fa4456b63b30d47e", "url": "https://github.com/SonarSource/sonar-java/commit/31ef527f966ba346b0176b52fa4456b63b30d47e", "message": "Fix from review", "committedDate": "2020-04-30T09:03:30Z", "type": "commit"}, {"oid": "26e04250b1f4353987f40fae2a4392966a2d849e", "url": "https://github.com/SonarSource/sonar-java/commit/26e04250b1f4353987f40fae2a4392966a2d849e", "message": "Fix from 2nd review", "committedDate": "2020-04-30T09:03:31Z", "type": "commit"}, {"oid": "26e04250b1f4353987f40fae2a4392966a2d849e", "url": "https://github.com/SonarSource/sonar-java/commit/26e04250b1f4353987f40fae2a4392966a2d849e", "message": "Fix from 2nd review", "committedDate": "2020-04-30T09:03:31Z", "type": "forcePushed"}]}