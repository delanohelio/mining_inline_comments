{"pr_number": 3057, "pr_title": "[REGEX] Fix handling of escapes in unicode parser", "pr_createdAt": "2020-06-24T15:38:51Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3057", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4ODkxMA==", "url": "https://github.com/SonarSource/sonar-java/pull/3057#discussion_r444988910", "bodyText": "@sebastian-hungerecker-sonarsource I'm really not sure about this. Shouldn't I have 3 items here? I was expecting 2 backslashes.", "author": "m-g-sonar", "createdAt": "2020-06-24T15:39:47Z", "path": "java-frontend/src/test/java/org/sonar/java/regex/ast/SequenceTreeTest.java", "diffHunk": "@@ -34,4 +36,16 @@ void empty_string() {\n     assertKind(RegexTree.Kind.SEQUENCE, regex);\n   }\n \n+  @Test\n+  void escapedRegexEscape() {\n+    // actual regular expression catching unicode characters in strings literals: \"\\\\u+[a-fA-F0-9]{4}\"\n+    RegexTree regex = assertSuccessfulParse(\"\\\\\\\\\\\\\\\\u+\");\n+    assertKind(RegexTree.Kind.SEQUENCE, regex);\n+    List<RegexTree> items = ((SequenceTree) regex).getItems();\n+    assertThat(items).hasSize(2);\n+//    assertPlainCharacter('\\\\', items.get(0));", "originalCommit": "bee5039d513076c2a78873706c759668ac5a2603", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5Njc0NA==", "url": "https://github.com/SonarSource/sonar-java/pull/3057#discussion_r444996744", "bodyText": "Note that there are three levels of escaping here (because this is written as a String inside the tests instead of in its own .java file as the rule tests are): \"\\\\\\\\u+\" creates a string containing four backslashes. The JavaCharacter parser turns this into two backslashes. The RegexParser then sees those two backslashes, parses them as an escape sequence and produces a single PlainCharacterTree representing a backslash. So it's all good.", "author": "sebastian-hungerecker-sonarsource", "createdAt": "2020-06-24T15:51:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4ODkxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwMzAyNA==", "url": "https://github.com/SonarSource/sonar-java/pull/3057#discussion_r445003024", "bodyText": "It looks to me as if something like \\t\\u1234 isn't going to be recognized as a Unicode escape this way because the \\t sets isEscaping to true and the backslash from \\u sets it to false.", "author": "sebastian-hungerecker-sonarsource", "createdAt": "2020-06-24T16:00:25Z", "path": "java-frontend/src/main/java/org/sonar/java/regex/JavaUnicodeEscapeParser.java", "diffHunk": "@@ -62,7 +63,13 @@ public void moveNext() {\n     }\n     int startIndex = index;\n     char ch;\n-    if (index < sourceText.length() - 1 && sourceText.charAt(index) == '\\\\' && sourceText.charAt(index + 1) == 'u') {\n+    if (sourceText.charAt(index) == '\\\\') {\n+      isEscaping = !isEscaping;", "originalCommit": "bee5039d513076c2a78873706c759668ac5a2603", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3f08d270b8cc2e1da6a71308b71565a25decf3c7", "url": "https://github.com/SonarSource/sonar-java/commit/3f08d270b8cc2e1da6a71308b71565a25decf3c7", "message": "[REGEX] Fix handling of escapes in unicode parser", "committedDate": "2020-06-29T09:12:05Z", "type": "commit"}, {"oid": "3f08d270b8cc2e1da6a71308b71565a25decf3c7", "url": "https://github.com/SonarSource/sonar-java/commit/3f08d270b8cc2e1da6a71308b71565a25decf3c7", "message": "[REGEX] Fix handling of escapes in unicode parser", "committedDate": "2020-06-29T09:12:05Z", "type": "forcePushed"}]}