{"pr_number": 3348, "pr_title": "SONARJAVA-3578 FP in S2147 when the type of the Exception is needed inside the body", "pr_createdAt": "2020-12-11T14:11:07Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3348", "timeline": [{"oid": "1debee2c40803946a2b04a085da450800d9330cc", "url": "https://github.com/SonarSource/sonar-java/commit/1debee2c40803946a2b04a085da450800d9330cc", "message": "Move test files to compiled module for S2147", "committedDate": "2020-12-11T13:49:12Z", "type": "commit"}, {"oid": "e5dca1970c4889054f029291594d58d62f2a531e", "url": "https://github.com/SonarSource/sonar-java/commit/e5dca1970c4889054f029291594d58d62f2a531e", "message": "SONARJAVA-3578 FP in S2147 when the type of the Exception is needed inside the body", "committedDate": "2020-12-11T14:09:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1MDU3OA==", "url": "https://github.com/SonarSource/sonar-java/pull/3348#discussion_r542350578", "bodyText": "What about \"overwritten/overridden\"\nand\n\"to force the equivalence check result\"", "author": "margarita-nedzelska-sonarsource", "createdAt": "2020-12-14T12:37:10Z", "path": "java-frontend/src/main/java/org/sonar/java/model/SyntacticEquivalence.java", "diffHunk": "@@ -62,27 +65,27 @@ public static boolean areEquivalent(List<? extends Tree> leftList, List<? extend\n    * @return true, if nodes are syntactically equivalent\n    */\n   public static boolean areEquivalent(@Nullable Tree leftNode, @Nullable Tree rightNode) {\n-    return areEquivalent(leftNode, rightNode, (t1, t2) -> false);\n+    return areEquivalent(leftNode, rightNode, (t1, t2) -> false, true);\n   }\n \n   /**\n    * @return true, if nodes are syntactically equivalent\n-   * Use permissiveEquivalence to force the equivalence of two nodes\n+   * Use \"overwriteEquivalence\" to force the equivalence or not of two nodes. When it returns true, the method will return \"equivalenceValue\".", "originalCommit": "e5dca1970c4889054f029291594d58d62f2a531e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM2MTM2OQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3348#discussion_r542361369", "bodyText": "Could this be a part of general equivalence check? To my mind, we can't say that 2 blocks are equivalent, if they're look the same but referencing different methods (in general, not only for this rule)\nThis change might also influence other rules, so need to check.", "author": "margarita-nedzelska-sonarsource", "createdAt": "2020-12-14T12:55:37Z", "path": "java-checks/src/main/java/org/sonar/java/checks/CombineCatchCheck.java", "diffHunk": "@@ -55,6 +58,33 @@ public void visitNode(Tree tree) {\n     }\n   }\n \n+  private static boolean areNotSameMethodCalls(JavaTree leftNode, JavaTree rightNode) {", "originalCommit": "e5dca1970c4889054f029291594d58d62f2a531e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3992c9997ad1adea580b6d29065b32d0984bbd36", "url": "https://github.com/SonarSource/sonar-java/commit/3992c9997ad1adea580b6d29065b32d0984bbd36", "message": "Put \"areNotSameMethodCalls\" into SyntacticEquivalence class.", "committedDate": "2020-12-14T14:35:50Z", "type": "commit"}, {"oid": "2b41aaf2b3bd646fe9dc13600f15bc3046e27873", "url": "https://github.com/SonarSource/sonar-java/commit/2b41aaf2b3bd646fe9dc13600f15bc3046e27873", "message": "Re-order methods", "committedDate": "2020-12-14T14:39:19Z", "type": "commit"}, {"oid": "667c91a37b0edfba42af74e83893bc600d7752b8", "url": "https://github.com/SonarSource/sonar-java/commit/667c91a37b0edfba42af74e83893bc600d7752b8", "message": "Add unit tests", "committedDate": "2020-12-14T15:02:05Z", "type": "commit"}, {"oid": "87422990d6ae6e7a4ae59a19f4cab22f1f9b80c5", "url": "https://github.com/SonarSource/sonar-java/commit/87422990d6ae6e7a4ae59a19f4cab22f1f9b80c5", "message": "Remove javadoc for private methods", "committedDate": "2020-12-14T15:08:38Z", "type": "commit"}]}