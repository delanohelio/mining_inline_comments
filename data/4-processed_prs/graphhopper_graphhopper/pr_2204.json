{"pr_number": 2204, "pr_title": "StringEncodedValues", "pr_createdAt": "2020-12-08T16:08:25Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2204", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2NTY3OA==", "url": "https://github.com/graphhopper/graphhopper/pull/2204#discussion_r539265678", "bodyText": "Here also the new method set(property, fwd, bwd) would be required (see #2202)", "author": "karussell", "createdAt": "2020-12-09T12:28:37Z", "path": "core/src/main/java/com/graphhopper/util/EdgeIteratorState.java", "diffHunk": "@@ -171,13 +171,21 @@ public void setBool(boolean reverse, IntsRef ref, boolean value) {\n \n     EdgeIteratorState setReverse(DecimalEncodedValue property, double value);\n \n-    <T extends Enum> T get(EnumEncodedValue<T> property);\n+    <T extends Enum<?>> T get(EnumEncodedValue<T> property);\n \n-    <T extends Enum> EdgeIteratorState set(EnumEncodedValue<T> property, T value);\n+    <T extends Enum<?>> EdgeIteratorState set(EnumEncodedValue<T> property, T value);\n \n-    <T extends Enum> T getReverse(EnumEncodedValue<T> property);\n+    <T extends Enum<?>> T getReverse(EnumEncodedValue<T> property);\n \n-    <T extends Enum> EdgeIteratorState setReverse(EnumEncodedValue<T> property, T value);\n+    <T extends Enum<?>> EdgeIteratorState setReverse(EnumEncodedValue<T> property, T value);\n+    \n+    String get(StringEncodedValue property);\n+    \n+    EdgeIteratorState set(StringEncodedValue property, String value);\n+    \n+    String getReverse(StringEncodedValue property);\n+    \n+    EdgeIteratorState setReverse(StringEncodedValue property, String value);", "originalCommit": "3ecd60b27dff63321473cc738fac3e6d5d1b7a20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyNjc2Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/2204#discussion_r539326763", "bodyText": "Rebased on master", "author": "otbutz", "createdAt": "2020-12-09T13:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2NTY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2NzI0NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2204#discussion_r539267245", "bodyText": "Here we would need to avoid null values (due to JSON limitation). See DecimalDetails how we do this for infinity.", "author": "karussell", "createdAt": "2020-12-09T12:30:56Z", "path": "core/src/main/java/com/graphhopper/util/details/StringDetails.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *  Licensed to GraphHopper GmbH under one or more contributor\n+ *  license agreements. See the NOTICE file distributed with this work for\n+ *  additional information regarding copyright ownership.\n+ *\n+ *  GraphHopper GmbH licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except in\n+ *  compliance with the License. You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package com.graphhopper.util.details;\n+\n+import com.graphhopper.routing.ev.StringEncodedValue;\n+import com.graphhopper.util.EdgeIteratorState;\n+\n+public class StringDetails extends AbstractPathDetailsBuilder {\n+\n+    private final StringEncodedValue ev;\n+    private String currentVal = null;\n+\n+    public StringDetails(String name, StringEncodedValue ev) {\n+        super(name);\n+        this.ev = ev;\n+    }\n+\n+    @Override\n+    protected Object getCurrentValue() {\n+        return currentVal;", "originalCommit": "3ecd60b27dff63321473cc738fac3e6d5d1b7a20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI3NTE3Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/2204#discussion_r539275177", "bodyText": "Are you sure about that? I can't find a call to the DecimalDetails constructor which doesn't just pass null as the infinity value.", "author": "otbutz", "createdAt": "2020-12-09T12:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2NzI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4MjcxOQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2204#discussion_r539282719", "bodyText": "Ups. You are right. I misremembered the illegal chars. It is Infinity and NaN, not infinity and null :)", "author": "karussell", "createdAt": "2020-12-09T12:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2NzI0NQ=="}], "type": "inlineReview"}, {"oid": "e2c0671d83663f40401883a71ae5600cf3ac52ad", "url": "https://github.com/graphhopper/graphhopper/commit/e2c0671d83663f40401883a71ae5600cf3ac52ad", "message": "Fix generic parameter warnings", "committedDate": "2020-12-09T13:23:44Z", "type": "commit"}, {"oid": "7930bd059f75198068459580dac3bd98f9b37ffb", "url": "https://github.com/graphhopper/graphhopper/commit/7930bd059f75198068459580dac3bd98f9b37ffb", "message": "Add support for StringEncodedValues", "committedDate": "2020-12-09T13:42:14Z", "type": "commit"}, {"oid": "48267b3b87306959b95cb02187215f1b47c0d20e", "url": "https://github.com/graphhopper/graphhopper/commit/48267b3b87306959b95cb02187215f1b47c0d20e", "message": "Create PathDetails for StringEncodedValues", "committedDate": "2020-12-09T13:42:14Z", "type": "commit"}, {"oid": "48267b3b87306959b95cb02187215f1b47c0d20e", "url": "https://github.com/graphhopper/graphhopper/commit/48267b3b87306959b95cb02187215f1b47c0d20e", "message": "Create PathDetails for StringEncodedValues", "committedDate": "2020-12-09T13:42:14Z", "type": "forcePushed"}, {"oid": "332360a87857c7187f1c8bb96910ac198caf6fa3", "url": "https://github.com/graphhopper/graphhopper/commit/332360a87857c7187f1c8bb96910ac198caf6fa3", "message": "Collect new Strings as they are passed in via setString", "committedDate": "2020-12-17T13:56:58Z", "type": "forcePushed"}, {"oid": "05716bc260469f17edeb67f70bca832dc6e8df11", "url": "https://github.com/graphhopper/graphhopper/commit/05716bc260469f17edeb67f70bca832dc6e8df11", "message": "Collect new Strings as they are passed in via setString", "committedDate": "2020-12-17T13:58:29Z", "type": "forcePushed"}, {"oid": "b4b0197955d9612985ed582f949b2f012ec7d6ba", "url": "https://github.com/graphhopper/graphhopper/commit/b4b0197955d9612985ed582f949b2f012ec7d6ba", "message": "Collect new Strings as they are passed in via setString", "committedDate": "2020-12-17T14:30:27Z", "type": "commit"}, {"oid": "b4b0197955d9612985ed582f949b2f012ec7d6ba", "url": "https://github.com/graphhopper/graphhopper/commit/b4b0197955d9612985ed582f949b2f012ec7d6ba", "message": "Collect new Strings as they are passed in via setString", "committedDate": "2020-12-17T14:30:27Z", "type": "forcePushed"}]}