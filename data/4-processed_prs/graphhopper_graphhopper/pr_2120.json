{"pr_number": 2120, "pr_title": "Add binary heap with efficient update operation and use it for node-queue in CH preparation", "pr_createdAt": "2020-09-07T20:20:53Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2120", "timeline": [{"oid": "2d16c17686b70770c25b3460ec47343c9f2a3bfe", "url": "https://github.com/graphhopper/graphhopper/commit/2d16c17686b70770c25b3460ec47343c9f2a3bfe", "message": "Add binary heap with efficient update operation and use it for node-queue in CH preparation", "committedDate": "2020-09-07T09:56:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2MDE1OA==", "url": "https://github.com/graphhopper/graphhopper/pull/2120#discussion_r484560158", "bodyText": "I renamed this from IntDouble to IntFloat, because this is what it actually uses. Shall we simply rename it to (GH?)BinaryHeap? Also I removed the BinHeapWrapper interface, because it looked like this was only needed for testing and I achieved the same with a testing interface.", "author": "easbar", "createdAt": "2020-09-07T20:22:52Z", "path": "core/src/main/java/com/graphhopper/apache/commons/collections/IntFloatBinaryHeap.java", "diffHunk": "@@ -15,29 +15,26 @@\n  */\n package com.graphhopper.apache.commons.collections;\n \n-import com.graphhopper.coll.BinHeapWrapper;\n-\n import java.util.Arrays;\n import java.util.NoSuchElementException;\n \n /**\n  * This class is a partial copy of the class org.apache.commons.collections.BinaryHeap for\n- * just the min heap and primitive, sorted double keys and associated int elements.\n+ * just the min heap and primitive, sorted float keys and associated int elements.\n  * <p>\n  * The library can be found here: https://commons.apache.org/proper/commons-collections/\n  */\n-public class IntDoubleBinaryHeap implements BinHeapWrapper<Number, Integer> {\n-\n+public class IntFloatBinaryHeap {", "originalCommit": "2d16c17686b70770c25b3460ec47343c9f2a3bfe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "44ee952333e423a3847f95647d2477d3f304ad67", "url": "https://github.com/graphhopper/graphhopper/commit/44ee952333e423a3847f95647d2477d3f304ad67", "message": "Adjust tests", "committedDate": "2020-09-07T20:46:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk4MDEzNw==", "url": "https://github.com/graphhopper/graphhopper/pull/2120#discussion_r484980137", "bodyText": "@michaz  What do you think about this? The third alternative does not make so much sense because its just like the second but with an extra little detour. This probably now occurs because the shortcuts are slightly different. Or do you think I might have broken something? Defining what an 'acceptable' alternative is on such a small graph is probably rather hard and/or the heuristics aren't even meant to work for such small graphs?", "author": "easbar", "createdAt": "2020-09-08T14:48:37Z", "path": "core/src/test/java/com/graphhopper/routing/AlternativeRouteEdgeCHTest.java", "diffHunk": "@@ -141,9 +141,10 @@ public void testCalcOtherAlternatives() {\n         hints.putObject(\"alternative_route.max_paths\", 4);\n         AlternativeRouteEdgeCH altDijkstra = new AlternativeRouteEdgeCH(g.getRoutingCHGraph(), hints);\n         List<AlternativeRouteEdgeCH.AlternativeInfo> pathInfos = altDijkstra.calcAlternatives(10, 5);\n-        assertEquals(2, pathInfos.size());\n+        assertEquals(3, pathInfos.size());\n         assertEquals(IntArrayList.from(10, 4, 3, 6, 5), pathInfos.get(0).path.calcNodes());\n         assertEquals(IntArrayList.from(10, 4, 8, 7, 6, 5), pathInfos.get(1).path.calcNodes());\n+        assertEquals(IntArrayList.from(10, 4, 8, 7, 6, 3, 2, 9, 1, 5), pathInfos.get(2).path.calcNodes());", "originalCommit": "44ee952333e423a3847f95647d2477d3f304ad67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwNDgyMQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2120#discussion_r485004821", "bodyText": "Yeah, that\u2018s probably okay. Can\u2018t think of something you could have broken here.", "author": "michaz", "createdAt": "2020-09-08T15:21:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk4MDEzNw=="}], "type": "inlineReview"}, {"oid": "dfdf05122a648bf554ed6b25fa0e12aa348c6dee", "url": "https://github.com/graphhopper/graphhopper/commit/dfdf05122a648bf554ed6b25fa0e12aa348c6dee", "message": "Merge branch 'master' into min_heap", "committedDate": "2020-09-10T20:33:36Z", "type": "commit"}, {"oid": "5d2d4cd04e37563959801bb2722e3b6ddb4ade34", "url": "https://github.com/graphhopper/graphhopper/commit/5d2d4cd04e37563959801bb2722e3b6ddb4ade34", "message": "Merge branch 'master' into min_heap", "committedDate": "2020-09-11T06:46:35Z", "type": "commit"}]}