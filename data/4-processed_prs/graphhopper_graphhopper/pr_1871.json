{"pr_number": 1871, "pr_title": "AverageSpeedDetails: avoid exception for short edges", "pr_createdAt": "2020-01-27T21:15:08Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/1871", "timeline": [{"oid": "0ec1163ff57b401b6698ce2bc7d99cfae042a726", "url": "https://github.com/graphhopper/graphhopper/commit/0ec1163ff57b401b6698ce2bc7d99cfae042a726", "message": "AverageSpeedDetails: avoid exception for short edges, fixes #1848", "committedDate": "2020-01-27T21:10:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NjE5Ng==", "url": "https://github.com/graphhopper/graphhopper/pull/1871#discussion_r371486196", "bodyText": "... and avoid 0 distance (as it was noted: the distance would be stored as 0 since INT_DIST_FACTOR = 1000)", "author": "karussell", "createdAt": "2020-01-27T21:15:32Z", "path": "reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java", "diffHunk": "@@ -698,11 +698,11 @@ EdgeIteratorState addEdge(int fromIndex, int toIndex, PointList pointList, IntsR\n                     pillarNodes.add(lat, lon);\n             }\n         }\n-        if (towerNodeDistance < 0.0001) {\n+        if (towerNodeDistance < 0.001) {\n             // As investigation shows often two paths should have crossed via one identical point \n             // but end up in two very close points.\n             zeroCounter++;\n-            towerNodeDistance = 0.0001;\n+            towerNodeDistance = 0.001;", "originalCommit": "0ec1163ff57b401b6698ce2bc7d99cfae042a726", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY2MTQ2OA==", "url": "https://github.com/graphhopper/graphhopper/pull/1871#discussion_r371661468", "bodyText": "Would it make sense to define a constant for the minimum storeable distance? These kind of magic numbers always come back to hunt you.", "author": "otbutz", "createdAt": "2020-01-28T08:28:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NjE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0NzM4OA==", "url": "https://github.com/graphhopper/graphhopper/pull/1871#discussion_r371747388", "bodyText": "Yeah, I don't like it too :) . Still \"providing an API\" for this limitation is uglier IMO at least when this is only needed in one place. Will add a comment to the BaseGraph to remind us of this here when refactoring.", "author": "karussell", "createdAt": "2020-01-28T11:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NjE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0OTQyMA==", "url": "https://github.com/graphhopper/graphhopper/pull/1871#discussion_r371749420", "bodyText": "An API would be nice but i think that a simple MIN_STOREABLE_DISTANCE constant with a comment would be sufficient for readability.\nEdit: missed your changes", "author": "otbutz", "createdAt": "2020-01-28T11:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NjE5Ng=="}], "type": "inlineReview"}, {"oid": "0c3f6220a10ebada5604c4bed5344aa8ff7a3af3", "url": "https://github.com/graphhopper/graphhopper/commit/0c3f6220a10ebada5604c4bed5344aa8ff7a3af3", "message": "Merge branch 'master' into issue_1848_loc\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/util/details/AverageSpeedDetails.java", "committedDate": "2020-01-28T11:13:18Z", "type": "commit"}, {"oid": "fc20110d95093d520d160c21c250a515e7361574", "url": "https://github.com/graphhopper/graphhopper/commit/fc20110d95093d520d160c21c250a515e7361574", "message": "add comment for this limitation", "committedDate": "2020-01-28T11:29:44Z", "type": "commit"}]}