{"pr_number": 2023, "pr_title": "Use profiles in web UI / graphhopper maps", "pr_createdAt": "2020-04-29T21:44:34Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2023", "timeline": [{"oid": "7c91c4e8f2560cb13b3e1f29b53556185052c03f", "url": "https://github.com/graphhopper/graphhopper/commit/7c91c4e8f2560cb13b3e1f29b53556185052c03f", "message": "Use profiles in web ui", "committedDate": "2020-04-29T16:05:14Z", "type": "commit"}, {"oid": "a581c6614babaf9110c568f5f90494ccb4f3713d", "url": "https://github.com/graphhopper/graphhopper/commit/a581c6614babaf9110c568f5f90494ccb4f3713d", "message": "Fix integration for pt", "committedDate": "2020-04-29T21:01:39Z", "type": "commit"}, {"oid": "88c6589b097fbc5afb78d69b58bacd87115205a3", "url": "https://github.com/graphhopper/graphhopper/commit/88c6589b097fbc5afb78d69b58bacd87115205a3", "message": "Merge branch 'master' into profile_ui", "committedDate": "2020-04-29T21:17:38Z", "type": "commit"}, {"oid": "9c646c44a0c54df5532080e4bc66399a9de7e06b", "url": "https://github.com/graphhopper/graphhopper/commit/9c646c44a0c54df5532080e4bc66399a9de7e06b", "message": "Fix profile name display/translation", "committedDate": "2020-04-29T21:34:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMTg3Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417631872", "bodyText": "elevation is now treated like a global parameter (instead of being different for every vehicle). for one server this is always the case, but in case there were multiple servers some of which do not support elevation this could be a problem?", "author": "easbar", "createdAt": "2020-04-29T21:46:33Z", "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -118,34 +119,60 @@ GHRequest.prototype.getEarliestDepartureTime = function () {\n     return undefined;\n };\n \n-GHRequest.prototype.initVehicle = function (vehicle) {\n-    this.api_params.vehicle = vehicle;\n-    if(this.api_params.elevation !== false) {\n-        var featureSet = this.features[vehicle];\n-        this.api_params.elevation = featureSet && featureSet.elevation;\n-    }\n-    this.hasTCSupport();\n+GHRequest.prototype.setProfile = function (profileName) {\n+    this.api_params.profile = profileName;\n+};\n+\n+GHRequest.prototype.getProfile = function () {\n+    return this.api_params.profile;\n };\n \n-GHRequest.prototype.hasTCSupport = function() {\n-   if(this.api_params.turn_costs !== false) {\n-      var featureSet = this.features[this.api_params.vehicle];\n-      this.api_params.turn_costs = featureSet && featureSet.turn_costs;\n-   }\n+GHRequest.prototype.setElevation = function (elevation) {\n+    this.api_params.elevation = elevation;", "originalCommit": "9c646c44a0c54df5532080e4bc66399a9de7e06b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzOTMxMg==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418939312", "bodyText": "Yes, let's keep it this way for now.", "author": "karussell", "createdAt": "2020-05-02T10:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMTg3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417632181", "bodyText": "@karussell would you mind taking a look at this? I did not manage to fix this and not even sure if this needs to be fixed.", "author": "easbar", "createdAt": "2020-04-29T21:47:15Z", "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -118,34 +119,60 @@ GHRequest.prototype.getEarliestDepartureTime = function () {\n     return undefined;\n };\n \n-GHRequest.prototype.initVehicle = function (vehicle) {\n-    this.api_params.vehicle = vehicle;\n-    if(this.api_params.elevation !== false) {\n-        var featureSet = this.features[vehicle];\n-        this.api_params.elevation = featureSet && featureSet.elevation;\n-    }\n-    this.hasTCSupport();\n+GHRequest.prototype.setProfile = function (profileName) {\n+    this.api_params.profile = profileName;\n+};\n+\n+GHRequest.prototype.getProfile = function () {\n+    return this.api_params.profile;\n };\n \n-GHRequest.prototype.hasTCSupport = function() {\n-   if(this.api_params.turn_costs !== false) {\n-      var featureSet = this.features[this.api_params.vehicle];\n-      this.api_params.turn_costs = featureSet && featureSet.turn_costs;\n-   }\n+GHRequest.prototype.setElevation = function (elevation) {\n+    this.api_params.elevation = elevation;\n };\n \n GHRequest.prototype.hasElevation = function () {\n     return this.api_params.elevation === true;\n };\n \n GHRequest.prototype.getVehicle = function () {\n-    return this.api_params.vehicle;\n+    var profileName = this.api_params.profile;\n+    var profile = this.profiles.find(function(p) { return p.profile_name === profileName; });\n+    if (!profile)\n+        return \"\";\n+    else\n+        return profile.vehicle;\n };\n \n GHRequest.prototype.isPublicTransit = function () {\n-    return this.getVehicle() === \"pt\";\n+    // legacy support: we might have set vehicle=pt instead of pt\n+    return this.getProfile() === \"pt\" || this.getVehicle() === \"pt\";;\n };\n \n+GHRequest.prototype.removeProfileParameterIfLegacyRequest = function() {\n+     // we still allow using legacy parameters to support older urls pasted from somewhere, but when they are used\n+     // we may not add the profile parameter to the url\n+     if (\n+            this.api_params[\"vehicle\"] ||\n+            this.api_params[\"weighting\"] ||\n+            this.api_params[\"turn_costs\"] ||\n+            this.api_params[\"edge_based\"]\n+        ) {\n+            delete this.api_params.profile;\n+        }\n+     // todonow: pasting a legacy url already works the only thing that is ugly is that when we do a normal request\n+     // (including profile) then add something like vehicle=car the the profile parameter appears still in the url field\n+     // (even though it will not be sent to the server). when we drag a marker afterwards it finally disappears, how can\n+     // we do this already here?", "originalCommit": "9c646c44a0c54df5532080e4bc66399a9de7e06b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5MTAzMg==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418991032", "bodyText": "URL rewriting is only done after the request. But I'm not exactly sure what you mean here. And shouldn't we remove the vehicle parameter from the URL if vehicle and profile parameter exist in the URL?", "author": "karussell", "createdAt": "2020-05-02T18:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI3NjQ2MQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419276461", "bodyText": "the problem is this:\n\nuse the UI (profile will be in the address line)\nmanually add something like vehicle=car and press enter\nthe profile will not be sent to the server (only the vehicle), but the address line is not updated accordingly\nmove a marker. same as 3) but this time the profile is removed from the address line\n\n\nAnd shouldn't we remove the vehicle parameter from the URL if vehicle and profile parameter exist in the URL?\n\nYes that sounds right. So we only support 'real' legacy requests (without profile) and the (now) standard (including (only) a profile). I probably tried this but ran into similar problems as above?", "author": "easbar", "createdAt": "2020-05-04T08:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwOTM4OA==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419309388", "bodyText": "manually add something like vehicle=car and press enter\n\nAh, ok. Then this is not a legacy use case and either the profile parameter needs to be removed or instead of the vehicle the profile needs to be changed.\n\nSo we only support 'real' legacy requests (without profile) and the (now) standard (including (only) a profile)\n\nYes\n\nI probably tried this but ran into similar problems as above?\n\nUnfortunately I was not able to reproduce this mixture (yet) using a \"purely\" legacy URL.", "author": "karussell", "createdAt": "2020-05-04T09:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxMTQ0Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419311443", "bodyText": "Ah, ok. Then this is not a legacy use case and either the profile parameter needs to be removed or instead of the vehicle the profile needs to be changed.\n\nYeah its really a very minor issue / very exotic '(mis)-use-case'. I was just annoyed by the fact that moving the marker does something that pressing enter does not do. Even when doing this (add vehicle to a profile url manually) the UI keeps working (using the vehicle), it just does not remove the profile from the url (and yes maybe it would better remove the vehicle in this case but this is probably the same problem).", "author": "easbar", "createdAt": "2020-05-04T09:25:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1OTM0NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r420059345", "bodyText": "Shall we do anything about this?", "author": "easbar", "createdAt": "2020-05-05T12:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3Njc1Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r420076752", "bodyText": "I tried to deploy this code to production and had a problem that although only profile=car was specified in the URL still the weighting was added in the request (resulting in an error). It could be that this is some internal problem as the /info endpoint is not yet updated. Will need to investigate this further but we can also merge here and fix later.", "author": "karussell", "createdAt": "2020-05-05T12:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417632409", "bodyText": "this can be used to recognize that a request was sent using this client", "author": "easbar", "createdAt": "2020-04-29T21:47:46Z", "path": "web/src/main/resources/assets/js/graphhopper/GHRequest.js", "diffHunk": "@@ -232,6 +259,10 @@ GHRequest.prototype.doRequest = function (url, callback) {\n     $.ajax({\n         timeout: 30000,\n         url: url,\n+        beforeSend: function(request) {\n+            // todonow: maybe rename\n+            request.setRequestHeader(\"gh-client\", \"web-ui\")", "originalCommit": "9c646c44a0c54df5532080e4bc66399a9de7e06b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzOTUwMw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418939503", "bodyText": "Good idea. Is there a way we could include some version? And isn't it usually called \"User-Agent\" ... ah, no, this will collide with browser version etc.", "author": "karussell", "createdAt": "2020-05-02T10:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI3Nzk5NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419277995", "bodyText": "Is there a way we could include some version?\n\nSure we could add another header with a version. Would be nice to get this via maven or even git commit hash or tag during from the build process? Or simply hard-code it ;)\n\nAnd isn't it usually called \"User-Agent\"\n\nYeah I think user-agent is used for browser version, using a custom / non-standard header for what we want to achieve here seems reasonable to me", "author": "easbar", "createdAt": "2020-05-04T08:20:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4NTY1OA==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419285658", "bodyText": "Would be nice to get this via maven or even git commit hash or tag during from the build process?\n\nAh, yes. This sounds doable but for a later issue ;)", "author": "karussell", "createdAt": "2020-05-04T08:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4NzAwNg==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419287006", "bodyText": "I would not recommend overwriting the User-Agent.\nIIRC a lot of browsers don't allow that, also some CDNs/Firewalls might check that string and if it looks tempered they might assume something funny is going on and potentially block the request.", "author": "boldtrn", "createdAt": "2020-05-04T08:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI5NTUzNg==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419295536", "bodyText": "Ah, yes. This sounds doable but for a later issue ;)\n\nWe could still hard-code it for now, that would be more information than not sending any version (even though it might be outdated sometimes) :)", "author": "easbar", "createdAt": "2020-05-04T08:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI5ODgxMg==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419298812", "bodyText": "You could take a look at the buildnumber maven plugin: https://www.mojohaus.org/buildnumber-maven-plugin/usage.html", "author": "otbutz", "createdAt": "2020-05-04T09:00:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjQwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMjU1Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417632553", "bodyText": "this can probably be done server-side (using the header telling us the request comes from the client)", "author": "easbar", "createdAt": "2020-04-29T21:48:07Z", "path": "web/src/main/resources/assets/js/main-template.js", "diffHunk": "@@ -34,11 +34,6 @@ if (ghenv.environment === 'development') {\n     var autocomplete = AutoComplete.prototype.createStub();\n } else {\n     var autocomplete = new AutoComplete(ghenv.geocoding.host, ghenv.geocoding.api_key);\n-    // overwrite default for production\n-    GHRequest.prototype.hasTCSupport = function() {\n-       if(this.api_params.turn_costs !== false)\n-          this.api_params.turn_costs = new Set([\"car\", \"truck\", \"small_truck\", \"scooter\"]).has(this.api_params.vehicle);\n-    };", "originalCommit": "9c646c44a0c54df5532080e4bc66399a9de7e06b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMzUxOA==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r417633518", "bodyText": "Any better idea? For profile names like my_special_super_car we will get something like \"web.my_special_super_car (my_special_super_car)\"...", "author": "easbar", "createdAt": "2020-04-29T21:50:07Z", "path": "web/src/main/resources/assets/js/main-template.js", "diffHunk": "@@ -239,6 +252,17 @@ $(document).ready(function (e) {\n     checkInput();\n });\n \n+function profileDisplayName(profileName) {\n+   return translate.tr(profileName) + ' (' + profileName + ')'", "originalCommit": "9c646c44a0c54df5532080e4bc66399a9de7e06b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzOTI1Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418939257", "bodyText": "I would remove the info in brackets or why would you add it?", "author": "karussell", "createdAt": "2020-05-02T10:00:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMzUxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI3OTMzNw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419279337", "bodyText": "Initially I was concerned that some non-standard custom names cannot be translated, but you are right probably just one of the two is enough. If we remove the info in brackets we would get something like web.my_special_car for non-standard names, and something like Auto for standard-names like car. This could be slightly improved by removing the web. for non-standard names. Is this what you mean?", "author": "easbar", "createdAt": "2020-05-04T08:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMzUxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4NTkyMw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419285923", "bodyText": "Yes", "author": "karussell", "createdAt": "2020-05-04T08:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMzUxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMDc5Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419300797", "bodyText": "Cool yes this is better, done.", "author": "easbar", "createdAt": "2020-05-04T09:04:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMzUxOA=="}], "type": "inlineReview"}, {"oid": "ee0767982b8ebd9be4502e9d0829743becc45d0a", "url": "https://github.com/graphhopper/graphhopper/commit/ee0767982b8ebd9be4502e9d0829743becc45d0a", "message": "Extract createRouteCallBack as in master", "committedDate": "2020-04-30T09:22:36Z", "type": "commit"}, {"oid": "5020b7e2e89d9fb4f3b2af7630bbdaf0cb168819", "url": "https://github.com/graphhopper/graphhopper/commit/5020b7e2e89d9fb4f3b2af7630bbdaf0cb168819", "message": "Merge branch 'master' into profile_ui\n\n# Conflicts:\n#\tweb/src/main/resources/assets/js/main-template.js", "committedDate": "2020-04-30T09:24:16Z", "type": "commit"}, {"oid": "2d7853ae75804155d64c5a189c499be280bc9fcc", "url": "https://github.com/graphhopper/graphhopper/commit/2d7853ae75804155d64c5a189c499be280bc9fcc", "message": "merged master", "committedDate": "2020-05-02T19:45:49Z", "type": "commit"}, {"oid": "74b8c396ab6f32decbf6e7debc5fdaefeaf66440", "url": "https://github.com/graphhopper/graphhopper/commit/74b8c396ab6f32decbf6e7debc5fdaefeaf66440", "message": "pick profile from api_params, no need to put it into the text box", "committedDate": "2020-05-02T19:56:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NzMzMw==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r418997333", "bodyText": "this could be a bit shorter ;)\nreturn \"pt\".equals(maybeProfile)\nAnd should we also remove the profile param in the filter method above? (replaceQueryParam(\"profile\"))", "author": "karussell", "createdAt": "2020-05-02T19:23:19Z", "path": "web-bundle/src/main/java/com/graphhopper/http/PtRedirectFilter.java", "diffHunk": "@@ -40,6 +40,13 @@ public void filter(ContainerRequestContext requestContext) {\n \n     private boolean shouldRedirect(ContainerRequestContext requestContext) {\n         String maybeVehicle = requestContext.getUriInfo().getQueryParameters().getFirst(\"vehicle\");\n-        return maybeVehicle != null && maybeVehicle.equals(\"pt\");\n+        if (maybeVehicle != null && maybeVehicle.equals(\"pt\")) {\n+            return true;\n+        }\n+        String maybeProfile = requestContext.getUriInfo().getQueryParameters().getFirst(\"profile\");\n+        if (maybeProfile != null && maybeProfile.equals(\"pt\")) {\n+            return true;\n+        }\n+        return false;", "originalCommit": "5020b7e2e89d9fb4f3b2af7630bbdaf0cb168819", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4MDI1Ng==", "url": "https://github.com/graphhopper/graphhopper/pull/2023#discussion_r419280256", "bodyText": "this could be a bit shorter ;) return \"pt\".equals(maybeProfile)\n\nAh yes I was trying to keep the symmetry :)\n\nAnd should we also remove the profile param in the filter method above?\n\nGood idea, yes, I think so.", "author": "easbar", "createdAt": "2020-05-04T08:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NzMzMw=="}], "type": "inlineReview"}, {"oid": "860f2d2f767f5fe6b430e7083eb5926872aaeb5b", "url": "https://github.com/graphhopper/graphhopper/commit/860f2d2f767f5fe6b430e7083eb5926872aaeb5b", "message": "Remove profile after redirecting PT requests", "committedDate": "2020-05-04T08:31:33Z", "type": "commit"}, {"oid": "7ff09783a8ad6e98e5faa453f5219acd41382215", "url": "https://github.com/graphhopper/graphhopper/commit/7ff09783a8ad6e98e5faa453f5219acd41382215", "message": "Display profile name *or* translated name", "committedDate": "2020-05-04T09:02:45Z", "type": "commit"}, {"oid": "3744e786032424554b0f5b243a8c757ea3e83eeb", "url": "https://github.com/graphhopper/graphhopper/commit/3744e786032424554b0f5b243a8c757ea3e83eeb", "message": "Add (hard-coded) client version for now", "committedDate": "2020-05-04T09:02:57Z", "type": "commit"}, {"oid": "a79f40bb77e4ce3da63ebec322c6743ffdf89eb0", "url": "https://github.com/graphhopper/graphhopper/commit/a79f40bb77e4ce3da63ebec322c6743ffdf89eb0", "message": "Remove todos", "committedDate": "2020-05-05T13:03:05Z", "type": "commit"}, {"oid": "e85e9557da44c619128685fdf39d3b7292f09156", "url": "https://github.com/graphhopper/graphhopper/commit/e85e9557da44c619128685fdf39d3b7292f09156", "message": "Merge branch 'master' into profile_ui", "committedDate": "2020-05-05T13:03:15Z", "type": "commit"}]}