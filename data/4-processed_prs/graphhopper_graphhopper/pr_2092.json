{"pr_number": 2092, "pr_title": "Work around slow PriorityQueue.remove", "pr_createdAt": "2020-07-22T16:23:22Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2092", "timeline": [{"oid": "bf75a79320c689ecd495d22e9f1bee5847d66a01", "url": "https://github.com/graphhopper/graphhopper/commit/bf75a79320c689ecd495d22e9f1bee5847d66a01", "message": "Work around slow PriorityQueue.remove", "committedDate": "2020-07-22T16:22:39Z", "type": "commit"}, {"oid": "50617c75adc36af379ecc3e03baf734fb2191204", "url": "https://github.com/graphhopper/graphhopper/commit/50617c75adc36af379ecc3e03baf734fb2191204", "message": "Finish comment", "committedDate": "2020-07-22T16:26:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0MDc4MQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2092#discussion_r459240781", "bodyText": "Is this used?", "author": "otbutz", "createdAt": "2020-07-23T06:36:28Z", "path": "isochrone/src/main/java/com/graphhopper/isochrone/algorithm/ShortestPathTree.java", "diffHunk": "@@ -78,6 +86,7 @@ public String toString() {\n         }\n     }\n \n+    private IntHashSet queueDeleted = new IntHashSet();", "originalCommit": "50617c75adc36af379ecc3e03baf734fb2191204", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMzOTgzNQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2092#discussion_r459339835", "bodyText": "No.", "author": "michaz", "createdAt": "2020-07-23T09:58:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0MDc4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mzc2Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/2092#discussion_r459253762", "bodyText": "while (!queueByZ.isEmpty()) {\n    IsoLabel head = queueByZ.poll();\n    if (!head.deleted) {\n        return getExploreValue(head) >= limit;\n    }\n}\nreturn true;\nDepending on the size of the underlying array it would probably be faster to sort it once and iterate over the array.", "author": "otbutz", "createdAt": "2020-07-23T07:10:33Z", "path": "isochrone/src/main/java/com/graphhopper/isochrone/algorithm/ShortestPathTree.java", "diffHunk": "@@ -187,7 +194,11 @@ private double getExploreValue(IsoLabel label) {\n \n     @Override\n     protected boolean finished() {\n-        return queueByZ.isEmpty() || getExploreValue(queueByZ.peek()) >= limit;\n+        while (queueByZ.peek() != null && queueByZ.peek().deleted)\n+            queueByZ.poll();\n+        if (queueByZ.peek() == null)\n+            return true;\n+        return getExploreValue(queueByZ.peek()) >= limit;", "originalCommit": "50617c75adc36af379ecc3e03baf734fb2191204", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxODc5NA==", "url": "https://github.com/graphhopper/graphhopper/pull/2092#discussion_r459318794", "bodyText": "The Java PriorityQueue is an extreme fast implementation (also backed on an array) and so it is incredible hard to beat it even if alternatives are theoretically faster.", "author": "karussell", "createdAt": "2020-07-23T09:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mzc2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxNjA0Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/2092#discussion_r459416043", "bodyText": "It would also allow to use a more finegrained Comparator and sort by deleted+z", "author": "otbutz", "createdAt": "2020-07-23T12:37:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mzc2Mg=="}], "type": "inlineReview"}, {"oid": "92a047cb1a848ac2869140563f8b4c9f3d5abca7", "url": "https://github.com/graphhopper/graphhopper/commit/92a047cb1a848ac2869140563f8b4c9f3d5abca7", "message": "Remove unused code", "committedDate": "2020-07-23T08:49:32Z", "type": "commit"}, {"oid": "9ba3a83f7db230f3363a8b25c238fa3e7a3999d1", "url": "https://github.com/graphhopper/graphhopper/commit/9ba3a83f7db230f3363a8b25c238fa3e7a3999d1", "message": "Typo", "committedDate": "2020-07-23T09:09:33Z", "type": "commit"}, {"oid": "2536e310ad001b6a90cd15e843d774ab265efdfd", "url": "https://github.com/graphhopper/graphhopper/commit/2536e310ad001b6a90cd15e843d774ab265efdfd", "message": "Test U-turns with time penalty", "committedDate": "2020-07-23T11:02:12Z", "type": "commit"}]}