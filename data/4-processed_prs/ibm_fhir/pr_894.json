{"pr_number": 894, "pr_title": "issue #838 Add more metrics for bulkImport java Batch Job", "pr_createdAt": "2020-04-03T16:29:05Z", "pr_url": "https://github.com/IBM/FHIR/pull/894", "timeline": [{"oid": "fe119832c9f3a582d426088f5902736276284fc6", "url": "https://github.com/IBM/FHIR/commit/fe119832c9f3a582d426088f5902736276284fc6", "message": "issue #838 Add more metrics for bulkImport java Batch Job\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-03T16:24:00Z", "type": "commit"}, {"oid": "dc16bae641d7da58ce6549b1e5c79639b12f6c4a", "url": "https://github.com/IBM/FHIR/commit/dc16bae641d7da58ce6549b1e5c79639b12f6c4a", "message": "issue #838 fix the incorrect first in-fly import rate\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-03T18:13:33Z", "type": "commit"}, {"oid": "b95b5c23bd99ae9590444188979eb5b5b358447c", "url": "https://github.com/IBM/FHIR/commit/b95b5c23bd99ae9590444188979eb5b5b358447c", "message": "issue #838 reduce the number of System.CurrentMillis calls\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-03T23:51:53Z", "type": "commit"}, {"oid": "c407a3f57cf3160ffa6cf26f5e9b291ea28502ff", "url": "https://github.com/IBM/FHIR/commit/c407a3f57cf3160ffa6cf26f5e9b291ea28502ff", "message": "Merge pull request #898 from IBM/issue-838\n\nIssue 838", "committedDate": "2020-04-06T16:34:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxMDE5Nw==", "url": "https://github.com/IBM/FHIR/pull/894#discussion_r404310197", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static long getLocallFileSize(String filePath) throws Exception {\n          \n          \n            \n                public static long getLocalFileSize(String filePath) throws Exception {", "author": "lmsurpre", "createdAt": "2020-04-06T18:44:27Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/BulkDataUtils.java", "diffHunk": "@@ -288,6 +297,11 @@ public static int readFhirResourceFromLocalFile(String filePath, int numOfLinesT\n     }\n \n \n+    public static long getLocallFileSize(String filePath) throws Exception {", "originalCommit": "c407a3f57cf3160ffa6cf26f5e9b291ea28502ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0MzM0NA==", "url": "https://github.com/IBM/FHIR/pull/894#discussion_r404343344", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-04-06T19:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxMDE5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxMzc4Mg==", "url": "https://github.com/IBM/FHIR/pull/894#discussion_r404313782", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new Exception (\"Doesn't support data source storage type!\");\n          \n          \n            \n                            throw new Exception(\"Doesn't support data source storage type!\");", "author": "lmsurpre", "createdAt": "2020-04-06T18:50:35Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ChunkReader.java", "diffHunk": "@@ -167,12 +152,46 @@ public Object readItem() throws Exception {\n \n     @Override\n     public void open(Serializable checkpoint) throws Exception {\n+        if (BulkImportDataSourceStorageType.from(dataSourceStorageType).equals(BulkImportDataSourceStorageType.AWSS3)\n+                || BulkImportDataSourceStorageType.from(dataSourceStorageType).equals(BulkImportDataSourceStorageType.IBMCOS)) {\n+            cosClient = BulkDataUtils.getCosClient(cosCredentialIbm, cosApiKeyProperty, cosSrvinstId, cosEndpintUrl, cosLocation);\n+            if (cosClient == null) {\n+                logger.warning(\"open: Failed to get CosClient!\");\n+                throw new Exception(\"Failed to get CosClient!!\");\n+            } else {\n+                logger.finer(\"open: Got CosClient successfully!\");\n+            }\n+        }\n+\n         if (checkpoint != null) {\n             ImportCheckPointData checkPointData = (ImportCheckPointData) checkpoint;\n             importPartitionWorkitem = checkPointData.getImportPartitionWorkitem();\n             numOfLinesToSkip = checkPointData.getNumOfProcessedResources();\n+            checkPointData.setInFlyRateBeginMilliSeconds(System.currentTimeMillis());\n             stepCtx.setTransientUserData(ImportTransientUserData.fromImportCheckPointData(checkPointData));\n+        } else {\n+            ImportTransientUserData chunkData = new ImportTransientUserData(importPartitionWorkitem, numOfLinesToSkip, importPartitionResourceType);\n+            long importFileSize = 0;\n+            switch (BulkImportDataSourceStorageType.from(dataSourceStorageType)) {\n+            case HTTPS:\n+                importFileSize = BulkDataUtils.getHttpsFileSize(importPartitionWorkitem);\n+                break;\n+            case FILE:\n+                importFileSize = BulkDataUtils.getLocallFileSize(importPartitionWorkitem);\n+                break;\n+            case AWSS3:\n+            case IBMCOS:\n+                importFileSize = BulkDataUtils.getCosFileSize(cosClient, cosBucketName, importPartitionWorkitem);\n+                break;\n+            default:\n+                throw new Exception (\"Doesn't support data source storage type!\");", "originalCommit": "c407a3f57cf3160ffa6cf26f5e9b291ea28502ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNTAwNg==", "url": "https://github.com/IBM/FHIR/pull/894#discussion_r404315006", "bodyText": "I generally\n\nuse IllegalStateException in default switch statements that come from enums; and\nprint the name or value of the enum value that caused it in the message\n\nHowever, neither one very important given that we should never get here unless someone has added a new value to the enum without updating the places its used from.", "author": "lmsurpre", "createdAt": "2020-04-06T18:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxMzc4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0MzQ2Mg==", "url": "https://github.com/IBM/FHIR/pull/894#discussion_r404343462", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-04-06T19:43:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxMzc4Mg=="}], "type": "inlineReview"}, {"oid": "4104cd4da5dd91faa8f4d6ba6f4d15f15f05660b", "url": "https://github.com/IBM/FHIR/commit/4104cd4da5dd91faa8f4d6ba6f4d15f15f05660b", "message": "issue #838 minor updates per review comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-06T19:43:26Z", "type": "commit"}]}