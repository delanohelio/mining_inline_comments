{"pr_number": 1001, "pr_title": "Issue 929", "pr_createdAt": "2020-04-29T19:52:05Z", "pr_url": "https://github.com/IBM/FHIR/pull/1001", "timeline": [{"oid": "9779d35104a235d17e65d78ea4b9ff1a7e481d64", "url": "https://github.com/IBM/FHIR/commit/9779d35104a235d17e65d78ea4b9ff1a7e481d64", "message": "Merge pull request #981 from IBM/issue-779\n\nIssue 779", "committedDate": "2020-04-24T13:44:08Z", "type": "commit"}, {"oid": "e893e964d5f2d10b53dec48f3db898c950aefb69", "url": "https://github.com/IBM/FHIR/commit/e893e964d5f2d10b53dec48f3db898c950aefb69", "message": "issue #929 DB2 SP changes for consistent error msg of invalid tenant\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-28T13:41:17Z", "type": "commit"}, {"oid": "e8166328d705d83bfffae4c2d5d65ea49a267150", "url": "https://github.com/IBM/FHIR/commit/e8166328d705d83bfffae4c2d5d65ea49a267150", "message": "Merge pull request #997 from IBM/issue-929\n\nIssue 929", "committedDate": "2020-04-28T16:07:33Z", "type": "commit"}, {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3", "url": "https://github.com/IBM/FHIR/commit/70861600a29f6ec171eccffc922a652ea0ed15b3", "message": "Bad error message in the case of an invalid tenant key #929\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-29T19:50:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDIxNA==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417574214", "bodyText": "only change copyright year?", "author": "albertwang-ibm", "createdAt": "2020-04-29T19:57:25Z", "path": "fhir-persistence-schema/src/main/resources/add_any_resource.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016, 2019\n+-- (C) Copyright IBM Corp. 2016, 2020\n --\n -- SPDX-License-Identifier: Apache-2.0", "originalCommit": "70861600a29f6ec171eccffc922a652ea0ed15b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzIzMw==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577233", "bodyText": "Yes, as I started with your branch, I think it's an artifact.", "author": "prb112", "createdAt": "2020-04-29T20:02:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDU2OQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417574569", "bodyText": "only update copyright year?", "author": "albertwang-ibm", "createdAt": "2020-04-29T19:58:02Z", "path": "fhir-persistence-schema/src/main/resources/add_parameter_name.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016\n+-- (C) Copyright IBM Corp. 2016, 2020\n --\n -- SPDX-License-Identifier: Apache-2.0", "originalCommit": "70861600a29f6ec171eccffc922a652ea0ed15b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzI2OA==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577268", "bodyText": "Yes, as I started with your branch, I think it's an artifact.", "author": "prb112", "createdAt": "2020-04-29T20:02:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDU2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTQzMA==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417575430", "bodyText": "I'm wondering, is this store procedure really used?", "author": "albertwang-ibm", "createdAt": "2020-04-29T19:59:30Z", "path": "fhir-persistence-schema/src/main/resources/add_resource_template.sql", "diffHunk": "@@ -58,11 +58,6 @@ BEGIN\n   SELECT t.tenant_id INTO {{SCHEMA_NAME}}.session_tenant\n     FROM {{SCHEMA_NAME}}.tenants t\n    WHERE t.tenant_name = p_tenant_data_id;\n-  \n-  -- Stop right here if we don't have a valid tenant\n-  IF ({{SCHEMA_NAME}}.session_tenant IS NULL) THEN\n-  \tSIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-  END IF;", "originalCommit": "70861600a29f6ec171eccffc922a652ea0ed15b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzY5MQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577691", "bodyText": "I think that was the original and replaced by add_any_resource\n2020-04-29 15:05:36.966 00000001    INFO   com.ibm.fhir.schema.app.Main Opening connection to: jdbc:db2://localhost:50000/FHIRDB\n2020-04-29 15:05:37.585 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIR_ADMIN.SET_TENANT\n2020-04-29 15:05:37.648 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_CODE_SYSTEM\n2020-04-29 15:05:37.722 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_PARAMETER_NAME\n2020-04-29 15:05:37.752 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_RESOURCE_TYPE\n2020-04-29 15:05:37.781 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_ANY_RESOURCE", "author": "prb112", "createdAt": "2020-04-29T20:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg4NTkwOQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417885909", "bodyText": "I'm going to unresolve, confirm and remove", "author": "prb112", "createdAt": "2020-04-30T09:42:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTc1NQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417575755", "bodyText": "only copyright change?", "author": "albertwang-ibm", "createdAt": "2020-04-29T20:00:01Z", "path": "fhir-persistence-schema/src/main/resources/add_resource_type.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016\n+-- (C) Copyright IBM Corp. 2016, 2020", "originalCommit": "70861600a29f6ec171eccffc922a652ea0ed15b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzgyNw==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577827", "bodyText": "right, as I started with the existing branch", "author": "prb112", "createdAt": "2020-04-29T20:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTc1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTg3OQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417619879", "bodyText": "sorry, what does SELECT -1 INTO v_not_found do?", "author": "lmsurpre", "createdAt": "2020-04-29T21:22:02Z", "path": "fhir-persistence-schema/src/main/resources/set_tenant.sql", "diffHunk": "@@ -20,26 +20,39 @@ BEGIN\n       -- preventing accidental exposure of tenant-specific data\n       SET fhir_admin.sv_tenant_id = NULL;\n   ELSE\n-\t  -- set the sv_tenant_id session variable for the \n-\t  -- given tenant_name, but only if the correct key\n-\t  -- is provided\n-\t  SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n-\t    FROM fhir_admin.tenants t\n-\t   WHERE t.tenant_name = p_tenant_name\n-\t     AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n-\t     AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n-\t\n-\t  IF v_not_found = 1\n-\t  THEN\n-\t    -- applications should not be passing invalid keys, so treat this as\n-\t    -- an exception\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-\t  ELSEIF v_tenant_status = 'FROZEN'\n-\t  THEN\n-\t    -- the tenant_key is valid, but the status of tenant has been set to frozen\n-\t    -- which means the tenant data should not be accessible\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: TENANT IS FROZEN';\n-\t  END IF;\n-  END IF;\n+      -- set the sv_tenant_id session variable for the \n+      -- given tenant_name, but only if the correct key\n+      -- is provided\n+      SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n+      FROM fhir_admin.tenants t\n+      WHERE t.tenant_name = p_tenant_name\n+            AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n+            AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n+\n+      IF v_not_found = 1\n+      THEN\n+        -- If v_not_found, we check only one of the conditions above to see if it is valid\n+        -- applications should not be passing invalid keys, so treat this as\n+        -- an exception\n \n-END\n+        -- Check the cause... bad tenant_name\n+        SELECT -1 INTO v_not_found\n+        FROM fhir_admin.tenants t\n+            WHERE t.tenant_name = p_tenant_name;", "originalCommit": "70861600a29f6ec171eccffc922a652ea0ed15b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYyMDQ1OQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417620459", "bodyText": "I guess it only sets if WHERE selects one or more rows?", "author": "lmsurpre", "createdAt": "2020-04-29T21:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTg3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MTE4NA==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417681184", "bodyText": "this is to find out the cause is either tenant_name or other.\nthis allows for a differentiated signal back from the stored procedure.\nYes, that's right", "author": "prb112", "createdAt": "2020-04-30T00:02:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTg3OQ=="}], "type": "inlineReview"}, {"oid": "68fbbf67bdc2b376b63facb27536787694ea5be8", "url": "https://github.com/IBM/FHIR/commit/68fbbf67bdc2b376b63facb27536787694ea5be8", "message": "Merge branch 'master' into issue-929", "committedDate": "2020-04-30T13:50:31Z", "type": "commit"}, {"oid": "37560b6c5b05e87c24401b77e304521b3ac7fc5c", "url": "https://github.com/IBM/FHIR/commit/37560b6c5b05e87c24401b77e304521b3ac7fc5c", "message": "issue-929\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-30T18:04:54Z", "type": "commit"}, {"oid": "68a3528cfd13642ce5e31568dd0bfc4249cd5efa", "url": "https://github.com/IBM/FHIR/commit/68a3528cfd13642ce5e31568dd0bfc4249cd5efa", "message": "Merge branch 'master' into issue-929", "committedDate": "2020-04-30T18:55:50Z", "type": "commit"}, {"oid": "f9c2773980de84d4cc3bb61284bc965a32011361", "url": "https://github.com/IBM/FHIR/commit/f9c2773980de84d4cc3bb61284bc965a32011361", "message": "Merge branch 'master' into issue-929", "committedDate": "2020-05-04T11:11:17Z", "type": "commit"}, {"oid": "49c805ddd626b8c07dac1cf5a3f4c033f5eef806", "url": "https://github.com/IBM/FHIR/commit/49c805ddd626b8c07dac1cf5a3f4c033f5eef806", "message": "Bad error message in the case of an invalid tenant key #929\n\n- Refactor Error Messages in SQL\n- Refactor Error Message in Db\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-04T15:34:12Z", "type": "commit"}, {"oid": "ded3dc710ed9f63f3d1b78f723c146ca6977bd66", "url": "https://github.com/IBM/FHIR/commit/ded3dc710ed9f63f3d1b78f723c146ca6977bd66", "message": "Bad error message in the case of an invalid tenant key #929\n\n- Increment Stored Procedure Version\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-04T15:36:51Z", "type": "commit"}, {"oid": "9fb162b6e6f49fbdd6fd753a1607f04539894218", "url": "https://github.com/IBM/FHIR/commit/9fb162b6e6f49fbdd6fd753a1607f04539894218", "message": "Bad error message in the case of an invalid tenant key #929\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-04T15:40:07Z", "type": "commit"}, {"oid": "4677e77ac2d01bd9cbd520284f6b96629dbb3314", "url": "https://github.com/IBM/FHIR/commit/4677e77ac2d01bd9cbd520284f6b96629dbb3314", "message": "Bad error message in the case of an invalid tenant key #929\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-04T18:24:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419686760", "bodyText": "this worked ok to automatically update the stored procedure as part of --update-schema, right?\ndoes it work the same as calling --update-procs?", "author": "lmsurpre", "createdAt": "2020-05-04T19:49:43Z", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/AdminSchemaGenerator.java", "diffHunk": "@@ -106,7 +106,10 @@ public void buildSchema(PhysicalDataModel model) {\n         this.allTablesComplete.addDependencies(procedureDependencies);\n         model.addObject(allTablesComplete);\n \n-        model.addProcedure(this.adminSchemaName, SET_TENANT, FhirSchemaConstants.INITIAL_VERSION, () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName, SET_TENANT.toLowerCase() + \".sql\", null), Arrays.asList(allTablesComplete), procedurePrivileges);\n+        model.addProcedure(this.adminSchemaName, SET_TENANT, 2,\n+                () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName,\n+                        SET_TENANT.toLowerCase() + \".sql\", null),\n+                Arrays.asList(allTablesComplete), procedurePrivileges);", "originalCommit": "4677e77ac2d01bd9cbd520284f6b96629dbb3314", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5MjUzNQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419692535", "bodyText": "ack it's in two spots.", "author": "prb112", "createdAt": "2020-05-04T20:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mzg0Mw==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419693843", "bodyText": "Yes, it's OK. it also happens to be in two spots.", "author": "prb112", "createdAt": "2020-05-04T20:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mzk2Mg==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419693962", "bodyText": "newest commit adds the second spot", "author": "prb112", "createdAt": "2020-05-04T20:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA=="}], "type": "inlineReview"}, {"oid": "0117d0b550f82358315f1d40fc34d04f44328881", "url": "https://github.com/IBM/FHIR/commit/0117d0b550f82358315f1d40fc34d04f44328881", "message": "issue 929\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-04T20:02:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwMjAxMQ==", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419702011", "bodyText": "\ud83d\udc4d", "author": "lmsurpre", "createdAt": "2020-05-04T20:17:54Z", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaGenerator.java", "diffHunk": "@@ -231,8 +230,7 @@ public void buildAdminSchema(PhysicalDataModel model) {\n \n         // The set_tenant procedure can be created after all the admin tables are done\n         ProcedureDef setTenant = model.addProcedure(this.adminSchemaName,\n-                SET_TENANT,\n-                FhirSchemaConstants.INITIAL_VERSION,\n+                        SET_TENANT, 2,", "originalCommit": "0117d0b550f82358315f1d40fc34d04f44328881", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}