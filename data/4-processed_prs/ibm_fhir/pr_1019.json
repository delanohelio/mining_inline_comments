{"pr_number": 1019, "pr_title": "Improve the Exception Case for Db2 Configured Multitenancy #1018", "pr_createdAt": "2020-05-04T20:55:28Z", "pr_url": "https://github.com/IBM/FHIR/pull/1019", "timeline": [{"oid": "85d426b01cb7cabf2efdb292351ee20c48fdba84", "url": "https://github.com/IBM/FHIR/commit/85d426b01cb7cabf2efdb292351ee20c48fdba84", "message": "Improve the Exception Case for Db2 Configured Multitenancy #1018\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-04T20:54:34Z", "type": "commit"}, {"oid": "878ca838b2ada1bb953fa17feabf5d6802a2d18a", "url": "https://github.com/IBM/FHIR/commit/878ca838b2ada1bb953fa17feabf5d6802a2d18a", "message": "issue #1018\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-04T20:58:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczNDMwNw==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r419734307", "bodyText": "should this be FHIRConfigHelper.getBooleanProperty(FHIRConfiguration.PROPERTY_DATASOURCES + \"/\" + dsId + \"/multitenant\"?", "author": "lmsurpre", "createdAt": "2020-05-04T21:17:41Z", "path": "fhir-server/src/main/java/com/ibm/fhir/server/filter/rest/FHIRRestServletFilter.java", "diffHunk": "@@ -134,6 +134,15 @@ public void doFilter(HttpServletRequest request, HttpServletResponse response, F\n                 if (tenantKey != null) {\n                     context.setTenantKey(tenantKey);\n                 }\n+\n+                String type = dsPG.getStringProperty(\"type\", null);\n+                if (type != null) {\n+                    // Based on the default for the database type, the code.\n+                    Boolean enabled =\n+                            FHIRConfigHelper.getBooleanProperty(\"multitenant\",", "originalCommit": "878ca838b2ada1bb953fa17feabf5d6802a2d18a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0NzQ4Mw==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r419747483", "bodyText": "where dsId is the \"datastoreId\" which can be looked up from the request context", "author": "lmsurpre", "createdAt": "2020-05-04T21:44:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczNDMwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTI1Mw==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r419789253", "bodyText": "right. this is the pattern from the XA Datasource", "author": "prb112", "createdAt": "2020-05-04T23:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczNDMwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4MjExMw==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420082113", "bodyText": "resolved", "author": "prb112", "createdAt": "2020-05-05T12:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczNDMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r419738931", "bodyText": "trying to decide if we want this here...I guess is the idea is its similar to the tenantKey so put it in the same spot?\nthat one made sense to me because it was already here, but I'm not sure if we want to keep adding stuff to the requestcontext.  can we keep it isolated to just the FHIRDbDAOImpl?", "author": "lmsurpre", "createdAt": "2020-05-04T21:26:50Z", "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "diffHunk": "@@ -33,6 +33,8 @@\n     private String tenantId;\n     private String tenantKey;\n     private String dataStoreId;\n+    // By default, setting to False.\n+    private Boolean dataStoreMultiTenant = Boolean.FALSE;", "originalCommit": "878ca838b2ada1bb953fa17feabf5d6802a2d18a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTE3Ng==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r419789176", "bodyText": "I think it makes sense here. it maintains state, and keeps the DAO somewhat stateless", "author": "prb112", "createdAt": "2020-05-04T23:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4MTUyOQ==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420081529", "bodyText": "I guess I was thinking we could look up the config property where its needed without storing it as state anywhere.  It didn't seem to be used from anywhere other than FHIRDbDAOImpl.", "author": "lmsurpre", "createdAt": "2020-05-05T12:48:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMDMyNg==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420110326", "bodyText": "You end up looking up the property group again, and processing again.  Wouldn't it be good to pick it off one time?", "author": "prb112", "createdAt": "2020-05-05T13:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEzNTU1NQ==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420135555", "bodyText": "We do have caching for the config and I think its consistent with other places that read the config whenever we need a config value.\nThat said, if we're calling it over and over then maybe you're right...do we call getConnection() a lot of times during a typical create/update request?", "author": "lmsurpre", "createdAt": "2020-05-05T14:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEzOTM5OA==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420139398", "bodyText": "While that is true, the config is still navigated down the tree to the property, versus a point lookup.\nIn general it's called in multiple spots, but if it's cached in memory (resourceType, parameterName et cetra it shouldn't hit that point), but it is referenced in a lot of places with many different paths.", "author": "prb112", "createdAt": "2020-05-05T14:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE0NzIzOA==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420147238", "bodyText": "OK, I think its probably fine either way.  Would like to hear from @JohnTimm and @albertwang-ibm in terms of preference, but I think I'm good with whatever the group decides.", "author": "lmsurpre", "createdAt": "2020-05-05T14:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE1ODA2OQ==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420158069", "bodyText": "I don\u2019t have a strong opinion either way but if tenantId and dsId are already in the FHIRRequestContext then adding a derived field for convenience doesn\u2019t bother me.", "author": "JohnTimm", "createdAt": "2020-05-05T14:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE1ODMxMQ==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420158311", "bodyText": "I would agree with Paul's current codes.", "author": "albertwang-ibm", "createdAt": "2020-05-05T14:35:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE1ODUxNQ==", "url": "https://github.com/IBM/FHIR/pull/1019#discussion_r420158515", "bodyText": "OK, marking it resolved then.  Thanks for weighing in.", "author": "lmsurpre", "createdAt": "2020-05-05T14:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczODkzMQ=="}], "type": "inlineReview"}, {"oid": "0fe04afec6e8cf5a13ef79164d2826b3733656c8", "url": "https://github.com/IBM/FHIR/commit/0fe04afec6e8cf5a13ef79164d2826b3733656c8", "message": "issue #1018\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-05T12:48:17Z", "type": "commit"}]}