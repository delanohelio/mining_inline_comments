{"pr_number": 984, "pr_title": "BulkData $bulkdata-status DELETE API must stop first #952", "pr_createdAt": "2020-04-25T00:41:27Z", "pr_url": "https://github.com/IBM/FHIR/pull/984", "timeline": [{"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966", "url": "https://github.com/IBM/FHIR/commit/edbb81b3d70f8e7a345d4e972a2318e3032f0966", "message": "BulkData $bulkdata-status DELETE API must stop first #952\n\n- Update REST Operation with method DELETE (takes no content)\n- Improved the ImportOperationTest\n- Update CosExportImpl\n- Improve error conditions of DELETE support for the Java Batch\nFramework\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-25T00:39:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzMzA5Mg==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415833092", "bodyText": "the function name sounds a little bit strange ...  maybe runStopJobForTenant() is better...", "author": "albertwang-ibm", "createdAt": "2020-04-27T13:54:51Z", "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantForJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantForJob(String job) throws Exception {", "originalCommit": "edbb81b3d70f8e7a345d4e972a2318e3032f0966", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzODgxMQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415838811", "bodyText": "changed", "author": "prb112", "createdAt": "2020-04-27T14:01:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzMzA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzMzgwMQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415833801", "bodyText": "the function name sounds a little bit weird, maybe runDeleteJobForTenant?", "author": "albertwang-ibm", "createdAt": "2020-04-27T13:55:43Z", "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);", "originalCommit": "edbb81b3d70f8e7a345d4e972a2318e3032f0966", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzODY3MQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415838671", "bodyText": "Changed", "author": "prb112", "createdAt": "2020-04-27T14:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzMzgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNDU2Ng==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415834566", "bodyText": "this is a little bit strange, because in my tests, I did use put to stop my job request.", "author": "albertwang-ibm", "createdAt": "2020-04-27T13:56:33Z", "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantForJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantForJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes", "originalCommit": "edbb81b3d70f8e7a345d4e972a2318e3032f0966", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNjM3MQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415836371", "bodyText": "I looked at the Open Liberty code too. PUT never seemed to work for me.", "author": "prb112", "createdAt": "2020-04-27T13:58:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNDU2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzOTA2NQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415839065", "bodyText": "GET worked for me", "author": "prb112", "createdAt": "2020-04-27T14:02:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNDU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNzI3Nw==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415837277", "bodyText": "maybe better to change the function name...", "author": "albertwang-ibm", "createdAt": "2020-04-27T14:00:03Z", "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantForJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantForJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes\n+            Response r = target.request().get();\n+            String responseStr = r.readEntity(String.class);\n+\n+            if (HttpStatus.SC_MOVED_TEMPORARILY == r.getStatus()) {\n+                // It's on a different server, and must be in the cluster.\n+                // If not, we're going to connect to location, and try a put.\n+                String location = r.getHeaderString(\"location\");\n+                if (location != null) {\n+                    // No matter what, tell people we accepted the call.\n+                    target = getWebTarget(location + \"?action=stop\");\n+                    // no assignment intentionally.\n+                    target.request().get();\n+                }\n+                // Here, we could easily respond with an Exception/OperationOutcome, however An unexpected error has \n+                // occurred while stopping/deleting the job on a batch cluster member\n+                status = Response.Status.ACCEPTED;\n+            } else if (HttpStatus.SC_OK == r.getStatus()) {\n+                // Check if the Status is GOOD\n+                JobExecutionResponse response = JobExecutionResponse.Parser.parse(responseStr);\n+                if (response.getBatchStatus().contains(\"STOPPING\")) {\n+                    // Signal that we're in a stopping condition.\n+                    status = Response.Status.ACCEPTED;\n+                }\n+                // Don't Delete, let the client flow through again and DELETE.\n+            } else if (HttpStatus.SC_CONFLICT == r.getStatus()) {\n+                status = Response.Status.ACCEPTED;\n+            } else {\n+                // Error Condition\n+                throw BulkDataExportUtil.buildOperationException(\n+                        \"An unexpected error has ocurred while stopping/deleting the job\", IssueType.TRANSIENT);\n+            }\n+\n+        } catch (FHIROperationException ex) {\n+            throw ex;\n+        } catch (Exception ex) {\n+            throw BulkDataExportUtil.buildOperationException(\"An unexpected error has ocurred while deleting the job\",\n+                    IssueType.TRANSIENT);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * deletes the job\n+     */\n+    private Response.Status runDeleteOfTenantForJob(String job) throws Exception {", "originalCommit": "edbb81b3d70f8e7a345d4e972a2318e3032f0966", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzOTE3NA==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415839174", "bodyText": "changed", "author": "prb112", "createdAt": "2020-04-27T14:02:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNzI3Nw=="}], "type": "inlineReview"}, {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760", "url": "https://github.com/IBM/FHIR/commit/f70f2b28f35dea0eb876b7708ad4abfa074a3760", "message": "BulkData $bulkdata-status DELETE API must stop first #952\n\nPer code review\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-27T14:02:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0NjM5OQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415846399", "bodyText": "maybe we should propose change to the bulkdata spec to add the 200 OK response for deletion. currently, in the spec, there is only 202 accepted for deletion.", "author": "albertwang-ibm", "createdAt": "2020-04-27T14:11:25Z", "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING", "originalCommit": "edbb81b3d70f8e7a345d4e972a2318e3032f0966", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1MjgzNg==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415852836", "bodyText": "I completely agree.  Lee said they is some discussion in the bulkdata workgroup on this behavior.", "author": "prb112", "createdAt": "2020-04-27T14:19:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0NjM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mjg1Nw==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415852857", "bodyText": "this is really a big surprise for me, because in my test, I always have to use PUT to stop the job, using GET only returns the current status of the job...", "author": "albertwang-ibm", "createdAt": "2020-04-27T14:19:10Z", "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteJobForTenant(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes\n+            Response r = target.request().get();\n+            String responseStr = r.readEntity(String.class);\n+\n+            if (HttpStatus.SC_MOVED_TEMPORARILY == r.getStatus()) {\n+                // It's on a different server, and must be in the cluster.\n+                // If not, we're going to connect to location, and try a put.\n+                String location = r.getHeaderString(\"location\");\n+                if (location != null) {\n+                    // No matter what, tell people we accepted the call.\n+                    target = getWebTarget(location + \"?action=stop\");\n+                    // no assignment intentionally.\n+                    target.request().get();", "originalCommit": "f70f2b28f35dea0eb876b7708ad4abfa074a3760", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1MzE3Ng==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415853176", "bodyText": "with action=stop?  funny PUT never worked for me.", "author": "prb112", "createdAt": "2020-04-27T14:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mjg1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2ODA4MA==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415868080", "bodyText": "We did a screenshare.  Paul to double check.", "author": "prb112", "createdAt": "2020-04-27T14:37:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mjg1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc3ODQ3Mw==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r416778473", "bodyText": "Updated in enxt commit.", "author": "prb112", "createdAt": "2020-04-28T17:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mjg1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mzk3MQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415853971", "bodyText": "when this error can happen? just curious", "author": "albertwang-ibm", "createdAt": "2020-04-27T14:20:36Z", "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteJobForTenant(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes\n+            Response r = target.request().get();\n+            String responseStr = r.readEntity(String.class);\n+\n+            if (HttpStatus.SC_MOVED_TEMPORARILY == r.getStatus()) {\n+                // It's on a different server, and must be in the cluster.\n+                // If not, we're going to connect to location, and try a put.\n+                String location = r.getHeaderString(\"location\");\n+                if (location != null) {\n+                    // No matter what, tell people we accepted the call.\n+                    target = getWebTarget(location + \"?action=stop\");\n+                    // no assignment intentionally.\n+                    target.request().get();\n+                }\n+                // Here, we could easily respond with an Exception/OperationOutcome, however An unexpected error has \n+                // occurred while stopping/deleting the job on a batch cluster member\n+                status = Response.Status.ACCEPTED;\n+            } else if (HttpStatus.SC_OK == r.getStatus()) {\n+                // Check if the Status is GOOD\n+                JobExecutionResponse response = JobExecutionResponse.Parser.parse(responseStr);\n+                if (response.getBatchStatus().contains(\"STOPPING\")) {\n+                    // Signal that we're in a stopping condition.\n+                    status = Response.Status.ACCEPTED;\n+                }\n+                // Don't Delete, let the client flow through again and DELETE.\n+            } else if (HttpStatus.SC_CONFLICT == r.getStatus()) {", "originalCommit": "f70f2b28f35dea0eb876b7708ad4abfa074a3760", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2NzgzNg==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415867836", "bodyText": "Oh, this happens when there are simultaneous updates to the status and the batchStatus is in conflict.", "author": "prb112", "createdAt": "2020-04-27T14:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mzk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc3ODI5NA==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r416778294", "bodyText": "Added a comment in the next commit.  This means the job is stopped, and no need to change the state.  This happens in simultaneous/parallel requests.", "author": "prb112", "createdAt": "2020-04-28T17:04:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mzk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjExNjA0NA==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r416116044", "bodyText": "the wording of this comment seemed a bit odd to me...is there a better way to say it?", "author": "lmsurpre", "createdAt": "2020-04-27T20:13:08Z", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/Operation.java", "diffHunk": "@@ -130,6 +131,49 @@ public Response invoke(@PathParam(\"operationName\") String operationName, Resourc\n         }\n     }\n \n+    @DELETE\n+    @Path(\"${operationName}\")\n+    public Response invokeDelete(@PathParam(\"operationName\") String operationName) {\n+        // This operation is at a top-level, there are no extra values passed through.\n+        // This feature is used by operations to execute a specific operation.", "originalCommit": "f70f2b28f35dea0eb876b7708ad4abfa074a3760", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc3MTU0MQ==", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r416771541", "bodyText": "Fixed. in next commit.", "author": "prb112", "createdAt": "2020-04-28T16:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjExNjA0NA=="}], "type": "inlineReview"}, {"oid": "18f3ba1ad8ddab02f3f368f6d6f9dc6cf40bff56", "url": "https://github.com/IBM/FHIR/commit/18f3ba1ad8ddab02f3f368f6d6f9dc6cf40bff56", "message": "Merge branch 'master' into issue-952", "committedDate": "2020-04-28T16:44:29Z", "type": "commit"}, {"oid": "829cb5390a8f1a9e77914071e74725145e8fa06d", "url": "https://github.com/IBM/FHIR/commit/829cb5390a8f1a9e77914071e74725145e8fa06d", "message": "BulkData $bulkdata-status DELETE API must stop first #952\n\n- Refined the comment in Operation.java to indicate a clear purpose for\nthe System-Level Operation call to DELETE\n- Updated per discussion with Albert the behavior of the call to the\nSTOP/PUT action.\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-28T17:42:31Z", "type": "commit"}]}