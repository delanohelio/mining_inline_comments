{"pr_number": 754, "pr_title": "issue #749 #755 FHIR transaction inside JavaBatch and fix for large COS file imports", "pr_createdAt": "2020-03-03T22:59:50Z", "pr_url": "https://github.com/IBM/FHIR/pull/754", "timeline": [{"oid": "32c7820ae09e47a27cda382842fd19db753310a7", "url": "https://github.com/IBM/FHIR/commit/32c7820ae09e47a27cda382842fd19db753310a7", "message": "issue #749 FHIR transaction inside JavaBatch\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-03T22:59:12Z", "type": "commit"}, {"oid": "cf1d5aa9e2b7bed4c3d22323a643d34f1d4c3b6a", "url": "https://github.com/IBM/FHIR/commit/cf1d5aa9e2b7bed4c3d22323a643d34f1d4c3b6a", "message": "Merge branch 'master' into Albert-Master-New", "committedDate": "2020-03-03T23:03:58Z", "type": "commit"}, {"oid": "da76dea4dd80bcca2cac7f92a5c6d61382feafa5", "url": "https://github.com/IBM/FHIR/commit/da76dea4dd80bcca2cac7f92a5c6d61382feafa5", "message": "issue #749 remove debugging messages\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-03T23:09:57Z", "type": "commit"}, {"oid": "89da29594063a30129fef85002845a4f1934f20c", "url": "https://github.com/IBM/FHIR/commit/89da29594063a30129fef85002845a4f1934f20c", "message": "issue #755 fix for importing large COS file\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T03:19:52Z", "type": "commit"}, {"oid": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "url": "https://github.com/IBM/FHIR/commit/72c43c512b21bc20c8044ddd86b6756a82308f5c", "message": "Merge branch 'Albert-Master-New' of git@github.com:IBM/FHIR.git into Albert-Master-New", "committedDate": "2020-03-04T03:23:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mjc4OQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387652789", "bodyText": "This should be changed so the logic is expressed as part of the loops condition.\nConvert to a do-while if necessary...\nAlso - FYI - https://wiki.sei.cmu.edu/confluence/display/java/MSC01-J.+Do+not+use+an+empty+infinite+loop\nit's something to avoid", "author": "prb112", "createdAt": "2020-03-04T13:05:27Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/BulkDataUtils.java", "diffHunk": "@@ -137,7 +137,7 @@ public static void listBuckets(AmazonS3 cosClient) {\n     private static int getFhirResourceFromBufferReader(BufferedReader resReader, int numOfLinesToSkip, List<Resource> fhirResources) throws Exception {\n         int exported = 0;\n         int lineRed = 0;\n-        while (resReader.ready()) {\n+        while (true) {", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2NDUzNQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387664535", "bodyText": "yeah, good point. I forgot I used the same pattern in the COS break tool", "author": "albertwang-ibm", "createdAt": "2020-03-04T13:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mjc4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY5MTI3OA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387691278", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-03-04T14:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mjc4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mzc0Mg==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387653742", "bodyText": "At the top of this class, please remove the comment above the package declaration.\n/**\n * Constants for the JavaBatch Jobs.\n */", "author": "prb112", "createdAt": "2020-03-04T13:07:24Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/Constants.java", "diffHunk": "@@ -30,7 +30,9 @@\n     public static final byte[] NDJSON_LINESEPERATOR = \"\\r\\n\".getBytes();\n \n     public static final int IMPORT_MAX_PARTITIONPROCESSING_THREADNUMBER = 10;", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY5MTM3Mg==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387691372", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-03-04T14:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mzc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcxNzM2Mw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387717363", "bodyText": "Albert, I think you removed the wrong one.  We want to keep the javadoc on the class, but remove the extra one that was in the wrong place.", "author": "lmsurpre", "createdAt": "2020-03-04T14:53:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mzc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyMDAxOA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387720018", "bodyText": "Right - not about this comment - it was at the top of the class (I scanned the copyrights and found it)", "author": "prb112", "createdAt": "2020-03-04T14:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mzc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3NTkxMQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387775911", "bodyText": "ha, done! thanks!", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Mzc0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NTUxOQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387655519", "bodyText": "I don't think this is the right approach.", "author": "prb112", "createdAt": "2020-03-04T13:10:53Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/helper/FHIRTransactionHelper.java", "diffHunk": "@@ -88,4 +89,14 @@ public void rollback() {\n             }\n         }\n     }\n+\n+    /**\n+     * Use this only if the transaction is not started and managed by us, e.g, by JavaBatch framework.\n+     */\n+    public void commit2() throws FHIRPersistenceException {", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3NjM0Mw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387776343", "bodyText": "changed to use existing commit()", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:18:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NTUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NjQ2MA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387656460", "bodyText": "Copyright header", "author": "prb112", "createdAt": "2020-03-04T13:12:25Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/helper/FHIRTransactionHelper.java", "diffHunk": "@@ -17,16 +17,16 @@\n  */\n public class FHIRTransactionHelper {\n     private static final Logger log = Logger.getLogger(FHIRTransactionHelper.class.getName());\n-    \n+", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3NjQ1NQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387776455", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:18:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NjQ2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NjY3Mg==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387656672", "bodyText": "I don't think this is the right approach.", "author": "prb112", "createdAt": "2020-03-04T13:12:47Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/helper/FHIRTransactionHelper.java", "diffHunk": "@@ -38,12 +38,13 @@ public void begin() throws FHIRPersistenceException {\n                 txn.begin();\n                 txnStarted = true;\n             } else {\n-                log.fine(\"Transaction is already active on current thread...\");\n+                log.fine(\"Transaction is already active on current thread, get Db connection only ...\");\n+                txn.begin();", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2ODg1NQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387668855", "bodyText": "your suggestion?", "author": "albertwang-ibm", "createdAt": "2020-03-04T13:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NjY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4NDIzNQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387684235", "bodyText": "I think you have unintended consequences.  I'm not offering a suggestion here.  I think John should review", "author": "prb112", "createdAt": "2020-03-04T14:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NjY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Njg4Mw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387656883", "bodyText": "I don't think close Connection should be in the FHIRPersistenceTransaction", "author": "prb112", "createdAt": "2020-03-04T13:13:13Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/FHIRPersistenceTransaction.java", "diffHunk": "@@ -12,33 +12,36 @@\n  * This interface represents a transaction within the FHIR persistence layer.\n  */\n public interface FHIRPersistenceTransaction {\n-    \n+\n     /**\n      * Returns true iff an active transaction exists within the current thread's context.\n      */\n     boolean isActive() throws FHIRPersistenceException;\n-    \n+\n     /**\n      * Begin a new transaction on the current thread.\n      * @throws Exception\n      */\n     void begin() throws FHIRPersistenceException;\n-    \n+\n     /**\n      * Commit the current thread's transaction.\n      * @throws Exception\n      */\n     void commit() throws FHIRPersistenceException;\n-    \n+\n+\n+    void closeConnection() throws FHIRPersistenceException;", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2ODI1Nw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387668257", "bodyText": "then I need a new tag/field in the implementation class, this should also work.", "author": "albertwang-ibm", "createdAt": "2020-03-04T13:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1Njg4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzAyMA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387657020", "bodyText": "Copyright header", "author": "prb112", "createdAt": "2020-03-04T13:13:31Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/FHIRPersistenceTransaction.java", "diffHunk": "@@ -12,33 +12,36 @@\n  * This interface represents a transaction within the FHIR persistence layer.\n  */\n public interface FHIRPersistenceTransaction {", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3ODUzMw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387778533", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:21:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzM1Ng==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387657356", "bodyText": "It should use only txn.commit\nif a behavior needs to change, then change in txn.commit", "author": "prb112", "createdAt": "2020-03-04T13:14:05Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ChunkWriter.java", "diffHunk": "@@ -149,16 +148,19 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n                             chunkData.getBufferStream4Import().write(Constants.NDJSON_LINESEPERATOR);\n                         }\n                     }\n-                } catch (FHIRPersistenceException e) {\n+                } catch (Exception e) {\n                     logger.warning(\"Failed to import due to error: \" + e.getMessage());\n                     failedNum++;\n                     if (Constants.IMPORT_IS_COLLECT_OPERATIONOUTCOMES) {\n                         FHIRGenerator.generator(Format.JSON).generate(FHIRUtil.buildOperationOutcome(e, false), chunkData.getBufferStream4ImportError());\n                         chunkData.getBufferStream4ImportError().write(Constants.NDJSON_LINESEPERATOR);\n                     }\n                 }\n-\n             }\n+            // Release the DB connection.\n+            // This doesn't really commit the transaction, because the transaction was started and will be committed\n+            // by the JavaBatch framework.\n+            txn.commit2();", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2NjkwOQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387666909", "bodyText": "have not found a way to change inside commit without adding new field to the transaction to tell the commit to only drop it's connection without commit the user transaction. but I can do so if need.", "author": "albertwang-ibm", "createdAt": "2020-03-04T13:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3OTMyMQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387779321", "bodyText": "changed to close the connection inside existing commit method", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzM1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzQ4Ng==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387657486", "bodyText": "Why the conversion to Exception?", "author": "prb112", "createdAt": "2020-03-04T13:14:20Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ChunkWriter.java", "diffHunk": "@@ -149,16 +148,19 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n                             chunkData.getBufferStream4Import().write(Constants.NDJSON_LINESEPERATOR);\n                         }\n                     }\n-                } catch (FHIRPersistenceException e) {\n+                } catch (Exception e) {", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNTIxOA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387815218", "bodyText": "I thought I shoulld catch the ioexception also here, but after think it over again, I think I should keep it unchanged, and allow the framework to fail the transaction if IOException happens.", "author": "albertwang-ibm", "createdAt": "2020-03-04T17:20:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzQ4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNjQxNA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387816414", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-03-04T17:22:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1NzQ4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1OTA3OA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387659078", "bodyText": "any particular reason for this change? 421/422 can now be on one line", "author": "prb112", "createdAt": "2020-03-04T13:17:13Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/impl/FHIRPersistenceJDBCImpl.java", "diffHunk": "@@ -418,8 +418,8 @@ public FHIRPersistenceJDBCImpl(Properties configProps, IConnectionProvider cp) t\n \n         try {\n             checkModifiers(searchContext);\n-            queryBuilder = new JDBCQueryBuilder((ParameterDAO) this.getParameterDao(),\n-                                                (ResourceDAO) this.getResourceDao());\n+            queryBuilder = new JDBCQueryBuilder(this.getParameterDao(),", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3OTcwMQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387779701", "bodyText": "ugly, this is by my eclipse automatically", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1OTA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1OTgwNw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387659807", "bodyText": "I personally don't think this is the right place or the correct change.  If you are getting it from a pool, the pool should manage the closing of the connection in this case.  In particular, this is coming from the jdbc/fhirProxyDataSource ... I think this has unintended consequences.", "author": "prb112", "createdAt": "2020-03-04T13:18:40Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/impl/FHIRPersistenceJDBCImpl.java", "diffHunk": "@@ -1522,33 +1526,49 @@ public FHIRPersistenceTransaction getTransaction() {\n     public boolean isDeleteSupported() {\n         return true;\n     }\n-    \n+\n     private FHIRDbDAO getBaseDao() {\n         return baseDao;\n     }\n-    \n+\n     private void setBaseDao(FHIRDbDAO baseDao) {\n         this.baseDao = baseDao;\n     }\n-    \n+\n     private Connection getManagedConnection() {\n         return managedConnection;\n     }\n \n     private void setManagedConnection(Connection managedConnection) {\n         this.managedConnection = managedConnection;\n     }\n-    \n+\n     private OperationOutcome buildOKOperationOutcome() {\n         return FHIRUtil.buildOperationOutcome(\"All OK\", IssueType.INFORMATIONAL, IssueSeverity.INFORMATION);\n     }\n \n     private OperationOutcome buildErrorOperationOutcome() {\n         return FHIRUtil.buildOperationOutcome(\"The database connection was not valid\", IssueType.NO_STORE, IssueSeverity.ERROR);\n     }\n-    \n+\n     private Connection createConnection() throws FHIRPersistenceDBConnectException {\n         FHIRDbDAOImpl dao = new FHIRDbDAOImpl();\n         return dao.getConnection();\n     }\n+\n+    @Override\n+    public void closeConnection() throws FHIRPersistenceException {", "originalCommit": "72c43c512b21bc20c8044ddd86b6756a82308f5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc4MTIyMQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387781221", "bodyText": "The same in our commit method which closes the sharedConnection, I believe the close() is just return the connection to the connection pool instead of closing the real connection to the DB.", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:25:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1OTgwNw=="}], "type": "inlineReview"}, {"oid": "e876ce1923fc7fd15bbd1f506718485cfc104681", "url": "https://github.com/IBM/FHIR/commit/e876ce1923fc7fd15bbd1f506718485cfc104681", "message": "issue #749 minor changes per review comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T14:13:30Z", "type": "commit"}, {"oid": "8e9f44656b617ad1812b4cbc37ad17c3c8ffb1fe", "url": "https://github.com/IBM/FHIR/commit/8e9f44656b617ad1812b4cbc37ad17c3c8ffb1fe", "message": "issue #749 change to use existing commit method instead of commit2\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T15:58:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2NjMxMQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387766311", "bodyText": "remind me why we're skipping lines again?", "author": "lmsurpre", "createdAt": "2020-03-04T16:03:38Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/BulkDataUtils.java", "diffHunk": "@@ -137,21 +137,21 @@ public static void listBuckets(AmazonS3 cosClient) {\n     private static int getFhirResourceFromBufferReader(BufferedReader resReader, int numOfLinesToSkip, List<Resource> fhirResources) throws Exception {\n         int exported = 0;\n         int lineRed = 0;\n-        while (resReader.ready()) {\n-            String resLine = resReader.readLine();\n-            lineRed++;\n-            if (resLine == null) {\n-                break;\n-            }\n-            if (lineRed <= numOfLinesToSkip) {\n-                continue;\n-            }\n-            fhirResources.add(FHIRParser.parser(Format.JSON).parse(new StringReader(resLine)));\n-            exported++;\n-            if (exported == Constants.IMPORT_NUMOFFHIRRESOURCES_PERREAD) {\n-                break;\n+        String resLine = null;\n+        do {\n+            resLine = resReader.readLine();\n+            if (resLine != null) {\n+                lineRed++;\n+                if (lineRed <= numOfLinesToSkip) {", "originalCommit": "8e9f44656b617ad1812b4cbc37ad17c3c8ffb1fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3MDM1Mg==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387770352", "bodyText": "we support either reuse the inputstream or not reuse the inputstream, it's controlled by a switch, if we don't reuse the input stream, then the skipnumber will not be 0.    currently, I set the switch to on to reuse the inputstrean across all the chunk processing.  I could remove the \"not reuse\" codes if I find in the future that they are not really needed any more.", "author": "albertwang-ibm", "createdAt": "2020-03-04T16:09:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2NjMxMQ=="}], "type": "inlineReview"}, {"oid": "e0beed8561a47aa16d419ce7e2d58cd270bba944", "url": "https://github.com/IBM/FHIR/commit/e0beed8561a47aa16d419ce7e2d58cd270bba944", "message": "issue #749 change comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T16:17:33Z", "type": "commit"}, {"oid": "acfb8a8130139d168e27551c28320cbf9fd1789d", "url": "https://github.com/IBM/FHIR/commit/acfb8a8130139d168e27551c28320cbf9fd1789d", "message": "issue #749 update copy right\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T16:21:30Z", "type": "commit"}, {"oid": "ea1df164c7200208663d57025f5d318e0d95fd13", "url": "https://github.com/IBM/FHIR/commit/ea1df164c7200208663d57025f5d318e0d95fd13", "message": "issue #745 update javadoc for begin method of FhirPersistenceTransaction\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T16:30:01Z", "type": "commit"}, {"oid": "3d93dad1bf7b89b4f95b6d9c645165ad60070306", "url": "https://github.com/IBM/FHIR/commit/3d93dad1bf7b89b4f95b6d9c645165ad60070306", "message": "issue #745 minor change\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T16:46:12Z", "type": "commit"}, {"oid": "2e47fb7f4881385ba8e327a285a67de40fc02313", "url": "https://github.com/IBM/FHIR/commit/2e47fb7f4881385ba8e327a285a67de40fc02313", "message": "issue #749 minor adjustment\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T17:11:44Z", "type": "commit"}, {"oid": "1f366893dee8f7d026f0399d23bff0b80dfad052", "url": "https://github.com/IBM/FHIR/commit/1f366893dee8f7d026f0399d23bff0b80dfad052", "message": "issue #749 rollback exception handling in chunkwritter\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T17:21:52Z", "type": "commit"}, {"oid": "9875c532b0c3a930b4bec1cb827848469549fc8f", "url": "https://github.com/IBM/FHIR/commit/9875c532b0c3a930b4bec1cb827848469549fc8f", "message": "issue #749 updates per team discuss results\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T19:48:49Z", "type": "commit"}, {"oid": "431d3a997d319bf85bb46c17b750a6c9ed7de5d8", "url": "https://github.com/IBM/FHIR/commit/431d3a997d319bf85bb46c17b750a6c9ed7de5d8", "message": "issue #749 minor change for comment\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T19:53:14Z", "type": "commit"}, {"oid": "eb429628bc97ec67b63f308ed6f5636a028fed2f", "url": "https://github.com/IBM/FHIR/commit/eb429628bc97ec67b63f308ed6f5636a028fed2f", "message": "issue #749 minor update\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T19:55:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwODUxNQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387908515", "bodyText": "maybe unenroll ?", "author": "prb112", "createdAt": "2020-03-04T20:12:31Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ChunkWriter.java", "diffHunk": "@@ -157,9 +158,13 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n                         chunkData.getBufferStream4ImportError().write(Constants.NDJSON_LINESEPERATOR);\n                     }\n                 }\n-\n             }\n         }\n+        // Release the DB connection.\n+        // This doesn't really commit the transaction, because the transaction was started and will be committed\n+        // by the JavaBatch framework.\n+        txn.unEnroll();", "originalCommit": "eb429628bc97ec67b63f308ed6f5636a028fed2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMTE2OQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387911169", "bodyText": "ha, OK. I will follow the dictionary.", "author": "albertwang-ibm", "createdAt": "2020-03-04T20:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwODUxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkxMzQxMQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387913411", "bodyText": "done! thanks!", "author": "albertwang-ibm", "createdAt": "2020-03-04T20:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwODUxNQ=="}], "type": "inlineReview"}, {"oid": "d6418c17b9caa4e5777cfc5cea097f067490a539", "url": "https://github.com/IBM/FHIR/commit/d6418c17b9caa4e5777cfc5cea097f067490a539", "message": "issue #749 change unEnroll to unenroll\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T20:22:31Z", "type": "commit"}, {"oid": "3e02c3ce9ddb9415fc9a50512950b03add218fe8", "url": "https://github.com/IBM/FHIR/commit/3e02c3ce9ddb9415fc9a50512950b03add218fe8", "message": "issue #749 change to unenroll for log messages\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T20:26:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzg5Nw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387923897", "bodyText": "javadoc?", "author": "lmsurpre", "createdAt": "2020-03-04T20:45:32Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/helper/FHIRTransactionHelper.java", "diffHunk": "@@ -88,4 +88,17 @@ public void rollback() {\n             }\n         }\n     }\n+\n+    public void enroll() throws FHIRPersistenceException {", "originalCommit": "3e02c3ce9ddb9415fc9a50512950b03add218fe8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTI4MQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387925281", "bodyText": "added description in the interface definition, didn't want to duplicate it..", "author": "albertwang-ibm", "createdAt": "2020-03-04T20:48:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNDMzNA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387934334", "bodyText": "the issue is this doesn't implement the interface so it needs its own javadoc", "author": "lmsurpre", "createdAt": "2020-03-04T21:06:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNjA0OA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387936048", "bodyText": "OK, let me add", "author": "albertwang-ibm", "createdAt": "2020-03-04T21:10:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0MDg2MQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387940861", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-03-04T21:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzg5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzk2NA==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387923964", "bodyText": "javadoc?", "author": "lmsurpre", "createdAt": "2020-03-04T20:45:39Z", "path": "fhir-persistence/src/main/java/com/ibm/fhir/persistence/helper/FHIRTransactionHelper.java", "diffHunk": "@@ -88,4 +88,17 @@ public void rollback() {\n             }\n         }\n     }\n+\n+    public void enroll() throws FHIRPersistenceException {\n+        if (txn != null) {\n+            txn.enroll();\n+        }\n+    }\n+\n+    public void unenroll() throws FHIRPersistenceException {", "originalCommit": "3e02c3ce9ddb9415fc9a50512950b03add218fe8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNTE0Mw==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387925143", "bodyText": "added description in the interface definition, didn't want to duplicate it...", "author": "albertwang-ibm", "createdAt": "2020-03-04T20:48:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzk2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNDI3Mg==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387934272", "bodyText": "the issue is this doesn't implement the interface so it needs its own javadoc", "author": "lmsurpre", "createdAt": "2020-03-04T21:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzk2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzNTk4Ng==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387935986", "bodyText": "OK, let me add", "author": "albertwang-ibm", "createdAt": "2020-03-04T21:10:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzk2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0MDk1NQ==", "url": "https://github.com/IBM/FHIR/pull/754#discussion_r387940955", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-03-04T21:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyMzk2NA=="}], "type": "inlineReview"}, {"oid": "aa29f9df6d39322178ae20d39da249fb333ea4c6", "url": "https://github.com/IBM/FHIR/commit/aa29f9df6d39322178ae20d39da249fb333ea4c6", "message": "issue #749 update comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T21:04:25Z", "type": "commit"}, {"oid": "0ac1b75c3936a1d6f300fb314c4cb06dfebb6be4", "url": "https://github.com/IBM/FHIR/commit/0ac1b75c3936a1d6f300fb314c4cb06dfebb6be4", "message": "issue #749 updated comments per review\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T21:19:21Z", "type": "commit"}, {"oid": "ad008813d2b0035024e2aaa86f790c6711608fac", "url": "https://github.com/IBM/FHIR/commit/ad008813d2b0035024e2aaa86f790c6711608fac", "message": "issue #749 update comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-03-04T21:24:39Z", "type": "commit"}]}