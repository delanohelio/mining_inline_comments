{"pr_number": 1153, "pr_title": "issue #943 change isExportPublic etc to tenant specific", "pr_createdAt": "2020-05-26T18:48:09Z", "pr_url": "https://github.com/IBM/FHIR/pull/1153", "timeline": [{"oid": "e4e08453865f7bdd80851911dcae5979de551580", "url": "https://github.com/IBM/FHIR/commit/e4e08453865f7bdd80851911dcae5979de551580", "message": "issue #943 change isExportPublic etc to tenant specific\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-26T18:45:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTQ5NQ==", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430649495", "bodyText": "WE could pass this in as a part of the job parameters", "author": "prb112", "createdAt": "2020-05-26T19:19:45Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "diffHunk": "@@ -200,4 +201,11 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n             }\n         }\n     }\n+\n+    @Override\n+    public void open(Serializable checkpoint) throws Exception\n+    {\n+        isExportPublic = FHIRConfigHelper.getBooleanProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_ISEXPORTPUBLIC, true);", "originalCommit": "e4e08453865f7bdd80851911dcae5979de551580", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1NTM5Mw==", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430655393", "bodyText": "I thought about this also and then finally wanted to make it simpler to allow the the job pick up the configuration by itself. we already have so many job parameters. :)", "author": "albertwang-ibm", "createdAt": "2020-05-26T19:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTQ5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTY4Nw==", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430649687", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void open(Serializable checkpoint) throws Exception\n          \n          \n            \n                {\n          \n          \n            \n                public void open(Serializable checkpoint) throws Exception  {", "author": "prb112", "createdAt": "2020-05-26T19:20:06Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "diffHunk": "@@ -200,4 +201,11 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n             }\n         }\n     }\n+\n+    @Override\n+    public void open(Serializable checkpoint) throws Exception\n+    {", "originalCommit": "e4e08453865f7bdd80851911dcae5979de551580", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1NTczNQ==", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430655735", "bodyText": "ha, good catch.", "author": "albertwang-ibm", "createdAt": "2020-05-26T19:31:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTY4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTk0MA==", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430649940", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE  , Constants.DEFAULT_COSFILE_MAX_SIZE);\n          \n          \n            \n                        int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE , Constants.DEFAULT_COSFILE_MAX_SIZE);", "author": "prb112", "createdAt": "2020-05-26T19:20:32Z", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/common/CheckPointAlgorithm.java", "diffHunk": "@@ -53,38 +51,28 @@ public CheckPointAlgorithm() {\n      // Nothing to do here at present\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#checkpointTimeout()\n-     */\n     @Override\n     public int checkpointTimeout() {\n         return 0;\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#endCheckpoint()\n-     */\n     @Override\n     public void endCheckpoint() {\n         // Nothing to do here at present\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#beginCheckpoint()\n-     */\n     @Override\n     public void beginCheckpoint() {\n         // Nothing to do here at present\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#isReadyToCheckpoint()\n-     */\n     @Override\n     public boolean isReadyToCheckpoint() {\n         TransientUserData chunkData = (TransientUserData) stepCtx.getTransientUserData();\n \n         if (chunkData != null) {\n+            int cosFileMaxResources = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXRESOURCES, Constants.DEFAULT_COSFILE_MAX_RESOURCESNUMBER);\n+            int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE  , Constants.DEFAULT_COSFILE_MAX_SIZE);", "originalCommit": "e4e08453865f7bdd80851911dcae5979de551580", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a56d2f40afc3daf7c6b11b917c47c77fa35c9990", "url": "https://github.com/IBM/FHIR/commit/a56d2f40afc3daf7c6b11b917c47c77fa35c9990", "message": "Apply suggestions from code review\r\n\r\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>\n\nCo-authored-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-05-26T19:33:18Z", "type": "commit"}]}