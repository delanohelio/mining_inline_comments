{"pr_number": 5318, "pr_title": "Create MODULO sharding algorithm", "pr_createdAt": "2020-04-26T06:37:39Z", "pr_url": "https://github.com/apache/shardingsphere/pull/5318", "timeline": [{"oid": "3474c5c26a23024d144197540b7a8bb7b61e66e7", "url": "https://github.com/apache/shardingsphere/commit/3474c5c26a23024d144197540b7a8bb7b61e66e7", "message": "Create MODULO sharding algorithm", "committedDate": "2020-04-26T06:36:01Z", "type": "commit"}, {"oid": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c", "url": "https://github.com/apache/shardingsphere/commit/7dc6db6b61e06bf3ca56cd4622325031ec5cd43c", "message": "add java doc", "committedDate": "2020-04-26T06:41:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNTg5NQ==", "url": "https://github.com/apache/shardingsphere/pull/5318#discussion_r415235895", "bodyText": "\"mod.value\" is better", "author": "terrymanu", "createdAt": "2020-04-26T06:58:58Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/algorithm/sharding/inline/ModuloShardingAlgorithm.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.strategy.algorithm.sharding.inline;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.shardingsphere.api.sharding.standard.PreciseShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.RangeShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.StandardShardingAlgorithm;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashSet;\n+import java.util.Properties;\n+\n+/**\n+ * Modulo sharding algorithm.\n+ * \n+ * <p>Shard with `y = MOD(x)` algorithm.</p>\n+ */\n+public final class ModuloShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n+    \n+    private static final String MODULO_VALUE = \"modulo.value\";", "originalCommit": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNjY1MA==", "url": "https://github.com/apache/shardingsphere/pull/5318#discussion_r415236650", "bodyText": "Please use lombok", "author": "terrymanu", "createdAt": "2020-04-26T07:03:07Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/algorithm/sharding/inline/ModuloShardingAlgorithm.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.strategy.algorithm.sharding.inline;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.shardingsphere.api.sharding.standard.PreciseShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.RangeShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.StandardShardingAlgorithm;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashSet;\n+import java.util.Properties;\n+\n+/**\n+ * Modulo sharding algorithm.\n+ * \n+ * <p>Shard with `y = MOD(x)` algorithm.</p>\n+ */\n+public final class ModuloShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n+    \n+    private static final String MODULO_VALUE = \"modulo.value\";\n+    \n+    private Properties properties = new Properties();", "originalCommit": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNzY3Mw==", "url": "https://github.com/apache/shardingsphere/pull/5318#discussion_r415237673", "bodyText": "Properties is sync one, we can not use like this way, it will cause all concurrency threads as single synchronized thread.", "author": "terrymanu", "createdAt": "2020-04-26T07:08:27Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/algorithm/sharding/inline/ModuloShardingAlgorithm.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.strategy.algorithm.sharding.inline;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.shardingsphere.api.sharding.standard.PreciseShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.RangeShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.StandardShardingAlgorithm;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashSet;\n+import java.util.Properties;\n+\n+/**\n+ * Modulo sharding algorithm.\n+ * \n+ * <p>Shard with `y = MOD(x)` algorithm.</p>\n+ */\n+public final class ModuloShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n+    \n+    private static final String MODULO_VALUE = \"modulo.value\";\n+    \n+    private Properties properties = new Properties();", "originalCommit": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "03d6342f29c23fbe4b63f6c48e48f6af518a9b7f", "url": "https://github.com/apache/shardingsphere/commit/03d6342f29c23fbe4b63f6c48e48f6af518a9b7f", "message": "USE @Setter", "committedDate": "2020-04-26T07:29:09Z", "type": "commit"}, {"oid": "f4e2db415a6d8f2a4b39446814a3bac0742a25c7", "url": "https://github.com/apache/shardingsphere/commit/f4e2db415a6d8f2a4b39446814a3bac0742a25c7", "message": "MODIFY type", "committedDate": "2020-04-26T07:33:16Z", "type": "commit"}]}