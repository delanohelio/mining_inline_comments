{"pr_number": 7772, "pr_title": "Add test case for OracleJDBCSchemaHandler", "pr_createdAt": "2020-10-13T09:43:55Z", "pr_url": "https://github.com/apache/shardingsphere/pull/7772", "timeline": [{"oid": "4f07386abec2ea73503fd414c6262bab702cf6cd", "url": "https://github.com/apache/shardingsphere/commit/4f07386abec2ea73503fd414c6262bab702cf6cd", "message": "Add: add test case for OracleJDBCSchemaHandler (7760)", "committedDate": "2020-10-13T09:39:51Z", "type": "commit"}, {"oid": "a37d3b2a0026bf5499fa19afe5fd2600655b8d45", "url": "https://github.com/apache/shardingsphere/commit/a37d3b2a0026bf5499fa19afe5fd2600655b8d45", "message": "Refactor: update the java doc (7760)", "committedDate": "2020-10-13T09:42:19Z", "type": "commit"}, {"oid": "ac1bf4eec750bcb2694f4217c5ef0985bc7fe95c", "url": "https://github.com/apache/shardingsphere/commit/ac1bf4eec750bcb2694f4217c5ef0985bc7fe95c", "message": "Refactor: refactor the variable name (7760)", "committedDate": "2020-10-13T09:49:23Z", "type": "commit"}, {"oid": "9fb4d3c68544f361c4ce18cdbed332aa236fd660", "url": "https://github.com/apache/shardingsphere/commit/9fb4d3c68544f361c4ce18cdbed332aa236fd660", "message": "Refactor: add more modifier for variable (7760)", "committedDate": "2020-10-13T10:11:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MjIzOA==", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504052238", "bodyText": "Please only keep one line here", "author": "terrymanu", "createdAt": "2020-10-13T15:33:58Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+", "originalCommit": "9fb4d3c68544f361c4ce18cdbed332aa236fd660", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MjUxMQ==", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504052511", "bodyText": "Please do not add java doc for test case", "author": "terrymanu", "createdAt": "2020-10-13T15:34:16Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * Test for JDBC schema handler of Oracle.\n+ */", "originalCommit": "9fb4d3c68544f361c4ce18cdbed332aa236fd660", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1Mjk4MA==", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504052980", "bodyText": "It is unnecessary to assert static value", "author": "terrymanu", "createdAt": "2020-10-13T15:34:54Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * Test for JDBC schema handler of Oracle.\n+ */\n+@RunWith(MockitoJUnitRunner.class)\n+public final class OracleJDBCSchemaHandlerTest {\n+\n+    private static final String USER_NAME = \"root\";\n+\n+    @Mock\n+    private Connection connection;\n+    \n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+    \n+    @Test\n+    public void assertGetType() {\n+        assertThat(new OracleJDBCSchemaHandler().getType(), is(\"Oracle\"));\n+    }", "originalCommit": "9fb4d3c68544f361c4ce18cdbed332aa236fd660", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MzQwNg==", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504053406", "bodyText": "Please use SPI to initialize OracleJDBCSchemaHandler for better test", "author": "terrymanu", "createdAt": "2020-10-13T15:35:22Z", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * Test for JDBC schema handler of Oracle.\n+ */\n+@RunWith(MockitoJUnitRunner.class)\n+public final class OracleJDBCSchemaHandlerTest {\n+\n+    private static final String USER_NAME = \"root\";\n+\n+    @Mock\n+    private Connection connection;\n+    \n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+    \n+    @Test\n+    public void assertGetType() {\n+        assertThat(new OracleJDBCSchemaHandler().getType(), is(\"Oracle\"));\n+    }\n+    \n+    @Test\n+    public void assertGetSchema() throws SQLException {\n+        when(connection.getMetaData()).thenReturn(databaseMetaData);\n+        when(databaseMetaData.getUserName()).thenReturn(USER_NAME);\n+        assertThat(new OracleJDBCSchemaHandler().getSchema(connection), is(USER_NAME.toUpperCase()));", "originalCommit": "9fb4d3c68544f361c4ce18cdbed332aa236fd660", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2cbeac171243e2ee93d077a478e21d8ffb4b1280", "url": "https://github.com/apache/shardingsphere/commit/2cbeac171243e2ee93d077a478e21d8ffb4b1280", "message": "Format: format as code standard (7760)", "committedDate": "2020-10-14T02:06:20Z", "type": "commit"}, {"oid": "8b07e62b019f79f6d17d6dfca731988500ccae23", "url": "https://github.com/apache/shardingsphere/commit/8b07e62b019f79f6d17d6dfca731988500ccae23", "message": "Refactor: use SPI to init the loader (7760)", "committedDate": "2020-10-14T03:48:15Z", "type": "commit"}]}