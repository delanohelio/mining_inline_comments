{"pr_number": 4205, "pr_title": "Add class filter Constructor to restrict the illegal class from YAML", "pr_createdAt": "2020-02-07T14:54:12Z", "pr_url": "https://github.com/apache/shardingsphere/pull/4205", "timeline": [{"oid": "1dd34824298d5632b77f7b8fa06fcdb70c3ecb8e", "url": "https://github.com/apache/shardingsphere/commit/1dd34824298d5632b77f7b8fa06fcdb70c3ecb8e", "message": "Add class filter Constructor to restrict the illegal class from YAML", "committedDate": "2020-02-07T14:14:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0NDMzMA==", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376444330", "bodyText": "may change name from clz to each", "author": "terrymanu", "createdAt": "2020-02-07T15:16:12Z", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/engine/ClassFilterConstructor.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.yaml.engine;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Class filter Constructor for YAML load as map.\n+ *\n+ * @author chenqingyang\n+ */\n+@RequiredArgsConstructor\n+public final class ClassFilterConstructor extends Constructor {\n+    \n+    private final Collection<Class<?>> acceptClasses;\n+    \n+    @Override\n+    protected Class<?> getClassForName(final String name) throws ClassNotFoundException {\n+        for (Class<? extends Object> clz : acceptClasses) {", "originalCommit": "1dd34824298d5632b77f7b8fa06fcdb70c3ecb8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ1MTM5Nw==", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376451397", "bodyText": "ok\uff01", "author": "beckhampu", "createdAt": "2020-02-07T15:28:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0NDMzMA=="}], "type": "inlineReview"}, {"oid": "8ff2d3bbb53d079e2f724230542f3354a40a8a40", "url": "https://github.com/apache/shardingsphere/commit/8ff2d3bbb53d079e2f724230542f3354a40a8a40", "message": "Change variable name to 'each'", "committedDate": "2020-02-07T15:40:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2NDE4Nw==", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376964187", "bodyText": "\"url: !!java.net.URLClassLoader [[!!java.net.URL [\"http://localhost\"]]]\"\nmaybe not enough", "author": "kimmking", "createdAt": "2020-02-10T10:01:10Z", "path": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/engine/YamlEngineTest.java", "diffHunk": "@@ -38,11 +44,25 @@ public void assertUnmarshal() {\n     @SuppressWarnings(\"unchecked\")\n     @Test\n     public void assertUnmarshalMap() {\n-        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\");\n+        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\", Collections.<Class<?>>emptyList());\n         assertThat(actual.get(\"password\").toString(), is(\"pwd\"));\n         assertThat(actual.get(\"authorizedSchemas\").toString(), is(\"db1\"));\n     }\n     \n+    @Test(expected = ConstructorException.class)\n+    public void assertUnmarshalMapWithIllegalClasses() {\n+        YamlEngine.unmarshal(\"url: !!java.net.URLClassLoader [[!!java.net.URL [\\\"http://localhost\\\"]]]\", Collections.<Class<?>>emptyList());", "originalCommit": "8ff2d3bbb53d079e2f724230542f3354a40a8a40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2NDI1MQ==", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376964251", "bodyText": "\"url: !!java.net.URLClassLoader [[!!java.net.URL [\"http://localhost\"]]]\"\nmaybe not enough", "author": "kimmking", "createdAt": "2020-02-10T10:01:18Z", "path": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/engine/YamlEngineTest.java", "diffHunk": "@@ -38,11 +44,25 @@ public void assertUnmarshal() {\n     @SuppressWarnings(\"unchecked\")\n     @Test\n     public void assertUnmarshalMap() {\n-        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\");\n+        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\", Collections.<Class<?>>emptyList());\n         assertThat(actual.get(\"password\").toString(), is(\"pwd\"));\n         assertThat(actual.get(\"authorizedSchemas\").toString(), is(\"db1\"));\n     }\n     \n+    @Test(expected = ConstructorException.class)\n+    public void assertUnmarshalMapWithIllegalClasses() {\n+        YamlEngine.unmarshal(\"url: !!java.net.URLClassLoader [[!!java.net.URL [\\\"http://localhost\\\"]]]\", Collections.<Class<?>>emptyList());", "originalCommit": "8ff2d3bbb53d079e2f724230542f3354a40a8a40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}