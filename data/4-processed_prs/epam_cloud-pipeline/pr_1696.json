{"pr_number": 1696, "pr_title": "Issue #1694 Run network policy manager ", "pr_createdAt": "2020-12-28T12:04:04Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1696", "timeline": [{"oid": "61176701ce54c766a91a1333ca09f968729c6a66", "url": "https://github.com/epam/cloud-pipeline/commit/61176701ce54c766a91a1333ca09f968729c6a66", "message": "Issue #1694 Implement run-policy-manager service", "committedDate": "2020-12-28T11:13:24Z", "type": "commit"}, {"oid": "60b974dd27ec9186a470add3e0ed71d3dc71bdcf", "url": "https://github.com/epam/cloud-pipeline/commit/60b974dd27ec9186a470add3e0ed71d3dc71bdcf", "message": "Issue #1694 Extract separate constants used to retrieve policy details", "committedDate": "2020-12-28T11:13:44Z", "type": "commit"}, {"oid": "4fc186f339fc240075a7a9a6c1211d52376ab638", "url": "https://github.com/epam/cloud-pipeline/commit/4fc186f339fc240075a7a9a6c1211d52376ab638", "message": "Issue #1694 run-policy manager deployment specification", "committedDate": "2020-12-28T11:14:01Z", "type": "commit"}, {"oid": "cda54a139066a473948b45601a12bec63e2b4b7c", "url": "https://github.com/epam/cloud-pipeline/commit/cda54a139066a473948b45601a12bec63e2b4b7c", "message": "Issue #1694 Extend images build and master setup scripts with run-policy manager setup", "committedDate": "2020-12-28T11:37:09Z", "type": "commit"}, {"oid": "e966fee17d3cb9aac0d6a1f4f9c9a5e2cf35d49e", "url": "https://github.com/epam/cloud-pipeline/commit/e966fee17d3cb9aac0d6a1f4f9c9a5e2cf35d49e", "message": "Issue #1694 Load k8s config before loading pods list", "committedDate": "2020-12-28T11:37:52Z", "type": "commit"}, {"oid": "647ba890dfe8765cb1f40a04b5cfbc6677d1c2ba", "url": "https://github.com/epam/cloud-pipeline/commit/647ba890dfe8765cb1f40a04b5cfbc6677d1c2ba", "message": "Issue #1694 Limit pods for analysis: select the ones in 'Pending' and 'Running' phase", "committedDate": "2020-12-28T13:03:59Z", "type": "commit"}, {"oid": "9bc9b7ca02de1cd8bb38d333cca598429f6ddfea", "url": "https://github.com/epam/cloud-pipeline/commit/9bc9b7ca02de1cd8bb38d333cca598429f6ddfea", "message": "Issue #1694 Check if a policy with the required name exists already before creation to avoid policy erasure in case of users' name are clashing after sanitizing", "committedDate": "2020-12-28T14:35:35Z", "type": "commit"}, {"oid": "cf5f2aab841454ca30b523238c25ecc1f1ddfb11", "url": "https://github.com/epam/cloud-pipeline/commit/cf5f2aab841454ca30b523238c25ecc1f1ddfb11", "message": "Issue #1694 Fix name sanitizing regexp", "committedDate": "2020-12-28T14:37:19Z", "type": "commit"}, {"oid": "fa9708b1cfaf6dffd9953ce3c390c9724aae37c8", "url": "https://github.com/epam/cloud-pipeline/commit/fa9708b1cfaf6dffd9953ce3c390c9724aae37c8", "message": "Issue #1694 Fix policy existence checking", "committedDate": "2020-12-28T17:13:18Z", "type": "commit"}, {"oid": "2c6ca9d9bb7a704652a99a48e2f5b75f31f6903e", "url": "https://github.com/epam/cloud-pipeline/commit/2c6ca9d9bb7a704652a99a48e2f5b75f31f6903e", "message": "Issue #1694 Fix logging, use single-quoted strings everywhere", "committedDate": "2020-12-28T19:20:35Z", "type": "commit"}, {"oid": "d76a689a0d23b0491a3ebced628d05775588b2ef", "url": "https://github.com/epam/cloud-pipeline/commit/d76a689a0d23b0491a3ebced628d05775588b2ef", "message": "Issue #1694 Use listing with field_selector instead of retrieving object by name to avoid exceptions", "committedDate": "2020-12-29T09:53:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1NjM4NQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1696#discussion_r549656385", "bodyText": "Let's make these paths customizable via env vars", "author": "mzueva", "createdAt": "2020-12-29T10:40:13Z", "path": "deploy/docker/cp-run-policy-manager/policy_manager.py", "diffHunk": "@@ -0,0 +1,188 @@\n+# Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import datetime\n+import os\n+import re\n+import time\n+import uuid\n+import yaml\n+from kubernetes import client, config\n+\n+NAMESPACE = 'default'\n+CALICO_NETPOL_PLURAL = 'networkpolicies'\n+CALICO_RESOURCES_VERSION = 'v1'\n+CALICO_RESOURCES_GROUP = 'crd.projectcalico.org'\n+K8S_OBJ_NAME_KEY = 'name'\n+K8S_LABELS_KEY = 'labels'\n+K8S_METADATA_KEY = 'metadata'\n+K8S_METADATA_NAME_FIELD_SELECTOR = 'metadata.name={}'\n+NETPOL_OWNER_PLACEHOLDER = '<OWNER>'\n+NETPOL_NAME_PREFIX_PLACEHOLDER = '<POLICY_NAME_PREFIX>'\n+OWNER_LABEL = 'owner'\n+PIPELINE_POD_LABEL_SELECTOR = 'type=pipeline'\n+PIPELINE_POD_PHASE_SELECTOR = 'status.phase={}'\n+SENSITIVE_LABEL = 'sensitive'\n+TRACKED_POD_PHASES = ['Pending', 'Running']\n+COMMON_NETPOL_TEMPLATE_PATH = '/policy-manager/common-run-policy-template.yaml'", "originalCommit": "d76a689a0d23b0491a3ebced628d05775588b2ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1Njg1OQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1696#discussion_r549656859", "bodyText": "Username is often a email, let's split name by @ sign at first, as it is done in other services. E.g. mariia_zueva@epam.com -> mariia-zueva", "author": "mzueva", "createdAt": "2020-12-29T10:41:53Z", "path": "deploy/docker/cp-run-policy-manager/policy_manager.py", "diffHunk": "@@ -0,0 +1,188 @@\n+# Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import datetime\n+import os\n+import re\n+import time\n+import uuid\n+import yaml\n+from kubernetes import client, config\n+\n+NAMESPACE = 'default'\n+CALICO_NETPOL_PLURAL = 'networkpolicies'\n+CALICO_RESOURCES_VERSION = 'v1'\n+CALICO_RESOURCES_GROUP = 'crd.projectcalico.org'\n+K8S_OBJ_NAME_KEY = 'name'\n+K8S_LABELS_KEY = 'labels'\n+K8S_METADATA_KEY = 'metadata'\n+K8S_METADATA_NAME_FIELD_SELECTOR = 'metadata.name={}'\n+NETPOL_OWNER_PLACEHOLDER = '<OWNER>'\n+NETPOL_NAME_PREFIX_PLACEHOLDER = '<POLICY_NAME_PREFIX>'\n+OWNER_LABEL = 'owner'\n+PIPELINE_POD_LABEL_SELECTOR = 'type=pipeline'\n+PIPELINE_POD_PHASE_SELECTOR = 'status.phase={}'\n+SENSITIVE_LABEL = 'sensitive'\n+TRACKED_POD_PHASES = ['Pending', 'Running']\n+COMMON_NETPOL_TEMPLATE_PATH = '/policy-manager/common-run-policy-template.yaml'\n+SENSITIVE_NETPOL_TEMPLATE_PATH = '/policy-manager/sensitive-run-policy-template.yaml'\n+\n+MONITORING_PERIOD_SEC = int(os.getenv('RUN_OWNER_POLICY_POLL_PERIOD_SEC', 5))\n+\n+\n+def log_message(message):\n+    print('[{}] {}'.format(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'), message))\n+\n+\n+def get_custom_resource_api():\n+    config.load_kube_config()\n+    return client.CustomObjectsApi()\n+\n+\n+def load_all_active_policies():\n+    api = get_custom_resource_api()\n+    policies_response = api.list_namespaced_custom_object(group=CALICO_RESOURCES_GROUP,\n+                                                          version=CALICO_RESOURCES_VERSION,\n+                                                          namespace=NAMESPACE,\n+                                                          plural=CALICO_NETPOL_PLURAL)\n+    return policies_response['items']\n+\n+\n+def create_policy(owner, is_sensitive):\n+    log_message('Creating policy for [{}{}]'.format(owner, '-sensitive' if is_sensitive else ''))\n+    api = get_custom_resource_api()\n+    policy_yaml = create_policy_yaml_object(owner, is_sensitive)\n+    policy_name_template = policy_yaml[K8S_METADATA_KEY][K8S_OBJ_NAME_KEY]\n+    sanitized_owner_name = sanitize_name(owner)\n+    policy_name_candidate = policy_name_template.replace(NETPOL_NAME_PREFIX_PLACEHOLDER, sanitized_owner_name)\n+    while True:\n+        existing_policy_response = api.list_namespaced_custom_object(group=CALICO_RESOURCES_GROUP,\n+                                                                     version=CALICO_RESOURCES_VERSION,\n+                                                                     namespace=NAMESPACE,\n+                                                                     plural=CALICO_NETPOL_PLURAL,\n+                                                                     field_selector=K8S_METADATA_NAME_FIELD_SELECTOR\n+                                                                     .format(policy_name_candidate))\n+        if len(existing_policy_response.get('items')) > 0:\n+            log_message('Policy with name [{}] exists already: generating suffix for the current one.'\n+                        .format(policy_name_candidate))\n+            policy_name_candidate = policy_name_template.replace(NETPOL_NAME_PREFIX_PLACEHOLDER,\n+                                                                 sanitized_owner_name + '-' + str(uuid.uuid4())[:8])\n+        else:\n+            policy_yaml[K8S_METADATA_KEY][K8S_OBJ_NAME_KEY] = policy_name_candidate\n+            api.create_namespaced_custom_object(group=CALICO_RESOURCES_GROUP,\n+                                                version=CALICO_RESOURCES_VERSION,\n+                                                namespace=NAMESPACE,\n+                                                plural=CALICO_NETPOL_PLURAL,\n+                                                body=policy_yaml)\n+            log_message('Policy [{}] created successfully'.format(policy_name_candidate))\n+            break\n+\n+\n+def sanitize_name(name: str):\n+    return re.sub('[^A-Za-z0-9]+', '-', name).lower()", "originalCommit": "d76a689a0d23b0491a3ebced628d05775588b2ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3eded367ec4f41e9a5783cdcfdfb19d47d001bee", "url": "https://github.com/epam/cloud-pipeline/commit/3eded367ec4f41e9a5783cdcfdfb19d47d001bee", "message": "Issue #1694 Allow specifying path to policies templates via env vars, use correct naming conventions for env vars", "committedDate": "2020-12-29T11:27:54Z", "type": "commit"}]}