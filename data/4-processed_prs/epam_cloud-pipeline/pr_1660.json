{"pr_number": 1660, "pr_title": "issue #1656 fetch launch system params for the workers", "pr_createdAt": "2020-12-16T16:53:28Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1660", "timeline": [{"oid": "475496296a9979d5b255b8e15f151084ef929a28", "url": "https://github.com/epam/cloud-pipeline/commit/475496296a9979d5b255b8e15f151084ef929a28", "message": "issue #1656 get launch system params for the workers", "committedDate": "2020-12-16T16:50:44Z", "type": "commit"}, {"oid": "6b2d4870f0dec037c563d88da3f646c9a1430334", "url": "https://github.com/epam/cloud-pipeline/commit/6b2d4870f0dec037c563d88da3f646c9a1430334", "message": "issue 1656 add CP_CAP_LIMIT_MOUNTS to launch.system.parameters.json", "committedDate": "2020-12-17T08:45:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE3NDg3NA==", "url": "https://github.com/epam/cloud-pipeline/pull/1660#discussion_r545174874", "bodyText": "Could you please use ' rather than \" like in the most of the script?", "author": "tcibinan", "createdAt": "2020-12-17T15:24:05Z", "path": "workflows/pipe-common/scripts/autoscale_sge.py", "diffHunk": "@@ -627,19 +627,28 @@ def _launch_additional_worker(self, instance):\n                            '--region-id %s ' \\\n                            'cluster_role worker ' \\\n                            'cluster_role_type additional ' \\\n-                           'CP_CAP_SGE false ' \\\n-                           'CP_CAP_AUTOSCALE false ' \\\n-                           'CP_CAP_AUTOSCALE_WORKERS 0 ' \\\n-                           'CP_DISABLE_RUN_ENDPOINTS true ' \\\n-                           'CP_CAP_SHARE_FS_TYPE %s ' \\\n+                           '%s' \\\n                            % (self.instance_disk, instance, self.instance_image, self.cmd_template, self.parent_run_id,\n-                              self._pipe_cli_price_type(self.price_type), self.region_id, self.shared_fs_type)\n-        if self.limit_mounts:\n-            pipe_run_command = pipe_run_command + ' CP_CAP_LIMIT_MOUNTS \"%s\"' % self.limit_mounts\n+                              self._pipe_cli_price_type(self.price_type), self.region_id, worker_launch_system_params)\n         run_id = int(self.executor.execute_to_lines(pipe_run_command)[0])\n         Logger.info('Additional worker run id is %s.' % run_id)\n         return run_id\n \n+    def fetch_worker_launch_system_params(self, parent_run):\n+        master_system_params = {param.get(\"name\"): param.get(\"resolvedValue\") for param in parent_run.get(\"pipelineRunParameters\", [])}\n+        system_launch_params_string = self.api.retrieve_preference('launch.system.parameters', default_value=\"[]\")\n+        system_launch_params = json.loads(system_launch_params_string)\n+        worker_launch_system_params = 'CP_CAP_SGE false ' \\\n+                                      'CP_CAP_AUTOSCALE false ' \\\n+                                      'CP_CAP_AUTOSCALE_WORKERS 0 ' \\\n+                                      'CP_DISABLE_RUN_ENDPOINTS true '\n+        for launch_param in system_launch_params:\n+            param_name = launch_param.get(\"name\")\n+            if launch_param.get(\"passToWorkers\", False) and param_name in master_system_params:\n+                worker_launch_system_params = worker_launch_system_params + \\\n+                                              \" {} {}\".format(param_name, master_system_params.get(param_name))\n+        return worker_launch_system_params", "originalCommit": "6b2d4870f0dec037c563d88da3f646c9a1430334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MDc3MQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1660#discussion_r545180771", "bodyText": "There is a helpful += operator for such appends.", "author": "tcibinan", "createdAt": "2020-12-17T15:31:29Z", "path": "workflows/pipe-common/scripts/autoscale_sge.py", "diffHunk": "@@ -627,19 +627,28 @@ def _launch_additional_worker(self, instance):\n                            '--region-id %s ' \\\n                            'cluster_role worker ' \\\n                            'cluster_role_type additional ' \\\n-                           'CP_CAP_SGE false ' \\\n-                           'CP_CAP_AUTOSCALE false ' \\\n-                           'CP_CAP_AUTOSCALE_WORKERS 0 ' \\\n-                           'CP_DISABLE_RUN_ENDPOINTS true ' \\\n-                           'CP_CAP_SHARE_FS_TYPE %s ' \\\n+                           '%s' \\\n                            % (self.instance_disk, instance, self.instance_image, self.cmd_template, self.parent_run_id,\n-                              self._pipe_cli_price_type(self.price_type), self.region_id, self.shared_fs_type)\n-        if self.limit_mounts:\n-            pipe_run_command = pipe_run_command + ' CP_CAP_LIMIT_MOUNTS \"%s\"' % self.limit_mounts\n+                              self._pipe_cli_price_type(self.price_type), self.region_id, worker_launch_system_params)\n         run_id = int(self.executor.execute_to_lines(pipe_run_command)[0])\n         Logger.info('Additional worker run id is %s.' % run_id)\n         return run_id\n \n+    def fetch_worker_launch_system_params(self, parent_run):\n+        master_system_params = {param.get(\"name\"): param.get(\"resolvedValue\") for param in parent_run.get(\"pipelineRunParameters\", [])}\n+        system_launch_params_string = self.api.retrieve_preference('launch.system.parameters', default_value=\"[]\")\n+        system_launch_params = json.loads(system_launch_params_string)\n+        worker_launch_system_params = 'CP_CAP_SGE false ' \\\n+                                      'CP_CAP_AUTOSCALE false ' \\\n+                                      'CP_CAP_AUTOSCALE_WORKERS 0 ' \\\n+                                      'CP_DISABLE_RUN_ENDPOINTS true '\n+        for launch_param in system_launch_params:\n+            param_name = launch_param.get(\"name\")\n+            if launch_param.get(\"passToWorkers\", False) and param_name in master_system_params:\n+                worker_launch_system_params = worker_launch_system_params + \\", "originalCommit": "6b2d4870f0dec037c563d88da3f646c9a1430334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4NDU0NA==", "url": "https://github.com/epam/cloud-pipeline/pull/1660#discussion_r545184544", "bodyText": "It seems like a good idea to move this initialization logic to the beginning of main method. It makes the whole autoscaling launch consistent independently of changes in the system preference.", "author": "tcibinan", "createdAt": "2020-12-17T15:36:18Z", "path": "workflows/pipe-common/scripts/autoscale_sge.py", "diffHunk": "@@ -617,6 +614,9 @@ def scale_up(self, resource):\n \n     def _launch_additional_worker(self, instance):\n         Logger.info('Launch additional worker.')\n+        parent_run = self.api.load_run(self.parent_run_id)\n+        worker_launch_system_params = self.fetch_worker_launch_system_params(parent_run)", "originalCommit": "6b2d4870f0dec037c563d88da3f646c9a1430334", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e6279634f4904a19885ed2211702c500f2ae71d9", "url": "https://github.com/epam/cloud-pipeline/commit/e6279634f4904a19885ed2211702c500f2ae71d9", "message": "issue 1656 load worker args at the beginning", "committedDate": "2020-12-18T13:44:56Z", "type": "commit"}]}