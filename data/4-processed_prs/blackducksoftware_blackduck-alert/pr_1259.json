{"pr_number": 1259, "pr_title": "BlackDuck Project Paging", "pr_createdAt": "2020-11-13T18:39:57Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1259", "timeline": [{"oid": "140289da4dd913dc9c0b84ea896bb914c28fe562", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/140289da4dd913dc9c0b84ea896bb914c28fe562", "message": "Feat(Provider): Begin adding paging support to provider projects custom endpoint", "committedDate": "2020-11-12T17:00:52Z", "type": "commit"}, {"oid": "d72db282912953ab7d403d840f155e152af82ec5", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d72db282912953ab7d403d840f155e152af82ec5", "message": "Feat(Provider): Add paging support to provider-projects in the UI", "committedDate": "2020-11-12T20:19:51Z", "type": "commit"}, {"oid": "8f93253088312390d3fe4720e3b3fb5744214fcd", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8f93253088312390d3fe4720e3b3fb5744214fcd", "message": "Feat(Provider): Add paging logic in blackduck provider data accessor", "committedDate": "2020-11-12T21:15:34Z", "type": "commit"}, {"oid": "b3f6c4b171b4dd5ba6153b559bc7ae913a38f72f", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b3f6c4b171b4dd5ba6153b559bc7ae913a38f72f", "message": "Fix(BlackDuck): Compute page count total from elements total and validate paging params", "committedDate": "2020-11-13T14:18:26Z", "type": "commit"}, {"oid": "9c8be3723429ee2547bd5162f0f7f8728abdf68d", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9c8be3723429ee2547bd5162f0f7f8728abdf68d", "message": "Test(BlackDuck): Add mock for new data accessor method", "committedDate": "2020-11-13T14:47:20Z", "type": "commit"}, {"oid": "a85d10a861b57b78c0d1f8560fd41c9a99296f07", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a85d10a861b57b78c0d1f8560fd41c9a99296f07", "message": "Fix(BlackDuck): Update back-end paged request to BlackDuck", "committedDate": "2020-11-13T17:18:08Z", "type": "commit"}, {"oid": "de4d3ee4a93123334a99533a45958add510a26d5", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/de4d3ee4a93123334a99533a45958add510a26d5", "message": "Fix(UI): Update table select input to be concious of paged input", "committedDate": "2020-11-13T18:36:05Z", "type": "commit"}, {"oid": "7c837883952ac7fcc760bf58e86851bc63a0e560", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/7c837883952ac7fcc760bf58e86851bc63a0e560", "message": "Fix(UI): Remove commented code for table select input", "committedDate": "2020-11-13T18:38:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE1ODM0NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1259#discussion_r523158345", "bodyText": "We don't have to change this in this version of Alert but I think this is a good argument for getting rid of the dynamic endpoints and just create controllers/endpoints as we need. Having to extract the parameters this way is not appealing.", "author": "jamesrichard91", "createdAt": "2020-11-13T18:50:41Z", "path": "web/src/main/java/com/synopsys/integration/alert/web/api/provider/project/ProviderProjectCustomFunctionAction.java", "diffHunk": "@@ -60,23 +67,48 @@ public ProviderProjectCustomFunctionAction(AuthorizationManager authorizationMan\n \n     @Override\n     public ActionResponse<ProviderProjectOptions> createActionResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) {\n+        HttpServletRequest httpRequest = servletContentWrapper.getHttpRequest();\n+        Map<String, String[]> parameterMap = httpRequest.getParameterMap();\n+\n+        int pageNumber = extractPagingParam(parameterMap, \"pageNumber\", 0);\n+        int pageSize = extractPagingParam(parameterMap, \"pageSize\", 10);", "originalCommit": "7c837883952ac7fcc760bf58e86851bc63a0e560", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MDMwNg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1259#discussion_r523160306", "bodyText": "Agreed. I think it will be part of a larger effort to rewrite the Jobs UI to have tightly coupled channel endpoints.", "author": "gkillough", "createdAt": "2020-11-13T18:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE1ODM0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNjAyNA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1259#discussion_r523206024", "bodyText": "We cannot support \"missing\" data with paging because the data could be in a different page that has yet to be retrieved.", "author": "gkillough", "createdAt": "2020-11-13T20:28:51Z", "path": "ui/src/main/js/field/input/TableSelectInput.js", "diffHunk": "@@ -72,51 +75,30 @@ class TableSelectInput extends Component {\n         this.state = {\n             progress: false,\n             showTable: false,\n+            currentPage: 1,\n+            currentPageSize: 10,\n+            totalPageCount: 0,\n+            currentSearchTerm: '',\n             data: [],\n             selectedData: [],\n             displayedData: [],\n             showClearConfirm: false\n         };\n     }\n \n-    // FIXME componentWillMount is deprecated, use the constructor or componentDidMount to initialize this\n-    componentWillMount() {\n-        const { value } = this.props;\n-        if (value && value.length > 0) {\n-            this.retrieveTableData().then(() => {\n-                this.updateSelectedValues();\n-            });\n-        }\n-    }\n-\n-    componentDidUpdate(prevProps) {\n-        const { value } = this.props;\n-        const prevSize = prevProps.value && prevProps.value.length === 0;\n-        const currentSize = value && value.length > 0;\n-        const emptySelected = this.state.selectedData.length === 0;\n-        if (prevSize && currentSize && emptySelected) {\n-            if (this.state.data.length == 0) {\n-                this.retrieveTableData().then(() => {\n-                    this.updateSelectedValues();\n-                });\n-            } else {\n-                this.updateSelectedValues();\n-            }\n-        }\n+    componentDidMount() {\n+        this.updateSelectedValues();\n     }\n \n     updateSelectedValues() {\n         const { value } = this.props;\n-        const { selectedData, data } = this.state;\n+        const { selectedData } = this.state;\n         selectedData.push(...value);\n-        const keyColumnHeader = this.props.columns.find((column) => column.isKey).header;\n         const convertedValues = selectedData.map((selected) => {\n-            const columnContainsValue = data.map((dataValue) => dataValue[keyColumnHeader])\n-                .includes(selected);\n             return {\n                 label: selected,\n                 value: selected,\n-                missing: !columnContainsValue\n+                missing: false", "originalCommit": "7c837883952ac7fcc760bf58e86851bc63a0e560", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a19fe56997bfcff84336a68160c51d947653eb57", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a19fe56997bfcff84336a68160c51d947653eb57", "message": "Fix(Test): Update mock provider data accessor test to use sub-list for page mocking", "committedDate": "2020-11-13T20:34:12Z", "type": "commit"}, {"oid": "f0c502932c696554d7ee4c851f65024bdc674aa5", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f0c502932c696554d7ee4c851f65024bdc674aa5", "message": "Feat(UI): Support searching if allowed by endpoint", "committedDate": "2020-11-13T21:09:33Z", "type": "commit"}, {"oid": "e95acdd396dfd96f6be42d7324a6fbd17fb9232b", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e95acdd396dfd96f6be42d7324a6fbd17fb9232b", "message": "Feat(BlackDuck): Add search to provider projects endpoint", "committedDate": "2020-11-13T21:40:15Z", "type": "commit"}]}