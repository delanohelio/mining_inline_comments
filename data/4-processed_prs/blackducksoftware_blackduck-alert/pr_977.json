{"pr_number": 977, "pr_title": "db id fix", "pr_createdAt": "2020-05-14T13:55:10Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/977", "timeline": [{"oid": "99b649a36f819e0f0fb5c9555314dd8f82dbbe94", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/99b649a36f819e0f0fb5c9555314dd8f82dbbe94", "message": "test: Make the testcontainers image persistent via variable.", "committedDate": "2020-05-05T18:49:35Z", "type": "commit"}, {"oid": "054d0121ef715a5cdc4dbe583b910e9426679a27", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/054d0121ef715a5cdc4dbe583b910e9426679a27", "message": "Merge remote-tracking branch 'origin/6.0.0' into ps_db_id_fix", "committedDate": "2020-05-08T11:47:12Z", "type": "commit"}, {"oid": "ef5b0af39deef8c206aca461b697825b8c39f7ab", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ef5b0af39deef8c206aca461b697825b8c39f7ab", "message": "build: Use an explicit version of liquibase.", "committedDate": "2020-05-08T19:31:50Z", "type": "commit"}, {"oid": "9996219be699b330d8b6c1a5209a5101e7f7c541", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9996219be699b330d8b6c1a5209a5101e7f7c541", "message": "Merge remote-tracking branch 'origin/6.0.0' into ps_db_id_fix", "committedDate": "2020-05-08T19:59:21Z", "type": "commit"}, {"oid": "a868d64f095b041131790e3f2b79edb0fff7ba60", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a868d64f095b041131790e3f2b79edb0fff7ba60", "message": "Fix: Change the id generation to use sequences.", "committedDate": "2020-05-11T20:12:47Z", "type": "commit"}, {"oid": "9e70ba8167c5fc3700fb6db454e3047329872b24", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9e70ba8167c5fc3700fb6db454e3047329872b24", "message": "Fix: Update tests to deal with ID generation.", "committedDate": "2020-05-11T20:13:21Z", "type": "commit"}, {"oid": "5d63b9b53488dc71788254f71ff97148a3a7f1e4", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5d63b9b53488dc71788254f71ff97148a3a7f1e4", "message": "Fix: Use single increment on ids for authentication_type table.", "committedDate": "2020-05-11T20:27:20Z", "type": "commit"}, {"oid": "7243f0ea1408904ca23391d33a191c61ff697311", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/7243f0ea1408904ca23391d33a191c61ff697311", "message": "fix: Use identity types for meta-data tables.", "committedDate": "2020-05-12T10:26:50Z", "type": "commit"}, {"oid": "3f33d8b939420c9c486f816137d5d644bb468ca9", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3f33d8b939420c9c486f816137d5d644bb468ca9", "message": "build: Update the build number for testing.", "committedDate": "2020-05-12T10:44:30Z", "type": "commit"}, {"oid": "31fdfb345acc56fae3455c23387aa89da191f74e", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/31fdfb345acc56fae3455c23387aa89da191f74e", "message": "fix: Add a component to read data from the database to initialize JPA.", "committedDate": "2020-05-12T18:28:49Z", "type": "commit"}, {"oid": "635566ef1b452edc21a2f728d0ef6d2d828e7742", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/635566ef1b452edc21a2f728d0ef6d2d828e7742", "message": "fix: Remove environment variable override.", "committedDate": "2020-05-12T20:07:44Z", "type": "commit"}, {"oid": "46c0f3d57cc06eb62e41e677e66b0416707ddc6a", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/46c0f3d57cc06eb62e41e677e66b0416707ddc6a", "message": "test: Add logging statements to confirm logic.", "committedDate": "2020-05-13T13:29:25Z", "type": "commit"}, {"oid": "4548d045d85404abbe2b01a031779b5936e967dc", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4548d045d85404abbe2b01a031779b5936e967dc", "message": "fix: Only release changelocks first when upgrading to 6.0.0.", "committedDate": "2020-05-13T13:44:24Z", "type": "commit"}, {"oid": "497542357fd313c522e88c1bcb206c4906819126", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/497542357fd313c522e88c1bcb206c4906819126", "message": "fix: Remove the override environment variable if it exists.", "committedDate": "2020-05-13T16:21:07Z", "type": "commit"}, {"oid": "acbc70919abd04f1f83935f91be4b5335dae3c3f", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/acbc70919abd04f1f83935f91be4b5335dae3c3f", "message": "fix: Change init script to be run multiple times without failing.", "committedDate": "2020-05-14T13:12:16Z", "type": "commit"}, {"oid": "37019eea2fcc53f346d45577b7652ff9dea6c815", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/37019eea2fcc53f346d45577b7652ff9dea6c815", "message": "Merge remote-tracking branch 'origin/6.0.0' into ps_db_id_fix", "committedDate": "2020-05-14T13:12:42Z", "type": "commit"}, {"oid": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4c1cbad3336f6a30cd91e8327b207395e49e9568", "message": "refactor: Add and remove comments for clarification.", "committedDate": "2020-05-14T13:48:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE1OTExMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425159112", "bodyText": "If I recall correctly, we don't want to declare this because we are not maintaining multiple versions of the same java objects. You should be able to turn off the warning and generation of this from your Intellij settings.", "author": "gkillough", "createdAt": "2020-05-14T13:59:31Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/BaseEntity.java", "diffHunk": "@@ -30,6 +30,9 @@\n \n @MappedSuperclass\n public abstract class BaseEntity extends Stringable implements Serializable {\n+    public static final int DEFAULT_ALLOCATION_SIZE = 50;\n+    private static final long serialVersionUID = 5939107067779376362L;", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MDg2Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425160866", "bodyText": "I will disable it and fix the files I changed that added it.", "author": "psantos1113", "createdAt": "2020-05-14T14:01:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE1OTExMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2Mjc2Nw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425162767", "bodyText": "I think the generator and sequence name should be different to minimize confusion because the generator represents a Hibernate object and the sequence represents a Postgres object. Adding a suffix should suffice.\nExample:\n@GeneratedValue(generator = \"alert.audit_entries_id_seq_generator\", ...)\n@SequenceGenerator(name = \"alert.audit_entries_id_seq_generator\", sequenceName = \"alert.audit_entries_id_seq\", ...)", "author": "gkillough", "createdAt": "2020-05-14T14:04:29Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/audit/AuditEntryEntity.java", "diffHunk": "@@ -28,21 +28,31 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.persistence.OneToMany;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n \n import org.hibernate.annotations.Type;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n @Table(schema = \"alert\", name = \"audit_entries\")\n-public class AuditEntryEntity extends DatabaseEntity {\n+public class AuditEntryEntity extends BaseEntity implements DatabaseEntity {\n     public static final int STACK_TRACE_CHAR_LIMIT = 10000;\n-\n+    private static final long serialVersionUID = 33941320371984275L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.audit_entries_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.audit_entries_id_seq\", sequenceName = \"alert.audit_entries_id_seq\", allocationSize = BaseEntity.DEFAULT_ALLOCATION_SIZE)", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MzczNA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425163734", "bodyText": "Another sequence generator.", "author": "gkillough", "createdAt": "2020-05-14T14:05:50Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/certificates/CustomCertificateEntity.java", "diffHunk": "@@ -26,14 +26,24 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n @Table(schema = \"alert\", name = \"custom_certificates\")\n-public class CustomCertificateEntity extends DatabaseEntity {\n+public class CustomCertificateEntity extends BaseEntity implements DatabaseEntity {\n     private static final long serialVersionUID = -4913195698406375327L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.custom_certificates_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.custom_certificates_id_seq\", sequenceName = \"alert.custom_certificates_id_seq\")", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MTA5Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425171096", "bodyText": "Another sequence generator.", "author": "gkillough", "createdAt": "2020-05-14T14:15:37Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/configuration/FieldValueEntity.java", "diffHunk": "@@ -24,28 +24,39 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n import javax.persistence.JoinColumn;\n import javax.persistence.ManyToOne;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n-@Table(schema = \"ALERT\", name = \"FIELD_VALUES\")\n-public class FieldValueEntity extends DatabaseEntity {\n-    @Column(name = \"CONFIG_ID\")\n+@Table(schema = \"alert\", name = \"field_values\")\n+public class FieldValueEntity extends BaseEntity implements DatabaseEntity {\n+    private static final long serialVersionUID = -7397653009915302223L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.field_values_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.field_values_id_seq\", sequenceName = \"alert.field_values_id_seq\")", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MTYzOA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425171638", "bodyText": "Another sequence generator.", "author": "gkillough", "createdAt": "2020-05-14T14:16:22Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/notification/NotificationEntity.java", "diffHunk": "@@ -28,17 +28,28 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n import javax.persistence.OneToMany;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n import com.synopsys.integration.alert.database.audit.AuditNotificationRelation;\n \n @Entity\n @Table(schema = \"alert\", name = \"raw_notification_content\")\n-public class NotificationEntity extends DatabaseEntity {\n+public class NotificationEntity extends BaseEntity implements DatabaseEntity {\n+    private static final long serialVersionUID = -3311174366504578531L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.raw_notification_content_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.raw_notification_content_id_seq\", sequenceName = \"alert.raw_notification_content_id_seq\")", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MjIxNA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425172214", "bodyText": "Another sequence.", "author": "gkillough", "createdAt": "2020-05-14T14:17:06Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/provider/project/ProviderProjectEntity.java", "diffHunk": "@@ -24,13 +24,24 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n @Table(schema = \"alert\", name = \"provider_projects\")\n-public class ProviderProjectEntity extends DatabaseEntity {\n+public class ProviderProjectEntity extends BaseEntity implements DatabaseEntity {\n+    private static final long serialVersionUID = -4531479306446899960L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.provider_projects_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.provider_projects_id_seq\", sequenceName = \"alert.provider_projects_id_seq\")", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MjQ2OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425172468", "bodyText": "Another sequence.", "author": "gkillough", "createdAt": "2020-05-14T14:17:27Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/provider/user/ProviderUserEntity.java", "diffHunk": "@@ -24,13 +24,24 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n @Table(schema = \"alert\", name = \"provider_users\")\n-public class ProviderUserEntity extends DatabaseEntity {\n+public class ProviderUserEntity extends BaseEntity implements DatabaseEntity {\n+    private static final long serialVersionUID = 8474532281909078883L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.provider_users_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.provider_users_id_seq\", sequenceName = \"alert.provider_users_id_seq\")", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3Mzk2MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425173961", "bodyText": "Do we perform bulk inserts on this table? We might be able to get away with IDENTITY here.", "author": "gkillough", "createdAt": "2020-05-14T14:19:23Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/settings/SettingsKeyEntity.java", "diffHunk": "@@ -24,17 +24,28 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n @Table(schema = \"alert\", name = \"settings_key\")\n-public class SettingsKeyEntity extends DatabaseEntity {\n-    @Column\n+public class SettingsKeyEntity extends BaseEntity implements DatabaseEntity {\n+    private static final long serialVersionUID = 7078325297864692468L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.settings_key_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.settings_key_id_seq\", sequenceName = \"alert.settings_key_id_seq\")\n+    @Column(name = \"id\")\n+    private Long id;", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3OTcyMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425179723", "bodyText": "Do we perform bulk inserts here? I would assume we do for provider_users, but I'm surprised about this one.", "author": "gkillough", "createdAt": "2020-05-14T14:26:44Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/user/UserEntity.java", "diffHunk": "@@ -24,13 +24,24 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n @Table(schema = \"alert\", name = \"users\")\n-public class UserEntity extends DatabaseEntity {\n+public class UserEntity extends BaseEntity implements DatabaseEntity {\n+    private static final long serialVersionUID = -5139140762636521918L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.users_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.users_id_seq\", sequenceName = \"alert.users_id_seq\")\n+    @Column(name = \"id\")\n+    private Long id;", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDk5Mg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425180992", "bodyText": "This is another table that I'm surprised we perform bulk inserts on.", "author": "gkillough", "createdAt": "2020-05-14T14:28:27Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/user/RoleEntity.java", "diffHunk": "@@ -24,13 +24,24 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.SequenceGenerator;\n import javax.persistence.Table;\n \n+import com.synopsys.integration.alert.database.BaseEntity;\n import com.synopsys.integration.alert.database.DatabaseEntity;\n \n @Entity\n @Table(schema = \"alert\", name = \"roles\")\n-public class RoleEntity extends DatabaseEntity {\n+public class RoleEntity extends BaseEntity implements DatabaseEntity {\n+    private static final long serialVersionUID = 7928926209935268556L;\n+    @Id\n+    @GeneratedValue(generator = \"alert.roles_id_seq\", strategy = GenerationType.SEQUENCE)\n+    @SequenceGenerator(name = \"alert.roles_id_seq\", sequenceName = \"alert.roles_id_seq\")\n+    @Column(name = \"id\")", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MjQyNg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425182426", "bodyText": "Nice. I'm glad you recognized the need for this. It took me forever to figure out how to synchronize with hibernate's generation strategy.", "author": "gkillough", "createdAt": "2020-05-14T14:30:17Z", "path": "alert-database/src/main/resources/scripts/init_alert_db.sql", "diffHunk": "@@ -313,3 +313,16 @@ create table if not exists PUBLIC.DATABASECHANGELOG\n     LABELS        VARCHAR(255),\n     DEPLOYMENT_ID VARCHAR(10)\n );\n+\n+-- In order for the sequences to match up correctly in hibernate with postgres set the increment to hibernates default allocation size of 50.\n+ALTER SEQUENCE alert.audit_entries_id_seq INCREMENT 50;", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NDQ0Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425184443", "bodyText": "I wonder if there's a way to just get the transaction manager or persistence manager and flush at the top level.", "author": "gkillough", "createdAt": "2020-05-14T14:32:45Z", "path": "src/test/java/com/synopsys/integration/alert/audit/controller/AuditEntryControllerTestIT.java", "diffHunk": "@@ -94,6 +94,12 @@ public void setup() throws AlertDatabaseConstraintException {\n \n     @AfterEach\n     public void cleanup() throws AlertDatabaseConstraintException {\n+        auditEntryRepository.flush();\n+        descriptorConfigRepository.flush();\n+        fieldValueRepository.flush();\n+        auditNotificationRepository.flush();\n+        notificationRepository.flush();", "originalCommit": "4c1cbad3336f6a30cd91e8327b207395e49e9568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxMzY0Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425213643", "bodyText": "I think there is a different way to define and setup testcontainers with the tests that need a database to provide a clean instance with each test.  I would like to revisit this because I think we can do better.", "author": "psantos1113", "createdAt": "2020-05-14T15:11:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NDQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIzMzQwMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/977#discussion_r425233403", "bodyText": "There is, but the performance hit is extremely costly. We do it in jira-service integration tests and it adds significant overhead.", "author": "gkillough", "createdAt": "2020-05-14T15:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NDQ0Mw=="}], "type": "inlineReview"}, {"oid": "5c6c289104961e1f84a9c05d928c00510d131592", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5c6c289104961e1f84a9c05d928c00510d131592", "message": "refactor: Remove serialVersionId based on PR feedback.", "committedDate": "2020-05-14T15:33:11Z", "type": "commit"}, {"oid": "0a047551bb40c291fd326d5436a2c37fb1882489", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0a047551bb40c291fd326d5436a2c37fb1882489", "message": "refactor: Add '_generator' suffix to sequence name.", "committedDate": "2020-05-14T16:29:26Z", "type": "commit"}, {"oid": "8694d2b93add010d59dde4715b3ca5e6c3f04673", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8694d2b93add010d59dde4715b3ca5e6c3f04673", "message": "refactor: Use Identity generation for additional tables.", "committedDate": "2020-05-14T17:09:38Z", "type": "commit"}]}