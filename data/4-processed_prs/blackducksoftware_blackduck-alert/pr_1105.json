{"pr_number": 1105, "pr_title": "Azure AD SAML Fixes", "pr_createdAt": "2020-08-06T17:52:42Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1105", "timeline": [{"oid": "f09d3b0d4391898d988a9610f814069e0a719628", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f09d3b0d4391898d988a9610f814069e0a719628", "message": "fix: Use the same keystore for SAML certificates.", "committedDate": "2020-07-31T21:07:02Z", "type": "commit"}, {"oid": "f5b968d157e05b59bc23e610112da91770f3f865", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f5b968d157e05b59bc23e610112da91770f3f865", "message": "fix: Disable trust check on metadata", "committedDate": "2020-08-03T18:03:18Z", "type": "commit"}, {"oid": "b62685627bd766751fb8867beec98bf2b26f7131", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b62685627bd766751fb8867beec98bf2b26f7131", "message": "Merge remote-tracking branch 'origin/master' into ps_saml_keymanager", "committedDate": "2020-08-04T18:08:23Z", "type": "commit"}, {"oid": "db11e4f8679dd46d7e93c5a8228518cb540921cd", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/db11e4f8679dd46d7e93c5a8228518cb540921cd", "message": "fix: Add the in memory metadata provider for Azure support.", "committedDate": "2020-08-06T12:53:35Z", "type": "commit"}, {"oid": "368e743c5b08762a27ad1ac84af5514d84cae07b", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/368e743c5b08762a27ad1ac84af5514d84cae07b", "message": "build: update the version to be unique for testing.", "committedDate": "2020-08-06T14:03:41Z", "type": "commit"}, {"oid": "b0e65bac6cd84c6d98834b663b44b6020b538e67", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b0e65bac6cd84c6d98834b663b44b6020b538e67", "message": "chore: Add a comment indicating the fix for Azure SAML.", "committedDate": "2020-08-06T17:21:09Z", "type": "commit"}, {"oid": "69efd53e05f7f036312a0df39e011925df9a7f2a", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/69efd53e05f7f036312a0df39e011925df9a7f2a", "message": "refactor: Remove certificate utility.", "committedDate": "2020-08-06T17:28:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5MDE4OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1105#discussion_r466590188", "bodyText": "Is there something Alert can do to act as a proxy for this check (i.e. if Alert has the certificate imported) or is this not an SSL trust check?", "author": "gkillough", "createdAt": "2020-08-06T17:59:28Z", "path": "src/main/java/com/synopsys/integration/alert/web/security/authentication/saml/SAMLManager.java", "diffHunk": "@@ -142,10 +147,23 @@ public void setupMetadataManager(String metadataURL, String entityId, String ent\n         return Optional.of(createDelegate(provider));\n     }\n \n+    // This needs to be created in order for Azure AD SAML configuration to work. The entity id in the metadata is different\n+    // than the entity id configured in Azure.  This allows the the entity id to get mapped and found correctly for the application.\n+    private Optional<ExtendedMetadataDelegate> createMemoryProvider() throws MetadataProviderException {\n+        EntityDescriptor descriptor = metadataGenerator.generateMetadata();\n+        MetadataMemoryProvider provider = new MetadataMemoryProvider(descriptor);\n+        provider.initialize();\n+        return Optional.of(createDelegate(provider));\n+    }\n+\n     private ExtendedMetadataDelegate createDelegate(MetadataProvider provider) {\n         ExtendedMetadataDelegate delegate = new ExtendedMetadataDelegate(provider, extendedMetadata);\n-        delegate.setMetadataTrustCheck(true);\n+        delegate.setMetadataTrustCheck(false);", "originalCommit": "69efd53e05f7f036312a0df39e011925df9a7f2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NzY5MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1105#discussion_r466597691", "bodyText": "Not exactly an SSL trust check.  The entities can have an X509 tag which is a certificate used to create the entity.  We need to use that signature for validation.  However that requires the configuration of a KeyManager class that is specific to SAML.  It can point to a keystore file to see if the signature is trusted, but there are other constraints with setting that up.  For instance we need to have a default entity id that we look up which we don't know on startup.  How to load the map of entities at runtime wasn't initially clear to get the key validation working.  We should have an enhancement in the future to solve the problem though", "author": "psantos1113", "createdAt": "2020-08-06T18:13:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5MDE4OA=="}], "type": "inlineReview"}]}