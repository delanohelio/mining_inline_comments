{"pr_number": 792, "pr_title": "Ps auth type", "pr_createdAt": "2020-01-07T13:31:53Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/792", "timeline": [{"oid": "a200e05e061e8d2973c6711c1f1d7bb15e79f622", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a200e05e061e8d2973c6711c1f1d7bb15e79f622", "message": "Feature(users): add the authentication type to the user entity.", "committedDate": "2020-01-06T21:40:44Z", "type": "commit"}, {"oid": "30177bc434f55efcaf57210b89baa8ce23f94b05", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/30177bc434f55efcaf57210b89baa8ce23f94b05", "message": "Merge remote-tracking branch 'origin/master' into ps_auth_type", "committedDate": "2020-01-07T13:14:06Z", "type": "commit"}, {"oid": "38b8b5293c49c6597dcdebe447b2c6a7337d16a8", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/38b8b5293c49c6597dcdebe447b2c6a7337d16a8", "message": "Fix(users): Add external member back and set it in the constructor.", "committedDate": "2020-01-07T13:30:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4OTY2OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r363889669", "bodyText": "We may want to change this to if (!AuthenticationType.DATABASE.name().equals(existingUser.getAuthenticationType())) {. This way if we change DATABASE we only have to change it in one place.", "author": "jamesrichard91", "createdAt": "2020-01-07T18:35:33Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultUserAccessor.java", "diffHunk": "@@ -121,7 +113,7 @@ public UserModel updateUser(UserModel user, boolean passwordEncoded) throws Aler\n         Long existingUserId = existingUser.getId();\n         UserEntity savedEntity = existingUser;\n         // if it isn't an external user then update username, password, and email.\n-        if (existingUser.isExternal()) {\n+        if (!existingUser.getAuthenticationType().equals(\"DATABASE\")) {", "originalCommit": "38b8b5293c49c6597dcdebe447b2c6a7337d16a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0d632ba1a64bf066211f5d293b7c416b47113727", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0d632ba1a64bf066211f5d293b7c416b47113727", "message": "Refactor(users): Store Authentication type in the database.", "committedDate": "2020-01-07T20:09:04Z", "type": "commit"}, {"oid": "56c651b208e0da0877c8a4cdc34d95b83045f0ba", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/56c651b208e0da0877c8a4cdc34d95b83045f0ba", "message": "Refactor(database): Add foreign key for the authentication type.", "committedDate": "2020-01-07T20:47:03Z", "type": "commit"}, {"oid": "5fe31d01d9d09f25f1759566e99fd3d619b04c68", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5fe31d01d9d09f25f1759566e99fd3d619b04c68", "message": "Merge remote-tracking branch 'origin/master' into ps_auth_type", "committedDate": "2020-01-08T20:08:07Z", "type": "commit"}, {"oid": "0c014a24c8e977506709dd43156fa0200d5775f9", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0c014a24c8e977506709dd43156fa0200d5775f9", "message": "Fix(user): Address SonarCloud issues in the branch.", "committedDate": "2020-01-08T20:23:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzMzM2MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r364433360", "bodyText": "Why not make this an enum and then let the accessor worry about converting to/from Long?", "author": "gkillough", "createdAt": "2020-01-08T20:41:15Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/persistence/model/AuthenticationType.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.persistence.model;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+\n+public class AuthenticationType extends AlertSerializableModel {", "originalCommit": "0c014a24c8e977506709dd43156fa0200d5775f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3NTM4Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r364775386", "bodyText": "Use an enum now to handle the mapping of the database id to the enumeration.  The accessor uses methods on the enum to be able to get the correct type.", "author": "psantos1113", "createdAt": "2020-01-09T14:43:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzMzM2MA=="}], "type": "inlineReview"}, {"oid": "d5fe28bd233b4ff60e547ee66716c5a7dadffe69", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d5fe28bd233b4ff60e547ee66716c5a7dadffe69", "message": "Refactor(users): Use an Enum for the authentication type.", "committedDate": "2020-01-09T14:09:15Z", "type": "commit"}, {"oid": "8b1918cee79030287bc19d737b3c8a9c4a145dc2", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8b1918cee79030287bc19d737b3c8a9c4a145dc2", "message": "Refactor(users): Add the database id to the enum.", "committedDate": "2020-01-09T14:38:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MjI1NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r364842255", "bodyText": "Should we allow this to throw unchecked exceptions if the id is invalid?", "author": "gkillough", "createdAt": "2020-01-09T16:38:22Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultAuthenticationTypeAccessor.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * alert-database\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.database.api;\n+\n+import java.util.Optional;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.synopsys.integration.alert.common.enumeration.AuthenticationType;\n+import com.synopsys.integration.alert.common.persistence.accessor.AuthenticationTypeAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.AuthenticationTypeDetails;\n+import com.synopsys.integration.alert.database.user.AuthenticationTypeEntity;\n+import com.synopsys.integration.alert.database.user.AuthenticationTypeRepository;\n+\n+@Component\n+@Transactional\n+public class DefaultAuthenticationTypeAccessor implements AuthenticationTypeAccessor {\n+    private final AuthenticationTypeRepository authenticationTypeRepository;\n+\n+    @Autowired\n+    public DefaultAuthenticationTypeAccessor(AuthenticationTypeRepository authenticationTypeRepository) {\n+        this.authenticationTypeRepository = authenticationTypeRepository;\n+    }\n+\n+    @Override\n+    public Optional<AuthenticationTypeDetails> getAuthenticationTypeDetails(AuthenticationType authenticationType) {\n+        Optional<AuthenticationTypeEntity> authenticationTypeEntity = authenticationTypeRepository.findById(authenticationType.getId());\n+        return authenticationTypeEntity.map(entity -> new AuthenticationTypeDetails(entity.getId(), entity.getName()));\n+    }\n+\n+    @Override\n+    public AuthenticationType getAuthenticationType(Long id) {\n+        return AuthenticationType.getById(id);", "originalCommit": "8b1918cee79030287bc19d737b3c8a9c4a145dc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MjkxMQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r364842911", "bodyText": "Actually, it looks like this reads from a map, so no exception, but it can return null. We might want to wrap it in an optional.", "author": "gkillough", "createdAt": "2020-01-09T16:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MjI1NQ=="}], "type": "inlineReview"}, {"oid": "a053786110bdbfa9efb57540f76e26e94549e940", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a053786110bdbfa9efb57540f76e26e94549e940", "message": "Refactor(users): Update the enum to use Optional in a get method.", "committedDate": "2020-01-09T17:55:05Z", "type": "commit"}]}