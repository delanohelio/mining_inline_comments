{"pr_number": 1145, "pr_title": "Update SystemController to use explicit return type", "pr_createdAt": "2020-08-31T14:11:58Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1145", "timeline": [{"oid": "b8c2bcfd43bfea684a9f5d092f568cce1faf15a6", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b8c2bcfd43bfea684a9f5d092f568cce1faf15a6", "message": "refactor: Initial commit to update SystemController", "committedDate": "2020-08-28T19:08:58Z", "type": "commit"}, {"oid": "b34d5bf2f91595c296499786aaa771d5f9534311", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b34d5bf2f91595c296499786aaa771d5f9534311", "message": "test: Update SystemControllerTestsIT for refactored SystemController", "committedDate": "2020-08-31T14:05:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2MDI3Mg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1145#discussion_r480160272", "bodyText": "You might want to delete this commented code.", "author": "gkillough", "createdAt": "2020-08-31T14:15:33Z", "path": "src/test/java/com/synopsys/integration/alert/web/controller/SystemControllerTestIT.java", "diffHunk": "@@ -40,7 +38,7 @@\n     private final String SYSTEM_INITIAL_SETUP_BASE_URL = BaseController.BASE_PATH + \"/system/setup/initial\";\n     private final String SYSTEM_INITIAL_DESCRIPTOR = BaseController.BASE_PATH + \"/system/setup/descriptor\";\n     private final Gson gson = new Gson();\n-    private final ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n+    //private final ContentConverter contentConverter = Mockito.mock(ContentConverter.class);", "originalCommit": "b34d5bf2f91595c296499786aaa771d5f9534311", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6bea4b41988964b0b27cf0e036004b7d74970ab1", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/6bea4b41988964b0b27cf0e036004b7d74970ab1", "message": "test: Remove commented line", "committedDate": "2020-08-31T14:17:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2NDI2Nw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1145#discussion_r480164267", "bodyText": "you could throw a failed assertion after this line if you're expecting this exception to be thrown", "author": "bamandel", "createdAt": "2020-08-31T14:22:06Z", "path": "src/test/java/com/synopsys/integration/alert/web/controller/SystemControllerTestIT.java", "diffHunk": "@@ -94,61 +92,48 @@ public void testPostInitialSystemSetup() throws Exception {\n \n     @Test\n     public void testGetLatestMessagesHandling() {\n-        ResponseFactory responseFactory = new ResponseFactory();\n-        SystemController handler = new SystemController(systemActions, contentConverter, responseFactory);\n-        ResponseEntity<String> responseEntity = handler.getLatestSystemMessages();\n+        SystemController handler = new SystemController(systemActions);\n+        handler.getLatestSystemMessages();\n         Mockito.verify(systemActions).getSystemMessagesSinceStartup();\n-        Mockito.verify(contentConverter).getJsonString(Mockito.any());\n-        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());\n     }\n \n     @Test\n-    public void testGetSystemMessagesgetAll() {\n-        ResponseFactory responseFactory = new ResponseFactory();\n-        SystemController handler = new SystemController(systemActions, contentConverter, responseFactory);\n-        ResponseEntity<String> responseEntity = handler.getSystemMessages(\"\", \"\");\n+    public void testGetSystemMessagesGetAll() {\n+        SystemController handler = new SystemController(systemActions);\n+        handler.getSystemMessages(\"\", \"\");\n         Mockito.verify(systemActions).getSystemMessages();\n-        Mockito.verify(contentConverter).getJsonString(Mockito.any());\n-        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());\n     }\n \n     @Test\n     public void testGetSystemMessagesGetAfter() throws Exception {\n-        ResponseFactory responseFactory = new ResponseFactory();\n-        SystemController handler = new SystemController(systemActions, contentConverter, responseFactory);\n-        ResponseEntity<String> responseEntity = handler.getSystemMessages(\"2018-11-13T00:00:00.000Z\", null);\n+        SystemController handler = new SystemController(systemActions);\n+        handler.getSystemMessages(\"2018-11-13T00:00:00.000Z\", null);\n         Mockito.verify(systemActions).getSystemMessagesAfter(Mockito.anyString());\n-        Mockito.verify(contentConverter).getJsonString(Mockito.any());\n-        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());\n     }\n \n     @Test\n     public void testGetSystemMessagesGetBefore() throws Exception {\n-        ResponseFactory responseFactory = new ResponseFactory();\n-        SystemController handler = new SystemController(systemActions, contentConverter, responseFactory);\n-        ResponseEntity<String> responseEntity = handler.getSystemMessages(null, \"2018-11-13T00:00:00.000Z\");\n+        SystemController handler = new SystemController(systemActions);\n+        handler.getSystemMessages(null, \"2018-11-13T00:00:00.000Z\");\n         Mockito.verify(systemActions).getSystemMessagesBefore(Mockito.anyString());\n-        Mockito.verify(contentConverter).getJsonString(Mockito.any());\n-        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());\n     }\n \n     @Test\n     public void testGetSystemMessagesGetBetween() throws Exception {\n-        ResponseFactory responseFactory = new ResponseFactory();\n-        SystemController handler = new SystemController(systemActions, contentConverter, responseFactory);\n-        ResponseEntity<String> responseEntity = handler.getSystemMessages(\"2018-11-13T00:00:00.000Z\", \"2018-11-13T01:00:00.000Z\");\n+        SystemController handler = new SystemController(systemActions);\n+        handler.getSystemMessages(\"2018-11-13T00:00:00.000Z\", \"2018-11-13T01:00:00.000Z\");\n         Mockito.verify(systemActions).getSystemMessagesBetween(Mockito.anyString(), Mockito.anyString());\n-        Mockito.verify(contentConverter).getJsonString(Mockito.any());\n-        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());\n     }\n \n     @Test\n     public void testGetSystemMessagesBadDateRange() throws Exception {\n-        ResponseFactory responseFactory = new ResponseFactory();\n-        SystemController handler = new SystemController(systemActions, contentConverter, responseFactory);\n+        SystemController handler = new SystemController(systemActions);\n         Mockito.when(systemActions.getSystemMessagesBetween(Mockito.anyString(), Mockito.anyString())).thenThrow(new ParseException(\"error parsing date \", 0));\n-        ResponseEntity<String> responseEntity = handler.getSystemMessages(\"bad-start-time\", \"bad-end-time\");\n+        try {\n+            handler.getSystemMessages(\"bad-start-time\", \"bad-end-time\");", "originalCommit": "6bea4b41988964b0b27cf0e036004b7d74970ab1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c15ef72948198273a72889fa54544c3a2807d69c", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/c15ef72948198273a72889fa54544c3a2807d69c", "message": "test: Fail test if getSystemMessages does not throw a ResponseStatusException", "committedDate": "2020-08-31T14:28:29Z", "type": "commit"}]}