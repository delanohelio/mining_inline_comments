{"pr_number": 7393, "pr_title": "write json serialization optimization", "pr_createdAt": "2020-01-13T19:11:58Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7393", "timeline": [{"oid": "250e725e5c24a9cccb910804095d7a594b01dde9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/250e725e5c24a9cccb910804095d7a594b01dde9", "message": "point operation for non item resource avoid duplicate json serialization/deserialization on top of v2", "committedDate": "2020-01-09T20:45:36Z", "type": "commit"}, {"oid": "62dad5b5635ea58389188e7366815ffee4ac46a4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/62dad5b5635ea58389188e7366815ffee4ac46a4", "message": "fix database from json", "committedDate": "2020-01-09T22:27:24Z", "type": "commit"}, {"oid": "8e7f410b0d7bc8ee2b9cb50efbbe089738544efc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8e7f410b0d7bc8ee2b9cb50efbbe089738544efc", "message": "Merge branch 'feature/cosmos/v4' into users/moderakh/20200109-write-json-serialization-optimization", "committedDate": "2020-01-10T17:31:36Z", "type": "commit"}, {"oid": "37d10e55ba606466a10af34c3bf6a0dfaf3070b0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/37d10e55ba606466a10af34c3bf6a0dfaf3070b0", "message": "Merge branch 'feature/cosmos/v4' into users/moderakh/20200109-write-json-serialization-optimization", "committedDate": "2020-01-10T18:30:22Z", "type": "commit"}, {"oid": "ae6391196a33190488b607ce56c5ee37d0865602", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ae6391196a33190488b607ce56c5ee37d0865602", "message": "Merge branch 'feature/cosmos/v4' into users/moderakh/20200109-write-json-serialization-optimization", "committedDate": "2020-01-10T22:13:41Z", "type": "commit"}, {"oid": "9849d66861bd3ca40f87fcd5d2a34e0930fa4dfb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9849d66861bd3ca40f87fcd5d2a34e0930fa4dfb", "message": "use partition key in the option and don't re-serialize/de-serialize on write", "committedDate": "2020-01-10T23:07:46Z", "type": "commit"}, {"oid": "6167ab2fb9bac2a3c229aabf3b499dd6f923af5b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6167ab2fb9bac2a3c229aabf3b499dd6f923af5b", "message": "optimize json serialization in write", "committedDate": "2020-01-13T19:09:46Z", "type": "commit"}, {"oid": "2bd202476d718c335f06c0ab831bce1153e4c668", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2bd202476d718c335f06c0ab831bce1153e4c668", "message": "fix broken tests", "committedDate": "2020-01-13T23:04:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzNDI0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7393#discussion_r366134245", "bodyText": "unused imports, please remove them.", "author": "kushagraThapar", "createdAt": "2020-01-14T03:07:21Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosItemProperties.java", "diffHunk": "@@ -7,6 +7,8 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n \n import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;", "originalCommit": "2bd202476d718c335f06c0ab831bce1153e4c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MzcyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7393#discussion_r366593729", "bodyText": "done", "author": "moderakh", "createdAt": "2020-01-14T21:56:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzNDI0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMTcwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7393#discussion_r366201701", "bodyText": "Just for my understanding: Why is it modeled as string, isn't stream the right abstraction?", "author": "kirankumarkolli", "createdAt": "2020-01-14T08:22:17Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java", "diffHunk": "@@ -52,6 +52,10 @@ public static Document documentFromObject(Object document, ObjectMapper mapper)\n         return Document.FromObject(document, mapper);\n     }\n \n+    public static String toJsonString(Object document, ObjectMapper mapper) {", "originalCommit": "2bd202476d718c335f06c0ab831bce1153e4c668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MjMzNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7393#discussion_r366592337", "bodyText": "very good question.\nThere are three options:\n\nString\nByte[]\nInputStream/OutputStream\n\nCurrently everywhere in SDK, String is passed to DocumentServiceRequest. The public constructors of DocumentServiceRequest only accept String. But DSR internally converts String to Byte[] and holds it as Byte array.\nI think there should be a potential room for optimization by passing data as Byte[] to DSR, I am planning to look at this after this PR is merged (as this is not specific to document write).\nthe other option is InputStream and OutputStream. as mentioned above DSR holds data as byte[] array and support for InputStream/OutputStream might not currently be used anywhere or even may not be in working state. The other challenge is converting from InputStream/OuputStream to Flux which might require some work. I don't know yet where we are in that regard.\nMy plan is to study the perfs for these options after this PR and make the requires changes in DSR.", "author": "moderakh", "createdAt": "2020-01-14T21:53:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMTcwMQ=="}], "type": "inlineReview"}, {"oid": "7751f3c6690c46685a7e0a52831e927564de2bc7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7751f3c6690c46685a7e0a52831e927564de2bc7", "message": "removed unused imports", "committedDate": "2020-01-14T16:18:03Z", "type": "commit"}]}