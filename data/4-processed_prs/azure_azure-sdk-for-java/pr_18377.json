{"pr_number": 18377, "pr_title": "Update aad starter readme", "pr_createdAt": "2020-12-28T10:13:58Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18377", "timeline": [{"oid": "759125c9ba2fa16ca23b1055af7011ab0e77f9ce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/759125c9ba2fa16ca23b1055af7011ab0e77f9ce", "message": "Update the aad-starter README.md file.", "committedDate": "2020-12-28T09:47:51Z", "type": "commit"}, {"oid": "6de0b43329f67842fa321220a060d0fd442f1b06", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6de0b43329f67842fa321220a060d0fd442f1b06", "message": "Update the aad-starter README.md file.", "committedDate": "2020-12-28T10:12:00Z", "type": "commit"}, {"oid": "e16068ecdfeb175631ade0d40b029d28b335acf1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e16068ecdfeb175631ade0d40b029d28b335acf1", "message": "Merge branch 'master' into update_aad_starter_readme", "committedDate": "2020-12-28T14:04:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2NDA1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549364057", "bodyText": "remove this unnecessary change.", "author": "saragluna", "createdAt": "2020-12-28T14:19:38Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -41,6 +40,7 @@ The authorization flow for web application includes:\n * When on-demand resources are visited, associated clients will be loaded and trigger **authorization code flow** like the `azure` client.\n \n The authorization flow for resource server:\n+", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2NzI3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549367279", "bodyText": "We should keep this empty line.", "author": "saragluna", "createdAt": "2020-12-28T14:29:17Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -87,12 +87,12 @@ API permissions of a resource server that the application is going to acquire.\n * azure.activedirectory.authorization-clients.{client-name}.scopes.on-demand:    \n If the authorization flow of current resource server will be executed on demand. The default value is false.\n ### Web application\n-Based on Azure AD as a Web application, it uses OAuth2 authorization code flow to authentication, and authorizes resources based on the groups or roles claim in the access token. \n-", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2NzU3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549367579", "bodyText": "Are we forgetting to add the link?", "author": "saragluna", "createdAt": "2020-12-28T14:30:05Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -169,8 +167,7 @@ public class AADOAuth2LoginConfigSample extends AADWebSecurityConfigurerAdapter\n ```\n \n ### Authenticate in frontend\n-\n-Please refer to [azure-active-directory-spring-boot-sample-with-filter](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-resource-server-with-filter/README.md) for how to integrate Spring Security and Azure AD for authentication and authorization in a Single Page Application (SPA) scenario.\n+Please refer to [azure-active-directory-spring-boot-sample-with-filter] for how to integrate Spring Security and Azure AD for authentication and authorization in a Single Page Application (SPA) scenario.", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2ODQ2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549368466", "bodyText": "Please add a space between App Roles", "author": "saragluna", "createdAt": "2020-12-28T14:33:09Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -196,14 +193,9 @@ public class AADAuthenticationFilterConfigSample extends WebSecurityConfigurerAd\n * Role-based Authorization with annotation `@PreAuthorize(\"hasRole('GROUP_NAME')\")`\n * Role-based Authorization with method `isMemberOf()`\n \n-\n ### Authenticate stateless APIs using AAD app roles\n-This scenario fits best for stateless Spring backends exposing an API to SPAs ([OAuth 2.0 implicit grant flow](https://docs.microsoft.com/azure/active-directory/develop/v1-oauth2-implicit-grant-flow)) \n-or service-to-service access using the [client credentials grant flow](https://docs.microsoft.com/azure/active-directory/develop/v1-oauth2-client-creds-grant-flow).\n-\n-The stateless processing can be activated with the `azure.activedirectory.session-stateless` property. \n-The authorization is using the [AAD AppRole feature](https://docs.microsoft.com/azure/architecture/multitenant-identity/app-roles#roles-using-azure-ad-app-roles),\n-so instead of using the `groups` claim the token has a `roles` claim which contains roles [configured in your manifest](https://docs.microsoft.com/azure/active-directory/develop/howto-add-app-roles-in-azure-ad-apps#examples). \n+This scenario fits best for stateless Spring backends exposing an API to SPAs ([OAuth 2.0 implicit grant flow]) or service-to-service access using the [client credentials grant flow].\n+The stateless processing can be activated with the `azure.activedirectory.session-stateless` property. The authorization is using the [AAD AppRole feature], so instead of using the `groups` claim the token has a `roles` claim which contains roles [configured in your manifest]. ", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2OTM4NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549369384", "bodyText": "Do we really need this section?", "author": "saragluna", "createdAt": "2020-12-28T14:35:39Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -321,6 +310,98 @@ public class AADOAuth2ResourceServerSecurityConfig extends WebSecurityConfigurer\n }\n ```\n \n+#### The default comes with an AAD Access Token validator:\n+```java\n+@Bean\n+@ConditionalOnMissingBean(JwtDecoder.class)\n+public JwtDecoder jwtDecoder() {\n+     AADAuthorizationServerEndpoints identityEndpoints = new AADAuthorizationServerEndpoints(\n+     aadAuthenticationProperties.getBaseUri(), aadAuthenticationProperties.getTenantId());\n+     NimbusJwtDecoder nimbusJwtDecoder = NimbusJwtDecoder\n+     .withJwkSetUri(identityEndpoints.jwkSetEndpoint()).build();\n+     List<OAuth2TokenValidator<Jwt>> validators = createDefaultValidator();\n+     nimbusJwtDecoder.setJwtValidator(new DelegatingOAuth2TokenValidator<>(validators));\n+     return nimbusJwtDecoder;\n+}\n+\n+public List<OAuth2TokenValidator<Jwt>> createDefaultValidator() {\n+     List<OAuth2TokenValidator<Jwt>> validators = new ArrayList<>();\n+     List<String> validAudiences = new ArrayList<>();\n+     if (!StringUtils.isEmpty(aadAuthenticationProperties.getAppIdUri())) {\n+        validAudiences.add(aadAuthenticationProperties.getAppIdUri());\n+     }\n+     if (!StringUtils.isEmpty(aadAuthenticationProperties.getClientId())) {\n+        validAudiences.add(aadAuthenticationProperties.getClientId());\n+     }\n+     if (!validAudiences.isEmpty()) {\n+        validators.add(new AADJwtAudienceValidator(validAudiences));\n+     }\n+     validators.add(new AADJwtIssuerValidator());\n+     validators.add(new JwtTimestampValidator());\n+     return validators;\n+}\n+```", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3MDM3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549370372", "bodyText": "We should move this section along with obo one ahead of the Authenticate in frontend section since we're deprecating the filters.", "author": "saragluna", "createdAt": "2020-12-28T14:38:33Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -283,8 +273,8 @@ azure:\n         scopes: {scope1}, {scope2}\n ``` \n \n-### Protect the Resource API through Resource Server\n-Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server][resource-server] for access resource api.\n+### Protect the resource APIs in webapi", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3MDQ5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549370491", "bodyText": "We should find a better word here, instead of webapi.", "author": "saragluna", "createdAt": "2020-12-28T14:38:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3MDM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3MDY3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549370677", "bodyText": "Or we could use resource server?", "author": "saragluna", "createdAt": "2020-12-28T14:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3MDM3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3MDg5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549370890", "bodyText": "change for access webapi to for access resource APIs", "author": "saragluna", "createdAt": "2020-12-28T14:40:14Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -283,8 +273,8 @@ azure:\n         scopes: {scope1}, {scope2}\n ``` \n \n-### Protect the Resource API through Resource Server\n-Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server][resource-server] for access resource api.\n+### Protect the resource APIs in webapi\n+Please refer to [azure-spring-boot-sample-active-directory-resource-server] for access webapi.", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM3MjA5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18377#discussion_r549372096", "bodyText": "Can we move this to the last one?", "author": "saragluna", "createdAt": "2020-12-28T14:43:56Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -336,29 +417,39 @@ logging.level.org.springframework.web=DEBUG\n logging.level.org.hibernate=ERROR\n ```\n \n-For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n- \n+For more information about setting logging in spring, please refer to the [official doc].\n \n ## Next steps\n The following section provides sample projects illustrating how to use the starter in different cases.\n ### More sample code\n-- [Azure Active Directory for Resource Server with Filter(Deprecated)](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-resource-server-with-filter)\n-- [Azure Active Directory for Web Application](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-webapp)\n+- [Azure Active Directory for Resource Server with Filter(Deprecated)][azure-spring-boot-sample-active-directory-resource-server-with-filter]", "originalCommit": "e16068ecdfeb175631ade0d40b029d28b335acf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "55adfc827a2685b47bd42ed8606eb0f0b99a8ddf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/55adfc827a2685b47bd42ed8606eb0f0b99a8ddf", "message": "Update the aad-starter README.md file.", "committedDate": "2020-12-29T03:03:48Z", "type": "commit"}, {"oid": "aaca3645e4b55e7ee81470aab1a7e675cf9c0f2e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/aaca3645e4b55e7ee81470aab1a7e675cf9c0f2e", "message": "Update README.md", "committedDate": "2020-12-29T09:40:06Z", "type": "commit"}, {"oid": "e97ea8f0d9278048fe1d390580aa12b289eaa626", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e97ea8f0d9278048fe1d390580aa12b289eaa626", "message": "Update README.md", "committedDate": "2020-12-29T09:48:07Z", "type": "commit"}, {"oid": "8aadf999f3f5db3786bea2c4801229661c5ce0fe", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8aadf999f3f5db3786bea2c4801229661c5ce0fe", "message": "Merge branch 'master' into update_aad_starter_readme", "committedDate": "2020-12-29T09:51:50Z", "type": "commit"}]}