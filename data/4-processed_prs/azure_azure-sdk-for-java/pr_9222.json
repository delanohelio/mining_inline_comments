{"pr_number": 9222, "pr_title": "Update KV clients to set tracing namespace info", "pr_createdAt": "2020-03-19T07:42:54Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9222", "timeline": [{"oid": "e53b0a340bc9f10f8111cf088843a90ac99b16ce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e53b0a340bc9f10f8111cf088843a90ac99b16ce", "message": "update kv clients tracing namespace", "committedDate": "2020-03-19T07:42:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyMTkxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9222#discussion_r395221916", "bodyText": "does this need to be public ?", "author": "g2vinay", "createdAt": "2020-03-19T18:05:39Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/src/main/java/com/azure/security/keyvault/secrets/SecretAsyncClient.java", "diffHunk": "@@ -59,6 +62,10 @@\n     static final int DEFAULT_MAX_PAGE_RESULTS = 25;\n     static final String CONTENT_TYPE_HEADER_VALUE = \"application/json\";\n     static final String KEY_VAULT_SCOPE = \"https://vault.azure.net/.default\";\n+    // Please see <a href=https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers>here</a>\n+    // for more information on Azure resource provider namespaces.\n+    public static final Map<String, String> KEYVAULT_TRACING_PROPERTIES =", "originalCommit": "e53b0a340bc9f10f8111cf088843a90ac99b16ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyOTc3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9222#discussion_r395229772", "bodyText": "right, doesn't have to be public.", "author": "samvaity", "createdAt": "2020-03-19T18:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyMTkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyNDY0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9222#discussion_r395224643", "bodyText": "Just curious, under what scenarios, we would expect this map to contain more than one value ?", "author": "g2vinay", "createdAt": "2020-03-19T18:10:23Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/FluxUtil.java", "diffHunk": "@@ -98,8 +99,34 @@ private static void accept(ByteArrayOutputStream byteOutputStream, ByteBuffer by\n      * @return The response from service call\n      */\n     public static <T> Mono<T> withContext(Function<Context, Mono<T>> serviceCall) {\n+        return withContext(serviceCall, Collections.emptyMap());\n+    }\n+\n+    /**\n+     * This method converts the incoming {@code subscriberContext} from {@link reactor.util.context.Context Reactor\n+     * Context} to {@link Context Azure Context}, adds the specified context attributes and calls the given lambda\n+     * function with this context and returns a single entity of type {@code T}\n+     * <p>\n+     * If the reactor context is empty, {@link Context#NONE} will be used to call the lambda function\n+     * </p>\n+     *\n+     * @param serviceCall serviceCall The lambda function that makes the service call into which azure context\n+     * will be passed\n+     * @param contextAttributes The map of attributes sent by the calling method to be set on {@link Context}.\n+     * @param  <T> The type of response returned from the service call\n+     * @return The response from service call\n+     */\n+    public static <T> Mono<T> withContext(Function<Context, Mono<T>> serviceCall,\n+        Map<String, String> contextAttributes) {", "originalCommit": "e53b0a340bc9f10f8111cf088843a90ac99b16ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyNjk5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9222#discussion_r395226993", "bodyText": "Yes, it is mostly for future-proofing. So that in future if there are more tracing attribute requirements its easily extendable that way.\nFor some more context- #7733. This effort was originally started with storage clients but the dependencies seem to be adding a lot of complexities for doing this in storage so to unblock it decided to continue doing this for other client libraries starting with KV this time :)", "author": "samvaity", "createdAt": "2020-03-19T18:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyNDY0Mw=="}], "type": "inlineReview"}, {"oid": "254f856bae9a96f1656b0ccaa4be2914ded4a200", "url": "https://github.com/Azure/azure-sdk-for-java/commit/254f856bae9a96f1656b0ccaa4be2914ded4a200", "message": "update other KV clients", "committedDate": "2020-03-19T20:01:22Z", "type": "forcePushed"}, {"oid": "f8e6dc6130f5f9bc6f0cb17978512308e9e0c79e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f8e6dc6130f5f9bc6f0cb17978512308e9e0c79e", "message": "update other KV clients", "committedDate": "2020-03-19T20:04:05Z", "type": "forcePushed"}, {"oid": "0db1b153b7cae425d2214aa409f0121c125a40e9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0db1b153b7cae425d2214aa409f0121c125a40e9", "message": "update other KV clients", "committedDate": "2020-03-19T20:52:29Z", "type": "commit"}, {"oid": "0db1b153b7cae425d2214aa409f0121c125a40e9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0db1b153b7cae425d2214aa409f0121c125a40e9", "message": "update other KV clients", "committedDate": "2020-03-19T20:52:29Z", "type": "forcePushed"}, {"oid": "dc32a3410af9c0ef31686207558dfe32a30b4082", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc32a3410af9c0ef31686207558dfe32a30b4082", "message": "add cryptography client", "committedDate": "2020-03-19T23:35:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM4NjM4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9222#discussion_r395386381", "bodyText": "Is this something good to mention in KV changelogs too ?", "author": "g2vinay", "createdAt": "2020-03-20T00:11:15Z", "path": "sdk/core/azure-core-tracing-opentelemetry/CHANGELOG.md", "diffHunk": "@@ -1,6 +1,7 @@\n # Release History\n \n ## 1.0.0-beta.4 (Unreleased)\n+- Keyvault: add az namespace info attribute to all outgoing spans.", "originalCommit": "dc32a3410af9c0ef31686207558dfe32a30b4082", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM4ODQ2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9222#discussion_r395388467", "bodyText": "This would rather be a value add feature to tracing than to KV so we can skip KV changelogs for this one.", "author": "samvaity", "createdAt": "2020-03-20T00:20:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM4NjM4MQ=="}], "type": "inlineReview"}]}