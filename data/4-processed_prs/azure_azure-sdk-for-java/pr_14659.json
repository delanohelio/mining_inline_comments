{"pr_number": 14659, "pr_title": "Update the helper classes used for serialization and deserialization", "pr_createdAt": "2020-08-31T18:33:23Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14659", "timeline": [{"oid": "7c6af1bd2172d8665119d5ae711417a04b38cb10", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c6af1bd2172d8665119d5ae711417a04b38cb10", "message": "Update the helper classes used for serialization and deserialization", "committedDate": "2020-08-31T18:30:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxMjk1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14659#discussion_r480312959", "bodyText": "These fields are marked as \"required\": https://docs.microsoft.com/en-us/azure/iot-pnp/concepts-digital-twin#digital-twin-json-format", "author": "abhipsaMisra", "createdAt": "2020-08-31T18:34:02Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/implementation/serialization/WritableProperty.java", "diffHunk": "@@ -20,10 +20,10 @@\n     @JsonProperty(value = \"desiredVersion\")\n     private int desiredVersion;\n \n-    @JsonProperty(value = \"ackVersion\")\n+    @JsonProperty(value = \"ackVersion\", required = true)", "originalCommit": "7c6af1bd2172d8665119d5ae711417a04b38cb10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d57fe560b584a261ae09ac947ce4f18c00df8371", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d57fe560b584a261ae09ac947ce4f18c00df8371", "message": "Set Json serializer to exclude null properties", "committedDate": "2020-08-31T20:02:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2ODU1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14659#discussion_r480368557", "bodyText": "These setters and getters can be package-private.", "author": "abhipsaMisra", "createdAt": "2020-08-31T20:03:44Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/UpdateOperationUtility.java", "diffHunk": "@@ -92,29 +92,29 @@ public UpdateOperationUtility appendRemoveOperation(String path) {\n         @JsonProperty(value = \"value\")\n         private Object value;\n \n-        public String getOperation() {\n+        String getOperation() {", "originalCommit": "d57fe560b584a261ae09ac947ce4f18c00df8371", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3NjgyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14659#discussion_r480376827", "bodyText": "Service doesn't accept non null values for properties:\n{\"$dtId\":\"dt_Generic_1602401736\",\"$etag\":null,\"$metadata\":{\"$model\":\"dtmi:samples:Building;1\"},\"AverageTemperature\":0,\"TemperatureUnit\":null}\n{\n    \"error\": {\n        \"code\": \"ValidationFailed\",\n        \"message\": \"Invalid twin specified\",\n        \"details\": [\n            {\n                \"code\": \"ValidationFailed\",\n                \"message\": \"Expected value of type string for TemperatureUnit on Twin.\"\n            }\n        ]\n    }\n}", "author": "abhipsaMisra", "createdAt": "2020-08-31T20:20:29Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/implementation/serialization/BasicRelationship.java", "diffHunk": "@@ -6,16 +6,20 @@\n import com.azure.core.annotation.Fluent;\n import com.fasterxml.jackson.annotation.JsonAnyGetter;\n import com.fasterxml.jackson.annotation.JsonAnySetter;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n import java.util.HashMap;\n import java.util.Map;\n \n+import static com.fasterxml.jackson.annotation.JsonInclude.*;\n+\n /**\n  * Although relationships have a user-defined schema, these properties should exist on every instance.\n  * This is useful to use as a base class to ensure your custom relationships have the necessary properties.\n  */\n @Fluent\n+@JsonInclude(Include.NON_NULL)", "originalCommit": "d57fe560b584a261ae09ac947ce4f18c00df8371", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}