{"pr_number": 13197, "pr_title": "support multiple database in azure-spring-data-cosmos", "pr_createdAt": "2020-07-15T09:39:55Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13197", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NzczMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455157731", "bodyText": "I think the basePackages name should be com.azure.primarydatasource since we moved the package structure to track 2 library - which is com.azure instead of com.microsoft.azure", "author": "kushagraThapar", "createdAt": "2020-07-15T15:54:53Z", "path": "sdk/cosmos/azure-spring-data-cosmos/README.md", "diffHunk": "@@ -318,6 +318,134 @@ public class SampleApplication implements CommandLineRunner {\n ```\n Autowired UserRepository interface, then can do save, delete and find operations. Spring Data Azure Cosmos DB uses the CosmosTemplate to execute the queries behind *find*, *save* methods. You can use the template yourself for more complex queries.\n \n+## Support multi-database configuration\n+The `azure-spring-data-cosmos` support multi-database configuration, here is a sample to config multiple account database\n+### Add the dependency\n+```xml\n+<dependency>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-spring-data-cosmos</artifactId>\n+    <version>3.0.0-beta.1</version>\n+</dependency>\n+```\n+### Config application properties\n+The example uses the `application.properties` file\n+```properties\n+azure.cosmosdb.primary.uri=your-primary-cosmosDb-uri\n+azure.cosmosdb.primary.key=your-primary-cosmosDb-key\n+azure.cosmosdb.primary.secondaryKey=your-primary-cosmosDb-secondary-key\n+azure.cosmosdb.primary.database=your-primary-cosmosDb-dbName\n+azure.cosmosdb.primary.populateQueryMetrics=if-populate-query-metrics\n+\n+azure.cosmosdb.secondary.uri=your-secondary-cosmosDb-uri\n+azure.cosmosdb.secondary.key=your-secondary-cosmosDb-key\n+azure.cosmosdb.secondary.secondaryKey=your-secondary-cosmosDb-secondary-key\n+azure.cosmosdb.secondary.database=your-secondary-cosmosDb-dbName\n+azure.cosmosdb.secondary.populateQueryMetrics=if-populate-query-metrics\n+```\n+\n+### Define Entities and Repositories\n+The [Entity](https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/cosmos/azure-spring-data-cosmos#create-repositories) definition is same as above.\n+You can put different database entities into different packages.\n+\n+### Setup configuration\n+The `@EnableReactiveCosmosRepositories` or `@EnableCosmosRepositories` support user-define the cosmos template, use `reactiveCosmosTemplateRef` or `cosmosTemplateRef` to config the name of the `ReactiveCosmosTemplate` or `CosmosTemplate` bean to be used with the repositories detected.\n+<!-- embedme src/samples/java/com/azure/cosmos/multidatasource/DatabaseConfiguration.java#L23-L70 -->\n+```java\n+@Configuration\n+@PropertySource(\"classpath:application.properties\")\n+public class DatabaseConfiguration extends AbstractCosmosConfiguration {\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.primary\")\n+    public CosmosDbProperties primaryDataSourceConfiguration() {\n+        return new CosmosDbProperties();\n+    }\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.secondary\")\n+    public CosmosDbProperties secondaryDataSourceConfiguration() {\n+        return new CosmosDbProperties();\n+    }\n+\n+    @EnableReactiveCosmosRepositories(basePackages = \"com.microsoft.azure.primarydatasource\")", "originalCommit": "bc42039403bdaf7c0226787b2c40b8c0ad3275ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NjIxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455466219", "bodyText": "done", "author": "zhoufenqin", "createdAt": "2020-07-16T02:04:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NzczMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1ODA5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455158098", "bodyText": "Same here - pls update basePackages to com.azure.secondarydatasource.", "author": "kushagraThapar", "createdAt": "2020-07-15T15:55:22Z", "path": "sdk/cosmos/azure-spring-data-cosmos/README.md", "diffHunk": "@@ -318,6 +318,134 @@ public class SampleApplication implements CommandLineRunner {\n ```\n Autowired UserRepository interface, then can do save, delete and find operations. Spring Data Azure Cosmos DB uses the CosmosTemplate to execute the queries behind *find*, *save* methods. You can use the template yourself for more complex queries.\n \n+## Support multi-database configuration\n+The `azure-spring-data-cosmos` support multi-database configuration, here is a sample to config multiple account database\n+### Add the dependency\n+```xml\n+<dependency>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-spring-data-cosmos</artifactId>\n+    <version>3.0.0-beta.1</version>\n+</dependency>\n+```\n+### Config application properties\n+The example uses the `application.properties` file\n+```properties\n+azure.cosmosdb.primary.uri=your-primary-cosmosDb-uri\n+azure.cosmosdb.primary.key=your-primary-cosmosDb-key\n+azure.cosmosdb.primary.secondaryKey=your-primary-cosmosDb-secondary-key\n+azure.cosmosdb.primary.database=your-primary-cosmosDb-dbName\n+azure.cosmosdb.primary.populateQueryMetrics=if-populate-query-metrics\n+\n+azure.cosmosdb.secondary.uri=your-secondary-cosmosDb-uri\n+azure.cosmosdb.secondary.key=your-secondary-cosmosDb-key\n+azure.cosmosdb.secondary.secondaryKey=your-secondary-cosmosDb-secondary-key\n+azure.cosmosdb.secondary.database=your-secondary-cosmosDb-dbName\n+azure.cosmosdb.secondary.populateQueryMetrics=if-populate-query-metrics\n+```\n+\n+### Define Entities and Repositories\n+The [Entity](https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/cosmos/azure-spring-data-cosmos#create-repositories) definition is same as above.\n+You can put different database entities into different packages.\n+\n+### Setup configuration\n+The `@EnableReactiveCosmosRepositories` or `@EnableCosmosRepositories` support user-define the cosmos template, use `reactiveCosmosTemplateRef` or `cosmosTemplateRef` to config the name of the `ReactiveCosmosTemplate` or `CosmosTemplate` bean to be used with the repositories detected.\n+<!-- embedme src/samples/java/com/azure/cosmos/multidatasource/DatabaseConfiguration.java#L23-L70 -->\n+```java\n+@Configuration\n+@PropertySource(\"classpath:application.properties\")\n+public class DatabaseConfiguration extends AbstractCosmosConfiguration {\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.primary\")\n+    public CosmosDbProperties primaryDataSourceConfiguration() {\n+        return new CosmosDbProperties();\n+    }\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.secondary\")\n+    public CosmosDbProperties secondaryDataSourceConfiguration() {\n+        return new CosmosDbProperties();\n+    }\n+\n+    @EnableReactiveCosmosRepositories(basePackages = \"com.microsoft.azure.primarydatasource\")\n+    public class PrimaryDataSourceConfiguration {\n+        @Autowired\n+        @Qualifier(\"primaryDataSourceConfiguration\")\n+        CosmosDbProperties properties;\n+        @Bean\n+        public CosmosDBConfig cosmosDbConfig() {\n+            CosmosDBConfig cosmosDBConfig = CosmosDBConfig.builder(properties.getUri(),\n+                new CosmosKeyCredential(properties.getKey()),\n+                properties.getDatabase()).build();\n+            cosmosDBConfig.setPopulateQueryMetrics(properties.isPopulateQueryMetrics());\n+            return cosmosDBConfig;\n+        }\n+\n+    }\n+\n+    @EnableReactiveCosmosRepositories(basePackages = \"com.microsoft.azure.secondarydatasource\", reactiveCosmosTemplateRef = \"secondaryReactiveCosmosTemplate\")", "originalCommit": "bc42039403bdaf7c0226787b2c40b8c0ad3275ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1ODg0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455158844", "bodyText": "Typo in class name - SecondaryDataSource1Configuration -> should be SecondaryDataSourceConfiguration", "author": "kushagraThapar", "createdAt": "2020-07-15T15:56:34Z", "path": "sdk/cosmos/azure-spring-data-cosmos/README.md", "diffHunk": "@@ -318,6 +318,134 @@ public class SampleApplication implements CommandLineRunner {\n ```\n Autowired UserRepository interface, then can do save, delete and find operations. Spring Data Azure Cosmos DB uses the CosmosTemplate to execute the queries behind *find*, *save* methods. You can use the template yourself for more complex queries.\n \n+## Support multi-database configuration\n+The `azure-spring-data-cosmos` support multi-database configuration, here is a sample to config multiple account database\n+### Add the dependency\n+```xml\n+<dependency>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-spring-data-cosmos</artifactId>\n+    <version>3.0.0-beta.1</version>\n+</dependency>\n+```\n+### Config application properties\n+The example uses the `application.properties` file\n+```properties\n+azure.cosmosdb.primary.uri=your-primary-cosmosDb-uri\n+azure.cosmosdb.primary.key=your-primary-cosmosDb-key\n+azure.cosmosdb.primary.secondaryKey=your-primary-cosmosDb-secondary-key\n+azure.cosmosdb.primary.database=your-primary-cosmosDb-dbName\n+azure.cosmosdb.primary.populateQueryMetrics=if-populate-query-metrics\n+\n+azure.cosmosdb.secondary.uri=your-secondary-cosmosDb-uri\n+azure.cosmosdb.secondary.key=your-secondary-cosmosDb-key\n+azure.cosmosdb.secondary.secondaryKey=your-secondary-cosmosDb-secondary-key\n+azure.cosmosdb.secondary.database=your-secondary-cosmosDb-dbName\n+azure.cosmosdb.secondary.populateQueryMetrics=if-populate-query-metrics\n+```\n+\n+### Define Entities and Repositories\n+The [Entity](https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/cosmos/azure-spring-data-cosmos#create-repositories) definition is same as above.\n+You can put different database entities into different packages.\n+\n+### Setup configuration\n+The `@EnableReactiveCosmosRepositories` or `@EnableCosmosRepositories` support user-define the cosmos template, use `reactiveCosmosTemplateRef` or `cosmosTemplateRef` to config the name of the `ReactiveCosmosTemplate` or `CosmosTemplate` bean to be used with the repositories detected.\n+<!-- embedme src/samples/java/com/azure/cosmos/multidatasource/DatabaseConfiguration.java#L23-L70 -->\n+```java\n+@Configuration\n+@PropertySource(\"classpath:application.properties\")\n+public class DatabaseConfiguration extends AbstractCosmosConfiguration {\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.primary\")\n+    public CosmosDbProperties primaryDataSourceConfiguration() {\n+        return new CosmosDbProperties();\n+    }\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.secondary\")\n+    public CosmosDbProperties secondaryDataSourceConfiguration() {\n+        return new CosmosDbProperties();\n+    }\n+\n+    @EnableReactiveCosmosRepositories(basePackages = \"com.microsoft.azure.primarydatasource\")\n+    public class PrimaryDataSourceConfiguration {\n+        @Autowired\n+        @Qualifier(\"primaryDataSourceConfiguration\")\n+        CosmosDbProperties properties;\n+        @Bean\n+        public CosmosDBConfig cosmosDbConfig() {\n+            CosmosDBConfig cosmosDBConfig = CosmosDBConfig.builder(properties.getUri(),\n+                new CosmosKeyCredential(properties.getKey()),\n+                properties.getDatabase()).build();\n+            cosmosDBConfig.setPopulateQueryMetrics(properties.isPopulateQueryMetrics());\n+            return cosmosDBConfig;\n+        }\n+\n+    }\n+\n+    @EnableReactiveCosmosRepositories(basePackages = \"com.microsoft.azure.secondarydatasource\", reactiveCosmosTemplateRef = \"secondaryReactiveCosmosTemplate\")\n+    public class SecondaryDataSource1Configuration {", "originalCommit": "bc42039403bdaf7c0226787b2c40b8c0ad3275ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2MTg3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455161870", "bodyText": "To make it work with the current CI, you will also have to add these SECONDARY_ACCOUNT_HOST as output values in test-resources.json file\nSo as to output these values when we create cosmos db account.", "author": "kushagraThapar", "createdAt": "2020-07-15T16:01:27Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/resources/application.properties", "diffHunk": "@@ -13,3 +13,13 @@ perf.acceptance.percentage=10\n \n # Populate query metrics\n cosmosdb.populateQueryMetrics=true\n+\n+cosmosdb.secondary.uri=${SECONDARY_ACCOUNT_HOST}", "originalCommit": "bc42039403bdaf7c0226787b2c40b8c0ad3275ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTU4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455469586", "bodyText": "@zhoufenqin - thank you for doing this change, I have added some comments, please take a look at them.\nAlso, the issue that you are trying to fix is different from the issue that you have targeted in this PR.\nThis change will allow user to support 2 different database accounts.\nWhereas, this issue : microsoft/spring-data-cosmosdb#520\nis about supporting different databases in same cosmosdb account.\nSingle cosmosdb account can have multiple databases, and that's what the issue is.\nThough this fix is also important to have - as it allows the end user to support two different cosmosdb accounts.\n@saragluna @jialindai - this is the same conversation we had over email few weeks back where I explained the above problem.\n\nhi @kushagraThapar, actually this PR can support \"Single account multiple databases\" and \"multiple cosmos account\", but now each cosmos template will create a cosmos client, so I'll research whether we have a better method to support \"Single account multiple databases\", reference MongoTemplate", "author": "zhoufenqin", "createdAt": "2020-07-16T02:17:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2MTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4OTc0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455489740", "bodyText": "I see, but the problem is that CosmosClient is supposed to be a singleton bean - because otherwise it may create multiple issues of performance and conflicting issues - since Cosmos Java SDK is a very thick client and it has business logic for cosmos db partitioning, routing caches, address caches and so on.\nIs there a way to achieve this without creating multiple instances of CosmosClient bean ?", "author": "kushagraThapar", "createdAt": "2020-07-16T03:35:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2MTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMTk3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455521974", "bodyText": "hi @kushagraThapar, We plan to finish this feature by two steps previously\n1: support multiple cosmos account  (this PR mainly for this)\n2: support same account multiple database (we plan to optimize the CosmosClient)\nSo do you think we need to merge these steps in a single PR or we can separate these features in two PRs\nAnother problem: I think multiple cosmos account need multiple CosmosClient, their cosmos configuration are different, do you think so?", "author": "zhoufenqin", "createdAt": "2020-07-16T05:41:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2MTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyNTk3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455525975", "bodyText": "@zhoufenqin Yes, you got it right, lets complete it in two steps:\n\n\"Support multiple cosmos accounts\" - which means we will certainly need multiple cosmos clients. Because one cosmos client can only support one cosmos account. So we are good on this PR for that.\nHowever, regarding \"Support same account with multiple databases\" - this is very common case and will be used by a lot of customers, so we will need to optimize it a bit, or find a way to do it with a single CosmosClient - because it should be able to support multiple database. This can be done in a later PR.\n\nHowever, before merging this PR, it will be better to merge the big PR - so that we don't have to resolve major conflicts - #13229\nI will merge the big PR tomorrow - and you can rebase this PR off of master and we can run integration tests to verify if everything looks good.\nLet me know if you have more questions on this.\ncc: @jialindai", "author": "kushagraThapar", "createdAt": "2020-07-16T05:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2MTg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyNzM3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455527377", "bodyText": "ok, I'll rebase for master after you merge  #13229", "author": "zhoufenqin", "createdAt": "2020-07-16T05:58:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2MTg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2Mjc0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455162748", "bodyText": "AutoCreateContainer is an annotation property - which supports creating containers automatically in cosmosdb if not exists.\nWhy are we removing this functionality ?", "author": "kushagraThapar", "createdAt": "2020-07-15T16:03:02Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/SimpleReactiveCosmosRepository.java", "diffHunk": "@@ -28,22 +27,6 @@\n     private final CosmosEntityInformation<T, K> entityInformation;\n     private final ReactiveCosmosOperations cosmosOperations;\n \n-    /**\n-     * Initialization with metadata and applicationContext will create container if required\n-     *\n-     * @param metadata for entityInformation\n-     * @param applicationContext for cosmosOperations\n-     */\n-    public SimpleReactiveCosmosRepository(CosmosEntityInformation<T, K> metadata,\n-                                          ApplicationContext applicationContext) {\n-        this.cosmosOperations = applicationContext.getBean(ReactiveCosmosOperations.class);\n-        this.entityInformation = metadata;\n-\n-        if (this.entityInformation.isAutoCreateContainer()) {", "originalCommit": "bc42039403bdaf7c0226787b2c40b8c0ad3275ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NzU3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455467574", "bodyText": "Because now we support multiple cosmos template, we update the getTargetRepository method in ReactiveCosmosRepositoryFactory.java, see here, use cosmosOperations to replace applicationContext, we don't use applicationContext any more,  so I delete this constructor method", "author": "zhoufenqin", "createdAt": "2020-07-16T02:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2Mjc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4OTk4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455489986", "bodyText": "Okay, I guess - we will have to find some other way to respect this annotation then, because otherwise containers will not be created when an entity will be initialized, no ?\nAnd what would be the way to stop creating the containers automatically if the user wants to set this value to false.", "author": "kushagraThapar", "createdAt": "2020-07-16T03:36:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2Mjc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxNDE5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455514198", "bodyText": "Now we use this constructor to create SimpleReactiveCosmosRepository,\npublic SimpleReactiveCosmosRepository(CosmosEntityInformation<T, K> metadata,\n                                          ReactiveCosmosOperations reactiveCosmosOperations) {\n        this.cosmosOperations = reactiveCosmosOperations;\n        this.entityInformation = metadata;\n\n        if (this.entityInformation.isAutoCreateContainer()) {\n            createContainerIfNotExists();\n        }\n    }\ncustomers can still use annotation property to decide to create containers or not", "author": "zhoufenqin", "createdAt": "2020-07-16T05:13:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2Mjc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMTQ2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455521461", "bodyText": "Sounds good, thank you for explaining this.\nBy the way - here is the PR that brings azure-spring-data-cosmos to azure-cosmos dependency V4 - which is track 2 library : #13229\nPlease take a look if you can, your suggestions will be helpful.", "author": "kushagraThapar", "createdAt": "2020-07-16T05:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2Mjc0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2Mjg5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455162890", "bodyText": "Same here -\nWhy are we removing this functionality ?", "author": "kushagraThapar", "createdAt": "2020-07-15T16:03:17Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/SimpleCosmosRepository.java", "diffHunk": "@@ -32,22 +31,6 @@\n     private final CosmosOperations operation;\n     private final CosmosEntityInformation<T, ID> information;\n \n-    /**\n-     * Initialization\n-     *\n-     * @param metadata for cosmos entity information\n-     * @param applicationContext to get bean of CosmosOperations class\n-     */\n-    public SimpleCosmosRepository(CosmosEntityInformation<T, ID> metadata,\n-                                  ApplicationContext applicationContext) {\n-        this.operation = applicationContext.getBean(CosmosOperations.class);\n-        this.information = metadata;\n-\n-        if (this.information.isAutoCreateContainer()) {", "originalCommit": "bc42039403bdaf7c0226787b2c40b8c0ad3275ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c3b047c2dabfbe3b8e6e5a5251396638506d224", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0c3b047c2dabfbe3b8e6e5a5251396638506d224", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-16T01:50:32Z", "type": "forcePushed"}, {"oid": "b887df18a3073f98db6bfd9a20751c621debe3b1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b887df18a3073f98db6bfd9a20751c621debe3b1", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-16T03:08:46Z", "type": "forcePushed"}, {"oid": "c9fb39ef4c98705c8ba7a9729dee0980979bc38e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c9fb39ef4c98705c8ba7a9729dee0980979bc38e", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-16T05:06:17Z", "type": "forcePushed"}, {"oid": "7b98471d19530bdca028a7217483efb96a712369", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7b98471d19530bdca028a7217483efb96a712369", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-16T06:55:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc4NzM0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455787342", "bodyText": "Should we look at defining variables for these keys and using those in the additional args instead this really, really long inline expansion?", "author": "JimSuplizio", "createdAt": "2020-07-16T13:31:08Z", "path": "eng/pipelines/templates/stages/cosmos-sdk-client.yml", "diffHunk": "@@ -106,7 +106,7 @@ stages:\n             JavaTestVersion: '1.8'\n             ProfileFlag: '-P integration-test-emulator'\n             DisplayName: 'Spring Emulator only Integration Tests'\n-            AdditionalArgs: '-DargLine=\"-DACCOUNT_HOST=https://localhost:8081/ -DACCOUNT_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw== -DSECONDARY_ACCOUNT_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==\"'\n+            AdditionalArgs: '-DargLine=\"-DACCOUNT_HOST=https://localhost:8081/ -DACCOUNT_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw== -DSECONDARY_ACCOUNT_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw== -DNEW_ACCOUNT_HOST=https://localhost:8081/ -DNEW_ACCOUNT_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw== -DNEW_SECONDARY_ACCOUNT_KEY=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==\"'", "originalCommit": "7b98471d19530bdca028a7217483efb96a712369", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDExMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456250110", "bodyText": "@kushagraThapar @JimSuplizio  Can you tell me how to define variables for these keys here? I defined these variables as template parameters, but it fails to parse these variables", "author": "zhoufenqin", "createdAt": "2020-07-17T06:45:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc4NzM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU2MTYwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456561608", "bodyText": "@zhoufenqin - Had a discussion with @JimSuplizio on this, it seems like it is not possible to pass parameters to archetype-sdk-tests.yml - without changing the archetype-sdk-tets.yml - which we don't plan to do now. So I expanded these back like the way they were before.", "author": "kushagraThapar", "createdAt": "2020-07-17T16:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc4NzM0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MDE5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r455790198", "bodyText": "This is missing the update tags. You'll want to add the following before the XML start code tag\n[//]: # ({x-version-update-start;com.azure:azure-spring-data-cosmos;current})\nand then add the following after the XML end code tag\n[//]: # ({x-version-update-end})\nThe way the tags are formatted they won't show up unless looking at the raw readme. The version tools use the tags for updating.", "author": "JimSuplizio", "createdAt": "2020-07-16T13:35:23Z", "path": "sdk/cosmos/azure-spring-data-cosmos/README.md", "diffHunk": "@@ -318,6 +318,137 @@ public class SampleApplication implements CommandLineRunner {\n ```\n Autowired UserRepository interface, then can do save, delete and find operations. Spring Data Azure Cosmos DB uses the CosmosTemplate to execute the queries behind *find*, *save* methods. You can use the template yourself for more complex queries.\n \n+## Support multi-database configuration\n+The `azure-spring-data-cosmos` support multi-database configuration, here is a sample to config multiple account database\n+\n+### Add the dependency\n+```xml", "originalCommit": "7b98471d19530bdca028a7217483efb96a712369", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e0d372248b3aa890a53c26726a7149f5a26227ae", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e0d372248b3aa890a53c26726a7149f5a26227ae", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-17T02:53:54Z", "type": "forcePushed"}, {"oid": "6197bd8e608fae4f2511e1d47af156b39bdba3c3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6197bd8e608fae4f2511e1d47af156b39bdba3c3", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-17T04:45:23Z", "type": "forcePushed"}, {"oid": "91b6fedadd118166d4542535534e81e21661feac", "url": "https://github.com/Azure/azure-sdk-for-java/commit/91b6fedadd118166d4542535534e81e21661feac", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-17T05:06:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMTc0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456221749", "bodyText": "As part of rebranding, we are updating cosmosdb -> cosmos . That's one of the changes I did in my other PR.\nPlease change these to azure.cosmos.... instead of azure.cosmosdb...", "author": "kushagraThapar", "createdAt": "2020-07-17T05:11:55Z", "path": "sdk/cosmos/azure-spring-data-cosmos/README.md", "diffHunk": "@@ -334,6 +334,143 @@ public class SampleApplication implements CommandLineRunner {\n ```\n Autowired UserRepository interface, then can do save, delete and find operations. Spring Data Azure Cosmos DB uses the CosmosTemplate to execute the queries behind *find*, *save* methods. You can use the template yourself for more complex queries.\n \n+## Support multi-database configuration\n+The `azure-spring-data-cosmos` support multi-database configuration, here is a sample to config multiple account database\n+\n+### Add the dependency\n+[//]: # ({x-version-update-start;com.azure:azure-spring-data-cosmos;current})\n+```xml\n+<dependency>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-spring-data-cosmos</artifactId>\n+    <version>3.0.0-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+### Config application properties\n+The example uses the `application.properties` file\n+```properties\n+azure.cosmosdb.primary.uri=your-primary-cosmosDb-uri\n+azure.cosmosdb.primary.key=your-primary-cosmosDb-key\n+azure.cosmosdb.primary.secondaryKey=your-primary-cosmosDb-secondary-key\n+azure.cosmosdb.primary.database=your-primary-cosmosDb-dbName\n+azure.cosmosdb.primary.populateQueryMetrics=if-populate-query-metrics\n+\n+azure.cosmosdb.secondary.uri=your-secondary-cosmosDb-uri\n+azure.cosmosdb.secondary.key=your-secondary-cosmosDb-key\n+azure.cosmosdb.secondary.secondaryKey=your-secondary-cosmosDb-secondary-key\n+azure.cosmosdb.secondary.database=your-secondary-cosmosDb-dbName\n+azure.cosmosdb.secondary.populateQueryMetrics=if-populate-query-metrics", "originalCommit": "91b6fedadd118166d4542535534e81e21661feac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMTg4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456221887", "bodyText": "also here -> azure.cosmos.secondary", "author": "kushagraThapar", "createdAt": "2020-07-17T05:12:25Z", "path": "sdk/cosmos/azure-spring-data-cosmos/README.md", "diffHunk": "@@ -334,6 +334,143 @@ public class SampleApplication implements CommandLineRunner {\n ```\n Autowired UserRepository interface, then can do save, delete and find operations. Spring Data Azure Cosmos DB uses the CosmosTemplate to execute the queries behind *find*, *save* methods. You can use the template yourself for more complex queries.\n \n+## Support multi-database configuration\n+The `azure-spring-data-cosmos` support multi-database configuration, here is a sample to config multiple account database\n+\n+### Add the dependency\n+[//]: # ({x-version-update-start;com.azure:azure-spring-data-cosmos;current})\n+```xml\n+<dependency>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-spring-data-cosmos</artifactId>\n+    <version>3.0.0-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+### Config application properties\n+The example uses the `application.properties` file\n+```properties\n+azure.cosmosdb.primary.uri=your-primary-cosmosDb-uri\n+azure.cosmosdb.primary.key=your-primary-cosmosDb-key\n+azure.cosmosdb.primary.secondaryKey=your-primary-cosmosDb-secondary-key\n+azure.cosmosdb.primary.database=your-primary-cosmosDb-dbName\n+azure.cosmosdb.primary.populateQueryMetrics=if-populate-query-metrics\n+\n+azure.cosmosdb.secondary.uri=your-secondary-cosmosDb-uri\n+azure.cosmosdb.secondary.key=your-secondary-cosmosDb-key\n+azure.cosmosdb.secondary.secondaryKey=your-secondary-cosmosDb-secondary-key\n+azure.cosmosdb.secondary.database=your-secondary-cosmosDb-dbName\n+azure.cosmosdb.secondary.populateQueryMetrics=if-populate-query-metrics\n+```\n+\n+### Define Entities and Repositories\n+The [Entity](https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/cosmos/azure-spring-data-cosmos#create-repositories) definition is same as above.\n+You can put different database entities into different packages.\n+\n+### Setup configuration\n+The `@EnableReactiveCosmosRepositories` or `@EnableCosmosRepositories` support user-define the cosmos template, use `reactiveCosmosTemplateRef` or `cosmosTemplateRef` to config the name of the `ReactiveCosmosTemplate` or `CosmosTemplate` bean to be used with the repositories detected.\n+<!-- embedme src/samples/java/com/azure/cosmos/multidatasource/DatabaseConfiguration.java#L25-L76 -->\n+```java\n+@Configuration\n+@PropertySource(\"classpath:application.properties\")\n+public class DatabaseConfiguration extends AbstractCosmosConfiguration {\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.primary\")\n+    public CosmosProperties primaryDataSourceConfiguration() {\n+        return new CosmosProperties();\n+    }\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.secondary\")", "originalCommit": "91b6fedadd118166d4542535534e81e21661feac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMjMzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456222335", "bodyText": "Update here -> azure.cosmos.primary", "author": "kushagraThapar", "createdAt": "2020-07-17T05:14:13Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/samples/java/com/azure/cosmos/multidatasource/DatabaseConfiguration.java", "diffHunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.cosmos.multidatasource;\n+\n+import com.azure.cosmos.CosmosClientBuilder;\n+import com.azure.cosmos.CosmosProperties;\n+import com.azure.spring.data.cosmos.CosmosFactory;\n+import com.azure.spring.data.cosmos.config.AbstractCosmosConfiguration;\n+import com.azure.spring.data.cosmos.config.CosmosConfig;\n+import com.azure.spring.data.cosmos.core.ReactiveCosmosTemplate;\n+import com.azure.spring.data.cosmos.core.convert.MappingCosmosConverter;\n+import com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+\n+/**\n+ * WARNING: MODIFYING THIS FILE WILL REQUIRE CORRESPONDING UPDATES TO README.md FILE. LINE NUMBERS\n+ * ARE USED TO EXTRACT APPROPRIATE CODE SEGMENTS FROM THIS FILE. ADD NEW CODE AT THE BOTTOM TO AVOID CHANGING\n+ * LINE NUMBERS OF EXISTING CODE SAMPLES.\n+ */\n+@Configuration\n+@PropertySource(\"classpath:application.properties\")\n+public class DatabaseConfiguration extends AbstractCosmosConfiguration {\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.primary\")", "originalCommit": "91b6fedadd118166d4542535534e81e21661feac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMjM2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456222360", "bodyText": "Update here -> azure.cosmos.secondary", "author": "kushagraThapar", "createdAt": "2020-07-17T05:14:19Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/samples/java/com/azure/cosmos/multidatasource/DatabaseConfiguration.java", "diffHunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.cosmos.multidatasource;\n+\n+import com.azure.cosmos.CosmosClientBuilder;\n+import com.azure.cosmos.CosmosProperties;\n+import com.azure.spring.data.cosmos.CosmosFactory;\n+import com.azure.spring.data.cosmos.config.AbstractCosmosConfiguration;\n+import com.azure.spring.data.cosmos.config.CosmosConfig;\n+import com.azure.spring.data.cosmos.core.ReactiveCosmosTemplate;\n+import com.azure.spring.data.cosmos.core.convert.MappingCosmosConverter;\n+import com.azure.spring.data.cosmos.repository.config.EnableReactiveCosmosRepositories;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+\n+/**\n+ * WARNING: MODIFYING THIS FILE WILL REQUIRE CORRESPONDING UPDATES TO README.md FILE. LINE NUMBERS\n+ * ARE USED TO EXTRACT APPROPRIATE CODE SEGMENTS FROM THIS FILE. ADD NEW CODE AT THE BOTTOM TO AVOID CHANGING\n+ * LINE NUMBERS OF EXISTING CODE SAMPLES.\n+ */\n+@Configuration\n+@PropertySource(\"classpath:application.properties\")\n+public class DatabaseConfiguration extends AbstractCosmosConfiguration {\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.primary\")\n+    public CosmosProperties primaryDataSourceConfiguration() {\n+        return new CosmosProperties();\n+    }\n+\n+    @Bean\n+    @ConfigurationProperties(prefix = \"azure.cosmosdb.secondary\")", "originalCommit": "91b6fedadd118166d4542535534e81e21661feac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMjYxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456222616", "bodyText": "We also changed collection -> container.\nCan you please update it here and other places -> users-container", "author": "kushagraThapar", "createdAt": "2020-07-17T05:15:18Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/samples/java/com/azure/cosmos/multidatasource/primarydatasource/User.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.cosmos.multidatasource.primarydatasource;\n+\n+import com.azure.spring.data.cosmos.core.mapping.Document;\n+import com.azure.spring.data.cosmos.core.mapping.PartitionKey;\n+import org.springframework.data.annotation.Id;\n+\n+/**\n+ * WARNING: MODIFYING THIS FILE WILL REQUIRE CORRESPONDING UPDATES TO README.md FILE. LINE NUMBERS\n+ * ARE USED TO EXTRACT APPROPRIATE CODE SEGMENTS FROM THIS FILE. ADD NEW CODE AT THE BOTTOM TO AVOID CHANGING\n+ * LINE NUMBERS OF EXISTING CODE SAMPLES.\n+ */\n+\n+@Document(container = \"users-collection\", ru = \"400\")", "originalCommit": "91b6fedadd118166d4542535534e81e21661feac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyMjczMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13197#discussion_r456222730", "bodyText": "Please update to book-container", "author": "kushagraThapar", "createdAt": "2020-07-17T05:15:38Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/samples/java/com/azure/cosmos/multidatasource/secondarydatasource/Book.java", "diffHunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.cosmos.multidatasource.secondarydatasource;\n+\n+import com.azure.spring.data.cosmos.core.mapping.Document;\n+import org.springframework.data.annotation.Id;\n+\n+/**\n+ * WARNING: MODIFYING THIS FILE WILL REQUIRE CORRESPONDING UPDATES TO README.md FILE. LINE NUMBERS\n+ * ARE USED TO EXTRACT APPROPRIATE CODE SEGMENTS FROM THIS FILE. ADD NEW CODE AT THE BOTTOM TO AVOID CHANGING\n+ * LINE NUMBERS OF EXISTING CODE SAMPLES.\n+ */\n+\n+@Document(container = \"book-collection\", ru = \"400\")", "originalCommit": "91b6fedadd118166d4542535534e81e21661feac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d92dcbc83c8deeea6158ae53667bfa90c1f97327", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d92dcbc83c8deeea6158ae53667bfa90c1f97327", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-17T06:53:43Z", "type": "commit"}, {"oid": "d92dcbc83c8deeea6158ae53667bfa90c1f97327", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d92dcbc83c8deeea6158ae53667bfa90c1f97327", "message": "support multiple database in azure-spring-data-cosmos", "committedDate": "2020-07-17T06:53:43Z", "type": "forcePushed"}, {"oid": "c26c2a12df018bbc126c28e5a2701fea681876f0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c26c2a12df018bbc126c28e5a2701fea681876f0", "message": "Merge branch 'master' into feature/support-multiple-database-in-spring-data-cosmos", "committedDate": "2020-07-17T15:45:55Z", "type": "commit"}, {"oid": "4f09f6082d6633d7580f83981b6cdd3a188f0d96", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4f09f6082d6633d7580f83981b6cdd3a188f0d96", "message": "Re-exanding parameters", "committedDate": "2020-07-17T16:45:19Z", "type": "commit"}]}