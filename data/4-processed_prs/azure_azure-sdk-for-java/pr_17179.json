{"pr_number": 17179, "pr_title": "[Monitor Exporter] Replace instrumentationKey with connectionString in builder", "pr_createdAt": "2020-11-04T22:16:28Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17179", "timeline": [{"oid": "728a9f3fab099eb8090993436960a3d467eb6671", "url": "https://github.com/Azure/azure-sdk-for-java/commit/728a9f3fab099eb8090993436960a3d467eb6671", "message": "Replace instrumentationKey with connectionString in builder", "committedDate": "2020-11-04T22:13:44Z", "type": "commit"}, {"oid": "26a314378335b5806c3e5bc7b011f38a1b74c31a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/26a314378335b5806c3e5bc7b011f38a1b74c31a", "message": "Add unit tests", "committedDate": "2020-11-04T22:58:50Z", "type": "commit"}, {"oid": "da7a50bd45bb57f6c22e0510b0d427ca3132511b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/da7a50bd45bb57f6c22e0510b0d427ca3132511b", "message": "Fix module access for unit tests", "committedDate": "2020-11-05T00:09:18Z", "type": "commit"}, {"oid": "4495d71df2c0b6b263c26d8ce31c7626c03fa5ea", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4495d71df2c0b6b263c26d8ce31c7626c03fa5ea", "message": "Add copyright", "committedDate": "2020-11-05T00:28:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3NjgwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r518376808", "bodyText": "I think ideally we would also extract IngestionEndpoint from the connection string and not expose endpoint() directly", "author": "trask", "createdAt": "2020-11-05T21:23:38Z", "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -134,15 +136,31 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n     }\n \n     /**\n-     * Sets the instrumentation key to use for exporting telemetry events to Azure Monitor.\n-     * @param instrumentationKey The instrumentation key of the Azure Monitor resource.\n+     * The connection string to use for exporting telemetry events to Azure Monitor.\n+     * @param connectionString The connection string for the Azure Monitor resource.\n      * @return The updated {@link AzureMonitorExporterBuilder} object.\n+     * @throws NullPointerException If the connection string is {@code null}.\n+     * @throws IllegalArgumentException If the connection string is invalid.\n      */\n-    public AzureMonitorExporterBuilder instrumentationKey(String instrumentationKey) {\n-        this.instrumentationKey = instrumentationKey;\n+    public AzureMonitorExporterBuilder connectionString(String connectionString) {\n+        this.instrumentationKey = extractInstrumentationKey(connectionString);", "originalCommit": "4495d71df2c0b6b263c26d8ce31c7626c03fa5ea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f502d2e2c5ae5e8569b8939ce9603ef74d737eb4", "message": "Use ingestion endpoint", "committedDate": "2020-11-10T00:45:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MDk2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520260968", "bodyText": "maybe extract once into Map<String, String> once and pull values from there? not a big deal tho", "author": "trask", "createdAt": "2020-11-10T03:19:47Z", "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -143,22 +143,23 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n      * @throws IllegalArgumentException If the connection string is invalid.\n      */\n     public AzureMonitorExporterBuilder connectionString(String connectionString) {\n-        this.instrumentationKey = extractInstrumentationKey(connectionString);\n+        this.instrumentationKey = extractValueFromConnectionString(connectionString, \"InstrumentationKey\");", "originalCommit": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTQyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520279429", "bodyText": "Done", "author": "srnagar", "createdAt": "2020-11-10T04:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MDk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NDc4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520264783", "bodyText": "if the IngestionEndpoint key is absent, ideally should default to https://dc.services.visualstudio.com", "author": "trask", "createdAt": "2020-11-10T03:34:12Z", "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -134,15 +136,32 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n     }\n \n     /**\n-     * Sets the instrumentation key to use for exporting telemetry events to Azure Monitor.\n-     * @param instrumentationKey The instrumentation key of the Azure Monitor resource.\n+     * The connection string to use for exporting telemetry events to Azure Monitor.\n+     * @param connectionString The connection string for the Azure Monitor resource.\n      * @return The updated {@link AzureMonitorExporterBuilder} object.\n+     * @throws NullPointerException If the connection string is {@code null}.\n+     * @throws IllegalArgumentException If the connection string is invalid.\n      */\n-    public AzureMonitorExporterBuilder instrumentationKey(String instrumentationKey) {\n-        this.instrumentationKey = instrumentationKey;\n+    public AzureMonitorExporterBuilder connectionString(String connectionString) {\n+        this.instrumentationKey = extractValueFromConnectionString(connectionString, \"InstrumentationKey\");\n+        this.endpoint(extractValueFromConnectionString(connectionString, \"IngestionEndpoint\"));\n         return this;", "originalCommit": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTgzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520279838", "bodyText": "Updated to use the default endpoint if connection string doesn't have one. Although, I am curious when would a connectionString not have the IngestionEndpoint. If it doesn't have one, will that qualify as a valid connectionString?", "author": "srnagar", "createdAt": "2020-11-10T04:32:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NDc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MjcyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520282723", "bodyText": "that's a good question, when we originally implemented connection strings, the Portal U/X only included IngestionEndpoint for gov clouds, so the default was important, but now the Portal U/X always includes IngestionEndpoint, so the default is likely not needed anymore. I'll start an internal thread and add you to see if we can find out.", "author": "trask", "createdAt": "2020-11-10T04:43:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NDc4Mw=="}], "type": "inlineReview"}, {"oid": "4ec178dae71de851e1d40cd27b7ffc1f7e11d934", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4ec178dae71de851e1d40cd27b7ffc1f7e11d934", "message": "Default endpoint", "committedDate": "2020-11-10T04:30:01Z", "type": "commit"}, {"oid": "16e499753e617f9ecc62548a310124380b5ed5a9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/16e499753e617f9ecc62548a310124380b5ed5a9", "message": "Update changelog and readme to prepare for release", "committedDate": "2020-11-10T19:32:28Z", "type": "commit"}]}