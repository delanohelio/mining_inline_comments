{"pr_number": 9337, "pr_title": "Refactor ExpandableStringEnum", "pr_createdAt": "2020-03-20T20:51:57Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9337", "timeline": [{"oid": "98067beb784424bfae3b1ec17f01c731888c41ba", "url": "https://github.com/Azure/azure-sdk-for-java/commit/98067beb784424bfae3b1ec17f01c731888c41ba", "message": "Update ExpandableStringEnum internal data model and added unit tests", "committedDate": "2020-03-20T20:51:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwODYyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9337#discussion_r395908624", "bodyText": "Are we going to have enum members of different types in the same enum?", "author": "jianghaolu", "createdAt": "2020-03-20T22:00:29Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/ExpandableStringEnum.java", "diffHunk": "@@ -7,39 +7,22 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.Locale;\n+import java.util.Map;\n+import java.util.Objects;\n import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n \n /**\n  * Base implementation for expandable, single string enums.\n  *\n  * @param <T> a specific expandable enum type\n  */\n public abstract class ExpandableStringEnum<T extends ExpandableStringEnum<T>> {\n-    private static final ConcurrentMap<String,\n-        ? extends ExpandableStringEnum<?>> VALUES_BY_NAME = new ConcurrentHashMap<>();\n+    private static final Map<Class<?>, ConcurrentHashMap<String, ? extends ExpandableStringEnum<?>>> VALUES", "originalCommit": "98067beb784424bfae3b1ec17f01c731888c41ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxMjc5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9337#discussion_r395912797", "bodyText": "Scratch the above comment. A question: Is there any reason to store all enum values in one map, if we don't ever call ExpandableEnumString.fromString()?", "author": "jianghaolu", "createdAt": "2020-03-20T22:15:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwODYyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxMzQ3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9337#discussion_r395913475", "bodyText": "Shouldn't, we can't currently. This is just simplifying the internal data structure to scope by enum type first then having the name -> enum mapping, before we just mutated the enum name with the class name to make them unique. This work correctly but had the downside in calls to values where we ended up duplicating all the ExpandableStringEnums that were ever loaded and checking their type to determine if it was a value of the type we were looking for.", "author": "alzimmermsft", "createdAt": "2020-03-20T22:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwODYyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxNDAxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9337#discussion_r395914011", "bodyText": "The is an example of what we had before:\nEnumClass1#value1 -> value1\nEnumClass1#value2 -> value2\nEnumClass2#value1 -> value1\n\nThis is what it would change to:\nClass1\n  value1 -> value1\n  value2 -> value2\nClass2\n  value1 -> value1", "author": "alzimmermsft", "createdAt": "2020-03-20T22:19:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwODYyNA=="}], "type": "inlineReview"}]}