{"pr_number": 15814, "pr_title": "Support InputStream as input for ClientCertificateCredential", "pr_createdAt": "2020-09-29T22:27:42Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15814", "timeline": [{"oid": "542a59f6fc74840e54da87c92d8bd8488d74cb71", "url": "https://github.com/Azure/azure-sdk-for-java/commit/542a59f6fc74840e54da87c92d8bd8488d74cb71", "message": "Support InputStream as input for ClientCertificateCredential", "committedDate": "2020-09-29T22:29:29Z", "type": "commit"}, {"oid": "2668ecaff666f10d4ee9fb1bd62b91b8ce90b44b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2668ecaff666f10d4ee9fb1bd62b91b8ce90b44b", "message": "Fix checkstyle", "committedDate": "2020-09-29T23:34:53Z", "type": "commit"}, {"oid": "8ee96ea3fb8a3811b4bd78e7e9b6c2a36ee0f174", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8ee96ea3fb8a3811b4bd78e7e9b6c2a36ee0f174", "message": "Improve getCertificateBytes logic", "committedDate": "2020-09-30T00:13:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MjAzNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497192037", "bodyText": "This check looks redundant, since we are already doing null check in the builder's build method.", "author": "g2vinay", "createdAt": "2020-09-30T01:22:43Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ClientCertificateCredential.java", "diffHunk": "@@ -35,16 +36,19 @@\n      * @param tenantId the tenant ID of the application\n      * @param clientId the client ID of the application\n      * @param certificatePath the PEM file or PFX file containing the certificate\n+     * @param certificate the PEM or PFX certificate\n      * @param certificatePassword the password protecting the PFX file\n      * @param identityClientOptions the options to configure the identity client\n      */\n-    ClientCertificateCredential(String tenantId, String clientId, String certificatePath, String certificatePassword,\n-                                IdentityClientOptions identityClientOptions) {\n-        Objects.requireNonNull(certificatePath, \"'certificatePath' cannot be null.\");\n+    ClientCertificateCredential(String tenantId, String clientId, String certificatePath, InputStream certificate,\n+                                String certificatePassword, IdentityClientOptions identityClientOptions) {\n+        Objects.requireNonNull(certificatePath == null ? certificate : certificatePath,", "originalCommit": "8ee96ea3fb8a3811b4bd78e7e9b6c2a36ee0f174", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4NjgwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497286800", "bodyText": "The check was there already - Removing it would change the behavior for the certificate path scenario.", "author": "jianghaolu", "createdAt": "2020-09-30T07:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MjAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MjE4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497192186", "bodyText": "Sets the input stream holding the pem certificate for... ?", "author": "g2vinay", "createdAt": "2020-09-30T01:23:26Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ClientCertificateCredentialBuilder.java", "diffHunk": "@@ -24,7 +26,18 @@\n      */\n     public ClientCertificateCredentialBuilder pemCertificate(String certificatePath) {\n         ValidationUtil.validateFilePath(getClass().getSimpleName(), certificatePath, \"Pem Certificate Path\");\n-        this.clientCertificate = certificatePath;\n+        this.clientCertificatePath = certificatePath;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the client certificate for authenticating to AAD.", "originalCommit": "8ee96ea3fb8a3811b4bd78e7e9b6c2a36ee0f174", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4OTcxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497289716", "bodyText": "updated", "author": "jianghaolu", "createdAt": "2020-09-30T07:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MjE4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MzAyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497193024", "bodyText": "The error message from Validation Util, won't be clear for user.\nI think, we should custom handle this with the error message \"A certificate source as input stream or file path should be configured on the builder.\"\nWe should also throw an exception, if both path and inputstream are configured.", "author": "g2vinay", "createdAt": "2020-09-30T01:26:40Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ClientCertificateCredentialBuilder.java", "diffHunk": "@@ -74,9 +102,9 @@ public ClientCertificateCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n                 put(\"tenantId\", tenantId);\n-                put(\"clientCertificate\", clientCertificate);\n+                put(\"clientCertificate\", clientCertificate == null ? clientCertificatePath : clientCertificate);", "originalCommit": "8ee96ea3fb8a3811b4bd78e7e9b6c2a36ee0f174", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4NzE3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497287178", "bodyText": "Changing the error message will break the current certificate path scenario - people may be depending on the error message.", "author": "jianghaolu", "createdAt": "2020-09-30T07:08:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MzAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMTM2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r499731360", "bodyText": "okay, then we should atleast add an additive check for the scenario and throw an exception if both path and inputstream are configured.", "author": "g2vinay", "createdAt": "2020-10-05T16:39:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MzAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MzU3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497193570", "bodyText": "Do we know for sure its pem cert?\nShould we change the property name to -> \"Certificate Path\" only ?", "author": "g2vinay", "createdAt": "2020-09-30T01:28:49Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -70,8 +70,9 @@\n                 } else if (verifyNotNull(certPath)) {\n                     // 1.2 Attempt ClientCertificateCredential\n                     logger.info(\"Azure Identity => EnvironmentCredential invoking ClientCertificateCredential\");\n-                    targetCredential = new ClientCertificateCredential(tenantId, clientId, certPath,\n-                        null, identityClientOptions);\n+                    ValidationUtil.validateFilePath(getClass().getSimpleName(), certPath, \"Pem Certificate Path\");", "originalCommit": "8ee96ea3fb8a3811b4bd78e7e9b6c2a36ee0f174", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4NjA1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497286050", "bodyText": "Yes only PEM certs are supported for Environment credential because there's no environment variable support for the pfx password.", "author": "jianghaolu", "createdAt": "2020-09-30T07:06:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MzU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MzkzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497193938", "bodyText": "Sets the input stream holding the pfx certificate for... ?", "author": "g2vinay", "createdAt": "2020-09-30T01:30:14Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ClientCertificateCredentialBuilder.java", "diffHunk": "@@ -35,9 +48,24 @@ public ClientCertificateCredentialBuilder pemCertificate(String certificatePath)\n      * @param clientCertificatePassword the password protecting the PFX file\n      * @return An updated instance of this builder.\n      */\n-    public ClientCertificateCredentialBuilder pfxCertificate(String certificatePath, String clientCertificatePassword) {\n+    public ClientCertificateCredentialBuilder pfxCertificate(String certificatePath,\n+                                                             String clientCertificatePassword) {\n         ValidationUtil.validateFilePath(getClass().getSimpleName(), certificatePath, \"Pfx Certificate Path\");\n-        this.clientCertificate = certificatePath;\n+        this.clientCertificatePath = certificatePath;\n+        this.clientCertificatePassword = clientCertificatePassword;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the client certificate for authenticating to AAD.", "originalCommit": "8ee96ea3fb8a3811b4bd78e7e9b6c2a36ee0f174", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4OTYyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r497289625", "bodyText": "updated", "author": "jianghaolu", "createdAt": "2020-09-30T07:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MzkzOA=="}], "type": "inlineReview"}, {"oid": "b28db75bdd543f223b3460e3a8f6808303747efc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b28db75bdd543f223b3460e3a8f6808303747efc", "message": "Improve client certificate credential builder javadocs", "committedDate": "2020-09-30T07:15:24Z", "type": "commit"}, {"oid": "ee63ff1db61b353a6a90666d93cd892e676690ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ee63ff1db61b353a6a90666d93cd892e676690ee", "message": "Add extra check on certificate credential builder", "committedDate": "2020-10-05T18:24:55Z", "type": "commit"}, {"oid": "70121ad47aa66264e9681c75d56ce326ea7ef6c4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/70121ad47aa66264e9681c75d56ce326ea7ef6c4", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into cert-cred-input-stream", "committedDate": "2020-10-05T18:33:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0Mzg0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r499843840", "bodyText": "It seems like we're requiring a password for PFX and not supporting a password for PEM. If we support password protected certificates, I think we should support them by adding a separate property such as Password or CertificatePassword", "author": "schaabs", "createdAt": "2020-10-05T20:10:20Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ClientCertificateCredentialBuilder.java", "diffHunk": "@@ -13,31 +15,59 @@\n  * @see ClientCertificateCredential\n  */\n public class ClientCertificateCredentialBuilder extends AadCredentialBuilderBase<ClientCertificateCredentialBuilder> {\n-    private String clientCertificate;\n+    private String clientCertificatePath;\n+    private InputStream clientCertificate;\n     private String clientCertificatePassword;\n+    private final ClientLogger logger = new ClientLogger(ClientCertificateCredentialBuilder.class);\n \n     /**\n-     * Sets the client certificate for authenticating to AAD.\n+     * Sets the path of the PEM certificate for authenticating to AAD.\n      *\n      * @param certificatePath the PEM file containing the certificate\n      * @return An updated instance of this builder.\n      */\n     public ClientCertificateCredentialBuilder pemCertificate(String certificatePath) {\n         ValidationUtil.validateFilePath(getClass().getSimpleName(), certificatePath, \"Pem Certificate Path\");\n-        this.clientCertificate = certificatePath;\n+        this.clientCertificatePath = certificatePath;\n         return this;\n     }\n \n     /**\n-     * Sets the client certificate for authenticating to AAD.\n+     * Sets the input stream holding the PEM certificate for authenticating to AAD.\n+     *\n+     * @param certificate the input stream containing the PEM certificate\n+     * @return An updated instance of this builder.\n+     */\n+    public ClientCertificateCredentialBuilder pemCertificate(InputStream certificate) {\n+        this.clientCertificate = certificate;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the path and password of the PFX certificate for authenticating to AAD.\n      *\n      * @param certificatePath the password protected PFX file containing the certificate\n      * @param clientCertificatePassword the password protecting the PFX file\n      * @return An updated instance of this builder.\n      */\n-    public ClientCertificateCredentialBuilder pfxCertificate(String certificatePath, String clientCertificatePassword) {\n+    public ClientCertificateCredentialBuilder pfxCertificate(String certificatePath,\n+                                                             String clientCertificatePassword) {", "originalCommit": "70121ad47aa66264e9681c75d56ce326ea7ef6c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3MjAxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r499872018", "bodyText": "Per discussion offline - this will be addressed in a future PR. Issue link coming soon", "author": "jianghaolu", "createdAt": "2020-10-05T21:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0Mzg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3Mjg3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r499872874", "bodyText": "After discussing this offline, this is something we should address in a subsequent release.", "author": "schaabs", "createdAt": "2020-10-05T21:06:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0Mzg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3NTI3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r499875278", "bodyText": "Issue: #15955", "author": "jianghaolu", "createdAt": "2020-10-05T21:12:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0Mzg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk1MDY4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r499950686", "bodyText": "Why do we have both the path to the file and the InputStream? If the inputstream is given, then we don't need the path right? Maybe have separate overloads - one with input stream and one with file path.", "author": "srnagar", "createdAt": "2020-10-06T01:01:55Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ClientCertificateCredential.java", "diffHunk": "@@ -35,16 +36,19 @@\n      * @param tenantId the tenant ID of the application\n      * @param clientId the client ID of the application\n      * @param certificatePath the PEM file or PFX file containing the certificate\n+     * @param certificate the PEM or PFX certificate\n      * @param certificatePassword the password protecting the PFX file\n      * @param identityClientOptions the options to configure the identity client\n      */\n-    ClientCertificateCredential(String tenantId, String clientId, String certificatePath, String certificatePassword,\n-                                IdentityClientOptions identityClientOptions) {\n-        Objects.requireNonNull(certificatePath, \"'certificatePath' cannot be null.\");\n+    ClientCertificateCredential(String tenantId, String clientId, String certificatePath, InputStream certificate,", "originalCommit": "70121ad47aa66264e9681c75d56ce326ea7ef6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk1MjIwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15814#discussion_r499952201", "bodyText": "If we are doing this, then maybe the ClientCertificateCredential constructor should only have the input stream arg. If the path is given, the builder can wrap the path with FileInputStream and create the credential instance. This saves multiple if-else checks in ClientCertificateCredential.", "author": "srnagar", "createdAt": "2020-10-06T01:08:15Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ClientCertificateCredentialBuilder.java", "diffHunk": "@@ -86,9 +116,14 @@ public ClientCertificateCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n                 put(\"tenantId\", tenantId);\n-                put(\"clientCertificate\", clientCertificate);\n+                put(\"clientCertificate\", clientCertificate == null ? clientCertificatePath : clientCertificate);\n             }});\n-        return new ClientCertificateCredential(tenantId, clientId, clientCertificate, clientCertificatePassword,\n-            identityClientOptions);\n+        if (clientCertificate != null && clientCertificatePath != null) {\n+            throw logger.logExceptionAsWarning(new IllegalArgumentException(\"Both certificate input stream and \"\n+                    + \"certificate path are provided in ClientCertificateCredentialBuilder. Only one of them should \"\n+                    + \"be provided.\"));\n+        }", "originalCommit": "70121ad47aa66264e9681c75d56ce326ea7ef6c4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}