{"pr_number": 10050, "pr_title": "Revision to CONTRIBUTING.md after POM restructure.", "pr_createdAt": "2020-04-10T03:17:24Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10050", "timeline": [{"oid": "cb52725f9142fca06cc075709802936277eacb65", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cb52725f9142fca06cc075709802936277eacb65", "message": "Revision to CONTRIBUTING.md after POM restructure.", "committedDate": "2020-04-10T03:01:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NjY0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10050#discussion_r406586649", "bodyText": "Why don't we use -pl -am for live tests here? Or mention dependencies need to cache in local before run this?", "author": "sima-zhu", "createdAt": "2020-04-10T03:29:36Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -97,7 +116,7 @@ running live tests.\n To run live tests against a service after deploying live resources:\n \n ```\n-mvn -f sdk/keyvault/pom.service.xml -Dmaven.wagon.http.pool=false --batch-mode --fail-at-end --settings eng/settings.xml test\n+mvn -f sdk/keyvault/pom.xml -Dmaven.wagon.http.pool=false --batch-mode --fail-at-end --settings eng/settings.xml test", "originalCommit": "cb52725f9142fca06cc075709802936277eacb65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU5ODY1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10050#discussion_r406598658", "bodyText": "Let's say you are working on EventHubs ... do you really want to spin up all the storage resources for your EventHubs test (because of checkpoint store?). Nothing here is stopping you do it but I'm trying to make it simple for folks.\nOf course if you are making changes across storage and event hubs then you'll probably want to do just that. Although in that case you'd probably run Maven against the root and specify both sets of modules on the -pl switch.", "author": "mitchdenny", "createdAt": "2020-04-10T04:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NjY0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4Njk1NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10050#discussion_r406586955", "bodyText": "It is much cleaner! Hooray!", "author": "sima-zhu", "createdAt": "2020-04-10T03:31:19Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -56,27 +56,46 @@ Merging Pull Requests (for project contributors with write access)\n \n ### Building and Testing\n \n-The easiest way to build is by running the following command from the root folder:\n+>**Note**: Build and test instructions have recently changed. The ```pom.client.xml``` file is no\n+> longer in the root of the repository and should be not be used as an aggregator moving forward.\n+\n+This repository uses Maven to build the various modules that make up the Azure SDK for Java. You can build the entire set of modules by running the following command from the root of the repository:\n+\n ```\n-mvn -f pom.client.xml -Dgpg.skip -DskipTests -Dinclude-non-shipping-modules clean install\n+mvn -Dgpg.skip clean install", "originalCommit": "cb52725f9142fca06cc075709802936277eacb65", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NzQwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10050#discussion_r406587403", "bodyText": "Is it better to have another example on how to build two modules at once?\ne.g.\n-pl com.azure:azure-storage-blob, com.azure:azure-storage-file", "author": "sima-zhu", "createdAt": "2020-04-10T03:33:36Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -56,27 +56,46 @@ Merging Pull Requests (for project contributors with write access)\n \n ### Building and Testing\n \n-The easiest way to build is by running the following command from the root folder:\n+>**Note**: Build and test instructions have recently changed. The ```pom.client.xml``` file is no\n+> longer in the root of the repository and should be not be used as an aggregator moving forward.\n+\n+This repository uses Maven to build the various modules that make up the Azure SDK for Java. You can build the entire set of modules by running the following command from the root of the repository:\n+\n ```\n-mvn -f pom.client.xml -Dgpg.skip -DskipTests -Dinclude-non-shipping-modules clean install\n+mvn -Dgpg.skip clean install\n ```\n-- `-f pom.client.xml`: tells maven to target latest Azure SDK for Java project.\n-- `-Dgpg.skip`: disables [gpg](https://mran.microsoft.com/snapshot/2016-12-19/web/packages/gpg/vignettes/intro.html) signing.\n-- `-DskipTests:` Building without running unit tests would speed operation up, however, make sure all tests pass before creating a new PR.\n-- `-Dinclude-non-shipping-modules:` Installing and Runing sdk build tools.\n-- `clean:` will remove any previous generated output.\n-- `install:`  compiles project and installs it in the local Maven cache.\n \n->**Note**: Refer to [wiki](https://github.com/Azure/azure-sdk-for-java/wiki/Building) for learning about how to build using Java 11 \n->and [this wiki](https://github.com/Azure/azure-sdk-for-java/wiki/Unit-Testing) for guidelines on unit testing\n+This will build, test and install all of the modules into your local Maven cache. Optionally, you\n+can also skip unit test execution by issuing the following command. This can be useful when you\n+just want to try out a quick change without having to worry about unit tests.\n \n-### Compiling one project only\n+```\n+mvn -Dgpg.skip -DskipTests clean install\n+```\n \n+If you only want to work on one module, you may opt to build just that module and its dependencies (e.g. com.azure:azure-messaging-eventhubs):\n+\n+```\n+mvn -Dgpg.skip -DskipTests -pl com.azure:azure-messaging-eventhubs -am", "originalCommit": "cb52725f9142fca06cc075709802936277eacb65", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU5OTEwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10050#discussion_r406599103", "bodyText": "Added an example.", "author": "mitchdenny", "createdAt": "2020-04-10T04:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4NzQwMw=="}], "type": "inlineReview"}, {"oid": "370199fca0ab0375ac2e0e2d59c17a7665619a31", "url": "https://github.com/Azure/azure-sdk-for-java/commit/370199fca0ab0375ac2e0e2d59c17a7665619a31", "message": "Added multi-module example.", "committedDate": "2020-04-10T04:40:22Z", "type": "commit"}]}