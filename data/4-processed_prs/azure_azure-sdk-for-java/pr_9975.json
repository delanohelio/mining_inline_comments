{"pr_number": 9975, "pr_title": "Added listModels() API implementation and a few samples", "pr_createdAt": "2020-04-08T18:45:36Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9975", "timeline": [{"oid": "889475eaa858a040ded3964a8822373fb1da8488", "url": "https://github.com/Azure/azure-sdk-for-java/commit/889475eaa858a040ded3964a8822373fb1da8488", "message": "samples for extract receipts", "committedDate": "2020-04-08T18:43:46Z", "type": "commit"}, {"oid": "ffe4ce3c31d636f2fd1b3a65ae9c1343f1b64318", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ffe4ce3c31d636f2fd1b3a65ae9c1343f1b64318", "message": "add codeowner to form recognizer", "committedDate": "2020-04-08T19:09:33Z", "type": "commit"}, {"oid": "dcac651fea7fad00d472b1c92448ee294553a1c9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dcac651fea7fad00d472b1c92448ee294553a1c9", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into FR-Samples", "committedDate": "2020-04-08T22:01:54Z", "type": "commit"}, {"oid": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "message": "add listModel API", "committedDate": "2020-04-09T22:49:47Z", "type": "commit"}, {"oid": "f077eec83a51c9c87006c36dfaede2191d5309c0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f077eec83a51c9c87006c36dfaede2191d5309c0", "message": "remvoe cred", "committedDate": "2020-04-10T04:00:42Z", "type": "commit"}, {"oid": "b97f83c64d13f4bd85c1243aca99f7b405d489be", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b97f83c64d13f4bd85c1243aca99f7b405d489be", "message": "update javadoc", "committedDate": "2020-04-10T04:50:11Z", "type": "commit"}, {"oid": "669f15ad58c93c393c3c6fa248512d2e4cfb6a88", "url": "https://github.com/Azure/azure-sdk-for-java/commit/669f15ad58c93c393c3c6fa248512d2e4cfb6a88", "message": "regenerate code with v4 auto rest", "committedDate": "2020-04-10T19:55:09Z", "type": "commit"}, {"oid": "730f5c4bcdc7d30ece288e28e8f32257098e937d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/730f5c4bcdc7d30ece288e28e8f32257098e937d", "message": "added json autotest v4", "committedDate": "2020-04-10T19:59:44Z", "type": "commit"}, {"oid": "6add0fdd7fd7fc4258024e763aaac64262d91e71", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6add0fdd7fd7fc4258024e763aaac64262d91e71", "message": "new autorest json file and option values", "committedDate": "2020-04-10T20:11:53Z", "type": "commit"}, {"oid": "d0e6c11bb61e716ca1d78cf9eb255910519ed1e1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d0e6c11bb61e716ca1d78cf9eb255910519ed1e1", "message": "update based on new generated imple", "committedDate": "2020-04-10T20:14:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTc5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406911795", "bodyText": "List information for all models.", "author": "samvaity", "createdAt": "2020-04-10T19:40:29Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -112,4 +118,15 @@\n         return client.beginExtractReceipts(buffer, length, includeTextDetails, formContentType, pollInterval)\n             .getSyncPoller();\n     }\n+\n+    /**\n+     * List all available models.", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTk3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406911978", "bodyText": "missing javadoc.", "author": "samvaity", "createdAt": "2020-04-10T19:41:02Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -158,6 +167,57 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             fetchExtractReceiptResult(includeTextDetails));\n     }\n \n+\n+    /**\n+     * List all available models.\n+     *\n+     * @return {@link PagedFlux} of {@link CustomFormModelInfo}.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<CustomFormModelInfo> listModels() {\n+         try {\n+            return new PagedFlux<>(() -> withContext(context -> listFirstPageModelInfo(context)),\n+                continuationToken -> withContext(context -> listNextPageModelInfo(continuationToken, context)));\n+        } catch (RuntimeException ex) {\n+            return new PagedFlux<>(() -> monoError(logger, ex));\n+        }\n+    }\n+\n+    PagedFlux<CustomFormModelInfo> listModels(Context context) {", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk3MTcyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406971720", "bodyText": "It is so wired. I have to close my browser and reopen this link. then the changes shows up. It should already update.", "author": "mssfang", "createdAt": "2020-04-10T22:41:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMTk5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r407311990", "bodyText": "it is updated.", "author": "samvaity", "createdAt": "2020-04-13T04:22:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMTk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMjAyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406912023", "bodyText": "extra line", "author": "samvaity", "createdAt": "2020-04-10T19:41:12Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -158,6 +167,57 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             fetchExtractReceiptResult(includeTextDetails));\n     }\n \n+\n+    /**\n+     * List all available models.\n+     *\n+     * @return {@link PagedFlux} of {@link CustomFormModelInfo}.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<CustomFormModelInfo> listModels() {\n+         try {\n+            return new PagedFlux<>(() -> withContext(context -> listFirstPageModelInfo(context)),\n+                continuationToken -> withContext(context -> listNextPageModelInfo(continuationToken, context)));\n+        } catch (RuntimeException ex) {\n+            return new PagedFlux<>(() -> monoError(logger, ex));\n+        }\n+    }\n+\n+    PagedFlux<CustomFormModelInfo> listModels(Context context) {\n+        return new PagedFlux<>(() -> listFirstPageModelInfo(context),\n+            continuationToken -> listNextPageModelInfo(continuationToken, context));\n+    }\n+\n+", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMjUzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406912538", "bodyText": "Should be @Immutable.", "author": "samvaity", "createdAt": "2020-04-10T19:42:48Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CustomFormModelInfo.java", "diffHunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+\n+import java.time.OffsetDateTime;\n+import java.util.UUID;\n+\n+/**\n+ * The CustomFormModelInfo model.\n+ */\n+@Fluent", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMjY0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406912649", "bodyText": "ModelID should be a String?", "author": "samvaity", "createdAt": "2020-04-10T19:43:07Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CustomFormModelInfo.java", "diffHunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+\n+import java.time.OffsetDateTime;\n+import java.util.UUID;\n+\n+/**\n+ * The CustomFormModelInfo model.\n+ */\n+@Fluent\n+public final class CustomFormModelInfo {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private UUID modelId;", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2OTkxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406969916", "bodyText": "The auto-generated class ModelInfo uses UUID as type of modelId.", "author": "mssfang", "createdAt": "2020-04-10T22:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxMjY0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTA1NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406939055", "bodyText": "All fields must be final", "author": "samvaity", "createdAt": "2020-04-10T20:51:45Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CustomFormModelInfo.java", "diffHunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+\n+import java.time.OffsetDateTime;\n+import java.util.UUID;\n+\n+/**\n+ * The CustomFormModelInfo model.\n+ */\n+@Fluent\n+public final class CustomFormModelInfo {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private UUID modelId;\n+\n+    /*\n+     * Status of the model.\n+     */\n+    private ModelTrainingStatus status;", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTQ5Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406939492", "bodyText": "Should be expandable enum", "author": "samvaity", "createdAt": "2020-04-10T20:53:10Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/ModelTrainingStatus.java", "diffHunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+public enum ModelTrainingStatus {", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzOTYwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406939609", "bodyText": "update the description.", "author": "samvaity", "createdAt": "2020-04-10T20:53:30Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ListModels.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CustomFormModelInfo;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.Context;\n+\n+/**\n+ * Sample for listing all available models in a synchronous way.\n+ */\n+public class ListModels {\n+    /**\n+     * Sample for extracting receipt information using file source URL.", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDEwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406940106", "bodyText": "Does this need to use the Context param overload?", "author": "samvaity", "createdAt": "2020-04-10T20:54:54Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ListModels.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CustomFormModelInfo;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.Context;\n+\n+/**\n+ * Sample for listing all available models in a synchronous way.\n+ */\n+public class ListModels {\n+    /**\n+     * Sample for extracting receipt information using file source URL.\n+     *\n+     * @param args Unused. Arguments to the program.\n+     */\n+    public static void main(String[] args) {\n+        FormRecognizerClient client = new FormRecognizerClientBuilder()\n+            .apiKey(new AzureKeyCredential(\"48c9ec5b1c444c899770946defc486c4\"))\n+            .endpoint(\"https://javaformrecognizertestresource.cognitiveservices.azure.com/\")\n+            .buildClient();\n+\n+        for (CustomFormModelInfo modelInfo : client.listModels(Context.NONE)) {", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjA4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406966089", "bodyText": "I need to create another overload method for listModels(), right now it only has max overload method", "author": "mssfang", "createdAt": "2020-04-10T22:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDQyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406940425", "bodyText": "Based on our discussion for samples in the morning. Recommend only keeping the sync sample.", "author": "samvaity", "createdAt": "2020-04-10T20:55:51Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ListModelsAsync.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjQxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406966414", "bodyText": "I feel list models() need to have async samples. It is like listConfigurationSetting(). Otherwise, user won't know how to use aysnc listModels()", "author": "mssfang", "createdAt": "2020-04-10T22:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDQyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMzI4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r407313286", "bodyText": "We can have this additional sample too. It should help since it will show async way of iteration through the paged response.", "author": "samvaity", "createdAt": "2020-04-13T04:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDY3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406940679", "bodyText": "nit: logger.warning(\"Failed to list all model information\",", "author": "samvaity", "createdAt": "2020-04-10T20:56:42Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -158,6 +167,57 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             fetchExtractReceiptResult(includeTextDetails));\n     }\n \n+\n+    /**\n+     * List all available models.\n+     *\n+     * @return {@link PagedFlux} of {@link CustomFormModelInfo}.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<CustomFormModelInfo> listModels() {\n+         try {\n+            return new PagedFlux<>(() -> withContext(context -> listFirstPageModelInfo(context)),\n+                continuationToken -> withContext(context -> listNextPageModelInfo(continuationToken, context)));\n+        } catch (RuntimeException ex) {\n+            return new PagedFlux<>(() -> monoError(logger, ex));\n+        }\n+    }\n+\n+    PagedFlux<CustomFormModelInfo> listModels(Context context) {\n+        return new PagedFlux<>(() -> listFirstPageModelInfo(context),\n+            continuationToken -> listNextPageModelInfo(continuationToken, context));\n+    }\n+\n+\n+    private Mono<PagedResponse<CustomFormModelInfo>> listFirstPageModelInfo(Context context) {\n+        return service.listCustomModelsSinglePageAsync(context)\n+            .doOnRequest(ignoredValue -> logger.info(\"Listing all model information\"))\n+            .doOnSuccess(response -> logger.info(\"Listed all models\"))\n+            .doOnError(error -> logger.warning(\"Failed to list all models\", error))", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MzY2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406943660", "bodyText": "without providing error?", "author": "mssfang", "createdAt": "2020-04-10T21:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDY3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDgzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406940831", "bodyText": "ServiceMethod annotation.", "author": "samvaity", "createdAt": "2020-04-10T20:57:09Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -158,6 +167,57 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             fetchExtractReceiptResult(includeTextDetails));\n     }\n \n+\n+    /**\n+     * List all available models.\n+     *\n+     * @return {@link PagedFlux} of {@link CustomFormModelInfo}.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<CustomFormModelInfo> listModels() {\n+         try {\n+            return new PagedFlux<>(() -> withContext(context -> listFirstPageModelInfo(context)),\n+                continuationToken -> withContext(context -> listNextPageModelInfo(continuationToken, context)));\n+        } catch (RuntimeException ex) {\n+            return new PagedFlux<>(() -> monoError(logger, ex));\n+        }\n+    }\n+\n+    PagedFlux<CustomFormModelInfo> listModels(Context context) {", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MzQ5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406943499", "bodyText": "it is a helper method that used in Sync Client.", "author": "mssfang", "createdAt": "2020-04-10T21:03:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMjA4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r407312085", "bodyText": "@ServiceMethod(returns = ReturnType.COLLECTION)", "author": "samvaity", "createdAt": "2020-04-13T04:23:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzMyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r407593327", "bodyText": "This is package-private helper method, it should not need to include @ServiceMethod, will follow up this with u offline.", "author": "mssfang", "createdAt": "2020-04-13T17:09:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MDgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MTQ1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406941451", "bodyText": "Should mention about models info here?", "author": "samvaity", "createdAt": "2020-04-10T20:58:17Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -158,6 +167,57 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             fetchExtractReceiptResult(includeTextDetails));\n     }\n \n+\n+    /**\n+     * List all available models.\n+     *\n+     * @return {@link PagedFlux} of {@link CustomFormModelInfo}.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<CustomFormModelInfo> listModels() {\n+         try {\n+            return new PagedFlux<>(() -> withContext(context -> listFirstPageModelInfo(context)),\n+                continuationToken -> withContext(context -> listNextPageModelInfo(continuationToken, context)));\n+        } catch (RuntimeException ex) {\n+            return new PagedFlux<>(() -> monoError(logger, ex));\n+        }\n+    }\n+\n+    PagedFlux<CustomFormModelInfo> listModels(Context context) {\n+        return new PagedFlux<>(() -> listFirstPageModelInfo(context),\n+            continuationToken -> listNextPageModelInfo(continuationToken, context));\n+    }\n+\n+\n+    private Mono<PagedResponse<CustomFormModelInfo>> listFirstPageModelInfo(Context context) {\n+        return service.listCustomModelsSinglePageAsync(context)\n+            .doOnRequest(ignoredValue -> logger.info(\"Listing all model information\"))\n+            .doOnSuccess(response -> logger.info(\"Listed all models\"))\n+            .doOnError(error -> logger.warning(\"Failed to list all models\", error))\n+            .map(res -> new PagedResponseBase<>(\n+                res.getRequest(),\n+                res.getStatusCode(),\n+                res.getHeaders(),\n+                toCustomFormModelInfo(res.getValue()),\n+                res.getContinuationToken(),\n+                null));\n+    }\n+\n+    private Mono<PagedResponse<CustomFormModelInfo>> listNextPageModelInfo(String nextPageLink, Context context) {\n+        return service.listCustomModelsNextSinglePageAsync(nextPageLink)\n+            .doOnSubscribe(ignoredValue -> logger.info(\"Retrieving the next listing page - Page {}\", nextPageLink))", "originalCommit": "e731cbb36b89db00cbfd3d3f199ab3bb0ddeee73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2ODQ3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r406968470", "bodyText": "I feel it is more about the next page link. So we should not mention about the models info here.", "author": "mssfang", "createdAt": "2020-04-10T22:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MTQ1MQ=="}], "type": "inlineReview"}, {"oid": "225a93d9c8c38ab04e39bc9194a0fc14eb036d9d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/225a93d9c8c38ab04e39bc9194a0fc14eb036d9d", "message": "address feedback 1", "committedDate": "2020-04-10T22:30:37Z", "type": "commit"}, {"oid": "90f58dcce34429c2105579eba8b2e5b9e1340e33", "url": "https://github.com/Azure/azure-sdk-for-java/commit/90f58dcce34429c2105579eba8b2e5b9e1340e33", "message": "change to @immutabnle for CustomFormModelInfo", "committedDate": "2020-04-10T22:36:39Z", "type": "commit"}, {"oid": "1312cd332e7251f2b1f463f0350f738d2dfcea1b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1312cd332e7251f2b1f463f0350f738d2dfcea1b", "message": "make final class field to be immutable", "committedDate": "2020-04-10T22:46:38Z", "type": "commit"}, {"oid": "e584cfa2c658db39eae4ccec5304a0831fe7604b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e584cfa2c658db39eae4ccec5304a0831fe7604b", "message": "wording", "committedDate": "2020-04-10T22:56:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMjUzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r407312536", "bodyText": "list A list", "author": "samvaity", "createdAt": "2020-04-13T04:25:38Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -374,4 +377,40 @@ private static TimeValue toFieldValueTime(com.azure.ai.formrecognizer.implementa\n             serviceDateValue.getValueTime(), serviceDateValue.getPage());\n         // TODO: currently returning a string, waiting on swagger update.\n     }\n+\n+    /**\n+     * Transform a list of {@link ModelInfo} to a list of {@link CustomFormModelInfo}.\n+     *\n+     * @param list A list of {@link ModelInfo}.", "originalCommit": "e584cfa2c658db39eae4ccec5304a0831fe7604b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzgxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r407593813", "bodyText": "Does it already is \"A list\"?\n     * @param list A list of {@link ModelInfo}.", "author": "mssfang", "createdAt": "2020-04-13T17:10:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMjUzNg=="}], "type": "inlineReview"}, {"oid": "1d6c4879066585e8f60130bb2ff466f96556f9a2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1d6c4879066585e8f60130bb2ff466f96556f9a2", "message": "add tests and correct checkstyles", "committedDate": "2020-04-13T23:25:12Z", "type": "commit"}, {"oid": "88d7a2d40646c85ffe80976c0db504234401d71d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/88d7a2d40646c85ffe80976c0db504234401d71d", "message": "embed me updates", "committedDate": "2020-04-14T00:49:03Z", "type": "commit"}, {"oid": "6e4bf439fa61079c47b0093a00ea125965f65504", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6e4bf439fa61079c47b0093a00ea125965f65504", "message": "lower branch coveragge", "committedDate": "2020-04-14T02:27:53Z", "type": "commit"}, {"oid": "f9659e4f9a2189d6cfbcf3246fa790d5e5e74c2a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f9659e4f9a2189d6cfbcf3246fa790d5e5e74c2a", "message": "expandable enum", "committedDate": "2020-04-14T02:48:15Z", "type": "commit"}, {"oid": "c9078a1762c9681fea62e66757198be2a8161d1c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c9078a1762c9681fea62e66757198be2a8161d1c", "message": "remove unnecessary samples", "committedDate": "2020-04-14T04:44:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg2NTk5Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9975#discussion_r407865992", "bodyText": "This should be a string", "author": "samvaity", "createdAt": "2020-04-14T04:52:35Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CustomFormModelInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+import java.time.OffsetDateTime;\n+import java.util.UUID;\n+\n+/**\n+ * The CustomFormModelInfo model.\n+ */\n+@Immutable\n+public final class CustomFormModelInfo {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final UUID modelId;", "originalCommit": "c9078a1762c9681fea62e66757198be2a8161d1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "207d2f50ac14f51b5f89287a18604e669493a9ce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/207d2f50ac14f51b5f89287a18604e669493a9ce", "message": "remove generated option, client-side-validations", "committedDate": "2020-04-14T05:20:36Z", "type": "commit"}, {"oid": "338c809046b0c9e34b0a4f705f68b70664388614", "url": "https://github.com/Azure/azure-sdk-for-java/commit/338c809046b0c9e34b0a4f705f68b70664388614", "message": "use String instead of UUID", "committedDate": "2020-04-14T05:30:15Z", "type": "commit"}]}