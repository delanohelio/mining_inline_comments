{"pr_number": 7571, "pr_title": "first round archetype-sdk-data.yml", "pr_createdAt": "2020-01-21T15:50:36Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7571", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTExOTIxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369119212", "bodyText": "Start Jetty is a data only task and is no longer necessary in client.", "author": "JimSuplizio", "createdAt": "2020-01-21T16:49:59Z", "path": "eng/pipelines/templates/jobs/archetype-sdk-client.yml", "diffHunk": "@@ -217,26 +217,13 @@ jobs:\n           Options: --batch-mode\n           MavenOptions: $(MemoryOptions) $(LoggingOptions)\n \n-      - task: Maven@3", "originalCommit": "eec8a15f8f10d3e52f6d481c14ad2f607e36c846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyMjY2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369122663", "bodyText": "The previous version of Start Jetty was making the call to start it using pom.client.xml, since the task lives in parent\\pom.xml and we're in the archetype-sdk-data.yml, use the pom.data.xml", "author": "JimSuplizio", "createdAt": "2020-01-21T16:55:46Z", "path": "eng/pipelines/templates/jobs/archetype-sdk-data.yml", "diffHunk": "@@ -0,0 +1,222 @@\n+parameters:\n+  SDKType: not-specified # Set a default that breaks in obvious ways.\n+  ServiceDirectory: not-specified # Set a default that breaks in obvious ways.\n+  PreTestSteps: []\n+  TestOptions: '$(DefaultOptions)'\n+  TestGoals: verify\n+  TestMatrix:\n+    Linux - Java 8:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Linux on Java 1.8'\n+    macOS - Java 8:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.8'\n+      RunTitle: 'macOS on Java 1.8'\n+    Windows - Java 8:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Windows on Java 1.8'\n+    Linux - Java 11:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Linux on Java 1.11'\n+    macOS - Java 11:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.11'\n+      RunTitle: 'macOS on Java 1.11'\n+    Windows - Java 11:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Windows on Java 1.11'\n+\n+jobs:\n+  - job: 'Build'\n+\n+    variables:\n+      - template: ../variables/globals.yml\n+\n+    pool:\n+      vmImage: 'ubuntu-16.04'\n+\n+    strategy:\n+      matrix:\n+        Client Libraries:\n+          ArtifactName: 'packages'\n+          JavaVersion: '1.11'\n+\n+    steps:\n+      - script: |\n+          echo \"##vso[build.addbuildtag]Scheduled\"\n+        displayName: 'Tag scheduled builds'\n+        condition: and(succeeded(), eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule'))\n+\n+      - task: UsePythonVersion@0\n+        displayName: 'Use Python 3.6'\n+        inputs:\n+          versionSpec: '3.6'\n+\n+      - template: tools/daily-dev-build-variable/daily-dev-build-variable.yml@azure-sdk-tools\n+\n+      - ${{ each artifact in parameters.Artifacts }}:\n+        - script: |\n+            python3 --version\n+            python3 eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --build-qualifier dev.$(Build.BuildNumber) --artifact-id ${{artifact.name}} --group-id ${{artifact.groupId}}\n+          condition: and(succeeded(), eq(variables['SetDevVersion'],'true'))\n+          displayName: Append dev package version suffix for ${{artifact.name}}\n+\n+      - script: |\n+          python3 --version\n+          python3 eng/versioning/update_versions.py --update-type library --build-type ${{parameters.SDKType}}\n+        condition: and(succeeded(), eq(variables['SetDevVersion'],'true'))\n+        displayName: Apply version settings to repository\n+\n+      - script: |\n+          pip install markdown2 BeautifulSoup4\n+        displayName: 'pip install markdown2 and BeautifulSoup4'\n+\n+      - template: ../steps/cache-maven-repository.yml\n+\n+      - template: eng/pipelines/templates/scripts/replace-relative-links.yml@azure-sdk-tools\n+        parameters:\n+          TargetFolder: $(Build.SourcesDirectory)\n+          RootFolder: $(Build.SourcesDirectory)\n+          BuildSHA: $(Build.SourceVersion)\n+          RepoId: 'Azure/azure-sdk-for-java'\n+\n+      - task: Maven@3\n+        displayName: 'Build and Package'\n+        inputs:\n+          mavenPomFile: sdk/${{parameters.ServiceDirectory}}/pom.service.xml\n+          goals: 'package'\n+          options: '$(DefaultOptions) \"-DpackageOutputDirectory=$(Build.ArtifactStagingDirectory)\" -DskipTests -Dgenerate-overview' # We include template-module so we ensure it always builds in CI\n+          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'\n+          javaHomeOption: 'JDKVersion'\n+          jdkVersionOption: $(JavaVersion)\n+          jdkArchitectureOption: 'x64'\n+          publishJUnitResults: false\n+\n+      - publish: $(Build.ArtifactStagingDirectory)\n+        displayName: 'Publish Artifacts $(ArtifactName)'\n+        artifact: '$(ArtifactName)'\n+\n+      - publish: $(System.DefaultWorkingDirectory)\n+        condition: and(eq(variables['CaptureRepositoryOnFailure'], 'true'), failed())\n+        displayName: 'Capture repo state for analysis'\n+        artifact: repository\n+\n+  - job: 'Analyze'\n+    condition: and(succeeded(), ne(variables['Skip.Analyze'], 'true'))\n+\n+    variables:\n+      - template: ../variables/globals.yml\n+\n+    pool:\n+      vmImage: 'ubuntu-16.04'\n+\n+    steps:\n+      - pwsh: |\n+          $(Build.SourcesDirectory)/eng/versioning/pom_file_version_scanner.ps1\n+        displayName: \"Verify versions in POM files\"\n+\n+      - task: UsePythonVersion@0\n+        displayName: 'Use Python 3.6'\n+        inputs:\n+          versionSpec: '3.6'\n+\n+      - script: |\n+          pip install setuptools wheel\n+          pip install doc-warden\n+          ward scan -d $(Build.SourcesDirectory) -c $(Build.SourcesDirectory)/eng/.docsettings.yml\n+        displayName: 'Verify Readmes'\n+\n+      - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0\n+        # ComponentGovernance is currently unable to run on pull requests of public projects. Running on non-PR\n+        # builds should be sufficient.\n+        condition: and(succeededOrFailed(), ne(variables['Build.Reason'], 'PullRequest'))\n+        displayName: 'Component Detection'\n+\n+      # We `install` the code quality reports tooling into our local m2 cache separately from building the Maven project\n+      # reports. This means it is available as part of that, but also so that this is not documented in the project report.\n+\n+      - template: ../steps/install-reporting-tools.yml\n+        parameters:\n+          Options: --batch-mode\n+          MavenOptions: $(MemoryOptions) $(LoggingOptions)\n+\n+      - task: Maven@3\n+        displayName: 'Install Module and Run SpotBugs, Checkstyle, RevApi, and Javadoc'\n+        inputs:\n+          mavenPomFile: sdk/${{parameters.ServiceDirectory}}/pom.service.xml\n+          options: '--no-transfer-progress -DskipTests -Dgpg.skip -Dverify-readme'\n+          mavenOptions: '$(MemoryOptions)'\n+          javaHomeOption: 'JDKVersion'\n+          jdkVersionOption: '1.11'\n+          jdkArchitectureOption: 'x64'\n+          publishJUnitResults: false\n+          goals: 'install'\n+\n+  - job: 'Test'\n+    condition: and(succeeded(), ne(variables['Skip.Test'], 'true'))\n+\n+    variables:\n+      - template: ../variables/globals.yml\n+\n+    strategy:\n+      matrix: ${{ parameters.TestMatrix }}\n+\n+    pool:\n+      vmImage: $(OSVmImage)\n+\n+    steps:\n+      - template: ../steps/verify-agent-os.yml\n+        parameters:\n+          OSName: $(OSName)\n+\n+      - template: ../steps/cache-maven-repository.yml\n+\n+      - template: ../steps/install-reporting-tools.yml\n+        parameters:\n+          Options: --batch-mode\n+          MavenOptions: $(MemoryOptions) $(LoggingOptions)\n+\n+      - task: Maven@3\n+        displayName: 'Start Jetty'\n+        condition: succeeded()\n+        inputs:\n+          mavenPomFile: pom.data.xml", "originalCommit": "eec8a15f8f10d3e52f6d481c14ad2f607e36c846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDI0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369130243", "bodyText": "Data track doesn't have the same interdependencies as client track and the from source runs don't really make much sense.", "author": "JimSuplizio", "createdAt": "2020-01-21T17:09:11Z", "path": "eng/pipelines/templates/jobs/archetype-sdk-data.yml", "diffHunk": "@@ -0,0 +1,222 @@\n+parameters:\n+  SDKType: not-specified # Set a default that breaks in obvious ways.\n+  ServiceDirectory: not-specified # Set a default that breaks in obvious ways.\n+  PreTestSteps: []\n+  TestOptions: '$(DefaultOptions)'\n+  TestGoals: verify\n+  TestMatrix:\n+    Linux - Java 8:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Linux on Java 1.8'\n+    macOS - Java 8:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.8'\n+      RunTitle: 'macOS on Java 1.8'\n+    Windows - Java 8:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Windows on Java 1.8'\n+    Linux - Java 11:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Linux on Java 1.11'\n+    macOS - Java 11:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.11'\n+      RunTitle: 'macOS on Java 1.11'\n+    Windows - Java 11:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Windows on Java 1.11'\n+", "originalCommit": "eec8a15f8f10d3e52f6d481c14ad2f607e36c846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0NzEyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369147123", "bodyText": "OK we can add it later if we find a gap we need to fill.", "author": "weshaggard", "createdAt": "2020-01-21T17:43:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE2MTYxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369161612", "bodyText": "The from source builds were never intended to run for anything other than client. Part of this change removed the conditions in the archetype-sdk-client that were limiting this run.", "author": "JimSuplizio", "createdAt": "2020-01-21T18:14:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEzMDI0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0ODA3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369148078", "bodyText": "Orthogonal but potentially more clean-up. I believe this was added to enabling the publishing of dependency reports, see #4238, we should see if that is still necessary after all our refactorings and changes to unified pipelines.", "author": "weshaggard", "createdAt": "2020-01-21T17:45:34Z", "path": "eng/pipelines/templates/jobs/archetype-sdk-data.yml", "diffHunk": "@@ -0,0 +1,222 @@\n+parameters:\n+  SDKType: not-specified # Set a default that breaks in obvious ways.\n+  ServiceDirectory: not-specified # Set a default that breaks in obvious ways.\n+  PreTestSteps: []\n+  TestOptions: '$(DefaultOptions)'\n+  TestGoals: verify\n+  TestMatrix:\n+    Linux - Java 8:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Linux on Java 1.8'\n+    macOS - Java 8:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.8'\n+      RunTitle: 'macOS on Java 1.8'\n+    Windows - Java 8:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Windows on Java 1.8'\n+    Linux - Java 11:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Linux on Java 1.11'\n+    macOS - Java 11:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.11'\n+      RunTitle: 'macOS on Java 1.11'\n+    Windows - Java 11:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Windows on Java 1.11'\n+\n+jobs:\n+  - job: 'Build'\n+\n+    variables:\n+      - template: ../variables/globals.yml\n+\n+    pool:\n+      vmImage: 'ubuntu-16.04'\n+\n+    strategy:\n+      matrix:\n+        Client Libraries:\n+          ArtifactName: 'packages'\n+          JavaVersion: '1.11'\n+\n+    steps:\n+      - script: |", "originalCommit": "eec8a15f8f10d3e52f6d481c14ad2f607e36c846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4NTYwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369185608", "bodyText": "@mitchdenny, it looks like the reason this tag step was being done was for the nightly dependency report. It seems that this should be a step within the nightly aggregate report generation. Though it's unclear if this step is actually still necessary. I'll make that change as part of this PR, to move this out to the aggregate pipeline.", "author": "JimSuplizio", "createdAt": "2020-01-21T19:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0ODA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2ODkwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369268908", "bodyText": "I haven't touched the dependency reports, I think they still run off one of the tagged builds. I think we should file a separate issue for that because we almost certainly will want to move that over to the aggregate reports.", "author": "mitchdenny", "createdAt": "2020-01-21T22:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0ODA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NTM1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369275351", "bodyText": "OK @mitchdenny, I'll leave this alone in my PR and let you file the issue.", "author": "JimSuplizio", "createdAt": "2020-01-21T22:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0ODA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NDcxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369294712", "bodyText": "Logged: #7592", "author": "mitchdenny", "createdAt": "2020-01-21T23:14:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE0ODA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1MjI4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369152289", "bodyText": "Should we set the SDKType in the template now?", "author": "weshaggard", "createdAt": "2020-01-21T17:54:33Z", "path": "sdk/authorization/ci.yml", "diffHunk": "@@ -37,7 +37,7 @@ pr:\n       - sdk/authorization/mgmt-\n \n stages:\n-  - template: ../../eng/pipelines/templates/stages/archetype-sdk-client.yml\n+  - template: ../../eng/pipelines/templates/stages/archetype-sdk-data.yml\n     parameters:\n       ServiceDirectory: authorization\n       SDKType: data", "originalCommit": "eec8a15f8f10d3e52f6d481c14ad2f607e36c846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4NzgzNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369187837", "bodyText": "Good call/catch. I'll remove those from the various ci.yml files.", "author": "JimSuplizio", "createdAt": "2020-01-21T19:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1MjI4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1Mjg4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7571#discussion_r369152886", "bodyText": "I didn't look super close but it still feels like there might be a fair amount of duplication between the client and data templates. We should consider creating more templates to share as much as possible were it makes sense.", "author": "weshaggard", "createdAt": "2020-01-21T17:55:39Z", "path": "eng/pipelines/templates/jobs/archetype-sdk-data.yml", "diffHunk": "@@ -0,0 +1,222 @@\n+parameters:\n+  SDKType: not-specified # Set a default that breaks in obvious ways.\n+  ServiceDirectory: not-specified # Set a default that breaks in obvious ways.\n+  PreTestSteps: []\n+  TestOptions: '$(DefaultOptions)'\n+  TestGoals: verify\n+  TestMatrix:\n+    Linux - Java 8:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Linux on Java 1.8'\n+    macOS - Java 8:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.8'\n+      RunTitle: 'macOS on Java 1.8'\n+    Windows - Java 8:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.8'\n+      RunTitle: 'Windows on Java 1.8'\n+    Linux - Java 11:\n+      OSName: 'Linux'\n+      OSVmImage: 'ubuntu-16.04'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Linux on Java 1.11'\n+    macOS - Java 11:\n+      OSName: 'macOS'\n+      OSVmImage: 'macOS-10.13'\n+      JavaVersion: '1.11'\n+      RunTitle: 'macOS on Java 1.11'\n+    Windows - Java 11:\n+      OSName: 'Windows'\n+      OSVmImage: 'windows-2019'\n+      JavaVersion: '1.11'\n+      RunTitle: 'Windows on Java 1.11'\n+\n+jobs:\n+  - job: 'Build'\n+\n+    variables:\n+      - template: ../variables/globals.yml\n+\n+    pool:\n+      vmImage: 'ubuntu-16.04'\n+\n+    strategy:\n+      matrix:\n+        Client Libraries:\n+          ArtifactName: 'packages'\n+          JavaVersion: '1.11'\n+\n+    steps:\n+      - script: |\n+          echo \"##vso[build.addbuildtag]Scheduled\"\n+        displayName: 'Tag scheduled builds'\n+        condition: and(succeeded(), eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule'))\n+\n+      - task: UsePythonVersion@0\n+        displayName: 'Use Python 3.6'\n+        inputs:\n+          versionSpec: '3.6'\n+\n+      - template: tools/daily-dev-build-variable/daily-dev-build-variable.yml@azure-sdk-tools\n+\n+      - ${{ each artifact in parameters.Artifacts }}:\n+        - script: |\n+            python3 --version\n+            python3 eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --build-qualifier dev.$(Build.BuildNumber) --artifact-id ${{artifact.name}} --group-id ${{artifact.groupId}}\n+          condition: and(succeeded(), eq(variables['SetDevVersion'],'true'))\n+          displayName: Append dev package version suffix for ${{artifact.name}}\n+\n+      - script: |\n+          python3 --version\n+          python3 eng/versioning/update_versions.py --update-type library --build-type ${{parameters.SDKType}}\n+        condition: and(succeeded(), eq(variables['SetDevVersion'],'true'))\n+        displayName: Apply version settings to repository\n+\n+      - script: |\n+          pip install markdown2 BeautifulSoup4\n+        displayName: 'pip install markdown2 and BeautifulSoup4'\n+\n+      - template: ../steps/cache-maven-repository.yml\n+\n+      - template: eng/pipelines/templates/scripts/replace-relative-links.yml@azure-sdk-tools\n+        parameters:\n+          TargetFolder: $(Build.SourcesDirectory)\n+          RootFolder: $(Build.SourcesDirectory)\n+          BuildSHA: $(Build.SourceVersion)\n+          RepoId: 'Azure/azure-sdk-for-java'\n+\n+      - task: Maven@3\n+        displayName: 'Build and Package'\n+        inputs:\n+          mavenPomFile: sdk/${{parameters.ServiceDirectory}}/pom.service.xml\n+          goals: 'package'\n+          options: '$(DefaultOptions) \"-DpackageOutputDirectory=$(Build.ArtifactStagingDirectory)\" -DskipTests -Dgenerate-overview' # We include template-module so we ensure it always builds in CI\n+          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'\n+          javaHomeOption: 'JDKVersion'\n+          jdkVersionOption: $(JavaVersion)\n+          jdkArchitectureOption: 'x64'\n+          publishJUnitResults: false\n+\n+      - publish: $(Build.ArtifactStagingDirectory)\n+        displayName: 'Publish Artifacts $(ArtifactName)'\n+        artifact: '$(ArtifactName)'\n+\n+      - publish: $(System.DefaultWorkingDirectory)\n+        condition: and(eq(variables['CaptureRepositoryOnFailure'], 'true'), failed())\n+        displayName: 'Capture repo state for analysis'\n+        artifact: repository\n+\n+  - job: 'Analyze'\n+    condition: and(succeeded(), ne(variables['Skip.Analyze'], 'true'))\n+\n+    variables:\n+      - template: ../variables/globals.yml\n+\n+    pool:\n+      vmImage: 'ubuntu-16.04'\n+\n+    steps:\n+      - pwsh: |", "originalCommit": "eec8a15f8f10d3e52f6d481c14ad2f607e36c846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "124e6db05a327661d5f932570b75b30b89fc715d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/124e6db05a327661d5f932570b75b30b89fc715d", "message": "first round archetype-sdk-data.yml", "committedDate": "2020-01-23T16:15:20Z", "type": "commit"}, {"oid": "9f8fc270a8e624a53f7c8a4d2bc0daf80df0c87f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f8fc270a8e624a53f7c8a4d2bc0daf80df0c87f", "message": "Fix erroneous condition", "committedDate": "2020-01-23T16:15:20Z", "type": "commit"}, {"oid": "f06ba82153700395fcf2b5ef21416e56c0184c7b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f06ba82153700395fcf2b5ef21416e56c0184c7b", "message": "define SDKType in job templates, remove from ci.yml", "committedDate": "2020-01-23T16:15:21Z", "type": "commit"}, {"oid": "67e1c2919343e748d0023f1cc3bf6b944e5d02ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/67e1c2919343e748d0023f1cc3bf6b944e5d02ee", "message": "update for rebase to get the latest changes", "committedDate": "2020-01-23T17:13:18Z", "type": "commit"}]}