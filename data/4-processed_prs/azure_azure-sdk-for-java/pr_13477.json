{"pr_number": 13477, "pr_title": "Remove redudant document.", "pr_createdAt": "2020-07-24T09:44:08Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13477", "timeline": [{"oid": "23c6e1c78dbd8cd86c29f098a409a8f068e2df78", "url": "https://github.com/Azure/azure-sdk-for-java/commit/23c6e1c78dbd8cd86c29f098a409a8f068e2df78", "message": "Remove redudant document.", "committedDate": "2020-07-24T09:43:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5MjcxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13477#discussion_r460592716", "bodyText": "We should remove the en-us part from the URL.", "author": "saragluna", "createdAt": "2020-07-27T00:20:48Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-data-sample-gremlin/README.md", "diffHunk": "@@ -1,112 +1,4 @@\n-# How to use azure-spring-data-gremlin\n+Please refer to [spring data gremlin document] to learn how to run this sample.\n \n-## Overview\n \n-This article demonstrates how to use `azure-spring-data-gremlin` to store / retrieve data in `Azure Cosmos DB`.\n-\n-\n-## Prerequisites\n-\n-The following prerequisites are required in order to follow the steps in this article:\n-\n-* An Azure subscription. If you don't know what is `Azure subscription`, please read [this document](https://docs.microsoft.com/en-us/office365/enterprise/subscriptions-licenses-accounts-and-tenants-for-microsoft-cloud-offerings).\n-* A supported Java Development Kit (JDK). For more information about the JDKs available for use when developing on Azure, see <https://aka.ms/azure-jdks>.\n-* [Apache Maven](http://maven.apache.org/), version 3.0 or later.\n-\n-\n-## Create Resource\n-\n-### Create Azure Cosmos DB\n-\n-1. Browse to the Azure portal at <https://portal.azure.com/> and click `+Create a resource`.\n-\n-   ![create-a-resource](readme-images/create-a-resource.png)\n-\n-1. Click `Databases`, and then click `Azure Cosmos DB`.\n-\n-   ![create-azure-cosmos-db](readme-images/create-azure-cosmos-db.png)\n-\n-1. On the `Azure Cosmos DB` page, enter the following information:\n-\n-   * Choose the `Subscription` that you want to use for your database.\n-   * Specify whether to create a new `Resource Group` for your database, or choose an existing resource group.\n-   * Enter a unique `Account Name` to use as part of the Gremlin URI for your database. For example: if you entered `account-sample` for the `Account Name`, the Gremlin URI would be `account-samplewingtiptoysdata.gremlin.cosmosdb.azure.com`.\n-   * Choose `Gremlin (Graph)` for the API.\n-   * Specify the `Location` for your database.\n-   \n-When you have specified these options, click `Review + create`.\n-\n-   ![create-azure-cosmos-db-account](readme-images/create-azure-cosmos-db-account.png)\n-\n-Review the specification and click `Create` to create your database.\n-\n-### Add a graph to your Azure Cosmos Database\n-\n-1. In CosmosDb page, Click `Data Explorer`, and then click `New Graph`.\n-\n-   ![new-graph](readme-images/new-graph.png)\n-\n-1. When the `Add Graph` is displayed, enter the following information:\n-\n-   * Specify a unique `Database id` for your database.\n-   * You can choose to specify your `Storage capacity`, or you can accept the default.\n-   * Specify a unique `Graph id` for your graph.\n-   * Specify a `Partition key`. For more information see [Using a partitioned graph in Azure Cosmos DB](https://docs.microsoft.com/en-us/azure/cosmos-db/graph-partitioning).\n-Click `OK`.\n-   \n-   When you have specified these options, click `OK` to create your graph.\n-\n-   ![add-graph](readme-images/add-graph.png)\n-\n-1. After your graph has been created, you can use the `Data Explorer` to view it.\n-\n-   ![graph-detail](readme-images/graph-detail.png)\n-   \n-   \n-\n-## Create simple Spring Boot application with the Spring Initializr\n-\n-1. Browse to <https://start.spring.io/>.\n-\n-1. Fill project metadata then click `GENERATE`:\n-\n-   ![spring-initializr](readme-images/spring-initializr.png)\n-\n-1. Unzip the file then import to your IDE.\n-\n-## Update code according to this sample project\n-\n-1. Add dependency of `azure-spring-data-gremlin`, just like the repo does. Choose the correct version.\n-\n-1. Delete all contents in `src/test/`\n-\n-1. Add all java files in `src/main/java`, just like this sample does.\n-\n-1. Update config in `src/main/resorces/application.properties`, where:\n-\n-   | Field              | Description                                                                                                                                                                                                             |\n-   |--------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n-   | `endpoint`         | Specifies the Gremlin URI for your database, which is derived from the unique **ID** that you specified when you created your Azure Cosmos DB earlier in this tutorial.                                                 |\n-   | `port`             | Specifies the TCP/IP port, which should be **443** for HTTPS.                                                                                                                                                           |\n-   | `username`         | Specifies the unique **Database id** and **Graph id** that you used when you added your graph earlier in this tutorial; this must be entered using the following syntax: \"/dbs/**{Database id}**/colls/**{Graph id}**\". |\n-   | `password`         | Specifies either the primary or secondary **Access key** that you copied earlier in this tutorial.                                                                                                                      |\n-   | `sslEnabled`       | Specifies whether enable ssl.                                                                                                                                                                                           |\n-   | `telemetryAllowed` | Specify **true** if you want to enable telemetry; otherwise, **false**.\n-   | `maxContentLength` | Specifies max content length.                                                                                                                                                                                           |\n-\n-1. About how to get password:\n-\n-   ![get-password](readme-images/get-password.png)\n-\n-## Build and run the project\n-\n-1. Build your Spring Boot application with Maven and run it; for example:\n-\n-   ```shell\n-   mvn clean package\n-   mvn spring-boot:run\n-   ```\n-\n-1. If your app start successfully, you can check the graph in Azure portal:\n-\n-   ![execute-result](readme-images/execute-result.png)\n+[spring data gremlin document]: https://docs.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-data-gremlin-java-app-with-cosmos-db", "originalCommit": "23c6e1c78dbd8cd86c29f098a409a8f068e2df78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYwMTA2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13477#discussion_r460601068", "bodyText": "Done.", "author": "chenrujun", "createdAt": "2020-07-27T01:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5MjcxNg=="}], "type": "inlineReview"}, {"oid": "7298cc5fb38eacf90a116d42062ab3dc110337b4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7298cc5fb38eacf90a116d42062ab3dc110337b4", "message": "Remove the 'en-us' part  from the URL.", "committedDate": "2020-07-27T01:13:58Z", "type": "commit"}]}