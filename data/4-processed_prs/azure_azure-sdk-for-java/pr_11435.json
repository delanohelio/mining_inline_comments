{"pr_number": 11435, "pr_title": "Update documentation and add overload for receive", "pr_createdAt": "2020-05-26T21:28:48Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11435", "timeline": [{"oid": "2cad7c9d11237472b00f47e9a77ffaaaf8946fa6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2cad7c9d11237472b00f47e9a77ffaaaf8946fa6", "message": "Adding updates to documentation.", "committedDate": "2020-06-05T00:13:10Z", "type": "commit"}, {"oid": "324c957308217348a273de3ae936d3ebf381d223", "url": "https://github.com/Azure/azure-sdk-for-java/commit/324c957308217348a273de3ae936d3ebf381d223", "message": "Adding samples for receive(int, Duration)", "committedDate": "2020-06-05T00:13:11Z", "type": "commit"}, {"oid": "324c957308217348a273de3ae936d3ebf381d223", "url": "https://github.com/Azure/azure-sdk-for-java/commit/324c957308217348a273de3ae936d3ebf381d223", "message": "Adding samples for receive(int, Duration)", "committedDate": "2020-06-05T00:13:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyNjIyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11435#discussion_r435626227", "bodyText": "This tells the broker that the receiving client wants to settle received messages explicitly. ->This tells the broker that the receiving client wants to manage settlement of received messages explicitly.", "author": "hemanttanwar", "createdAt": "2020-06-05T00:21:19Z", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -172,41 +176,53 @@ You'll need to create an asynchronous [`ServiceBusReceiverAsyncClient`][ServiceB\n [`ServiceBusReceiverClient`][ServiceBusReceiverClient] to receive messages. Each receiver can consume messages from\n either a queue or a topic subscription.\n \n+By default, the receive mode is [`ReceiveMode.PEEK_LOCK`][ReceiveMode]. This tells the broker that the receiving client\n+wants to settle received messages explicitly. The message is made available for the receiver to process, while held", "originalCommit": "324c957308217348a273de3ae936d3ebf381d223", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyNzY0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11435#discussion_r435627641", "bodyText": "continuously  ->  infinitely\nThis will register in user mind that they have to handle this properly.", "author": "hemanttanwar", "createdAt": "2020-06-05T00:27:12Z", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -172,41 +176,53 @@ You'll need to create an asynchronous [`ServiceBusReceiverAsyncClient`][ServiceB\n [`ServiceBusReceiverClient`][ServiceBusReceiverClient] to receive messages. Each receiver can consume messages from\n either a queue or a topic subscription.\n \n+By default, the receive mode is [`ReceiveMode.PEEK_LOCK`][ReceiveMode]. This tells the broker that the receiving client\n+wants to settle received messages explicitly. The message is made available for the receiver to process, while held\n+under an exclusive lock in the service so that other, competing receivers cannot see it.\n+`ServiceBusReceivedMessage.getLockedUntil()` indicates when the lock expires and can be extended by the client using\n+`receiver.renewMessageLock()`.\n+\n #### Receive a batch of messages\n \n-The snippet below creates a `ServiceBusReceiverClient` to receive messages from a topic subscription. It returns a batch\n-of messages when 10 messages are received or until 30 seconds have elapsed, whichever happens first.\n+The snippet below creates a [`ServiceBusReceiverClient`][ServiceBusReceiverClient] to receive messages from a topic\n+subscription.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L81-L94 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L84-L101 -->\n ```java\n ServiceBusReceiverClient receiver = new ServiceBusClientBuilder()\n     .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .receiver()\n     .topicName(\"<< TOPIC NAME >>\")\n     .subscriptionName(\"<< SUBSCRIPTION NAME >>\")\n-    .receiveMode(ReceiveMode.PEEK_LOCK)\n     .buildClient();\n \n+// Receives a batch of messages when 10 messages are received or until 30 seconds have elapsed, whichever\n+// happens first.\n IterableStream<ServiceBusReceivedMessageContext> messages = receiver.receive(10, Duration.ofSeconds(30));\n messages.forEach(context -> {\n     ServiceBusReceivedMessage message = context.getMessage();\n     System.out.printf(\"Id: %s. Contents: %s%n\", message.getMessageId(),\n         new String(message.getBody(), StandardCharsets.UTF_8));\n });\n+\n+// When you are done using the receiver, dispose of it.\n+receiver.close();\n ```\n \n #### Receive a stream of messages\n \n-The asynchronous `ServiceBusReceiverAsyncClient` continuously fetches messages until the `subscription` is disposed.\n+The asynchronous [`ServiceBusReceiverAsyncClient`][ServiceBusReceiverAsyncClient] continuously fetches messages until\n+the `subscription` is disposed.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L101-L115 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L108-L129 -->\n ```java\n ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n     .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .receiver()\n     .queueName(\"<< QUEUE NAME >>\")\n     .buildAsyncClient();\n \n+// receive() operation continuously fetches messages until the subscription is disposed.\n Disposable subscription = receiver.receive().subscribe(context -> {", "originalCommit": "324c957308217348a273de3ae936d3ebf381d223", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "38d067e06d038b4166cd497f843965221b15e983", "url": "https://github.com/Azure/azure-sdk-for-java/commit/38d067e06d038b4166cd497f843965221b15e983", "message": "Merge branch 'master' of https://github.com/azure/azure-sdk-for-java into doc-updates", "committedDate": "2020-06-05T20:07:06Z", "type": "commit"}, {"oid": "48b2d9a397c608c8ea0ca1ee014af28e33633238", "url": "https://github.com/Azure/azure-sdk-for-java/commit/48b2d9a397c608c8ea0ca1ee014af28e33633238", "message": "Fixing errors.", "committedDate": "2020-06-05T20:11:34Z", "type": "commit"}, {"oid": "2e0f198f1b9c72d3bc3f729a00d4813e592773b4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2e0f198f1b9c72d3bc3f729a00d4813e592773b4", "message": "Updating docs", "committedDate": "2020-06-05T20:14:55Z", "type": "commit"}]}