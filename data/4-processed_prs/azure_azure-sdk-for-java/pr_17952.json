{"pr_number": 17952, "pr_title": "Cosmos Spark End to End Integration Test against Cosmos Emulator runs in CI", "pr_createdAt": "2020-12-03T08:31:32Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17952", "timeline": [{"oid": "74c8cf3f53658ca6c178f29465beb792a7a07208", "url": "https://github.com/Azure/azure-sdk-for-java/commit/74c8cf3f53658ca6c178f29465beb792a7a07208", "message": "more code comments", "committedDate": "2020-12-01T19:06:27Z", "type": "commit"}, {"oid": "23abec55612ba943b5851f1d11de1f217dc2a2ca", "url": "https://github.com/Azure/azure-sdk-for-java/commit/23abec55612ba943b5851f1d11de1f217dc2a2ca", "message": "Merge branch 'feature/cosmos/spark30' into users/moderakh/20201101-spark", "committedDate": "2020-12-02T21:43:43Z", "type": "commit"}, {"oid": "ad763b6db5dd6da738065cf24b1b5bde306cbe42", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ad763b6db5dd6da738065cf24b1b5bde306cbe42", "message": "spark end to end test", "committedDate": "2020-12-03T08:29:26Z", "type": "commit"}, {"oid": "382619dfdb551be055fb6e49c0f0deae95476d21", "url": "https://github.com/Azure/azure-sdk-for-java/commit/382619dfdb551be055fb6e49c0f0deae95476d21", "message": "added missing files", "committedDate": "2020-12-03T08:34:28Z", "type": "commit"}, {"oid": "ffbcd34d97de5d2354ecb0a85e782ec32f702b37", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ffbcd34d97de5d2354ecb0a85e782ec32f702b37", "message": "undid an unrelated change", "committedDate": "2020-12-03T08:37:05Z", "type": "commit"}, {"oid": "ce5f0dd9f419fab01e054dbd1b0f6ad85644b95e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ce5f0dd9f419fab01e054dbd1b0f6ad85644b95e", "message": "cleanup", "committedDate": "2020-12-03T08:40:51Z", "type": "commit"}, {"oid": "5ea96116f06973cc4508a220d075e52706926f4f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5ea96116f06973cc4508a220d075e52706926f4f", "message": "removed intentionally failing test", "committedDate": "2020-12-03T16:29:13Z", "type": "commit"}, {"oid": "48830b5a58c04347b13ef12f36bf965aeb26583b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/48830b5a58c04347b13ef12f36bf965aeb26583b", "message": "updated comment", "committedDate": "2020-12-03T16:35:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2NTc1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17952#discussion_r537965757", "bodyText": "Good point - I think it might be useful to see whether we can make that decision based on \"avg.\" document size? Like < 1 KB don't push down pruning - but for larger documents do it?", "author": "FabianMeiswinkel", "createdAt": "2020-12-08T01:38:53Z", "path": "sdk/cosmos/azure-cosmos-spark_3-0_2-12/src/main/scala/com/azure/cosmos/spark/CosmosScanBuilder.scala", "diffHunk": "@@ -51,7 +51,21 @@ case class CosmosScanBuilder(config: CaseInsensitiveStringMap)\n     CosmosScan(config.asScala.toMap, this.processedPredicates.get.cosmosParametrizedQuery)\n   }\n \n+  /**\n+    * Applies column pruning w.r.t. the given requiredSchema.\n+    *\n+    * Implementation should try its best to prune the unnecessary columns or nested fields, but it's\n+    * also OK to do the pruning partially, e.g., a data source may not be able to prune nested\n+    * fields, and only prune top-level columns.\n+    *\n+    * Note that, {@link Scan# readSchema ( )} implementation should take care of the column\n+    * pruning applied here.\n+    */\n   override def pruneColumns(requiredSchema: StructType): Unit = {\n-    // TODO moderakh add projection to the query\n+    // TODO moderakh: we need to decide whether do a push down or not on the projection", "originalCommit": "48830b5a58c04347b13ef12f36bf965aeb26583b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2NTg1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17952#discussion_r537965850", "bodyText": "Not blocking of course...", "author": "FabianMeiswinkel", "createdAt": "2020-12-08T01:39:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2NTc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4NDQ5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17952#discussion_r537984498", "bodyText": "Thanks for the suggestion. good idea. I will look into this.", "author": "moderakh", "createdAt": "2020-12-08T02:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk2NTc1Nw=="}], "type": "inlineReview"}]}