{"pr_number": 14658, "pr_title": "Add 2019 MSI endpoint support to Managed Identity Credential.", "pr_createdAt": "2020-08-31T16:34:35Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14658", "timeline": [{"oid": "ede1afc5f793009fa87c059ab3ecb84542c083d3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ede1afc5f793009fa87c059ab3ecb84542c083d3", "message": "Add 2019 MSI endpoint support.", "committedDate": "2020-08-31T04:32:58Z", "type": "commit"}, {"oid": "bd2580c0d1d7854f267d093fdc9e167867721ddc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bd2580c0d1d7854f267d093fdc9e167867721ddc", "message": "refactor code.", "committedDate": "2020-09-02T04:12:42Z", "type": "commit"}, {"oid": "b539e893aa5c6ba778a297a354d64738834f39a1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b539e893aa5c6ba778a297a354d64738834f39a1", "message": "Merge remote-tracking branch 'upstream/master' into app_service_version_support", "committedDate": "2020-09-02T16:47:49Z", "type": "commit"}, {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c", "message": "update e2e", "committedDate": "2020-09-02T18:11:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482298015", "bodyText": "This would be true in Cloud Shell, and AppServiceMsiCredential would fail there. Is Cloud Shell managed identity not supported? It will also be true for Azure Arc, if I remember that design correctly.", "author": "chlowell", "createdAt": "2020-09-02T18:45:30Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -35,7 +39,8 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)) {\n+        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)", "originalCommit": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNzIzNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482317237", "bodyText": "AppServiceMsiCredential works on CloudShell (Azure/azure-sdk#795 (comment)) - @g2vinay have we tested Azure Arc?", "author": "jianghaolu", "createdAt": "2020-09-02T19:06:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyMTAyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482321029", "bodyText": "Azure Arc is for the next month release, will test this month.", "author": "g2vinay", "createdAt": "2020-09-02T19:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwNzc3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483307772", "bodyText": "it works in cloud shell, as @jianghaolu  mentioned above.\nI have updated the conditional here and it won't be true for Azure Arc anymore.\nAzure arc support is yet to be added in all languages.", "author": "g2vinay", "createdAt": "2020-09-03T23:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDQ2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482304462", "bodyText": "It's \"client_id\" in 2019-08-01.", "author": "chlowell", "createdAt": "2020-09-02T18:52:22Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -709,33 +711,54 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n     /**\n      * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n      *\n-     * @param msiEndpoint the endpoint to acquire token from\n-     * @param msiSecret the secret to acquire token with\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param identityHeader the identity header to acquire token with\n+     * @param msiEndpoint the MSI endpoint to acquire token from\n+     * @param msiSecret the msi secret to acquire token with\n      * @param request the details of the token request\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret,\n+    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String identityEndpoint, String identityHeader,\n+                                                                   String msiEndpoint, String msiSecret,\n                                                                    TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n+            String endpoint;\n+            String headerValue;\n+            String endpointVersion;\n+\n+            if (identityEndpoint != null) {\n+                endpoint = identityEndpoint;\n+                headerValue = identityHeader;\n+                endpointVersion = IDENTITY_ENDPOINT_VERSION;\n+            } else {\n+                endpoint = msiEndpoint;\n+                headerValue = msiSecret;\n+                endpointVersion = MSI_ENDPOINT_VERSION;\n+            }\n+\n             String resource = ScopeUtil.scopesToResource(request.getScopes());\n             HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n \n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(resource, \"UTF-8\"));\n             payload.append(\"&api-version=\");\n-            payload.append(URLEncoder.encode(\"2017-09-01\", \"UTF-8\"));\n+            payload.append(URLEncoder.encode(endpointVersion, \"UTF-8\"));\n             if (clientId != null) {\n                 payload.append(\"&clientid=\");", "originalCommit": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxODE5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482318190", "bodyText": "I tested in app service and the token returned fine for 2019-08-01.\nLikely both the formats are fine.\nBut, I can update the logic to follow their documentation here.", "author": "g2vinay", "createdAt": "2020-09-02T19:07:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwNjg5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483306894", "bodyText": "updated", "author": "g2vinay", "createdAt": "2020-09-03T23:34:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3MzI3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482373276", "bodyText": "What happens when both identity and msi endpoints are set? Is there a priority order for which endpoint to use? Is it documented somewhere? Also, if both are set, we should validate them both.", "author": "srnagar", "createdAt": "2020-09-02T19:54:17Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/AppServiceMsiCredential.java", "diffHunk": "@@ -30,13 +32,24 @@\n      */\n     AppServiceMsiCredential(String clientId, IdentityClient identityClient) {\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n+        this.identityEndpoint = configuration.get(ManagedIdentityCredential.PROPERTY_IDENTITY_ENDPOINT);\n+        this.identityHeader = configuration.get(ManagedIdentityCredential.PROPERTY_IDENTITY_HEADER);\n         this.msiEndpoint = configuration.get(Configuration.PROPERTY_MSI_ENDPOINT);\n         this.msiSecret = configuration.get(Configuration.PROPERTY_MSI_SECRET);\n         this.identityClient = identityClient;\n         this.clientId = clientId;\n-        if (!(msiEndpoint.startsWith(\"https\") || msiEndpoint.startsWith(\"http\"))) {\n+        if (identityEndpoint != null) {\n+            validateEndpointProtocol(this.identityEndpoint, \"Identity\");\n+        } else {\n+            validateEndpointProtocol(this.msiEndpoint, \"MSI\");\n+        }", "originalCommit": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwNzQ0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483307443", "bodyText": "if identity endpoint is set, we just use that, else we use MSI endpoint if its set.\nAlthough we use only identity endpoint, if both are set, but for validation, I have enabled it for both if both are set.", "author": "g2vinay", "createdAt": "2020-09-03T23:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3MzI3Ng=="}], "type": "inlineReview"}, {"oid": "1643e7d07d43e06c9748be7f6243e493b3e509d4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1643e7d07d43e06c9748be7f6243e493b3e509d4", "message": "address feedback.", "committedDate": "2020-09-03T23:19:46Z", "type": "commit"}, {"oid": "e7cb212c96ce4c1d202d8aca6af9210c2dc90e7e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7cb212c96ce4c1d202d8aca6af9210c2dc90e7e", "message": "update code.", "committedDate": "2020-09-03T23:29:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxODI2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483318264", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                          + \"configured in the environment. Atleast one should be configuured\"));\n          \n          \n            \n                                                          + \"configured in the environment. At least one should be configured\"));", "author": "chlowell", "createdAt": "2020-09-04T00:16:15Z", "path": "sdk/e2e/src/main/java/com/azure/endtoend/identity/WebJobsIdentityTest.java", "diffHunk": "@@ -60,12 +62,18 @@ void run() throws IllegalStateException {\n     }\n \n     private void testMSIEndpointWithSystemAssigned() {\n-        assertConfigPresence(Configuration.PROPERTY_MSI_ENDPOINT,\n-            \"testMSIEndpointWithSystemAssigned - MSIEndpoint not configured in the environment.\");\n+        if (CoreUtils.isNullOrEmpty(CONFIGURATION.get(Configuration.PROPERTY_MSI_ENDPOINT))\n+                && CoreUtils.isNullOrEmpty(CONFIGURATION.get(Configuration.PROPERTY_MSI_SECRET)))  {\n+            throw logger.logExceptionAsError(\n+                new IllegalStateException(\"testMSIEndpointWithUserAssigned - MSIEndpoint and Identity Point not\"\n+                                              + \"configured in the environment. Atleast one should be configuured\"));", "originalCommit": "e7cb212c96ce4c1d202d8aca6af9210c2dc90e7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "81fa3315fd276292acd15700416631dc13c31a21", "url": "https://github.com/Azure/azure-sdk-for-java/commit/81fa3315fd276292acd15700416631dc13c31a21", "message": "Merge remote-tracking branch 'upstream/master' into app_service_version_support", "committedDate": "2020-09-11T17:17:49Z", "type": "commit"}, {"oid": "c4646cf82f3e0cb3cb767e9760e5327d0b2a6f37", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4646cf82f3e0cb3cb767e9760e5327d0b2a6f37", "message": "update changelog", "committedDate": "2020-09-11T17:19:24Z", "type": "commit"}]}