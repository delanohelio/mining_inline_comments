{"pr_number": 17872, "pr_title": "add spring security resource server sample", "pr_createdAt": "2020-11-30T03:49:35Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17872", "timeline": [{"oid": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "message": "* add spring security resource server sample\n* update README file", "committedDate": "2020-11-30T03:46:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2NDIxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532364216", "bodyText": "an Java --> a java?", "author": "backwind1233", "createdAt": "2020-11-30T06:03:40Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.", "originalCommit": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2NDk4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532364982", "bodyText": "version 1.8 and above --> version 1.8 or above", "author": "backwind1233", "createdAt": "2020-11-30T06:06:13Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.\n+Obtain Bearer Token in the request head of resources and carry out analysis and verification. After verification,\n+injects AzureOAuth2AuthenticatedPrincipal object that is associated with the thread of the current user request. \n+Token claimsset, Authorities, JWS headers etc. are accessible from the object which can be used for role based authorization.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 and above.", "originalCommit": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2NTA1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532365053", "bodyText": "3.0 and above --> 3.0  or above", "author": "backwind1233", "createdAt": "2020-11-30T06:06:29Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.\n+Obtain Bearer Token in the request head of resources and carry out analysis and verification. After verification,\n+injects AzureOAuth2AuthenticatedPrincipal object that is associated with the thread of the current user request. \n+Token claimsset, Authorities, JWS headers etc. are accessible from the object which can be used for role based authorization.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 and above.\n+- [Maven](https://maven.apache.org/) 3.0 and above", "originalCommit": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2OTY1NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532369655", "bodyText": "I feel a little confusing by the sentence here at first.", "author": "backwind1233", "createdAt": "2020-11-30T06:22:12Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.\n+Obtain Bearer Token in the request head of resources and carry out analysis and verification. After verification,\n+injects AzureOAuth2AuthenticatedPrincipal object that is associated with the thread of the current user request. \n+Token claimsset, Authorities, JWS headers etc. are accessible from the object which can be used for role based authorization.", "originalCommit": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM3MTUzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532371535", "bodyText": "I'm going to modify it.", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-30T06:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2OTY1NQ=="}], "type": "inlineReview"}, {"oid": "8019eb9970efb2ac9ad6d28c62fee5e6a974a955", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8019eb9970efb2ac9ad6d28c62fee5e6a974a955", "message": "* Modify the link\n* Update README file", "committedDate": "2020-11-30T08:50:34Z", "type": "commit"}, {"oid": "917b984699a53b12a9ef0ffb7ecec6304cf27f81", "url": "https://github.com/Azure/azure-sdk-for-java/commit/917b984699a53b12a9ef0ffb7ecec6304cf27f81", "message": "* Update README file", "committedDate": "2020-11-30T09:23:43Z", "type": "commit"}, {"oid": "bf36292f75b370e917462353a29512cd7b6b504d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bf36292f75b370e917462353a29512cd7b6b504d", "message": "* Update sample", "committedDate": "2020-12-03T07:33:46Z", "type": "commit"}, {"oid": "2da9db4365bb49c936cf02e5237cb497730b4c62", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2da9db4365bb49c936cf02e5237cb497730b4c62", "message": "* Update application.properties and pom.xml", "committedDate": "2020-12-04T09:46:46Z", "type": "commit"}, {"oid": "26dd564ac7a790c8cc00de84ef41c9d5265a3e74", "url": "https://github.com/Azure/azure-sdk-for-java/commit/26dd564ac7a790c8cc00de84ef41c9d5265a3e74", "message": "Merge branch 'master' into add_resource_server_sample_and_update_readme", "committedDate": "2020-12-09T10:15:14Z", "type": "commit"}, {"oid": "3d5d909dbe172415f3f9e2c6d57655c77fca2258", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d5d909dbe172415f3f9e2c6d57655c77fca2258", "message": "Merge branch 'master' and update AzureJwtBearerTokenAuthenticationConverter.java path", "committedDate": "2020-12-09T10:19:27Z", "type": "commit"}, {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "message": "refactor", "committedDate": "2020-12-10T02:15:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5ODM0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539798345", "bodyText": "We refactor this and [instruction] below in @moarychan's PR, please follow this #17862 to change.", "author": "saragluna", "createdAt": "2020-12-10T02:32:42Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5ODQzNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539798437", "bodyText": "Need to change this too.", "author": "saragluna", "createdAt": "2020-12-10T02:33:02Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here,which will be used in the properties file) by selecting **Save and Continue**.\n+   ![App-Id-Uri Config](docs/image-app-id-uri-config.png \"App-id-uri Config\")\n+   Then enter the following information:\n+   - For **Scope name**, enter **File.read**.\n+   - For **Who can consent**, ensure that the **Admins and users** option is selected.\n+   - In the **Admin consent display name** box, enter **Access File.read as a user**.\n+   - In the **Admin consent description** box, enter **Accesses the File.read web API as a user**.\n+   - In the **User consent display name** box, enter **Access File.read as a user**.\n+   - In the **User consent description** box, enter **Accesses the File.read web API as a user**.\n+   - For **State**, keep **Enabled**.\n+   - Select **Add scope**.\n+   ![Scope Config](docs/image-scope-configurations.png \"Scope Config\")\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+#Use a port that is not occupied\n+server.port=8081\n+```\n+\n+### Run with Maven \n+First, we need to ensure that this [instruction] is completed before run.", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5OTA4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539799088", "bodyText": "Change this H in Headers to lowercase.", "author": "saragluna", "createdAt": "2020-12-10T02:34:53Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5OTgyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539799829", "bodyText": "Please add a space before which", "author": "saragluna", "createdAt": "2020-12-10T02:36:59Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here,which will be used in the properties file) by selecting **Save and Continue**.", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMDc1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539800750", "bodyText": "This configuration entry is not required, right? Perhaps we could remove this.", "author": "saragluna", "createdAt": "2020-12-10T02:39:39Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here,which will be used in the properties file) by selecting **Save and Continue**.\n+   ![App-Id-Uri Config](docs/image-app-id-uri-config.png \"App-id-uri Config\")\n+   Then enter the following information:\n+   - For **Scope name**, enter **File.read**.\n+   - For **Who can consent**, ensure that the **Admins and users** option is selected.\n+   - In the **Admin consent display name** box, enter **Access File.read as a user**.\n+   - In the **Admin consent description** box, enter **Accesses the File.read web API as a user**.\n+   - In the **User consent display name** box, enter **Access File.read as a user**.\n+   - In the **User consent description** box, enter **Accesses the File.read web API as a user**.\n+   - For **State**, keep **Enabled**.\n+   - Select **Add scope**.\n+   ![Scope Config](docs/image-scope-configurations.png \"Scope Config\")\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+#Use a port that is not occupied\n+server.port=8081", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjA5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802090", "bodyText": "We should move this under the ## Examples section.", "author": "saragluna", "createdAt": "2020-12-10T02:43:40Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjIyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802224", "bodyText": "Please use reference link style here.", "author": "saragluna", "createdAt": "2020-12-10T02:44:02Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server\n+Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md) for access resource api.", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjI4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802283", "bodyText": "not required.", "author": "saragluna", "createdAt": "2020-12-10T02:44:14Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server\n+Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md) for access resource api.\n+\n+#### Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+####  Configure application.properties:\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+#Use a port that is not occupied\n+server.port=8081", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjM4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802386", "bodyText": "Why is this needed?", "author": "saragluna", "createdAt": "2020-12-10T02:44:27Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server\n+Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md) for access resource api.\n+\n+#### Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+####  Configure application.properties:\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true", "originalCommit": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8ba98be2ecbb1aa0019588c4985958da83f4e561", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8ba98be2ecbb1aa0019588c4985958da83f4e561", "message": "Update readme file and properties", "committedDate": "2020-12-10T08:08:28Z", "type": "commit"}, {"oid": "125c3563e28b8943cfd87b12dbd55fba9daeb656", "url": "https://github.com/Azure/azure-sdk-for-java/commit/125c3563e28b8943cfd87b12dbd55fba9daeb656", "message": "Merge branch 'master' into add_resource_server_sample_and_update_readme", "committedDate": "2020-12-10T08:09:24Z", "type": "commit"}, {"oid": "5f96240fa74355fe1cefb839257a6ecd75d8ca81", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5f96240fa74355fe1cefb839257a6ecd75d8ca81", "message": "Update readme file", "committedDate": "2020-12-10T09:36:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY1MzgwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540653808", "bodyText": "Sorry for didn't make it clear last time, I meant the configuration server.port=8081 is not required last time", "author": "saragluna", "createdAt": "2020-12-11T02:58:05Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -284,14 +266,6 @@ Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resourc\n   </dependencies>\n ```\n \n-####  Configure application.properties:\n-```properties\n-azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n-azure.activedirectory.session-stateless=true\n-#Use a port that is not occupied\n-server.port=8081", "originalCommit": "125c3563e28b8943cfd87b12dbd55fba9daeb656", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2Mjk2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540662967", "bodyText": "okay", "author": "ZhuXiaoBing-cn", "createdAt": "2020-12-11T03:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY1MzgwOA=="}], "type": "inlineReview"}, {"oid": "8fdd32071c1b873d77323726dc46641622f2cedf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8fdd32071c1b873d77323726dc46641622f2cedf", "message": "add back the #### Configure application.properties: section", "committedDate": "2020-12-11T03:28:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NzA3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540687077", "bodyText": "This is not needed, in @moarychan's PR we already included the install part.", "author": "saragluna", "createdAt": "2020-12-11T04:44:21Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,125 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+### Environment checklist\n+We need to ensure that this [environment checklist][ready-to-run-checklist] is completed before the run.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here, which will be used in the properties file) by selecting **Save and Continue**.\n+   ![App-Id-Uri Config](docs/image-app-id-uri-config.png \"App-id-uri Config\")\n+   Then enter the following information:\n+   - For **Scope name**, enter **File.read**.\n+   - For **Who can consent**, ensure that the **Admins and users** option is selected.\n+   - In the **Admin consent display name** box, enter **Access File.read as a user**.\n+   - In the **Admin consent description** box, enter **Accesses the File.read web API as a user**.\n+   - In the **User consent display name** box, enter **Access File.read as a user**.\n+   - In the **User consent description** box, enter **Accesses the File.read web API as a user**.\n+   - For **State**, keep **Enabled**.\n+   - Select **Add scope**.\n+   ![Scope Config](docs/image-scope-configurations.png \"Scope Config\")\n+\n+If you still don't understand, you can look at this [register app or web api][Register app or web API] and another [expose scoped permission to web api][Expose scoped permission to web API]. I believe it will also help you.\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+azure.activedirectory.client-id=xxxxxx-your-client-id-xxxxxx\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+```\n+\n+### Run with Maven \n+```shell\n+# Under sdk/spring project root directory\n+mvn clean install -DskipTests", "originalCommit": "8fdd32071c1b873d77323726dc46641622f2cedf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NzQ2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540687460", "bodyText": "These requirements are included in the environment checklist already.", "author": "saragluna", "createdAt": "2020-12-11T04:45:45Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,125 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)", "originalCommit": "8fdd32071c1b873d77323726dc46641622f2cedf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NzYxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540687618", "bodyText": "Change the link to reference style", "author": "saragluna", "createdAt": "2020-12-11T04:46:17Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,125 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)", "originalCommit": "8fdd32071c1b873d77323726dc46641622f2cedf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "21b41a3d54ae4db300998ba47b8eaca6253526e5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/21b41a3d54ae4db300998ba47b8eaca6253526e5", "message": "Adjust Getting Started related content", "committedDate": "2020-12-11T05:15:51Z", "type": "commit"}]}