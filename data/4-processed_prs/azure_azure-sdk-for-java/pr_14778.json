{"pr_number": 14778, "pr_title": "modify eventhub reademe", "pr_createdAt": "2020-09-03T09:30:47Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14778", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2MjQ2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r482962463", "bodyText": "Following the link Guidelines, we should not use relative URLs.", "author": "saragluna", "createdAt": "2020-09-03T13:06:34Z", "path": "sdk/spring/azure-spring-cloud-eventhubs-stream-binder/README.md", "diffHunk": "@@ -154,5 +171,39 @@ you can handle the error message in this way:\n ```\n \n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use the starter.\n+### More sample code\n+- [Eventhubs Binder Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-binder-sample)", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk4MTUyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r482981526", "bodyText": "The feature list and dependency management sections should be removed.", "author": "saragluna", "createdAt": "2020-09-03T13:34:26Z", "path": "sdk/spring/azure-spring-cloud-eventhubs-stream-binder/README.md", "diffHunk": "@@ -25,8 +44,6 @@ consumers and partitions, Event Hub provides a kind of preemptive mode. Storage\n determine which partition is owned by which consumer. When a new consumer starts, it will try to steal some partitions \n from most heavy-loaded consumer to achieve workload balancing.\n \n-## Getting started\n-\n ## Examples ", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyMDg1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483020854", "bodyText": "typo in loging", "author": "saragluna", "createdAt": "2020-09-03T14:27:54Z", "path": "sdk/spring/azure-spring-boot-starter-active-directory-b2c/README.md", "diffHunk": "@@ -220,7 +220,7 @@ logging.level.org.springframework.web=DEBUG\n logging.level.org.hibernate=ERROR\n ```\n \n-For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+For more information about setting loging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyMTY1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483021653", "bodyText": "Following the Link Guidelines we should remove this en-us locale.", "author": "saragluna", "createdAt": "2020-09-03T14:29:01Z", "path": "sdk/spring/azure-spring-cloud-eventhubs-stream-binder/README.md", "diffHunk": "@@ -3,6 +3,25 @@\n The project provides **Spring Cloud Stream Binder for Azure Event Hub** which allows you to build message-driven \n microservice using **Spring Cloud Stream** based on [Azure Event Hub](https://azure.microsoft.com/en-us/services/event-hubs/) service.", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyNTQ0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483025442", "bodyText": "How about we put these links URL at the bottom of the file using reference links?", "author": "saragluna", "createdAt": "2020-09-03T14:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyMTY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyNjcwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483026709", "bodyText": "same here", "author": "saragluna", "createdAt": "2020-09-03T14:34:45Z", "path": "sdk/spring/azure-spring-cloud-eventhubs-stream-binder/README.md", "diffHunk": "@@ -154,5 +171,39 @@ you can handle the error message in this way:\n ```\n \n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use the starter.\n+### More sample code\n+- [Eventhubs Binder Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-binder-sample)\n+- [Eventhubs Multibinders Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-multibinders-sample)", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyNjk1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483026956", "bodyText": "same here.", "author": "saragluna", "createdAt": "2020-09-03T14:34:57Z", "path": "sdk/spring/azure-spring-cloud-eventhubs-stream-binder/README.md", "diffHunk": "@@ -154,5 +171,39 @@ you can handle the error message in this way:\n ```\n \n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use the starter.\n+### More sample code\n+- [Eventhubs Binder Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-binder-sample)\n+- [Eventhubs Multibinders Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-multibinders-sample)\n+\n ## Contributing\n+This project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n+\n+Please follow [instructions here](../CONTRIBUTING.md) to build from source or contribute.", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyNzYyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483027625", "bodyText": "relative URL", "author": "saragluna", "createdAt": "2020-09-03T14:35:27Z", "path": "sdk/spring/azure-spring-cloud-starter-eventhubs-kafka/README.md", "diffHunk": "@@ -1,8 +1,65 @@\n # Azure Spring cloud starter Event Hubs Kafka client library for Java\n+The Spring Cloud Stream Kafka binder for Azure Event Hubs helps developers to finish the auto-configuration of Event Hubs.  \n+\n+[Source code][src] | [Package (Maven)][package] | [API reference documentation][refdocs] | [Product documentation][docs] | [Samples][sample]\n \n-## Key concepts\n ## Getting started\n+### Prerequisites\n+- Java Development Kit (JDK) with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+- [Maven](http://maven.apache.org/) 3.0 and above\n+\n+### Include the package\n+[//]: # \"{x-version-update-start;com.microsoft.azure:spring-cloud-starter-azure-eventhubs-kafka;current}\"\n+```xml\n+<dependency>\n+    <groupId>com.microsoft.azure</groupId>\n+    <artifactId>spring-cloud-starter-azure-eventhubs-kafka</artifactId>\n+    <version>1.2.8-beta.1</version>\n+</dependency>\n+```\n+[//]: # \"{x-version-update-end}\"\n+\n+## Key concepts\n+Event Hubs provides a Kafka endpoint that can be used by your existing Kafka based applications as an alternative to running your own Kafka cluster. Event Hubs supports Apache Kafka protocol 1.0 and later, and works with your existing Kafka applications, including MirrorMaker.\n+\n ## Examples\n+Please refer to this [sample project][sample] illustrating how to use this starter.\n+\n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use the starter.\n+### More sample code\n+- [Eventhubs Kafka Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-kafka-sample)", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyNzgzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483027833", "bodyText": "relative URL", "author": "saragluna", "createdAt": "2020-09-03T14:35:39Z", "path": "sdk/spring/azure-spring-cloud-starter-eventhubs-kafka/README.md", "diffHunk": "@@ -1,8 +1,65 @@\n # Azure Spring cloud starter Event Hubs Kafka client library for Java\n+The Spring Cloud Stream Kafka binder for Azure Event Hubs helps developers to finish the auto-configuration of Event Hubs.  \n+\n+[Source code][src] | [Package (Maven)][package] | [API reference documentation][refdocs] | [Product documentation][docs] | [Samples][sample]\n \n-## Key concepts\n ## Getting started\n+### Prerequisites\n+- Java Development Kit (JDK) with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+- [Maven](http://maven.apache.org/) 3.0 and above\n+\n+### Include the package\n+[//]: # \"{x-version-update-start;com.microsoft.azure:spring-cloud-starter-azure-eventhubs-kafka;current}\"\n+```xml\n+<dependency>\n+    <groupId>com.microsoft.azure</groupId>\n+    <artifactId>spring-cloud-starter-azure-eventhubs-kafka</artifactId>\n+    <version>1.2.8-beta.1</version>\n+</dependency>\n+```\n+[//]: # \"{x-version-update-end}\"\n+\n+## Key concepts\n+Event Hubs provides a Kafka endpoint that can be used by your existing Kafka based applications as an alternative to running your own Kafka cluster. Event Hubs supports Apache Kafka protocol 1.0 and later, and works with your existing Kafka applications, including MirrorMaker.\n+\n ## Examples\n+Please refer to this [sample project][sample] illustrating how to use this starter.\n+\n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use the starter.\n+### More sample code\n+- [Eventhubs Kafka Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-kafka-sample)\n+\n ## Contributing\n+This project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n+\n+Please follow [instructions here](../CONTRIBUTING.md) to build from source or contribute.", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyODQwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483028408", "bodyText": "relative URL.", "author": "saragluna", "createdAt": "2020-09-03T14:36:26Z", "path": "sdk/spring/azure-spring-cloud-starter-eventhubs/README.md", "diffHunk": "@@ -1,8 +1,67 @@\n # Azure Spring cloud starter Event Hubs client library for Java\n \n-## Key concepts\n+The Spring Cloud Event Hubs starter helps developers to finish the auto-configuration of Event Hubs and provides Spring Integration on Event Hubs.\n+\n+For Spring Integration on Event Hubs, please refer to the [source code](https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/spring/azure-spring-integration-eventhubs).\n+\n+[Source code][src] | [Package (Maven)][package] | [API reference documentation][refdocs] | [Samples][sample]\n+\n ## Getting started\n+### Prerequisites\n+- Java Development Kit (JDK) with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+- [Maven](http://maven.apache.org/) 3.0 and above\n+\n+### Include the package\n+[//]: # \"{x-version-update-start;com.microsoft.azure:spring-cloud-starter-azure-eventhubs;current}\"\n+```xml\n+<dependency>\n+    <groupId>com.microsoft.azure</groupId>\n+    <artifactId>spring-cloud-starter-azure-eventhubs</artifactId>\n+    <version>1.2.8-beta.1</version>\n+</dependency>\n+```\n+[//]: # \"{x-version-update-end}\"\n+\n+## Key concepts\n+Azure Event Hubs is a big data streaming platform and event ingestion service. It can receive and process millions of events per second. Data sent to an event hub can be transformed and stored by using any real-time analytics provider or batching/storage adapters.\n+\n ## Examples\n+Please refer to this [sample project][sample] illustrating how to use Spring Cloud Event Hubs.\n+\n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use the starter.\n+### More sample code\n+- [Eventhubs Integration Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-integration-sample)\n+\n ## Contributing\n+This project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n+\n+Please follow [instructions here](../CONTRIBUTING.md) to build from source or contribute.", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyODQ2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483028466", "bodyText": "relative URL.", "author": "saragluna", "createdAt": "2020-09-03T14:36:32Z", "path": "sdk/spring/azure-spring-cloud-starter-eventhubs/README.md", "diffHunk": "@@ -1,8 +1,67 @@\n # Azure Spring cloud starter Event Hubs client library for Java\n \n-## Key concepts\n+The Spring Cloud Event Hubs starter helps developers to finish the auto-configuration of Event Hubs and provides Spring Integration on Event Hubs.\n+\n+For Spring Integration on Event Hubs, please refer to the [source code](https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/spring/azure-spring-integration-eventhubs).\n+\n+[Source code][src] | [Package (Maven)][package] | [API reference documentation][refdocs] | [Samples][sample]\n+\n ## Getting started\n+### Prerequisites\n+- Java Development Kit (JDK) with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+- [Maven](http://maven.apache.org/) 3.0 and above\n+\n+### Include the package\n+[//]: # \"{x-version-update-start;com.microsoft.azure:spring-cloud-starter-azure-eventhubs;current}\"\n+```xml\n+<dependency>\n+    <groupId>com.microsoft.azure</groupId>\n+    <artifactId>spring-cloud-starter-azure-eventhubs</artifactId>\n+    <version>1.2.8-beta.1</version>\n+</dependency>\n+```\n+[//]: # \"{x-version-update-end}\"\n+\n+## Key concepts\n+Azure Event Hubs is a big data streaming platform and event ingestion service. It can receive and process millions of events per second. Data sent to an event hub can be transformed and stored by using any real-time analytics provider or batching/storage adapters.\n+\n ## Examples\n+Please refer to this [sample project][sample] illustrating how to use Spring Cloud Event Hubs.\n+\n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use the starter.\n+### More sample code\n+- [Eventhubs Integration Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-integration-sample)", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyODc0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483028742", "bodyText": "relative URL.", "author": "saragluna", "createdAt": "2020-09-03T14:36:55Z", "path": "sdk/spring/azure-spring-integration-eventhubs/README.md", "diffHunk": "@@ -1,9 +1,66 @@\n # Azure Spring Integration event hubs client library for Java\n \n-## Key concepts\n+The *Spring Integration for Event Hubs* extension project provides inbound and outbound channel adapters and gateways for Azure Event Hubs.\n+Event Hubs is a fully managed, real-time data ingestion service that\u2019s simple, trusted, and scalable. Stream millions of events per second from any source to build dynamic data pipelines and immediately respond to business challenges.\n+\n+[Source code][src] | [Package (Maven)][package] | [API reference documentation][refdocs] | [Samples][sample]\n+\n ## Getting started\n+### Prerequisites\n+- Java Development Kit (JDK) with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+- [Maven](http://maven.apache.org/) 3.0 and above\n+\n+### Include the package\n+[//]: # \"{x-version-update-start;com.microsoft.azure:spring-integration-eventhubs;current}\"\n+```xml\n+<dependency>\n+    <groupId>com.microsoft.azure</groupId>\n+    <artifactId>spring-integration-eventhubs</artifactId>\n+    <version>1.2.8-beta.1</version>\n+</dependency>\n+```\n+[//]: # \"{x-version-update-end}\"\n+\n ## Key concepts\n+Spring Integration enables lightweight messaging within Spring-based applications and supports integration with external systems via declarative adapters. Those adapters provide a higher-level of abstraction over Spring\u2019s support for remoting, messaging, and scheduling.\n+\n ## Examples\n+Please refer to this [sample project][sample] illustrating how to use Event Hubs integration.\n+\n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use this package.\n+### More sample code\n+- [Eventhubs Integration Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-integration-sample)", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAyODgxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14778#discussion_r483028814", "bodyText": "relative URL.", "author": "saragluna", "createdAt": "2020-09-03T14:37:01Z", "path": "sdk/spring/azure-spring-integration-eventhubs/README.md", "diffHunk": "@@ -1,9 +1,66 @@\n # Azure Spring Integration event hubs client library for Java\n \n-## Key concepts\n+The *Spring Integration for Event Hubs* extension project provides inbound and outbound channel adapters and gateways for Azure Event Hubs.\n+Event Hubs is a fully managed, real-time data ingestion service that\u2019s simple, trusted, and scalable. Stream millions of events per second from any source to build dynamic data pipelines and immediately respond to business challenges.\n+\n+[Source code][src] | [Package (Maven)][package] | [API reference documentation][refdocs] | [Samples][sample]\n+\n ## Getting started\n+### Prerequisites\n+- Java Development Kit (JDK) with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+- [Maven](http://maven.apache.org/) 3.0 and above\n+\n+### Include the package\n+[//]: # \"{x-version-update-start;com.microsoft.azure:spring-integration-eventhubs;current}\"\n+```xml\n+<dependency>\n+    <groupId>com.microsoft.azure</groupId>\n+    <artifactId>spring-integration-eventhubs</artifactId>\n+    <version>1.2.8-beta.1</version>\n+</dependency>\n+```\n+[//]: # \"{x-version-update-end}\"\n+\n ## Key concepts\n+Spring Integration enables lightweight messaging within Spring-based applications and supports integration with external systems via declarative adapters. Those adapters provide a higher-level of abstraction over Spring\u2019s support for remoting, messaging, and scheduling.\n+\n ## Examples\n+Please refer to this [sample project][sample] illustrating how to use Event Hubs integration.\n+\n ## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offers a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n+ \n+\n ## Next steps\n+\n+The following section provide a sample project illustrating how to use this package.\n+### More sample code\n+- [Eventhubs Integration Sample](../azure-spring-boot-samples/azure-spring-cloud-eventhubs-integration-sample)\n+\n ## Contributing\n+This project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n+\n+Please follow [instructions here](../CONTRIBUTING.md) to build from source or contribute.", "originalCommit": "128505dadef5e9b189832fa08c73564b2a8c6015", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e6cff212c781ca68b7c8ba58cca75dde7d741e8e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e6cff212c781ca68b7c8ba58cca75dde7d741e8e", "message": "modify eventhub reademe", "committedDate": "2020-09-07T04:31:46Z", "type": "commit"}, {"oid": "7f31e7ae4b45a4642006b5d1740544885f300385", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7f31e7ae4b45a4642006b5d1740544885f300385", "message": "modify link errors", "committedDate": "2020-09-07T04:31:47Z", "type": "commit"}, {"oid": "83051e612efd2583c2248d1e30fcbfd9988fc19a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/83051e612efd2583c2248d1e30fcbfd9988fc19a", "message": "adjust readme links to bottom of the doc", "committedDate": "2020-09-07T04:31:48Z", "type": "commit"}, {"oid": "e7fc76db971107240fa67db7706c6e7f3fb0746a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7fc76db971107240fa67db7706c6e7f3fb0746a", "message": "update sample url", "committedDate": "2020-09-07T04:31:48Z", "type": "commit"}, {"oid": "e7fc76db971107240fa67db7706c6e7f3fb0746a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7fc76db971107240fa67db7706c6e7f3fb0746a", "message": "update sample url", "committedDate": "2020-09-07T04:31:48Z", "type": "forcePushed"}]}