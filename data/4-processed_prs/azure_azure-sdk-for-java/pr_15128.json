{"pr_number": 15128, "pr_title": "Publish telemetry tests", "pr_createdAt": "2020-09-11T23:09:00Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15128", "timeline": [{"oid": "0e4a5f6b208673b04cc6b96ea132d7557925e103", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e4a5f6b208673b04cc6b96ea132d7557925e103", "message": "Publish telemetry tests", "committedDate": "2020-09-11T23:08:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMyNzc5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15128#discussion_r487327798", "bodyText": "missing piece from the previous PR, if you want to run tests live/record you need this if you are using JDK 9+", "author": "azabbasi", "createdAt": "2020-09-11T23:09:46Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/pom.xml", "diffHunk": "@@ -129,6 +129,7 @@\n             <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->\n             <configuration>\n               <argLine>\n+                --add-exports com.azure.core/com.azure.core.implementation.http=ALL-UNNAMED", "originalCommit": "0e4a5f6b208673b04cc6b96ea132d7557925e103", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzMTA5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15128#discussion_r487331096", "bodyText": "I like this, we should split the test-setup part in other tests as well", "author": "abhipsaMisra", "createdAt": "2020-09-11T23:25:17Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/PublishTelemetryAsyncTests.java", "diffHunk": "@@ -0,0 +1,110 @@\n+package com.azure.digitaltwins.core;\n+\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.digitaltwins.core.helpers.UniqueIdHelper;\n+import com.azure.digitaltwins.core.models.PublishTelemetryRequestOptions;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import reactor.test.StepVerifier;\n+\n+import java.net.HttpURLConnection;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Dictionary;\n+import java.util.Hashtable;\n+\n+import static com.azure.digitaltwins.core.TestHelper.DISPLAY_NAME_WITH_ARGUMENTS;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+public class PublishTelemetryAsyncTests extends PublishTelemetryTestBase {\n+\n+    private final ClientLogger logger = new ClientLogger(PublishTelemetryAsyncTests.class);\n+\n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.digitaltwins.core.TestHelper#getTestParameters\")\n+    @Override\n+    public void publishTelemetryLifecycleTest(HttpClient httpClient, DigitalTwinsServiceVersion serviceVersion) {\n+        DigitalTwinsAsyncClient client = getAsyncClient(httpClient, serviceVersion);\n+\n+        String wifiModelId = UniqueIdHelper.getUniqueModelId(TestAssetDefaults.WIFI_MODEL_ID_PREFIX, client, randomIntegerStringGenerator);\n+        String roomWithWifiModelId = UniqueIdHelper.getUniqueModelId(TestAssetDefaults.ROOM_WITH_WIFI_MODEL_ID_PREFIX, client, randomIntegerStringGenerator);\n+        String roomWithWifiTwinId = UniqueIdHelper.getUniqueDigitalTwinId(TestAssetDefaults.ROOM_WITH_WIFI_TWIN_ID_PREFIX, client, randomIntegerStringGenerator);\n+\n+        try {\n+            // Create models needed for the digital twin\n+            createModelsAndTwins(client, wifiModelId, roomWithWifiModelId, roomWithWifiTwinId);", "originalCommit": "0e4a5f6b208673b04cc6b96ea132d7557925e103", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzMjQxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15128#discussion_r487332411", "bodyText": "I am planning to do another round of cleanup to make things a bit more consistent , I will address this later during the code cleanup ;)", "author": "azabbasi", "createdAt": "2020-09-11T23:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzMTA5Ng=="}], "type": "inlineReview"}]}