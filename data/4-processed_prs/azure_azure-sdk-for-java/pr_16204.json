{"pr_number": 16204, "pr_title": "RntbdBugFix", "pr_createdAt": "2020-10-12T22:56:27Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/16204", "timeline": [{"oid": "d950b363ea10b5f6ff742b1b329dc6c8ace2eb6f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d950b363ea10b5f6ff742b1b329dc6c8ace2eb6f", "message": "Rntbd bug fix", "committedDate": "2020-10-12T22:54:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NTA1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16204#discussion_r503575054", "bodyText": "could you please explain the scenario which this bug shows itself?\nwhy do we need this?", "author": "moderakh", "createdAt": "2020-10-12T22:58:03Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequest.java", "diffHunk": "@@ -78,13 +79,16 @@ public static RntbdRequest decode(final ByteBuf in) {\n     void encode(final ByteBuf out) {\n \n         final int expectedLength = RntbdRequestFrame.LENGTH + this.headers.computeLength();\n-        final int start = out.readerIndex();\n+        final int start = out.writerIndex();", "originalCommit": "d950b363ea10b5f6ff742b1b329dc6c8ace2eb6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3Njc2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16204#discussion_r503576769", "bodyText": "This change was originally found and fixed in PR https://github.com/Azure/azure-sdk-for-java/pull/14697/files#diff-cdd54a91cbc899239eec06998abac39eL81.\nWe have not came across any issue today since the writerIndex and readerIndex should be the same. But the writerIndex is the more correct value we should use.\nBut also feel it may be a risk to depend on the underlying ByteBuf implementation details.\nSo it is better to change to use the right value.", "author": "xinlian12", "createdAt": "2020-10-12T23:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NTA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4NTk5Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16204#discussion_r503585992", "bodyText": "I just read the whole code. makes sense to use writerIndex. thanks", "author": "moderakh", "createdAt": "2020-10-12T23:37:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NTA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NjgzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16204#discussion_r503576831", "bodyText": "out.writerIndex() - start instead of out.writerIndex() - expectedLength", "author": "FabianMeiswinkel", "createdAt": "2020-10-12T23:04:03Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequest.java", "diffHunk": "@@ -78,13 +79,16 @@ public static RntbdRequest decode(final ByteBuf in) {\n     void encode(final ByteBuf out) {\n \n         final int expectedLength = RntbdRequestFrame.LENGTH + this.headers.computeLength();\n-        final int start = out.readerIndex();\n+        final int start = out.writerIndex();\n \n         out.writeIntLE(expectedLength);\n         this.frame.encode(out);\n         this.headers.encode(out);\n \n-        assert out.writerIndex() - start == expectedLength;\n+        checkState(out.writerIndex() - start == expectedLength,\n+            \"encoding error: {\\\"expectedLength\\\": %s, \\\"observedLength\\\": %s}\",\n+            expectedLength,\n+            out.writerIndex() - expectedLength);", "originalCommit": "d950b363ea10b5f6ff742b1b329dc6c8ace2eb6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NzMxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16204#discussion_r503577319", "bodyText": "Also I would prefer taking a snapshot of out.writerIndex() to be used for the check state condition and the output message to address any thread-safety concerns", "author": "FabianMeiswinkel", "createdAt": "2020-10-12T23:05:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NjgzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3Nzc5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16204#discussion_r503577793", "bodyText": "good catch, thanks, updated", "author": "xinlian12", "createdAt": "2020-10-12T23:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NjgzMQ=="}], "type": "inlineReview"}, {"oid": "7e006a9b4277bb4aaac39dca0d0a0db8fb1fe25e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7e006a9b4277bb4aaac39dca0d0a0db8fb1fe25e", "message": "resolve comments", "committedDate": "2020-10-12T23:07:03Z", "type": "commit"}]}