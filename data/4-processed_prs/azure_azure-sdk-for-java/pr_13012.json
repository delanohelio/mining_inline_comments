{"pr_number": 13012, "pr_title": "Modify javadoc check on spring annotation in README.md", "pr_createdAt": "2020-07-10T07:49:21Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13012", "timeline": [{"oid": "665fcf6bc652a1b923d9ddee3d693a7c781cc4f7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/665fcf6bc652a1b923d9ddee3d693a7c781cc4f7", "message": "Modify javadoc check on spring annotation in README.md", "committedDate": "2020-07-10T07:47:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwNTE5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13012#discussion_r452905197", "bodyText": "@yiliuTo why are we making change? Literally, the line below this is doing the same thing. That change was checked in by @alzimmermsft with this PR.", "author": "JimSuplizio", "createdAt": "2020-07-10T15:11:09Z", "path": "eng/pipelines/scripts/generate_overview_from_readme.py", "diffHunk": "@@ -41,6 +41,7 @@ def generate_overview(readme_file, version):\n         # markdown2.markdown will create html from the readme.md file. The fenced-code-blocks\n         # extras being passed into the markdown call is necessary to deal with the embedded\n         # code blocks within the readme so they'll displaye correctly in the html\n+        readme_content = markdown2.markdown(re.sub(pattern='{@', repl='{{@literal @}', string=readme_content), extras=[\"fenced-code-blocks\"])", "originalCommit": "665fcf6bc652a1b923d9ddee3d693a7c781cc4f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNjM1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13012#discussion_r452936356", "bodyText": "@JimSuplizio - if @alzimmermsft 's change is working correctly, how come I am still seeing the java docs issue on this PR ?\n#12964", "author": "kushagraThapar", "createdAt": "2020-07-10T16:06:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwNTE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4MDk2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13012#discussion_r452980966", "bodyText": "Yes, this is similar to the PR mentioned, but this is making the check more flexible to cover additional replacing scenarios. Made a commit to the PR to make the regex match all @s and replacing them with the Javadoc safe {@literal @}.", "author": "alzimmermsft", "createdAt": "2020-07-10T17:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwNTE5Nw=="}], "type": "inlineReview"}, {"oid": "24509fc82d1d08b13ac4d961851a7d21e4fa3977", "url": "https://github.com/Azure/azure-sdk-for-java/commit/24509fc82d1d08b13ac4d961851a7d21e4fa3977", "message": "Update generate_overview_from_readme.py\n\nRelax regex pattern to match all `@` symbols and replacing them with `{@literal @}`. This is safe as Javadoc generation will display all `{@literal @}` as `@`, retaining current display behavior while fixing all erroneous attempts of Javadoc using `@` as a tag reference.", "committedDate": "2020-07-10T17:35:07Z", "type": "commit"}]}