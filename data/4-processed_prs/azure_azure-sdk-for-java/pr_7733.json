{"pr_number": 7733, "pr_title": "Add az namespace span attribute for Storage", "pr_createdAt": "2020-01-27T03:03:23Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7733", "timeline": [{"oid": "c777a51f084c0650ab343701337e061d731297f6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c777a51f084c0650ab343701337e061d731297f6", "message": "update for withDefaultContext", "committedDate": "2020-01-27T04:50:31Z", "type": "forcePushed"}, {"oid": "12bb2d010c4ad3c3894bcf45ca910844f1c185b0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/12bb2d010c4ad3c3894bcf45ca910844f1c185b0", "message": "update for withDefaultContext", "committedDate": "2020-01-27T21:32:50Z", "type": "forcePushed"}, {"oid": "8b00e6aa90d0c69b454e67000d6e66b02947c827", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b00e6aa90d0c69b454e67000d6e66b02947c827", "message": "update for withDefaultContext", "committedDate": "2020-01-27T21:50:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODMyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r371578323", "bodyText": "You should be able to leverage Collections.singletonMap instead, it uses conceptually similar logic where it cannot be modified once created and would make this code much cleaner.", "author": "alzimmermsft", "createdAt": "2020-01-28T01:59:26Z", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -28,6 +33,10 @@\n     private static final ClientLogger LOGGER = new ClientLogger(Utility.class);\n     private static final String UTF8_CHARSET = \"UTF-8\";\n     private static final String INVALID_DATE_STRING = \"Invalid Date String: %s.\";\n+    // Please see <a href=https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers>here</a>\n+    // for more information on Azure resource provider namespaces.\n+    public static final Map<String, String> STORAGE_TRACING_PROPERTIES = Collections.unmodifiableMap(", "originalCommit": "8b00e6aa90d0c69b454e67000d6e66b02947c827", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxNDE2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r380914164", "bodyText": "updated.", "author": "samvaity", "createdAt": "2020-02-18T20:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODUwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r371578505", "bodyText": "Did this need to become qualified?", "author": "alzimmermsft", "createdAt": "2020-01-28T02:00:25Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlockBlobAsyncClient.java", "diffHunk": "@@ -186,7 +186,7 @@\n     public Mono<Response<BlockBlobItem>> uploadWithResponse(Flux<ByteBuffer> data, long length, BlobHttpHeaders headers,\n         Map<String, String> metadata, AccessTier tier, byte[] contentMd5, BlobRequestConditions requestConditions) {\n         try {\n-            return withContext(context -> uploadWithResponse(data, length, headers, metadata, tier, contentMd5,\n+            return FluxUtil.withContext(context -> uploadWithResponse(data, length, headers, metadata, tier, contentMd5,", "originalCommit": "8b00e6aa90d0c69b454e67000d6e66b02947c827", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4MTgyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r373281821", "bodyText": "Yeah, this qualifier can be removed.", "author": "srnagar", "createdAt": "2020-01-31T01:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODUwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODcyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r371578727", "bodyText": "This dependency could be removed as it will be transitively pulled from Storage Common, and really should be pulled from Storage Common.", "author": "alzimmermsft", "createdAt": "2020-01-28T02:01:28Z", "path": "sdk/storage/azure-storage-blob/pom.xml", "diffHunk": "@@ -55,7 +55,7 @@\n     <dependency>\n       <groupId>com.azure</groupId>\n       <artifactId>azure-core</artifactId>\n-      <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n+      <version>1.3.0-beta.1</version> <!-- {x-version-update;unreleased_com.azure:azure-core;dependency} -->", "originalCommit": "8b00e6aa90d0c69b454e67000d6e66b02947c827", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4MDY0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r373280645", "bodyText": "The map of attributes doesn't necessarily have to be for tracer spans. Update javadoc here to just say  The map of attributes to be set on {@link Context}", "author": "srnagar", "createdAt": "2020-01-31T01:34:30Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/FluxUtil.java", "diffHunk": "@@ -103,6 +103,34 @@ private static void accept(ByteArrayOutputStream byteOutputStream, ByteBuffer by\n             .flatMap(serviceCall);\n     }\n \n+    /**\n+     * This method converts the incoming {@code subscriberContext} from {@link reactor.util.context.Context Reactor\n+     * Context} to {@link Context Azure Context}, adds the specified tracing attributes and calls the given lambda\n+     * function with this context and returns a single entity of type {@code T}\n+     * <p>\n+     * If the reactor context is empty, {@link Context#NONE} will be used to call the lambda function\n+     * </p>\n+     *\n+     * @param serviceCall serviceCall The lambda function that makes the service call into which azure context\n+     * will be passed\n+     * @param contextAttributes The map of attributes to be set on the tracer spans.", "originalCommit": "8b00e6aa90d0c69b454e67000d6e66b02947c827", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4MTMxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r373281310", "bodyText": "There's a bit of duplication of code with these withContext methods. The withContext(Function) overload should just call into this method with an empty map and you should be able to delete toAzureContext() method.", "author": "srnagar", "createdAt": "2020-01-31T01:37:35Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/FluxUtil.java", "diffHunk": "@@ -103,6 +103,34 @@ private static void accept(ByteArrayOutputStream byteOutputStream, ByteBuffer by\n             .flatMap(serviceCall);\n     }\n \n+    /**\n+     * This method converts the incoming {@code subscriberContext} from {@link reactor.util.context.Context Reactor\n+     * Context} to {@link Context Azure Context}, adds the specified tracing attributes and calls the given lambda\n+     * function with this context and returns a single entity of type {@code T}\n+     * <p>\n+     * If the reactor context is empty, {@link Context#NONE} will be used to call the lambda function\n+     * </p>\n+     *\n+     * @param serviceCall serviceCall The lambda function that makes the service call into which azure context\n+     * will be passed\n+     * @param contextAttributes The map of attributes to be set on the tracer spans.\n+     * @param  <T> The type of response returned from the service call\n+     * @return The response from service call\n+     */\n+    public static <T> Mono<T> withContext(Function<Context, Mono<T>> serviceCall,", "originalCommit": "8b00e6aa90d0c69b454e67000d6e66b02947c827", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxNDkxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r380914918", "bodyText": "Updated to call in the withContext overload with an empty map. However, toAzureContext() is still needed, for fluxContext() method.", "author": "samvaity", "createdAt": "2020-02-18T20:24:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4MTMxMA=="}], "type": "inlineReview"}, {"oid": "6e6d41f682a5889d7ca05d457b4bbed883d169b3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6e6d41f682a5889d7ca05d457b4bbed883d169b3", "message": "update for withDefaultContext", "committedDate": "2020-02-18T18:28:01Z", "type": "forcePushed"}, {"oid": "f8cce54183329571c74fa93159fcd09f07f9edc0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f8cce54183329571c74fa93159fcd09f07f9edc0", "message": "update all storage packages for tracing change", "committedDate": "2020-02-18T23:34:48Z", "type": "forcePushed"}, {"oid": "6fa79321977f458423af68a991301b3c77e7c178", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6fa79321977f458423af68a991301b3c77e7c178", "message": "resolving azure-core dependency issue", "committedDate": "2020-02-19T01:40:39Z", "type": "forcePushed"}, {"oid": "2e3f5163ecb96fd72375272483e8cfc835db3e8b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2e3f5163ecb96fd72375272483e8cfc835db3e8b", "message": "resolving multiple azure-core versions in nio storage client", "committedDate": "2020-02-19T19:11:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MjA4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r385772080", "bodyText": "Thoughts on changing this from using withContext and a String constant in Storage Common to making this a helper method in Storage Common?", "author": "alzimmermsft", "createdAt": "2020-02-28T15:50:20Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobLeaseAsyncClient.java", "diffHunk": "@@ -121,7 +122,8 @@ public String getLeaseId() {\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<Response<String>> acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions) {\n         try {\n-            return withContext(context -> acquireLeaseWithResponse(duration, modifiedRequestConditions, context));\n+            return withContext(context -> acquireLeaseWithResponse(duration, modifiedRequestConditions, context),\n+                STORAGE_TRACING_PROPERTIES);", "originalCommit": "2e3f5163ecb96fd72375272483e8cfc835db3e8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA0OTEyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r394049123", "bodyText": "Updated with a withTracingContext in Storage Common that will update the returned serviceCall context with STORAGE_TRACING_PROPERTIES.", "author": "samvaity", "createdAt": "2020-03-18T00:47:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MjA4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMjM5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r386202399", "bodyText": "This can be deleted.", "author": "srnagar", "createdAt": "2020-03-02T05:25:18Z", "path": "sdk/storage/azure-storage-blob-cryptography/pom.xml", "diffHunk": "@@ -101,11 +106,11 @@\n       <scope>test</scope>\n     </dependency>\n     <!--    <dependency>-->\n-<!--      <groupId>io.projectreactor</groupId>-->\n-<!--      <artifactId>reactor-test</artifactId>-->\n-<!--      <version>3.3.0.RELEASE</version>--> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n-<!--      <scope>test</scope>-->\n-<!--    </dependency>-->\n+    <!--      <groupId>io.projectreactor</groupId>-->\n+    <!--      <artifactId>reactor-test</artifactId>-->\n+    <!--      <version>3.3.0.RELEASE</version>--> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n+    <!--      <scope>test</scope>-->\n+    <!--    </dependency>-->", "originalCommit": "2e3f5163ecb96fd72375272483e8cfc835db3e8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMjU5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r386202591", "bodyText": "This shouldn't be deleted as azure-core-test may bring in an older version of azure-core.", "author": "srnagar", "createdAt": "2020-03-02T05:26:14Z", "path": "sdk/storage/azure-storage-blob/pom.xml", "diffHunk": "@@ -52,11 +52,6 @@\n   </pluginRepositories>\n \n   <dependencies>\n-    <dependency>", "originalCommit": "2e3f5163ecb96fd72375272483e8cfc835db3e8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4Mjc5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r386582791", "bodyText": "I think cryptography should get its core dependency through blobs, no?", "author": "rickle-msft", "createdAt": "2020-03-02T18:53:32Z", "path": "sdk/storage/azure-storage-blob-cryptography/pom.xml", "diffHunk": "@@ -43,6 +43,11 @@\n       <artifactId>azure-storage-blob</artifactId>\n       <version>12.5.0-beta.1</version> <!-- {x-version-update;com.azure:azure-storage-blob;current} -->\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>", "originalCommit": "2e3f5163ecb96fd72375272483e8cfc835db3e8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDc5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r386584793", "bodyText": "Since it seems like pretty much every call to withContext needs to pass this constant, I think it'd be helpful if we defined something in storage.common that's like withTracingContext or something to automatically add this. Otherwise, I think us Storage folks are liable to forget and mess up tracing later :)", "author": "rickle-msft", "createdAt": "2020-03-02T18:56:58Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/AppendBlobAsyncClient.java", "diffHunk": "@@ -152,7 +153,8 @@\n     public Mono<Response<AppendBlobItem>> createWithResponse(BlobHttpHeaders headers, Map<String, String> metadata,\n         BlobRequestConditions requestConditions) {\n         try {\n-            return withContext(context -> createWithResponse(headers, metadata, requestConditions, context));\n+            return withContext(context -> createWithResponse(headers, metadata, requestConditions, context),\n+                STORAGE_TRACING_PROPERTIES);", "originalCommit": "2e3f5163ecb96fd72375272483e8cfc835db3e8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA0OTI3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r394049279", "bodyText": "Updated with a withTracingContext in Storage Common that will update the returned serviceCall context with STORAGE_TRACING_PROPERTIES.", "author": "samvaity", "createdAt": "2020-03-18T00:47:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDc5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NTcyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7733#discussion_r386585724", "bodyText": "Thanks for cleaning up some of this for us :)", "author": "rickle-msft", "createdAt": "2020-03-02T18:58:40Z", "path": "sdk/storage/azure-storage-queue/pom.xml", "diffHunk": "@@ -33,11 +33,6 @@\n   </scm>\n \n   <dependencies>\n-    <dependency>\n-      <groupId>com.azure</groupId>", "originalCommit": "2e3f5163ecb96fd72375272483e8cfc835db3e8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63e48b72be2e013f8054283ffe657377179b7c10", "url": "https://github.com/Azure/azure-sdk-for-java/commit/63e48b72be2e013f8054283ffe657377179b7c10", "message": "update review comments", "committedDate": "2020-03-18T00:23:13Z", "type": "forcePushed"}, {"oid": "fafcdc6c840034a470fc73e9cf1fdd56e012c4e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fafcdc6c840034a470fc73e9cf1fdd56e012c4e3", "message": "update review comments", "committedDate": "2020-03-18T00:40:48Z", "type": "forcePushed"}, {"oid": "85fbdec3e12f6ccfdfc984dfaf6eb2e11ccddea7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/85fbdec3e12f6ccfdfc984dfaf6eb2e11ccddea7", "message": "update to wrapper withContext", "committedDate": "2020-03-25T19:39:41Z", "type": "forcePushed"}, {"oid": "5bad87c12ca179c381e1c3b506e534c21a561e01", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5bad87c12ca179c381e1c3b506e534c21a561e01", "message": "update service context", "committedDate": "2020-04-01T07:38:41Z", "type": "forcePushed"}, {"oid": "fcc40023b50b8c82303973fdd9694452c19dffca", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fcc40023b50b8c82303973fdd9694452c19dffca", "message": "update for withDefaultContext", "committedDate": "2020-04-01T07:41:27Z", "type": "commit"}, {"oid": "07c82316db566f17dd0762f9a05c5f0ea8ff16d1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/07c82316db566f17dd0762f9a05c5f0ea8ff16d1", "message": "update review feedback", "committedDate": "2020-04-01T07:41:29Z", "type": "commit"}, {"oid": "7388fd6d977629c195e781ea5a4192900da625a2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7388fd6d977629c195e781ea5a4192900da625a2", "message": "update all storage packages for tracing change", "committedDate": "2020-04-01T07:41:31Z", "type": "commit"}, {"oid": "538984fa20b29a1b98de32fbcf1182a8d3d01b89", "url": "https://github.com/Azure/azure-sdk-for-java/commit/538984fa20b29a1b98de32fbcf1182a8d3d01b89", "message": "resolving azure-core dependency issue", "committedDate": "2020-04-01T07:41:33Z", "type": "commit"}, {"oid": "ca46f1a34709886fc9212571b95898608bfb51ab", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ca46f1a34709886fc9212571b95898608bfb51ab", "message": "resolving multiple azure-core versions in nio storage client", "committedDate": "2020-04-01T07:41:34Z", "type": "commit"}, {"oid": "ddd191cd7480b3bd2a303f24ab85666b9015e1c5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ddd191cd7480b3bd2a303f24ab85666b9015e1c5", "message": "update review comments", "committedDate": "2020-04-01T07:41:36Z", "type": "commit"}, {"oid": "99ee409b883d8f3b89eab96ce658ff0d0ac2fce3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/99ee409b883d8f3b89eab96ce658ff0d0ac2fce3", "message": "update to wrapper withContext", "committedDate": "2020-04-01T07:41:38Z", "type": "commit"}, {"oid": "aff14bb30fdb017dc515e114b669f6006f348836", "url": "https://github.com/Azure/azure-sdk-for-java/commit/aff14bb30fdb017dc515e114b669f6006f348836", "message": "update service context", "committedDate": "2020-04-01T07:41:40Z", "type": "forcePushed"}, {"oid": "58c9c259175c2f3d4d1f76c8c04fdda91f8b7c37", "url": "https://github.com/Azure/azure-sdk-for-java/commit/58c9c259175c2f3d4d1f76c8c04fdda91f8b7c37", "message": "update service context", "committedDate": "2020-04-01T07:58:30Z", "type": "commit"}, {"oid": "58c9c259175c2f3d4d1f76c8c04fdda91f8b7c37", "url": "https://github.com/Azure/azure-sdk-for-java/commit/58c9c259175c2f3d4d1f76c8c04fdda91f8b7c37", "message": "update service context", "committedDate": "2020-04-01T07:58:30Z", "type": "forcePushed"}, {"oid": "e8bd0d5a117673649baa9d45849e0f38e54f1284", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e8bd0d5a117673649baa9d45849e0f38e54f1284", "message": "Update null context to Context.NONE", "committedDate": "2020-04-01T17:02:06Z", "type": "forcePushed"}, {"oid": "6faf33819505a106ff7839b09dff9577242b8337", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6faf33819505a106ff7839b09dff9577242b8337", "message": "Update null context to Context.NONE", "committedDate": "2020-04-01T17:26:07Z", "type": "forcePushed"}, {"oid": "5557cd100bcdb7c57073b5f4bc5d2fe2ef21d3d7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5557cd100bcdb7c57073b5f4bc5d2fe2ef21d3d7", "message": "Update null context to Context.NONE", "committedDate": "2020-04-02T05:00:55Z", "type": "commit"}, {"oid": "5557cd100bcdb7c57073b5f4bc5d2fe2ef21d3d7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5557cd100bcdb7c57073b5f4bc5d2fe2ef21d3d7", "message": "Update null context to Context.NONE", "committedDate": "2020-04-02T05:00:55Z", "type": "forcePushed"}]}