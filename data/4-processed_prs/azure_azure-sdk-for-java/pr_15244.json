{"pr_number": 15244, "pr_title": "RNTBD ensure closed connections are cleaned up", "pr_createdAt": "2020-09-16T02:14:16Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15244", "timeline": [{"oid": "966a2024a44c52cb126c4b63a9a47a0c15cf0c04", "url": "https://github.com/Azure/azure-sdk-for-java/commit/966a2024a44c52cb126c4b63a9a47a0c15cf0c04", "message": "rntbd improvements", "committedDate": "2020-09-13T06:34:34Z", "type": "commit"}, {"oid": "d2d586efd129b5b76a68766cc51c84727a93b4ec", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d2d586efd129b5b76a68766cc51c84727a93b4ec", "message": "fixed latency issue and a race condition on close", "committedDate": "2020-09-13T18:43:51Z", "type": "commit"}, {"oid": "9c8ff08638ad0b705b4db2949fe4b0b87b9683c3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c8ff08638ad0b705b4db2949fe4b0b87b9683c3", "message": "fixed race condition in connection management resulting in creating more connections, fixed a infinite loop issue", "committedDate": "2020-09-14T01:54:23Z", "type": "commit"}, {"oid": "beb5fef10c2a3489f5a4ed28359936703de12df6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/beb5fef10c2a3489f5a4ed28359936703de12df6", "message": "fixed compilation warning", "committedDate": "2020-09-14T01:58:21Z", "type": "commit"}, {"oid": "2330f9d09f994ac1f1612bbd1e69eefc1e047b7a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2330f9d09f994ac1f1612bbd1e69eefc1e047b7a", "message": "ensure the channel is servicable", "committedDate": "2020-09-14T02:37:30Z", "type": "commit"}, {"oid": "065b4929f13b0f5f8ce61387faa68a1f29d2d54d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/065b4929f13b0f5f8ce61387faa68a1f29d2d54d", "message": "increase monitoring period", "committedDate": "2020-09-14T02:39:30Z", "type": "commit"}, {"oid": "4385fa967c5886c126329563885a611d42f748de", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4385fa967c5886c126329563885a611d42f748de", "message": "removed info debug logs", "committedDate": "2020-09-14T02:43:53Z", "type": "commit"}, {"oid": "6a23badb7a9f86f7d5f158053322203549674606", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6a23badb7a9f86f7d5f158053322203549674606", "message": "cleanup", "committedDate": "2020-09-14T04:37:21Z", "type": "commit"}, {"oid": "e8a1e50363c62aa37e2b9d17689444d5cd932bd8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e8a1e50363c62aa37e2b9d17689444d5cd932bd8", "message": "update condition", "committedDate": "2020-09-14T05:00:15Z", "type": "commit"}, {"oid": "05ac2e23020cffa4dcd9fc8a1b975084151e4842", "url": "https://github.com/Azure/azure-sdk-for-java/commit/05ac2e23020cffa4dcd9fc8a1b975084151e4842", "message": "Reacting to code review comments", "committedDate": "2020-09-14T14:45:08Z", "type": "commit"}, {"oid": "1757a02530c54281794416b121d26ad92f1d502b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1757a02530c54281794416b121d26ad92f1d502b", "message": "Merge branch 'master' into users/moderakh/20200912T2019-rntbd-fixes", "committedDate": "2020-09-14T15:01:38Z", "type": "commit"}, {"oid": "d3d199264101350194f742c12ef632d044fff4e5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d3d199264101350194f742c12ef632d044fff4e5", "message": "Merge branch 'users/moderakh/20200912T2019-rntbd-fixes' of https://github.com/moderakh/azure-sdk-for-java into users/fabianm/RntbdMetricsToDiagnostics", "committedDate": "2020-09-14T15:06:04Z", "type": "commit"}, {"oid": "08879489d58638a7e4ca4cc4bb77184b8c16cdeb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/08879489d58638a7e4ca4cc4bb77184b8c16cdeb", "message": "Merge pull request #1 from FabianMeiswinkel/users/fabianm/RntbdMetricsToDiagnostics\n\nUsers/fabianm/rntbd metrics to diagnostics", "committedDate": "2020-09-14T15:18:04Z", "type": "commit"}, {"oid": "342d085195ab2354aef241dfc07ea1ad1d47f863", "url": "https://github.com/Azure/azure-sdk-for-java/commit/342d085195ab2354aef241dfc07ea1ad1d47f863", "message": "improved queue pending task monitoring, fixed spotbug complain", "committedDate": "2020-09-14T16:14:42Z", "type": "commit"}, {"oid": "04f020a2f70984e9fc520d09e450d63bf6c695c6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/04f020a2f70984e9fc520d09e450d63bf6c695c6", "message": "Defense in-depth against releaseChannel race condition", "committedDate": "2020-09-14T18:24:55Z", "type": "commit"}, {"oid": "d611df90c1a689865cd5f6e69579aeddff438adc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d611df90c1a689865cd5f6e69579aeddff438adc", "message": "Merge pull request #3 from FabianMeiswinkel/users/fabianm/RntbdMetricsToDiagnostics\n\n Defense in-depth against race condition if releaseChannel would be called concurrently for the same channel instance", "committedDate": "2020-09-14T18:31:05Z", "type": "commit"}, {"oid": "cf2a6c297c6213555d3f898ac5bbdb71eaf6f9fd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cf2a6c297c6213555d3f898ac5bbdb71eaf6f9fd", "message": "cancels pending acquisition tasks which are expired", "committedDate": "2020-09-15T02:11:00Z", "type": "commit"}, {"oid": "b251d07038e86ddb4f697eed8ef07d1a5b4b5f31", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b251d07038e86ddb4f697eed8ef07d1a5b4b5f31", "message": "cancels pending acquisition tasks which are expired", "committedDate": "2020-09-15T02:12:09Z", "type": "commit"}, {"oid": "9fab1c4a3493e220e5a51c87fb891696813cd15b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9fab1c4a3493e220e5a51c87fb891696813cd15b", "message": "Merge pull request #4 from moderakh/users/moderakh/20200913T1219-rntbd-fixes\n\nUsers/moderakh/20200913 t1219 rntbd fixes", "committedDate": "2020-09-15T02:30:57Z", "type": "commit"}, {"oid": "c0fc71c987acd3057f4de13ca7664404ef071d4e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c0fc71c987acd3057f4de13ca7664404ef071d4e", "message": "Fixing compiler warnings", "committedDate": "2020-09-15T03:20:06Z", "type": "commit"}, {"oid": "ac6a984d77a66bd7c2033d096de8b28fe89a26e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ac6a984d77a66bd7c2033d096de8b28fe89a26e3", "message": "Merge pull request #6 from FabianMeiswinkel/users/fabianm/RntbdMetricsToDiagnostics\n\nFixing compiler warnings", "committedDate": "2020-09-15T03:29:47Z", "type": "commit"}, {"oid": "fa91cf47ef383a33b0f2df3d33b9ea54a702fdf2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fa91cf47ef383a33b0f2df3d33b9ea54a702fdf2", "message": "Fixing SpotBug warning", "committedDate": "2020-09-15T04:40:46Z", "type": "commit"}, {"oid": "8c585e0649e0efd81b2fa0ba0d5df225424e245c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8c585e0649e0efd81b2fa0ba0d5df225424e245c", "message": "Merge pull request #7 from FabianMeiswinkel/users/fabianm/RntbdMetricsToDiagnostics\n\nFixing SpotBug warning", "committedDate": "2020-09-15T04:42:58Z", "type": "commit"}, {"oid": "90aeea4274006e7025684c2465fa5c0f156a2242", "url": "https://github.com/Azure/azure-sdk-for-java/commit/90aeea4274006e7025684c2465fa5c0f156a2242", "message": "Fixing build issue", "committedDate": "2020-09-15T05:14:50Z", "type": "commit"}, {"oid": "b5d184bcf3752f6fc2fdbee94eacb88d9466ed4d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b5d184bcf3752f6fc2fdbee94eacb88d9466ed4d", "message": "Merge pull request #8 from FabianMeiswinkel/users/fabianm/RntbdMetricsToDiagnostics\n\nFixing build issue", "committedDate": "2020-09-15T05:18:14Z", "type": "commit"}, {"oid": "ee0696a9ae4b885bf115d602ca301a860637ddd0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ee0696a9ae4b885bf115d602ca301a860637ddd0", "message": "Fixing SpotBug issue", "committedDate": "2020-09-15T05:42:02Z", "type": "commit"}, {"oid": "0aaa7f208ea46b86e348cf11a032aa30b8eb88a7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0aaa7f208ea46b86e348cf11a032aa30b8eb88a7", "message": "Merge pull request #9 from FabianMeiswinkel/users/fabianm/RntbdMetricsToDiagnostics\n\nFixing SpotBug issue", "committedDate": "2020-09-15T05:44:54Z", "type": "commit"}, {"oid": "b490f055b879e024134840ea94397cf46a973d07", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b490f055b879e024134840ea94397cf46a973d07", "message": "Moving AcquireTask completion callbacks away from the  channel pool executor's event loop", "committedDate": "2020-09-15T15:16:03Z", "type": "commit"}, {"oid": "094472e5e65e95740121ed30f9ddcf3cb2910f0b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/094472e5e65e95740121ed30f9ddcf3cb2910f0b", "message": "Further iterating on the scheduling for AcuireTask completions", "committedDate": "2020-09-15T17:21:27Z", "type": "commit"}, {"oid": "a18033dc2a4e516e53f8ca629c9805e87da1f3b2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a18033dc2a4e516e53f8ca629c9805e87da1f3b2", "message": "Cleanup", "committedDate": "2020-09-15T17:42:48Z", "type": "commit"}, {"oid": "d9be0f5eaa0110c5f4a9551a616bfe9537963a55", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d9be0f5eaa0110c5f4a9551a616bfe9537963a55", "message": "Stop ignoring maxRequest limit", "committedDate": "2020-09-15T18:05:05Z", "type": "commit"}, {"oid": "51136dd1f76dc8f2e5b28146e839a9b60a6e2626", "url": "https://github.com/Azure/azure-sdk-for-java/commit/51136dd1f76dc8f2e5b28146e839a9b60a6e2626", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/AcquisitionTaskSchedulingFix", "committedDate": "2020-09-15T18:26:30Z", "type": "commit"}, {"oid": "92edadeb61d7bdff5c6725d5f9a5acb79442366d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/92edadeb61d7bdff5c6725d5f9a5acb79442366d", "message": "Missed porting one change when resolving merge conflicts", "committedDate": "2020-09-15T18:36:05Z", "type": "commit"}, {"oid": "951f0efc72d7dd74f1209204455651a0b0752cde", "url": "https://github.com/Azure/azure-sdk-for-java/commit/951f0efc72d7dd74f1209204455651a0b0752cde", "message": "closes the channel and do the necessary cleanup", "committedDate": "2020-09-15T22:38:10Z", "type": "commit"}, {"oid": "d3960111f760e2c25c6b508a19316b8747c5569c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d3960111f760e2c25c6b508a19316b8747c5569c", "message": "Fxiing Json serialization issue.", "committedDate": "2020-09-15T23:07:16Z", "type": "commit"}, {"oid": "3de984397b5e536a7e063f0c4e83db0c9f48ac13", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3de984397b5e536a7e063f0c4e83db0c9f48ac13", "message": "Merge pull request #11 from FabianMeiswinkel/users/fabianm/SerializationFix\n\nFxiing Json serialization issue.", "committedDate": "2020-09-15T23:18:15Z", "type": "commit"}, {"oid": "62ecdbcaeda925cc8ac6d637a98605c1bb2df4e9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/62ecdbcaeda925cc8ac6d637a98605c1bb2df4e9", "message": "optimization for running the work on the current thread if current thread is the right thread", "committedDate": "2020-09-15T23:57:05Z", "type": "commit"}, {"oid": "c1b418a163f0b1d45d25290131e0381946aaaefa", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c1b418a163f0b1d45d25290131e0381946aaaefa", "message": "Merge branch 'users/moderakh/20200915T1247-rntbd-connection-hang' of github.com:moderakh/azure-sdk-for-java into users/moderakh/20200915T1247-rntbd-connection-hang", "committedDate": "2020-09-15T23:57:22Z", "type": "commit"}, {"oid": "88bbace618dadf6bf07f153d9a4e2242ddfa039b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/88bbace618dadf6bf07f153d9a4e2242ddfa039b", "message": "cleanup", "committedDate": "2020-09-16T02:08:33Z", "type": "commit"}, {"oid": "485ef4ec98240899beb558daa87d378675bd0ffd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/485ef4ec98240899beb558daa87d378675bd0ffd", "message": "Merge branch 'master' into users/moderakh/20200915T1247-rntbd-connection-hang", "committedDate": "2020-09-16T02:11:10Z", "type": "commit"}, {"oid": "90f627088c0b4d65b6871dee45b40ee591392c6a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/90f627088c0b4d65b6871dee45b40ee591392c6a", "message": "Initial version of admission control in RntbdServiceEndpoint", "committedDate": "2020-09-16T02:17:41Z", "type": "commit"}, {"oid": "faa2d866571d374d615a24c007fd9de728aecd1a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/faa2d866571d374d615a24c007fd9de728aecd1a", "message": "Fixing test issues", "committedDate": "2020-09-16T03:10:03Z", "type": "commit"}, {"oid": "9f870a547f2c87c1220d1d09333cf26f3309738f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f870a547f2c87c1220d1d09333cf26f3309738f", "message": "fix spotbug", "committedDate": "2020-09-16T03:52:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2MDM4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489160383", "bodyText": "channel.ensureIneventLop()", "author": "kirankumarkolli", "createdAt": "2020-09-16T04:53:02Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdClientChannelPool.java", "diffHunk": "@@ -1297,6 +1332,40 @@ public final AcquireListener acquired() {\n             return this;\n         }\n \n+        private void doOperationComplete(Channel channel) {\n+            if (!channel.isActive()) {", "originalCommit": "9f870a547f2c87c1220d1d09333cf26f3309738f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODgyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489168820", "bodyText": "Added that", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T05:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2MDM4Mw=="}], "type": "inlineReview"}, {"oid": "281d1b15e8ddab8e5be635b827055741b36073ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/281d1b15e8ddab8e5be635b827055741b36073ee", "message": "Fixing Config to allow overriding default of 10_000 maxConcurrentRequestsPerEndpoint", "committedDate": "2020-09-16T05:03:33Z", "type": "commit"}, {"oid": "90b36e4daa72afb2afff4da0443f15f2997ce40b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/90b36e4daa72afb2afff4da0443f15f2997ce40b", "message": "Cleanup", "committedDate": "2020-09-16T05:10:25Z", "type": "commit"}, {"oid": "c31fd9aa9494bce0330d329b33501f0029f2b758", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c31fd9aa9494bce0330d329b33501f0029f2b758", "message": "Merge pull request #12 from FabianMeiswinkel/users/fabianm/SerializationFix\n\nInitial version of admission control in RntbdServiceEndpoint", "committedDate": "2020-09-16T05:11:03Z", "type": "commit"}, {"oid": "f5a6f80902a47b4c7e3d86ef852995fdd7bab8bc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f5a6f80902a47b4c7e3d86ef852995fdd7bab8bc", "message": "Reenforcing that doOperationComplete runs on channel's event loop", "committedDate": "2020-09-16T05:18:13Z", "type": "commit"}, {"oid": "dc43aa8f89e26ec0e5f0b7ee574017fe59f6e548", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc43aa8f89e26ec0e5f0b7ee574017fe59f6e548", "message": "Merged latest master and resolved conflicts", "committedDate": "2020-09-16T09:05:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNjQxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489326416", "bodyText": "Is it future proofing or a bug?\nQuick check doesn't show any sub-classes.", "author": "kirankumarkolli", "createdAt": "2020-09-16T10:16:13Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -26,7 +26,7 @@\n      */\n     @Override\n     public boolean acceptOutboundMessage(final Object message) {\n-        return message.getClass() == RntbdContextRequest.class;\n+        return message instanceof RntbdContextRequest;", "originalCommit": "dc43aa8f89e26ec0e5f0b7ee574017fe59f6e548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MDU0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489370545", "bodyText": "Reverted in next iteration", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T11:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNjQxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNzgxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489327811", "bodyText": "Isn't null value a bug?\nOr when is it expected.", "author": "kirankumarkolli", "createdAt": "2020-09-16T10:18:50Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RequestTimeoutException.java", "diffHunk": "@@ -76,6 +77,23 @@ public RequestTimeoutException(String message, HttpHeaders headers, URI requestU\n                 : null);\n     }\n \n+    /**\n+     * Instantiates a new Request timeout exception.\n+     *\n+     * @param message the message\n+     * @param headers the headers\n+     * @param remoteAddress the remote address\n+     */\n+    public RequestTimeoutException(String message, HttpHeaders headers, SocketAddress remoteAddress) {\n+        super(message,\n+            null,\n+            HttpUtils.asMap(headers),\n+            HttpConstants.StatusCodes.REQUEST_TIMEOUT,\n+            remoteAddress != null", "originalCommit": "dc43aa8f89e26ec0e5f0b7ee574017fe59f6e548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MjA1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489362058", "bodyText": "Not expected - null check here to avoid NPE - and to be consistent with other overloads. So consumers of the RequestTimeoutException have to be aware that it can be null today already.\nLeaving it as is - please reactivate if you disagree.", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T11:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNzgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzNjEyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489336121", "bodyText": "ActivityId for non-service interaction is mis-leading.\nHow about not have it?", "author": "kirankumarkolli", "createdAt": "2020-09-16T10:33:59Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/FailFastRntbdRequestRecord.java", "diffHunk": "@@ -0,0 +1,69 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity.rntbd;\n+\n+import com.azure.cosmos.BridgeInternal;\n+import com.azure.cosmos.implementation.HttpConstants;\n+import com.azure.cosmos.implementation.RequestTimeoutException;\n+import com.azure.cosmos.implementation.http.HttpHeaders;\n+import io.netty.util.Timeout;\n+import io.netty.util.TimerTask;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.net.SocketAddress;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static com.azure.cosmos.implementation.guava27.Strings.lenientFormat;\n+\n+public class FailFastRntbdRequestRecord extends RntbdRequestRecord {\n+    private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);\n+\n+    private FailFastRntbdRequestRecord(final RntbdRequestArgs args) {\n+        super(args);\n+    }\n+\n+    @Override\n+    public Timeout newTimeout(final TimerTask task) {\n+        throw new IllegalArgumentException(\"newTimeout must never be called for fail fast records.\");\n+    }\n+\n+    public static FailFastRntbdRequestRecord createAndFailFast(\n+        RntbdRequestArgs args,\n+        long concurrentRequestsSnapshot,\n+        AtomicInteger concurrentRequests,\n+        RntbdMetrics metrics,\n+        SocketAddress remoteAddress) {\n+\n+        FailFastRntbdRequestRecord failFastRecord = new FailFastRntbdRequestRecord(args);\n+\n+        logger.debug(\n+            \"\\n  [{}]\\n  {}\\n  created FailFastRntbdRequestRecord {} \",\n+            failFastRecord,\n+            args,\n+            concurrentRequests);\n+\n+        final String reason = lenientFormat(\n+            \"Failed due to too many (%s) concurrent requests.\",\n+            concurrentRequestsSnapshot);\n+\n+        HttpHeaders headers = new HttpHeaders();\n+        headers.set(HttpConstants.HttpHeaders.ACTIVITY_ID, failFastRecord.activityId().toString());", "originalCommit": "dc43aa8f89e26ec0e5f0b7ee574017fe59f6e548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MzMxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489363318", "bodyText": "I have replicated here what happens for client-generated GoneException. I would rather not change it - because that would mean I need to check everywhere whether there are assumptions that the ACTIVITY_ID header exists everywhere. Don't want to take that risk right now (and leaving it in GoneException but not here sees worse than the approach in the PR). Leaving as is - please reactivate if you disagree.", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T11:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzNjEyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzOTc0Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489339747", "bodyText": "Is it absolutely necessary?\nCan the decrement be done in the ServiceEndpoint before fail?", "author": "kirankumarkolli", "createdAt": "2020-09-16T10:40:45Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/FailFastRntbdRequestRecord.java", "diffHunk": "@@ -0,0 +1,69 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity.rntbd;\n+\n+import com.azure.cosmos.BridgeInternal;\n+import com.azure.cosmos.implementation.HttpConstants;\n+import com.azure.cosmos.implementation.RequestTimeoutException;\n+import com.azure.cosmos.implementation.http.HttpHeaders;\n+import io.netty.util.Timeout;\n+import io.netty.util.TimerTask;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.net.SocketAddress;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static com.azure.cosmos.implementation.guava27.Strings.lenientFormat;\n+\n+public class FailFastRntbdRequestRecord extends RntbdRequestRecord {\n+    private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);\n+\n+    private FailFastRntbdRequestRecord(final RntbdRequestArgs args) {\n+        super(args);\n+    }\n+\n+    @Override\n+    public Timeout newTimeout(final TimerTask task) {\n+        throw new IllegalArgumentException(\"newTimeout must never be called for fail fast records.\");\n+    }\n+\n+    public static FailFastRntbdRequestRecord createAndFailFast(\n+        RntbdRequestArgs args,\n+        long concurrentRequestsSnapshot,\n+        AtomicInteger concurrentRequests,\n+        RntbdMetrics metrics,\n+        SocketAddress remoteAddress) {\n+\n+        FailFastRntbdRequestRecord failFastRecord = new FailFastRntbdRequestRecord(args);\n+\n+        logger.debug(\n+            \"\\n  [{}]\\n  {}\\n  created FailFastRntbdRequestRecord {} \",\n+            failFastRecord,\n+            args,\n+            concurrentRequests);\n+\n+        final String reason = lenientFormat(\n+            \"Failed due to too many (%s) concurrent requests.\",\n+            concurrentRequestsSnapshot);\n+\n+        HttpHeaders headers = new HttpHeaders();\n+        headers.set(HttpConstants.HttpHeaders.ACTIVITY_ID, failFastRecord.activityId().toString());\n+\n+        failFastRecord.whenComplete((response, error) -> {", "originalCommit": "dc43aa8f89e26ec0e5f0b7ee574017fe59f6e548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2OTA4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489369089", "bodyText": "Fixed in next iteration", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T11:38:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMzOTc0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM0MDM4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489340389", "bodyText": "Do upstream retries fail these or retry? (not a blocker now)", "author": "kirankumarkolli", "createdAt": "2020-09-16T10:41:56Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdServiceEndpoint.java", "diffHunk": "@@ -185,7 +187,17 @@ public RntbdRequestRecord request(final RntbdRequestArgs args) {\n \n         this.throwIfClosed();\n \n-        this.concurrentRequests.incrementAndGet();\n+        int concurrentRequestSnapshot = this.concurrentRequests.incrementAndGet();\n+\n+        if (concurrentRequestSnapshot > this.maxConcurrentRequests) {\n+            return FailFastRntbdRequestRecord.createAndFailFast(", "originalCommit": "dc43aa8f89e26ec0e5f0b7ee574017fe59f6e548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTMyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489371323", "bodyText": "No retry - that is why we chose this exception vs. GoneException. We don't want retries in this scenario", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T11:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM0MDM4OQ=="}], "type": "inlineReview"}, {"oid": "02a636dfef147a0a7000812017059f37278d051d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/02a636dfef147a0a7000812017059f37278d051d", "message": "Merge branch 'users/moderakh/20200915T1247-rntbd-connection-hang' of https://github.com/moderakh/azure-sdk-for-java into users/fabianm/SerializationFix", "committedDate": "2020-09-16T11:08:26Z", "type": "commit"}, {"oid": "1e7426e6ebd46a908a210bf17e47cd6824a99a2a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1e7426e6ebd46a908a210bf17e47cd6824a99a2a", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/SerializationFix", "committedDate": "2020-09-16T11:08:47Z", "type": "commit"}, {"oid": "bbe09f7a35fcdfab2a6419fcad14d4073bc5a818", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bbe09f7a35fcdfab2a6419fcad14d4073bc5a818", "message": "Merge pull request #13 from FabianMeiswinkel/users/fabianm/SerializationFix\n\nMerging latest from master to address base CI failures", "committedDate": "2020-09-16T11:13:39Z", "type": "commit"}, {"oid": "b968cf5a3f581043e22cf851553c49f3bb65d771", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b968cf5a3f581043e22cf851553c49f3bb65d771", "message": "Reacted to CR feedback", "committedDate": "2020-09-16T11:43:10Z", "type": "commit"}, {"oid": "3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "message": "Merge pull request #14 from FabianMeiswinkel/users/fabianm/SerializationFix\n\nAddressing CR feedback", "committedDate": "2020-09-16T11:44:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NjA2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489576068", "bodyText": "should it be DEFAULT_MAX_*?", "author": "xinlian12", "createdAt": "2020-09-16T16:40:28Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -252,6 +252,8 @@ private void throwIfClosed() {\n \n     public static final class Options {\n \n+        private static final int DEFAULT_MIN_MAX_CONCURRENT_REQUESTS_PER_ENDPOINT = 10_000;", "originalCommit": "3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4OTE2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489589169", "bodyText": "No - it is the minimum allowed value for MaxConcurrentRequestsPerEndpoint (#maxChannel * #maxRequestsPerChannel is used if it is larger than the Default_Min_Max*", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T17:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NjA2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3ODQ4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489578485", "bodyText": "Should this be FailFastRntbdRequestRecord.class?", "author": "xinlian12", "createdAt": "2020-09-16T16:44:39Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/FailFastRntbdRequestRecord.java", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity.rntbd;\n+\n+import com.azure.cosmos.BridgeInternal;\n+import com.azure.cosmos.implementation.HttpConstants;\n+import com.azure.cosmos.implementation.RequestTimeoutException;\n+import com.azure.cosmos.implementation.http.HttpHeaders;\n+import io.netty.util.Timeout;\n+import io.netty.util.TimerTask;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.net.SocketAddress;\n+import java.util.UUID;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static com.azure.cosmos.implementation.guava27.Strings.lenientFormat;\n+\n+public class FailFastRntbdRequestRecord extends RntbdRequestRecord {\n+    private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "originalCommit": "3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4NTM5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489585399", "bodyText": "Fixed in next iteration", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T16:56:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3ODQ4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4MDU0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489580542", "bodyText": "The usual pattern I saw is: (should we follow here as well?)\nif (logger.isDebugEnabled) {\nlogger.debug()\n}", "author": "xinlian12", "createdAt": "2020-09-16T16:48:12Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/FailFastRntbdRequestRecord.java", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity.rntbd;\n+\n+import com.azure.cosmos.BridgeInternal;\n+import com.azure.cosmos.implementation.HttpConstants;\n+import com.azure.cosmos.implementation.RequestTimeoutException;\n+import com.azure.cosmos.implementation.http.HttpHeaders;\n+import io.netty.util.Timeout;\n+import io.netty.util.TimerTask;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.net.SocketAddress;\n+import java.util.UUID;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static com.azure.cosmos.implementation.guava27.Strings.lenientFormat;\n+\n+public class FailFastRntbdRequestRecord extends RntbdRequestRecord {\n+    private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);\n+\n+    private FailFastRntbdRequestRecord(final RntbdRequestArgs args) {\n+        super(args);\n+    }\n+\n+    @Override\n+    public Timeout newTimeout(final TimerTask task) {\n+        throw new IllegalArgumentException(\"newTimeout must never be called for fail fast records.\");\n+    }\n+\n+    public static FailFastRntbdRequestRecord createAndFailFast(\n+        RntbdRequestArgs args,\n+        long concurrentRequestsSnapshot,\n+        RntbdMetrics metrics,\n+        SocketAddress remoteAddress) {\n+\n+        FailFastRntbdRequestRecord failFastRecord = new FailFastRntbdRequestRecord(args);\n+\n+        logger.debug(", "originalCommit": "3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4ODQ4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489588482", "bodyText": "The pattern is used extremely inconsistent - from my understanding it is extremely useful if it is expensive to \"calculate\" the message to be logged (to avoid even preparing the message when debug logging is disabled). I will leave it here as is (cheap to get the to be logged message). But I agree that it would be good to go over the entire code base and decide how to get this consistent. I can pick this up when I look at the perf optimizations that I want to take a look at (primarily for write)", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T17:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4MDU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5MjM2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489592368", "bodyText": "For admission control with lots of load its useful.", "author": "kirankumarkolli", "createdAt": "2020-09-16T17:08:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4MDU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4MjI0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489582245", "bodyText": "Same here, should we check whether the logger.isDebugEnabled?", "author": "xinlian12", "createdAt": "2020-09-16T16:51:05Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdClientChannelPool.java", "diffHunk": "@@ -588,7 +588,7 @@ private void acquireChannel(final ChannelPromiseWithExpiryTime promise) {\n                     final RntbdRequestManager manager = channel.pipeline().get(RntbdRequestManager.class);\n \n                     if (manager == null) {\n-                        logger.warn(\"Channel({} --> {}) closed\", channel, this.remoteAddress());\n+                        logger.debug(\"Channel({} --> {}) closed\", channel, this.remoteAddress());", "originalCommit": "3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4ODYwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489588602", "bodyText": "see above()", "author": "FabianMeiswinkel", "createdAt": "2020-09-16T17:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4MjI0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5MTMwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489591308", "bodyText": "why only timeQueued changed to final? should also change timeCompleted, timePipelined etc?", "author": "xinlian12", "createdAt": "2020-09-16T17:06:21Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -48,29 +48,26 @@\n             \"stage\");\n \n     private final RntbdRequestArgs args;\n-    private final RntbdRequestTimer timer;\n \n     private volatile int requestLength;\n     private volatile int responseLength;\n     private volatile Stage stage;\n \n     private volatile Instant timeCompleted;\n     private volatile Instant timePipelined;\n-    private volatile Instant timeQueued;\n+    private final Instant timeQueued;", "originalCommit": "3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5MzEzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15244#discussion_r489593133", "bodyText": "should decrease inside failFastRntbdRequestRecord.whenComplete?", "author": "xinlian12", "createdAt": "2020-09-16T17:09:35Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdServiceEndpoint.java", "diffHunk": "@@ -185,7 +187,21 @@ public RntbdRequestRecord request(final RntbdRequestArgs args) {\n \n         this.throwIfClosed();\n \n-        this.concurrentRequests.incrementAndGet();\n+        int concurrentRequestSnapshot = this.concurrentRequests.incrementAndGet();\n+\n+        if (concurrentRequestSnapshot > this.maxConcurrentRequests) {\n+            try {\n+                return FailFastRntbdRequestRecord.createAndFailFast(\n+                    args,\n+                    concurrentRequestSnapshot,\n+                    metrics,\n+                    remoteAddress);\n+            }\n+            finally {\n+                concurrentRequests.decrementAndGet();", "originalCommit": "3f521cfcd75e1dbf7c5d8bc10d38084e594d655e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}