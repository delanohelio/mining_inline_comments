{"pr_number": 18347, "pr_title": "Add wiki to tell how to run AAD integration test in localhost.", "pr_createdAt": "2020-12-24T06:27:42Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18347", "timeline": [{"oid": "1cd592fe8ebcdf3446530f0badef2a3e2e4a8116", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1cd592fe8ebcdf3446530f0badef2a3e2e4a8116", "message": "Add wiki to tell how to run AAD integration test in localhost.", "committedDate": "2020-12-24T06:27:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ1OTU3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18347#discussion_r548459577", "bodyText": "Can we make this optional? Community contributors will be scared to make contributions, seeing these 111 groups \ud83e\udd23 .", "author": "saragluna", "createdAt": "2020-12-24T09:11:31Z", "path": "sdk/spring/azure-spring-boot-test-aad/HOW_TO_RUN_AAD_INTEGRATION_TEST_IN_LOCALHOST.md", "diffHunk": "@@ -0,0 +1,116 @@\n+# How to run AAD integration test in localhost\n+\n+## Create environment variables\n+\n+Here is the list of all required environment variables:\n+```\n+AAD_TENANT_ID_1\n+AAD_USER_NAME_1\n+AAD_USER_PASSWORD_1\n+AAD_TENANT_ID_2\n+AAD_USER_NAME_2\n+AAD_USER_PASSWORD_2\n+AAD_MULTI_TENANT_CLIENT_ID\n+AAD_MULTI_TENANT_CLIENT_SECRET\n+AAD_SINGLE_TENANT_CLIENT_ID\n+AAD_SINGLE_TENANT_CLIENT_SECRET\n+AAD_SINGLE_TENANT_CLIENT_ID_WITH_ROLE\n+AAD_SINGLE_TENANT_CLIENT_SECRET_WITH_ROLE\n+```\n+\n+Let's go through this document to get all these variables.\n+\n+### `AAD_TENANT_ID_1`\n+\n+The first tenant-id we need for AAD test.\n+\n+1. Create a new tenant named `aadIntegrationTest1`. Refs: [Create a new tenant in Azure Active Directory][Create a new tenant in Azure Active Directory].\n+\n+2. After the tenant created successfully. Click `Tenant creation was successful. Click here to navigate to your new tanent: aadIntegrationTest1`.\n+![created-a-new-tenant](images/created-a-new-tenant.png)\n+\n+3. Copy `Tenant ID`. Then we get the value of `AAD_TENANT_ID_1`.\n+![copy-tenant-id](images/copy-tenant-id.png)\n+\n+### `AAD_USER_NAME_1`, `AAD_USER_PASSWORD_1`\n+\n+1. Create a new user named `user1`. Refs: [Add or delete users using Azure Active Directory][Add or delete users using Azure Active Directory].\n+\n+2. Copy the user name and initial password. In the following image, user name = `user1@aadIntegrationTest1.onmicrosoft.com`, initial password = `Xabo2448`.\n+![create-user1](images/create-user1.png)\n+\n+3. In Edge, open an InPrivate window to change password for new created user.\n+![open-inPrivate-window](images/open-inPrivate-window.png)\n+![change-password](images/change-password.png)\n+\n+4. Now we get the value of `AAD_USER_NAME_1`, `AAD_USER_PASSWORD_1`.\n+\n+### `AAD_TENANT_ID_2`, `AAD_USER_NAME_2`, `AAD_USER_PASSWORD_2` \n+Get `AAD_TENANT_ID_2`, `AAD_USER_NAME_2`, `AAD_USER_PASSWORD_2` with the same method.\n+\n+### `AAD_MULTI_TENANT_CLIENT_ID`, `AAD_MULTI_TENANT_CLIENT_SECRET`.\n+\n+1. Register an application. Refs: [Register an application with the Microsoft identity platform][Register an application with the Microsoft identity platform]\n+![create-aad-multitenant-client](images/create-aad-multitenant-client.png)\n+\n+2. Create secret for `aad-multitenant-client`. Refs: [Create a new application secret][Create a new application secret]\n+\n+3. Allow implicit flow\n+![allow-implicit-flow](images/allow-implicit-flow.png)\n+\n+4. Add API permissions. Grant admin consent.\n+![add-api-permission](images/add-api-permission.png)\n+ \n+5. Now we get value of `AAD_MULTI_TENANT_CLIENT_ID`, `AAD_MULTI_TENANT_CLIENT_SECRET`.\n+\n+### `AAD_SINGLE_TENANT_CLIENT_ID`, `AAD_SINGLE_TENANT_CLIENT_SECRET`\n+Get `AAD_SINGLE_TENANT_CLIENT_ID`, `AAD_SINGLE_TENANT_CLIENT_SECRET` with the same method.\n+\n+### `AAD_SINGLE_TENANT_CLIENT_ID_WITH_ROLE`, `AAD_SINGLE_TENANT_CLIENT_SECRET_WITH_ROLE`\n+Get `AAD_SINGLE_TENANT_CLIENT_ID_WITH_ROLE`, `AAD_SINGLE_TENANT_CLIENT_SECRET_WITH_ROLE` with the same method.\n+\n+More steps needed for this client is to set App roles.\n+1. Create roles\n+![role-user](images/role-user.png)\n+\n+2. Assign roles by clicking: \"Azure Active Directory\" -> \"Enterprise Application\" -> choose your application -> \"Users and groups\" -> assign the new roles to user1. (assignment of roles to groups is not available in the free tier of AAD).\n+\n+### Create groups\n+1. Create 2 groups: group1 and group2. Add user1 in group1, and user2 in group2.\n+Refs: [Create a basic group and add members using Azure Active Directory][Create a basic group and add members using Azure Active Directory]\n+\n+2. For user1, we need to create 111 groups: from group1 to group111. It's used in AADGroupsCountIT.", "originalCommit": "1cd592fe8ebcdf3446530f0badef2a3e2e4a8116", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc2ODc3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18347#discussion_r548768771", "bodyText": "\ud83e\udd23\n\nAfter make this optional, mvn command will fail with test failure.\nIn my understanding, no community contributors will run the test. Only member in our team will run it manually.\n\nOriginally, I plan to write script to create the 111 groups, but abandoned. Reasons:\n\nWrite script will cost more time than do it manually.\nIt's not a bad thing to let us be familiar with Azure Portal.", "author": "chenrujun", "createdAt": "2020-12-25T00:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ1OTU3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc2OTM4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18347#discussion_r548769382", "bodyText": "OK, I'll add Optional", "author": "chenrujun", "createdAt": "2020-12-25T00:45:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ1OTU3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ1OTk1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18347#discussion_r548459950", "bodyText": "And this multi-tenant application will be created in which tenant?", "author": "saragluna", "createdAt": "2020-12-24T09:12:42Z", "path": "sdk/spring/azure-spring-boot-test-aad/HOW_TO_RUN_AAD_INTEGRATION_TEST_IN_LOCALHOST.md", "diffHunk": "@@ -0,0 +1,116 @@\n+# How to run AAD integration test in localhost\n+\n+## Create environment variables\n+\n+Here is the list of all required environment variables:\n+```\n+AAD_TENANT_ID_1\n+AAD_USER_NAME_1\n+AAD_USER_PASSWORD_1\n+AAD_TENANT_ID_2\n+AAD_USER_NAME_2\n+AAD_USER_PASSWORD_2\n+AAD_MULTI_TENANT_CLIENT_ID\n+AAD_MULTI_TENANT_CLIENT_SECRET\n+AAD_SINGLE_TENANT_CLIENT_ID\n+AAD_SINGLE_TENANT_CLIENT_SECRET\n+AAD_SINGLE_TENANT_CLIENT_ID_WITH_ROLE\n+AAD_SINGLE_TENANT_CLIENT_SECRET_WITH_ROLE\n+```\n+\n+Let's go through this document to get all these variables.\n+\n+### `AAD_TENANT_ID_1`\n+\n+The first tenant-id we need for AAD test.\n+\n+1. Create a new tenant named `aadIntegrationTest1`. Refs: [Create a new tenant in Azure Active Directory][Create a new tenant in Azure Active Directory].\n+\n+2. After the tenant created successfully. Click `Tenant creation was successful. Click here to navigate to your new tanent: aadIntegrationTest1`.\n+![created-a-new-tenant](images/created-a-new-tenant.png)\n+\n+3. Copy `Tenant ID`. Then we get the value of `AAD_TENANT_ID_1`.\n+![copy-tenant-id](images/copy-tenant-id.png)\n+\n+### `AAD_USER_NAME_1`, `AAD_USER_PASSWORD_1`\n+\n+1. Create a new user named `user1`. Refs: [Add or delete users using Azure Active Directory][Add or delete users using Azure Active Directory].\n+\n+2. Copy the user name and initial password. In the following image, user name = `user1@aadIntegrationTest1.onmicrosoft.com`, initial password = `Xabo2448`.\n+![create-user1](images/create-user1.png)\n+\n+3. In Edge, open an InPrivate window to change password for new created user.\n+![open-inPrivate-window](images/open-inPrivate-window.png)\n+![change-password](images/change-password.png)\n+\n+4. Now we get the value of `AAD_USER_NAME_1`, `AAD_USER_PASSWORD_1`.\n+\n+### `AAD_TENANT_ID_2`, `AAD_USER_NAME_2`, `AAD_USER_PASSWORD_2` \n+Get `AAD_TENANT_ID_2`, `AAD_USER_NAME_2`, `AAD_USER_PASSWORD_2` with the same method.\n+\n+### `AAD_MULTI_TENANT_CLIENT_ID`, `AAD_MULTI_TENANT_CLIENT_SECRET`.", "originalCommit": "1cd592fe8ebcdf3446530f0badef2a3e2e4a8116", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3MDA5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18347#discussion_r548770094", "bodyText": "Updated to\nRegister an application in the new created tenant (`aadIntegrationTest1`).", "author": "chenrujun", "createdAt": "2020-12-25T00:52:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ1OTk1MA=="}], "type": "inlineReview"}, {"oid": "4d1dbc8e00f5e61d9ef9167e07dc8d6942dd5076", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4d1dbc8e00f5e61d9ef9167e07dc8d6942dd5076", "message": "Update according to xiaolu's feedback.", "committedDate": "2020-12-25T00:48:43Z", "type": "commit"}, {"oid": "9f6e37e8c59e50626b6f7bcb98726c670cabe972", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f6e37e8c59e50626b6f7bcb98726c670cabe972", "message": "Update link usage.", "committedDate": "2020-12-25T00:50:54Z", "type": "commit"}]}