{"pr_number": 10106, "pr_title": "Change Key Vault Secret Readme", "pr_createdAt": "2020-04-13T02:26:16Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10106", "timeline": [{"oid": "33661f63957912759ed2d0dff334f99cd1401c18", "url": "https://github.com/Azure/azure-sdk-for-java/commit/33661f63957912759ed2d0dff334f99cd1401c18", "message": "add env authorityhost test", "committedDate": "2020-04-03T04:09:28Z", "type": "commit"}, {"oid": "7c793ebdba1ada902be8196f766d8966606fa275", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c793ebdba1ada902be8196f766d8966606fa275", "message": "add env authorityhost test", "committedDate": "2020-04-03T04:11:21Z", "type": "commit"}, {"oid": "8fa612eecc176124569cd19dfcc5c48c823d460e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8fa612eecc176124569cd19dfcc5c48c823d460e", "message": "add env authorityhost test", "committedDate": "2020-04-03T07:33:34Z", "type": "commit"}, {"oid": "806245f5aa922f0f2aa4a59d99cc326fb73ce0b6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/806245f5aa922f0f2aa4a59d99cc326fb73ce0b6", "message": "add env authorityhost test", "committedDate": "2020-04-03T07:36:32Z", "type": "commit"}, {"oid": "2c293e3d811934a226529ccf761d3268ae26b217", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2c293e3d811934a226529ccf761d3268ae26b217", "message": "add env authorityhost test", "committedDate": "2020-04-03T08:45:30Z", "type": "commit"}, {"oid": "ec2f616005ede51dba52d56d339e99ad850d1934", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec2f616005ede51dba52d56d339e99ad850d1934", "message": "add env authorityhost test", "committedDate": "2020-04-03T08:54:56Z", "type": "commit"}, {"oid": "6d3b6bea1f43a0520fd84748efae410b2b36ebd2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6d3b6bea1f43a0520fd84748efae410b2b36ebd2", "message": "add env authorityhost test", "committedDate": "2020-04-03T09:17:18Z", "type": "commit"}, {"oid": "c1ff05edd8fa0d5ea603aac67e518e085db7acc0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c1ff05edd8fa0d5ea603aac67e518e085db7acc0", "message": "add env authorityhost test", "committedDate": "2020-04-03T09:41:41Z", "type": "commit"}, {"oid": "dc3636de48159ac99a839b46588481a4e27a13ca", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc3636de48159ac99a839b46588481a4e27a13ca", "message": "change readme by issue", "committedDate": "2020-04-13T02:10:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjQ0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r407546442", "bodyText": "Oxford comma", "author": "jongio", "createdAt": "2020-04-13T15:43:25Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -1,16 +1,16 @@\n # Azure Key Vault Secret client library for Java\n Azure Key Vault is a cloud service that provides a secure storage of secrets, such as passwords and database connection strings.\n \n-Secret client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore and list the secrets and its versions.\n+Azure Key Vault Secrets client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore and list the secrets and its versions.", "originalCommit": "dc3636de48159ac99a839b46588481a4e27a13ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NjUyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r407546524", "bodyText": "Oxford comma", "author": "jongio", "createdAt": "2020-04-13T15:43:34Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -60,15 +60,15 @@ Here is [Azure Cloud Shell](https://shell.azure.com/bash) snippet below to\n     }\n     ```\n \n-* Use the above returned credentials information to set **AZURE_CLIENT_ID**(appId), **AZURE_CLIENT_SECRET**(password) and **AZURE_TENANT_ID**(tenant) environment variables. The following example shows a way to do this in Bash:\n+* Use the above returned credentials information to set **AZURE_CLIENT_ID** (appId), **AZURE_CLIENT_SECRET** (password) and **AZURE_TENANT_ID** (tenantId) environment variables. The following example shows a way to do this in Bash:", "originalCommit": "dc3636de48159ac99a839b46588481a4e27a13ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d37894b9652d7a6f38497f1d39083dcf9f0c720", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5d37894b9652d7a6f38497f1d39083dcf9f0c720", "message": "add ,", "committedDate": "2020-04-14T02:14:30Z", "type": "commit"}, {"oid": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/85b014acfaf4f3ce576c92d137d1798f289ee17d", "message": "remove Id", "committedDate": "2020-04-14T03:06:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMDA4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r426910082", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Azure Key Vault is a cloud service that provides a secure storage of secrets, such as passwords and database connection strings.\n          \n          \n            \n            Azure Key Vault is a cloud service that provides secure storage for secrets, such as passwords and database connection strings.", "author": "vcolin7", "createdAt": "2020-05-18T21:45:18Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -1,16 +1,16 @@\n # Azure Key Vault Secret client library for Java\n Azure Key Vault is a cloud service that provides a secure storage of secrets, such as passwords and database connection strings.", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMDM2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r426910363", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Azure Key Vault Secrets client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore, and list the secrets and its versions.\n          \n          \n            \n            The Azure Key Vault Secrets client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore, and list the secrets and its versions.", "author": "vcolin7", "createdAt": "2020-05-18T21:45:56Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -1,16 +1,16 @@\n # Azure Key Vault Secret client library for Java\n Azure Key Vault is a cloud service that provides a secure storage of secrets, such as passwords and database connection strings.\n \n-Secret client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore and list the secrets and its versions.\n+Azure Key Vault Secrets client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore, and list the secrets and its versions.", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMDUxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r426910512", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Maven dependency for Azure Key Vault Secrets Client library. Add it to your project's pom file.\n          \n          \n            \n            Maven dependency for the Azure Key Vault Secrets client library. Add it to your project's POM file.", "author": "vcolin7", "createdAt": "2020-05-18T21:46:19Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -1,16 +1,16 @@\n # Azure Key Vault Secret client library for Java\n Azure Key Vault is a cloud service that provides a secure storage of secrets, such as passwords and database connection strings.\n \n-Secret client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore and list the secrets and its versions.\n+Azure Key Vault Secrets client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore, and list the secrets and its versions.\n \n-Use the secret client library to create and manage secrets.\n+Use the Azure Key Vault Secrets client library to create and manage secrets.\n \n [Source code][source_code] | [API reference documentation][api_documentation] | [Product documentation][azkeyvault_docs] | [Samples][secrets_samples]\n \n ## Getting started\n ### Adding the package to your project\n \n-Maven dependency for Azure Secret Client library. Add it to your project's pom file.\n+Maven dependency for Azure Key Vault Secrets Client library. Add it to your project's pom file.", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMjk2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r426912962", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Grant the above mentioned application authorization to perform secret operations on the Azure Key Vault:\n          \n          \n            \n            * Grant the aforementioned application authorization to perform secret operations on the Key Vault:", "author": "vcolin7", "createdAt": "2020-05-18T21:52:07Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -60,15 +60,15 @@ Here is [Azure Cloud Shell](https://shell.azure.com/bash) snippet below to\n     }\n     ```\n \n-* Use the above returned credentials information to set **AZURE_CLIENT_ID**(appId), **AZURE_CLIENT_SECRET**(password) and **AZURE_TENANT_ID**(tenant) environment variables. The following example shows a way to do this in Bash:\n+* Use the above returned credentials information to set **AZURE_CLIENT_ID** (appId), **AZURE_CLIENT_SECRET** (password), and **AZURE_TENANT_ID** (tenant) environment variables. The following example shows a way to do this in Bash:\n \n   ```Bash\n     export AZURE_CLIENT_ID=\"generated-app-ID\"\n     export AZURE_CLIENT_SECRET=\"random-password\"\n     export AZURE_TENANT_ID=\"tenant-ID\"\n   ```\n \n-* Grant the above mentioned application authorization to perform secret operations on the keyvault:\n+* Grant the above mentioned application authorization to perform secret operations on the Azure Key Vault:", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxODc3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r426918772", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - `setSecret` creates a new secret in the Azure Key Vault. if the secret with name already exists then a new version of the secret is created.\n          \n          \n            \n            - `setSecret` creates a new secret in the Azure Key Vault. If the secret with name already exists then a new version of the secret is created.", "author": "vcolin7", "createdAt": "2020-05-18T22:07:35Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -122,13 +122,14 @@ The following sections provide several code snippets covering some of the most c\n \n ### Create a Secret\n \n-Create a Secret to be stored in the Azure Key Vault.\n-- `setSecret` creates a new secret in the key vault. if the secret with name already exists then a new version of the secret is created.\n+Create a secret to be stored in the Azure Key Vault.\n+- `setSecret` creates a new secret in the Azure Key Vault. if the secret with name already exists then a new version of the secret is created.", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxNzU3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427017571", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .vaultUrl(<your-vault-url>)\n          \n          \n            \n                    .vaultUrl(<your-key-vault-url>)", "author": "vcolin7", "createdAt": "2020-05-19T04:04:13Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -122,13 +122,14 @@ The following sections provide several code snippets covering some of the most c\n \n ### Create a Secret\n \n-Create a Secret to be stored in the Azure Key Vault.\n-- `setSecret` creates a new secret in the key vault. if the secret with name already exists then a new version of the secret is created.\n+Create a secret to be stored in the Azure Key Vault.\n+- `setSecret` creates a new secret in the Azure Key Vault. if the secret with name already exists then a new version of the secret is created.\n \n ```Java\n import com.azure.identity.DefaultAzureCredentialBuilder;\n import com.azure.security.keyvault.secrets.SecretClient;\n import com.azure.security.keyvault.secrets.models.Secret;\n+import com.azure.security.keyvault.secrets.models.KeyVaultSecret;\n \n SecretClient secretClient = new SecretClientBuilder()\n         .vaultUrl(<your-vault-url>)", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxODU4NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427018584", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Deleted Secret is accessible as soon as polling begins\n          \n          \n            \n            // Deleted secret is accessible as soon as polling begins", "author": "vcolin7", "createdAt": "2020-05-19T04:08:26Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -163,14 +164,15 @@ System.out.printf(\"Secret's updated expiry time %s \\n\", updatedSecretProperties.\n \n ### Delete a Secret\n \n-Delete an existing Secret by calling `beginDeleteSecret`.\n+Delete an existing secret by calling `beginDeleteSecret`.\n \n ```Java\n SyncPoller<DeletedSecret, Void> deletedSecretPoller = secretClient.beginDeleteSecret(\"secretName\");\n \n // Deleted Secret is accessible as soon as polling begins", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NDg2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427074864", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // The List Secrets operation returns secrets without their value, so for each secret returned we call `getSecret` to get its // value as well.\n          \n          \n            \n            // The List Secrets operation returns secrets without their value, so for each secret returned we call `getSecret`\n          \n          \n            \n            // to get its value as well.", "author": "vcolin7", "createdAt": "2020-05-19T07:05:57Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -255,7 +257,7 @@ secretAsyncClient.beginDeleteSecret(\"secretName\")\n \n ### List Secrets Asynchronously\n \n-List the secrets in the key vault by calling `listPropertiesOfSecrets`.\n+List the secrets in the Azure Key Vault by calling `listPropertiesOfSecrets`.\n \n ```Java\n // The List Secrets operation returns secrets without their value, so for each secret returned we call `getSecret` to get its // value as well.", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NDkzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427074932", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:06:07Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -255,7 +257,7 @@ secretAsyncClient.beginDeleteSecret(\"secretName\")\n \n ### List Secrets Asynchronously\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTAwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075004", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:06:16Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -242,7 +244,7 @@ secretAsyncClient.getSecret(\"secretName\").subscribe(secret -> {\n \n ### Delete a Secret Asynchronously\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTAyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075027", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:06:21Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -229,7 +231,7 @@ secretAsyncClient.getSecret(\"secretName\").subscribe(secret ->\n \n ### Update an existing Secret Asynchronously\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTA4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075083", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:06:28Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -219,7 +221,7 @@ secretAsyncClient.setSecret(\"secret_name\", \"secret_value\").subscribe(secret ->\n \n ### Retrieve a Secret Asynchronously\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTEyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075126", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:06:34Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -201,8 +203,8 @@ The following sections provide several code snippets covering some of the most c\n \n ### Create a Secret Asynchronously\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTIyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075228", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:06:49Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -179,7 +181,7 @@ deletedSecretPoller.waitForCompletion();\n \n ### List Secrets\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTQwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075406", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:07:11Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -163,14 +164,15 @@ System.out.printf(\"Secret's updated expiry time %s \\n\", updatedSecretProperties.\n \n ### Delete a Secret\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTQzNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075437", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:07:16Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -150,7 +151,7 @@ System.out.printf(\"Secret is returned with name %s and value %s \\n\", secret.getN\n \n ### Update an existing Secret\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTQ3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075470", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:07:20Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -141,7 +142,7 @@ System.out.printf(\"Secret is created with name %s and value %s \\n\", secret.getNa\n \n ### Retrieve a Secret\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTUyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075522", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:07:27Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -122,13 +122,14 @@ The following sections provide several code snippets covering some of the most c\n \n ### Create a Secret\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NTYzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427075636", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:07:41Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -1,16 +1,16 @@\n # Azure Key Vault Secret client library for Java\n Azure Key Vault is a cloud service that provides a secure storage of secrets, such as passwords and database connection strings.\n \n-Secret client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore and list the secrets and its versions.\n+Azure Key Vault Secrets client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore, and list the secrets and its versions.\n \n-Use the secret client library to create and manage secrets.\n+Use the Azure Key Vault Secrets client library to create and manage secrets.\n \n [Source code][source_code] | [API reference documentation][api_documentation] | [Product documentation][azkeyvault_docs] | [Samples][secrets_samples]\n \n ## Getting started\n ### Adding the package to your project\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3NjM0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r427076346", "bodyText": "Suggested change", "author": "vcolin7", "createdAt": "2020-05-19T07:09:17Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -1,16 +1,16 @@\n # Azure Key Vault Secret client library for Java\n Azure Key Vault is a cloud service that provides a secure storage of secrets, such as passwords and database connection strings.\n \n-Secret client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore and list the secrets and its versions.\n+Azure Key Vault Secrets client library allows you to securely store and tightly control the access to tokens, passwords, API keys, and other secrets. This library offers operations to create, retrieve, update, delete, purge, backup, restore, and list the secrets and its versions.\n \n-Use the secret client library to create and manage secrets.\n+Use the Azure Key Vault Secrets client library to create and manage secrets.\n \n [Source code][source_code] | [API reference documentation][api_documentation] | [Product documentation][azkeyvault_docs] | [Samples][secrets_samples]\n \n ## Getting started\n ### Adding the package to your project\n ", "originalCommit": "85b014acfaf4f3ce576c92d137d1798f289ee17d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6629a22dfb398f37701a4361acff53d3ecbc690b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6629a22dfb398f37701a4361acff53d3ecbc690b", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:19:31Z", "type": "commit"}, {"oid": "b2a391ccb62aea73b439e3e6a11d2ebe5df79671", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b2a391ccb62aea73b439e3e6a11d2ebe5df79671", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:19:41Z", "type": "commit"}, {"oid": "cedd8566e9903808ed0348735fcbe078eba8b48e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cedd8566e9903808ed0348735fcbe078eba8b48e", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:19:50Z", "type": "commit"}, {"oid": "ccd7a2adb30856f320960305569d99d24db0d951", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ccd7a2adb30856f320960305569d99d24db0d951", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:20:01Z", "type": "commit"}, {"oid": "60d118fa00fbb1fd75b68e634efe1caf8c5ebf79", "url": "https://github.com/Azure/azure-sdk-for-java/commit/60d118fa00fbb1fd75b68e634efe1caf8c5ebf79", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:20:10Z", "type": "commit"}, {"oid": "fb217fe71b025ddc605fb07fd42755b4fb30ae56", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fb217fe71b025ddc605fb07fd42755b4fb30ae56", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:20:22Z", "type": "commit"}, {"oid": "173b0d1e5d95c8422374fd2f1dec49f801d7f218", "url": "https://github.com/Azure/azure-sdk-for-java/commit/173b0d1e5d95c8422374fd2f1dec49f801d7f218", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:20:36Z", "type": "commit"}, {"oid": "9e83346cae4414cafc276abb8add95daa4415178", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e83346cae4414cafc276abb8add95daa4415178", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:20:47Z", "type": "commit"}, {"oid": "d43aa2e82a31c4fe55ef4834be4a87d02bc2f346", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d43aa2e82a31c4fe55ef4834be4a87d02bc2f346", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:21:13Z", "type": "commit"}, {"oid": "ec47765a2b6c1f5cf4c06f59aeb23167431939ac", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec47765a2b6c1f5cf4c06f59aeb23167431939ac", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:21:24Z", "type": "commit"}, {"oid": "26e6293216c9f0932f0fb45c0564258d902a0b80", "url": "https://github.com/Azure/azure-sdk-for-java/commit/26e6293216c9f0932f0fb45c0564258d902a0b80", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:21:34Z", "type": "commit"}, {"oid": "d4fc90515d739425ad35866fe4527e8ab50574d6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d4fc90515d739425ad35866fe4527e8ab50574d6", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:21:45Z", "type": "commit"}, {"oid": "1e475b716bb47fa741d2ea33eb24e9869dc5d134", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1e475b716bb47fa741d2ea33eb24e9869dc5d134", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:21:55Z", "type": "commit"}, {"oid": "6252de5f3ebb512313bbb343384fdae3f79a16a8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6252de5f3ebb512313bbb343384fdae3f79a16a8", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:22:05Z", "type": "commit"}, {"oid": "f5bf1bddf0ff9cc7e867e3b75ba008a1e9cf347a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f5bf1bddf0ff9cc7e867e3b75ba008a1e9cf347a", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:22:15Z", "type": "commit"}, {"oid": "83ecab358e656af062cdc787295f9d96e603d479", "url": "https://github.com/Azure/azure-sdk-for-java/commit/83ecab358e656af062cdc787295f9d96e603d479", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:22:24Z", "type": "commit"}, {"oid": "c8f8e1b61d750953ceab94202fd8baae0df97f7d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c8f8e1b61d750953ceab94202fd8baae0df97f7d", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:22:31Z", "type": "commit"}, {"oid": "58ea6dc7e39fe33b1f024f3b99cc3d4b338f8d23", "url": "https://github.com/Azure/azure-sdk-for-java/commit/58ea6dc7e39fe33b1f024f3b99cc3d4b338f8d23", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:22:40Z", "type": "commit"}, {"oid": "9b0935ba3e8895fa769c2709d56810e4ba5fb21d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9b0935ba3e8895fa769c2709d56810e4ba5fb21d", "message": "Update sdk/keyvault/azure-security-keyvault-secrets/README.md", "committedDate": "2020-05-19T07:22:49Z", "type": "commit"}, {"oid": "b73d78cdef80ba0ae7f08a981547b116e4252088", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b73d78cdef80ba0ae7f08a981547b116e4252088", "message": "Made additional changes to the README to be consistent with the others (Keys, Certificates).", "committedDate": "2020-05-31T08:25:15Z", "type": "commit"}, {"oid": "d9f71616017efac1108fcbe4b2beb161838a763e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d9f71616017efac1108fcbe4b2beb161838a763e", "message": "Changed code snippet to reflect a comment added on the README.", "committedDate": "2020-05-31T08:27:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDcxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10106#discussion_r436220714", "bodyText": "Key Vault two words", "author": "jongio", "createdAt": "2020-06-06T00:49:09Z", "path": "sdk/keyvault/azure-security-keyvault-secrets/README.md", "diffHunk": "@@ -77,235 +76,231 @@ Here is [Azure Cloud Shell](https://shell.azure.com/bash) snippet below to\n     > --secret-permissions:\n     > Accepted values: backup, delete, get, list, purge, recover, restore, set\n \n-* Use the above mentioned Key Vault name to retreive details of your Vault which also contains your Key Vault URL:\n+* Use the aforementioned Key Vault name to retrieve details of your Vault, which also contain your Key Vault URL:\n \n     ```Bash\n     az keyvault show --name <your-key-vault-name> \n     ```\n \n-#### Create Secret client\n-Once you've populated the **AZURE_CLIENT_ID**, **AZURE_CLIENT_SECRET** and **AZURE_TENANT_ID** environment variables and replaced **your-vault-url** with the above returned URI, you can create the SecretClient:\n+#### Create secret client\n+Once you've populated the **AZURE_CLIENT_ID**, **AZURE_CLIENT_SECRET**, and **AZURE_TENANT_ID** environment variables and replaced **your-key-vault-url** with the URI returned above, you can create the SecretClient:\n \n ```Java\n import com.azure.identity.DefaultAzureCredentialBuilder;\n import com.azure.security.keyvault.secrets.SecretClient;\n+import com.azure.security.keyvault.secrets.SecretClientBuilder;\n \n-SecretClient client = new SecretClientBuilder()\n-        .vaultUrl(<your-vault-url>)\n-        .credential(new DefaultAzureCredentialBuilder().build())\n-        .buildClient();\n+SecretClient secretClient = new SecretClientBuilder()\n+    .vaultUrl(\"<your-key-vault-url>\")\n+    .credential(new DefaultAzureCredentialBuilder().build())\n+    .buildClient();\n ```\n \n-> NOTE: For using Asynchronous client use SecretAsyncClient instead of SecretClient and call buildAsyncClient()\n-\n+> NOTE: For using an asynchronous client use SecretAsyncClient instead of SecretClient and call `buildAsyncClient()`\n \n ## Key concepts\n ### Secret\n-  A secret is the fundamental resource within Azure KeyVault. From a developer's perspective, Key Vault APIs accept and return secret values as strings. In addition to the secret data, the following attributes may be specified:\n-* expires: Identifies the expiration time on or after which the secret data should not be retrieved.\n-* notBefore: Identifies the time after which the secret will be active.\n+A secret is the fundamental resource within Azure Key Vault. From a developer's perspective, Key Vault APIs accept and return secret values as strings. In addition to the secret data, the following attributes may be specified:\n * enabled: Specifies whether the secret data can be retrieved.\n+* notBefore: Identifies the time after which the secret will be active.\n+* expires: Identifies the expiration time on or after which the secret data should not be retrieved.\n * created: Indicates when this version of the secret was created.\n * updated: Indicates when this version of the secret was updated.\n \n-### Secret Client:\n-The Secret client performs the interactions with the Azure Key Vault service for getting, setting, updating, deleting, and listing secrets and its versions. An asynchronous and synchronous, SecretClient, client exists in the SDK allowing for selection of a client based on an application's use case. Once you've initialized a SecretClient, you can interact with the primary resource types in Key Vault.\n+### Secret client:\n+The secret client performs the interactions with the Azure Key Vault service for getting, setting, updating, deleting, and listing secrets and its versions. Asynchronous (SecretAsyncClient) and synchronous (SecretClient) clients exist in the SDK allowing for selection of a client based on an application's use case. Once you've initialized a secret, you can interact with the primary resource types in Key Vault.\n \n ## Examples\n ### Sync API\n-The following sections provide several code snippets covering some of the most common Azure Key Vault Secret Service tasks, including:\n-- [Create a Secret](#create-a-secret)\n-- [Retrieve a Secret](#retrieve-a-secret)\n-- [Update an existing Secret](#update-an-existing-secret)\n-- [Delete a Secret](#delete-a-secret)\n-- [List Secrets](#list-secrets)\n+The following sections provide several code snippets covering some of the most common Azure Key Vault Secret service tasks, including:\n+- [Create a secret](#create-a-secret)\n+- [Retrieve a secret](#retrieve-a-secret)\n+- [Update an existing secret](#update-an-existing-secret)\n+- [Delete a secret](#delete-a-secret)\n+- [List secrets](#list-secrets)\n \n-### Create a Secret\n-\n-Create a Secret to be stored in the Azure Key Vault.\n-- `setSecret` creates a new secret in the key vault. if the secret with name already exists then a new version of the secret is created.\n+### Create a secret\n+Create a secret to be stored in the Azure Key Vault.\n+- `setSecret` creates a new secret in the Azure Key Vault. If the secret with name already exists then a new version of the secret is created.\n \n ```Java\n import com.azure.identity.DefaultAzureCredentialBuilder;\n import com.azure.security.keyvault.secrets.SecretClient;\n-import com.azure.security.keyvault.secrets.models.Secret;\n+import com.azure.security.keyvault.secrets.SecretClientBuilder;\n+import com.azure.security.keyvault.secrets.models.KeyVaultSecret;\n \n SecretClient secretClient = new SecretClientBuilder()\n-        .vaultUrl(<your-vault-url>)\n-        .credential(new DefaultAzureCredentialBuilder().build())\n-        .buildClient();\n+    .vaultUrl(\"<your-key-vault-url>\")\n+    .credential(new DefaultAzureCredentialBuilder().build())\n+    .buildClient();\n \n-KeyVaultSecret secret = secretClient.setSecret(\"secret_name\", \"secret_value\");\n-System.out.printf(\"Secret is created with name %s and value %s \\n\", secret.getName(), secret.getValue());\n+KeyVaultSecret secret = secretClient.setSecret(\"<secret-name>\", \"<secret-value>\");\n+System.out.printf(\"Secret created with name \\\"%s\\\" and value \\\"%s\\\"\\n\", secret.getName(), secret.getValue());\n ```\n \n-### Retrieve a Secret\n-\n-Retrieve a previously stored Secret by calling `getSecret`.\n+### Retrieve a secret\n+Retrieve a previously stored secret by calling `getSecret`.\n \n ```Java\n-KeyVaultSecret secret = secretClient.getSecret(\"secret_name\");\n-System.out.printf(\"Secret is returned with name %s and value %s \\n\", secret.getName(), secret.getValue());\n+KeyVaultSecret secret = secretClient.getSecret(\"<secret-name>\");\n+System.out.printf(\"Retrieved secret with name \\\"%s\\\" and value \\\"%s\\\"\\n\", secret.getName(), secret.getValue());\n ```\n \n-### Update an existing Secret\n-\n-Update an existing Secret by calling `updateSecretProperties`.\n+### Update an existing secret\n+Update an existing secret by calling `updateSecretProperties`.\n \n ```Java\n // Get the secret to update.\n-KeyVaultSecret secret = secretClient.getSecret(\"secret_name\");\n+KeyVaultSecret secret = secretClient.getSecret(\"<secret-name>\");\n // Update the expiry time of the secret.\n secret.getProperties().setExpiresOn(OffsetDateTime.now().plusDays(30));\n SecretProperties updatedSecretProperties = secretClient.updateSecretProperties(secret.getProperties());\n-System.out.printf(\"Secret's updated expiry time %s \\n\", updatedSecretProperties.getExpiresOn().toString());\n+System.out.printf(\"Secret's updated expiry time: %s\\n\", updatedSecretProperties.getExpiresOn().toString());\n ```\n \n-### Delete a Secret\n-\n-Delete an existing Secret by calling `beginDeleteSecret`.\n+### Delete a secret\n+Delete an existing secret by calling `beginDeleteSecret`.\n \n ```Java\n-SyncPoller<DeletedSecret, Void> deletedSecretPoller = secretClient.beginDeleteSecret(\"secretName\");\n+SyncPoller<DeletedSecret, Void> deletedSecretPoller = secretClient.beginDeleteSecret(\"<secret-name>\");\n \n-// Deleted Secret is accessible as soon as polling begins\n+// Deleted secret is accessible as soon as polling begins.\n PollResponse<DeletedSecret> deletedSecretPollResponse = deletedSecretPoller.poll();\n \n-System.out.println(\"Deleted Date  %s\" + deletedSecretPollResponse.getValue().getDeletedOn().toString());\n+// Deletion date only works for a SoftDelete-enabled Key Vault.\n+System.out.println(\"Deletion date: \\\"%s\\\"\" + deletedSecretPollResponse.getValue().getDeletedOn().toString());\n \n // Secret is being deleted on server.\n deletedSecretPoller.waitForCompletion();\n ```\n \n-### List Secrets\n-\n-List the secrets in the key vault by calling `listPropertiesOfSecrets`.\n+### List secrets\n+List the secrets in the Azure Key Vault by calling `listPropertiesOfSecrets`.\n \n ```Java\n // List operations don't return the secrets with value information. So, for each returned secret we call getSecret to get the secret with its value information.\n-for (SecretProperties secretProperties : client.listPropertiesOfSecrets()) {\n-    KeyVaultSecret secretWithValue  = client.getSecret(secretProperties.getName(), secretProperties.getVersion());\n-    System.out.printf(\"Received secret with name %s and value %s \\n\", secretWithValue.getName(), secretWithValue.getValue());\n+for (SecretProperties secretProperties : secretClient.listPropertiesOfSecrets()) {\n+    KeyVaultSecret secretWithValue  = secretClient.getSecret(secretProperties.getName(), secretProperties.getVersion());\n+    System.out.printf(\"Retreieved secret with name \\\"%s\\\" and value \\\"%s\\\"\\n\", secretWithValue.getName(),\n+        secretWithValue.getValue());\n }\n ```\n \n ### Async API\n The following sections provide several code snippets covering some of the most common asynchronous Azure Key Vault Secret Service tasks, including:\n-- [Create a Secret Asynchronously](#create-a-secret-asynchronously)\n-- [Retrieve a Secret Asynchronously](#retrieve-a-secret-asynchronously)\n-- [Update an existing Secret Asynchronously](#update-an-existing-secret-asynchronously)\n-- [Delete a Secret Asynchronously](#delete-a-secret-asynchronously)\n-- [List Secrets Asynchronously](#list-secrets-asynchronously)\n+- [Create a secret asynchronously](#create-a-secret-asynchronously)\n+- [Retrieve a secret asynchronously](#retrieve-a-secret-asynchronously)\n+- [Update an existing secret asynchronously](#update-an-existing-secret-asynchronously)\n+- [Delete a secret asynchronously](#delete-a-secret-asynchronously)\n+- [List secrets asynchronously](#list-secrets-asynchronously)\n \n-> Note : You should add \"System.in.read()\" or \"Thread.Sleep()\" after the function calls in the main class/thread to allow Async functions/operations to execute and finish before the main application/thread exits.\n+> Note : You should add `System.in.read()` or `Thread.sleep()` after the function calls in the main class/thread to allow async functions/operations to execute and finish before the main application/thread exits.\n \n-### Create a Secret Asynchronously\n+### Create a secret asynchronously\n+Create a secret to be stored in the Azure Key Vault.\n+- `setSecret` creates a new secret in the Azure Key Vault. if the secret with name already exists then a new version of the secret is created.\n \n-Create a Secret to be stored in the Azure Key Vault.\n-- `setSecret` creates a new secret in the key vault. if the secret with name already exists then a new version of the secret is created.\n ```Java\n import com.azure.identity.DefaultAzureCredentialBuilder;\n import com.azure.security.keyvault.secrets.SecretAsyncClient;\n import com.azure.security.keyvault.secrets.models.Secret;\n \n SecretAsyncClient secretAsyncClient = new SecretClientBuilder()\n-        .vaultUrl(<your-vault-url>)\n-        .credential(new DefaultAzureCredentialBuilder().build())\n-        .buildAsyncClient();\n+    .vaultUrl(\"<your-key-vault-url>\")\n+    .credential(new DefaultAzureCredentialBuilder().build())\n+    .buildAsyncClient();\n \n-secretAsyncClient.setSecret(\"secret_name\", \"secret_value\").subscribe(secret ->\n-  System.out.printf(\"Secret is created with name %s and value %s \\n\", secret.getName(), secret.getValue()));\n+secretAsyncClient.setSecret(\"<secret-name>\", \"<secret-value>\")\n+    .subscribe(secret ->\n+        System.out.printf(\"Created secret with name \\\"%s\\\" and value \\\"%s\\\"\\n\", secret.getName(), secret.getValue()));\n ```\n \n-### Retrieve a Secret Asynchronously\n-\n-Retrieve a previously stored Secret by calling `getSecret`.\n+### Retrieve a secret asynchronously\n+Retrieve a previously stored secret by calling `getSecret`.\n \n ```Java\n-secretAsyncClient.getSecret(\"secretName\").subscribe(secret ->\n-  System.out.printf(\"Secret with name %s , value %s \\n\", secret.getName(),\n-  secret.getValue()));\n+secretAsyncClient.getSecret(\"<secret-name>\")\n+    .subscribe(secret ->\n+        System.out.printf(\"Retrieved secret with name \\\"%s\\\" and value \\\"%s\\\"\\n\", secret.getName(), secret.getValue()));\n ```\n \n-### Update an existing Secret Asynchronously\n-\n-Update an existing Secret by calling `updateSecretProperties`.\n+### Update an existing secret asynchronously\n+Update an existing secret by calling `updateSecretProperties`.\n \n ```Java\n-secretAsyncClient.getSecret(\"secretName\").subscribe(secret -> {\n-     // Update the expiry time of the secret.\n-     secret.getProperties().setExpiresOn(OffsetDateTime.now().plusDays(50));\n-     secretAsyncClient.updateSecretProperties(secret.getProperties()).subscribe(updatedSecretProperties ->\n-         System.out.printf(\"Secret's updated expiry time %s \\n\", updatedSecretProperties.getExpiresOn().toString()));\n-   });\n+secretAsyncClient.getSecret(\"<secret-name>\")\n+    .subscribe(secret -> {\n+        // Update the expiry time of the secret.\n+        secret.getProperties().setExpiresOn(OffsetDateTime.now().plusDays(50));\n+        secretAsyncClient.updateSecretProperties(secret.getProperties())\n+            .subscribe(updatedSecretProperties ->\n+                System.out.printf(\"Secret's updated expiry time: %s\\n\",\n+                    updatedSecretProperties.getExpiresOn().toString()));\n+    });\n ```\n \n-### Delete a Secret Asynchronously\n-\n-Delete an existing Secret by calling `beginDeleteSecret`.\n+### Delete a secret asynchronously\n+Delete an existing secret by calling `beginDeleteSecret`.\n \n ```Java\n-secretAsyncClient.beginDeleteSecret(\"secretName\")\n+secretAsyncClient.beginDeleteSecret(\"<secret-name>\")\n     .subscribe(pollResponse -> {\n-        System.out.println(\"Delete Status: \" + pollResponse.getStatus().toString());\n-        System.out.println(\"Deleted Secret Name: \" + pollResponse.getValue().getName());\n-        System.out.println(\"Deleted Secret Value: \" + pollResponse.getValue().getValue());\n+        System.out.println(\"Deletion status: \" + pollResponse.getStatus().toString());\n+        System.out.println(\"Deleted secret name: \" + pollResponse.getValue().getName());\n+        System.out.println(\"Deleted secret value: \" + pollResponse.getValue().getValue());\n     });\n ```\n \n-### List Secrets Asynchronously\n-\n-List the secrets in the key vault by calling `listPropertiesOfSecrets`.\n+### List secrets asynchronously\n+List the secrets in the Azure Key Vault by calling `listPropertiesOfSecrets`.\n \n ```Java\n-// The List Secrets operation returns secrets without their value, so for each secret returned we call `getSecret` to get its // value as well.\n+// The List Secrets operation returns secrets without their value, so for each secret returned we call `getSecret`\n+// to get its value as well.\n secretAsyncClient.listPropertiesOfSecrets()\n-    .subscribe(secretProperties -> secretAsyncClient\n-        .getSecret(secretProperties.getName(), secretProperties.getVersion())\n-        .subscribe(secretResponse -> System.out.printf(\"Received secret with name %s and value %s\",\n-            secretResponse.getName(), secretResponse.getValue())));\n+    .subscribe(secretProperties ->\n+        secretAsyncClient.getSecret(secretProperties.getName(), secretProperties.getVersion())\n+            .subscribe(secretResponse ->\n+                System.out.printf(\"Retrieved secret with name \\\"%s\\\" and value \\\"%s\\\"\", secretResponse.getName(),\n+                    secretResponse.getValue())));\n ```\n \n ## Troubleshooting\n ### General\n-Key Vault clients raise exceptions. For example, if you try to retrieve a secret after it is deleted a `404` error is returned, indicating resource not found. In the following snippet, the error is handled gracefully by catching the exception and displaying additional information about the error.\n+Azure Key Vault Secret clients raise exceptions. For example, if you try to retrieve a secret after it is deleted a `404` error is returned, indicating the resource was not found. In the following snippet, the error is handled gracefully by catching the exception and displaying additional information about the error.\n \n ```java\n try {\n-    SecretClient.getSecret(\"deletedSecret\")\n+    secretClient.getSecret(\"<deleted-secret-name>\")\n } catch (ResourceNotFoundException e) {\n     System.out.println(e.getMessage());\n }\n ```\n \n ### Default HTTP Client\n-All client libraries by default use the Netty HTTP client. Adding the above dependency will automatically configure \n-the client library to use the Netty HTTP client. Configuring or changing the HTTP client is detailed in the [HTTP clients wiki](https://github.com/Azure/azure-sdk-for-java/wiki/HTTP-clients).\n+All client libraries by default use the Netty HTTP client. Adding the above dependency will automatically configure the client library to use the Netty HTTP client. Configuring or changing the HTTP client is detailed in the [HTTP clients wiki](https://github.com/Azure/azure-sdk-for-java/wiki/HTTP-clients).\n \n ### Default SSL library\n-All client libraries, by default, use the Tomcat-native Boring SSL library to enable native-level performance for SSL \n-operations. The Boring SSL library is an uber jar containing native libraries for Linux / macOS / Windows, and provides \n-better performance compared to the default SSL implementation within the JDK. For more information, including how to \n-reduce the dependency size, refer to the [performance tuning][performance_tuning] section of the wiki.\n+All client libraries, by default, use the Tomcat-native Boring SSL library to enable native-level performance for SSL operations. The Boring SSL library is an Uber JAR containing native libraries for Linux / macOS / Windows, and provides better performance compared to the default SSL implementation within the JDK. For more information, including how to reduce the dependency size, refer to the [performance tuning][performance_tuning] section of the wiki.\n \n ## Next steps\n-Several KeyVault Java SDK samples are available to you in the SDK's GitHub repository. These samples provide example code for additional scenarios commonly encountered while working with Key Vault:\n+Several KeyVault Java SDK samples are available to you in the SDK's GitHub repository. These samples provide example code for additional scenarios commonly encountered while working with Azure Key Vault.", "originalCommit": "d9f71616017efac1108fcbe4b2beb161838a763e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f4580b6e0bb5c5b448963ca78c332ba5d63212c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1f4580b6e0bb5c5b448963ca78c332ba5d63212c", "message": "Small correction pointed out by @jongio", "committedDate": "2020-06-09T00:19:47Z", "type": "commit"}]}