{"pr_number": 7120, "pr_title": "[After MSAL 1.3] Pluggable HTTP in identity/msal", "pr_createdAt": "2020-01-04T01:18:47Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7120", "timeline": [{"oid": "772e2ed006fa9f67cab4a48483986cfcdb197622", "url": "https://github.com/Azure/azure-sdk-for-java/commit/772e2ed006fa9f67cab4a48483986cfcdb197622", "message": "Add HttpPipeline adapter for MSAL IHttpClient", "committedDate": "2019-11-19T23:12:58Z", "type": "commit"}, {"oid": "3d98d5bc920d6025475e6394d3b61acae43bae34", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d98d5bc920d6025475e6394d3b61acae43bae34", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into msaladapter", "committedDate": "2020-01-03T01:39:52Z", "type": "commit"}, {"oid": "63c16f706438cf75c18b30f5e1268afff056609d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/63c16f706438cf75c18b30f5e1268afff056609d", "message": "Build backward compatible identity client options", "committedDate": "2020-01-03T19:51:43Z", "type": "commit"}, {"oid": "9c01dbad21231ed7df11313b4b189d95cd023f23", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c01dbad21231ed7df11313b4b189d95cd023f23", "message": "Fix code styles", "committedDate": "2020-01-04T01:17:34Z", "type": "commit"}, {"oid": "1cd4675b1774570b73364a34cc6ff31054f2ca9a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1cd4675b1774570b73364a34cc6ff31054f2ca9a", "message": "Clean up pom", "committedDate": "2020-01-04T01:21:17Z", "type": "commit"}, {"oid": "06c5f5631070bba8090a37fb052ff45ebddeb37d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/06c5f5631070bba8090a37fb052ff45ebddeb37d", "message": "Fix netty module version", "committedDate": "2020-01-04T01:38:34Z", "type": "commit"}, {"oid": "0bc580fd051b37ea129d108003f2114b8d07fae9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0bc580fd051b37ea129d108003f2114b8d07fae9", "message": "Use default when HttpPipeline is not specified", "committedDate": "2020-01-04T02:32:00Z", "type": "commit"}, {"oid": "c372959e85335dae1f00fbc7d7a3dff30fd3a492", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c372959e85335dae1f00fbc7d7a3dff30fd3a492", "message": "Update msal4j in eventhubs", "committedDate": "2020-01-04T07:28:08Z", "type": "commit"}, {"oid": "27c34c09c4ba4486b94e37db8021b6e6352f71b8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/27c34c09c4ba4486b94e37db8021b6e6352f71b8", "message": "Checkstyle", "committedDate": "2020-01-04T08:00:39Z", "type": "commit"}, {"oid": "f9ecc2e3b8fe6573dbd0f5c3a4246a5cdb6b4613", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f9ecc2e3b8fe6573dbd0f5c3a4246a5cdb6b4613", "message": "Checkstyle", "committedDate": "2020-01-04T08:54:30Z", "type": "commit"}, {"oid": "cace69f9c70083730179190cc0988efcb2abe5cc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cace69f9c70083730179190cc0988efcb2abe5cc", "message": "Add azure-core-http-netty to identity pom.service.xml", "committedDate": "2020-01-06T18:39:44Z", "type": "commit"}, {"oid": "ed2ac04850708f89145442d7cb0e453c7e15d578", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ed2ac04850708f89145442d7cb0e453c7e15d578", "message": "Add azure-core-test to identity pom.service.xml", "committedDate": "2020-01-06T19:04:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc4MjIzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r363782235", "bodyText": "I like that this is moving past a preview version.", "author": "JimSuplizio", "createdAt": "2020-01-07T14:48:18Z", "path": "eng/versioning/external_dependencies.txt", "diffHunk": "@@ -62,7 +62,7 @@ com.microsoft.azure:azure-mgmt-keyvault;1.11.1\n com.microsoft.azure:azure-mgmt-resources;1.3.0\n com.microsoft.azure:azure-mgmt-storage;1.3.0\n com.microsoft.azure:azure-storage;8.0.0\n-com.microsoft.azure:msal4j;0.5.0-preview\n+com.microsoft.azure:msal4j;1.1.0", "originalCommit": "ed2ac04850708f89145442d7cb0e453c7e15d578", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "message": "Update MSAL to 1.3.0", "committedDate": "2020-01-13T03:00:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2NDMzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r365964335", "bodyText": "1.2.0 is out for this library.\nIs that what we intend to add here ?", "author": "g2vinay", "createdAt": "2020-01-13T18:42:55Z", "path": "sdk/identity/azure-identity/pom.xml", "diffHunk": "@@ -81,5 +81,11 @@\n       <version>3.3.0.RELEASE</version> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-core-http-netty</artifactId>\n+      <version>1.1.0</version> <!-- {x-version-update;com.azure:azure-core-http-netty;dependency} -->", "originalCommit": "c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzNzAzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366537038", "bodyText": "Using 1.2.0 now", "author": "jianghaolu", "createdAt": "2020-01-14T19:43:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2NDMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2NjAxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r365966018", "bodyText": "so, here we don't check if (options.getHttpPipeline() != null)  before setting the pipeline ?", "author": "g2vinay", "createdAt": "2020-01-13T18:46:47Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -137,28 +139,23 @@\n     public Mono<AccessToken> authenticateWithPfxCertificate(String pfxCertificatePath, String pfxCertificatePassword,\n                                                             TokenRequestContext request) {\n         String authorityUrl = options.getAuthorityHost().replaceAll(\"/+$\", \"\") + \"/\" + tenantId;\n-        try {\n+        return Mono.fromCallable(() -> {\n             ConfidentialClientApplication.Builder applicationBuilder =\n-                ConfidentialClientApplication.builder(clientId,\n-                    ClientCredentialFactory.create(new FileInputStream(pfxCertificatePath), pfxCertificatePassword))\n-                    .authority(authorityUrl);\n+                    ConfidentialClientApplication.builder(clientId, ClientCredentialFactory.createFromCertificate(\n+                                new FileInputStream(pfxCertificatePath), pfxCertificatePassword))\n+                            .httpClient(new HttpPipelineAdapter(options.getHttpPipeline()))", "originalCommit": "c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMDU3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366200578", "bodyText": "Removing in favor of the other checked one", "author": "jianghaolu", "createdAt": "2020-01-14T08:19:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2NjAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2Nzc3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r365967770", "bodyText": "we're already setting the pipeline on top, even before this check.", "author": "g2vinay", "createdAt": "2020-01-13T18:50:41Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -137,28 +139,23 @@\n     public Mono<AccessToken> authenticateWithPfxCertificate(String pfxCertificatePath, String pfxCertificatePassword,\n                                                             TokenRequestContext request) {\n         String authorityUrl = options.getAuthorityHost().replaceAll(\"/+$\", \"\") + \"/\" + tenantId;\n-        try {\n+        return Mono.fromCallable(() -> {\n             ConfidentialClientApplication.Builder applicationBuilder =\n-                ConfidentialClientApplication.builder(clientId,\n-                    ClientCredentialFactory.create(new FileInputStream(pfxCertificatePath), pfxCertificatePassword))\n-                    .authority(authorityUrl);\n+                    ConfidentialClientApplication.builder(clientId, ClientCredentialFactory.createFromCertificate(\n+                                new FileInputStream(pfxCertificatePath), pfxCertificatePassword))\n+                            .httpClient(new HttpPipelineAdapter(options.getHttpPipeline()))\n+                            .authority(authorityUrl);\n             if (options.getProxyOptions() != null) {\n                 applicationBuilder.proxy(proxyOptionsToJavaNetProxy(options.getProxyOptions()));\n             }\n-            ConfidentialClientApplication application = applicationBuilder.build();\n-            return Mono.fromFuture(application.acquireToken(\n-                ClientCredentialParameters.builder(new HashSet<>(request.getScopes()))\n-                    .build()))\n-                .map(ar -> new AccessToken(ar.accessToken(), OffsetDateTime.ofInstant(ar.expiresOnDate().toInstant(),\n-                    ZoneOffset.UTC)));\n-        } catch (CertificateException\n-            | UnrecoverableKeyException\n-            | NoSuchAlgorithmException\n-            | KeyStoreException\n-            | NoSuchProviderException\n-            | IOException e) {\n-            return Mono.error(e);\n-        }\n+            if (options.getHttpPipeline() != null) {\n+                applicationBuilder.httpClient(new HttpPipelineAdapter(options.getHttpPipeline()));", "originalCommit": "c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMDY0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366200644", "bodyText": "This actually should be used", "author": "jianghaolu", "createdAt": "2020-01-14T08:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2Nzc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2ODIwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r365968201", "bodyText": "same here, setting without checking pipeline being null.", "author": "g2vinay", "createdAt": "2020-01-13T18:51:34Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -173,12 +170,17 @@\n         try {\n             byte[] pemCertificateBytes = Files.readAllBytes(Paths.get(pemCertificatePath));\n             ConfidentialClientApplication.Builder applicationBuilder =\n-                ConfidentialClientApplication.builder(clientId,\n-                    ClientCredentialFactory.create(CertificateUtil.privateKeyFromPem(pemCertificateBytes),\n-                        CertificateUtil.publicKeyFromPem(pemCertificateBytes))).authority(authorityUrl);\n+                ConfidentialClientApplication.builder(clientId, ClientCredentialFactory.createFromCertificate(\n+                            CertificateUtil.privateKeyFromPem(pemCertificateBytes),\n+                            CertificateUtil.publicKeyFromPem(pemCertificateBytes)))\n+                        .httpClient(new HttpPipelineAdapter(options.getHttpPipeline()))", "originalCommit": "c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2ODMzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r365968330", "bodyText": "setting it above already.", "author": "g2vinay", "createdAt": "2020-01-13T18:51:49Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -173,12 +170,17 @@\n         try {\n             byte[] pemCertificateBytes = Files.readAllBytes(Paths.get(pemCertificatePath));\n             ConfidentialClientApplication.Builder applicationBuilder =\n-                ConfidentialClientApplication.builder(clientId,\n-                    ClientCredentialFactory.create(CertificateUtil.privateKeyFromPem(pemCertificateBytes),\n-                        CertificateUtil.publicKeyFromPem(pemCertificateBytes))).authority(authorityUrl);\n+                ConfidentialClientApplication.builder(clientId, ClientCredentialFactory.createFromCertificate(\n+                            CertificateUtil.privateKeyFromPem(pemCertificateBytes),\n+                            CertificateUtil.publicKeyFromPem(pemCertificateBytes)))\n+                        .httpClient(new HttpPipelineAdapter(options.getHttpPipeline()))\n+                        .authority(authorityUrl);\n             if (options.getProxyOptions() != null) {\n                 applicationBuilder.proxy(proxyOptionsToJavaNetProxy(options.getProxyOptions()));\n             }\n+            if (options.getHttpPipeline() != null) {\n+                applicationBuilder.httpClient(new HttpPipelineAdapter(options.getHttpPipeline()));", "originalCommit": "c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2ODk3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r365968971", "bodyText": "why are we commenting them out ?", "author": "g2vinay", "createdAt": "2020-01-13T18:53:10Z", "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/implementation/IdentityClientTests.java", "diffHunk": "@@ -182,15 +182,16 @@ private void mockForClientCertificate(TokenRequestContext request, String access\n         ConfidentialClientApplication.Builder builder = PowerMockito.mock(ConfidentialClientApplication.Builder.class);\n         when(builder.build()).thenReturn(application);\n         when(builder.authority(any())).thenReturn(builder);\n+        when(builder.httpClient(any())).thenReturn(builder);\n         whenNew(ConfidentialClientApplication.Builder.class).withAnyArguments().thenAnswer(invocation -> {\n             String cid = (String) invocation.getArguments()[0];\n-            AsymmetricKeyCredential keyCredential = (AsymmetricKeyCredential) invocation.getArguments()[1];\n+//            AsymmetricKeyCredential keyCredential = (AsymmetricKeyCredential) invocation.getArguments()[1];\n             if (!clientId.equals(cid)) {\n                 throw new MsalServiceException(\"Invalid clientId\", \"InvalidClientId\");\n             }\n-            if (keyCredential == null || keyCredential.key() == null) {\n-                throw new MsalServiceException(\"Invalid clientCertificate\", \"InvalidClientCertificate\");\n-            }\n+//            if (keyCredential == null || keyCredential.key() == null) {", "originalCommit": "c1c4478e9c25014072a6f7c1c58d1d1836be0d32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIwMTE5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366201194", "bodyText": "The certificate / secret now is not accessible anymore so I cannot verify it here - I was planning to fix the tests later", "author": "jianghaolu", "createdAt": "2020-01-14T08:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2ODk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwNzI4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366607285", "bodyText": "I added it back though we still cannot access the .key() value", "author": "jianghaolu", "createdAt": "2020-01-14T22:30:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2ODk3MQ=="}], "type": "inlineReview"}, {"oid": "8c23aa683741b60901ba04dd5d2083afdca5b1f5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8c23aa683741b60901ba04dd5d2083afdca5b1f5", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into msaladapter", "committedDate": "2020-01-14T08:16:40Z", "type": "commit"}, {"oid": "f91989e0e3c5bec0ece4c972859efdee51daec93", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f91989e0e3c5bec0ece4c972859efdee51daec93", "message": "Some cr feedback", "committedDate": "2020-01-14T08:21:43Z", "type": "commit"}, {"oid": "3a9509074425212a4674cb5289bc4a2cdbc61b7e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a9509074425212a4674cb5289bc4a2cdbc61b7e", "message": "Add GSON test dependency to identity", "committedDate": "2020-01-14T19:47:38Z", "type": "commit"}, {"oid": "1617b80ff125af1037c90ac3999e6b0e32b56116", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1617b80ff125af1037c90ac3999e6b0e32b56116", "message": "Add back test verification of client certificate", "committedDate": "2020-01-14T20:07:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU2OTA3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366569073", "bodyText": "This is track 1 event hubs module. Did you intend to update msal version of track 1 module too? This might need service team's validation.", "author": "srnagar", "createdAt": "2020-01-14T20:59:07Z", "path": "sdk/eventhubs/microsoft-azure-eventhubs/pom.xml", "diffHunk": "@@ -76,7 +76,7 @@\n     <dependency>\n       <groupId>com.microsoft.azure</groupId>\n       <artifactId>msal4j</artifactId>\n-      <version>0.5.0-preview</version> <!-- {x-version-update;com.microsoft.azure:msal4j;external_dependency} -->\n+      <version>1.3.0</version> <!-- {x-version-update;com.microsoft.azure:msal4j;external_dependency} -->", "originalCommit": "1617b80ff125af1037c90ac3999e6b0e32b56116", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3OTk5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366579998", "bodyText": "Seems to be only used in tests. And I don't know a way to specify a dependency of 2 different versions across our SDKs.\n\n@conniey  @mssfang for their opinion", "author": "jianghaolu", "createdAt": "2020-01-14T21:25:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU2OTA3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MjkwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7120#discussion_r366592901", "bodyText": "Is this because you are using the script to update the external dependency version and it's updating both track 1 and track 2 dependencies?", "author": "srnagar", "createdAt": "2020-01-14T21:54:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU2OTA3Mw=="}], "type": "inlineReview"}]}