{"pr_number": 8303, "pr_title": "Use Latest PagedFlux Changes from Azure Core", "pr_createdAt": "2020-02-19T22:29:58Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/8303", "timeline": [{"oid": "7bae4991d1bdbd8196a77c47c353f67a24b59644", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7bae4991d1bdbd8196a77c47c353f67a24b59644", "message": "Update PagedFlux usage to use new changes from Azure Core", "committedDate": "2020-02-19T22:28:55Z", "type": "commit"}, {"oid": "13de2c83ce2695539e5a71266c55ec8dbc1f06e6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/13de2c83ce2695539e5a71266c55ec8dbc1f06e6", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-02-24T22:03:48Z", "type": "commit"}, {"oid": "e66fc7ab0de8dee036190e7852215e99e2e9de72", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e66fc7ab0de8dee036190e7852215e99e2e9de72", "message": "Use custom PagedFlux implementation in Azure Search to support pages with additional metadata", "committedDate": "2020-02-24T22:42:05Z", "type": "commit"}, {"oid": "867ddf1e04c27831b6c4b27f4b59b0ef80fc167b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/867ddf1e04c27831b6c4b27f4b59b0ef80fc167b", "message": "Updated to use ContinuablePagedFlux via SearchPagedFlux implementation", "committedDate": "2020-02-25T21:21:44Z", "type": "commit"}, {"oid": "9f652a362c6bb2400f441165d10662346c6c4617", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f652a362c6bb2400f441165d10662346c6c4617", "message": "Updated PagedFlux usage in Azure Search to allow search to use its non-String continuation token", "committedDate": "2020-02-25T23:27:40Z", "type": "commit"}, {"oid": "7d43ac843b7d9318a6d84c6318f4a367c02852de", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7d43ac843b7d9318a6d84c6318f4a367c02852de", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-02-26T23:28:07Z", "type": "commit"}, {"oid": "2bce3f83d04e869bfa8de39b8e2adafdfe63bb24", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2bce3f83d04e869bfa8de39b8e2adafdfe63bb24", "message": "Update paging to new guidelines", "committedDate": "2020-02-27T01:04:49Z", "type": "commit"}, {"oid": "b1c62eea142e31ed541965ab9743837f1848b102", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b1c62eea142e31ed541965ab9743837f1848b102", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-02-27T01:27:34Z", "type": "commit"}, {"oid": "bd06e6a5bc59bd5aa924ec876a228d870c9d9674", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bd06e6a5bc59bd5aa924ec876a228d870c9d9674", "message": "Fixed sample and test code", "committedDate": "2020-02-27T01:57:36Z", "type": "commit"}, {"oid": "d896429537ba0a07991f5bbdf680ef94c06a2112", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d896429537ba0a07991f5bbdf680ef94c06a2112", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-02-27T17:25:12Z", "type": "commit"}, {"oid": "d5d5140bc619f86d67629adef3339069547f13b9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d5d5140bc619f86d67629adef3339069547f13b9", "message": "Added missing documentation", "committedDate": "2020-02-27T18:33:33Z", "type": "commit"}, {"oid": "af0f3593d379a9cc18c4082bd123c7ebcd4e7f05", "url": "https://github.com/Azure/azure-sdk-for-java/commit/af0f3593d379a9cc18c4082bd123c7ebcd4e7f05", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-02-27T19:20:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyMzQzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385323435", "bodyText": "This class will be removed once this is merged into Azure Core, this was added into Search directly to unblock this change.", "author": "alzimmermsft", "createdAt": "2020-02-27T19:27:34Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/util/ContinuablePagedIterable.java", "diffHunk": "@@ -0,0 +1,151 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.util;\n+\n+import com.azure.core.util.IterableStream;\n+import com.azure.core.util.paging.ContinuablePage;\n+import com.azure.core.util.paging.ContinuablePagedFlux;\n+\n+import java.util.stream.Stream;\n+\n+/**\n+ * This class provides utility to iterate over {@link ContinuablePage} using {@link Stream}\n+ * {@link Iterable} interfaces.\n+ *\n+ * @param <C> the type of the continuation token\n+ * @param <T> The type of elements in a {@link ContinuablePage}\n+ * @param <P> The {@link ContinuablePage} holding items of type {@code T}.\n+ *\n+ * @see IterableStream\n+ * @see ContinuablePagedFlux\n+ */\n+public abstract class ContinuablePagedIterable<C, T, P extends ContinuablePage<C, T>> extends IterableStream<T> {", "originalCommit": "af0f3593d379a9cc18c4082bd123c7ebcd4e7f05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyOTYxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385429616", "bodyText": "Do we have it for preview 1? Can u put it under impl?", "author": "sima-zhu", "createdAt": "2020-02-27T23:28:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyMzQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1NzcyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385457727", "bodyText": "The changes for this in Azure Core should be merged before preview 1 ships. This can't be under implementation as it is a super class to a public API and we don't want to have any classes in the hierarchy for a public API be non-public API.", "author": "alzimmermsft", "createdAt": "2020-02-28T01:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyMzQzNQ=="}], "type": "inlineReview"}, {"oid": "aeddc664bcb6c92706d421ed093f551db56293d4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/aeddc664bcb6c92706d421ed093f551db56293d4", "message": "Remove unused dependency", "committedDate": "2020-02-27T19:41:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMjI0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385422248", "bodyText": "The indentation is not right.", "author": "sima-zhu", "createdAt": "2020-02-27T23:05:19Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/util/SearchPagedFlux.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.util;\n+\n+import com.azure.core.util.paging.ContinuablePagedFlux;\n+import com.azure.core.util.paging.ContinuablePagedFluxCore;\n+import com.azure.core.util.paging.PageRetriever;\n+import com.azure.search.SearchPagedResponse;\n+import com.azure.search.models.SearchRequest;\n+import com.azure.search.models.SearchResult;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * Implementation of {@link ContinuablePagedFlux} where the continuation token type is {@link SearchRequest}, the\n+ * element type is {@link SearchResult}, and the page type is {@link SearchPagedResponse}.\n+ */\n+public final class SearchPagedFlux extends ContinuablePagedFluxCore<SearchRequest, SearchResult, SearchPagedResponse> {\n+    /**\n+     * Creates an instance of {@link SearchPagedFlux}.\n+     *\n+     * @param pageRetrieverProvider Supplied that handles retrieving {@link SearchPagedResponse SearchPagedResponses}.\n+     */\n+    public SearchPagedFlux(\n+        Supplier<PageRetriever<SearchRequest, SearchPagedResponse>> pageRetrieverProvider) {", "originalCommit": "aeddc664bcb6c92706d421ed093f551db56293d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1Nzg0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385457843", "bodyText": "Not sure how the indentation is wrong, I thought it was 4 spaces per level of indentation?", "author": "alzimmermsft", "createdAt": "2020-02-28T01:05:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMjI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyNDYyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385424629", "bodyText": "I did not understand why we still use  PagedFluxBase here. Do we want to deprecate it?", "author": "sima-zhu", "createdAt": "2020-02-27T23:12:18Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/util/AutocompletePagedFlux.java", "diffHunk": "@@ -0,0 +1,26 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.util;\n+\n+import com.azure.core.http.rest.PagedFluxBase;\n+import com.azure.search.AutocompletePagedResponse;\n+import com.azure.search.models.AutocompleteItem;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * Implementation of {@link PagedFluxBase} where the element type is {@link AutocompleteItem} and the page type is\n+ * {@link AutocompletePagedResponse}.\n+ */\n+public final class AutocompletePagedFlux extends PagedFluxBase<AutocompleteItem, AutocompletePagedResponse> {", "originalCommit": "aeddc664bcb6c92706d421ed093f551db56293d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1ODMyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385458329", "bodyText": "The deprecation of PagedFluxBase is still under discussion, I believe we are leaning towards not deprecating it as one of the most common scenarios for specialized PagedFluxs is what is covered by PagedFluxBase.\n@JonathanGiles @anuchandy @srnagar", "author": "alzimmermsft", "createdAt": "2020-02-28T01:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyNDYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1NTU4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385855587", "bodyText": "That's right, since PagedFluxBase is still a common type for some services where continuation token is string and the response is a type of PagedResponse, we don't want to eagerly deprecate something that might be useful.", "author": "srnagar", "createdAt": "2020-02-28T18:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyNDYyOQ=="}], "type": "inlineReview"}, {"oid": "54857ba854d2597954eb692be4d51466ba4d809a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/54857ba854d2597954eb692be4d51466ba4d809a", "message": "Add logic to handle when Azure Resource Group isn't set", "committedDate": "2020-02-28T16:03:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTQ5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385851494", "bodyText": "Can getValue() be null?", "author": "srnagar", "createdAt": "2020-02-28T18:25:37Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/AutocompletePagedResponse.java", "diffHunk": "@@ -3,29 +3,44 @@\n \n package com.azure.search;\n \n-import com.azure.core.http.rest.Page;\n import com.azure.core.http.rest.PagedResponseBase;\n+import com.azure.core.http.rest.Response;\n import com.azure.core.http.rest.SimpleResponse;\n import com.azure.search.models.AutocompleteItem;\n import com.azure.search.models.AutocompleteResult;\n \n /**\n- * Represents an HTTP response from the autocomplete API request that contains a list of items deserialized into a\n- * {@link Page}.\n+ * This class represents a response from the autocomplete API. It contains the {@link AutocompleteItem\n+ * AutocompleteItems} returned from the service.\n  */\n-public class AutocompletePagedResponse extends PagedResponseBase<Void, AutocompleteItem> {\n+public final class AutocompletePagedResponse extends PagedResponseBase<Void, AutocompleteItem> {\n+    private final Double coverage;\n \n     /**\n-     * Constructor\n+     * Creates an {@link AutocompletePagedResponse} from the returned {@link Response}.\n      *\n-     * @param autocompleteResponse an http response with the results\n+     * @param autocompleteResponse Autocomplete response returned from the service.\n      */\n-    public AutocompletePagedResponse(SimpleResponse<AutocompleteResult> autocompleteResponse) {\n+    AutocompletePagedResponse(SimpleResponse<AutocompleteResult> autocompleteResponse) {\n         super(autocompleteResponse.getRequest(),\n             autocompleteResponse.getStatusCode(),\n             autocompleteResponse.getHeaders(),\n             autocompleteResponse.getValue().getResults(),\n             null,\n             null);\n+\n+        this.coverage = autocompleteResponse.getValue().getCoverage();", "originalCommit": "54857ba854d2597954eb692be4d51466ba4d809a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4MTM3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r386681371", "bodyText": "Shouldn't, null value is likely an error scenario.", "author": "alzimmermsft", "createdAt": "2020-03-02T22:10:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTQ5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NDQ4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r386684489", "bodyText": "What does a HTTP 204 resolve to? Would this have a non-null value?", "author": "srnagar", "createdAt": "2020-03-02T22:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTQ5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY5MDMzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r386690336", "bodyText": "The autocomplete API only expects 200 as a valid response code.", "author": "alzimmermsft", "createdAt": "2020-03-02T22:29:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1NDA1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385854054", "bodyText": "Add @Immutable annotation", "author": "srnagar", "createdAt": "2020-02-28T18:31:04Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/SearchPagedResponse.java", "diffHunk": "@@ -24,8 +26,14 @@\n  * information is: count - number of total documents returned. Will be returned only if isIncludeTotalResultCount is set\n  * to true coverage - coverage value.\n  */\n-public final class SearchPagedResponse extends PagedResponseBase<Void, SearchResult> {\n+public final class SearchPagedResponse implements ContinuablePage<SearchRequest, SearchResult>,", "originalCommit": "54857ba854d2597954eb692be4d51466ba4d809a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1NjcxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385856710", "bodyText": "final?", "author": "srnagar", "createdAt": "2020-02-28T18:36:42Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/util/SearchPagedIterable.java", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.util;\n+\n+import com.azure.search.SearchPagedResponse;\n+import com.azure.search.models.SearchRequest;\n+import com.azure.search.models.SearchResult;\n+\n+/**\n+ * Implementation of {@link ContinuablePagedIterable} where the continuation token type is {@link SearchRequest}, the\n+ * element type is {@link SearchResult}, and the page type is {@link SearchPagedResponse}.\n+ */\n+public class SearchPagedIterable extends ContinuablePagedIterable<SearchRequest, SearchResult, SearchPagedResponse> {", "originalCommit": "54857ba854d2597954eb692be4d51466ba4d809a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1Nzk2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385857962", "bodyText": "Keep all exports together (move this to line 29)", "author": "srnagar", "createdAt": "2020-02-28T18:39:20Z", "path": "sdk/core/azure-core/src/main/java/module-info.java", "diffHunk": "@@ -36,6 +36,7 @@\n     opens com.azure.core.implementation.logging to com.fasterxml.jackson.databind;\n     opens com.azure.core.implementation.serializer to com.fasterxml.jackson.databind;\n     opens com.azure.core.implementation.serializer.jsonwrapper to com.fasterxml.jackson.databind;\n+    exports com.azure.core.util.paging;", "originalCommit": "54857ba854d2597954eb692be4d51466ba4d809a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NzIyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r386687220", "bodyText": "Changed ordering", "author": "alzimmermsft", "createdAt": "2020-03-02T22:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1Nzk2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1ODc1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385858751", "bodyText": "This is already added in azure-core. Do we need to add this here as well?", "author": "srnagar", "createdAt": "2020-02-28T18:41:02Z", "path": "sdk/search/azure-search/pom.xml", "diffHunk": "@@ -37,6 +37,16 @@\n       <version>1.4.0-beta.2</version> <!-- {x-version-update;unreleased_com.azure:azure-core-http-netty;dependency} -->\n     </dependency>\n \n+    <!-- Added this dependency to include necessary annotations used by reactor core.\n+    Without this dependency, javadoc throws a warning as it cannot find enum When.MAYBE\n+    which is used in @Nullable annotation in reactor core classes -->\n+    <dependency>\n+      <groupId>com.google.code.findbugs</groupId>\n+      <artifactId>jsr305</artifactId>\n+      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+      <scope>provided</scope>\n+    </dependency>", "originalCommit": "54857ba854d2597954eb692be4d51466ba4d809a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4MTA3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r386681071", "bodyText": "provided dependencies don't appear to flow transitively to downstream modules, this is needed for azure-search.", "author": "alzimmermsft", "createdAt": "2020-03-02T22:09:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1ODc1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MDE3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8303#discussion_r385860170", "bodyText": "nit: this can be in a single line.", "author": "srnagar", "createdAt": "2020-02-28T18:44:04Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexAsyncClient.java", "diffHunk": "@@ -479,11 +482,12 @@ public String getEndpoint() {\n      * @param searchText The search text on which to base suggestions\n      * @param suggesterName The name of the suggester as specified in the suggesters collection that's part of the index\n      * definition\n-     * @return A {@link PagedFluxBase} that iterates over {@link SuggestResult} objects and provides access to the\n+     * @return A {@link SuggestPagedFlux} that iterates over {@link SuggestResult} objects and provides access to the\n      * {@link SuggestPagedResponse} object for each page containing HTTP response and coverage information.\n      * @see <a href=\"https://docs.microsoft.com/rest/api/searchservice/Suggestions\">Suggestions</a>\n      */\n-    public PagedFluxBase<SuggestResult, SuggestPagedResponse> suggest(String searchText, String suggesterName) {\n+    public SuggestPagedFlux suggest(String searchText,\n+        String suggesterName) {", "originalCommit": "54857ba854d2597954eb692be4d51466ba4d809a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "072b6f9bd34b0630e5f5d534a12004c7afff1eaa", "url": "https://github.com/Azure/azure-sdk-for-java/commit/072b6f9bd34b0630e5f5d534a12004c7afff1eaa", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-02-28T18:57:54Z", "type": "commit"}, {"oid": "bbdc5189f83ce5e25370324229c766d4aaab993b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bbdc5189f83ce5e25370324229c766d4aaab993b", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-03-02T22:04:30Z", "type": "commit"}, {"oid": "5f00f9ad7f9243b50690020316c7bdab767bb933", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5f00f9ad7f9243b50690020316c7bdab767bb933", "message": "Changes based on PR feedback", "committedDate": "2020-03-02T22:21:02Z", "type": "commit"}, {"oid": "15316e2146f52b420c977ebf3f2961b710c3da72", "url": "https://github.com/Azure/azure-sdk-for-java/commit/15316e2146f52b420c977ebf3f2961b710c3da72", "message": "Moved PagedResponse classes into util", "committedDate": "2020-03-03T02:32:26Z", "type": "commit"}, {"oid": "61491a3f0e9dcc95c2fe904c37a0190be700baf2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/61491a3f0e9dcc95c2fe904c37a0190be700baf2", "message": "Merge branch 'master' into AzSearch_UpdatePagedFluxUsage", "committedDate": "2020-03-03T02:32:28Z", "type": "commit"}, {"oid": "29767d2458d05b8eafedfe979d366ad78e710d13", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29767d2458d05b8eafedfe979d366ad78e710d13", "message": "Fix constructor scoping issue", "committedDate": "2020-03-03T16:59:59Z", "type": "commit"}]}