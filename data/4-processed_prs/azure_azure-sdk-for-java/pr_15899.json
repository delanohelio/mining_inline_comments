{"pr_number": 15899, "pr_title": "Added support for azure-core ClientOptions in Key Vault client builders.", "pr_createdAt": "2020-10-02T21:57:40Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15899", "timeline": [{"oid": "dc6dd1148407bb7418b366df388a40cb21f2c779", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc6dd1148407bb7418b366df388a40cb21f2c779", "message": "Added support for `ClientOptions` in Key Vault client builders.", "committedDate": "2020-10-02T21:51:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3ODY3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499078677", "bodyText": "This can be simplified.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Iterable<Header> headers = clientOptions.getHeaders();\n          \n          \n            \n            \n          \n          \n            \n                        if (headers.iterator().hasNext()) {\n          \n          \n            \n                            List<HttpHeader> httpHeaderList = new ArrayList<>();\n          \n          \n            \n                            headers.forEach(header -> httpHeaderList.add(new HttpHeader(header.getName(), header.getValue())));\n          \n          \n            \n                            policies.add(new AddHeadersPolicy(new HttpHeaders(httpHeaderList)));\n          \n          \n            \n                        }\n          \n          \n            \n                       \n          \n          \n            \n                            List<HttpHeader> httpHeaderList = new ArrayList<>();\n          \n          \n            \n                            clientOptions.getHeaders().forEach(header -> httpHeaderList.add(new HttpHeader(header.getName(), header.getValue())));\n          \n          \n            \n                            policies.add(new AddHeadersPolicy(new HttpHeaders(httpHeaderList)));", "author": "srnagar", "createdAt": "2020-10-02T22:43:50Z", "path": "sdk/keyvault/azure-security-keyvault-administration/src/main/java/com/azure/security/keyvault/administration/KeyVaultAccessControlClientBuilder.java", "diffHunk": "@@ -129,13 +135,25 @@ public KeyVaultAccessControlAsyncClient buildAsyncClient() {\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n+        String applicationId =\n+            clientOptions == null ? httpLogOptions.getApplicationId() : clientOptions.getApplicationId();\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion,\n-            buildConfiguration));\n+        policies.add(new UserAgentPolicy(applicationId, clientName, clientVersion, buildConfiguration));\n         HttpPolicyProviders.addBeforeRetryPolicies(policies);\n         policies.add(retryPolicy == null ? new RetryPolicy() : retryPolicy);\n         this.policies.add(new KeyVaultCredentialPolicy(credential));\n         policies.addAll(this.policies);\n+\n+        if (clientOptions != null) {\n+            Iterable<Header> headers = clientOptions.getHeaders();\n+\n+            if (headers.iterator().hasNext()) {\n+                List<HttpHeader> httpHeaderList = new ArrayList<>();\n+                headers.forEach(header -> httpHeaderList.add(new HttpHeader(header.getName(), header.getValue())));\n+                policies.add(new AddHeadersPolicy(new HttpHeaders(httpHeaderList)));\n+            }", "originalCommit": "dc6dd1148407bb7418b366df388a40cb21f2c779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e928c848ed5cbdc17d4db632f288e4ee08d836e7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e928c848ed5cbdc17d4db632f288e4ee08d836e7", "message": "Simplified some code.", "committedDate": "2020-10-02T23:10:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3ODk0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499078943", "bodyText": "Don't need this check.  forEach() will be executed only if there are elements in the list. Update this in other builders too.", "author": "srnagar", "createdAt": "2020-10-02T22:45:02Z", "path": "sdk/keyvault/azure-security-keyvault-administration/src/main/java/com/azure/security/keyvault/administration/KeyVaultBackupClientBuilder.java", "diffHunk": "@@ -128,13 +134,25 @@ public KeyVaultBackupAsyncClient buildAsyncClient() {\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n+        String applicationId =\n+            clientOptions == null ? httpLogOptions.getApplicationId() : clientOptions.getApplicationId();\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion,\n-            buildConfiguration));\n+        policies.add(new UserAgentPolicy(applicationId, clientName, clientVersion, buildConfiguration));\n         HttpPolicyProviders.addBeforeRetryPolicies(policies);\n         policies.add(retryPolicy == null ? new RetryPolicy() : retryPolicy);\n         this.policies.add(new KeyVaultCredentialPolicy(credential));\n         policies.addAll(this.policies);\n+\n+        if (clientOptions != null) {\n+            Iterable<Header> headers = clientOptions.getHeaders();\n+\n+            if (headers.iterator().hasNext()) {", "originalCommit": "dc6dd1148407bb7418b366df388a40cb21f2c779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA4NjA0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499086042", "bodyText": "This reads a bit odd - Sets the various options to be set...", "author": "srnagar", "createdAt": "2020-10-02T23:18:41Z", "path": "sdk/keyvault/azure-security-keyvault-administration/src/main/java/com/azure/security/keyvault/administration/KeyVaultBackupClientBuilder.java", "diffHunk": "@@ -273,6 +291,17 @@ public KeyVaultBackupClientBuilder retryPolicy(RetryPolicy retryPolicy) {\n         return this;\n     }\n \n+    /**\n+     * Sets the various {@link ClientOptions options} to be set on this client.", "originalCommit": "dc6dd1148407bb7418b366df388a40cb21f2c779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "010311587115c7d46adb291a37dae603a7215851", "url": "https://github.com/Azure/azure-sdk-for-java/commit/010311587115c7d46adb291a37dae603a7215851", "message": "Corrected Javadoc based on PR suggestions.", "committedDate": "2020-10-02T23:25:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjE5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499096190", "bodyText": "Since user might not know what ClientOptions is for , we can explain in java doc more about what user can set with this.\nHere is one example of java doc https://github.com/Azure/azure-sdk-for-java/pull/13697/files#diff-063fb5ef000495423cf8b8e2e66f8518R262", "author": "hemanttanwar", "createdAt": "2020-10-03T00:22:14Z", "path": "sdk/keyvault/azure-security-keyvault-administration/src/main/java/com/azure/security/keyvault/administration/KeyVaultAccessControlClientBuilder.java", "diffHunk": "@@ -273,6 +288,17 @@ public KeyVaultAccessControlClientBuilder retryPolicy(RetryPolicy retryPolicy) {\n         return this;\n     }\n \n+    /**\n+     * Sets various {@link ClientOptions options} on this client.", "originalCommit": "010311587115c7d46adb291a37dae603a7215851", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjM4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499096387", "bodyText": "same java doc comment like above.", "author": "hemanttanwar", "createdAt": "2020-10-03T00:23:34Z", "path": "sdk/keyvault/azure-security-keyvault-administration/src/main/java/com/azure/security/keyvault/administration/KeyVaultBackupClientBuilder.java", "diffHunk": "@@ -273,6 +288,17 @@ public KeyVaultBackupClientBuilder retryPolicy(RetryPolicy retryPolicy) {\n         return this;\n     }\n \n+    /**\n+     * Sets various {@link ClientOptions options} on this client.", "originalCommit": "010311587115c7d46adb291a37dae603a7215851", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjQzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499096433", "bodyText": "java doc", "author": "hemanttanwar", "createdAt": "2020-10-03T00:23:56Z", "path": "sdk/keyvault/azure-security-keyvault-certificates/src/main/java/com/azure/security/keyvault/certificates/CertificateClientBuilder.java", "diffHunk": "@@ -286,6 +301,17 @@ public CertificateClientBuilder retryPolicy(RetryPolicy retryPolicy) {\n         return this;\n     }\n \n+    /**\n+     * Sets various {@link ClientOptions options} on this client.", "originalCommit": "010311587115c7d46adb291a37dae603a7215851", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjUxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499096518", "bodyText": "Additional java doc here too", "author": "hemanttanwar", "createdAt": "2020-10-03T00:24:34Z", "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/KeyClientBuilder.java", "diffHunk": "@@ -289,6 +305,17 @@ public KeyClientBuilder retryPolicy(RetryPolicy retryPolicy) {\n         return this;\n     }\n \n+    /**\n+     * Sets various {@link ClientOptions options} on this client.\n+     *", "originalCommit": "010311587115c7d46adb291a37dae603a7215851", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjU1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499096551", "bodyText": "java doc", "author": "hemanttanwar", "createdAt": "2020-10-03T00:24:51Z", "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/KeyEncryptionKeyClientBuilder.java", "diffHunk": "@@ -224,4 +225,15 @@ public KeyEncryptionKeyClientBuilder retryPolicy(RetryPolicy retryPolicy) {\n         builder.retryPolicy(retryPolicy);\n         return this;\n     }\n+\n+    /**\n+     * Sets various {@link ClientOptions options} on this client.\n+     *", "originalCommit": "010311587115c7d46adb291a37dae603a7215851", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjczMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499096731", "bodyText": "Could we add one test where use set a Header and it gets added to HttpRequest ?", "author": "hemanttanwar", "createdAt": "2020-10-03T00:26:15Z", "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/CryptographyClientBuilder.java", "diffHunk": "@@ -154,12 +160,22 @@ HttpPipeline setupPipeline() {\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion,\n-            buildConfiguration));\n+        String applicationId =\n+            clientOptions == null ? httpLogOptions.getApplicationId() : clientOptions.getApplicationId();\n+\n+        policies.add(new UserAgentPolicy(applicationId, clientName, clientVersion, buildConfiguration));\n         HttpPolicyProviders.addBeforeRetryPolicies(policies);\n         policies.add(retryPolicy);\n         policies.add(new KeyVaultCredentialPolicy(credential));\n         policies.addAll(this.policies);\n+\n+        if (clientOptions != null) {\n+            List<HttpHeader> httpHeaderList = new ArrayList<>();", "originalCommit": "010311587115c7d46adb291a37dae603a7215851", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5OTY1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499099657", "bodyText": "I think we should be able to, let me see what I can do with the given time.", "author": "vcolin7", "createdAt": "2020-10-03T00:48:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwOTU5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15899#discussion_r499109595", "bodyText": "Will add these tests in a future iteration. Discussed it with @hemanttanwar in a side conversation.", "author": "vcolin7", "createdAt": "2020-10-03T02:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NjczMQ=="}], "type": "inlineReview"}, {"oid": "904e166baec0afd2bf9e7af84c0f52493c1e5ab9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/904e166baec0afd2bf9e7af84c0f52493c1e5ab9", "message": "More Javadoc changes based on PR comments.", "committedDate": "2020-10-03T00:55:20Z", "type": "commit"}, {"oid": "1dc1c6915633cefaa3103977b1af551e287ff4bc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1dc1c6915633cefaa3103977b1af551e287ff4bc", "message": "Removed unused imports.", "committedDate": "2020-10-03T02:59:30Z", "type": "commit"}]}