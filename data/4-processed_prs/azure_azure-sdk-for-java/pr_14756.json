{"pr_number": 14756, "pr_title": "feat(design): Query API design", "pr_createdAt": "2020-09-02T23:02:13Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14756", "timeline": [{"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139", "url": "https://github.com/Azure/azure-sdk-for-java/commit/95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139", "message": "feat(design): Query API design", "committedDate": "2020-09-02T23:03:17Z", "type": "commit"}, {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139", "url": "https://github.com/Azure/azure-sdk-for-java/commit/95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139", "message": "feat(design): Query API design", "committedDate": "2020-09-02T23:03:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDEzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r482604131", "bodyText": "query as object?", "author": "bikamani", "createdAt": "2020-09-02T23:48:44Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)\n+\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @param clazz The model class to convert the query response to.\n+  * @param <T> The generic type to convert the query response to.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public <T> PagedFlux<T> query(String query, Class<T> clazz)", "originalCommit": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNzAyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483127023", "bodyText": "This did not come up in yesterday's discussion. Do we really need query as object? Is  not enough?", "author": "vinagesh", "createdAt": "2020-09-03T17:01:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDEzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEzODM5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483138399", "bodyText": "Resolved in stand up", "author": "vinagesh", "createdAt": "2020-09-03T17:21:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDg1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r482604853", "bodyText": "should the naming be queryTwins? I know in dotnet it was queryAsync but thinking since it may be more meaningful", "author": "bikamani", "createdAt": "2020-09-02T23:51:06Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)", "originalCommit": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNjE3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483126173", "bodyText": "Parity is probably more important here. Feel free to bring it up in a meeting and we can all discuss collectively.", "author": "vinagesh", "createdAt": "2020-09-03T16:59:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDg1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNTQzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r482605430", "bodyText": "Don't you need withResponse?", "author": "bikamani", "createdAt": "2020-09-02T23:52:52Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)\n+\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @param clazz The model class to convert the query response to.\n+  * @param <T> The generic type to convert the query response to.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public <T> PagedFlux<T> query(String query, Class<T> clazz)\n+  ```\n+</details>\n \n+<details><summary><b>Sync APIs</b></summary>\n \n ```java\n-TODO:\n+/**\n+* Query digital twins.\n+*\n+* @param query The query string, in SQL-like syntax.\n+* @param context Additional context that is passed through the Http pipeline during the service call.\n+* @return A {@link PagedIterable} of application/json for the query result items.\n+*/\n+@ServiceMethod(returns = ReturnType.COLLECTION)\n+public PagedIterable<String> query(String query, Context context)\n+\n+/**\n+* Query digital twins.\n+*\n+* @param query The query string, in SQL-like syntax.\n+* @param context Additional context that is passed through the Http pipeline during the service call.\n+* @param clazz The model class to convert the query response to.\n+* @param <T> The generic type to convert the query response to.\n+* @return A {@link PagedIterable} of application/json for the query result items.\n+*/\n+@ServiceMethod(returns = ReturnType.COLLECTION)\n+public <T> PagedIterable<T> query(String query, Class<T> clazz, Context context)", "originalCommit": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNjcyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483126728", "bodyText": "No this does not return a response. This returns a pageable object to iterate on. The calls are make when you iterate on it.", "author": "vinagesh", "createdAt": "2020-09-03T17:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNTQzMA=="}], "type": "inlineReview"}]}