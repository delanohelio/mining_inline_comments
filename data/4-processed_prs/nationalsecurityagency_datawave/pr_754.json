{"pr_number": 754, "pr_title": "fix #750 Fix BulkResults ( MapReduce API) - broken during Datawave refactoring", "pr_createdAt": "2020-02-21T13:49:32Z", "pr_url": "https://github.com/NationalSecurityAgency/datawave/pull/754", "timeline": [{"oid": "8ba3b3a544ce458f2dd633c78ccf2a206ce2d7c9", "url": "https://github.com/NationalSecurityAgency/datawave/commit/8ba3b3a544ce458f2dd633c78ccf2a206ce2d7c9", "message": "fixes #750 Fix BulkResults (via MapReduce API) which was broken during Datawave refactoring", "committedDate": "2020-02-20T21:07:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU5MTMzMA==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/754#discussion_r382591330", "bodyText": "It's an unspoken convention, but I had been ensuring that any property that starts with dw. was not filtered by maven and only supplied via the wildfly system properties defined in add-datawave-configuration.cli. This way we can be sure that nothing that is filtered by maven is baked in to the source itself--the substitutions are limited to things under web-services/deploy.\nI think if you just change this property to something like mapreduce.securitydomain.useJobCache here and in add-datawave-configuratoin.cli that would be sufficient to fix.", "author": "brianloss", "createdAt": "2020-02-21T13:52:31Z", "path": "properties/default.properties", "diffHunk": "@@ -341,6 +341,7 @@ bulkResults.job.tracker=localhost:8021\n bulkResults.http.port=http://localhost:8080\n bulkResults.hdfs.uri=hdfs://localhost:8020/\n bulkResults.hdfs.base.dir=/datawave/BulkResults\n+dw.mapreduce.securitydomain.useJobCache=true", "originalCommit": "8ba3b3a544ce458f2dd633c78ccf2a206ce2d7c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYyODYyNg==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/754#discussion_r382628626", "bodyText": "Thanks - change pushed to pull request thread", "author": "billoley", "createdAt": "2020-02-21T15:01:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU5MTMzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwOTg3Nw==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/754#discussion_r382609877", "bodyText": "Not a big deal, but since this is an ApplicationScoped bean, I believe you could just do this initialization in a constructor and then you wouldn't need the lazy init code in produceCallerPrincipal().", "author": "brianloss", "createdAt": "2020-02-21T14:28:26Z", "path": "web-services/map-reduce-embedded/src/main/java/datawave/security/system/EmbeddedCallerPrincipalProducer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package datawave.security.system;\n+\n+import datawave.security.authorization.DatawavePrincipal;\n+import org.infinispan.commons.util.Base64;\n+\n+import javax.annotation.Priority;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;\n+import javax.enterprise.inject.Produces;\n+import javax.interceptor.Interceptor;\n+\n+/**\n+ * Caller principal producer supplied just for Embedded mode (e.g., inside of MapReduce jars). This archive should not be included for normal web applications.\n+ */\n+@Alternative\n+@Priority(Interceptor.Priority.APPLICATION)\n+@ApplicationScoped\n+public class EmbeddedCallerPrincipalProducer {\n+    private boolean initialized = false;\n+    private DatawavePrincipal callerPrincipal;\n+    \n+    @Produces\n+    @ServerPrincipal\n+    public DatawavePrincipal produceCallerPrincipal() {\n+        if (!initialized) {\n+            initializeCallerPrincipal();\n+            initialized = true;\n+        }\n+        return callerPrincipal;\n+    }\n+    \n+    private void initializeCallerPrincipal() {", "originalCommit": "8ba3b3a544ce458f2dd633c78ccf2a206ce2d7c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "36f6f9b6a648ef579801b2f79899943a260582a5", "url": "https://github.com/NationalSecurityAgency/datawave/commit/36f6f9b6a648ef579801b2f79899943a260582a5", "message": "fixes #750 Change property name", "committedDate": "2020-02-21T14:59:33Z", "type": "commit"}]}