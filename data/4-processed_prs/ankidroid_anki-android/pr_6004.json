{"pr_number": 6004, "pr_title": "Use AnkiWeb Dynamic Sync Url", "pr_createdAt": "2020-04-14T18:58:09Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6004", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2NjgxNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408366815", "bodyText": "Worth discussing whether we should skip the cache and hit preferences on each get()", "author": "david-allison-1", "createdAt": "2020-04-14T19:01:24Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/web/PreferenceBackedHostNum.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.ichi2.anki.web;\n+\n+import android.content.SharedPreferences;\n+\n+import com.ichi2.libanki.Consts;\n+import com.ichi2.libanki.sync.HostNum;\n+\n+import timber.log.Timber;\n+\n+public class PreferenceBackedHostNum extends HostNum {\n+\n+    private final SharedPreferences mPreferences;\n+    private String mHostNum;\n+\n+    public PreferenceBackedHostNum(String hostNum, SharedPreferences preferences) {\n+        super();\n+        this.mHostNum = hostNum;\n+        this.mPreferences = preferences;\n+    }\n+\n+\n+    public static PreferenceBackedHostNum fromPreferences(SharedPreferences preferences) {\n+        String hostNum = preferences.getString(\"hostNum\", null);\n+        if (hostNum == null) {\n+            return new PreferenceBackedHostNum(Consts.DEFAULT_HOST_NUM, preferences);\n+        }\n+        return new PreferenceBackedHostNum(hostNum, preferences);\n+    }\n+\n+    @Override\n+    public String getHostNum() {\n+        return mHostNum;", "originalCommit": "f661460a79085e6b1b2b8ade3dc3f67627ff36ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NzE2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408477165", "bodyText": "SharedPreferences is a cache if I understand correctly?", "author": "mikehardy", "createdAt": "2020-04-14T22:39:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2NjgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5MjIxMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408492211", "bodyText": "Wasn't aware of SharedPreferences being a cache, but that's just a lack of Android knowledge, Thanks!", "author": "david-allison-1", "createdAt": "2020-04-14T23:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2NjgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1NzYyMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408457622", "bodyText": "In the context of this commit at least (I'm reviewing commit by commit) having an abstract class here just to wrap a String, when it's used as a String everywhere else, doesn't seem to add value. Perhaps I will be enlightened in the rest of the commits though...", "author": "mikehardy", "createdAt": "2020-04-14T21:51:04Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sync/HostNum.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package com.ichi2.libanki.sync;\n+\n+/** Not part of libAnki directly, but abstracts out Preferences to a libAnki context */\n+public abstract class HostNum {", "originalCommit": "1e308055c9500de5a13f599c7a4b3378f92afc5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5MzE3OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408493179", "bodyText": "Just works as a mutable reference to a string. Directly using the string means that we'd need to re-instantiate our class hierarchy after Syncer executes.", "author": "david-allison-1", "createdAt": "2020-04-14T23:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1NzYyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NjY2Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408476663", "bodyText": "Ah, now I'm enlightened. Here's an idea though - instead of an abstract and two concretes, why not one concrete, then the Test one just extends the concrete and overrides what you need? I did that a lot in my CardTemplateEditor odyssey and it worked fine while keeping the \"main code line\" (non test code) easier to understand with a flat (entity count == 1) hierarchy for simple objects", "author": "mikehardy", "createdAt": "2020-04-14T22:38:02Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/web/PreferenceBackedHostNum.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.ichi2.anki.web;\n+\n+import android.content.SharedPreferences;\n+\n+import com.ichi2.libanki.Consts;\n+import com.ichi2.libanki.sync.HostNum;\n+\n+import timber.log.Timber;\n+\n+public class PreferenceBackedHostNum extends HostNum {", "originalCommit": "f661460a79085e6b1b2b8ade3dc3f67627ff36ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4OTk1MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408489951", "bodyText": "I'd rather avoid polluting libAnki with Android-specific concerns (and as a plus, makes testing a lot faster as you don't need Robolectric \ud83d\ude09).\nDefinitely your call on this one, but how about concrete POJO, no test implementations, and a simpler PreferenceBackedHostNum deferring state to the base class?", "author": "david-allison-1", "createdAt": "2020-04-14T23:16:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NjY2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5MzEyOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408493128", "bodyText": "I guess I'm showing my relative insensitivity to test speed, I'd lean towards a simpler hierarchy and just eat the robolectric dependency but I recognize my test rig is reasonably quick and these things do add up. I think I worked around this by essentially having a static factory that called getNewXXX on the concrete one in mainline and then in the test code I override that and had it return a super simple one. Maybe that structure could work to keep mainline squeaky but still have fast + simple tests?", "author": "mikehardy", "createdAt": "2020-04-14T23:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NjY2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwMjk5Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408502997", "bodyText": "Static factories are far too Java for my liking. I'll go for the original suggestion before this is up for re-review.", "author": "david-allison-1", "createdAt": "2020-04-14T23:57:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NjY2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3NTA1Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408975057", "bodyText": "I swapped this around (POJO, and Preference-based concrete) to ensure we don't require a reference to Android in the base class, but repented on the factory.", "author": "david-allison-1", "createdAt": "2020-04-15T16:28:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3NjY2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3ODIxMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408478212", "bodyText": "if it's mildly unexpected but fine to continue without, should be Timber.w I think. Unimportant in the grand scheme, but just want to either have a good debate on or harmonize on log levels. I consider 'e' to be things where you need to bomb out of an activity entirely, almost completely unrecoverable but not quite a crash.", "author": "mikehardy", "createdAt": "2020-04-14T22:42:14Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sync/Syncer.java", "diffHunk": "@@ -249,6 +250,18 @@ public Syncer(Collection col, HttpSyncer server) {\n         return new Object[] { \"success\" };\n     }\n \n+\n+    private void trySetHostNum(JSONObject rMeta) {\n+        //We perform this as old version of the sync server may not provide the hostNum\n+        //And it's fine to continue without one.\n+        try {\n+            mHostNum.setHostNum(rMeta.getString(\"hostNum\"));\n+        } catch (Exception e) {\n+            Timber.e(e, \"Failed to set hostNum\");", "originalCommit": "f661460a79085e6b1b2b8ade3dc3f67627ff36ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5MDUyNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r408490524", "bodyText": "Noted.", "author": "david-allison-1", "createdAt": "2020-04-14T23:18:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3ODIxMg=="}], "type": "inlineReview"}, {"oid": "b09cdce9791c0b589be58d19777d5e7295c48578", "url": "https://github.com/ankidroid/Anki-Android/commit/b09cdce9791c0b589be58d19777d5e7295c48578", "message": "Read HostNum from AnkiWeb into Preferences and use\n\nFixes #4921\n\nBrings the HostNum class into the inheritance hierarchy to allow it to\nbe modified while the sync process is ongoing.\n\nAlso provides the reference to Syncer to allow it to persist the data\nwhen loaded from /meta/.", "committedDate": "2020-04-14T23:32:31Z", "type": "forcePushed"}, {"oid": "f46d2570a042382e1839971e54284ebda76b47b5", "url": "https://github.com/ankidroid/Anki-Android/commit/f46d2570a042382e1839971e54284ebda76b47b5", "message": "Add hostNum from preferences if set\n\nUnused, but handle the threading of the variable into the sync code", "committedDate": "2020-04-15T15:15:30Z", "type": "commit"}, {"oid": "24d40f80828a2397d56a3b8fbcfa48a6d4e13661", "url": "https://github.com/ankidroid/Anki-Android/commit/24d40f80828a2397d56a3b8fbcfa48a6d4e13661", "message": "Add unit tests for current code\n\nAnd ignored tests for hostNum changes", "committedDate": "2020-04-15T15:15:34Z", "type": "commit"}, {"oid": "3ee5dc370b0067c59aacbc526ca0d4cb7e17c970", "url": "https://github.com/ankidroid/Anki-Android/commit/3ee5dc370b0067c59aacbc526ca0d4cb7e17c970", "message": "NF: Extract getUrlPrefix()\n\nAnki removed SYNC_MEDIA_BASE, we work towards this", "committedDate": "2020-04-15T15:15:34Z", "type": "commit"}, {"oid": "7edd570a5f69f679f1930c90b75f4afc28906676", "url": "https://github.com/ankidroid/Anki-Android/commit/7edd570a5f69f679f1930c90b75f4afc28906676", "message": "NF: Extract isUsingCustomSyncServer()\n\nRefactoring for code clarity", "committedDate": "2020-04-15T15:15:34Z", "type": "commit"}, {"oid": "d373194a9e21ee5c837911428314c6b8feba8bc7", "url": "https://github.com/ankidroid/Anki-Android/commit/d373194a9e21ee5c837911428314c6b8feba8bc7", "message": "Add more tests before changes\n\nRegarding the value if one preference is found and the other fails.", "committedDate": "2020-04-15T15:15:34Z", "type": "commit"}, {"oid": "ace2aca25d58d77f8be4f2d9f656e4e4ce800af3", "url": "https://github.com/ankidroid/Anki-Android/commit/ace2aca25d58d77f8be4f2d9f656e4e4ce800af3", "message": "NF: Extract getDefaultAnkiWebUrl()", "committedDate": "2020-04-15T15:15:35Z", "type": "commit"}, {"oid": "419119928976172901609064a825b030118a7637", "url": "https://github.com/ankidroid/Anki-Android/commit/419119928976172901609064a825b030118a7637", "message": "Remove SYNC_MEDIA_BASE and fix bug", "committedDate": "2020-04-15T15:15:35Z", "type": "commit"}, {"oid": "ad6b66c9a81b7bd61500cdd0a0198cfdbbda877b", "url": "https://github.com/ankidroid/Anki-Android/commit/ad6b66c9a81b7bd61500cdd0a0198cfdbbda877b", "message": "NF: Add comment", "committedDate": "2020-04-15T15:15:35Z", "type": "commit"}, {"oid": "c3978ff2c6226e5f9fce5993935f402c7f321701", "url": "https://github.com/ankidroid/Anki-Android/commit/c3978ff2c6226e5f9fce5993935f402c7f321701", "message": "Removed identical FullSyncer method", "committedDate": "2020-04-15T15:15:35Z", "type": "commit"}, {"oid": "dc2060f519a95715d1e1dbb3927ffdd387bd8751", "url": "https://github.com/ankidroid/Anki-Android/commit/dc2060f519a95715d1e1dbb3927ffdd387bd8751", "message": "Use HostNum for Load Balancing\n\nWe don't set the variable yet, but we move to a point where we can set\nit and it will be handled correctly.", "committedDate": "2020-04-15T15:15:36Z", "type": "commit"}, {"oid": "2548489b47e2c06cd9baf29ff225f4e976fcf126", "url": "https://github.com/ankidroid/Anki-Android/commit/2548489b47e2c06cd9baf29ff225f4e976fcf126", "message": "Read HostNum from AnkiWeb into Preferences and use\n\nFixes #4921\n\nBrings the HostNum class into the inheritance hierarchy to allow it to\nbe modified while the sync process is ongoing.\n\nAlso provides the reference to Syncer to allow it to persist the data\nwhen loaded from /meta/.", "committedDate": "2020-04-15T15:16:27Z", "type": "commit"}, {"oid": "35d5a4d3d3f1a94f1e28c69690b7730e1bdc6a1b", "url": "https://github.com/ankidroid/Anki-Android/commit/35d5a4d3d3f1a94f1e28c69690b7730e1bdc6a1b", "message": "Remove LEGACY_SYNC_BASE\n\nConfirmed with Damien that methods were unused:\n\n> Those two endpoints look like they could be removed.\n> Upgrade was an old endpoint that upgraded Anki 1.x collections,\n> and users need to sign up for an account in a webview these days.\n\nhttps://github.com/ankidroid/Anki-Android/issues/4921\n#issuecomment-613729490", "committedDate": "2020-04-15T15:16:30Z", "type": "commit"}, {"oid": "e264daf84be7133b515275255628fb961c302a3e", "url": "https://github.com/ankidroid/Anki-Android/commit/e264daf84be7133b515275255628fb961c302a3e", "message": "NF: Extract prefs to CustomSyncServer", "committedDate": "2020-04-15T15:16:31Z", "type": "commit"}, {"oid": "5103b7512af367b8a1b2e07c54bda69fbab7aae1", "url": "https://github.com/ankidroid/Anki-Android/commit/5103b7512af367b8a1b2e07c54bda69fbab7aae1", "message": "Remove HostNum on logoff or sync server change\n\nThe hostnum is only valid for the account, on these changes, the\npreference is no longer valid and should be unset.", "committedDate": "2020-04-15T15:16:31Z", "type": "commit"}, {"oid": "a5f1539fe2903f9997c7171c659d86b98fed4626", "url": "https://github.com/ankidroid/Anki-Android/commit/a5f1539fe2903f9997c7171c659d86b98fed4626", "message": "Convert HostNum to Integer\n\nReview Discussion - AnkiWeb guarantees that the HostNum is an integer\nand allowing a string means we can get URL injection.", "committedDate": "2020-04-15T16:26:17Z", "type": "commit"}, {"oid": "d2b3cdd27c4ebf36c3dca198df5f29c95a7ef7fd", "url": "https://github.com/ankidroid/Anki-Android/commit/d2b3cdd27c4ebf36c3dca198df5f29c95a7ef7fd", "message": "NF: HostNum - Reduce coupling to Preferences\n\nVia factory class\n\nEnsures that we keep code modifications to the hostNum consistent.", "committedDate": "2020-04-15T16:28:37Z", "type": "forcePushed"}, {"oid": "a9ef22b685de2acb6ddd82b831447e80801f5629", "url": "https://github.com/ankidroid/Anki-Android/commit/a9ef22b685de2acb6ddd82b831447e80801f5629", "message": "NF: HostNum - Reduce coupling to Preferences\n\nVia factory class\n\nEnsures that we keep code modifications to the hostNum consistent.", "committedDate": "2020-04-15T16:42:12Z", "type": "commit"}, {"oid": "a9ef22b685de2acb6ddd82b831447e80801f5629", "url": "https://github.com/ankidroid/Anki-Android/commit/a9ef22b685de2acb6ddd82b831447e80801f5629", "message": "NF: HostNum - Reduce coupling to Preferences\n\nVia factory class\n\nEnsures that we keep code modifications to the hostNum consistent.", "committedDate": "2020-04-15T16:42:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MDQwMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409050401", "bodyText": "For all your new classes you're missing the copyright header, can you copy/splat one in, change it to your preferred ankidroid email, then copy/splat that in to the rest of the new files?", "author": "mikehardy", "createdAt": "2020-04-15T18:33:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/web/CustomSyncServer.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.ichi2.anki.web;", "originalCommit": "a9ef22b685de2acb6ddd82b831447e80801f5629", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MTU4Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409091583", "bodyText": "Any standard that you're looking for? Is the following OK?\n\n/*\nCopyright (c) 2020 David Allison <[redactedForWeb]>                     \n                                                                                    \nThis program is free software; you can redistribute it and/or modify it under       \nthe terms of the GNU General Public License as published by the Free Software       \nFoundation; either version 3 of the License, or (at your option) any later          \nversion.                                                                            \n                                                                                    \nThis program is distributed in the hope that it will be useful, but WITHOUT ANY     \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A     \nPARTICULAR PURPOSE. See the GNU General Public License for more details.            \n                                                                                    \nYou should have received a copy of the GNU General Public License along with        \nthis program.  If not, see <http://www.gnu.org/licenses/>. \n*/                         \n\n\nEDIT; I'll be bold to save time. Throw it back if it needs work.", "author": "david-allison-1", "createdAt": "2020-04-15T19:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MDQwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5NTM0NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409095345", "bodyText": "Whatever is all over in the code now, e.g.\n\n  \n    \n      Anki-Android/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java\n    \n    \n        Lines 1 to 17\n      in\n      03a6772\n    \n    \n    \n    \n\n        \n          \n           /**************************************************************************************** \n        \n\n        \n          \n            * Copyright (c) 2009 Edu Zamora <edu.zasu@gmail.com>                                   * \n        \n\n        \n          \n            * Copyright (c) 2009 Casey Link <unnamedrambler@gmail.com>                             * \n        \n\n        \n          \n            * Copyright (c) 2014 Timothy Rae <perceptualchaos2@gmail.com>                          * \n        \n\n        \n          \n            *                                                                                      * \n        \n\n        \n          \n            * This program is free software; you can redistribute it and/or modify it under        * \n        \n\n        \n          \n            * the terms of the GNU General Public License as published by the Free Software        * \n        \n\n        \n          \n            * Foundation; either version 3 of the License, or (at your option) any later           * \n        \n\n        \n          \n            * version.                                                                             * \n        \n\n        \n          \n            *                                                                                      * \n        \n\n        \n          \n            * This program is distributed in the hope that it will be useful, but WITHOUT ANY      * \n        \n\n        \n          \n            * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      * \n        \n\n        \n          \n            * PARTICULAR PURPOSE. See the GNU General Public License for more details.             * \n        \n\n        \n          \n            *                                                                                      * \n        \n\n        \n          \n            * You should have received a copy of the GNU General Public License along with         * \n        \n\n        \n          \n            * this program.  If not, see <http://www.gnu.org/licenses/>.                           * \n        \n\n        \n          \n            ****************************************************************************************/", "author": "mikehardy", "createdAt": "2020-04-15T19:53:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MDQwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MzU0OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409053548", "bodyText": "Can you add all the rules here? It is always an integer, it should be reset wiped under xyz conditions? It's not documented anywhere else and this seems like the place to set out the full set of biz reqs", "author": "mikehardy", "createdAt": "2020-04-15T18:38:40Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sync/HostNum.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.ichi2.libanki.sync;\n+\n+import com.ichi2.libanki.Consts;\n+\n+/**\n+ * The server provides hostNum in the /sync/meta call. All requests after that (including future meta requests)\n+ * should use that hostNum to construct the sync URL, until a future /sync/meta call advises otherwise.\n+ *", "originalCommit": "a9ef22b685de2acb6ddd82b831447e80801f5629", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NzIyOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409057229", "bodyText": "Just out of curiosity since you just up on SharedPreferences, why commit here vs apply? I scanned back and saw you used apply (correctly, I believe) in PreferenceBackedHostNum, and I think apply would be fine here as well. For the same reasons commit is typically unnecessary and may slow things down, I think it may be unnecessary and just slow testing down here, but perhaps I'm about to learn something about SharedPreferences, or I read it wrong", "author": "mikehardy", "createdAt": "2020-04-15T18:44:55Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sync/HttpSyncerTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package com.ichi2.libanki.sync;\n+\n+import android.content.SharedPreferences;\n+\n+import com.ichi2.anki.AnkiDroidApp;\n+\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class HttpSyncerTest {\n+    private static String sCustomServerWithNoFormatting = \"https://sync.example.com/\";\n+    private static String sCustomServerWithFormatting   = \"https://sync%s.example.com/\";\n+    private static final String sDefaultUrlNoHostNum    = \"https://sync.ankiweb.net/sync/\";\n+    private static final String sDefaultUrlWithHostNum  = \"https://sync1.ankiweb.net/sync/\";\n+\n+\n+    @Test\n+    public void getDefaultMediaUrlWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlNoHostNum));\n+    }\n+\n+\n+    @Test\n+    public void getDefaultMediaUrlWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlWithHostNum));\n+    }\n+\n+\n+    @Test\n+    @Ignore(\"Not yet supported\")\n+    public void getCustomMediaUrlWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+        setCustomServer(sCustomServerWithFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync.example.com/sync/\"));\n+    }\n+\n+\n+    @Test\n+    @Ignore(\"Not yet supported\")\n+    public void getCustomMediaUrlWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+        setCustomServer(sCustomServerWithFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync1.example.com/sync/\"));\n+    }\n+\n+    @Test\n+    public void getUnformattedCustomMediaUrlWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+        setCustomServer(sCustomServerWithNoFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync.example.com/sync/\"));\n+    }\n+\n+    @Test\n+    public void getUnformattedCustomMediaUrlWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+        setCustomServer(sCustomServerWithNoFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync.example.com/sync/\"));\n+    }\n+\n+    @Test\n+    public void invalidSettingReturnsCorrectResultWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+        setCustomServerWithNoUrl();\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlNoHostNum));\n+    }\n+\n+    @Test\n+    public void invalidSettingReturnsCorrectResultWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+        setCustomServerWithNoUrl();\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlWithHostNum));\n+    }\n+\n+    private void setCustomServerWithNoUrl() {\n+        SharedPreferences userPreferences = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance());\n+        userPreferences.edit().putBoolean(\"useCustomSyncServer\", true).commit();", "originalCommit": "a9ef22b685de2acb6ddd82b831447e80801f5629", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3MzQ5Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409073492", "bodyText": "Hmm... that's a mistake (and linting should have picked it up). Thanks!", "author": "david-allison-1", "createdAt": "2020-04-15T19:12:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NzIyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4OTE2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409089165", "bodyText": "Oh... it's in test code, maybe different linting rules?", "author": "david-allison-1", "createdAt": "2020-04-15T19:41:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NzIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NzM3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409057376", "bodyText": "same commit vs apply question here, one answer answers both", "author": "mikehardy", "createdAt": "2020-04-15T18:45:09Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sync/HttpSyncerTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package com.ichi2.libanki.sync;\n+\n+import android.content.SharedPreferences;\n+\n+import com.ichi2.anki.AnkiDroidApp;\n+\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class HttpSyncerTest {\n+    private static String sCustomServerWithNoFormatting = \"https://sync.example.com/\";\n+    private static String sCustomServerWithFormatting   = \"https://sync%s.example.com/\";\n+    private static final String sDefaultUrlNoHostNum    = \"https://sync.ankiweb.net/sync/\";\n+    private static final String sDefaultUrlWithHostNum  = \"https://sync1.ankiweb.net/sync/\";\n+\n+\n+    @Test\n+    public void getDefaultMediaUrlWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlNoHostNum));\n+    }\n+\n+\n+    @Test\n+    public void getDefaultMediaUrlWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlWithHostNum));\n+    }\n+\n+\n+    @Test\n+    @Ignore(\"Not yet supported\")\n+    public void getCustomMediaUrlWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+        setCustomServer(sCustomServerWithFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync.example.com/sync/\"));\n+    }\n+\n+\n+    @Test\n+    @Ignore(\"Not yet supported\")\n+    public void getCustomMediaUrlWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+        setCustomServer(sCustomServerWithFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync1.example.com/sync/\"));\n+    }\n+\n+    @Test\n+    public void getUnformattedCustomMediaUrlWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+        setCustomServer(sCustomServerWithNoFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync.example.com/sync/\"));\n+    }\n+\n+    @Test\n+    public void getUnformattedCustomMediaUrlWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+        setCustomServer(sCustomServerWithNoFormatting);\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(\"https://sync.example.com/sync/\"));\n+    }\n+\n+    @Test\n+    public void invalidSettingReturnsCorrectResultWithNoHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(null);\n+        setCustomServerWithNoUrl();\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlNoHostNum));\n+    }\n+\n+    @Test\n+    public void invalidSettingReturnsCorrectResultWithHostNum() {\n+        HttpSyncer underTest = getServerWithHostNum(1);\n+        setCustomServerWithNoUrl();\n+\n+        String syncUrl = underTest.syncURL();\n+\n+        assertThat(syncUrl, is(sDefaultUrlWithHostNum));\n+    }\n+\n+    private void setCustomServerWithNoUrl() {\n+        SharedPreferences userPreferences = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance());\n+        userPreferences.edit().putBoolean(\"useCustomSyncServer\", true).commit();\n+    }\n+\n+    private void setCustomServer(String s) {\n+\n+        SharedPreferences userPreferences = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance());\n+        SharedPreferences.Editor e = userPreferences.edit();\n+        e.putBoolean(\"useCustomSyncServer\", true);\n+        e.putString(\"syncBaseUrl\", s);\n+        e.commit();", "originalCommit": "a9ef22b685de2acb6ddd82b831447e80801f5629", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1OTg2MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409059861", "bodyText": "You did this another way in a different check, and it is because of the nullability/non-nullability of preferences. Could you eat the null check consistently in CustomSyncServer then everyone can just do a simple call to CustomSyncServer.isEnabled(prefs)? (whether prefs is null or not). Less code in the end, fewer mental gotos", "author": "mikehardy", "createdAt": "2020-04-15T18:49:28Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sync/HttpSyncer.java", "diffHunk": "@@ -454,12 +450,36 @@ public static ByteArrayInputStream getInputStream(String string) {\n     public String syncURL() {\n         // Allow user to specify custom sync server\n         SharedPreferences userPreferences = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance());\n-        if (userPreferences != null && userPreferences.getBoolean(\"useCustomSyncServer\", false)) {\n-            Uri syncBase = Uri.parse(userPreferences.getString(\"syncBaseUrl\", Consts.SYNC_BASE));\n-            return syncBase.buildUpon().appendPath(\"sync\").toString() + \"/\";\n+        if (isUsingCustomSyncServer(userPreferences)) {", "originalCommit": "a9ef22b685de2acb6ddd82b831447e80801f5629", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3NTc3NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409075775", "bodyText": "Null handling is unexpected functionality and you typically want to define the default, I'm happy swap for implicit code if it's a member of the class, but not for the global call.\nI can add a default as a compromise", "author": "david-allison-1", "createdAt": "2020-04-15T19:16:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1OTg2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NzU0NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409087544", "bodyText": "meh, I just see it as a contract. Especially with annotations, but if you feel strongly \"implementor's choice\"", "author": "mikehardy", "createdAt": "2020-04-15T19:38:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1OTg2MQ=="}], "type": "inlineReview"}, {"oid": "a014eda7ae855eb46c6dfd209ff994c97dde3277", "url": "https://github.com/ankidroid/Anki-Android/commit/a014eda7ae855eb46c6dfd209ff994c97dde3277", "message": "NF: Preferences - commit -> apply", "committedDate": "2020-04-15T19:42:25Z", "type": "commit"}, {"oid": "2b9eb3b2bc2610f128564cf1cfcd75670f97f015", "url": "https://github.com/ankidroid/Anki-Android/commit/2b9eb3b2bc2610f128564cf1cfcd75670f97f015", "message": "NF: HostNum: Added requirements", "committedDate": "2020-04-15T19:53:29Z", "type": "commit"}, {"oid": "1a9aeac237bc4f53451408f6fd428dfb7d6c114a", "url": "https://github.com/ankidroid/Anki-Android/commit/1a9aeac237bc4f53451408f6fd428dfb7d6c114a", "message": "NF: Copyright", "committedDate": "2020-04-15T19:56:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5ODgxNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409098814", "bodyText": "Issue found: The utility class name 'HostNumFactory' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'", "author": "timrae", "createdAt": "2020-04-15T19:59:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/web/HostNumFactory.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.web;\n+\n+import android.content.Context;\n+\n+import com.ichi2.anki.AnkiDroidApp;\n+import com.ichi2.libanki.sync.HostNum;\n+\n+public class HostNumFactory {", "originalCommit": "1a9aeac237bc4f53451408f6fd428dfb7d6c114a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5ODgyMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6004#discussion_r409098821", "bodyText": "Issue found: The utility class name 'CustomSyncServer' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper)'", "author": "timrae", "createdAt": "2020-04-15T19:59:35Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/web/CustomSyncServer.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.web;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import timber.log.Timber;\n+\n+public class CustomSyncServer {", "originalCommit": "1a9aeac237bc4f53451408f6fd428dfb7d6c114a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}