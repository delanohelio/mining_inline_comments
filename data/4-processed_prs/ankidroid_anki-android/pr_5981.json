{"pr_number": 5981, "pr_title": "Cache deck split", "pr_createdAt": "2020-04-12T10:25:26Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/5981", "timeline": [{"oid": "de92f72d53bb4500d3f0631f73dcbdef29a360d2", "url": "https://github.com/ankidroid/Anki-Android/commit/de92f72d53bb4500d3f0631f73dcbdef29a360d2", "message": "Cache path name", "committedDate": "2020-04-12T10:48:34Z", "type": "forcePushed"}, {"oid": "d91893a64ce9473c2fed4ae09186ff4788dadf0d", "url": "https://github.com/ankidroid/Anki-Android/commit/d91893a64ce9473c2fed4ae09186ff4788dadf0d", "message": "Cache path name", "committedDate": "2020-04-12T12:17:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjEyMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212122", "bodyText": "[Edited: this is correct on re-read, disregard this comment]\nI don't believe this is correct. By definition a child path will have more parts than a parent path, so their size will be unequal, so this will return false even if the parent is the valid parent of the child.\nPython seems more expressive in this sense - here is the upstream code - so the implementations are not directly comparable unfortunately\nhttps://github.com/ankitects/anki/blob/0c5f22f4ae7be0b1e5ffcb1d5a8dddd9f73930f0/pylib/anki/decks.py#L274-L277", "author": "mikehardy", "createdAt": "2020-04-12T15:16:10Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -521,9 +521,14 @@ private boolean _canDragAndDrop(String draggedDeckName, String ontoDeckName) {\n \n     private boolean _isParent(String parentDeckName, String childDeckName) {\n         List<String> parentDeckPath = path(parentDeckName);\n+        List<String> childDeckPath = path(childDeckName);\n         parentDeckPath.add(basename(childDeckName));\n-\n-        Iterator<String> cpIt = path(childDeckName).iterator();\n+        \n+        if (parentDeckPath.size() != childDeckPath.size()) {\n+            return false;", "originalCommit": "dfcac93a3bd9b12612339c268a88e0959c868692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjcyNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212726", "bodyText": "Oh wait! I didn't see the +1, this is correct. Just needs a whitespace difference", "author": "mikehardy", "createdAt": "2020-04-12T15:19:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjM0OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212348", "bodyText": "AnkiDroid coding standards - whitespace around operators so they stand out visually\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(int i=0; i<path.size() - 1; i++) {\n          \n          \n            \n                    for(int i = 0; i < path.size() - 1; i++) {", "author": "mikehardy", "createdAt": "2020-04-12T15:17:32Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -574,7 +574,8 @@ public String _ensureParents(String name) {\n         if (path.size() < 2) {\n             return name;\n         }\n-        for(String p : path.subList(0, path.size() - 1)) {\n+        for(int i=0; i<path.size() - 1; i++) {", "originalCommit": "49a9824a8cb037e01009e35e3580a89d284ad5b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjgyMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212820", "bodyText": "whitespace around operators so they stand out\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (parentDeckPath.length +1 != childDeckPath.length) {\n          \n          \n            \n                    if (parentDeckPath.length + 1 != childDeckPath.length) {", "author": "mikehardy", "createdAt": "2020-04-12T15:20:43Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -520,17 +520,15 @@ private boolean _canDragAndDrop(String draggedDeckName, String ontoDeckName) {\n \n \n     private boolean _isParent(String parentDeckName, String childDeckName) {\n-        List<String> parentDeckPath = path(parentDeckName);\n-        List<String> childDeckPath = path(childDeckName);\n+        String[] parentDeckPath = path(parentDeckName);\n+        String[] childDeckPath = path(childDeckName);\n         \n-        if (parentDeckPath.size() +1 != childDeckName.size()) {\n+        if (parentDeckPath.length +1 != childDeckPath.length) {", "originalCommit": "def41eacd135d5e2f56304c3e19d323fca451109", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjg2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212869", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i=0; i < parentDeckPath.length; i++) {\n          \n          \n            \n                    for (int i = 0; i < parentDeckPath.length; i++) {", "author": "mikehardy", "createdAt": "2020-04-12T15:21:06Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -520,17 +520,15 @@ private boolean _canDragAndDrop(String draggedDeckName, String ontoDeckName) {\n \n \n     private boolean _isParent(String parentDeckName, String childDeckName) {\n-        List<String> parentDeckPath = path(parentDeckName);\n-        List<String> childDeckPath = path(childDeckName);\n+        String[] parentDeckPath = path(parentDeckName);\n+        String[] childDeckPath = path(childDeckName);\n         \n-        if (parentDeckPath.size() +1 != childDeckName.size()) {\n+        if (parentDeckPath.length +1 != childDeckPath.length) {\n             return false;\n         }\n-        \n-        Iterator<String> cpIt = childDeckPath.iterator();\n-        Iterator<String> ppIt = parentDeckPath.iterator();\n-        while (cpIt.hasNext() && ppIt.hasNext()) {\n-            if (!cpIt.next().equals(ppIt.next())) {\n+\n+        for (int i=0; i < parentDeckPath.length; i++) {", "originalCommit": "def41eacd135d5e2f56304c3e19d323fca451109", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjk4OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407212988", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i=0; i<ancestorDeckPath.length; i++) {\n          \n          \n            \n                    for (int i = 0; i < ancestorDeckPath.length; i++) {\n          \n      \n    \n    \n  \n\nI'm leaving these whitespace comments as suggestions but if you actually commit them like this the commit history will be hash and I'll want to squash, better to rebase and fix the original commits so I can rebase+merge and preserve the otherwise-beautifully separated commits", "author": "mikehardy", "createdAt": "2020-04-12T15:22:08Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -539,29 +537,28 @@ private boolean _isParent(String parentDeckName, String childDeckName) {\n \n \n     private boolean _isAncestor(String ancestorDeckName, String descendantDeckName) {\n-        List<String> ancestorDeckPath = path(ancestorDeckName);\n-        List<String> descendantDeckPath = path(descendantDeckName);\n-        if (ancestorDeckPath.size() > descendantDeckName.size()) {\n+        String[] ancestorDeckPath = path(ancestorDeckName);\n+        String[] descendantDeckPath = path(descendantDeckName);\n+        if (ancestorDeckPath.length > descendantDeckPath.length) {\n             return false;\n         }\n-        Iterator<String> apIt = ancestorDeckPath.iterator();\n-        Iterator<String> dpIt = descendantDeckPath.iterator();\n-        while (apIt.hasNext() && dpIt.hasNext()) {\n-            if (!apIt.next().equals(dpIt.next())) {\n+\n+        for (int i=0; i<ancestorDeckPath.length; i++) {", "originalCommit": "def41eacd135d5e2f56304c3e19d323fca451109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNjEyOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407216128", "bodyText": "I did force push a version directly with the correct spaces (hopefully)\nYou may have remarked that is what I usually do each time a PR has an error. To leave a beautiful commit history", "author": "Arthur-Milchior", "createdAt": "2020-04-12T15:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNjY1OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407216659", "bodyText": "Yes - your commit histories are usually very nice, to the extent they can be (sometimes things are messy because life is messy). Ironically though, this is all fixed now except this one line that has the comment pinned to it :-) - line 546 of libanki/Decks.java", "author": "mikehardy", "createdAt": "2020-04-12T15:51:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxMjk4OA=="}], "type": "inlineReview"}, {"oid": "8d2c9cc56eda37074b946c2a13b82400ebe3ab7e", "url": "https://github.com/ankidroid/Anki-Android/commit/8d2c9cc56eda37074b946c2a13b82400ebe3ab7e", "message": "Cache path name", "committedDate": "2020-04-12T15:40:54Z", "type": "forcePushed"}, {"oid": "be225401cb09ee3a2b014ebd45313523804d8e1e", "url": "https://github.com/ankidroid/Anki-Android/commit/be225401cb09ee3a2b014ebd45313523804d8e1e", "message": "Cache path name", "committedDate": "2020-04-12T16:21:32Z", "type": "forcePushed"}, {"oid": "2f3fb9a811282267b7c10be1a3f0e6e1a2094794", "url": "https://github.com/ankidroid/Anki-Android/commit/2f3fb9a811282267b7c10be1a3f0e6e1a2094794", "message": "Cache path name", "committedDate": "2020-04-12T16:24:09Z", "type": "forcePushed"}, {"oid": "e0e9a121930d7113257e092c82a0c89fe7530519", "url": "https://github.com/ankidroid/Anki-Android/commit/e0e9a121930d7113257e092c82a0c89fe7530519", "message": "Decks._path to path\n\nAs in upstream anki", "committedDate": "2020-04-12T18:15:11Z", "type": "commit"}, {"oid": "adb39fe54b829fa97203c0dd3c68068104698526", "url": "https://github.com/ankidroid/Anki-Android/commit/adb39fe54b829fa97203c0dd3c68068104698526", "message": "uses Decks.path everywhere possible", "committedDate": "2020-04-12T18:17:01Z", "type": "commit"}, {"oid": "2a347aa0246d538725499629f3c83891f218860e", "url": "https://github.com/ankidroid/Anki-Android/commit/2a347aa0246d538725499629f3c83891f218860e", "message": "basename public as in upstream", "committedDate": "2020-04-12T18:17:02Z", "type": "commit"}, {"oid": "7ad8712339d710f99fbc31be50db9aecf8eb9a65", "url": "https://github.com/ankidroid/Anki-Android/commit/7ad8712339d710f99fbc31be50db9aecf8eb9a65", "message": "remove duplicate code", "committedDate": "2020-04-12T18:17:02Z", "type": "commit"}, {"oid": "16cd407614563b753f4e51a7a02ca517f812f5bd", "url": "https://github.com/ankidroid/Anki-Android/commit/16cd407614563b753f4e51a7a02ca517f812f5bd", "message": "use basename where possible", "committedDate": "2020-04-12T18:17:02Z", "type": "commit"}, {"oid": "e40d256f79dfae7cf771f3ca614e56e79c036701", "url": "https://github.com/ankidroid/Anki-Android/commit/e40d256f79dfae7cf771f3ca614e56e79c036701", "message": "correct _isParent similarly to upstream", "committedDate": "2020-04-12T18:17:02Z", "type": "commit"}, {"oid": "3b2e4b63c0352895eec91e05829ee553c3b8f420", "url": "https://github.com/ankidroid/Anki-Android/commit/3b2e4b63c0352895eec91e05829ee553c3b8f420", "message": "Correct _isAncestor As in upstream", "committedDate": "2020-04-12T18:17:02Z", "type": "commit"}, {"oid": "104a1fbc348cc31835937b4e017cbc9fca14e105", "url": "https://github.com/ankidroid/Anki-Android/commit/104a1fbc348cc31835937b4e017cbc9fca14e105", "message": "Don't add to parentDeckName\n\nThis was useless", "committedDate": "2020-04-12T18:17:02Z", "type": "commit"}, {"oid": "1183af8dc5adf4427ef707f1c7e6b47256c5e150", "url": "https://github.com/ankidroid/Anki-Android/commit/1183af8dc5adf4427ef707f1c7e6b47256c5e150", "message": "_ensureParents without sublist\n\nUselessly slow for what it's worth here", "committedDate": "2020-04-12T18:17:02Z", "type": "commit"}, {"oid": "882db7feedb7adee0ba2a9441ee1ea4b64806f03", "url": "https://github.com/ankidroid/Anki-Android/commit/882db7feedb7adee0ba2a9441ee1ea4b64806f03", "message": "Cache path name", "committedDate": "2020-04-12T18:17:02Z", "type": "forcePushed"}, {"oid": "27eb4bcc6de9d8bdd126233fd7ba11ff24109433", "url": "https://github.com/ankidroid/Anki-Android/commit/27eb4bcc6de9d8bdd126233fd7ba11ff24109433", "message": "Decks.path return array", "committedDate": "2020-04-12T18:19:21Z", "type": "commit"}, {"oid": "701fbb5b7be3e152d743a8184f8178f8fcb069a1", "url": "https://github.com/ankidroid/Anki-Android/commit/701fbb5b7be3e152d743a8184f8178f8fcb069a1", "message": "Cache path name", "committedDate": "2020-04-12T18:19:21Z", "type": "commit"}, {"oid": "701fbb5b7be3e152d743a8184f8178f8fcb069a1", "url": "https://github.com/ankidroid/Anki-Android/commit/701fbb5b7be3e152d743a8184f8178f8fcb069a1", "message": "Cache path name", "committedDate": "2020-04-12T18:19:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIzNDY3NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5981#discussion_r407234674", "bodyText": "Issue found: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.", "author": "timrae", "createdAt": "2020-04-12T18:21:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -533,23 +533,32 @@ private boolean _isParent(String parentDeckName, String childDeckName) {\n \n \n     private boolean _isAncestor(String ancestorDeckName, String descendantDeckName) {\n-        Iterator<String> apIt = _path(ancestorDeckName).iterator();\n-        Iterator<String> dpIt = _path(descendantDeckName).iterator();\n-        while (apIt.hasNext() && dpIt.hasNext()) {\n-            if (!apIt.next().equals(dpIt.next())) {\n+        String[] ancestorDeckPath = path(ancestorDeckName);\n+        String[] descendantDeckPath = path(descendantDeckName);\n+        if (ancestorDeckPath.length > descendantDeckPath.length) {\n+            return false;\n+        }\n+\n+        for (int i = 0; i < ancestorDeckPath.length; i++) {\n+            if (ancestorDeckPath[i] != descendantDeckPath[i]) {\n                 return false;\n             }\n         }\n         return true;\n     }\n \n \n-    private List<String> _path(String name) {\n-        return Arrays.asList(name.split(\"::\", -1));\n+    private static HashMap<String, String[]> pathCache = new HashMap();", "originalCommit": "701fbb5b7be3e152d743a8184f8178f8fcb069a1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}