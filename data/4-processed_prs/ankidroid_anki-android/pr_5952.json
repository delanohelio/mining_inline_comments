{"pr_number": 5952, "pr_title": "CardViewer: Correctly Decode typed text in <input>", "pr_createdAt": "2020-04-08T12:49:33Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/5952", "timeline": [{"oid": "44f3f8b6b6a63ea8e19c5957ffa68296175fa368", "url": "https://github.com/ankidroid/Anki-Android/commit/44f3f8b6b6a63ea8e19c5957ffa68296175fa368", "message": "NF: Extract CardViewerWebClient\n\nThis helps with testing", "committedDate": "2020-04-08T11:38:59Z", "type": "commit"}, {"oid": "cc8c7c80f2e7234e4a944acc8ae0d6a916ade518", "url": "https://github.com/ankidroid/Anki-Android/commit/cc8c7c80f2e7234e4a944acc8ae0d6a916ade518", "message": "NF: CardViewerWebClient Add Logging", "committedDate": "2020-04-08T11:41:44Z", "type": "commit"}, {"oid": "62225f4da802971884308ea4c101461737076701", "url": "https://github.com/ankidroid/Anki-Android/commit/62225f4da802971884308ea4c101461737076701", "message": "URLEncode data before sending to Java\n\nFixes #5944\n\nPreviously, only some data was encoded. When an invalid sequence (single\n%) was entered, then the app would crash due to the decode failure.\n\nWe both fix this encoding in the JS, and if invalid data comes in for\nany reason, we show an error.", "committedDate": "2020-04-08T12:44:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ5OTg5OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5952#discussion_r405499898", "bodyText": "Issue found: The method 'filterUrl(String)' has an NPath complexity of 22176", "author": "timrae", "createdAt": "2020-04-08T12:52:07Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -3168,4 +2910,300 @@ public static int getSignalFromUrl(String url) {\n             return SIGNAL_UNHANDLED; //unknown, or not a signal.\n         }\n     }\n+\n+    protected class CardViewerWebClient extends WebViewClient {\n+        @Override\n+        @TargetApi(Build.VERSION_CODES.N)\n+        public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\n+            String url = request.getUrl().toString();\n+            Timber.i(\"Obtained URL from card: '%s'\", url);\n+            return filterUrl(url);\n+        }\n+\n+\n+        @Override\n+        @TargetApi(Build.VERSION_CODES.N)\n+        public WebResourceResponse shouldInterceptRequest(WebView view, WebResourceRequest request) {\n+            WebResourceResponse webResourceResponse = null;\n+            if (!AdaptionUtil.hasWebBrowser(getBaseContext())) {\n+                String scheme = request.getUrl().getScheme().trim();\n+                if (scheme.equalsIgnoreCase(\"http\") || scheme.equalsIgnoreCase(\"https\")) {\n+                    String response = getResources().getString(R.string.no_outgoing_link_in_cardbrowser);\n+                    webResourceResponse = new WebResourceResponse(\"text/html\", \"utf-8\", new ByteArrayInputStream(response.getBytes()));\n+                }\n+            }\n+            return webResourceResponse;\n+        }\n+\n+\n+        @Override\n+        @SuppressWarnings(\"deprecation\") // tracked as #5017 in github\n+        public boolean shouldOverrideUrlLoading(WebView view, String url) {\n+            return filterUrl(url);\n+        }\n+\n+\n+        // Filter any links using the custom \"playsound\" protocol defined in Sound.java.\n+        // We play sounds through these links when a user taps the sound icon.\n+        private boolean filterUrl(String url) {", "originalCommit": "62225f4da802971884308ea4c101461737076701", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ5OTkwOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5952#discussion_r405499909", "bodyText": "Issue found: JUnit tests should include assert() or fail()", "author": "timrae", "createdAt": "2020-04-08T12:52:08Z", "path": "AnkiDroid/src/test/java/com/ichi2/anki/AbstractFlashcardViewerTest.java", "diffHunk": "@@ -272,4 +285,40 @@ public void invalidEaseIsParsedFromSignal() {\n         String url = \"signal:answer_ease0\";\n         assertEquals(SIGNAL_NOOP, getSignalFromUrl(url));\n     }\n+\n+    @Test\n+    public void invalidEncodingDoesNotCrash() {", "originalCommit": "62225f4da802971884308ea4c101461737076701", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUyMzM1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5952#discussion_r405523354", "bodyText": "Yeah, maybe having a 250+ line sub-class inline isn't the best idea... ;-)", "author": "mikehardy", "createdAt": "2020-04-08T13:26:53Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -1494,265 +1494,7 @@ private WebView createWebView() {\n         webView.setScrollbarFadingEnabled(true);\n         Timber.d(\"Focusable = %s, Focusable in touch mode = %s\", webView.isFocusable(), webView.isFocusableInTouchMode());\n \n-        webView.setWebViewClient(new WebViewClient() {", "originalCommit": "44f3f8b6b6a63ea8e19c5957ffa68296175fa368", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}