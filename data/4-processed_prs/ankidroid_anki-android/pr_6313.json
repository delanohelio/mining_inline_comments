{"pr_number": 6313, "pr_title": "Handle 3-letter language roots correctly", "pr_createdAt": "2020-05-31T04:43:39Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6313", "timeline": [{"oid": "04b0b61a1714a2c7180a99000c93af55b6e390a4", "url": "https://github.com/ankidroid/Anki-Android/commit/04b0b61a1714a2c7180a99000c93af55b6e390a4", "message": "Handle 3-letter language roots correctly\n\nPreviously there was an expectation in the importer script that all\nlanguage codes had a 2-letter root, but many valid codes that Android\naccepts have 3-letter codes *and* collide with the 2-letter codes (fi vs fil)\n\nAdditionally, the 'yu' (Cantonese) custom code needed to map to 'yue'\n\nThis cleans up the import done earlier while adding Sorani that produced\ntruncated (3-letter to 2-letter) languages while adding all updated translations\nfrom crowdin", "committedDate": "2020-05-31T04:49:14Z", "type": "forcePushed"}, {"oid": "a57ebe5312afa7c0d4950604e4f5f9a43be3a8cc", "url": "https://github.com/ankidroid/Anki-Android/commit/a57ebe5312afa7c0d4950604e4f5f9a43be3a8cc", "message": "Updated strings from Crowdin", "committedDate": "2020-05-31T19:08:43Z", "type": "forcePushed"}, {"oid": "aeb0686f713cb0139d8975cf0519b51a49029b62", "url": "https://github.com/ankidroid/Anki-Android/commit/aeb0686f713cb0139d8975cf0519b51a49029b62", "message": "Handle 3-letter language roots correctly\n\nThere was an expectation in the importer script that all\nlanguage codes had a 2-letter root, but many valid codes that Android\naccepts have 3-letter codes *and* collide with the 2-letter codes (fi vs fil)\n\nThere was the expectation in the LanguageUtil object that languages\nall had 2-letter roots as well, it was altered to split on '-' instead\nof on specific character indices, with associated unit testing to verify\n\nAdditionally, the 'yu' (Cantonese) custom code needed to map to 'yue'", "committedDate": "2020-05-31T19:48:42Z", "type": "commit"}, {"oid": "2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "url": "https://github.com/ankidroid/Anki-Android/commit/2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "message": "Updated strings from Crowdin", "committedDate": "2020-05-31T19:51:10Z", "type": "commit"}, {"oid": "2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "url": "https://github.com/ankidroid/Anki-Android/commit/2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "message": "Updated strings from Crowdin", "committedDate": "2020-05-31T19:51:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTg4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432979884", "bodyText": "Nit: No need to call .toString(), let the logging framework do it for efficiency.", "author": "david-allison-1", "createdAt": "2020-05-31T20:11:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -398,6 +398,7 @@ public static Context updateContextWithLanguage(@NonNull Context remoteContext)\n     private static Configuration getLanguageConfig(@NonNull Configuration remoteConfig, @NonNull SharedPreferences prefs) {\n         Configuration newConfig = new Configuration(remoteConfig);\n         Locale newLocale = LanguageUtil.getLocale(prefs.getString(Preferences.LANGUAGE, \"\"), prefs);\n+        Timber.d(\"AnkiDroidApp::getLanguageConfig - setting locale to %s\", newLocale.toString());", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTkyOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432979929", "bodyText": "Best to log the input", "author": "david-allison-1", "createdAt": "2020-05-31T20:12:07Z", "path": "AnkiDroid/src/main/java/com/ichi2/utils/LanguageUtil.java", "diffHunk": "@@ -81,10 +83,13 @@ public static Locale getLocale(@Nullable String localeCode, @NonNull SharedPrefe\n             // Fall back to (system) default only if that fails.\n             localeCode = Locale.getDefault().toString();\n         }\n-        if (localeCode.length() > 2) {\n+        // Language separators are '_' or '-' at different times in display/resource fetch\n+        if (localeCode != null && (localeCode.contains(\"_\") || localeCode.contains(\"-\"))) {\n             try {\n-                locale = new Locale(localeCode.substring(0, 2), localeCode.substring(3, 5));\n-            } catch (StringIndexOutOfBoundsException e) {\n+                String[] localeParts = localeCode.split(\"[_-]\", 2);\n+                locale = new Locale(localeParts[0], localeParts[1]);\n+            } catch (ArrayIndexOutOfBoundsException e) {\n+                Timber.w(e, \"LanguageUtil::getLocale regional variant split failed. Using code raw.\");", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980054", "bodyText": "Do we need/intend to handle ISO 639 here? zh-Hant-TW for example?\nhttps://android.googlesource.com/platform/external/icu4c.git/+/master/data/locales/ - not sure if this is relevant", "author": "david-allison-1", "createdAt": "2020-05-31T20:13:42Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"af\").getDisplayLanguage().equals(\"Afrikaans\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterCodeResolves() {\n+        assertThat(\"A locale with a 3-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"fil\").getDisplayLanguage().equals(\"Filipino\"));\n+    }\n+\n+    @Test\n+    public void localeTwoLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt-BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt_BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"yue_TW\").getDisplayName().equals(\"yue (Taiwan)\"));\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"yue-TW\").getDisplayName().equals(\"yue (Taiwan)\"));\n+    }", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MjMwNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432982305", "bodyText": "I have no intention of going farther than supported functionality at this point which is two part codes only", "author": "mikehardy", "createdAt": "2020-05-31T20:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980073", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n          \n          \n            \n                    assertThat(\"A locale with a 3-letter code and regional variant resolves correctly\",", "author": "david-allison-1", "createdAt": "2020-05-31T20:14:06Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"af\").getDisplayLanguage().equals(\"Afrikaans\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterCodeResolves() {\n+        assertThat(\"A locale with a 3-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"fil\").getDisplayLanguage().equals(\"Filipino\"));\n+    }\n+\n+    @Test\n+    public void localeTwoLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt-BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt_BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"yue_TW\").getDisplayName().equals(\"yue (Taiwan)\"));\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980081", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n          \n          \n            \n                    assertThat(\"A locale with a 3-letter code and regional variant resolves correctly\",", "author": "david-allison-1", "createdAt": "2020-05-31T20:14:12Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"af\").getDisplayLanguage().equals(\"Afrikaans\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterCodeResolves() {\n+        assertThat(\"A locale with a 3-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"fil\").getDisplayLanguage().equals(\"Filipino\"));\n+    }\n+\n+    @Test\n+    public void localeTwoLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt-BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt_BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980153", "bodyText": "Will these tests pass if the users locale is non-English? I think all of our non-instrumented test runs are still in English.", "author": "david-allison-1", "createdAt": "2020-05-31T20:15:04Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MjI2MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432982261", "bodyText": "Robolectric has locale-changing power but I've not used it, an extension to the tests to do so could be a separate PR if you want to investigate. I have used Robolectric API switching so I know it's effective, it's just an annotation IIRC", "author": "mikehardy", "createdAt": "2020-05-31T20:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4NDkwNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432984905", "bodyText": "My concern is ensuring that new contributors coming into the project won't have broken tests. In a normal circumstance, this should change, but we should ensure this doesn't happen for foreign developers.\ngetDisplayLanguage Comments\n/**\n     * Returns a name for the locale's language that is appropriate for display to the\n     * user.\n     * If possible, the name returned will be localized for the default\n     * {@link Locale.Category#DISPLAY DISPLAY} locale.\n     * For example, if the locale is fr_FR and the default\n     * {@link Locale.Category#DISPLAY DISPLAY} locale\n     * is en_US, getDisplayLanguage() will return \"French\"; if the locale is en_US and\n     * the default {@link Locale.Category#DISPLAY DISPLAY} locale is fr_FR,\n     * getDisplayLanguage() will return \"anglais\".\n     * If the name returned cannot be localized for the default\n     * {@link Locale.Category#DISPLAY DISPLAY} locale,\n     * (say, we don't have a Japanese name for Croatian),\n     * this function falls back on the English name, and uses the ISO code as a last-resort\n     * value.  If the locale doesn't specify a language, this function returns the empty string.\n     *\n     * @return The name of the display language.\n     */", "author": "david-allison-1", "createdAt": "2020-05-31T21:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5MTM4MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r433291380", "bodyText": "I now have a strong dislike for the Hamcrest matchers. On failure between expected/actual they don't spit out the actual or expected so you can't visually inspect immediately. You have to instrument, waste of time. Switching to junit Assert. I'm adding resource loading configs on robolectric and SDK skew though, as this would have tripped new developers with non-'en' system langauge", "author": "mikehardy", "createdAt": "2020-06-01T15:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzMDI1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r433330253", "bodyText": "Hamcrest definitely outputs the failures, that's the point of a fluent library.\nYou shouldn't be using assertThat(message, bool)\nYou should use assertThat(message, \"string\", is(\"string\"))\nSorry I missed this in the initial review.", "author": "david-allison-1", "createdAt": "2020-06-01T15:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDcyNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980727", "bodyText": "Could you link some docs here. I assume this is correct, but I really can't know.", "author": "david-allison-1", "createdAt": "2020-05-31T20:22:30Z", "path": "tools/update-localizations.py", "diffHunk": "@@ -178,12 +178,16 @@ def build():\n t.close()\n \n for language in languages:\n-    if language[:2] in localizedRegions:\n-        androidLanguage = string.replace(language, '-', '-r')\n+    # Regional files need a marker in Android\n+    if language.split('-', 1)[0] in localizedRegions:", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MjM2Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432982367", "bodyText": "I have no docs, just direct experience while testing, sorry. Definitely needs to split on underscore or the language switch isn't recognized for 2-part codes, definitely needs to split on the hyphen or the language list doesn't work for 2-part codes", "author": "mikehardy", "createdAt": "2020-05-31T20:42:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4NTA0Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432985043", "bodyText": "OK, could we mark with a TODO to get this a little better documented.", "author": "david-allison-1", "createdAt": "2020-05-31T21:16:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMyODM3OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r433328378", "bodyText": "Added https://developer.android.com/guide/topics/resources/providing-resources#AlternativeResources", "author": "mikehardy", "createdAt": "2020-06-01T15:54:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzMDc5MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r433330791", "bodyText": "Just a TODO in the code will do", "author": "david-allison-1", "createdAt": "2020-06-01T15:57:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDcyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDgwNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980805", "bodyText": "This is python2?", "author": "david-allison-1", "createdAt": "2020-05-31T20:23:31Z", "path": "tools/update-localizations.py", "diffHunk": "@@ -178,12 +178,16 @@ def build():\n t.close()\n \n for language in languages:\n-    if language[:2] in localizedRegions:\n-        androidLanguage = string.replace(language, '-', '-r')\n+    # Regional files need a marker in Android\n+    if language.split('-', 1)[0] in localizedRegions:\n+        androidLanguage = string.replace(language, '-', '-r') # zh-CW becomes zh-rCW\n     else:\n-        androidLanguage = language[:2] # Example: es-ES becomes es\n+        androidLanguage = language.split('-', 1)[0] # Example: es-ES becomes es\n \n-    print \"\\nCopying language files for: \" + androidLanguage\n+    if language == 'yu':\n+        androidLanguage = 'yue'\n+\n+    print \"\\nCopying language files from \" + language + \" to \" + androidLanguage", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MjM4Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432982387", "bodyText": "It's all just python to me ;-)", "author": "mikehardy", "createdAt": "2020-05-31T20:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDgwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MTIxMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432981211", "bodyText": "This feels subject to change. Would it be possible to make a HashSet of the prefixes and see if there are unhandled collisions.\nSomething like af_NA and af_ZA Afrikaans (South Africa/Namibia) probably wouldn't be caught here, and it'd be useful to flag this new conflict to a maintainer.", "author": "david-allison-1", "createdAt": "2020-05-31T20:27:56Z", "path": "tools/update-localizations.py", "diffHunk": "@@ -178,12 +178,16 @@ def build():\n t.close()\n \n for language in languages:\n-    if language[:2] in localizedRegions:\n-        androidLanguage = string.replace(language, '-', '-r')\n+    # Regional files need a marker in Android\n+    if language.split('-', 1)[0] in localizedRegions:", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MjQ3NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432982475", "bodyText": "good point on that one - the more guard rails we can put in there the better, but I'm out of time for polishing on the release and publish and locale scripts. There are problems still in there but in the last release cycle I already fixed about 10 and de-linted and they'll have to wait their turn again. I can leave a note though", "author": "mikehardy", "createdAt": "2020-05-31T20:43:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4NDk4Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432984986", "bodyText": "Happy with a TODO", "author": "david-allison-1", "createdAt": "2020-05-31T21:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MTIxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMyMjYzNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r433322635", "bodyText": "I expanded the docs for variant addition a great deal, very prescriptive for maintainers now in the \"add new regional variant\" case", "author": "mikehardy", "createdAt": "2020-06-01T15:48:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MTIxMQ=="}], "type": "inlineReview"}, {"oid": "a326db144648052c4ab67e0c5f6ffb984bc3f039", "url": "https://github.com/ankidroid/Anki-Android/commit/a326db144648052c4ab67e0c5f6ffb984bc3f039", "message": "NF: Improve logging, Improve test, Document I18N variant add", "committedDate": "2020-06-01T15:54:05Z", "type": "forcePushed"}, {"oid": "89620aad36e3445af3cff3917e6fca7db07646a2", "url": "https://github.com/ankidroid/Anki-Android/commit/89620aad36e3445af3cff3917e6fca7db07646a2", "message": "NF: Improve logging, Improve test, Document I18N variant add", "committedDate": "2020-06-01T16:04:39Z", "type": "commit"}, {"oid": "e7517e550609ddc6fe8e299493dcb2ddc419b67c", "url": "https://github.com/ankidroid/Anki-Android/commit/e7517e550609ddc6fe8e299493dcb2ddc419b67c", "message": "Improve error attribution in broken I18N finder", "committedDate": "2020-06-01T16:22:28Z", "type": "commit"}, {"oid": "3ffab75a3f07327cc944bc6991367696deeb851d", "url": "https://github.com/ankidroid/Anki-Android/commit/3ffab75a3f07327cc944bc6991367696deeb851d", "message": "Updated strings from crowdin\n\nThis includes one manual/local fix to values-nl/02-strings.xml but\nI also fixed it in crowdin for next export and informed the translator", "committedDate": "2020-06-01T16:22:51Z", "type": "commit"}, {"oid": "3ffab75a3f07327cc944bc6991367696deeb851d", "url": "https://github.com/ankidroid/Anki-Android/commit/3ffab75a3f07327cc944bc6991367696deeb851d", "message": "Updated strings from crowdin\n\nThis includes one manual/local fix to values-nl/02-strings.xml but\nI also fixed it in crowdin for next export and informed the translator", "committedDate": "2020-06-01T16:22:51Z", "type": "forcePushed"}]}