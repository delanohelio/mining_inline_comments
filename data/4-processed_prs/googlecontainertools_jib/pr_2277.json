{"pr_number": 2277, "pr_title": "Add \"Launch Problems\" section to FAQ and highlight symlink issue", "pr_createdAt": "2020-02-10T16:41:57Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2277", "timeline": [{"oid": "9be595a256aca5ca162be74ac37e29dced03dab4", "url": "https://github.com/GoogleContainerTools/jib/commit/9be595a256aca5ca162be74ac37e29dced03dab4", "message": "Add \"Launch Problems\" section to FAQ and highlight symlink issue", "committedDate": "2020-02-10T16:41:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE4MzQyOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377183429", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n          \n          \n            \n            gradle --debug -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "author": "chanseokoh", "createdAt": "2020-02-10T16:47:04Z", "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,39 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+or\n+```sh\n+gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "originalCommit": "9be595a256aca5ca162be74ac37e29dced03dab4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NDM2Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377194363", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The user had used Jib's ability to install extra files into the image ([Maven](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#adding-arbitrary-files-to-the-image), [Gradle](https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#adding-arbitrary-files-to-the-image)) to install a DLL by placing it in `src/main/jib/lib/file.dll`. This would normally cause the `file.dll` to be installed in the image as `/lib/file.dll`. But the user's base image used symbolic links for `/lib` and `/lib64`. Jib does not follow such symbolic links when creating the image. And at container initialization time, Docker treats these symlinks as a file, and thus the symbolic link was replaced with `/lib`. As a result, none of the system shared libraries were resolved and dynamically-linked programs failed.\n          \n          \n            \n            The user had used Jib's ability to install extra files into the image ([Maven](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#adding-arbitrary-files-to-the-image), [Gradle](https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#adding-arbitrary-files-to-the-image)) to install a library file by placing it in `src/main/jib/lib/libfoo.so`. This would normally cause the `libfoo.so` to be installed in the image as `/lib/libfoo.so`. But `/lib` and `/lib64` in the user's base image were symbolic links. Jib does not follow such symbolic links when creating the image. And at container initialization time, Docker treats these symlinks as a file, and thus the symbolic link was replaced with `/lib` as a new directory. As a result, none of the system shared libraries were resolved and dynamically-linked programs failed.", "author": "chanseokoh", "createdAt": "2020-02-10T17:04:31Z", "path": "docs/faq.md", "diffHunk": "@@ -576,31 +612,25 @@ plugins {\n }\n ```\n \n-### How can I examine network traffic?\n+### Why won't my container start?\n \n-It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+There are some common reasons why containers fail on launch.\n \n-To see the HTTP traffic, create a `logging.properties` file with the following:\n-```\n-handlers = java.util.logging.ConsoleHandler\n-java.util.logging.ConsoleHandler.level=ALL\n+#### My shell script won't run\n+ \n+The default base image used by Jib, ([`distoless/java`](https://github.com/GoogleContainerTools/distroless/tree/master/java)), does not include a shell, and thus shell scripts won't launch.\n \n-# CONFIG hides authentication data\n-# ALL includes authentication data\n-com.google.api.client.http.level=CONFIG\n-```\n+Solution: use a different base image with a shell.\n \n-And then launch your build tool as follows:\n-```sh\n-mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+#### The container fails with `exec` errors \n+\n+A Jib user reported an error launching their container:\n ```\n-or\n-```sh\n-gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+standard_init_linux.go:211 exec user process caused \"no such file or directory\"\n ```\n \n-### How do I view debug logs for Jib?\n+On examining the container structure with [Dive](https://github.com/wagoodman/dive), the user discovered that the contents of the `/lib` directory had disappeared.\n \n-Maven: use `mvn -X -Djib.serialize=true` to enable more detailed logging and serialize Jib's actions.\n+The user had used Jib's ability to install extra files into the image ([Maven](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#adding-arbitrary-files-to-the-image), [Gradle](https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#adding-arbitrary-files-to-the-image)) to install a DLL by placing it in `src/main/jib/lib/file.dll`. This would normally cause the `file.dll` to be installed in the image as `/lib/file.dll`. But the user's base image used symbolic links for `/lib` and `/lib64`. Jib does not follow such symbolic links when creating the image. And at container initialization time, Docker treats these symlinks as a file, and thus the symbolic link was replaced with `/lib`. As a result, none of the system shared libraries were resolved and dynamically-linked programs failed.", "originalCommit": "9be595a256aca5ca162be74ac37e29dced03dab4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NDQ1MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377194450", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n          \n          \n            \n            mvn -X -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "author": "chanseokoh", "createdAt": "2020-02-10T17:04:40Z", "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,39 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "originalCommit": "9be595a256aca5ca162be74ac37e29dced03dab4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMzgxOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377203818", "bodyText": "I actually find it useful to just see the network traffic, independent of the Maven verbose logs.  I changed the note below to note that the -X/--gradle args can be useful.", "author": "briandealwis", "createdAt": "2020-02-10T17:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NDQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NTQwMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377195403", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).", "author": "chanseokoh", "createdAt": "2020-02-10T17:06:26Z", "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,39 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+or\n+```sh\n+gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+", "originalCommit": "9be595a256aca5ca162be74ac37e29dced03dab4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f962878e9127c16c76e4dd117d671d9988da8071", "url": "https://github.com/GoogleContainerTools/jib/commit/f962878e9127c16c76e4dd117d671d9988da8071", "message": "Update docs/faq.md\n\nCo-Authored-By: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-02-10T17:16:11Z", "type": "commit"}, {"oid": "1885f566205461dcef6159a01ba1ab8ea3e3b61e", "url": "https://github.com/GoogleContainerTools/jib/commit/1885f566205461dcef6159a01ba1ab8ea3e3b61e", "message": "Update docs/faq.md\n\nCo-Authored-By: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-02-10T17:16:19Z", "type": "commit"}, {"oid": "bb3b91a927ba9efb8e72c41c66a65f30142312ac", "url": "https://github.com/GoogleContainerTools/jib/commit/bb3b91a927ba9efb8e72c41c66a65f30142312ac", "message": "Update docs/faq.md\n\nCo-Authored-By: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-02-10T17:16:53Z", "type": "commit"}, {"oid": "89ed99ab302377a6a8d6fa422aba7440ce1fa3be", "url": "https://github.com/GoogleContainerTools/jib/commit/89ed99ab302377a6a8d6fa422aba7440ce1fa3be", "message": "Update docs/faq.md\n\nCo-Authored-By: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-02-10T17:17:12Z", "type": "commit"}, {"oid": "de88a881ae6133397ba75dfc64344376d71ef7ea", "url": "https://github.com/GoogleContainerTools/jib/commit/de88a881ae6133397ba75dfc64344376d71ef7ea", "message": "Update docs/faq.md\n\nCo-Authored-By: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-02-10T17:17:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMjA4Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377202082", "bodyText": "I guess the button was pressed twice.", "author": "chanseokoh", "createdAt": "2020-02-10T17:18:22Z", "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,41 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -X -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+or\n+```sh\n+gradle --debug -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).\n+If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).", "originalCommit": "de88a881ae6133397ba75dfc64344376d71ef7ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwNDM2Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377204363", "bodyText": "The commit-change function is pretty slow!", "author": "briandealwis", "createdAt": "2020-02-10T17:22:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMjA4Mg=="}], "type": "inlineReview"}, {"oid": "467084fdf2e62761ec50cca68e2d64b8b90a9b96", "url": "https://github.com/GoogleContainerTools/jib/commit/467084fdf2e62761ec50cca68e2d64b8b90a9b96", "message": "Update faq.md", "committedDate": "2020-02-10T17:20:29Z", "type": "commit"}]}