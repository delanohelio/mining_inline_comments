{"pr_number": 2235, "pr_title": "Import Cram as Jib CLI", "pr_createdAt": "2020-01-16T05:26:59Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2235", "timeline": [{"oid": "ab52d6af010bfca73fdc1b42e98a0de8fe997d5a", "url": "https://github.com/GoogleContainerTools/jib/commit/ab52d6af010bfca73fdc1b42e98a0de8fe997d5a", "message": "Import Cram as Jib CLI", "committedDate": "2020-01-16T05:03:37Z", "type": "commit"}, {"oid": "1fadfe1fe7a031339c8be01995e3e7eb639681b9", "url": "https://github.com/GoogleContainerTools/jib/commit/1fadfe1fe7a031339c8be01995e3e7eb639681b9", "message": "don't import classes in same package", "committedDate": "2020-01-16T05:30:13Z", "type": "commit"}, {"oid": "d45abc5cd926bef8662f01f15e7c5fd980f306e1", "url": "https://github.com/GoogleContainerTools/jib/commit/d45abc5cd926bef8662f01f15e7c5fd980f306e1", "message": "Add more tests", "committedDate": "2020-01-20T20:13:37Z", "type": "commit"}, {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8", "url": "https://github.com/GoogleContainerTools/jib/commit/3d852cba0a3d03840d22a88ae9499ade813615b8", "message": "Merge remote-tracking branch 'origin/master' into HEAD", "committedDate": "2020-01-20T20:13:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369073987", "bodyText": "We can address this later, but because this requires installing JRE and Gradle, I think we should provide pre-compiled binaries, especially when considering Jib CLI is very general and isn't bound to Java developers.", "author": "chanseokoh", "createdAt": "2020-01-21T15:36:47Z", "path": "jib-cli/README.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Jib CLI\n+\n+<img src=\"https://img.shields.io/badge/status-experimental-orange\">\n+\n+`jib` is a command-line utility for building containers images from file system content. \n+It serves as a demonstration of [Jib Core](https://github.com/GoogleContainerTools/jib/tree/master/jib-core),\n+a Java library for building containers without Docker.\n+\n+This CLI tool is _experimental_ and its options and structure\n+are almost certain to change.\n+\n+## Building\n+\n+Use the `application` plugin's `installDist` task to create a runnable installation.\n+```sh\n+$ ../gradlew installDist", "originalCommit": "3d852cba0a3d03840d22a88ae9499ade813615b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwOTQxOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369109418", "bodyText": "The distribution doesn't require Gradle, but it does require a JRE (as does Gradle and Maven).  But otherwise 100% agreed: the real end-goal is to use Graal's native-image to produce an executable, but that's not easy to do with the most recent release of Graal (yet).", "author": "briandealwis", "createdAt": "2020-01-21T16:33:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyMjA2OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369122069", "bodyText": "I meant by Gradle that to obtain Jib CLI, the doc says to run ./gradlew installDist. I wonder if we can \"pre-compile\" gradlew installDist on Linux, Mac, and Windows, and distribute them (whatever it is)?", "author": "chanseokoh", "createdAt": "2020-01-21T16:54:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMTY0Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395821647", "bodyText": "Ah so we talked about. We can't offer distributed binaries unless we go through an official launch process -- so that will as you mention have to be addressed later.", "author": "loosebazooka", "createdAt": "2020-03-20T18:32:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MDI1NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395850254", "bodyText": "\ud83d\udc4d", "author": "briandealwis", "createdAt": "2020-03-20T19:32:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3ODE0Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369078147", "bodyText": "I'm curious how all these work out as a CLI tool. Does it not require a JRE? Is it a single executable binary that embeds all transitive dependency JARs? Or, does it cache dependencies under ~/.m2?", "author": "chanseokoh", "createdAt": "2020-01-21T15:43:29Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,35 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.Cram\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"", "originalCommit": "3d852cba0a3d03840d22a88ae9499ade813615b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTExMDQwMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369110403", "bodyText": "Picocli is a nice library for processing command-line arguments.  It also supports more sophisticated command-groups (e.g., jib build ... vs jib jar ... or jib inspect ...), though this code isn't taking advantage of these command-groups yet.", "author": "briandealwis", "createdAt": "2020-01-21T16:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3ODE0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyMjg5OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369122898", "bodyText": "Hmm... I don't think I got the answers for my questions, but I think I'll just try this branch myself and see what ./gradlew installDist generates and how exactly it works on my machine.", "author": "chanseokoh", "createdAt": "2020-01-21T16:56:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3ODE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369079748", "bodyText": "Is this used somewhere? I can't find it. I'm wary of people using this provider if it's going to be used for creating an image, because it greatly undermines reproducibility of a layer.", "author": "chanseokoh", "createdAt": "2020-01-21T15:46:00Z", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/ActualTimestampProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli;\n+\n+import com.google.cloud.tools.jib.api.AbsoluteUnixPath;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.time.Instant;\n+import java.util.function.BiFunction;\n+\n+/** A timetamp provider that uses the actual file last-modification time from the file-system. */\n+class ActualTimestampProvider implements BiFunction<Path, AbsoluteUnixPath, Instant> {", "originalCommit": "3d852cba0a3d03840d22a88ae9499ade813615b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyMjM1MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369122350", "bodyText": "It's pulled in from LayerParserDefinition#parseTimestampsDirective().", "author": "briandealwis", "createdAt": "2020-01-21T16:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0OTgyNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395149825", "bodyText": "So the question is, should we drop support for ts=actual? Jib plugins don't support it (and will never after we build an extension framework). I find think this is very useful, especially when considering the negatives. If someone really wanted to set it to the last modification time of some file, I think they could get easily it in a shell script.\n              + \"  ts=timestamp  set last-modified timestamps:\\n\"\n              + \"    actual      use actual values in file-system\\n\"`\n\nHowever, this doesn't need to to addressed in this PR (in case you agree).", "author": "chanseokoh", "createdAt": "2020-03-19T16:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA=="}], "type": "inlineReview"}, {"oid": "0f092e1e1f5460635cbf636a18aed384bf40178f", "url": "https://github.com/GoogleContainerTools/jib/commit/0f092e1e1f5460635cbf636a18aed384bf40178f", "message": "tweak text", "committedDate": "2020-01-21T21:35:50Z", "type": "commit"}, {"oid": "7f16a977aae395e6b4224a4c5bb01d1ecd573ba6", "url": "https://github.com/GoogleContainerTools/jib/commit/7f16a977aae395e6b4224a4c5bb01d1ecd573ba6", "message": "further tweaks", "committedDate": "2020-01-24T21:58:26Z", "type": "commit"}, {"oid": "820d03a16abbfc353e9674df9644418942bcec90", "url": "https://github.com/GoogleContainerTools/jib/commit/820d03a16abbfc353e9674df9644418942bcec90", "message": "cause tests to include pushmode", "committedDate": "2020-03-15T03:35:44Z", "type": "commit"}, {"oid": "2c9ccb9b5e1409a8a95f56f4822bad3c26ba3d12", "url": "https://github.com/GoogleContainerTools/jib/commit/2c9ccb9b5e1409a8a95f56f4822bad3c26ba3d12", "message": "update to picocli 4.2", "committedDate": "2020-03-15T03:36:43Z", "type": "commit"}, {"oid": "aaff8aee22cacae1a0f24d4a6fbc3aa9ecd73420", "url": "https://github.com/GoogleContainerTools/jib/commit/aaff8aee22cacae1a0f24d4a6fbc3aa9ecd73420", "message": "Add new Build command; refactor tests", "committedDate": "2020-03-18T03:38:48Z", "type": "commit"}, {"oid": "5b49873740c55bc1775a8d05f6772ba63b2ef18d", "url": "https://github.com/GoogleContainerTools/jib/commit/5b49873740c55bc1775a8d05f6772ba63b2ef18d", "message": "make gradle happy", "committedDate": "2020-03-19T13:30:02Z", "type": "commit"}, {"oid": "755df833969508f9da2634a986b73e262e5d5368", "url": "https://github.com/GoogleContainerTools/jib/commit/755df833969508f9da2634a986b73e262e5d5368", "message": "Merge remote-tracking branch 'origin/master' into HEAD", "committedDate": "2020-03-19T13:36:18Z", "type": "commit"}, {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "url": "https://github.com/GoogleContainerTools/jib/commit/1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "message": "Catchup", "committedDate": "2020-03-19T14:43:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEzOTc2OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395139768", "bodyText": "nit: indentation is off, and no double quotes", "author": "chanseokoh", "createdAt": "2020-03-19T16:03:33Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"", "originalCommit": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0MDQ2OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395140469", "bodyText": "nit: 'application' (not double quotes)", "author": "chanseokoh", "createdAt": "2020-03-19T16:04:35Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"", "originalCommit": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0MDgwMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395140802", "bodyText": "nit: 'jib` (not double quotes)", "author": "chanseokoh", "createdAt": "2020-03-19T16:05:02Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"", "originalCommit": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NDA5Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395144093", "bodyText": "Haven't looked into the test, so let me confirm. Do you need to copy test resources from jib-core?", "author": "chanseokoh", "createdAt": "2020-03-19T16:09:33Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"\n+\n+\n+  testImplementation \"junit:junit:${dependencyVersions.JUNIT}\"\n+  testImplementation \"org.mockito:mockito-core:${dependencyVersions.MOCKITO_CORE}\"\n+  testImplementation \"org.slf4j:slf4j-api:${dependencyVersions.SLF4J_API}\"\n+  testImplementation \"com.github.stefanbirkner:system-rules:${dependencyVersions.SYSTEM_RULES}\"\n+  testImplementation project(path:':jib-core', configuration:'tests')\n+}\n+\n+sourceSets.test.resources.srcDirs project(':jib-core').sourceSets.test.resources", "originalCommit": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NDM4OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395144389", "bodyText": "This is probably unnecessary?", "author": "chanseokoh", "createdAt": "2020-03-19T16:10:02Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"\n+\n+\n+  testImplementation \"junit:junit:${dependencyVersions.JUNIT}\"\n+  testImplementation \"org.mockito:mockito-core:${dependencyVersions.MOCKITO_CORE}\"\n+  testImplementation \"org.slf4j:slf4j-api:${dependencyVersions.SLF4J_API}\"\n+  testImplementation \"com.github.stefanbirkner:system-rules:${dependencyVersions.SYSTEM_RULES}\"\n+  testImplementation project(path:':jib-core', configuration:'tests')", "originalCommit": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395145843", "bodyText": "Can you see if you can remove this (as we are copying jib-build-plan source into jib-core)? jib-plugins-common does not add this, for example. @loosebazooka may have a better idea.", "author": "chanseokoh", "createdAt": "2020-03-19T16:12:11Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "originalCommit": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMjAxMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395822013", "bodyText": "Yeah we can remove this I think? But I'm not sure how this build works -- does it just package up the application without depending on anything being in the local maven repo?", "author": "loosebazooka", "createdAt": "2020-03-20T18:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MDY4Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395850683", "bodyText": "I've tried removing this and the build breaks with unresolved symbols \ud83e\udd37\u200d\u2642", "author": "briandealwis", "createdAt": "2020-03-20T19:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MjcwMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395852700", "bodyText": "oh yeah, because it's not re-exported. so I think even in jib-core we need to make it an api dependency rather than implementation?", "author": "loosebazooka", "createdAt": "2020-03-20T19:38:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3NzQ0Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395877447", "bodyText": "So what should be done in this PR?", "author": "chanseokoh", "createdAt": "2020-03-20T20:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMTU5NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395901594", "bodyText": "I think it's correct for this PR.", "author": "loosebazooka", "createdAt": "2020-03-20T21:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}], "type": "inlineReview"}, {"oid": "0922b2bb857468734fab66d6724f63823df73e85", "url": "https://github.com/GoogleContainerTools/jib/commit/0922b2bb857468734fab66d6724f63823df73e85", "message": "nits", "committedDate": "2020-03-20T04:29:00Z", "type": "commit"}, {"oid": "4f7c59c13b5c004c6db571045d2c396027aaed75", "url": "https://github.com/GoogleContainerTools/jib/commit/4f7c59c13b5c004c6db571045d2c396027aaed75", "message": "capitalize", "committedDate": "2020-03-20T04:29:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMjI0Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395822243", "bodyText": "We can also remove this line, you would only need this if you're trying to access classes in dependencies of jib-core. We do this in appengine-plugins-common kind of as a hack to not have to re specify the implementation dependencies (that is a little hacky, and maybe we should be more explicit about it -- but that's another issue).", "author": "loosebazooka", "createdAt": "2020-03-20T18:34:06Z", "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,40 @@\n+plugins {\n+  id 'application'\n+  id 'eclipse'\n+}\n+\n+ext {\n+  cliMainClass = 'com.google.cloud.tools.jib.cli.JibCli'\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = 'jib'\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  implementation project(':jib-core').configurations.implementation.dependencies", "originalCommit": "4f7c59c13b5c004c6db571045d2c396027aaed75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1082a3838a4064a3dcaa3e6d41c0db23e9781b0e", "url": "https://github.com/GoogleContainerTools/jib/commit/1082a3838a4064a3dcaa3e6d41c0db23e9781b0e", "message": "drop unnecessary lines from build.gradle", "committedDate": "2020-03-20T19:25:21Z", "type": "commit"}]}