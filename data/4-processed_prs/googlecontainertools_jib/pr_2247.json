{"pr_number": 2247, "pr_title": "Replace assemble task dependency with runtimeClasspath", "pr_createdAt": "2020-01-25T02:10:18Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2247", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwNzQwNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r370907405", "bodyText": "These test changes (and the ones below) are now checking for whether the jibDependencies task depends on the requisite tasks (like the warTask or bootWarTask below) and whether all the jib tasks depend on jibDependencies which is the only task they need to depend on now.", "author": "seanabraham", "createdAt": "2020-01-25T02:15:54Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibPluginTest.java", "diffHunk": "@@ -212,11 +143,19 @@ public void testWebAppProject() {\n     Task warTask = tasks.getByPath(\":war\");\n     Assert.assertNotNull(warTask);\n \n+    Task jibDependenciesTask = tasks.getByPath(\":jibDependencies\");\n+    Set<Task> taskDependencies = jibDependenciesTask.getDependsOn()\n+        .stream()\n+        .filter(it -> it instanceof TaskProvider)\n+        .map(it -> ((TaskProvider<?>) it).get())\n+        .collect(Collectors.toSet());\n+\n+    Assert.assertTrue(taskDependencies.contains(warTask));\n+\n     for (String taskName : KNOWN_JIB_TASKS) {\n-      List<TaskProvider<?>> taskProviders =\n-          (List<TaskProvider<?>>) tasks.getByPath(taskName).getDependsOn().iterator().next();\n-      Assert.assertEquals(1, taskProviders.size());\n-      Assert.assertEquals(warTask, taskProviders.get(0).get());\n+      TaskProvider<?> jibDependenciesTaskProvider =\n+          (TaskProvider<?>) tasks.getByPath(taskName).getDependsOn().iterator().next();\n+      Assert.assertEquals(jibDependenciesTaskProvider.get(), jibDependenciesTask);", "originalCommit": "83bf080820fef49d9de2c816da016fb6b35e9bf2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMjMwNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r370912307", "bodyText": "I'll check when I can, but this doesn't show up in gradlew tasks does it?", "author": "loosebazooka", "createdAt": "2020-01-25T04:04:00Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibPlugin.java", "diffHunk": "@@ -162,68 +165,49 @@ public void apply(Project project) {\n             SyncMapTask.class,\n             task -> task.setJibExtension(jibExtension));\n \n+    Set<TaskProvider<?>> jibTaskProviders =\n+        ImmutableSet.of(buildImageTask, buildDockerTask, buildTarTask, syncMapTask);\n+\n     // A check to catch older versions of Jib.  This can be removed once we are certain people\n     // are using Jib 1.3.1 or later.\n     tasks.register(SKAFFOLD_CHECK_REQUIRED_VERSION_TASK_NAME, CheckJibVersionTask.class);\n \n     project.afterEvaluate(\n         projectAfterEvaluation -> {\n-          try {\n-            TaskProvider<Task> warTask = TaskCommon.getWarTaskProvider(projectAfterEvaluation);\n-            TaskProvider<Task> bootWarTask =\n-                TaskCommon.getBootWarTaskProvider(projectAfterEvaluation);\n-            List<TaskProvider<?>> dependsOnTask = new ArrayList<>();\n-            if (warTask != null || bootWarTask != null) {\n-              // Have all tasks depend on the 'war' and/or 'bootWar' task.\n-              if (warTask != null) {\n-                dependsOnTask.add(warTask);\n-              }\n-              if (bootWarTask != null) {\n-                dependsOnTask.add(bootWarTask);\n-              }\n-            } else if (\"packaged\".equals(jibExtension.getContainerizingMode())) {\n-              // Have all tasks depend on the 'jar' task.\n-              TaskProvider<Task> jarTask = projectAfterEvaluation.getTasks().named(\"jar\");\n-              dependsOnTask.add(jarTask);\n-\n-              if (projectAfterEvaluation.getPlugins().hasPlugin(\"org.springframework.boot\")) {\n-                Jar jar = (Jar) jarTask.get();\n-                jar.setEnabled(true);\n-                jar.getArchiveClassifier().set(\"original\");\n-              }\n-            } else {\n-              // Have all tasks depend on the 'classes' task.\n-              dependsOnTask.add(projectAfterEvaluation.getTasks().named(\"classes\"));\n+          TaskProvider<Task> warTask = TaskCommon.getWarTaskProvider(projectAfterEvaluation);\n+          TaskProvider<Task> bootWarTask =\n+              TaskCommon.getBootWarTaskProvider(projectAfterEvaluation);\n+          TaskProvider<Task> jibDependenciesTask = tasks.register(\"jibDependencies\");", "originalCommit": "d044eef0f4526f76e914f67601377351aa7a8b08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MzAzMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r370963033", "bodyText": "Though I can't remember what determines whether or not tasks show up in the gradlew tasks output, it doesn't look like it does in this case.", "author": "seanabraham", "createdAt": "2020-01-25T23:44:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMjMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMjQ5NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r370912495", "bodyText": "we've been filtering like .filter(TaskProvider.class::isInstance)", "author": "loosebazooka", "createdAt": "2020-01-25T04:10:15Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibPluginTest.java", "diffHunk": "@@ -230,15 +171,24 @@ public void testWebAppProject_bootWar() {\n     TaskContainer tasks = project.getTasks();\n     Task warTask = tasks.getByPath(\":war\");\n     Task bootWarTask = tasks.getByPath(\":bootWar\");\n+    Task jibDependenciesTask = tasks.getByPath(\":jibDependencies\");\n     Assert.assertNotNull(warTask);\n     Assert.assertNotNull(bootWarTask);\n \n+    Set<Task> taskDependencies =\n+        jibDependenciesTask\n+            .getDependsOn()\n+            .stream()\n+            .filter(it -> it instanceof TaskProvider)", "originalCommit": "d044eef0f4526f76e914f67601377351aa7a8b08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMjUwNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r370912507", "bodyText": "filter(... like above", "author": "loosebazooka", "createdAt": "2020-01-25T04:10:48Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibPluginTest.java", "diffHunk": "@@ -252,16 +202,25 @@ public void testWebAppProject_bootWarDisabled() {\n     TaskContainer tasks = project.getTasks();\n     Task warTask = tasks.getByPath(\":war\");\n     Task bootWarTask = tasks.getByPath(\":bootWar\");\n+    Task jibDependenciesTask = tasks.getByPath(\":jibDependencies\");\n     Assert.assertNotNull(warTask);\n     Assert.assertNotNull(bootWarTask);\n     bootWarTask.setEnabled(false); // should depend on bootWar even if disabled\n \n+    Set<Task> taskDependencies =\n+        jibDependenciesTask\n+            .getDependsOn()\n+            .stream()\n+            .filter(it -> it instanceof TaskProvider)", "originalCommit": "d044eef0f4526f76e914f67601377351aa7a8b08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAyMTA1NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r371021055", "bodyText": "Can you use a const as above https://github.com/GoogleContainerTools/jib/pull/2247/files#diff-aef8bf567c91df6622aa0ea29ed0c682R53\nJIB_DEPENDECIES_TASK_NAME=\"jibDependencies\"\n\nand then reuse it in JibPluginTest.java.", "author": "loosebazooka", "createdAt": "2020-01-26T18:46:59Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibPlugin.java", "diffHunk": "@@ -162,68 +165,49 @@ public void apply(Project project) {\n             SyncMapTask.class,\n             task -> task.setJibExtension(jibExtension));\n \n+    Set<TaskProvider<?>> jibTaskProviders =\n+        ImmutableSet.of(buildImageTask, buildDockerTask, buildTarTask, syncMapTask);\n+\n     // A check to catch older versions of Jib.  This can be removed once we are certain people\n     // are using Jib 1.3.1 or later.\n     tasks.register(SKAFFOLD_CHECK_REQUIRED_VERSION_TASK_NAME, CheckJibVersionTask.class);\n \n     project.afterEvaluate(\n         projectAfterEvaluation -> {\n-          try {\n-            TaskProvider<Task> warTask = TaskCommon.getWarTaskProvider(projectAfterEvaluation);\n-            TaskProvider<Task> bootWarTask =\n-                TaskCommon.getBootWarTaskProvider(projectAfterEvaluation);\n-            List<TaskProvider<?>> dependsOnTask = new ArrayList<>();\n-            if (warTask != null || bootWarTask != null) {\n-              // Have all tasks depend on the 'war' and/or 'bootWar' task.\n-              if (warTask != null) {\n-                dependsOnTask.add(warTask);\n-              }\n-              if (bootWarTask != null) {\n-                dependsOnTask.add(bootWarTask);\n-              }\n-            } else if (\"packaged\".equals(jibExtension.getContainerizingMode())) {\n-              // Have all tasks depend on the 'jar' task.\n-              TaskProvider<Task> jarTask = projectAfterEvaluation.getTasks().named(\"jar\");\n-              dependsOnTask.add(jarTask);\n-\n-              if (projectAfterEvaluation.getPlugins().hasPlugin(\"org.springframework.boot\")) {\n-                Jar jar = (Jar) jarTask.get();\n-                jar.setEnabled(true);\n-                jar.getArchiveClassifier().set(\"original\");\n-              }\n-            } else {\n-              // Have all tasks depend on the 'classes' task.\n-              dependsOnTask.add(projectAfterEvaluation.getTasks().named(\"classes\"));\n+          TaskProvider<Task> warTask = TaskCommon.getWarTaskProvider(projectAfterEvaluation);\n+          TaskProvider<Task> bootWarTask =\n+              TaskCommon.getBootWarTaskProvider(projectAfterEvaluation);\n+          TaskProvider<Task> jibDependenciesTask = tasks.register(\"jibDependencies\");", "originalCommit": "26649a1db011c7c87944a1ed20109c75209c71a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e6e175a93cb0522a06c377d3a046e11a10bdefc4", "url": "https://github.com/GoogleContainerTools/jib/commit/e6e175a93cb0522a06c377d3a046e11a10bdefc4", "message": "Replace assemble task dependency with runtimeClasspath\n\nThis introduces a new lifecycle task called \"jibDependencies\" that all\nthe jib tasks depend on and it in turn depends on any requiste tasks\n/ configurations. In particular, jibDependencies will depend on the\nwar/bootWar tasks  when applicable, the jar task when applicable and\nalways the runtime configuration.  Depending directly on the runtime\nconfiguration allows Gradle to add to the task graph appropriately to\nprovide all the artifacts that are specified in that configuration,\nmaking it more efficient than using the assemble task.", "committedDate": "2020-01-27T00:01:33Z", "type": "commit"}, {"oid": "927b8bfdb18affea37567d32002cb9836ba943fd", "url": "https://github.com/GoogleContainerTools/jib/commit/927b8bfdb18affea37567d32002cb9836ba943fd", "message": "Remove now-useless test", "committedDate": "2020-01-27T00:01:35Z", "type": "commit"}, {"oid": "9073d9ff2a32da0ebd8940702972c014a7875ac5", "url": "https://github.com/GoogleContainerTools/jib/commit/9073d9ff2a32da0ebd8940702972c014a7875ac5", "message": "Formatting changes from the googleJavaFormat task", "committedDate": "2020-01-27T00:01:35Z", "type": "commit"}, {"oid": "a905f2f7392be144082561c586ed94dd50cd5d64", "url": "https://github.com/GoogleContainerTools/jib/commit/a905f2f7392be144082561c586ed94dd50cd5d64", "message": "Use method reference style for filter call", "committedDate": "2020-01-27T00:01:36Z", "type": "commit"}, {"oid": "2b7a2057bd5b9ee46aee327061a821db6505b210", "url": "https://github.com/GoogleContainerTools/jib/commit/2b7a2057bd5b9ee46aee327061a821db6505b210", "message": "Refactor task name into constant", "committedDate": "2020-01-27T00:08:41Z", "type": "commit"}, {"oid": "2b7a2057bd5b9ee46aee327061a821db6505b210", "url": "https://github.com/GoogleContainerTools/jib/commit/2b7a2057bd5b9ee46aee327061a821db6505b210", "message": "Refactor task name into constant", "committedDate": "2020-01-27T00:08:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNzc5OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r373607799", "bodyText": "Sorry, after thinking about this while we were doing the release, I realized I'm not quite convinced this is how we want to do this. Maybe in the future... but the problem is going backwards/deprecating something has a high cost.\nCan we just use the mechanism used previously: https://github.com/GoogleContainerTools/jib/pull/2247/files#diff-aef8bf567c91df6622aa0ea29ed0c682L175", "author": "loosebazooka", "createdAt": "2020-01-31T17:57:47Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibPlugin.java", "diffHunk": "@@ -162,68 +166,49 @@ public void apply(Project project) {\n             SyncMapTask.class,\n             task -> task.setJibExtension(jibExtension));\n \n+    Set<TaskProvider<?>> jibTaskProviders =\n+        ImmutableSet.of(buildImageTask, buildDockerTask, buildTarTask, syncMapTask);\n+\n     // A check to catch older versions of Jib.  This can be removed once we are certain people\n     // are using Jib 1.3.1 or later.\n     tasks.register(SKAFFOLD_CHECK_REQUIRED_VERSION_TASK_NAME, CheckJibVersionTask.class);\n \n     project.afterEvaluate(\n         projectAfterEvaluation -> {\n-          try {\n-            TaskProvider<Task> warTask = TaskCommon.getWarTaskProvider(projectAfterEvaluation);\n-            TaskProvider<Task> bootWarTask =\n-                TaskCommon.getBootWarTaskProvider(projectAfterEvaluation);\n-            List<TaskProvider<?>> dependsOnTask = new ArrayList<>();\n-            if (warTask != null || bootWarTask != null) {\n-              // Have all tasks depend on the 'war' and/or 'bootWar' task.\n-              if (warTask != null) {\n-                dependsOnTask.add(warTask);\n-              }\n-              if (bootWarTask != null) {\n-                dependsOnTask.add(bootWarTask);\n-              }\n-            } else if (\"packaged\".equals(jibExtension.getContainerizingMode())) {\n-              // Have all tasks depend on the 'jar' task.\n-              TaskProvider<Task> jarTask = projectAfterEvaluation.getTasks().named(\"jar\");\n-              dependsOnTask.add(jarTask);\n-\n-              if (projectAfterEvaluation.getPlugins().hasPlugin(\"org.springframework.boot\")) {\n-                Jar jar = (Jar) jarTask.get();\n-                jar.setEnabled(true);\n-                jar.getArchiveClassifier().set(\"original\");\n-              }\n-            } else {\n-              // Have all tasks depend on the 'classes' task.\n-              dependsOnTask.add(projectAfterEvaluation.getTasks().named(\"classes\"));\n+          TaskProvider<Task> warTask = TaskCommon.getWarTaskProvider(projectAfterEvaluation);\n+          TaskProvider<Task> bootWarTask =\n+              TaskCommon.getBootWarTaskProvider(projectAfterEvaluation);\n+          TaskProvider<Task> jibDependenciesTask = tasks.register(DEPENDENCIES_TASK_NAME);", "originalCommit": "2b7a2057bd5b9ee46aee327061a821db6505b210", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczMTU1Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2247#discussion_r373731553", "bodyText": "Sure, I can make that change", "author": "seanabraham", "createdAt": "2020-01-31T23:40:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwNzc5OQ=="}], "type": "inlineReview"}, {"oid": "92b376d7b4b48af98b7f6140dc2c6ed38e58575a", "url": "https://github.com/GoogleContainerTools/jib/commit/92b376d7b4b48af98b7f6140dc2c6ed38e58575a", "message": "Remove jibDependencies task", "committedDate": "2020-02-03T19:24:15Z", "type": "commit"}, {"oid": "c2e09c34f18cbfe8ab9572ba2ca6c31cae4ba003", "url": "https://github.com/GoogleContainerTools/jib/commit/c2e09c34f18cbfe8ab9572ba2ca6c31cae4ba003", "message": "Fix formatting", "committedDate": "2020-02-03T19:27:39Z", "type": "commit"}]}