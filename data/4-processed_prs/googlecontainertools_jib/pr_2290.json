{"pr_number": 2290, "pr_title": "proposal for user control of skaffold helpers", "pr_createdAt": "2020-02-12T18:16:15Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2290", "timeline": [{"oid": "f0b5010ec028b23563aea637e5388ab0b973fe62", "url": "https://github.com/GoogleContainerTools/jib/commit/f0b5010ec028b23563aea637e5388ab0b973fe62", "message": "proposal for user control of skaffold helpers", "committedDate": "2020-02-12T18:18:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5OTc1NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2290#discussion_r379099754", "bodyText": "Shouldn't be in <outputPaths>.", "author": "TadCordle", "createdAt": "2020-02-13T20:26:08Z", "path": "proposals/skaffold_config.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Proposal: Control over skaffold tasks/goals\n+\n+Relevant issues: https://github.com/GoogleContainerTools/skaffold/issues/3457, \n+\n+## Motivation\n+\n+Jib makes assumptions about what files to watch based on what it knows. Users\n+may have other ideas about intermediate build processes that occur before jib is\n+ready to process anything. Allowing users to configure the skaffold tasks to\n+correctly reflect what their build is doing could help our users use skaffold\n+more effectively.\n+\n+## Current Configuration\n+\n+None: Jib does not have any way to configure `_skaffold` tasks\n+\n+## Proposed Configuration\n+The proposal is to allow users to configure what jib shares with skaffold\n+1. Allowing inclusion/exclusion on top of the jib defaults for files to watch\n+2. Allow exclusion of files that will be sync'd\n+\n+The final jib output will not deviate from what skaffold expects, but just\n+allows for tighter control of what is sent to skaffold from jib.\n+\n+#### Gradle (`build.gradle`)\n+```\n+jib {\n+  ...\n+  skaffold {\n+    watch {\n+      include = project.files('my/custom/inputs')\n+      exclude = ['some/file/i/dont/want/watched']\n+    }\n+    sync {\n+      exclude = 'a/file'\n+    }\n+  }\n+}\n+```\n+\n+#### Maven (`pom.xml`)\n+```xml\n+<configuration>\n+  <outputPaths>", "originalCommit": "f0b5010ec028b23563aea637e5388ab0b973fe62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5OTg2MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2290#discussion_r379099860", "bodyText": "Missing </sync>", "author": "TadCordle", "createdAt": "2020-02-13T20:26:22Z", "path": "proposals/skaffold_config.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Proposal: Control over skaffold tasks/goals\n+\n+Relevant issues: https://github.com/GoogleContainerTools/skaffold/issues/3457, \n+\n+## Motivation\n+\n+Jib makes assumptions about what files to watch based on what it knows. Users\n+may have other ideas about intermediate build processes that occur before jib is\n+ready to process anything. Allowing users to configure the skaffold tasks to\n+correctly reflect what their build is doing could help our users use skaffold\n+more effectively.\n+\n+## Current Configuration\n+\n+None: Jib does not have any way to configure `_skaffold` tasks\n+\n+## Proposed Configuration\n+The proposal is to allow users to configure what jib shares with skaffold\n+1. Allowing inclusion/exclusion on top of the jib defaults for files to watch\n+2. Allow exclusion of files that will be sync'd\n+\n+The final jib output will not deviate from what skaffold expects, but just\n+allows for tighter control of what is sent to skaffold from jib.\n+\n+#### Gradle (`build.gradle`)\n+```\n+jib {\n+  ...\n+  skaffold {\n+    watch {\n+      include = project.files('my/custom/inputs')\n+      exclude = ['some/file/i/dont/want/watched']\n+    }\n+    sync {\n+      exclude = 'a/file'\n+    }\n+  }\n+}\n+```\n+\n+#### Maven (`pom.xml`)\n+```xml\n+<configuration>\n+  <outputPaths>\n+    <skaffold>/absolute/location.tar\n+      <watch>\n+        <includes>some/file,another/file</includes>\n+        <excludes>\n+          <exclude>not/me</exclude>\n+          <exclude>also/not/me</exclude>\n+        <excludes>\n+      </watch>\n+      <sync>\n+        <excludes>some/file<excludes>\n+    </skaffold>", "originalCommit": "f0b5010ec028b23563aea637e5388ab0b973fe62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEwMDE5MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2290#discussion_r379100190", "bodyText": "If there's only one,\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Relevant issues: https://github.com/GoogleContainerTools/skaffold/issues/3457, \n          \n          \n            \n            Relevant issue: https://github.com/GoogleContainerTools/skaffold/issues/3457", "author": "TadCordle", "createdAt": "2020-02-13T20:27:03Z", "path": "proposals/skaffold_config.md", "diffHunk": "@@ -0,0 +1,62 @@\n+# Proposal: Control over skaffold tasks/goals\n+\n+Relevant issues: https://github.com/GoogleContainerTools/skaffold/issues/3457, ", "originalCommit": "f0b5010ec028b23563aea637e5388ab0b973fe62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b8b3c0ed5b02ca38d7ca9d59b11dc31a5cd0b3f3", "url": "https://github.com/GoogleContainerTools/jib/commit/b8b3c0ed5b02ca38d7ca9d59b11dc31a5cd0b3f3", "message": "proposal for user control of skaffold helpers", "committedDate": "2020-02-13T20:31:45Z", "type": "commit"}, {"oid": "97ad40c44c04b78adbad0cbe5a22f1577e9dc232", "url": "https://github.com/GoogleContainerTools/jib/commit/97ad40c44c04b78adbad0cbe5a22f1577e9dc232", "message": "fixes", "committedDate": "2020-02-13T20:31:45Z", "type": "commit"}, {"oid": "97ad40c44c04b78adbad0cbe5a22f1577e9dc232", "url": "https://github.com/GoogleContainerTools/jib/commit/97ad40c44c04b78adbad0cbe5a22f1577e9dc232", "message": "fixes", "committedDate": "2020-02-13T20:31:45Z", "type": "forcePushed"}, {"oid": "99b58fe1fdc0e7f9776b23781104a580676aa66f", "url": "https://github.com/GoogleContainerTools/jib/commit/99b58fe1fdc0e7f9776b23781104a580676aa66f", "message": "correct maven config, no parsing comma separated", "committedDate": "2020-02-14T18:46:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzNjc1Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2290#discussion_r380336752", "bodyText": "What does /absolute/location.tar mean?", "author": "briandealwis", "createdAt": "2020-02-17T19:17:21Z", "path": "proposals/skaffold_config.md", "diffHunk": "@@ -0,0 +1,70 @@\n+# Proposal: Control over skaffold tasks/goals\n+\n+Relevant issue: https://github.com/GoogleContainerTools/skaffold/issues/3457\n+\n+## Motivation\n+\n+Jib makes assumptions about what files to watch based on what it knows. Users\n+may have other ideas about intermediate build processes that occur before jib is\n+ready to process anything. Allowing users to configure the skaffold tasks to\n+correctly reflect what their build is doing could help our users use skaffold\n+more effectively.\n+\n+## Current Configuration\n+\n+None: Jib does not have any way to configure `_skaffold` tasks\n+\n+## Proposed Configuration\n+The proposal is to allow users to configure what jib shares with skaffold\n+1. Allowing inclusion/exclusion on top of the jib defaults for files to watch\n+2. Allow exclusion of files that will be sync'd\n+\n+The final jib output will not deviate from what skaffold expects, but just\n+allows for tighter control of what is sent to skaffold from jib.\n+\n+#### Gradle (`build.gradle`)\n+```groovy\n+jib {\n+  ...\n+  skaffold {\n+    watch {\n+      buildIncludes = 'script.gradle'\n+      includes = project.files('my/custom/inputs')\n+      excludes = ['some/file/i/dont/want/watched']\n+    }\n+    sync {\n+      exclude = 'a/file'\n+    }\n+  }\n+}\n+```\n+\n+#### Maven (`pom.xml`)\n+```xml\n+<configuration>\n+  <skaffold>/absolute/location.tar", "originalCommit": "99b58fe1fdc0e7f9776b23781104a580676aa66f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4MjQxNA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2290#discussion_r380882414", "bodyText": "man, I really messed up this doc, I'll push an update.", "author": "loosebazooka", "createdAt": "2020-02-18T19:20:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzNjc1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzNjg5MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2290#discussion_r380336891", "bodyText": "typo: , \u2192 >", "author": "briandealwis", "createdAt": "2020-02-17T19:17:49Z", "path": "proposals/skaffold_config.md", "diffHunk": "@@ -0,0 +1,70 @@\n+# Proposal: Control over skaffold tasks/goals\n+\n+Relevant issue: https://github.com/GoogleContainerTools/skaffold/issues/3457\n+\n+## Motivation\n+\n+Jib makes assumptions about what files to watch based on what it knows. Users\n+may have other ideas about intermediate build processes that occur before jib is\n+ready to process anything. Allowing users to configure the skaffold tasks to\n+correctly reflect what their build is doing could help our users use skaffold\n+more effectively.\n+\n+## Current Configuration\n+\n+None: Jib does not have any way to configure `_skaffold` tasks\n+\n+## Proposed Configuration\n+The proposal is to allow users to configure what jib shares with skaffold\n+1. Allowing inclusion/exclusion on top of the jib defaults for files to watch\n+2. Allow exclusion of files that will be sync'd\n+\n+The final jib output will not deviate from what skaffold expects, but just\n+allows for tighter control of what is sent to skaffold from jib.\n+\n+#### Gradle (`build.gradle`)\n+```groovy\n+jib {\n+  ...\n+  skaffold {\n+    watch {\n+      buildIncludes = 'script.gradle'\n+      includes = project.files('my/custom/inputs')\n+      excludes = ['some/file/i/dont/want/watched']\n+    }\n+    sync {\n+      exclude = 'a/file'\n+    }\n+  }\n+}\n+```\n+\n+#### Maven (`pom.xml`)\n+```xml\n+<configuration>\n+  <skaffold>/absolute/location.tar\n+    <watch>\n+      <buildIncludes>\n+        <buildInclude>some/pomfile.xml</buildInclude>\n+      </buildIncludes>\n+      <includes>\n+        <include>some/file</include>\n+        <include,another/file</include>", "originalCommit": "99b58fe1fdc0e7f9776b23781104a580676aa66f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}