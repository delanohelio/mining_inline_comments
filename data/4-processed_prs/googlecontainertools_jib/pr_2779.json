{"pr_number": 2779, "pr_title": "Refactor StepsRunner to have step methods accept progressDispatcherFactory", "pr_createdAt": "2020-09-22T18:01:46Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2779", "timeline": [{"oid": "ed31e0dcc41d0653a57371ce743816c96a997729", "url": "https://github.com/GoogleContainerTools/jib/commit/ed31e0dcc41d0653a57371ce743816c96a997729", "message": "Refactor to accept progressDispatcherFactory", "committedDate": "2020-09-22T17:57:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0MzA3MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2779#discussion_r492943070", "bodyText": "Do we no longer need to initialize a root progress dispatcher?", "author": "mpeddada1", "createdAt": "2020-09-22T18:21:36Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -115,17 +116,16 @@ public static StepsRunner begin(BuildContext buildContext) {\n   private final BuildContext buildContext;\n   private final TempDirectoryProvider tempDirectoryProvider = new TempDirectoryProvider();\n \n-  // We save steps to run by wrapping each step into a Runnable, only because of the unfortunate\n-  // chicken-and-egg situation arising from using ProgressEventDispatcher. The current\n-  // ProgressEventDispatcher model requires knowing in advance how many units of work (i.e., steps)\n-  // we should perform. That is, to instantiate a root ProgressEventDispatcher instance, we should\n-  // know ahead how many steps we will run. However, to instantiate a step, we need a root progress\n-  // dispatcher. So, we wrap steps into Runnables and save them to run them later. Then we can count\n-  // the number of Runnables and, create a root dispatcher, and run the saved Runnables.\n-  private final List<Runnable> stepsToRun = new ArrayList<>();\n+  // Instead of directly running each step, we first save them as a lambda. This is only because of\n+  // the unfortunate chicken-and-egg situation when using ProgressEventDispatcher. The current\n+  // ProgressEventDispatcher model requires allocating the total units of work (i.e., steps)\n+  // up front. That is, to instantiate a root ProgressEventDispatcher, we should know ahead how many\n+  // steps we will run. However, to run a step, we need a root progress dispatcher. So, we take each\n+  // step as a lambda and save them to run later. Then we can count the number of lambdas, create a\n+  // root dispatcher with the count, and run the saved lambdas using the dispatcher.\n+  private final List<Consumer<ProgressEventDispatcher.Factory>> stepsToRun = new ArrayList<>();\n \n   @Nullable private String rootProgressDescription;\n-  @Nullable private ProgressEventDispatcher rootProgressDispatcher;", "originalCommit": "ed31e0dcc41d0653a57371ce743816c96a997729", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk1MDg1Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2779#discussion_r492950857", "bodyText": "Right, this is no longer needed, as the StepsRunner.run() injects a factory into each method (such as PullBaseImages()), rather than the method retrieving a factory from a class field rootProgressDispatcher on its own.", "author": "chanseokoh", "createdAt": "2020-09-22T18:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0MzA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxOTY3OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2779#discussion_r493619678", "bodyText": "Thanks!", "author": "mpeddada1", "createdAt": "2020-09-23T14:04:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0MzA3MA=="}], "type": "inlineReview"}]}