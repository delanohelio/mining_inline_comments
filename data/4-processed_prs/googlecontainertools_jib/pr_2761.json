{"pr_number": 2761, "pr_title": "Throw IllegalArgumentException when jib.to.tags is set to a collection containing a null value. ", "pr_createdAt": "2020-09-14T21:53:00Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2761", "timeline": [{"oid": "a7d2d832ff74aa29d2f17d966eeb6aa879d213b5", "url": "https://github.com/GoogleContainerTools/jib/commit/a7d2d832ff74aa29d2f17d966eeb6aa879d213b5", "message": "throw IllegalArgumentException with message when jib.to.tags is assigned to Set<String> containing null value", "committedDate": "2020-09-14T19:35:49Z", "type": "commit"}, {"oid": "334729a526664ea1f8f30a8d16e5285943051c89", "url": "https://github.com/GoogleContainerTools/jib/commit/334729a526664ea1f8f30a8d16e5285943051c89", "message": "fixing comment", "committedDate": "2020-09-14T19:37:48Z", "type": "commit"}, {"oid": "857cae59d1c99627a934a74c9119062d34df9395", "url": "https://github.com/GoogleContainerTools/jib/commit/857cae59d1c99627a934a74c9119062d34df9395", "message": "fixing formatting", "committedDate": "2020-09-14T21:47:29Z", "type": "commit"}, {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "url": "https://github.com/GoogleContainerTools/jib/commit/81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "message": "fix commenting", "committedDate": "2020-09-14T21:49:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODA3Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488828072", "bodyText": "For readability: I think maybe tags is confusing with the class member tags (this.tags). Perhaps use something that differentiates it? Personally I don't think this.tags should be used very often outside constructors.", "author": "loosebazooka", "createdAt": "2020-09-15T17:12:05Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =", "originalCommit": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODUwMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488828501", "bodyText": "should we handle whitespace?", "author": "loosebazooka", "createdAt": "2020-09-15T17:12:54Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =\n+        property != null\n+            ? ImmutableSet.copyOf(\n+                ConfigurationPropertyValidator.parseListProperty(\n+                    System.getProperty(PropertyNames.TO_TAGS)))\n+            : this.tags;\n+    if (tags.stream().anyMatch(Strings::isNullOrEmpty)) {", "originalCommit": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NTI5MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489775290", "bodyText": "Oh that didn't occur to me. Thanks!", "author": "mpeddada1", "createdAt": "2020-09-16T21:52:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODc2Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488828762", "bodyText": "if we fail on empty, we should probably add a test for empty as well", "author": "loosebazooka", "createdAt": "2020-09-15T17:13:25Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.\n+    HashSet<String> tags = new HashSet<String>();\n+    tags.add(null);", "originalCommit": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MzE5MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489553190", "bodyText": "Also the case of getting tags from the system property.", "author": "chanseokoh", "createdAt": "2020-09-16T16:03:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODc2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NTM3NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489775374", "bodyText": "good catch!", "author": "mpeddada1", "createdAt": "2020-09-16T21:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODc2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyOTA5NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488829094", "bodyText": "Maybe just put this in a new test?", "author": "loosebazooka", "createdAt": "2020-09-15T17:14:00Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.", "originalCommit": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NTQzMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489555433", "bodyText": "Nit: if the message doesn't provide additional helpful information or details, just use Assert.fail().\nAnd I think it's meaningful to move testJibExtension.to() out of the try-catch block.", "author": "chanseokoh", "createdAt": "2020-09-16T16:06:54Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.\n+    HashSet<String> tags = new HashSet<String>();\n+    tags.add(null);\n+    tags.add(\"tags1\");\n+    try {\n+      testJibExtension.to(\n+          to -> {\n+            to.setTags(tags);\n+          });\n+      testJibExtension.getTo().getTags();\n+      Assert.fail(\"Expect this to fail\");", "originalCommit": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NTk3Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489775973", "bodyText": "Ah yes, having all the extra lines outside the try-catch makes sense. Thanks!", "author": "mpeddada1", "createdAt": "2020-09-16T21:53:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NTQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NjIwNg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489556206", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                System.getProperty(PropertyNames.TO_TAGS)))\n          \n          \n            \n                                property))", "author": "chanseokoh", "createdAt": "2020-09-16T16:08:10Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =\n+        property != null\n+            ? ImmutableSet.copyOf(\n+                ConfigurationPropertyValidator.parseListProperty(\n+                    System.getProperty(PropertyNames.TO_TAGS)))", "originalCommit": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NjMyNA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489776324", "bodyText": "Done:)", "author": "mpeddada1", "createdAt": "2020-09-16T21:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NjIwNg=="}], "type": "inlineReview"}, {"oid": "5f447f310657df3db1b661955637cfd236ea4ad7", "url": "https://github.com/GoogleContainerTools/jib/commit/5f447f310657df3db1b661955637cfd236ea4ad7", "message": "added tests for empty tag, tag containing whitespace and System.getProperty", "committedDate": "2020-09-16T21:39:46Z", "type": "commit"}, {"oid": "63f385f8fafdfcd5c1230cfe2edfb7bbfd64c1f7", "url": "https://github.com/GoogleContainerTools/jib/commit/63f385f8fafdfcd5c1230cfe2edfb7bbfd64c1f7", "message": "added helper method for common code", "committedDate": "2020-09-16T21:49:21Z", "type": "commit"}, {"oid": "7a574176b9160b9c687bd46632e26c4195501b58", "url": "https://github.com/GoogleContainerTools/jib/commit/7a574176b9160b9c687bd46632e26c4195501b58", "message": "changing method names", "committedDate": "2020-09-16T21:59:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3Nzc2Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489777763", "bodyText": "How about this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                HashSet<String> tagSet = new HashSet<String>();\n          \n          \n            \n                for (String tag : tags) {\n          \n          \n            \n                  tagSet.add(tag);\n          \n          \n            \n                }\n          \n          \n            \n                HashSet<String> set = new HashSet<>(Arrays.asList(tags));", "author": "chanseokoh", "createdAt": "2020-09-16T21:57:59Z", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -400,4 +437,16 @@ public void testProperties() {\n         fakeProject.getProjectDir().toPath().resolve(Paths.get(\"tar/path\")),\n         testJibExtension.getOutputPaths().getTarPath());\n   }\n+\n+  public TargetImageParameters generateTargetImageParametersWithTags(String... tags) {\n+    HashSet<String> tagSet = new HashSet<String>();\n+    for (String tag : tags) {\n+      tagSet.add(tag);\n+    }", "originalCommit": "63f385f8fafdfcd5c1230cfe2edfb7bbfd64c1f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3OTQyNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489779427", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (tagsValue.stream().anyMatch((String str) -> str.contains(\" \"))) {\n          \n          \n            \n                if (tagsValue.stream().anyMatch(str -> str.contains(\" \"))) {", "author": "chanseokoh", "createdAt": "2020-09-16T22:02:13Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,12 +61,19 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue =\n+        property != null\n+            ? ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property))\n+            : tags;\n+    String source = property != null ? PropertyNames.TO_TAGS : \"jib.to.tags\";\n+    if (tagsValue.stream().anyMatch(Strings::isNullOrEmpty)) {\n+      throw new IllegalArgumentException(source + \" has empty tag\");\n     }\n-    return tags;\n+    if (tagsValue.stream().anyMatch((String str) -> str.contains(\" \"))) {", "originalCommit": "63f385f8fafdfcd5c1230cfe2edfb7bbfd64c1f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "633f42173e2ebb14061efe15cbd4883b480e8afc", "url": "https://github.com/GoogleContainerTools/jib/commit/633f42173e2ebb14061efe15cbd4883b480e8afc", "message": "move test for getProperty to separate method", "committedDate": "2020-09-16T22:07:19Z", "type": "commit"}, {"oid": "716e6671edf295f6ac6dc0d523aac9fc4eff55af", "url": "https://github.com/GoogleContainerTools/jib/commit/716e6671edf295f6ac6dc0d523aac9fc4eff55af", "message": "Update jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java\n\nCo-authored-by: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-09-16T22:09:08Z", "type": "commit"}, {"oid": "35d96934a5f48cd27c11a148827c761ac3cc2c40", "url": "https://github.com/GoogleContainerTools/jib/commit/35d96934a5f48cd27c11a148827c761ac3cc2c40", "message": "Update jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java\n\nCo-authored-by: Chanseok Oh <chanseok@google.com>", "committedDate": "2020-09-16T22:09:32Z", "type": "commit"}, {"oid": "d0dcb5bf2027ac99a8130415c47244f4af0547da", "url": "https://github.com/GoogleContainerTools/jib/commit/d0dcb5bf2027ac99a8130415c47244f4af0547da", "message": "formatting", "committedDate": "2020-09-16T22:12:19Z", "type": "commit"}, {"oid": "947df8424ebea1b2f01fe05e25b2853ee47e0582", "url": "https://github.com/GoogleContainerTools/jib/commit/947df8424ebea1b2f01fe05e25b2853ee47e0582", "message": "Merge branch 'fix-npe' of github.com:GoogleContainerTools/jib into fix-npe", "committedDate": "2020-09-16T22:12:23Z", "type": "commit"}, {"oid": "285d714332321abf56271b93d7a099c7caab12fb", "url": "https://github.com/GoogleContainerTools/jib/commit/285d714332321abf56271b93d7a099c7caab12fb", "message": "small fix to helper", "committedDate": "2020-09-16T22:14:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTgzNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r491149837", "bodyText": "What I meant was checking for something like \"   \" but maybe jib-core already validates these values before going?\nPerhaps your original condition was enough, lemme see if jib core validates this.", "author": "loosebazooka", "createdAt": "2020-09-18T19:29:16Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,12 +61,19 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue =\n+        property != null\n+            ? ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property))\n+            : tags;\n+    String source = property != null ? PropertyNames.TO_TAGS : \"jib.to.tags\";\n+    if (tagsValue.stream().anyMatch(Strings::isNullOrEmpty)) {\n+      throw new IllegalArgumentException(source + \" has empty tag\");\n     }\n-    return tags;\n+    if (tagsValue.stream().anyMatch(str -> str.contains(\" \"))) {", "originalCommit": "285d714332321abf56271b93d7a099c7caab12fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDYxOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r491150618", "bodyText": "Sorry, yeah so looks like we handle this properly already at the processing level: https://github.com/GoogleContainerTools/jib/blob/master/jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java#L68\nso isNullOrEmpty should be sufficient?", "author": "loosebazooka", "createdAt": "2020-09-18T19:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTgzNw=="}], "type": "inlineReview"}, {"oid": "e56c2470668bf8d00783d0c750050c6f6f24f3e4", "url": "https://github.com/GoogleContainerTools/jib/commit/e56c2470668bf8d00783d0c750050c6f6f24f3e4", "message": "remove checker for whitespace", "committedDate": "2020-09-18T20:43:47Z", "type": "commit"}, {"oid": "022cff62df2f1acf6739154bc903e2c7c29520d3", "url": "https://github.com/GoogleContainerTools/jib/commit/022cff62df2f1acf6739154bc903e2c7c29520d3", "message": "formatting", "committedDate": "2020-09-18T20:47:49Z", "type": "commit"}, {"oid": "88bb2bae746203b48155ba4a6af68ac09404e830", "url": "https://github.com/GoogleContainerTools/jib/commit/88bb2bae746203b48155ba4a6af68ac09404e830", "message": "modify error message", "committedDate": "2020-09-18T20:52:41Z", "type": "commit"}, {"oid": "09c825ae70cd16763b21ba2af63183be3111d93d", "url": "https://github.com/GoogleContainerTools/jib/commit/09c825ae70cd16763b21ba2af63183be3111d93d", "message": "fix formatting", "committedDate": "2020-09-18T21:28:46Z", "type": "commit"}, {"oid": "4c206490710b92b20f49f572c11778438739f125", "url": "https://github.com/GoogleContainerTools/jib/commit/4c206490710b92b20f49f572c11778438739f125", "message": "resolving merge conflicts", "committedDate": "2020-09-21T17:52:41Z", "type": "commit"}, {"oid": "f7a793fd7034d1a5651c2520350efbc8e2a9503a", "url": "https://github.com/GoogleContainerTools/jib/commit/f7a793fd7034d1a5651c2520350efbc8e2a9503a", "message": "catch the npe to add error message", "committedDate": "2020-09-21T19:42:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4OTA5OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r492989099", "bodyText": "Do we have to do that logic where we know its from system property or from configuration in teh build file?", "author": "loosebazooka", "createdAt": "2020-09-22T19:42:39Z", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -69,12 +69,21 @@ public void setImage(Provider<String> image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue;\n+    if (property != null) {\n+      tagsValue = ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property));\n+    } else {\n+      try {\n+        tagsValue = tags.get();\n+      } catch (NullPointerException ex) {\n+        throw new IllegalArgumentException(\"jib.to.tags contains null tag\");\n+      }\n     }\n-    return tags.get();\n+    if (tagsValue.stream().anyMatch(str -> str.isEmpty())) {\n+      throw new IllegalArgumentException(\"jib.to.tags contains empty tag\");", "originalCommit": "f7a793fd7034d1a5651c2520350efbc8e2a9503a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0OTgzOQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r493649839", "bodyText": "In terms of error messaging, I didn't think having that logic added much value since regardless of whether it was from system property or configuration, (in String source = property != null ? PropertyNames.TO_TAGS : \"jib.to.tags\";) the message would still remain the same?", "author": "mpeddada1", "createdAt": "2020-09-23T14:41:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4OTA5OQ=="}], "type": "inlineReview"}, {"oid": "db0623f19222b7d4332e1faf82dfe585ee3c2bb9", "url": "https://github.com/GoogleContainerTools/jib/commit/db0623f19222b7d4332e1faf82dfe585ee3c2bb9", "message": "Add CHANGELOG", "committedDate": "2020-09-24T22:28:40Z", "type": "commit"}, {"oid": "5ef68b13747a3d20c4d20d4de483963b8fa2ba60", "url": "https://github.com/GoogleContainerTools/jib/commit/5ef68b13747a3d20c4d20d4de483963b8fa2ba60", "message": "handle merge conflict", "committedDate": "2020-09-24T22:33:34Z", "type": "commit"}, {"oid": "b764ef37f3b57d9699d5efc69934db4c852275ad", "url": "https://github.com/GoogleContainerTools/jib/commit/b764ef37f3b57d9699d5efc69934db4c852275ad", "message": "move issue description in CHANGELOG down", "committedDate": "2020-09-24T22:36:27Z", "type": "commit"}, {"oid": "dcae4297bf71580434cbf8be61f295955dc85d70", "url": "https://github.com/GoogleContainerTools/jib/commit/dcae4297bf71580434cbf8be61f295955dc85d70", "message": "refining description", "committedDate": "2020-09-24T22:43:44Z", "type": "commit"}]}