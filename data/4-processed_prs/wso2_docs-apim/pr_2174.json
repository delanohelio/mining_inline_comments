{"pr_number": 2174, "pr_title": "[3.1.0] Update Primary User Stores Docs", "pr_createdAt": "2020-11-02T08:48:20Z", "pr_url": "https://github.com/wso2/docs-apim/pull/2174", "timeline": [{"oid": "a19c2c412e4c0e648cc856b00de9eb2334b68e67", "url": "https://github.com/wso2/docs-apim/commit/a19c2c412e4c0e648cc856b00de9eb2334b68e67", "message": "Adding property descriptions to read-write LDAP Doc", "committedDate": "2020-11-02T05:38:10Z", "type": "commit"}, {"oid": "7c4dd7a0f20b93aa6ad96a896b013f5558ed3bde", "url": "https://github.com/wso2/docs-apim/commit/7c4dd7a0f20b93aa6ad96a896b013f5558ed3bde", "message": "update read-write LDAP Doc", "committedDate": "2020-11-02T08:24:09Z", "type": "commit"}, {"oid": "bc6e856e10626b92b4f38f3bea3f3cd5a0fbdefe", "url": "https://github.com/wso2/docs-apim/commit/bc6e856e10626b92b4f38f3bea3f3cd5a0fbdefe", "message": "Adding property descriptions to JDBC user store  Doc", "committedDate": "2020-11-02T10:48:53Z", "type": "commit"}, {"oid": "585bd13a5e8385bd960e9c2d1e4012c845d57450", "url": "https://github.com/wso2/docs-apim/commit/585bd13a5e8385bd960e9c2d1e4012c845d57450", "message": "Update read-only LDAP Doc", "committedDate": "2020-11-02T11:39:20Z", "type": "commit"}, {"oid": "96932cc80d681cde244bbedb27b47e37c23ef298", "url": "https://github.com/wso2/docs-apim/commit/96932cc80d681cde244bbedb27b47e37c23ef298", "message": "Add resd-write active directory user store", "committedDate": "2020-11-02T16:15:58Z", "type": "commit"}, {"oid": "ceef02a2dcaac3de32f906300d2ca79eedd5f728", "url": "https://github.com/wso2/docs-apim/commit/ceef02a2dcaac3de32f906300d2ca79eedd5f728", "message": "Update primary user store doc", "committedDate": "2020-11-02T16:30:25Z", "type": "commit"}, {"oid": "65312373746c905ca29710f9d001dc8bc6a24f88", "url": "https://github.com/wso2/docs-apim/commit/65312373746c905ca29710f9d001dc8bc6a24f88", "message": "Update and Refractor the content", "committedDate": "2020-11-03T05:19:53Z", "type": "commit"}, {"oid": "2c9c95d521af057679201427d5f945a893f8798a", "url": "https://github.com/wso2/docs-apim/commit/2c9c95d521af057679201427d5f945a893f8798a", "message": "Add database specific configd for JDBC user store", "committedDate": "2020-11-03T05:54:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NDUzMg==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r517084532", "bodyText": "IMO, we do not need mention about the old configuration file - user-mgt.xml. Shall we only mention about deployment.toml?", "author": "vithu30", "createdAt": "2020-11-04T03:57:49Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-a-jdbc-user-store.md", "diffHunk": "@@ -1,6 +1,15 @@\n # Configuring a JDBC User Store\n \n-JDBC user stores can be configured using the <APIM_HOME>/repository/conf/deployment.toml file's [user_store] configuration section. The user core connects to two databases (the same database is utilized by default):\n+User management functionality is provided by default in WSO2 API Manager and it can be configured in the \n+`<API-M_HOME>/repository/conf/deployment.toml` file. The changes done in the `deployment.toml` file will be automatically populated to the `<API-M_HOME>/repository/conf/user-mgt.xml` file as well. ", "originalCommit": "2c9c95d521af057679201427d5f945a893f8798a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExMDU2Mg==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r517110562", "bodyText": "Removed the sections about the old configuration file user-mgt.xml  and updated the section to use this config to verify the configs are correctly populated or not.\nc21f3d0", "author": "Sarangan0219", "createdAt": "2020-11-04T05:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NDUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjMwMQ==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r517086301", "bodyText": "Did we test configuring the userstore type as database. AFAIR, there were some issues when setting the userstore type as database. We need to set it as database_unique_id to resolve it.  could you please double check on this? :)", "author": "vithu30", "createdAt": "2020-11-04T04:05:47Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-a-jdbc-user-store.md", "diffHunk": "@@ -13,11 +22,18 @@ You can either use the default configuration or you can change it in the followi\n !!!tip\n     Before you begin, ensure that the RDBMS that you want to use as the JDBC user store is correctly set up for your system. Then, follow the steps given below to configure a JDBC user store as the primary user store in your product.\n \n+Follow the given steps to configure a JDBC user store:\n+\n+-   [Step 1: Configuring the JDBC user store manager](#step-1-configuring-the-jdbc-user-store-manager)\n+-   [Step 2: Updating the system administrator](#step-2-updating-the-system-administrator)\n+-   [Step 3: Updating the datasources](#step-3-updating-the-datasources)\n+-   [Step 4: Starting the server](#step-4-starting-the-server)\n+\n ### Step 1: Configuring the JDBC user store manager\n \n-1. To configure a JDBC user store as the primary user store, you must give the value: `database` for the config: `user_store.type` in the `<APIM_HOME>/repository/conf/deployment.toml` file.\n+-   Add these configurations below in `<API-M_HOME>/repository/conf/deployment.toml` file.\n \n-    ```toml\n+    ```", "originalCommit": "2c9c95d521af057679201427d5f945a893f8798a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExMDY1Nw==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r517110657", "bodyText": "Corrected c21f3d0", "author": "Sarangan0219", "createdAt": "2020-11-04T05:51:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjMwMQ=="}], "type": "inlineReview"}, {"oid": "c21f3d0bd012d6cbf0be75733e110326ae5e53f3", "url": "https://github.com/wso2/docs-apim/commit/c21f3d0bd012d6cbf0be75733e110326ae5e53f3", "message": "Refractor and update the content", "committedDate": "2020-11-04T05:47:27Z", "type": "commit"}, {"oid": "50509c50e6204cd9ef17485aca59ca64b5ef5fc3", "url": "https://github.com/wso2/docs-apim/commit/50509c50e6204cd9ef17485aca59ca64b5ef5fc3", "message": "Updating with unique id classes", "committedDate": "2020-11-04T11:01:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2NjQ5MA==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r517266490", "bodyText": "Shall we use the relevant mappings used in infer.json. For instance, for UniqueIDActiveDirectoryUserStoreManager class, userstore name as active_directory_unique_id", "author": "vithu30", "createdAt": "2020-11-04T11:07:50Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-the-primary-user-store.md", "diffHunk": "@@ -26,32 +24,37 @@ Instead of using the embedded database, you can set up a separate repository and\n <tbody>\n <tr class=\"odd\">\n <td><strong>read_only_ldap</strong></td>\n-<td><code>org.wso2.carbon.user.core.ldap.ReadOnlyLDAPUserStoreManager</code></td>\n+<td><code>org.wso2.carbon.user.core.ldap.UniqueIDReadOnlyLDAPUserStoreManager</code></td>\n <td><p>Use <code>read_only_ldap</code> to do read-only operations for external LDAP user stores.</p></td>\n </tr>\n <tr class=\"even\">\n <td><strong>read_write_ldap</strong></td>\n-<td><code>org.wso2.carbon.user.core.ldap.ReadWriteLDAPUserStoreManager</code></td>\n+<td><code>org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager</code></td>\n <td><p>Use <code>read_write_ldap</code> for external LDAP user stores to do both read and write operations.</p></td>\n </tr>\n <tr class=\"odd\">\n <td><strong>active_directory</strong></td>\n-<td><code>org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreManager</code></td>\n+<td><code>org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager </code></td>", "originalCommit": "50509c50e6204cd9ef17485aca59ca64b5ef5fc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2ODUxNA==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r517268514", "bodyText": "fixed 25962a1", "author": "Sarangan0219", "createdAt": "2020-11-04T11:11:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2NjQ5MA=="}], "type": "inlineReview"}, {"oid": "48b6a87f1082acfb45973e0b9011fbe5d178d036", "url": "https://github.com/wso2/docs-apim/commit/48b6a87f1082acfb45973e0b9011fbe5d178d036", "message": "Updating with unique id class", "committedDate": "2020-11-04T11:08:48Z", "type": "commit"}, {"oid": "25962a162efd96371db974af0b1339864f591d11", "url": "https://github.com/wso2/docs-apim/commit/25962a162efd96371db974af0b1339864f591d11", "message": "Fix class names", "committedDate": "2020-11-04T11:10:56Z", "type": "commit"}, {"oid": "1d7aae103528cee4e56fdd8812a38c0033ed513a", "url": "https://github.com/wso2/docs-apim/commit/1d7aae103528cee4e56fdd8812a38c0033ed513a", "message": "Add missing properties to JDBC example", "committedDate": "2020-11-05T07:22:39Z", "type": "commit"}, {"oid": "3524d72732c050337bac1e73178eafd01c7ad354", "url": "https://github.com/wso2/docs-apim/commit/3524d72732c050337bac1e73178eafd01c7ad354", "message": "Reviewed and updated full doc", "committedDate": "2020-11-05T16:39:45Z", "type": "commit"}, {"oid": "68fd3bc20124ec6cbd7eddc02691ab36c56baab8", "url": "https://github.com/wso2/docs-apim/commit/68fd3bc20124ec6cbd7eddc02691ab36c56baab8", "message": "Updated the table formatting", "committedDate": "2020-11-06T06:57:26Z", "type": "commit"}, {"oid": "795c72fd83739b843dcf097628445e874c9695c8", "url": "https://github.com/wso2/docs-apim/commit/795c72fd83739b843dcf097628445e874c9695c8", "message": "Reviewed full doc", "committedDate": "2020-12-21T10:05:07Z", "type": "commit"}, {"oid": "9d2c50f06e95ea9854b1f4edd1e4518265af4026", "url": "https://github.com/wso2/docs-apim/commit/9d2c50f06e95ea9854b1f4edd1e4518265af4026", "message": "Reviewed in full", "committedDate": "2020-12-21T18:04:15Z", "type": "commit"}, {"oid": "bf320fdf932f20f5a2b4cc52a6c2cb09f1af5c22", "url": "https://github.com/wso2/docs-apim/commit/bf320fdf932f20f5a2b4cc52a6c2cb09f1af5c22", "message": "Fixed typo", "committedDate": "2020-12-21T18:08:57Z", "type": "commit"}, {"oid": "f7ac730754fa59d1b9c9bd2dc0446eb7ff600965", "url": "https://github.com/wso2/docs-apim/commit/f7ac730754fa59d1b9c9bd2dc0446eb7ff600965", "message": "Reviewed full doc", "committedDate": "2020-12-22T13:37:24Z", "type": "commit"}, {"oid": "98b8f45e0ad0d167d703cae61cf57d91ec852404", "url": "https://github.com/wso2/docs-apim/commit/98b8f45e0ad0d167d703cae61cf57d91ec852404", "message": "Reviewed the full doc", "committedDate": "2020-12-22T14:19:13Z", "type": "commit"}, {"oid": "f60212bcf3f36f6a00f3595c49ccf09e2ad0b67f", "url": "https://github.com/wso2/docs-apim/commit/f60212bcf3f36f6a00f3595c49ccf09e2ad0b67f", "message": "minor fixes", "committedDate": "2020-12-22T16:36:30Z", "type": "commit"}, {"oid": "7e2aa06101787435024e0f2b18031b1e24347dc0", "url": "https://github.com/wso2/docs-apim/commit/7e2aa06101787435024e0f2b18031b1e24347dc0", "message": "Minor fixes", "committedDate": "2020-12-22T16:52:02Z", "type": "commit"}, {"oid": "74c63bf67582a5c01ac09dd38945c55153646c56", "url": "https://github.com/wso2/docs-apim/commit/74c63bf67582a5c01ac09dd38945c55153646c56", "message": "minor fix", "committedDate": "2020-12-22T16:57:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NjM3NQ==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r546776375", "bodyText": "Be mindful when adding links. The link text says \"step 4\" but the link says \"step3\".", "author": "Mariangela", "createdAt": "2020-12-21T15:41:26Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-a-read-write-active-directory-user-store.md", "diffHunk": "@@ -1,23 +1,83 @@\n #Configuring a Read-Write Active Directory User Store\n \n-!!! info\n-    The default User Store\n+User management functionality is provided by default in WSO2 API Manager and it can be configured in the \n+`<API-M_HOME>/repository/conf/deployment.toml` file. The instructions given below explains how to configure Read Write Active Directory as a user store.\n \n-    The primary user store that is configured by default in the `user-mgt.xml` file is a JDBC user store, which reads/writes into the internal database of the product server.\u00a0By default, the internal database is H2 for all WSO2 products excluding WSO2 Identity Server.\n-    \n-    Note that the RDBMS used in the default configuration can remain as the database used for storing Authorization information.\n+!!! tip\n+       Refer [Configuring primary User Stores](../configuring-the-primary-user-store) to get a high-level understanding of the primary user stores available in WSO2 API Manager.\n \n+!!! info\n+       **Default User Store**: The primary user store that is configured by default in the `deployment.toml` file of API Manager is a JDBC user store, which reads/writes into the internal database of the product server. By default, the internal database is H2. This database is used by the Authorization Manager (for user authentication information) as well as the User Store Manager (for defining users and roles).\n+       \n+       Note that the RDBMS used in the default configuration can remain as the database used for storing Authorization information.\n+       \n Follow the given steps to configure an external Active Directory as the primary user store:\n \n -   [Step 1: Setting up the external AD user store manager](#step-1-setting-up-the-external-ad-user-store-manager)\n -   [Step 2: Updating the system administrator](#step-2-updating-the-system-administrator)\n--   [Step 3: Starting the server](#step-3-starting-the-server)\n+-   [Step 3: Starting the IS server](#step-3-starting-the-is-server)\n+-   [Step 4: Starting the APIM server](#step-3-starting-the-apim-server)", "originalCommit": "795c72fd83739b843dcf097628445e874c9695c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3Njg4OA==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r546776888", "bodyText": "This link is broken", "author": "Mariangela", "createdAt": "2020-12-21T15:42:21Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-a-read-write-active-directory-user-store.md", "diffHunk": "@@ -68,18 +128,77 @@ Follow the given steps to configure an external Active Directory as the primary\n  ConnectionRetryDelay=\"120000\"\n  ```\n  \n--   The `class` attribute for an external AD is `org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreManager`.\n-```toml\n-[user_store]\n-class=\"org.wso2.carbon.user.core.ldap.ActiveDirectoryUserStoreManager\"\n-type = \"active_directory\"\n-base_dn = \"cn=Users,dc=wso2,dc=org\"\n-```\n-\n !!! note\n-    Note that these configurations will automatically applied to the `user-mgt.xml` file so you do not need to edit it.\n+    When working with Active Directory;\n+\n+    -   It is best to enable the `GetAllRolesOfUserEnabled` property in the `AuthorizationManager` as follows. See the documentation on [configuring the Authorization Manager](./../../configuring-the-authorization-manager/) for more information.", "originalCommit": "795c72fd83739b843dcf097628445e874c9695c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDYzOQ==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r547394639", "bodyText": "@Sarangan0219 , this issue is still pending. Please fix this link.", "author": "Mariangela", "createdAt": "2020-12-22T17:07:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3Njg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4ODA3MQ==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r546788071", "bodyText": "The text after \"see\" should contain the link. You should not add the hyperlink separately.", "author": "Mariangela", "createdAt": "2020-12-21T16:01:09Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-a-read-write-active-directory-user-store.md", "diffHunk": "@@ -1,23 +1,83 @@\n #Configuring a Read-Write Active Directory User Store\n \n-!!! info\n-    The default User Store\n+User management functionality is provided by default in WSO2 API Manager and it can be configured in the \n+`<API-M_HOME>/repository/conf/deployment.toml` file. The instructions given below explains how to configure Read Write Active Directory as a user store.\n \n-    The primary user store that is configured by default in the `user-mgt.xml` file is a JDBC user store, which reads/writes into the internal database of the product server.\u00a0By default, the internal database is H2 for all WSO2 products excluding WSO2 Identity Server.\n-    \n-    Note that the RDBMS used in the default configuration can remain as the database used for storing Authorization information.\n+!!! tip\n+       Refer [Configuring primary User Stores](../configuring-the-primary-user-store) to get a high-level understanding of the primary user stores available in WSO2 API Manager.\n \n+!!! info\n+       **Default User Store**: The primary user store that is configured by default in the `deployment.toml` file of API Manager is a JDBC user store, which reads/writes into the internal database of the product server. By default, the internal database is H2. This database is used by the Authorization Manager (for user authentication information) as well as the User Store Manager (for defining users and roles).\n+       \n+       Note that the RDBMS used in the default configuration can remain as the database used for storing Authorization information.\n+       \n Follow the given steps to configure an external Active Directory as the primary user store:\n \n -   [Step 1: Setting up the external AD user store manager](#step-1-setting-up-the-external-ad-user-store-manager)\n -   [Step 2: Updating the system administrator](#step-2-updating-the-system-administrator)\n--   [Step 3: Starting the server](#step-3-starting-the-server)\n+-   [Step 3: Starting the IS server](#step-3-starting-the-is-server)\n+-   [Step 4: Starting the APIM server](#step-3-starting-the-apim-server)\n+\n \n ### Step 1: Setting up the external AD user store manager\n \n-!!! info\n+-   Add these configurations below in `<API-M_HOME>/repository/conf/deployment.toml` file.\n+    ```\n+    [user_store]\n+    class= \"org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager\"\n+    type = \"active_directory_unique_id\"\n+    connection_url = \"ldap://localhost:10390\"\n+    connection_name = \"uid=admin,ou=system\"\n+    connection_password = \"admin\"\n+    ```\n+    Descriptions on connection properties of `[user_store]` is given below: \n+    \n+<table>\n+<thead>\n+<tr class=\"header\">\n+<th>Property Id</th>\n+<th>Primary User Store Property</th>\n+<th>Secondary User Store Property</th>\n+<th>Description</th>\n+</tr>\n+</thead>\n+<tbody>\n+<tr class=\"even\">\n+<td>ConnectionURL</td>\n+<td>connection_url</td>\n+<td>Connection URL</td>\n+<td><p>Connection URL to the user store server. In the case of default LDAP in Carbon, the port is specified in the carbon.xml file, and a reference to that port is included in this configuration.</p>\n+<p>Sample values:<br />\n+<a href=\"ldap://10.100.1.100:389\">ldap://10.100.1.100:389</a><br />\n+<a href=\"ldaps://10.100.1.102:639\">ldaps://10.100.1.102:639</a><br />\n+<br />\n+For Active Directory, the connection URL should have the following format:\n+`ConnectionURL=\"ldap://<AD host-ip>:<AD_listen_port>\"`\n+<br />\n+If you are connecting over ldaps (secured LDAP)<br />\n+Need to import the certificate of user store to the client-truststore.jks of the WSO2 product. For information on how to add certificates to the truststore and how keystores are configured and used in a system, see Using Asymmetric Encryption.<br />\n+<a href=\"https://is.docs.wso2.com/en/5.9.0/administer/using-asymmetric-encryption\">Using asymmetric encryption</a><br />\n+<br />\n+If LDAP connection pooling is used, see enable connection pooling for LDAPS connections.<br />", "originalCommit": "795c72fd83739b843dcf097628445e874c9695c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4ODM0Ng==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r546788346", "bodyText": "The text after \"see\" should contain the link. You should not add the hyperlink separately.", "author": "Mariangela", "createdAt": "2020-12-21T16:01:37Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-a-read-write-active-directory-user-store.md", "diffHunk": "@@ -1,23 +1,83 @@\n #Configuring a Read-Write Active Directory User Store\n \n-!!! info\n-    The default User Store\n+User management functionality is provided by default in WSO2 API Manager and it can be configured in the \n+`<API-M_HOME>/repository/conf/deployment.toml` file. The instructions given below explains how to configure Read Write Active Directory as a user store.\n \n-    The primary user store that is configured by default in the `user-mgt.xml` file is a JDBC user store, which reads/writes into the internal database of the product server.\u00a0By default, the internal database is H2 for all WSO2 products excluding WSO2 Identity Server.\n-    \n-    Note that the RDBMS used in the default configuration can remain as the database used for storing Authorization information.\n+!!! tip\n+       Refer [Configuring primary User Stores](../configuring-the-primary-user-store) to get a high-level understanding of the primary user stores available in WSO2 API Manager.\n \n+!!! info\n+       **Default User Store**: The primary user store that is configured by default in the `deployment.toml` file of API Manager is a JDBC user store, which reads/writes into the internal database of the product server. By default, the internal database is H2. This database is used by the Authorization Manager (for user authentication information) as well as the User Store Manager (for defining users and roles).\n+       \n+       Note that the RDBMS used in the default configuration can remain as the database used for storing Authorization information.\n+       \n Follow the given steps to configure an external Active Directory as the primary user store:\n \n -   [Step 1: Setting up the external AD user store manager](#step-1-setting-up-the-external-ad-user-store-manager)\n -   [Step 2: Updating the system administrator](#step-2-updating-the-system-administrator)\n--   [Step 3: Starting the server](#step-3-starting-the-server)\n+-   [Step 3: Starting the IS server](#step-3-starting-the-is-server)\n+-   [Step 4: Starting the APIM server](#step-3-starting-the-apim-server)\n+\n \n ### Step 1: Setting up the external AD user store manager\n \n-!!! info\n+-   Add these configurations below in `<API-M_HOME>/repository/conf/deployment.toml` file.\n+    ```\n+    [user_store]\n+    class= \"org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager\"\n+    type = \"active_directory_unique_id\"\n+    connection_url = \"ldap://localhost:10390\"\n+    connection_name = \"uid=admin,ou=system\"\n+    connection_password = \"admin\"\n+    ```\n+    Descriptions on connection properties of `[user_store]` is given below: \n+    \n+<table>\n+<thead>\n+<tr class=\"header\">\n+<th>Property Id</th>\n+<th>Primary User Store Property</th>\n+<th>Secondary User Store Property</th>\n+<th>Description</th>\n+</tr>\n+</thead>\n+<tbody>\n+<tr class=\"even\">\n+<td>ConnectionURL</td>\n+<td>connection_url</td>\n+<td>Connection URL</td>\n+<td><p>Connection URL to the user store server. In the case of default LDAP in Carbon, the port is specified in the carbon.xml file, and a reference to that port is included in this configuration.</p>\n+<p>Sample values:<br />\n+<a href=\"ldap://10.100.1.100:389\">ldap://10.100.1.100:389</a><br />\n+<a href=\"ldaps://10.100.1.102:639\">ldaps://10.100.1.102:639</a><br />\n+<br />\n+For Active Directory, the connection URL should have the following format:\n+`ConnectionURL=\"ldap://<AD host-ip>:<AD_listen_port>\"`\n+<br />\n+If you are connecting over ldaps (secured LDAP)<br />\n+Need to import the certificate of user store to the client-truststore.jks of the WSO2 product. For information on how to add certificates to the truststore and how keystores are configured and used in a system, see Using Asymmetric Encryption.<br />", "originalCommit": "795c72fd83739b843dcf097628445e874c9695c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyNzk4Mg==", "url": "https://github.com/wso2/docs-apim/pull/2174#discussion_r546827982", "bodyText": "The link is broken. It should have a # in front.", "author": "Mariangela", "createdAt": "2020-12-21T17:15:43Z", "path": "en/docs/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-a-read-write-active-directory-user-store.md", "diffHunk": "@@ -127,105 +246,58 @@ Given below is a sample configuration for the external read/write user store in\n         <Property name=\"MemberOfAttribute\">memberOf</Property>\n         <Property name=\"UsernameJavaScriptRegEx\">^[\\S]{3,30}$</Property>\n         <Property name=\"kdcEnabled\">false</Property>\n-     </UserStoreManager>\n+    </UserStoreManager>\n     ```\n \n-!!! note\n-    When working with Active Directory;\n-\n-    -   It is best to enable the `GetAllRolesOfUserEnabled` property in the `AuthorizationManager` as follows. See the documentation on [configuring the Authorization Manager](./../../configuring-the-authorization-manager/) for more information.\n-\n-        ``` xml\n-        <AuthorizationManager class=\"org.wso2.carbon.user.core.authorization.JDBCAuthorizationManager\">\n-            <Property name=\"AdminRoleManagementPermissions\">/permission</Property>\n-            <Property name=\"AuthorizationCacheEnabled\">true</Property>\n-            <Property name=\"GetAllRolesOfUserEnabled\">true</Property>\n-        </AuthorizationManager>\n-        ```\n-\n-        Although using the user store manager does not depend on this property, you must consider enabling this if there are any performance issues in your production environment. Enabling this property affects the performance when the user logs in. This depends on the users, roles and permission stats.\n+Apart from above properties WSO2 API Manager also supports advanced LDAP configurations. For descriptions on each of the advanced properties used in the `<API-M_HOME>/repository/conf/deployment.toml` file , see [Properties used in Read-Write Active Directory User Store](properties-used-in-read-write-active-directory-user-store). ", "originalCommit": "795c72fd83739b843dcf097628445e874c9695c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ad1e087c0cc47716bf925597d1aede57f950284b", "url": "https://github.com/wso2/docs-apim/commit/ad1e087c0cc47716bf925597d1aede57f950284b", "message": "fixed a link", "committedDate": "2020-12-22T17:06:11Z", "type": "commit"}, {"oid": "3ee745df9cd807f32fcd5e897a255e139eb61619", "url": "https://github.com/wso2/docs-apim/commit/3ee745df9cd807f32fcd5e897a255e139eb61619", "message": "Resolve Merge Conflicts", "committedDate": "2020-12-23T04:35:58Z", "type": "commit"}, {"oid": "0957839637970b356031eb605a616d9f602eab72", "url": "https://github.com/wso2/docs-apim/commit/0957839637970b356031eb605a616d9f602eab72", "message": "Fixed broken links", "committedDate": "2020-12-23T04:58:48Z", "type": "commit"}]}