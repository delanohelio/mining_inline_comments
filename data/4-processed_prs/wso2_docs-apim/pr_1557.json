{"pr_number": 1557, "pr_title": "Add changes related to scope management", "pr_createdAt": "2020-07-22T14:06:38Z", "pr_url": "https://github.com/wso2/docs-apim/pull/1557", "timeline": [{"oid": "437954fc0784b5116318737790287f0cd8f653b3", "url": "https://github.com/wso2/docs-apim/commit/437954fc0784b5116318737790287f0cd8f653b3", "message": "Add changes related to scope management", "committedDate": "2020-07-22T14:05:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjQ3Mg==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460312472", "bodyText": "same - tenant are in two lines. Unnecessary spaces.", "author": "shaniR", "createdAt": "2020-07-24T22:21:59Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjk2NQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460312965", "bodyText": "Shall we rephrase it to : \"In WSO2 API-M, an OAuth scope can be created before the API is created and shared across multiple APIs of the same tenant\"", "author": "shaniR", "createdAt": "2020-07-24T22:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM5MDEzNw==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467390137", "bodyText": "+1", "author": "dushaniw", "createdAt": "2020-08-08T08:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzk5NA==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460313994", "bodyText": "why do we need to include the URL into the alt text?", "author": "shaniR", "createdAt": "2020-07-24T22:27:35Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNDI5Ng==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460314296", "bodyText": "Please recheck all Image references in this doc.", "author": "shaniR", "createdAt": "2020-07-24T22:28:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExNDA2NQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r462114065", "bodyText": "@shaniR , this is correct. It is done so that when a user clicks on the image the image will appear zoomed.", "author": "Mariangela", "createdAt": "2020-07-29T08:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3Njg5MQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r468276891", "bodyText": "noted.", "author": "shaniR", "createdAt": "2020-08-11T01:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNDEwOA==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460314108", "bodyText": "Create a new scope?", "author": "shaniR", "createdAt": "2020-07-24T22:27:57Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, ", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MjI0Mg==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467372242", "bodyText": "seems to be a UI conflict of button and wizard. The name of the wizard is \"Create New Scope\"", "author": "dushaniw", "createdAt": "2020-08-08T07:04:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNDEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MjI3MA==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467372270", "bodyText": "", "author": "dushaniw", "createdAt": "2020-08-08T07:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNDEwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMzM4Nw==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460333387", "bodyText": "should we call them shared scopes? or Oauth scopes", "author": "shaniR", "createdAt": "2020-07-24T23:51:33Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MjUyNw==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467372527", "bodyText": "Shared OAuth Scopes\nneed the differentiation from API-M side, as there are local oauth scopes as well", "author": "dushaniw", "createdAt": "2020-08-08T07:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMzM4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzODM0Ng==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460338346", "bodyText": "there's extra space before the start of this line", "author": "shaniR", "createdAt": "2020-07-25T00:20:07Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTQ5Ng==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460349496", "bodyText": "Click Save.", "author": "shaniR", "createdAt": "2020-07-25T01:48:40Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         ", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTU3MQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460349571", "bodyText": "unnecessary spaces before this line", "author": "shaniR", "createdAt": "2020-07-25T01:49:29Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTc2OQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460349769", "bodyText": "An API scope is applied to a resource to restrict the access to a user group(s).", "author": "shaniR", "createdAt": "2020-07-25T01:51:29Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTgwNg==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460349806", "bodyText": "unnecessary space.", "author": "shaniR", "createdAt": "2020-07-25T01:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTg1MQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460349851", "bodyText": "shared scope?", "author": "shaniR", "createdAt": "2020-07-25T01:52:20Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created API Scope from the dropdown. The created shared scope will be listed under **API Scopes** in the ", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTg3Ng==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460349876", "bodyText": "Click Save.", "author": "shaniR", "createdAt": "2020-07-25T01:52:33Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created API Scope from the dropdown. The created shared scope will be listed under **API Scopes** in the \n+dropdown.\n \n-    <a href=\"../../../../../assets/img/learn/apply-scope.png\" ><img src=\"../../../../../assets/img/learn/apply-scope.png\" alt=\"Apply Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" alt=\"Apply Scope\" \n          title=\"Apply Scope\" width=\"70%\" /></a>\n \n-3. Publish the API.\n+3. Click on **Save** button to save changes.         ", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTkyMw==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460349923", "bodyText": "If API scope is deprecated, should we mention it here?", "author": "shaniR", "createdAt": "2020-07-25T01:53:04Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created API Scope from the dropdown. The created shared scope will be listed under **API Scopes** in the \n+dropdown.\n \n-    <a href=\"../../../../../assets/img/learn/apply-scope.png\" ><img src=\"../../../../../assets/img/learn/apply-scope.png\" alt=\"Apply Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" alt=\"Apply Scope\" \n          title=\"Apply Scope\" width=\"70%\" /></a>\n \n-3. Publish the API.\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+## Applying Multiple Scopes Per Resource\n+\n+From API-M Publisher Portal, you can attach multiple scopes to each API resource including combinations of both ", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MjYxMw==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467372613", "bodyText": "but we still provide the UI support", "author": "dushaniw", "createdAt": "2020-08-08T07:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTkyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MjY3NQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467372675", "bodyText": "will remove this phrase starting with \"including combinations ..\"", "author": "dushaniw", "createdAt": "2020-08-08T07:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0OTkyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDYxNQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460350615", "bodyText": "Shall we rephrase the above to : When a scope is attached to an API resource, access to it gets restricted based on the role(s) that is specified in the scope. In order to invoke the API resource, the API consumer has to generate an access token bound to the scope that is attached to the API resource. Follow below steps to obtain an access token specifying the requested scopes.", "author": "shaniR", "createdAt": "2020-07-25T02:00:22Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created API Scope from the dropdown. The created shared scope will be listed under **API Scopes** in the \n+dropdown.\n \n-    <a href=\"../../../../../assets/img/learn/apply-scope.png\" ><img src=\"../../../../../assets/img/learn/apply-scope.png\" alt=\"Apply Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" alt=\"Apply Scope\" \n          title=\"Apply Scope\" width=\"70%\" /></a>\n \n-3. Publish the API.\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+## Applying Multiple Scopes Per Resource\n+\n+From API-M Publisher Portal, you can attach multiple scopes to each API resource including combinations of both \n+[Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes).\n+\n+[![Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)\n+\n+Once you attach multiple scopes per resource, the resource will look as follows.\n+\n+[![After Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)\n+\n+## Defining OAuth Scopes in API Definition\n+\n+Both [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes) should be defined in same way in the OpenAPI definition as follows.\n+\n+<a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" alt=\"Resource Scopes API Definition\" \n+     title=\"Resource Scopes API Definition\" width=\"50%\" /></a>\n+\n+[![Scopes Security Definition API Definition]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)\n+\n \n ## Obtaining Tokens with Scopes\n \n-When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Please follow below steps to obtain an access token specifying the requested scopes.\n+When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Follow below steps to obtain an access token specifying the requested scopes.", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3Mjc4OQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467372789", "bodyText": "+1", "author": "dushaniw", "createdAt": "2020-08-08T07:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDY1MQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460350651", "bodyText": "Click GENERATE ACCESS TOKEN", "author": "shaniR", "createdAt": "2020-07-25T02:01:00Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created API Scope from the dropdown. The created shared scope will be listed under **API Scopes** in the \n+dropdown.\n \n-    <a href=\"../../../../../assets/img/learn/apply-scope.png\" ><img src=\"../../../../../assets/img/learn/apply-scope.png\" alt=\"Apply Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" alt=\"Apply Scope\" \n          title=\"Apply Scope\" width=\"70%\" /></a>\n \n-3. Publish the API.\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+## Applying Multiple Scopes Per Resource\n+\n+From API-M Publisher Portal, you can attach multiple scopes to each API resource including combinations of both \n+[Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes).\n+\n+[![Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)\n+\n+Once you attach multiple scopes per resource, the resource will look as follows.\n+\n+[![After Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)\n+\n+## Defining OAuth Scopes in API Definition\n+\n+Both [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes) should be defined in same way in the OpenAPI definition as follows.\n+\n+<a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" alt=\"Resource Scopes API Definition\" \n+     title=\"Resource Scopes API Definition\" width=\"50%\" /></a>\n+\n+[![Scopes Security Definition API Definition]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)\n+\n \n ## Obtaining Tokens with Scopes\n \n-When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Please follow below steps to obtain an access token specifying the requested scopes.\n+When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Follow below steps to obtain an access token specifying the requested scopes.\n \n-1. Login to API Portal(https://localhost:9443/devportal/)\n+1. Login to API Developer Portal (https://localhost:9443/devportal/).\n \n-2. Navigate to the API which has the scope protected API resource and go to Credential section to subscribe to an application.\n+2. Navigate to the API which has the scope protected API resource and go to **Subscription** section to subscribe to an application.\n \n-    <a href=\"../../../../../assets/img/learn/subscribe-weatherapi.png\" ><img src=\"../../../../../assets/img/learn/subscribe-weatherapi.png\" alt=\"Subscribe\" \n-         title=\"Subscribe\" width=\"50%\" /></a>\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/subscribe-api.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/subscribe-api.png\" alt=\"Subscribe\" \n+          title=\"Subscribe\" width=\"50%\" /></a>\n          \n-3. Generate production keys for the application.\n+3. Generate PRODUCTION or SANDBOX keys for the application.\n \n-    <a href=\"../../../../../assets/img/learn/generate-app-keys.png\" ><img src=\"../../../../../assets/img/learn/generate-app-keys.png\" alt=\"Generate App Keys\" \n-         title=\"Generate App Keys\" width=\"60%\" /></a>\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/generate-keys.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/generate-keys.png\" alt=\"Generate App Keys\" \n+          title=\"Generate App Keys\" width=\"60%\" /></a>\n \n-4. Click on **GENERATE ACCESS TOKEN** button. Then select the scope from the prompted window and generate the access token.\n+4. Click on **GENERATE ACCESS TOKEN** button. Then select the scope from dropdown in the prompted window and click **GENERATE** button ", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDY3Mw==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460350673", "bodyText": "unnecessary spaces before this line", "author": "shaniR", "createdAt": "2020-07-25T02:01:17Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created API Scope from the dropdown. The created shared scope will be listed under **API Scopes** in the \n+dropdown.\n \n-    <a href=\"../../../../../assets/img/learn/apply-scope.png\" ><img src=\"../../../../../assets/img/learn/apply-scope.png\" alt=\"Apply Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" alt=\"Apply Scope\" \n          title=\"Apply Scope\" width=\"70%\" /></a>\n \n-3. Publish the API.\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+## Applying Multiple Scopes Per Resource\n+\n+From API-M Publisher Portal, you can attach multiple scopes to each API resource including combinations of both \n+[Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes).\n+\n+[![Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)\n+\n+Once you attach multiple scopes per resource, the resource will look as follows.\n+\n+[![After Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)\n+\n+## Defining OAuth Scopes in API Definition\n+\n+Both [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes) should be defined in same way in the OpenAPI definition as follows.\n+\n+<a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" alt=\"Resource Scopes API Definition\" \n+     title=\"Resource Scopes API Definition\" width=\"50%\" /></a>\n+\n+[![Scopes Security Definition API Definition]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)\n+\n \n ## Obtaining Tokens with Scopes\n \n-When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Please follow below steps to obtain an access token specifying the requested scopes.\n+When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Follow below steps to obtain an access token specifying the requested scopes.\n \n-1. Login to API Portal(https://localhost:9443/devportal/)\n+1. Login to API Developer Portal (https://localhost:9443/devportal/).\n \n-2. Navigate to the API which has the scope protected API resource and go to Credential section to subscribe to an application.\n+2. Navigate to the API which has the scope protected API resource and go to **Subscription** section to subscribe to an application.\n \n-    <a href=\"../../../../../assets/img/learn/subscribe-weatherapi.png\" ><img src=\"../../../../../assets/img/learn/subscribe-weatherapi.png\" alt=\"Subscribe\" \n-         title=\"Subscribe\" width=\"50%\" /></a>\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/subscribe-api.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/subscribe-api.png\" alt=\"Subscribe\" \n+          title=\"Subscribe\" width=\"50%\" /></a>\n          \n-3. Generate production keys for the application.\n+3. Generate PRODUCTION or SANDBOX keys for the application.\n \n-    <a href=\"../../../../../assets/img/learn/generate-app-keys.png\" ><img src=\"../../../../../assets/img/learn/generate-app-keys.png\" alt=\"Generate App Keys\" \n-         title=\"Generate App Keys\" width=\"60%\" /></a>\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/generate-keys.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/generate-keys.png\" alt=\"Generate App Keys\" \n+          title=\"Generate App Keys\" width=\"60%\" /></a>\n \n-4. Click on **GENERATE ACCESS TOKEN** button. Then select the scope from the prompted window and generate the access token.\n+4. Click on **GENERATE ACCESS TOKEN** button. Then select the scope from dropdown in the prompted window and click **GENERATE** button \n+to generate the access token.", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDcxMg==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460350712", "bodyText": "unncessary space in this line", "author": "shaniR", "createdAt": "2020-07-25T02:01:36Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,90 +4,209 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, you can create OAuth scopes before the API creation time and share them across multiple APIs of the same\n+tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope\n+can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## API Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating an API Scope\n+\n+An API Scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying an API Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+An API scope has be applied to a resource, in order to restrict the access to a user group/groups. An API Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply an API Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created API Scope from the dropdown. The created shared scope will be listed under **API Scopes** in the \n+dropdown.\n \n-    <a href=\"../../../../../assets/img/learn/apply-scope.png\" ><img src=\"../../../../../assets/img/learn/apply-scope.png\" alt=\"Apply Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/apply-scope.png\" alt=\"Apply Scope\" \n          title=\"Apply Scope\" width=\"70%\" /></a>\n \n-3. Publish the API.\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+## Applying Multiple Scopes Per Resource\n+\n+From API-M Publisher Portal, you can attach multiple scopes to each API resource including combinations of both \n+[Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes).\n+\n+[![Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/multiple-scopes-per-resource.png)\n+\n+Once you attach multiple scopes per resource, the resource will look as follows.\n+\n+[![After Attaching Multiple Scopes per Resource]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/after-attaching-multiple-scopes.png)\n+\n+## Defining OAuth Scopes in API Definition\n+\n+Both [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes) \n+and [API Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#api-scopes) should be defined in same way in the OpenAPI definition as follows.\n+\n+<a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/resource-scope-api-definition.png\" alt=\"Resource Scopes API Definition\" \n+     title=\"Resource Scopes API Definition\" width=\"50%\" /></a>\n+\n+[![Scopes Security Definition API Definition]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/scopes-api-definition.png)\n+\n \n ## Obtaining Tokens with Scopes\n \n-When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Please follow below steps to obtain an access token specifying the requested scopes.\n+When a scope has been assigned to an API resource, the access is getting restricted to the users who has the role/roles specified in the scope. Hence, the API consumers has to specifically request for the relevant scope when generating an access token to invoke the API resource. Follow below steps to obtain an access token specifying the requested scopes.\n \n-1. Login to API Portal(https://localhost:9443/devportal/)\n+1. Login to API Developer Portal (https://localhost:9443/devportal/).\n \n-2. Navigate to the API which has the scope protected API resource and go to Credential section to subscribe to an application.\n+2. Navigate to the API which has the scope protected API resource and go to **Subscription** section to subscribe to an application.\n \n-    <a href=\"../../../../../assets/img/learn/subscribe-weatherapi.png\" ><img src=\"../../../../../assets/img/learn/subscribe-weatherapi.png\" alt=\"Subscribe\" \n-         title=\"Subscribe\" width=\"50%\" /></a>\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/subscribe-api.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/subscribe-api.png\" alt=\"Subscribe\" \n+          title=\"Subscribe\" width=\"50%\" /></a>\n          \n-3. Generate production keys for the application.\n+3. Generate PRODUCTION or SANDBOX keys for the application.\n \n-    <a href=\"../../../../../assets/img/learn/generate-app-keys.png\" ><img src=\"../../../../../assets/img/learn/generate-app-keys.png\" alt=\"Generate App Keys\" \n-         title=\"Generate App Keys\" width=\"60%\" /></a>\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/generate-keys.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/generate-keys.png\" alt=\"Generate App Keys\" \n+          title=\"Generate App Keys\" width=\"60%\" /></a>\n \n-4. Click on **GENERATE ACCESS TOKEN** button. Then select the scope from the prompted window and generate the access token.\n+4. Click on **GENERATE ACCESS TOKEN** button. Then select the scope from dropdown in the prompted window and click **GENERATE** button \n+to generate the access token.\n \n-    <a href=\"../../../../../assets/img/learn/generate-access-token-with-scopes.png\" ><img src=\"../../../../../assets/img/learn/generate-access-token-with-scopes.png\" alt=\"Generate App Keys\" \n-         title=\"Generate App Keys\" width=\"50%\" /></a>\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/generate-keys.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/token-scopes.png\" alt=\"Select Token Scopes\" \n+          title=\"Select Token Scopes\" width=\"60%\" /></a>\n \n-5. If the user has the roles specified in the scope, the access token will be issued with the requested scope. Unless, only the default scopes will be returned with the access token.\n+5. If the user has the roles specified in the scope, the access token will be issued with the requested scope. Unless,\n+only the default scopes will be returned with the access token.", "originalCommit": "437954fc0784b5116318737790287f0cd8f653b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDc3NQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460350775", "bodyText": "Unless -> Otherwise", "author": "shaniR", "createdAt": "2020-07-25T02:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDgwNw==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r460350807", "bodyText": "What are the default scopes? how to define them? where are they defined?", "author": "shaniR", "createdAt": "2020-07-25T02:02:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM3MzM4OA==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r467373388", "bodyText": "its the default scope. in client credentials pov, this will also include \"am_application_scope\". Will add a note.  Btw fyi this is also in the 3.1 and 3.0 docs well.we might need to update those as well.", "author": "dushaniw", "createdAt": "2020-08-08T07:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDcxMg=="}], "type": "inlineReview"}, {"oid": "f262ad3c18445d46aec3462d50d514251902dfc1", "url": "https://github.com/wso2/docs-apim/commit/f262ad3c18445d46aec3462d50d514251902dfc1", "message": "address review comments", "committedDate": "2020-08-08T08:22:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3ODE4OQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r468278189", "bodyText": "Shall we rephrase it to : \"A local scope, when applied to a resource, will restrict access for a user group(s).\"", "author": "shaniR", "createdAt": "2020-08-11T01:41:55Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,95 +4,216 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, an OAuth scope can be created before the API is created and shared across multiple APIs of the same tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## Local Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating a Local Scope\n+\n+A local scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying a Local Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+A Local scope has be applied to a resource, in order to restrict the access to a user group/groups. A Local Scope can only be", "originalCommit": "f262ad3c18445d46aec3462d50d514251902dfc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyOTkzMQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r468329931", "bodyText": "done", "author": "dushaniw", "createdAt": "2020-08-11T05:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3ODE4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3ODI1MQ==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r468278251", "bodyText": "Local Scope - local scope", "author": "shaniR", "createdAt": "2020-08-11T01:42:17Z", "path": "en/docs/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes.md", "diffHunk": "@@ -4,95 +4,216 @@ Scopes enable fine-grained access control to API resources based on user roles.\n \n For example, there can be requirements such as restricting the access to a given API resource to admin users only, while other resources of the same API access should be allowed to consumers with less privileges. Let's see how this kind of role based access control can be managed with the use of OAuth2 scopes.\n \n+## Shared Scopes\n \n-## Creating a Scope\n+In WSO2 API-M, an OAuth scope can be created before the API is created and shared across multiple APIs of the same tenant. The API-M Publisher portal provides a scope management UI to view, create, edit and delete these shared scopes. \n \n-The scopes can be created and applied to an API resources at API create time. Please follow below steps to create a scope.\n+!!! info\n+     Shared scopes can be viewed by any Publisher portal user with a role associated with `apim:api_view` Publisher \n+     REST API scope. Shared scope create, update and delete operations are only allowed for user roles associated with \n+     `apim:shared_scope_manage` Publisher REST API scope. \n+     \n+     By default, only an `admin` user can perform create, update and delete operations of shared scopes.\n+\n+### Creating a Shared Scope\n+\n+The shared scope need to be created before API creation/update time. Follow below steps to create a new shared scope.\n+\n+1. Login to API Publisher (https://localhost:9443/publisher). \n+\n+2. Navigate to **Scopes** from the top menu and click on **Create a new scope** button.\n+\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-shared-scope.png)\n+\n+3. In **Create New Scope** wizard, you will be prompted to enter a scope name, scope display name and optionally, \n+scope description and allowed roles. Fill in required details of the scope and click **Save** button.\n+\n+     [![Create New Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/create-op-shared-scope.png)\n+\n+    <table>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Display Name</strong></td>\n+               <td>A human-readable name for the scope. It typically says what the scope does. This is used for consent\n+               screens.</td>\n+          </tr>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"even\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n+    </table>     \n+\n+### Applying a Shared Scope to an API Resource\n+\n+A shared scope has to be applied to a resource, in order to restrict the access to a user group/groups. A shared scope can be attached to more than one APIs of the same tenant. Follow below steps to apply a shared scope to a resource.\n+\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n+\n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n+         title=\"Select Resource\" width=\"70%\" /></a>\n+\n+2. Select the created scope from the dropdown. The created shared scope will be listed under **Shared Scopes** in the drop down.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/attach-shared-scope.png\" alt=\"Select Shared Scope\" \n+          title=\"Select Shared Scope\" width=\"70%\" /></a>\n+\n+     Once you select the scope from dropdown, it will be shown as follows.\n+\n+     <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/shared-scope-attached.png\" alt=\"Attched Shared Scope\" \n+          title=\"Attached Shared Scope\" width=\"70%\" /></a>         \n+\n+\n+3. Click on **Save** button to save changes.         \n+\n+4. Publish the API.\n+\n+!!! info\n+\n+     Once a shared scope is created and attached to an API, you are restricted to delete the shared scope. In order to\n+     delete a shared scope, first you need to remove its resource attachments from relevant APIs.\n+\n+## Local Scopes \n+\n+!!! warning\n+     \n+    This feature is **DEPRECATED** from **WSO2 API-M 3.2 onwards** and, it is recommended to use \n+    [Shared Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/#shared-scopes).\n+\n+In WSO2 API-M, API developers can also create OAuth scopes during the API creation time and attach them locally to the API. \n+These scopes are local and unique to the relevant API. \n+\n+### Creating a Local Scope\n+\n+A local scope can be created and applied to a resource at API creation time by following below steps.\n \n 1. Login to API Publisher (https://localhost:9443/publisher) \n \n-2. Start creating an API as described [here]({{base_path}}learn/design-api/create-api/create-a-rest-api).\n+2. Start creating an API as described [here]({{base_path}}/learn/design-api/create-api/create-a-rest-api/).\n \n-3. Navigate to Scope section and click on create scope button.\n+3. Navigate to **Scopes** section and click on **CREATE SCOPES** button.\n \n-    <a href=\"../../../../../assets/img/learn/start-creating-scope.png\" ><img src=\"../../../.\n-    ./../assets/img/learn/start-creating-scope.png\" alt=\"Start Creating a Scope\" \n-         title=\"Start Creating a Scope\" width=\"70%\" /></a>\n+     [![Start Creating a Scope]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)]({{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/start-creating-scope.png)\n \n-4. In scope creation wizard, you will be prompted to enter a scope name, scope description and optionally, allowed roles and a description. Fill in required details of the scope and click **Save** button.\n- Click **Save**.\n+4. In **Create New Scope** wizard, you will be prompted to enter a scope name and optionally, allowed roles and a description. \n+Fill in required details of the scope and click **Save** button.\n \n     <table>\n-    <tbody>\n-    <tr class=\"odd\">\n-    <td><strong>Scope Key</strong></td>\n-    <td>A unique key for identifying the scope. Typically, it is prefixed by part of the API's name for uniqueness, but is not necessarily reader-friendly.</td>\n-    </tr>\n-    <tr class=\"even\">\n-    <td><strong>Scope Name</strong></td>\n-    <td>A human-readable name for the scope. It typically says what the scope does.</td>\n-    </tr>\n-    <tr class=\"odd\">\n-    <td><strong>Roles</strong></td>\n-    <td><div class=\"content-wrapper\">\n-    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n-    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n-    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n-    \n-    </div></td>\n-    </tr>\n-    </tbody>\n+     <tbody>\n+          <tr class=\"odd\">\n+               <td><strong>Scope Name</strong></td>\n+               <td>A unique key for identifying the scope. This should be unique across all the APIs of the tenant.</td>\n+          </tr>\n+          <tr class=\"even\">\n+               <td><strong>Scope Description</strong></td>\n+               <td>The description for the scope.</td>\n+          </tr>          \n+          <tr class=\"odd\">\n+               <td><strong>Roles</strong></td>\n+               <td><div class=\"content-wrapper\">\n+                    <p>The user role(s) that are allowed to obtain a token against this scope. E.g., manager, employee.</p>\n+                    <p>Note that the role name is <strong>case sensitive</strong> in the DBMSs that are case sensitive, such as PostgreSQL.</p>\n+                    <p>When the role you specify is in a secondary user store, you have to give the role as <code>&lt;userstore name&gt;/&lt;role name&gt;</code>.</p>\n+              </div></td>\n+          </tr>\n+     </tbody>\n     </table>\n \n-    <a href=\"../../../../../assets/img/learn/create-a-new-scope.png\" ><img src=\"../../../../../assets/img/learn/create-a-new-scope.png\" alt=\"Create a Scope\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" >\n+    <img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/api-scopes/create-a-new-scope.png\" alt=\"Create a Scope\" \n          title=\"Create a Scope\" width=\"70%\" /></a>\n \n-## Applying a Scope to an API Resource\n+### Applying a Local Scope to a Resource\n \n-A scopes has be applied to a resource, in order to restrict the access to a user group/groups. Please follow below steps to apply a scope to a resource.\n+A Local scope has be applied to a resource, in order to restrict the access to a user group/groups. A Local Scope can only be\n+attached to the relevant API in which it is created under. Follow below steps to apply a Local Scope to a resource.\n \n-1. Go to API Resource section and click on the resource you would like to apply the scope.\n+1. Go to API **Resources** section and click on the resource you would like to apply the scope.\n \n-    <a href=\"../../../../../assets/img/learn/select-resource.png\" ><img src=\"../../../../../assets/img/learn/select-resource.png\" alt=\"Select Resource\" \n+    <a href=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" ><img src=\"{{base_path}}/assets/img/learn/api-security/oauth2/oauth2-scopes/select-resource.png\" alt=\"Select Resource\" \n          title=\"Select Resource\" width=\"70%\" /></a>\n \n-2. Select the created scope from the drop down and click on **Save** button to save changes.\n+2. Select the created Local Scope from the dropdown. The created local scope will be listed under **API Scopes** in the ", "originalCommit": "f262ad3c18445d46aec3462d50d514251902dfc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyOTkwNg==", "url": "https://github.com/wso2/docs-apim/pull/1557#discussion_r468329906", "bodyText": "done", "author": "dushaniw", "createdAt": "2020-08-11T05:10:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI3ODI1MQ=="}], "type": "inlineReview"}, {"oid": "8f74e65f42ddd1add73958de7c85c7774632256c", "url": "https://github.com/wso2/docs-apim/commit/8f74e65f42ddd1add73958de7c85c7774632256c", "message": "Add review changes", "committedDate": "2020-08-11T05:10:29Z", "type": "commit"}]}