{"pr_number": 606, "pr_title": "Documentation improvements for Java Security Manager and Configuring TLS Termination", "pr_createdAt": "2020-01-01T10:21:49Z", "pr_url": "https://github.com/wso2/docs-apim/pull/606", "timeline": [{"oid": "4eac4de9d8374353eb76605d50417909a7a9a750", "url": "https://github.com/wso2/docs-apim/commit/4eac4de9d8374353eb76605d50417909a7a9a750", "message": "Update content of Enabling Java Security Manager", "committedDate": "2020-01-01T10:11:09Z", "type": "commit"}, {"oid": "d8355f10e2ce7ba292086f64351a17051280057a", "url": "https://github.com/wso2/docs-apim/commit/d8355f10e2ce7ba292086f64351a17051280057a", "message": "Hide doc for  Configuring TLS Termination", "committedDate": "2020-01-01T10:14:47Z", "type": "commit"}, {"oid": "28a5c3e9be5257f8f18a0e50fe96a947c4935201", "url": "https://github.com/wso2/docs-apim/commit/28a5c3e9be5257f8f18a0e50fe96a947c4935201", "message": "Update DB2 query", "committedDate": "2020-01-06T11:37:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNDAzOQ==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363734039", "bodyText": "We should not point to the Admin guide. This content should be already available in the APIM docs", "author": "Mariangela", "createdAt": "2020-01-07T12:54:41Z", "path": "en/docs/Administer/ProductSecurity/enabling-java-security-manager.md", "diffHunk": "@@ -1,157 +1,159 @@\n-# admin\\_Enabling Java Security Manager\n+# Enabling Java Security Manager\n \n !!! warning\n-**Please note that this document is currently under review. Currently, WSO2 does not recommend Java security manager for production environments due to some known issues.**\n+    **Please note that this document is currently under review. Currently, WSO2 does not recommend Java security manager for production environments due to some known issues.**\n \n \n The Java\u00a0Security Manager is used to define various security policies that\u00a0prevent untrusted code from manipulating your system. Enabling the Java Security Manager for WSO2 products activates the Java permissions that are in the `<PRODUCT_HOME>/repository/conf/sec.policy` file. You modify this file to change the Java security permissions as required.\n \n !!! info\n-**Before you begin**\n+    **Before you begin**\n \n--   Ensure that you have Java 1.8 installed.\n--   Note that you need to use a keystore for signing JARs using the Java security manager. In this example, you will be using the default keystore in your WSO2 product ( `wso2carbon.jks` ). You can read about the recommendations for using keystores from [here](https://docs.wso2.com/display/ADMIN44x/Using+Asymmetric+Encryption#UsingAsymmetricEncryption-RecommendationsforsettingupkeystoresinWSO2products) .\n+    * Ensure that you have Java 1.8 or Java 11 installed.\n+    * Note that you need to use a keystore for signing JARs using the Java security manager. In this example, you will be using the default keystore in your WSO2 product ( `wso2carbon.jks` ). You can read about the recommendations for using keystores from [here](https://docs.wso2.com/display/ADMIN44x/Using+Asymmetric+Encryption#UsingAsymmetricEncryption-RecommendationsforsettingupkeystoresinWSO2products).", "originalCommit": "4eac4de9d8374353eb76605d50417909a7a9a750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMDE3MQ==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363810171", "bodyText": "Fixed in f906106", "author": "RAVEENSR", "createdAt": "2020-01-07T15:42:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNDAzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNDE0Mw==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363734143", "bodyText": "<PRODUCT_HOME> should be changed to <API-M_HOME>", "author": "Mariangela", "createdAt": "2020-01-07T12:55:02Z", "path": "en/docs/Administer/ProductSecurity/enabling-java-security-manager.md", "diffHunk": "@@ -1,157 +1,159 @@\n-# admin\\_Enabling Java Security Manager\n+# Enabling Java Security Manager\n \n !!! warning\n-**Please note that this document is currently under review. Currently, WSO2 does not recommend Java security manager for production environments due to some known issues.**\n+    **Please note that this document is currently under review. Currently, WSO2 does not recommend Java security manager for production environments due to some known issues.**\n \n \n The Java\u00a0Security Manager is used to define various security policies that\u00a0prevent untrusted code from manipulating your system. Enabling the Java Security Manager for WSO2 products activates the Java permissions that are in the `<PRODUCT_HOME>/repository/conf/sec.policy` file. You modify this file to change the Java security permissions as required.\n \n !!! info\n-**Before you begin**\n+    **Before you begin**\n \n--   Ensure that you have Java 1.8 installed.\n--   Note that you need to use a keystore for signing JARs using the Java security manager. In this example, you will be using the default keystore in your WSO2 product ( `wso2carbon.jks` ). You can read about the recommendations for using keystores from [here](https://docs.wso2.com/display/ADMIN44x/Using+Asymmetric+Encryption#UsingAsymmetricEncryption-RecommendationsforsettingupkeystoresinWSO2products) .\n+    * Ensure that you have Java 1.8 or Java 11 installed.\n+    * Note that you need to use a keystore for signing JARs using the Java security manager. In this example, you will be using the default keystore in your WSO2 product ( `wso2carbon.jks` ). You can read about the recommendations for using keystores from [here](https://docs.wso2.com/display/ADMIN44x/Using+Asymmetric+Encryption#UsingAsymmetricEncryption-RecommendationsforsettingupkeystoresinWSO2products).\n \n \n The steps below show how to enable the Java Security Manager for WSO2 products.\n \n 1.  Download the WSO2 product to any location (e.g., `<HOME>/user/<product-pack>` folder).\n \n-2.  To sign the JARs in your product, you need a key. You can generate a new keystore\u00a0(with a new key) by executing the\u00a0keytool command given below. Note that the new keystore\u00a0is created in the directory from which you execute the keytool command.\n+2. Run the startup script in the `<PRODUCT_HOME>/bin` folder. For Linux, it is `wso2server.sh`. Once the product is up and running, shutdown the server.", "originalCommit": "4eac4de9d8374353eb76605d50417909a7a9a750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMDIyOQ==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363810229", "bodyText": "Fixed in f906106", "author": "RAVEENSR", "createdAt": "2020-01-07T15:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNDE0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNDczNA==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363734734", "bodyText": "The abbreviation that we use in WSO2 docs for example is not ex: it should be e.g.,", "author": "Mariangela", "createdAt": "2020-01-07T12:56:26Z", "path": "en/docs/Administer/ProductSecurity/enabling-java-security-manager.md", "diffHunk": "@@ -1,157 +1,159 @@\n-# admin\\_Enabling Java Security Manager\n+# Enabling Java Security Manager\n \n !!! warning\n-**Please note that this document is currently under review. Currently, WSO2 does not recommend Java security manager for production environments due to some known issues.**\n+    **Please note that this document is currently under review. Currently, WSO2 does not recommend Java security manager for production environments due to some known issues.**\n \n \n The Java\u00a0Security Manager is used to define various security policies that\u00a0prevent untrusted code from manipulating your system. Enabling the Java Security Manager for WSO2 products activates the Java permissions that are in the `<PRODUCT_HOME>/repository/conf/sec.policy` file. You modify this file to change the Java security permissions as required.\n \n !!! info\n-**Before you begin**\n+    **Before you begin**\n \n--   Ensure that you have Java 1.8 installed.\n--   Note that you need to use a keystore for signing JARs using the Java security manager. In this example, you will be using the default keystore in your WSO2 product ( `wso2carbon.jks` ). You can read about the recommendations for using keystores from [here](https://docs.wso2.com/display/ADMIN44x/Using+Asymmetric+Encryption#UsingAsymmetricEncryption-RecommendationsforsettingupkeystoresinWSO2products) .\n+    * Ensure that you have Java 1.8 or Java 11 installed.\n+    * Note that you need to use a keystore for signing JARs using the Java security manager. In this example, you will be using the default keystore in your WSO2 product ( `wso2carbon.jks` ). You can read about the recommendations for using keystores from [here](https://docs.wso2.com/display/ADMIN44x/Using+Asymmetric+Encryption#UsingAsymmetricEncryption-RecommendationsforsettingupkeystoresinWSO2products).\n \n \n The steps below show how to enable the Java Security Manager for WSO2 products.\n \n 1.  Download the WSO2 product to any location (e.g., `<HOME>/user/<product-pack>` folder).\n \n-2.  To sign the JARs in your product, you need a key. You can generate a new keystore\u00a0(with a new key) by executing the\u00a0keytool command given below. Note that the new keystore\u00a0is created in the directory from which you execute the keytool command.\n+2. Run the startup script in the `<PRODUCT_HOME>/bin` folder. For Linux, it is `wso2server.sh`. Once the product is up and running, shutdown the server.\n \n-    ``` java\n-        keytool -genkey -alias signFiles -keyalg RSA -keystore signkeystore.jks -validity 3650 -dname \"CN=Sanjeewa,OU=Engineering, O=WSO2, L=Colombo, ST=Western, C=LK\"\n-        Enter keystore password:  \n-        Re-enter new password:\n-        Enter key password for\n-        (RETURN if same as keystore password)\n+3.  To sign the JARs in your product, you need a key. You can generate a new keystore\u00a0(with a new key) by executing the\u00a0keytool command given below. Note that the new keystore\u00a0is created in the directory from which you execute the keytool command.\n+\n+    ```bash\n+    keytool -genkey -alias signFiles -keyalg RSA -keystore signkeystore.jks -validity 3650 -dname \"CN=John,OU=Engineering, O=WSO2, L=Colombo, ST=Western, C=LK\"\n+    Enter keystore password:  \n+    Re-enter new password:\n+    Enter key password for\n+    (RETURN if same as keystore password)\n     ```\n \n-    Now you have a new keystore\u00a0( `signkeystore.jks` ) with a new public key certificate ( `signFiles` ).\n+    Now you have a new keystore\u00a0(`signkeystore.jks`) with a new public key certificate (`signFiles`).\n \n-3.  By default, WSO2 products use the default `wso2carbon.` jks\u00a0keystore for signing JARs. This keystore\u00a0is stored in the `<PRODUCT_HOME>/repository/resources/security` directory. Therefore, you need to add\u00a0the `signFiles` public key certificate that you created earlier into the `wso2carbon.jks` keystore.\n+4.  By default, WSO2 products use the default `wso2carbon.jks`\u00a0keystore for signing JARs. This keystore\u00a0is stored in the `<PRODUCT_HOME>/repository/resources/security` directory.      Therefore, you need to add\u00a0the `signFiles` public key certificate that you created earlier into the `wso2carbon.jks` keystore.\n \n     First, export the `signFiles` public\u00a0key certificate from the `signkeystore.jks` keystore\u00a0by executing the following command:\n \n-    ``` java\n-            $ keytool -export -keystore signkeystore.jks -alias signFiles -file sign-cert.cer \n+    ```java\n+    $ keytool -export -keystore signkeystore.jks -alias signFiles -file sign-cert.cer \n     ```\n \n-    Then, import the same\u00a0signFiles\u00a0certificate to the `wso2carbon.jks` keystore\u00a0by executing the command given below. Be sure to specify the correct directory path to the `wso2carbon.jks` file of your product.\n-\n-    ``` java\n-            $ keytool -import -alias signFiles -file sign-cert.cer -keystore <PATH_to_PRODUCT_HOME>/repository/resources/security/wso2carbon.jks\n-                Enter keystore password:  \n-                Owner: CN=Sanjeewa, OU=Engineering, O=WSO2, L=Colombo, ST=Western, C=LK\n-                Issuer: CN=Sanjeewa, OU=Engineering, O=WSO2, L=Colombo, ST=Western, C=LK\n-                Serial number: 5486f3b0\n-                Valid from: Tue Dec 09 18:35:52 IST 2014 until: Fri Dec 06 18:35:52 IST 2024\n-                Certificate fingerprints:\n-                MD5:  54:13:FD:06:6F:C9:A6:BC:EE:DF:73:A9:88:CC:02:EC\n-                SHA1: AE:37:2A:9E:66:86:12:68:28:88:12:A0:85:50:B1:D1:21:BD:49:52\n-                Signature algorithm name: SHA1withRSA\n-                Version: 3\n-                Trust this certificate? [no]:  yes\n-                Certificate was added to keystore\n+    Then, import the same\u00a0`signFiles`\u00a0certificate to the `wso2carbon.jks` keystore\u00a0by executing the command given below. Be sure to specify the correct directory path to the `wso2carbon.jks` file of your product.\n+\n+    ```bash\n+    $ keytool -import -alias signFiles -file sign-cert.cer -keystore <PATH_to_PRODUCT_HOME>/repository/resources/security/wso2carbon.jks\n+    Enter keystore password:  \n+    Owner: CN=John, OU=Engineering, O=WSO2, L=Colombo, ST=Western, C=LK\n+    Issuer: CN=John, OU=Engineering, O=WSO2, L=Colombo, ST=Western, C=LK\n+    Serial number: 5486f3b0\n+    Valid from: Tue Dec 09 18:35:52 IST 2014 until: Fri Dec 06 18:35:52 IST 2024\n+    Certificate fingerprints:\n+    MD5:  54:13:FD:06:6F:C9:A6:BC:EE:DF:73:A9:88:CC:02:EC\n+    SHA1: AE:37:2A:9E:66:86:12:68:28:88:12:A0:85:50:B1:D1:21:BD:49:52\n+    Signature algorithm name: SHA1withRSA\n+    Version: 3\n+    Trust this certificate? [no]:  yes\n+    Certificate was added to keystore\n     ```\n \n-        !!! note\n-    Note that WSO2 no longer recommends MD5 for JAR signing due to cryptographic limitations.\n+    !!! note\n+        Note that WSO2 no longer recommends MD5 for JAR signing due to cryptographic limitations.\n \n \n-4.  Open the security policy file, and update the\u00a0\"grant signedBy\" value in the with the new `signFiles` alias key, as shown below.\n+5.  Open the security policy file, and update the\u00a0\"grant signedBy\" value in the with the new `signFiles` alias key, as shown below. If security policy file is not created before, create a `sec.policy` file in the `<PRODUCT_HOME>/repository/conf` folder and add the following content to this file.\n \n-    ``` java\n-        grant signedBy \"signFiles\" {\n-          // permission java.util.PropertyPermission \"*\", \"read\";\n-          // permission java.lang.RuntimePermission \"*\", \"*\";\n-          // permission java.io.FilePermission \"*\", \"*\";\n-          permission java.security.AllPermission;\n-        };\n+    ``` text\n+    grant signedBy \"signFiles\" {\n+      // permission java.util.PropertyPermission \"*\", \"read\";\n+      // permission java.lang.RuntimePermission \"*\", \"*\";\n+      // permission java.io.FilePermission \"*\", \"*\";\n+      permission java.security.AllPermission;\n+    };\n     ```\n \n-5.  Prepare the scripts to sign the JARs and grant them the required permission. For example, the `signJar.sh` script given below can be used to sign each JAR file separately or you can use the `signJars.sh` script, which runs a loop to read all JARs and sign them.\n+6.  Prepare the scripts to sign the JARs and **grant them the required permission**(ex: `sudo chmod 755 signJar.sh`). For example, the `signJar.sh` script given below can be used to sign each JAR file separately or you can use the `signJars.sh` script, which runs a loop to read all JARs and sign them.", "originalCommit": "4eac4de9d8374353eb76605d50417909a7a9a750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMDMyOQ==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363810329", "bodyText": "Fixed in f906106", "author": "RAVEENSR", "createdAt": "2020-01-07T15:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNDczNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjAzMA==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363736030", "bodyText": "@RAVEENSR , did u comment out this link in the YAML by accident? Just wondering because you have renamed this page en/docs/Administer/ProductSecurity/configuring-tls-termination.md", "author": "Mariangela", "createdAt": "2020-01-07T12:59:49Z", "path": "en/mkdocs.yml", "diffHunk": "@@ -457,7 +457,7 @@ nav:\n                 - Mitigating Cross Site Request Forgery Attacks: Administer/ProductSecurity/UsingSymmetricEncryption/mitigating-cross-site-request-forgery-attacks.md\n                 - Mitigating Cross Site Scripting Attacks: Administer/ProductSecurity/UsingSymmetricEncryption/mitigating-cross-site-scripting-attacks.md\n             - Enabling HostName Verification: Administer/ProductSecurity/enabling-hostname-verification.md\n-            - Configuring TLS Termination: Administer/ProductSecurity/configuring-tls-termination.md\n+            # - Configuring TLS Termination: Administer/ProductSecurity/configuring-tls-termination.md", "originalCommit": "d8355f10e2ce7ba292086f64351a17051280057a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgwMDU0Ng==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r363800546", "bodyText": "Rationale behind this move is described in the PR description", "author": "RAVEENSR", "createdAt": "2020-01-07T15:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5ODY0MA==", "url": "https://github.com/wso2/docs-apim/pull/606#discussion_r364098640", "bodyText": "Great. Sorry, I missed that information.", "author": "Mariangela", "createdAt": "2020-01-08T07:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjAzMA=="}], "type": "inlineReview"}, {"oid": "f906106a0c46a8b25a87ef3e0d2604520adcc44b", "url": "https://github.com/wso2/docs-apim/commit/f906106a0c46a8b25a87ef3e0d2604520adcc44b", "message": "Fix doc according to review comments", "committedDate": "2020-01-07T15:41:05Z", "type": "commit"}]}