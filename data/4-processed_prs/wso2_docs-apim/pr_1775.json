{"pr_number": 1775, "pr_title": "Add 1.10 to 3.2 Migration doc and fix some minor issues in 2.0 to 3.2 doc", "pr_createdAt": "2020-08-24T01:47:41Z", "pr_url": "https://github.com/wso2/docs-apim/pull/1775", "timeline": [{"oid": "e9ceb228fdb7b262204316427c897882dba228c1", "url": "https://github.com/wso2/docs-apim/commit/e9ceb228fdb7b262204316427c897882dba228c1", "message": "Fix minor issues in 2.0 to 3.2 migration documenation", "committedDate": "2020-08-24T01:40:19Z", "type": "commit"}, {"oid": "e1bbc8ce4fb994b7d1aa1d87b10316c4404f6f50", "url": "https://github.com/wso2/docs-apim/commit/e1bbc8ce4fb994b7d1aa1d87b10316c4404f6f50", "message": "Add 1.10 to 3.2 migration related modifications and resources", "committedDate": "2020-08-24T01:43:07Z", "type": "commit"}, {"oid": "0f7a59eeb9d9ac9b68665634b6f4fb7faec073bb", "url": "https://github.com/wso2/docs-apim/commit/0f7a59eeb9d9ac9b68665634b6f4fb7faec073bb", "message": "Reviewed and updated\n\nReviewed the entire document and updated it as needed.", "committedDate": "2020-08-28T11:29:55Z", "type": "commit"}, {"oid": "3bf1e616380392d99cd207423c7e200db6550af7", "url": "https://github.com/wso2/docs-apim/commit/3bf1e616380392d99cd207423c7e200db6550af7", "message": "Further reviewed and updated", "committedDate": "2020-09-02T12:41:02Z", "type": "commit"}, {"oid": "3e6de8198141c39c27dcb1617a5a5defa20760f8", "url": "https://github.com/wso2/docs-apim/commit/3e6de8198141c39c27dcb1617a5a5defa20760f8", "message": "Reviewed and updated", "committedDate": "2020-09-02T13:31:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1MTE0Mg==", "url": "https://github.com/wso2/docs-apim/pull/1775#discussion_r482251142", "bodyText": "Steps 3 and 4 don't appear in this page, but they are listed in the page TOC", "author": "Mariangela", "createdAt": "2020-09-02T17:41:06Z", "path": "en/docs/install-and-setup/upgrading-wso2-api-manager/upgrading-from-1100-to-320.md", "diffHunk": "@@ -6,26 +6,4544 @@\n The following information describes how to upgrade your API Manager server **from APIM 1.10.0 to 3.2.0**.\n \n !!! note\n-    Before you follow this section, see [Upgrading Process]({{base_path}}/install-and-setup/upgrading-wso2-api-manager/upgrading-process.md) for more information.\n+    Before you follow this section, see [Upgrading Process]({{base_path}}/install-and-setup/upgrading-wso2-api-manager/upgrading-process) for more information.\n \n-Follow the instructions below to upgrade your WSO2 API Manager server **from APIM 1.10.0 to 3.2.0** .\n+Follow the instructions below to upgrade your WSO2 API Manager server **from WSO2 API-M 1.10.0 to 3.2.0**.\n \n !!! Attention\n     If you are using WSO2 Identity Server (WSO2 IS) as a Key Manager, first follow the instructions in [Upgrading WSO2 IS as the Key Manager to 5.10.0]({{base_path}}/install-and-setup/upgrading-wso2-is-as-key-manager/upgrading-from-is-km-510-to-5100).\n \n--   [Step 1 - Upgrade WSO2 API Manager to 2.6.0](#step-1-upgrade-wso2-api-manager-to-260)\n--   [Step 2 - Upgrade WSO2 API Manager to 3.2.0](#step-2-upgrade-wso2-api-manager-to-320)\n+!!! note \"If you are using PostgreSQL\"\n+    The DB user needs to have superuser role to run the migration client and the relevant scripts\n+    ```\n+    ALTER USER <user> WITH SUPERUSER;\n+    ```\n+!!! note \"If you are using Oracle\"\n+    Please commit the changes after running the scripts given below\n+    \n+### Preparing for Migration\n+#### Disabling versioning in the registry configuration\n \n-### Step 1 - Upgrade WSO2 API Manager to 2.6.0\n+If there are frequently updating registry properties, having the versioning enabled for registry resources in the registry can lead to unnecessary growth in the registry related tables in the database. To avoid this, versioning has been disabled by default in API Manager 3.2.0.\n \n-!!! note\n-    It is not possible to directly upgrade from WSO2 API Manager 1.10.0 to 3.2.0.\n+Therefore, if registry versioning was enabled in WSO2 API-M 1.10.0 setup, it is **required** to turn off the registry \n+versioning in the migrated 3.2.0 setup. Please follow the below steps to achieve this.\n+\n+!!! note \"NOTE\"\n+    Alternatively, it is possible to turn on registry versioning in API Manager 3.2.0 and continue. But this is\n+    highly **NOT RECOMMENDED** and these configurations should only be changed once.\n+\n+!!! info \"Turning off registry versioning\"\n+    Open the `registry.xml` file in the `<OLD_API-M_HOME>/repository/conf` directory.\n+    Check whether `versioningProperties`, `versioningComments`, `versioningTags` and `versioningRatings` configurations are true.\n+\n+    ```\n+    <staticConfiguration>\n+        <versioningProperties>true</versioningProperties>\n+        <versioningComments>true</versioningComments>\n+        <versioningTags>true</versioningTags>\n+        <versioningRatings>true</versioningRatings>\n+    </staticConfiguration>\n+    ```\n+\n+    !!! warning\n+        If the above configurations are already set as `false` you should not run the below scripts.\n+\n+    From API-M 3.0.0 version onwards, those configurations are set to false by-default and since these configurations are now getting changed from old setup to new setup, you need to remove the versioning details from the database in order for the registry resources to work properly. For that, choose the relevant DB type and run the script against the DB that the registry resides in, to remove the registry versioning details.   \n+    ??? info \"DB Scripts\"\n+        ```tab=\"H2\"\n+        -- Update the REG_PATH_ID column mapped with the REG_RESOURCE table --\n+\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);\n+\n+        -- Delete versioned tags, were the PATH_ID will be null for older versions --\n+\n+        delete from REG_RESOURCE_PROPERTY where REG_PATH_ID is NULL;\n+\n+        delete from REG_RESOURCE_RATING where REG_PATH_ID is NULL;\n+\n+        delete from REG_RESOURCE_TAG where REG_PATH_ID is NULL;\n+\n+        delete from REG_RESOURCE_COMMENT where REG_PATH_ID is NULL;\n+\n+        delete from REG_PROPERTY where REG_ID NOT IN (select REG_PROPERTY_ID from REG_RESOURCE_PROPERTY);\n+\n+        delete from REG_TAG where REG_ID NOT IN (select REG_TAG_ID from REG_RESOURCE_TAG);\n+\n+        delete from REG_COMMENT where REG_ID NOT IN (select REG_COMMENT_ID from REG_RESOURCE_COMMENT);\n+\n+        delete from REG_RATING where REG_ID NOT IN (select REG_RATING_ID from REG_RESOURCE_RATING);\n+\n+        -- Update the REG_PATH_NAME column mapped with the REG_RESOURCE table --\n+\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);           \n+        ```\n+    \n+        ```tab=\"DB2\"\n+        -- Update the REG_PATH_ID column mapped with the REG_RESOURCE table --\n+\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION)\n+        /\n+\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION)\n+        /\n+\n+        -- Delete versioned tags, were the PATH_ID will be null for older versions --\n+\n+        delete from REG_RESOURCE_PROPERTY where REG_PATH_ID is NULL\n+        /\n+        delete from REG_RESOURCE_RATING where REG_PATH_ID is NULL\n+        /\n+        delete from REG_RESOURCE_TAG where REG_PATH_ID is NULL\n+        /\n+        delete from REG_RESOURCE_COMMENT where REG_PATH_ID is NULL\n+        /\n+        delete from REG_PROPERTY where REG_ID NOT IN (select REG_PROPERTY_ID from REG_RESOURCE_PROPERTY)\n+        /\n+        delete from REG_TAG where REG_ID NOT IN (select REG_TAG_ID from REG_RESOURCE_TAG)\n+        /\n+        delete from REG_COMMENT where REG_ID NOT IN (select REG_COMMENT_ID from REG_RESOURCE_COMMENT)\n+        /\n+        delete from REG_RATING where REG_ID NOT IN (select REG_RATING_ID from REG_RESOURCE_RATING)\n+        /\n+\n+        -- Update the REG_PATH_NAME column mapped with the REG_RESOURCE table --\n+\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION)\n+        /\n+        ```\n+    \n+        ```tab=\"MSSQL\"\n+        -- Update the REG_PATH_ID column mapped with the REG_RESOURCE table --\n+        UPDATE REG_RESOURCE_TAG SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_COMMENT SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_PROPERTY SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_RATING SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);\n+        \n+        -- Delete versioned tags, were the PATH_ID will be null for older versions --\n+        delete from REG_RESOURCE_PROPERTY where REG_PATH_ID is NULL;\n+        \n+        delete from REG_RESOURCE_RATING where REG_PATH_ID is NULL;\n+        \n+        delete from REG_RESOURCE_TAG where REG_PATH_ID is NULL;\n+        \n+        delete from REG_RESOURCE_COMMENT where REG_PATH_ID is NULL;\n+        \n+        delete from REG_PROPERTY where REG_ID NOT IN (select REG_PROPERTY_ID from REG_RESOURCE_PROPERTY);\n+        \n+        delete from REG_TAG where REG_ID NOT IN (select REG_TAG_ID from REG_RESOURCE_TAG);\n+        \n+        delete from REG_COMMENT where REG_ID NOT IN (select REG_COMMENT_ID from REG_RESOURCE_COMMENT);\n+        \n+        delete from REG_RATING where REG_ID NOT IN (select REG_RATING_ID from REG_RESOURCE_RATING);\n+        \n+        -- Update the REG_PATH_NAME column mapped with the REG_RESOURCE table --\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);  \n+        ```\n+\n+        ```tab=\"MySQL\"\n+        -- Update the REG_PATH_ID column mapped with the REG_RESOURCE table --\n+\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);\n+\n+\n+        -- Delete versioned tags, were the PATH_ID will be null for older versions --\n+\n+        delete from REG_RESOURCE_PROPERTY where REG_PATH_ID is NULL;\n+\n+        delete from REG_RESOURCE_RATING where REG_PATH_ID is NULL;\n+\n+        delete from REG_RESOURCE_TAG where REG_PATH_ID is NULL;\n+\n+        delete from REG_RESOURCE_COMMENT where REG_PATH_ID is NULL;\n+\n+        delete from REG_PROPERTY where REG_ID NOT IN (select REG_PROPERTY_ID from REG_RESOURCE_PROPERTY);\n+\n+        delete from REG_TAG where REG_ID NOT IN (select REG_TAG_ID from REG_RESOURCE_TAG);\n+\n+        delete from REG_COMMENT where REG_ID NOT IN (select REG_COMMENT_ID from REG_RESOURCE_COMMENT);\n+\n+        delete from REG_RATING where REG_ID NOT IN (select REG_RATING_ID from REG_RESOURCE_RATING);\n+\n+        -- Update the REG_PATH_NAME column mapped with the REG_RESOURCE table --\n+\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);\n+        ```\n+    \n+        ```tab=\"Oracle\"\n+        -- Update the REG_PATH_ID column mapped with the REG_RESOURCE table --\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_PATH_ID=(SELECT REG_RESOURCE.REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION)\n+        /\n+        \n+        -- Delete versioned tags, were the PATH_ID will be null for older versions --\n+        delete from REG_RESOURCE_PROPERTY where REG_PATH_ID is NULL\n+        /\n+        delete from REG_RESOURCE_RATING where REG_PATH_ID is NULL\n+        /\n+        delete from REG_RESOURCE_TAG where REG_PATH_ID is NULL\n+        /\n+        delete from REG_RESOURCE_COMMENT where REG_PATH_ID is NULL\n+        /\n+        delete from REG_PROPERTY where REG_ID NOT IN (select REG_PROPERTY_ID from REG_RESOURCE_PROPERTY)\n+        /\n+        delete from REG_TAG where REG_ID NOT IN (select REG_TAG_ID from REG_RESOURCE_TAG)\n+        /\n+        delete from REG_COMMENT where REG_ID NOT IN (select REG_COMMENT_ID from REG_RESOURCE_COMMENT)\n+        /\n+        delete from REG_RATING where REG_ID NOT IN (select REG_RATING_ID from REG_RESOURCE_RATING)\n+        /\n+        \n+        -- Update the REG_PATH_NAME column mapped with the REG_RESOURCE table --\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_TAG.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_PROPERTY.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_COMMENT.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION)\n+        /\n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_RATING.REG_RESOURCE_NAME=(SELECT REG_RESOURCE.REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION)\n+        /\n+        ```\n+        \n+        ```tab=\"PostgreSQL\"\n+        -- Update the REG_PATH_ID column mapped with the REG_RESOURCE table --\n+        UPDATE REG_RESOURCE_TAG SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_COMMENT SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_PROPERTY SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_RATING SET REG_PATH_ID=(SELECT REG_PATH_ID FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);\n+        \n+        -- Delete versioned tags, were the PATH_ID will be null for older versions --\n+        delete from REG_RESOURCE_PROPERTY where REG_PATH_ID is NULL;\n+        \n+        delete from REG_RESOURCE_RATING where REG_PATH_ID is NULL;\n+        \n+        delete from REG_RESOURCE_TAG where REG_PATH_ID is NULL;\n+        \n+        delete from REG_RESOURCE_COMMENT where REG_PATH_ID is NULL;\n+        \n+        delete from REG_PROPERTY where REG_ID NOT IN (select REG_PROPERTY_ID from REG_RESOURCE_PROPERTY);\n+        \n+        delete from REG_TAG where REG_ID NOT IN (select REG_TAG_ID from REG_RESOURCE_TAG);\n+        \n+        delete from REG_COMMENT where REG_ID NOT IN (select REG_COMMENT_ID from REG_RESOURCE_COMMENT);\n+        \n+        delete from REG_RATING where REG_ID NOT IN (select REG_RATING_ID from REG_RESOURCE_RATING);\n+        \n+        -- Update the REG_PATH_NAME column mapped with the REG_RESOURCE table --\n+        UPDATE REG_RESOURCE_TAG SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_TAG.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_PROPERTY SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_PROPERTY.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_COMMENT SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_COMMENT.REG_VERSION);\n+        \n+        UPDATE REG_RESOURCE_RATING SET REG_RESOURCE_NAME=(SELECT REG_NAME FROM REG_RESOURCE WHERE REG_RESOURCE.REG_VERSION=REG_RESOURCE_RATING.REG_VERSION);\n+        ```\n+\n+!!! warning \"Not recommended\"\n+    If you decide to proceed with registry resource versioning enabled, add the following configuration to the `<NEW_API-M_HOME>/repository/conf/deployment.toml` file of new WSO2 API Manager. \n+    \n+    ```\n+    [registry.static_configuration]\n+    enable=true\n+    ```\n+    \n+    !!! note \"NOTE\"\n+        Changing these configuration should only be done before the initial API-M Server startup. If changes are done after the initial startup, the registry resource created previously will not be available.\n+\n+-   [Step 1 - Migrate the API Manager configurations](#step-1-migrate-the-api-manager-configurations)\n+-   [Step 2 - Upgrade API Manager to 3.2.0](#step-2-upgrade-api-manager-to-320)\n+-   [Step 3 - Optionally, migrate the configurations for WSO2 API-M Analytics](#step-3-optionally-migrate-the-configurations-for-wso2-api-m-analytics)\n+-   [Step 4 - Restart the WSO2 API-M 3.2.0 server](#step-4-restart-the-wso2-api-m-320-server)", "originalCommit": "e1bbc8ce4fb994b7d1aa1d87b10316c4404f6f50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY3NzU4Ng==", "url": "https://github.com/wso2/docs-apim/pull/1775#discussion_r482677586", "bodyText": "removed steps 3 and 4 in TOC with 6f9f104", "author": "msm1992", "createdAt": "2020-09-03T03:14:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1MTE0Mg=="}], "type": "inlineReview"}, {"oid": "6f9f104be57b16bafee6c987a395bc37f94d2cc5", "url": "https://github.com/wso2/docs-apim/commit/6f9f104be57b16bafee6c987a395bc37f94d2cc5", "message": "Remove links to steps 3 and 4 as they are not needed", "committedDate": "2020-09-03T03:12:50Z", "type": "commit"}, {"oid": "78716551091348b26c7456d1bb9b00fc87f60ddb", "url": "https://github.com/wso2/docs-apim/commit/78716551091348b26c7456d1bb9b00fc87f60ddb", "message": "Merge branch 'master' into master_110changes", "committedDate": "2020-09-03T06:09:15Z", "type": "commit"}]}