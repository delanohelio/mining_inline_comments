{"pr_number": 3031, "pr_title": "use kwargs in get_repository(), get_repos_for_project()", "pr_createdAt": "2020-01-31T15:41:34Z", "pr_url": "https://github.com/oracle/opengrok/pull/3031", "timeline": [{"oid": "5abb7a61633c96ad75b1fda39df89d5b2f20fbed", "url": "https://github.com/oracle/opengrok/commit/5abb7a61633c96ad75b1fda39df89d5b2f20fbed", "message": "fix get_repos() pydoc", "committedDate": "2020-01-31T14:50:46Z", "type": "commit"}, {"oid": "f6d7e1fa2a2b367aaea0d78577d68dfa26e4b38d", "url": "https://github.com/oracle/opengrok/commit/f6d7e1fa2a2b367aaea0d78577d68dfa26e4b38d", "message": "make get_repos_for_project(), get_repository use kwargs\n\nadd tests", "committedDate": "2020-01-31T14:52:35Z", "type": "commit"}, {"oid": "52d1916b52dc93847789f22f0361c09e1acc28b5", "url": "https://github.com/oracle/opengrok/commit/52d1916b52dc93847789f22f0361c09e1acc28b5", "message": "fix style", "committedDate": "2020-01-31T15:29:53Z", "type": "commit"}, {"oid": "50197fb0d38d8cf3727857efae364f907325c70b", "url": "https://github.com/oracle/opengrok/commit/50197fb0d38d8cf3727857efae364f907325c70b", "message": "add the actual assertions", "committedDate": "2020-01-31T15:30:11Z", "type": "commit"}, {"oid": "d45ddffda90931fd2023b32d7ce85bbde88841f5", "url": "https://github.com/oracle/opengrok/commit/d45ddffda90931fd2023b32d7ce85bbde88841f5", "message": "compare dictionaries properly", "committedDate": "2020-01-31T15:37:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ==", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373546871", "bodyText": "That only works with orderable dictionnaries which are a feature of python 3.6+\nJust checking you're sure that nobody will use an earlier version (it will likely fail if that were the case)", "author": "eric-saintetienne", "createdAt": "2020-01-31T15:47:05Z", "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -318,7 +319,7 @@ def mock_get_repo_type(*args):\n             git_repo = repos[0]\n             assert git_repo.timeout == timeout\n             assert git_repo.command == git_cmd_path\n-            assert git_repo.env == proxy_dict  # XXX contains\n+            assert git_repo.env.items() >= proxy_dict.items()", "originalCommit": "d45ddffda90931fd2023b32d7ce85bbde88841f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4MjI1MA==", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373982250", "bodyText": "Oh, I did not realize that. I guess this is fine, it's just for the test. Will mention this in the README.", "author": "vladak", "createdAt": "2020-02-03T08:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MzQ4NQ==", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373993485", "bodyText": "or you can skip the tests when python 3.6 is not available\nwe already check for python version:\n\n  \n    \n      opengrok/opengrok-tools/src/main/python/opengrok_tools/sync.py\n    \n    \n        Lines 49 to 52\n      in\n      629ad72\n    \n    \n    \n    \n\n        \n          \n           major_version = sys.version_info[0] \n        \n\n        \n          \n           if (major_version < 3): \n        \n\n        \n          \n               print(\"Need Python 3, you are running {}\".format(major_version)) \n        \n\n        \n          \n               sys.exit(1)", "author": "ktulinger", "createdAt": "2020-02-03T09:22:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5NDM5NQ==", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373994395", "bodyText": "yeah, that's very coarse grind check. I think with the way Python develops we need to cut the line somewhere.", "author": "vladak", "createdAt": "2020-02-03T09:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Njg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Nzg5Mg==", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373547892", "bodyText": "Personally I would swap lines 317 and 318, that is to say first assign repos[0] to git_repo and then assert ...(git_repo,...), it looks neater this way round but that's just my preference.", "author": "eric-saintetienne", "createdAt": "2020-01-31T15:49:07Z", "path": "opengrok-tools/src/test/python/test_mirror.py", "diffHunk": "@@ -311,11 +313,14 @@ def mock_get_repo_type(*args):\n                                           commands=commands,\n                                           proxy=proxy_dict,\n                                           command_timeout=timeout)\n-            print(repos)\n             assert len(repos) == 1\n+            assert isinstance(repos[0], GitRepository)\n+            git_repo = repos[0]", "originalCommit": "50197fb0d38d8cf3727857efae364f907325c70b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4MzU5Mg==", "url": "https://github.com/oracle/opengrok/pull/3031#discussion_r373983592", "bodyText": "To me it makes more sense this way - that repos[0] does not have to be a Git repository instance so I prefer to name it so only after it is certain.", "author": "vladak", "createdAt": "2020-02-03T08:59:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0Nzg5Mg=="}], "type": "inlineReview"}, {"oid": "9794cbbd47d8cdbd3969ca54ba180be3ff56ce26", "url": "https://github.com/oracle/opengrok/commit/9794cbbd47d8cdbd3969ca54ba180be3ff56ce26", "message": "fix comment", "committedDate": "2020-02-03T08:56:06Z", "type": "commit"}, {"oid": "629ad72373aeb10e39c1a163a442140c1542d777", "url": "https://github.com/oracle/opengrok/commit/629ad72373aeb10e39c1a163a442140c1542d777", "message": "mention the Python 3.6 requirement", "committedDate": "2020-02-03T08:57:54Z", "type": "commit"}]}