{"pr_number": 2151, "pr_title": "ZK-4653: Provide a collection of constants for Keys and provide isPre\u2026", "pr_createdAt": "2020-09-02T08:47:06Z", "pr_url": "https://github.com/zkoss/zk/pull/2151", "timeline": [{"oid": "fe30d54b2b588007971a19ed6c34e9ef4dd68466", "url": "https://github.com/zkoss/zk/commit/fe30d54b2b588007971a19ed6c34e9ef4dd68466", "message": "ZK-4653: Provide a collection of constants for Keys and provide isPressed API", "committedDate": "2020-09-02T08:56:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzNjE5Ng==", "url": "https://github.com/zkoss/zk/pull/2151#discussion_r481936196", "bodyText": "zk.error", "author": "plijyfes", "createdAt": "2020-09-02T09:34:38Z", "path": "zk/src/archive/web/js/zk/evt.js", "diffHunk": "@@ -208,6 +208,45 @@ evt.stop({progagation:true,revoke:true}); //revoke the event propagation\n \t\tif (!opts || opts.propagation) this.stopped = b;\n \t\tif (!opts || opts.dom) this.domStopped = b;\n \t\tif (opts && opts.au) this.auStopped = b;\n+\t},\n+\t/** Indicates whether a key is currently pressed.\n+\t * You can also pass more then one key into this method as a key combination, but combination only works with modifer keys(ALT/CONTROL/SHIFT/META).\n+\t * If you combine two(or more) keys that are not modifer keys, you will always get false since it is invalid.\n+\t * For example:\n+\t * isPressed(zKeys.CONTROL, zKeys.ALT, zKeys.ARROWDOWN) is valid.\n+\t * isPressed(zKeys.ARROWDOWN, zKeys.ARROWUP) is invalid.\n+\t * @param String... The target key and the modifer keys\n+\t * @return boolean\n+\t * @see zKeys\n+\t */\n+\tisPressed: function () {\n+\t\tvar keyCount = 0;\n+\t\tfor (var i = 0, len = arguments.length; i < len; i++) {\n+\t\t\tvar arg = arguments[i];\n+\t\t\tif (arg != zKeys.META && arg != zKeys.ALT && arg != zKeys.CONTROL && arg != zKeys.SHIFT) {\n+\t\t\t\tkeyCount++;\n+\t\t\t\tif (keyCount > 1)\n+\t\t\t\t\treturn false; // Keys combination is invalid", "originalCommit": "fe30d54b2b588007971a19ed6c34e9ef4dd68466", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzOTEzNQ==", "url": "https://github.com/zkoss/zk/pull/2151#discussion_r481939135", "bodyText": "if", "author": "plijyfes", "createdAt": "2020-09-02T09:39:37Z", "path": "zk/src/archive/web/js/zk/evt.js", "diffHunk": "@@ -208,6 +208,45 @@ evt.stop({progagation:true,revoke:true}); //revoke the event propagation\n \t\tif (!opts || opts.propagation) this.stopped = b;\n \t\tif (!opts || opts.dom) this.domStopped = b;\n \t\tif (opts && opts.au) this.auStopped = b;\n+\t},\n+\t/** Indicates whether a key is currently pressed.\n+\t * You can also pass more then one key into this method as a key combination, but combination only works with modifer keys(ALT/CONTROL/SHIFT/META).\n+\t * If you combine two(or more) keys that are not modifer keys, you will always get false since it is invalid.\n+\t * For example:\n+\t * isPressed(zKeys.CONTROL, zKeys.ALT, zKeys.ARROWDOWN) is valid.\n+\t * isPressed(zKeys.ARROWDOWN, zKeys.ARROWUP) is invalid.\n+\t * @param String... The target key and the modifer keys\n+\t * @return boolean\n+\t * @see zKeys\n+\t */\n+\tisPressed: function () {\n+\t\tvar keyCount = 0;\n+\t\tfor (var i = 0, len = arguments.length; i < len; i++) {\n+\t\t\tvar arg = arguments[i];\n+\t\t\tif (arg != zKeys.META && arg != zKeys.ALT && arg != zKeys.CONTROL && arg != zKeys.SHIFT) {\n+\t\t\t\tkeyCount++;\n+\t\t\t\tif (keyCount > 1)\n+\t\t\t\t\treturn false; // Keys combination is invalid\n+\t\t\t\telse if (arg != this.key)\n+\t\t\t\t\treturn false;\n+\t\t\t} else {\n+\t\t\t\tswitch (arg) {", "originalCommit": "fe30d54b2b588007971a19ed6c34e9ef4dd68466", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk0ODcyOQ==", "url": "https://github.com/zkoss/zk/pull/2151#discussion_r481948729", "bodyText": "@Class zKeys\nSince 9.5.0", "author": "plijyfes", "createdAt": "2020-09-02T09:56:23Z", "path": "zk/src/archive/web/js/zk/keys.js", "diffHunk": "@@ -0,0 +1,250 @@\n+/* keys.js\n+\n+\t\tPurpose:\n+\t\t\n+\t\tDescription:\n+\t\t\n+\t\tHistory:\n+\t\t\t\tTue Sep 01 11:59:55 CST 2020, Created by leon\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n+*/\n+\n+/**\n+ * A collection of constants for KeyboardEvent.key values.\n+ * Ref: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values", "originalCommit": "fe30d54b2b588007971a19ed6c34e9ef4dd68466", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "106f559bf91096721a2ca0e806bb1f8c25dc8210", "url": "https://github.com/zkoss/zk/commit/106f559bf91096721a2ca0e806bb1f8c25dc8210", "message": "ZK-4653: Provide a collection of constants for Keys and provide isPressed API", "committedDate": "2020-09-03T03:08:25Z", "type": "forcePushed"}, {"oid": "90c0831d8a15b1719aedf208cd043233381489da", "url": "https://github.com/zkoss/zk/commit/90c0831d8a15b1719aedf208cd043233381489da", "message": "ZK-4653: Provide a collection of constants for Keys and provide isPressed API", "committedDate": "2020-09-03T03:11:17Z", "type": "forcePushed"}, {"oid": "92358c6b2d07c7ba839e624f862d52434a85b3ac", "url": "https://github.com/zkoss/zk/commit/92358c6b2d07c7ba839e624f862d52434a85b3ac", "message": "ZK-4653: Provide a collection of constants for Keys and provide isPressed API", "committedDate": "2020-09-03T10:24:01Z", "type": "commit"}, {"oid": "92358c6b2d07c7ba839e624f862d52434a85b3ac", "url": "https://github.com/zkoss/zk/commit/92358c6b2d07c7ba839e624f862d52434a85b3ac", "message": "ZK-4653: Provide a collection of constants for Keys and provide isPressed API", "committedDate": "2020-09-03T10:24:01Z", "type": "forcePushed"}]}