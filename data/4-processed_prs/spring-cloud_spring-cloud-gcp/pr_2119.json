{"pr_number": 2119, "pr_title": "Add Unit Test and Docs for GcsStreamingMessageSource Comparator", "pr_createdAt": "2020-01-13T22:18:40Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2119", "timeline": [{"oid": "da63e3ecb0634202eaee01d4f71889f1383232a3", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/da63e3ecb0634202eaee01d4f71889f1383232a3", "message": "Add unit test and docs for storage integration feature.", "committedDate": "2020-01-13T22:16:02Z", "type": "commit"}, {"oid": "d330c16b64df0ab6865438827e1224f909902bec", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/d330c16b64df0ab6865438827e1224f909902bec", "message": "fix checkstyle", "committedDate": "2020-01-13T22:46:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3OTQ0MQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2119#discussion_r366379441", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @since 1.3\n          \n          \n            \n            \t * @since 1.2\n          \n      \n    \n    \n  \n\nLet's put it into the 1.2 branch as well.", "author": "meltsufin", "createdAt": "2020-01-14T14:47:57Z", "path": "spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSource.java", "diffHunk": "@@ -44,6 +44,14 @@ public GcsStreamingMessageSource(RemoteFileTemplate<BlobInfo> template) {\n \t\tthis(template, null);\n \t}\n \n+\t/**\n+\t * Creates a {@link GcsStreamingMessageSource} with a {@code comparator} which controls the order\n+\t * that files are processed in.\n+\t * @param template template making remote file calls to Google Cloud Storage\n+\t * @param comparator defines the order that files should be processed based on {@link BlobInfo}.\n+   *\n+\t * @since 1.3", "originalCommit": "d330c16b64df0ab6865438827e1224f909902bec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyNzQzOA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2119#discussion_r366427438", "bodyText": "Will do.", "author": "dzou", "createdAt": "2020-01-14T16:07:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3OTQ0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3OTcxNg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2119#discussion_r366379716", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t  // This uses the channel adapter with a custom comparator.\n          \n          \n            \n            \t  \t  // This uses the channel adapter with a custom comparator.", "author": "meltsufin", "createdAt": "2020-01-14T14:48:19Z", "path": "spring-cloud-gcp-storage/src/test/java/org/springframework/cloud/gcp/storage/integration/inbound/GcsStreamingMessageSourceTests.java", "diffHunk": "@@ -60,24 +61,58 @@\n public class GcsStreamingMessageSourceTests {\n \n \t@Autowired\n-\tprivate PollableChannel gcsChannel;\n+\tprivate PollableChannel unsortedChannel;\n+\n+\t@Autowired\n+\tprivate PollableChannel sortedChannel;\n \n \t@Test\n \tpublic void testInboundStreamingChannelAdapter() {\n-\t\tMessage<?> message = this.gcsChannel.receive(5000);\n+\t\tMessage<?> message = this.unsortedChannel.receive(5000);\n+\t\tassertThat(message).isNotNull();\n+\t\tassertThat(message.getPayload()).isInstanceOf(InputStream.class);\n+\t\tassertThat(message.getHeaders().get(FileHeaders.REMOTE_FILE)).isEqualTo(\"gamma\");\n+\n+\t\tmessage = this.unsortedChannel.receive(5000);\n+\t\tassertThat(message.getHeaders().get(FileHeaders.REMOTE_FILE)).isEqualTo(\"beta\");\n+\t\tassertThat(message.getPayload()).isInstanceOf(InputStream.class);\n+\n+\t\tmessage = this.unsortedChannel.receive(5000);\n+\t\tassertThat(message.getHeaders().get(FileHeaders.REMOTE_FILE)).isEqualTo(\"alpha/alpha\");\n+\t\tassertThat(message.getPayload()).isInstanceOf(InputStream.class);\n \n+\t\tmessage = this.unsortedChannel.receive(10);\n+\t\tassertThat(message).isNull();\n+\t}\n+\n+\t@Test\n+\tpublic void testSortedInboundChannelAdapter() {\n+\t  // This uses the channel adapter with a custom comparator.", "originalCommit": "d330c16b64df0ab6865438827e1224f909902bec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "60b95c00c665ad68df771383e0851ecc252fe5c6", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/60b95c00c665ad68df771383e0851ecc252fe5c6", "message": "PR Comments", "committedDate": "2020-01-14T16:05:50Z", "type": "commit"}]}