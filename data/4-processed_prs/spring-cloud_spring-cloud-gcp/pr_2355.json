{"pr_number": 2355, "pr_title": "Split the Pub/Sub configuration into subsections", "pr_createdAt": "2020-05-04T22:04:41Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355", "timeline": [{"oid": "00d8478d952ec39b930acaa0516b1a1ea0403a95", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/00d8478d952ec39b930acaa0516b1a1ea0403a95", "message": "Organize the Pub/Sub configuration into subsections", "committedDate": "2020-05-04T21:54:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyMzM5NA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420123394", "bodyText": "I'd remove \"are available to\" (yes, I know I wrote it).", "author": "elefeint", "createdAt": "2020-05-05T13:49:11Z", "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "originalCommit": "00d8478d952ec39b930acaa0516b1a1ea0403a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNjY4OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420316689", "bodyText": "Done.", "author": "dzou", "createdAt": "2020-05-05T18:24:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyMzM5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyODM1Nw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420128357", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n          \n          \n            \n            NOTE: The properties that refer to `retry` are available to control retries in case of transient failures during the gRPC call to Cloud Pub/Sub server.", "author": "meltsufin", "createdAt": "2020-05-05T13:55:42Z", "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false\n |===\n \n-The following properties are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.\n+==== GRPC Connection Settings\n+\n+The Pub/Sub API uses the https://cloud.google.com/pubsub/docs/reference/service_apis_overview#grpc_api[GRPC] protocol to send API requests to the Pub/Sub service.\n+This section describes configuration options for customizing the GRPC behavior.\n+\n+NOTE: The properties that refer to `retry` are available to control retry in case of fixable failures during the gRPC call to Cloud Pub/Sub server.", "originalCommit": "00d8478d952ec39b930acaa0516b1a1ea0403a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNzA2OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420317069", "bodyText": "Done.", "author": "dzou", "createdAt": "2020-05-05T18:24:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyODM1Nw=="}], "type": "inlineReview"}, {"oid": "3d0c790919f2ba8e6f17917ab7d375a7c6789983", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/3d0c790919f2ba8e6f17917ab7d375a7c6789983", "message": "PR Comments", "committedDate": "2020-05-05T18:23:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMzE3MA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420323170", "bodyText": "Why the extra space here before the \"|\" but not in the previous items?", "author": "dmitry-s", "createdAt": "2020-05-05T18:34:47Z", "path": "docs/src/main/asciidoc/pubsub.adoc", "diffHunk": "@@ -46,32 +50,46 @@ Google Cloud Pub/Sub API, if different from the ones in the\n | `spring.cloud.gcp.pubsub.credentials.scopes` |\n https://developers.google.com/identity/protocols/googlescopes[OAuth2 scope] for Spring Cloud GCP\n Pub/Sub credentials | No | https://www.googleapis.com/auth/pubsub\n-| `spring.cloud.gcp.pubsub.keepAliveIntervalMinutes` | Determines frequency of keepalive gRPC ping | No | `5 minutes`\n+|===\n+\n+==== Publisher/Subscriber Configuration\n+\n+This section describes configuration options to customize the behavior of the application's Pub/Sub publishers and subscribers.\n+\n+|===\n+| Name | Description | Required | Default value\n | `spring.cloud.gcp.pubsub.subscriber.parallel-pull-count` | The number of pull workers | No | 1\n | `spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period` | The maximum period a message ack deadline will be extended, in seconds | No | 0\n | `spring.cloud.gcp.pubsub.subscriber.pull-endpoint` | The endpoint for synchronous pulling messages | No | pubsub.googleapis.com:443\n | `spring.cloud.gcp.pubsub.[subscriber,publisher].executor-threads` | Number of threads used by `Subscriber` instances created by `SubscriberFactory` | No | 4\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-element-count`|\n-Maximum number of outstanding elements to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding elements to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.max-outstanding-request-bytes`|\n-Maximum number of outstanding bytes to keep in memory before enforcing flow control.|No | unlimited\n+Maximum number of outstanding bytes to keep in memory before enforcing flow control.| No | unlimited\n | `spring.cloud.gcp.pubsub.[subscriber,publisher.batching].flow-control.limit-exceeded-behavior`|\n-The behavior when the specified limits are exceeded.|No | Block\n+The behavior when the specified limits are exceeded.| No | Block\n | `spring.cloud.gcp.pubsub.publisher.batching.element-count-threshold`|\n-The element count threshold to use for batching.|No | unset (threshold does not apply)\n+The element count threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.request-byte-threshold`|\n-The request byte threshold to use for batching.|No | unset (threshold does not apply)\n+The request byte threshold to use for batching.| No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.delay-threshold-seconds`|\n The delay threshold to use for batching.\n-After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent.|No | unset (threshold does not apply)\n+After this amount of time has elapsed (counting from the first element added), the elements will be wrapped up in a batch and sent. | No | unset (threshold does not apply)\n | `spring.cloud.gcp.pubsub.publisher.batching.enabled`|\n-Enables batching.|No | false\n+Enables batching. | No | false", "originalCommit": "3d0c790919f2ba8e6f17917ab7d375a7c6789983", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNTQ4OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2355#discussion_r420335489", "bodyText": "Fixed.", "author": "dzou", "createdAt": "2020-05-05T18:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyMzE3MA=="}], "type": "inlineReview"}, {"oid": "c24d3f01e2ab40d23c39e257f3ff5a1ee9d3188d", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/c24d3f01e2ab40d23c39e257f3ff5a1ee9d3188d", "message": "Format table columns", "committedDate": "2020-05-05T18:53:53Z", "type": "commit"}, {"oid": "9c777cd9d6c350a3f271b2f243dfa0f4d4475cfa", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/9c777cd9d6c350a3f271b2f243dfa0f4d4475cfa", "message": "additional formatting", "committedDate": "2020-05-05T18:55:33Z", "type": "commit"}]}