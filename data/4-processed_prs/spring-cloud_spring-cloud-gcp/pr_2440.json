{"pr_number": 2440, "pr_title": "Add the \"spring.cloud.gcp.storage.project-id\" autoconfig", "pr_createdAt": "2020-06-18T19:16:48Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2440", "timeline": [{"oid": "1a63e9a3d7ec32fcb41760af9618322617fb1d32", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/1a63e9a3d7ec32fcb41760af9618322617fb1d32", "message": "Add the \"spring.cloud.gcp.storage.project-id\" autoconfig", "committedDate": "2020-06-18T19:11:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5MzIyMA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2440#discussion_r442493220", "bodyText": "Why are you removing the projectIdProvider parameter?", "author": "meltsufin", "createdAt": "2020-06-18T20:47:04Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/storage/GcpStorageAutoConfiguration.java", "diffHunk": "@@ -53,20 +54,22 @@\n @ConditionalOnProperty(value = \"spring.cloud.gcp.storage.enabled\", matchIfMissing = true)\n @EnableConfigurationProperties({GcpProperties.class, GcpStorageProperties.class})\n @Import(GoogleStorageProtocolResolver.class)\n-public abstract class GcpStorageAutoConfiguration { //NOSONAR squid:S1610 must be a class for Spring\n+public abstract class GcpStorageAutoConfiguration {\n+\tprivate GcpProjectIdProvider gcpProjectIdProvider; //NOSONAR squid:S1610 must be a class for Spring\n \n \t@Bean\n \t@ConditionalOnMissingBean\n-\tpublic static Storage storage(CredentialsProvider credentialsProvider,\n-\t\t\tGcpStorageProperties gcpStorageProperties,\n-\t\t\tGcpProjectIdProvider projectIdProvider) throws IOException {", "originalCommit": "1a63e9a3d7ec32fcb41760af9618322617fb1d32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY0MTQ3NA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2440#discussion_r442641474", "bodyText": "Forgot to replace it, but I can see @dzou has setup a replacement already.", "author": "kioie", "createdAt": "2020-06-19T05:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5MzIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5MzU3Ng==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2440#discussion_r442493576", "bodyText": "Should be projectIdProvider that was passed in.", "author": "meltsufin", "createdAt": "2020-06-18T20:47:51Z", "path": "spring-cloud-gcp-autoconfigure/src/main/java/org/springframework/cloud/gcp/autoconfigure/storage/GcpStorageAutoConfiguration.java", "diffHunk": "@@ -53,20 +54,22 @@\n @ConditionalOnProperty(value = \"spring.cloud.gcp.storage.enabled\", matchIfMissing = true)\n @EnableConfigurationProperties({GcpProperties.class, GcpStorageProperties.class})\n @Import(GoogleStorageProtocolResolver.class)\n-public abstract class GcpStorageAutoConfiguration { //NOSONAR squid:S1610 must be a class for Spring\n+public abstract class GcpStorageAutoConfiguration {\n+\tprivate GcpProjectIdProvider gcpProjectIdProvider; //NOSONAR squid:S1610 must be a class for Spring\n \n \t@Bean\n \t@ConditionalOnMissingBean\n-\tpublic static Storage storage(CredentialsProvider credentialsProvider,\n-\t\t\tGcpStorageProperties gcpStorageProperties,\n-\t\t\tGcpProjectIdProvider projectIdProvider) throws IOException {\n+\tpublic Storage storage(CredentialsProvider credentialsProvider, GcpStorageProperties gcpStorageProperties) throws IOException {\n+\t\tthis.gcpProjectIdProvider = gcpStorageProperties.getProjectId() != null\n+\t\t\t\t? gcpStorageProperties::getProjectId\n+\t\t\t\t: new DefaultGcpProjectIdProvider();", "originalCommit": "1a63e9a3d7ec32fcb41760af9618322617fb1d32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY0MTYxMw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2440#discussion_r442641613", "bodyText": "Yea, thanks for the catch!", "author": "kioie", "createdAt": "2020-06-19T05:42:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5MzU3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5Mzg4Mw==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2440#discussion_r442493883", "bodyText": "I would just add another test with and without the property.", "author": "meltsufin", "createdAt": "2020-06-18T20:48:28Z", "path": "spring-cloud-gcp-autoconfigure/src/test/java/org/springframework/cloud/gcp/autoconfigure/storage/GcpStorageAutoConfigurationTests.java", "diffHunk": "@@ -46,9 +45,11 @@\n  * @author Elena Felder\n  */\n public class GcpStorageAutoConfigurationTests {\n+\tprivate static final String PROJECT_NAME = \"hollow-light-of-the-sealed-land\";\n \n \tprivate ApplicationContextRunner contextRunner = new ApplicationContextRunner()\n \t\t.withConfiguration(AutoConfigurations.of(GcpStorageAutoConfiguration.class))\n+\t\t\t.withPropertyValues(\"spring.cloud.gcp.storage.project-id=\" + PROJECT_NAME)", "originalCommit": "1a63e9a3d7ec32fcb41760af9618322617fb1d32", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70bf50f00fd00b878b4b035f541266d18cc3c3ec", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/70bf50f00fd00b878b4b035f541266d18cc3c3ec", "message": "polish", "committedDate": "2020-06-18T20:51:19Z", "type": "commit"}, {"oid": "b87cd6a9f3024c4a3208f24ad72cb57acad1693f", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b87cd6a9f3024c4a3208f24ad72cb57acad1693f", "message": "fix checkstyle", "committedDate": "2020-06-18T21:23:09Z", "type": "commit"}]}