{"pr_number": 2164, "pr_title": "improve PartTree parts validation", "pr_createdAt": "2020-01-31T21:20:22Z", "pr_url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164", "timeline": [{"oid": "6921db3eb3b6d15d2709650c4336bf4925144f07", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/6921db3eb3b6d15d2709650c4336bf4925144f07", "message": "improve PartTree parts validation", "committedDate": "2020-01-31T21:17:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MTkzNA==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r373691934", "bodyText": "Doesn't support 'OR', would be a more straight forward message imo?", "author": "meltsufin", "createdAt": "2020-01-31T21:24:01Z", "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java", "diffHunk": "@@ -88,18 +88,31 @@ public PartTreeFirestoreQuery(FirestoreQueryMethod queryMethod, FirestoreReactiv\n \t\tthis.tree = new PartTree(queryMethod.getName(), returnedType.getDomainType());\n \t\tthis.persistentEntity = mappingContext.getPersistentEntity(returnedType.getDomainType());\n \t\tthis.classMapper = classMapper;\n+\t\tvalidate();\n \t}\n \n-\t@Override\n-\tpublic Object execute(Object[] parameters) {\n+\tprivate void validate() {\n \t\tList parts = this.tree.get().collect(Collectors.toList());\n \t\tif (parts.size() > 1 && parts.get(0) instanceof PartTree.OrPart) {\n \t\t\t\tthrow new FirestoreDataException(\n-\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND.\");\n+\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND (\" + this.getQueryMethod().getName() + \")\");", "originalCommit": "6921db3eb3b6d15d2709650c4336bf4925144f07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MjA0Mg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r373692042", "bodyText": "Can we just say Between?", "author": "meltsufin", "createdAt": "2020-01-31T21:24:21Z", "path": "spring-cloud-gcp-data-firestore/src/test/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQueryTests.java", "diffHunk": "@@ -128,20 +128,19 @@ public void testPartTreeQueryParameterException() {\n \n \t@Test\n \tpublic void testPartTreeQueryFilterException() {\n-\t\tPartTreeFirestoreQuery partTreeFirestoreQuery =\n-\t\t\t\tcreatePartTreeQuery(\"findByAgeBetween\");\n-\t\tassertThatThrownBy(() -> partTreeFirestoreQuery.execute(new Object[]{0, 100}))\n+\t\tassertThatThrownBy(() -> createPartTreeQuery(\"findByAgeBetweenAndNameRegex\"))\n \t\t\t\t.isInstanceOf(FirestoreDataException.class)\n-\t\t\t\t.hasMessage(\"Unsupported predicate keyword: BETWEEN (2): [IsBetween, Between]\");\n+\t\t\t\t.hasMessage(\"Unsupported predicate keywords: \" +\n+\t\t\t\t\t\t\"[BETWEEN (2): [IsBetween, Between], \" +", "originalCommit": "6921db3eb3b6d15d2709650c4336bf4925144f07", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "32313b07f454931e7d5d2690998bfd96bf4c6219", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/32313b07f454931e7d5d2690998bfd96bf4c6219", "message": "improve PartTree parts validation", "committedDate": "2020-01-31T21:34:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzNjY4OQ==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r374136689", "bodyText": "nit: move .map() to the next line for readability.", "author": "elefeint", "createdAt": "2020-02-03T14:37:02Z", "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java", "diffHunk": "@@ -88,18 +88,31 @@ public PartTreeFirestoreQuery(FirestoreQueryMethod queryMethod, FirestoreReactiv\n \t\tthis.tree = new PartTree(queryMethod.getName(), returnedType.getDomainType());\n \t\tthis.persistentEntity = mappingContext.getPersistentEntity(returnedType.getDomainType());\n \t\tthis.classMapper = classMapper;\n+\t\tvalidate();\n \t}\n \n-\t@Override\n-\tpublic Object execute(Object[] parameters) {\n+\tprivate void validate() {\n \t\tList parts = this.tree.get().collect(Collectors.toList());\n \t\tif (parts.size() > 1 && parts.get(0) instanceof PartTree.OrPart) {\n \t\t\t\tthrow new FirestoreDataException(\n-\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND.\");\n+\t\t\t\t\t\t\"Cloud Firestore doesn't support 'OR' (\" + this.getQueryMethod().getName() + \")\");\n+\t\t}\n+\t\tList<String> unsupportedParts = this.tree.getParts().stream()\n+\t\t\t\t.filter(part -> !isSupportedPart(part.getType())).map(part -> part.getType().toString())", "originalCommit": "32313b07f454931e7d5d2690998bfd96bf4c6219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzODI4Mg==", "url": "https://github.com/spring-cloud/spring-cloud-gcp/pull/2164#discussion_r374138282", "bodyText": "Would it help the caller to see (method name: [METHOD]) as opposed to just ([METHOD])?", "author": "elefeint", "createdAt": "2020-02-03T14:39:50Z", "path": "spring-cloud-gcp-data-firestore/src/main/java/org/springframework/cloud/gcp/data/firestore/repository/query/PartTreeFirestoreQuery.java", "diffHunk": "@@ -88,18 +88,31 @@ public PartTreeFirestoreQuery(FirestoreQueryMethod queryMethod, FirestoreReactiv\n \t\tthis.tree = new PartTree(queryMethod.getName(), returnedType.getDomainType());\n \t\tthis.persistentEntity = mappingContext.getPersistentEntity(returnedType.getDomainType());\n \t\tthis.classMapper = classMapper;\n+\t\tvalidate();\n \t}\n \n-\t@Override\n-\tpublic Object execute(Object[] parameters) {\n+\tprivate void validate() {\n \t\tList parts = this.tree.get().collect(Collectors.toList());\n \t\tif (parts.size() > 1 && parts.get(0) instanceof PartTree.OrPart) {\n \t\t\t\tthrow new FirestoreDataException(\n-\t\t\t\t\t\t\"Cloud Firestore only supports multiple filters combined with AND.\");\n+\t\t\t\t\t\t\"Cloud Firestore doesn't support 'OR' (\" + this.getQueryMethod().getName() + \")\");", "originalCommit": "32313b07f454931e7d5d2690998bfd96bf4c6219", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b1a2201f3ac5cd1afc0705dfdb29d3ea3c99a081", "url": "https://github.com/spring-cloud/spring-cloud-gcp/commit/b1a2201f3ac5cd1afc0705dfdb29d3ea3c99a081", "message": "improve PartTree parts validation", "committedDate": "2020-02-03T16:29:22Z", "type": "commit"}]}