{"pr_number": 663, "pr_title": "Decimal precision fix", "pr_createdAt": "2020-05-27T19:54:34Z", "pr_url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4NDU2NQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663#discussion_r431484565", "bodyText": "CC @vietj to make sure you are OK with this change", "author": "aguibert", "createdAt": "2020-05-27T22:45:03Z", "path": "pom.xml", "diffHunk": "@@ -48,6 +48,8 @@\n \n   <properties>\n     <stack.version>4.0.0-SNAPSHOT</stack.version>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+    <maven.compiler.target>1.8</maven.compiler.target>", "originalCommit": "9c55da7e1388e154594e51e5c6cff434842f95f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMDE5Nw==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663#discussion_r431530197", "bodyText": "Why do we need this as it's already defined in https://github.com/vert-x3/vertx-parent/blob/master/pom.xml?", "author": "BillyYccc", "createdAt": "2020-05-28T01:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4NDU2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0ODgyMQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663#discussion_r432048821", "bodyText": "I thought I ran into an incompatible class version change and this fixed it, but I just double checked and it looks like we were indeed compiling to 1.8 before, so I must have been mistaken -- I'll remove this", "author": "aguibert", "createdAt": "2020-05-28T18:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ4NDU2NQ=="}], "type": "inlineReview"}, {"oid": "4703de1e76e7f772859505c73c2e5627aeea5fd3", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/4703de1e76e7f772859505c73c2e5627aeea5fd3", "message": "Perform client side decimal rounding based on defined DB precision and scale", "committedDate": "2020-05-28T18:51:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1MzYxMQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663#discussion_r432053611", "bodyText": "Intentionally leaving this comment here so I remember to clean it up once I do the global cleanup of the drda package", "author": "aguibert", "createdAt": "2020-05-28T18:58:36Z", "path": "vertx-db2-client/src/main/java/io/vertx/db2client/impl/drda/DRDAQueryRequest.java", "diffHunk": "@@ -1399,7 +1409,7 @@ private Hashtable computeProtocolTypesAndLengths(\n                     lidAndLengths[i][0]--;\n                 }\n             }\n-            return overrideMap;\n+            return overrideMap; // @AGG this is never used", "originalCommit": "4703de1e76e7f772859505c73c2e5627aeea5fd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE4Nzk2Mw==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663#discussion_r432187963", "bodyText": "Thanks for letting me know", "author": "gjwatts", "createdAt": "2020-05-29T00:02:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1MzYxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE4NjcxNg==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663#discussion_r432186716", "bodyText": "typo lenght -> length", "author": "gjwatts", "createdAt": "2020-05-28T23:58:31Z", "path": "vertx-db2-client/src/main/java/io/vertx/db2client/impl/drda/NetSqlca.java", "diffHunk": "@@ -123,25 +123,31 @@ public static void throwSqlError(NetSqlca sqlca) {\n \t   switch(sqlca.sqlCode_) {\n             // The SQL syntax is invalid\n   \t        case SqlCode.INVALID_SQL_STATEMENT:\n-       \t        throw new DB2Exception(\"The SQL syntax provided was invalid\", SqlCode.INVALID_SQL_STATEMENT, sqlca.sqlState_);\n+       \t        throw new DB2Exception(\"The SQL syntax provided was invalid\", sqlca.sqlCode_, sqlca.sqlState_);\n        \t    // The object (table?) is not defined/available\n   \t        case SqlCode.OBJECT_NOT_DEFINED:\n   \t        \tif (sqlErrmc.length() > 0)\n-  \t        \t\tthrow new DB2Exception(\"The object '\" + sqlErrmc + \"' provided is not defined\", SqlCode.OBJECT_NOT_DEFINED, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"The object '\" + sqlErrmc + \"' provided is not defined\", sqlca.sqlCode_, sqlca.sqlState_);\n   \t        \telse\n-  \t        \t\tthrow new DB2Exception(\"An object provided is not defined\", SqlCode.OBJECT_NOT_DEFINED, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"An object provided is not defined\", sqlca.sqlCode_, sqlca.sqlState_);\n        \t    // The object (table?) is not defined/available\n   \t        case SqlCode.COLUMN_DOES_NOT_EXIST:\n   \t        \tif (sqlErrmc.length() > 0)\n-  \t        \t\tthrow new DB2Exception(\"The column '\" + sqlErrmc + \"' provided does not exist\", SqlCode.COLUMN_DOES_NOT_EXIST, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"The column '\" + sqlErrmc + \"' provided does not exist\", sqlca.sqlCode_, sqlca.sqlState_);\n   \t        \telse\n-  \t        \t\tthrow new DB2Exception(\"A column provided does not exist\", SqlCode.COLUMN_DOES_NOT_EXIST, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"A column provided does not exist\", sqlca.sqlCode_, sqlca.sqlState_);\n \t        // Invalid database specified\n \t   \t    case SqlCode.DATABASE_NOT_FOUND:\n \t   \t    \tif (sqlErrmc.length() > 0)\n-\t   \t    \t\tthrow new DB2Exception(\"The database '\" + sqlErrmc + \"' provided was not found\", SqlCode.DATABASE_NOT_FOUND, sqlca.sqlState_);\n+\t   \t    \t\tthrow new DB2Exception(\"The database '\" + sqlErrmc + \"' provided was not found\", sqlca.sqlCode_, sqlca.sqlState_);\n \t   \t    \telse\n-\t   \t    \t\tthrow new DB2Exception(\"The database provided was not found\", SqlCode.DATABASE_NOT_FOUND, sqlca.sqlState_);\n+\t   \t    \t\tthrow new DB2Exception(\"The database provided was not found\", sqlca.sqlCode_, sqlca.sqlState_);\n+\t   \t    case SqlCode.DATA_TYPE_INVALID_ATTR:\n+\t   \t        if (sqlErrmc.length() > 0)\n+\t   \t            throw new DB2Exception(\"The statement cannot be processed. The data type definition '\" + sqlErrmc + \n+\t   \t                \"' specifies an invalid attribute such as precision, lenght, or scale.\", sqlca.sqlCode_, sqlca.sqlState_);", "originalCommit": "4703de1e76e7f772859505c73c2e5627aeea5fd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE4Nzc1MA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/663#discussion_r432187750", "bodyText": "Same typo (copy/paste) :-)", "author": "gjwatts", "createdAt": "2020-05-29T00:02:03Z", "path": "vertx-db2-client/src/main/java/io/vertx/db2client/impl/drda/NetSqlca.java", "diffHunk": "@@ -123,25 +123,31 @@ public static void throwSqlError(NetSqlca sqlca) {\n \t   switch(sqlca.sqlCode_) {\n             // The SQL syntax is invalid\n   \t        case SqlCode.INVALID_SQL_STATEMENT:\n-       \t        throw new DB2Exception(\"The SQL syntax provided was invalid\", SqlCode.INVALID_SQL_STATEMENT, sqlca.sqlState_);\n+       \t        throw new DB2Exception(\"The SQL syntax provided was invalid\", sqlca.sqlCode_, sqlca.sqlState_);\n        \t    // The object (table?) is not defined/available\n   \t        case SqlCode.OBJECT_NOT_DEFINED:\n   \t        \tif (sqlErrmc.length() > 0)\n-  \t        \t\tthrow new DB2Exception(\"The object '\" + sqlErrmc + \"' provided is not defined\", SqlCode.OBJECT_NOT_DEFINED, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"The object '\" + sqlErrmc + \"' provided is not defined\", sqlca.sqlCode_, sqlca.sqlState_);\n   \t        \telse\n-  \t        \t\tthrow new DB2Exception(\"An object provided is not defined\", SqlCode.OBJECT_NOT_DEFINED, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"An object provided is not defined\", sqlca.sqlCode_, sqlca.sqlState_);\n        \t    // The object (table?) is not defined/available\n   \t        case SqlCode.COLUMN_DOES_NOT_EXIST:\n   \t        \tif (sqlErrmc.length() > 0)\n-  \t        \t\tthrow new DB2Exception(\"The column '\" + sqlErrmc + \"' provided does not exist\", SqlCode.COLUMN_DOES_NOT_EXIST, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"The column '\" + sqlErrmc + \"' provided does not exist\", sqlca.sqlCode_, sqlca.sqlState_);\n   \t        \telse\n-  \t        \t\tthrow new DB2Exception(\"A column provided does not exist\", SqlCode.COLUMN_DOES_NOT_EXIST, sqlca.sqlState_);\n+  \t        \t\tthrow new DB2Exception(\"A column provided does not exist\", sqlca.sqlCode_, sqlca.sqlState_);\n \t        // Invalid database specified\n \t   \t    case SqlCode.DATABASE_NOT_FOUND:\n \t   \t    \tif (sqlErrmc.length() > 0)\n-\t   \t    \t\tthrow new DB2Exception(\"The database '\" + sqlErrmc + \"' provided was not found\", SqlCode.DATABASE_NOT_FOUND, sqlca.sqlState_);\n+\t   \t    \t\tthrow new DB2Exception(\"The database '\" + sqlErrmc + \"' provided was not found\", sqlca.sqlCode_, sqlca.sqlState_);\n \t   \t    \telse\n-\t   \t    \t\tthrow new DB2Exception(\"The database provided was not found\", SqlCode.DATABASE_NOT_FOUND, sqlca.sqlState_);\n+\t   \t    \t\tthrow new DB2Exception(\"The database provided was not found\", sqlca.sqlCode_, sqlca.sqlState_);\n+\t   \t    case SqlCode.DATA_TYPE_INVALID_ATTR:\n+\t   \t        if (sqlErrmc.length() > 0)\n+\t   \t            throw new DB2Exception(\"The statement cannot be processed. The data type definition '\" + sqlErrmc + \n+\t   \t                \"' specifies an invalid attribute such as precision, lenght, or scale.\", sqlca.sqlCode_, sqlca.sqlState_);\n+\t   \t        else\n+\t   \t            throw new DB2Exception(\"The statement cannot be processed. A data type definition specifies an invalid attribute such as precision, lenght, or scale.\", sqlca.sqlCode_, sqlca.sqlState_);", "originalCommit": "4703de1e76e7f772859505c73c2e5627aeea5fd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c9a48e22c394b2e5e44751896967c9fedc387fb9", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/c9a48e22c394b2e5e44751896967c9fedc387fb9", "message": "Perform client side decimal rounding based on defined DB precision and scale", "committedDate": "2020-05-29T03:41:20Z", "type": "commit"}, {"oid": "c9a48e22c394b2e5e44751896967c9fedc387fb9", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/c9a48e22c394b2e5e44751896967c9fedc387fb9", "message": "Perform client side decimal rounding based on defined DB precision and scale", "committedDate": "2020-05-29T03:41:20Z", "type": "forcePushed"}]}