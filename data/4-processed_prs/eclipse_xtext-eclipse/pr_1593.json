{"pr_number": 1593, "pr_title": "[eclipse/xtext#1837] converted example code from xtend to java", "pr_createdAt": "2020-11-23T14:55:43Z", "pr_url": "https://github.com/eclipse/xtext-eclipse/pull/1593", "timeline": [{"oid": "cce34860570b589ca836826e0dd0b48fe9e15f31", "url": "https://github.com/eclipse/xtext-eclipse/commit/cce34860570b589ca836826e0dd0b48fe9e15f31", "message": "[eclipse/xtext#1837] converted example code from xtend to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-11-23T15:05:09Z", "type": "forcePushed"}, {"oid": "d4089b63799f206864acf0225ceefcf96ec3d6ed", "url": "https://github.com/eclipse/xtext-eclipse/commit/d4089b63799f206864acf0225ceefcf96ec3d6ed", "message": "[eclipse/xtext#1837] converted example code from xtend to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-11-23T15:06:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MjcyOQ==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528772729", "bodyText": "I think an import is a safe bet in this context.", "author": "szarnekow", "createdAt": "2020-11-23T15:10:25Z", "path": "org.eclipse.xtext.xtext.ui.examples/projects/arithmetics/org.eclipse.xtext.example.arithmetics.tests/src/org/eclipse/xtext/example/arithmetics/tests/ArithmeticsParsingTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.example.arithmetics.tests;\n+\n+import org.eclipse.xtext.testing.InjectWith;\n+import org.eclipse.xtext.testing.XtextRunner;\n+import org.eclipse.xtext.testing.util.ParseHelper;\n+import org.eclipse.xtext.testing.validation.ValidationTestHelper;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.google.inject.Inject;\n+\n+@RunWith(XtextRunner.class)\n+@InjectWith(ArithmeticsInjectorProvider.class)\n+public class ArithmeticsParsingTest {\n+\t@Inject\n+\tprivate ParseHelper<org.eclipse.xtext.example.arithmetics.arithmetics.Module> parseHelper;", "originalCommit": "d4089b63799f206864acf0225ceefcf96ec3d6ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NzE0Ng==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528777146", "bodyText": "java 11?", "author": "cdietrich", "createdAt": "2020-11-23T15:16:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MjcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MzA5Nw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528773097", "bodyText": "Use simple name.", "author": "szarnekow", "createdAt": "2020-11-23T15:10:54Z", "path": "org.eclipse.xtext.xtext.ui.examples/projects/arithmetics/org.eclipse.xtext.example.arithmetics.tests/src/org/eclipse/xtext/example/arithmetics/tests/interpreter/CalculatorTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.example.arithmetics.tests.interpreter;\n+\n+import java.math.BigDecimal;\n+\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Expression;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Statement;\n+import org.eclipse.xtext.example.arithmetics.interpreter.Calculator;\n+import org.eclipse.xtext.example.arithmetics.tests.ArithmeticsInjectorProvider;\n+import org.eclipse.xtext.testing.InjectWith;\n+import org.eclipse.xtext.testing.XtextRunner;\n+import org.eclipse.xtext.testing.util.ParseHelper;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.google.common.collect.Iterables;\n+import com.google.inject.Inject;\n+\n+@RunWith(XtextRunner.class)\n+@InjectWith(ArithmeticsInjectorProvider.class)\n+public class CalculatorTest {\n+\t@Inject\n+\tprivate ParseHelper<org.eclipse.xtext.example.arithmetics.arithmetics.Module> parseHelper;\n+\n+\t@Inject\n+\tprivate Calculator calculator;\n+\n+\t@Test\n+\tpublic void testSimple() throws Exception {\n+\t\tevaluatesTo(\"1 + 2 + 3\", 6);\n+\t\tevaluatesTo(\"1 + 2 - 3\", 0);\n+\t\tevaluatesTo(\"1 * 2 + 3\", 5);\n+\t\tevaluatesTo(\"1 - 2 - 3\", -4);\n+\t\tevaluatesTo(\"1 / 2 * 3\", 1.5);\n+\t}\n+\n+\t@Test\n+\tpublic void testFunction() throws Exception {\n+\t\tevaluatesTo(\"multiply(2,multiply(2, 3));\\ndef multiply(a, b) : a * b;\\n\", 12.0);\n+\t}\n+\n+\tprivate void evaluatesTo(CharSequence content, double expected) throws Exception {\n+\t\torg.eclipse.xtext.example.arithmetics.arithmetics.Module module = parseHelper.parse(\"module test \" + content);", "originalCommit": "d4089b63799f206864acf0225ceefcf96ec3d6ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NzM1Mg==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528777352", "bodyText": "will this work with java 11?", "author": "cdietrich", "createdAt": "2020-11-23T15:16:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MzA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3Nzc1OQ==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528777759", "bodyText": "Yes, the explicit import will win over java.lang.Module", "author": "szarnekow", "createdAt": "2020-11-23T15:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MzA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MzcxMg==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528773712", "bodyText": "No need for iterables.first since we access the statement immediately afterwards. Make it module.getStatements().get(0)", "author": "szarnekow", "createdAt": "2020-11-23T15:11:45Z", "path": "org.eclipse.xtext.xtext.ui.examples/projects/arithmetics/org.eclipse.xtext.example.arithmetics.tests/src/org/eclipse/xtext/example/arithmetics/tests/interpreter/CalculatorTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.example.arithmetics.tests.interpreter;\n+\n+import java.math.BigDecimal;\n+\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Expression;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Statement;\n+import org.eclipse.xtext.example.arithmetics.interpreter.Calculator;\n+import org.eclipse.xtext.example.arithmetics.tests.ArithmeticsInjectorProvider;\n+import org.eclipse.xtext.testing.InjectWith;\n+import org.eclipse.xtext.testing.XtextRunner;\n+import org.eclipse.xtext.testing.util.ParseHelper;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.google.common.collect.Iterables;\n+import com.google.inject.Inject;\n+\n+@RunWith(XtextRunner.class)\n+@InjectWith(ArithmeticsInjectorProvider.class)\n+public class CalculatorTest {\n+\t@Inject\n+\tprivate ParseHelper<org.eclipse.xtext.example.arithmetics.arithmetics.Module> parseHelper;\n+\n+\t@Inject\n+\tprivate Calculator calculator;\n+\n+\t@Test\n+\tpublic void testSimple() throws Exception {\n+\t\tevaluatesTo(\"1 + 2 + 3\", 6);\n+\t\tevaluatesTo(\"1 + 2 - 3\", 0);\n+\t\tevaluatesTo(\"1 * 2 + 3\", 5);\n+\t\tevaluatesTo(\"1 - 2 - 3\", -4);\n+\t\tevaluatesTo(\"1 / 2 * 3\", 1.5);\n+\t}\n+\n+\t@Test\n+\tpublic void testFunction() throws Exception {\n+\t\tevaluatesTo(\"multiply(2,multiply(2, 3));\\ndef multiply(a, b) : a * b;\\n\", 12.0);\n+\t}\n+\n+\tprivate void evaluatesTo(CharSequence content, double expected) throws Exception {\n+\t\torg.eclipse.xtext.example.arithmetics.arithmetics.Module module = parseHelper.parse(\"module test \" + content);\n+\t\tStatement firstStatement = Iterables.getFirst(module.getStatements(), null);", "originalCommit": "d4089b63799f206864acf0225ceefcf96ec3d6ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NDQ3Mg==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528774472", "bodyText": "Should this be covered by preferXtendStubs above?", "author": "szarnekow", "createdAt": "2020-11-23T15:12:43Z", "path": "org.eclipse.xtext.xtext.ui.examples/projects/arithmetics/org.eclipse.xtext.example.arithmetics/src/org/eclipse/xtext/example/arithmetics/GenerateArithmetics.mwe2", "diffHunk": "@@ -62,6 +62,9 @@ Workflow {\n \t\t\t\tgenerateStub = true\n \t\t\t\tgenerateXtendStub = false\n \t\t\t}\n+\t\t\tjunitSupport = {\n+\t\t\t\tgenerateXtendStub = false", "originalCommit": "d4089b63799f206864acf0225ceefcf96ec3d6ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3OTA1OQ==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528779059", "bodyText": "no cause backwards compatibility :(", "author": "cdietrich", "createdAt": "2020-11-23T15:18:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NDQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NDkxOQ==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1593#discussion_r528774919", "bodyText": "JavaDoc is outdated. There is no polymorphic dispatch.", "author": "szarnekow", "createdAt": "2020-11-23T15:13:23Z", "path": "org.eclipse.xtext.xtext.ui.examples/projects/arithmetics/org.eclipse.xtext.example.arithmetics/src/org/eclipse/xtext/example/arithmetics/interpreter/Calculator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.example.arithmetics.interpreter;\n+\n+import java.math.BigDecimal;\n+import java.math.RoundingMode;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+\n+import org.eclipse.xtext.example.arithmetics.arithmetics.AbstractDefinition;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.ArithmeticsPackage;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.DeclaredParameter;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Definition;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Div;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Expression;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.FunctionCall;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Minus;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Multi;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.NumberLiteral;\n+import org.eclipse.xtext.example.arithmetics.arithmetics.Plus;\n+\n+import com.google.common.collect.ImmutableMap;\n+\n+/**\n+ * an interpreter for instances of EClasses of the {@link ArithmeticsPackage}.\n+ * It internally uses a polymorphic dispatcher to dispatch between the", "originalCommit": "d4089b63799f206864acf0225ceefcf96ec3d6ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ade9149e75380e47d80199d763de1b4792f9ce1b", "url": "https://github.com/eclipse/xtext-eclipse/commit/ade9149e75380e47d80199d763de1b4792f9ce1b", "message": "[eclipse/xtext#1837] converted example code from xtend to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-11-23T15:19:34Z", "type": "forcePushed"}, {"oid": "8955f0860488ddd358e9937dd5d1ec50165537e3", "url": "https://github.com/eclipse/xtext-eclipse/commit/8955f0860488ddd358e9937dd5d1ec50165537e3", "message": "[eclipse/xtext#1837] converted example code from xtend to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-11-23T15:22:01Z", "type": "commit"}, {"oid": "8955f0860488ddd358e9937dd5d1ec50165537e3", "url": "https://github.com/eclipse/xtext-eclipse/commit/8955f0860488ddd358e9937dd5d1ec50165537e3", "message": "[eclipse/xtext#1837] converted example code from xtend to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-11-23T15:22:01Z", "type": "forcePushed"}]}