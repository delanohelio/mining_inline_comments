{"pr_number": 1575, "pr_title": "[eclipse/xtext-xtend#1132] do restriction checks also on type literal member feature calls", "pr_createdAt": "2020-10-29T08:43:46Z", "pr_url": "https://github.com/eclipse/xtext-eclipse/pull/1575", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MTM4MA==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1575#discussion_r514091380", "bodyText": "am not sure if we should treat nested types separately. java also gives 2 errors", "author": "cdietrich", "createdAt": "2020-10-29T08:46:52Z", "path": "org.eclipse.xtext.xbase.ui/src/org/eclipse/xtext/xbase/ui/validation/XbaseUIValidator.java", "diffHunk": "@@ -84,6 +86,19 @@ public void checkRestrictedType(XConstructorCall constructorCall) {\n \t\tcheckRestrictedType(constructorCall, XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR, declaringType);\n \t}\n \n+\t@Check\n+\tpublic void checkRestrictedType(XMemberFeatureCall featureCall) {\n+\t\tif (isRestrictionCheckIgnored())\n+\t\t\treturn;\n+\t\tif (!featureCall.isTypeLiteral())\n+\t\t\treturn;\n+\t\tJvmIdentifiableElement feature = featureCall.getFeature();\n+\t\tif (feature instanceof JvmDeclaredType) {\n+\t\t\tJvmDeclaredType declaringType = (JvmDeclaredType) feature;\n+\t\t\tcheckRestrictedType(featureCall, XbasePackage.Literals.XMEMBER_FEATURE_CALL__TYPE_LITERAL, declaringType);", "originalCommit": "f08f10b9405094d729993aebbf077435db9b4d5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MDIyMw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1575#discussion_r514090223", "bodyText": "This is not the declaringType but a referencedType", "author": "szarnekow", "createdAt": "2020-10-29T08:45:00Z", "path": "org.eclipse.xtext.xbase.ui/src/org/eclipse/xtext/xbase/ui/validation/XbaseUIValidator.java", "diffHunk": "@@ -84,6 +86,19 @@ public void checkRestrictedType(XConstructorCall constructorCall) {\n \t\tcheckRestrictedType(constructorCall, XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR, declaringType);\n \t}\n \n+\t@Check\n+\tpublic void checkRestrictedType(XMemberFeatureCall featureCall) {\n+\t\tif (isRestrictionCheckIgnored())\n+\t\t\treturn;\n+\t\tif (!featureCall.isTypeLiteral())\n+\t\t\treturn;\n+\t\tJvmIdentifiableElement feature = featureCall.getFeature();\n+\t\tif (feature instanceof JvmDeclaredType) {\n+\t\t\tJvmDeclaredType declaringType = (JvmDeclaredType) feature;", "originalCommit": "f08f10b9405094d729993aebbf077435db9b4d5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MDc2Mw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1575#discussion_r514090763", "bodyText": "This likely not the feature you want to highlight. I'd pass XAbstractFeatureCall_feature instead.", "author": "szarnekow", "createdAt": "2020-10-29T08:45:54Z", "path": "org.eclipse.xtext.xbase.ui/src/org/eclipse/xtext/xbase/ui/validation/XbaseUIValidator.java", "diffHunk": "@@ -84,6 +86,19 @@ public void checkRestrictedType(XConstructorCall constructorCall) {\n \t\tcheckRestrictedType(constructorCall, XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR, declaringType);\n \t}\n \n+\t@Check\n+\tpublic void checkRestrictedType(XMemberFeatureCall featureCall) {\n+\t\tif (isRestrictionCheckIgnored())\n+\t\t\treturn;\n+\t\tif (!featureCall.isTypeLiteral())\n+\t\t\treturn;\n+\t\tJvmIdentifiableElement feature = featureCall.getFeature();\n+\t\tif (feature instanceof JvmDeclaredType) {\n+\t\t\tJvmDeclaredType declaringType = (JvmDeclaredType) feature;\n+\t\t\tcheckRestrictedType(featureCall, XbasePackage.Literals.XMEMBER_FEATURE_CALL__TYPE_LITERAL, declaringType);", "originalCommit": "f08f10b9405094d729993aebbf077435db9b4d5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MTA5Ng==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1575#discussion_r514091096", "bodyText": "Should probably be defined for XAbstractMemberFeatureCall, otherwise we'll only have the warning on the import but not on the reference.", "author": "szarnekow", "createdAt": "2020-10-29T08:46:25Z", "path": "org.eclipse.xtext.xbase.ui/src/org/eclipse/xtext/xbase/ui/validation/XbaseUIValidator.java", "diffHunk": "@@ -84,6 +86,19 @@ public void checkRestrictedType(XConstructorCall constructorCall) {\n \t\tcheckRestrictedType(constructorCall, XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR, declaringType);\n \t}\n \n+\t@Check\n+\tpublic void checkRestrictedType(XMemberFeatureCall featureCall) {", "originalCommit": "f08f10b9405094d729993aebbf077435db9b4d5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b2ca1760f06f87eb7a5a1fbb56eb31ca4b3d0ee", "url": "https://github.com/eclipse/xtext-eclipse/commit/4b2ca1760f06f87eb7a5a1fbb56eb31ca4b3d0ee", "message": "[eclipse/xtext-xtend#1132] do restriction checks also on type literal member feature calls\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-10-29T09:01:50Z", "type": "forcePushed"}, {"oid": "a92170158db878d89940a0ee3b451cc587c972b1", "url": "https://github.com/eclipse/xtext-eclipse/commit/a92170158db878d89940a0ee3b451cc587c972b1", "message": "[eclipse/xtext-xtend#1132] do restriction checks also on type literal member feature calls\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-10-29T09:25:36Z", "type": "commit"}, {"oid": "a92170158db878d89940a0ee3b451cc587c972b1", "url": "https://github.com/eclipse/xtext-eclipse/commit/a92170158db878d89940a0ee3b451cc587c972b1", "message": "[eclipse/xtext-xtend#1132] do restriction checks also on type literal member feature calls\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-10-29T09:25:36Z", "type": "forcePushed"}]}