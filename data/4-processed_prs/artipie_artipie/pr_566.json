{"pr_number": 566, "pr_title": "#565 - Artifactory API corrections", "pr_createdAt": "2020-09-10T14:30:51Z", "pr_url": "https://github.com/artipie/artipie/pull/566", "timeline": [{"oid": "5a97328d093fd78433f68338c23245fa49c0018d", "url": "https://github.com/artipie/artipie/commit/5a97328d093fd78433f68338c23245fa49c0018d", "message": "#565 - Artifactory API corrections", "committedDate": "2020-09-10T14:29:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzODMzNg==", "url": "https://github.com/artipie/artipie/pull/566#discussion_r486838336", "bodyText": "@olenagerasimova this variable is useless, we may just put into string", "author": "olegmoz", "createdAt": "2020-09-11T07:52:09Z", "path": "src/test/java/com/artipie/api/artifactory/GetPermissionSliceTest.java", "diffHunk": "@@ -72,6 +72,18 @@ void returnsBadRequestOnInvalidRequest() {\n         );\n     }\n \n+    @Test\n+    void returnsNotFoundIfRepoDoesNotExists() {\n+        final String repo = \"pypi\";", "originalCommit": "5a97328d093fd78433f68338c23245fa49c0018d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzOTk2Mw==", "url": "https://github.com/artipie/artipie/pull/566#discussion_r486839963", "bodyText": "@olenagerasimova we may wrap only the code in opt.map(...) with AsyncResponse and also return RsWithStatus without wrapping it into CompletableFuture in .orElse(...). This will simplify code a little bit", "author": "olegmoz", "createdAt": "2020-09-11T07:54:59Z", "path": "src/main/java/com/artipie/api/artifactory/GetPermissionSlice.java", "diffHunk": "@@ -65,12 +70,27 @@ public GetPermissionSlice(final Settings settings) {\n     public Response response(final String line, final Iterable<Map.Entry<String, String>> headers,\n         final Publisher<ByteBuffer> body) {\n         final Optional<String> opt = new FromRqLine(line, FromRqLine.RqPattern.REPO).get();\n-        return opt.<Response>map(\n-            repo -> new AsyncResponse(\n-                new RepoPermissions.FromSettings(this.settings).permissions(repo)\n-                    .thenApply(map -> new RsJson(GetPermissionSlice.response(map, repo)))\n-            )\n-        ).orElse(new RsWithStatus(RsStatus.BAD_REQUEST));\n+        return new AsyncResponse(\n+            opt.map(\n+                repo -> new Unchecked<>(this.settings::storage).value()\n+                    .exists(new Key.From(String.format(\"%s.yaml\", repo))).thenCompose(\n+                        exists -> {\n+                            final CompletionStage<Response> res;\n+                            if (exists) {\n+                                res = new RepoPermissions.FromSettings(this.settings)\n+                                    .permissions(repo).thenApply(\n+                                        perms -> new RsJson(\n+                                            GetPermissionSlice.response(perms, repo)\n+                                        )\n+                                    );\n+                            } else {\n+                                res = CompletableFuture.completedStage(StandardRs.NOT_FOUND);\n+                            }\n+                            return res;\n+                        }\n+                    )\n+            ).orElse(CompletableFuture.completedFuture(new RsWithStatus(RsStatus.BAD_REQUEST)))\n+        );", "originalCommit": "5a97328d093fd78433f68338c23245fa49c0018d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e84c23f62f074d72b3d9ab9ea705e4a6dca07955", "url": "https://github.com/artipie/artipie/commit/e84c23f62f074d72b3d9ab9ea705e4a6dca07955", "message": "#565 - CR", "committedDate": "2020-09-11T08:40:19Z", "type": "commit"}]}