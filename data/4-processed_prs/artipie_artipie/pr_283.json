{"pr_number": 283, "pr_title": "#231 - Reporting unauthorized responses in ResponseMetricsSlice", "pr_createdAt": "2020-07-08T07:43:52Z", "pr_url": "https://github.com/artipie/artipie/pull/283", "timeline": [{"oid": "148f6b43917218232530037b721ccc0333ca94a6", "url": "https://github.com/artipie/artipie/commit/148f6b43917218232530037b721ccc0333ca94a6", "message": "#231 - Reporting unauthorized responses in ResponseMetricsSlice", "committedDate": "2020-07-08T11:11:10Z", "type": "forcePushed"}, {"oid": "0a3c609c8dbb91a846bd055988224d80d1825f52", "url": "https://github.com/artipie/artipie/commit/0a3c609c8dbb91a846bd055988224d80d1825f52", "message": "#231 - Reporting unauthorized responses in ResponseMetricsSlice", "committedDate": "2020-07-08T12:07:40Z", "type": "forcePushed"}, {"oid": "0a3c609c8dbb91a846bd055988224d80d1825f52", "url": "https://github.com/artipie/artipie/commit/0a3c609c8dbb91a846bd055988224d80d1825f52", "message": "#231 - Reporting unauthorized responses in ResponseMetricsSlice", "committedDate": "2020-07-08T12:07:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5ODgwNg==", "url": "https://github.com/artipie/artipie/pull/283#discussion_r451498806", "bodyText": "@olegmoz what do you think that we extract this check to a new method RsStatus.isError() or to some wrapper class to avoid code duplication through the codebase.", "author": "Vatavuk", "createdAt": "2020-07-08T12:16:51Z", "path": "src/main/java/com/artipie/ResponseMetricsSlice.java", "diffHunk": "@@ -87,16 +89,41 @@ public Response response(\n      * Report response to metrics.\n      *\n      * @param rqline Request line.\n+     * @param rqheaders Request headers.\n      * @param rsstatus Response status.\n      */\n-    private void report(final String rqline, final RsStatus rsstatus) {\n+    private void report(\n+        final String rqline,\n+        final Iterable<Map.Entry<String, String>> rqheaders,\n+        final RsStatus rsstatus\n+    ) {\n         if (rsstatus.code().matches(\"^[45].+$\")) {", "originalCommit": "0a3c609c8dbb91a846bd055988224d80d1825f52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUxMTE4OQ==", "url": "https://github.com/artipie/artipie/pull/283#discussion_r451511189", "bodyText": "@Vatavuk nice idea, added an issue to add such method to RsStatus and a puzzle to use it here", "author": "olegmoz", "createdAt": "2020-07-08T12:37:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5ODgwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUwMTgxNw==", "url": "https://github.com/artipie/artipie/pull/283#discussion_r451501817", "bodyText": "@olegmoz how about creating new RqHeaders(rqheaders).contains(header) ? This would be more readable", "author": "Vatavuk", "createdAt": "2020-07-08T12:20:48Z", "path": "src/main/java/com/artipie/ResponseMetricsSlice.java", "diffHunk": "@@ -87,16 +89,41 @@ public Response response(\n      * Report response to metrics.\n      *\n      * @param rqline Request line.\n+     * @param rqheaders Request headers.\n      * @param rsstatus Response status.\n      */\n-    private void report(final String rqline, final RsStatus rsstatus) {\n+    private void report(\n+        final String rqline,\n+        final Iterable<Map.Entry<String, String>> rqheaders,\n+        final RsStatus rsstatus\n+    ) {\n         if (rsstatus.code().matches(\"^[45].+$\")) {\n             this.report(rqline, \"error\");\n+            if (rsstatus.equals(RsStatus.UNAUTHORIZED)) {\n+                this.reportUnauthorized(rqline, rqheaders);\n+            }\n         } else {\n             this.report(rqline, \"success\");\n         }\n     }\n \n+    /**\n+     * Report unauthorized response to metrics.\n+     *\n+     * @param rqline Request line.\n+     * @param rqheaders Request headers.\n+     */\n+    private void reportUnauthorized(\n+        final String rqline,\n+        final Iterable<Map.Entry<String, String>> rqheaders\n+    ) {\n+        if (new RqHeaders(rqheaders, Authorization.NAME).isEmpty()) {", "originalCommit": "0a3c609c8dbb91a846bd055988224d80d1825f52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUxMjEyMg==", "url": "https://github.com/artipie/artipie/pull/283#discussion_r451512122", "bodyText": "@Vatavuk do not think that it simplifies code significantly. Plus we usually need to read header value, not just see if it is there.", "author": "olegmoz", "createdAt": "2020-07-08T12:38:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUwMTgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU2MzkwNQ==", "url": "https://github.com/artipie/artipie/pull/283#discussion_r451563905", "bodyText": "@olegmoz the if statement is not readable, I still believe it would be better to have this l inside RqHeaders, but you can instead extract it to a private method", "author": "Vatavuk", "createdAt": "2020-07-08T13:56:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUwMTgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMDczOA==", "url": "https://github.com/artipie/artipie/pull/283#discussion_r451600738", "bodyText": "@Vatavuk I agree that it is not ideal, but extracting a method for single line feels like an overkill", "author": "olegmoz", "createdAt": "2020-07-08T14:44:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUwMTgxNw=="}], "type": "inlineReview"}, {"oid": "9a220f0314bb1464bb37783f780f0c0554db3dc0", "url": "https://github.com/artipie/artipie/commit/9a220f0314bb1464bb37783f780f0c0554db3dc0", "message": "#231 - Changes by review", "committedDate": "2020-07-08T12:39:59Z", "type": "commit"}]}