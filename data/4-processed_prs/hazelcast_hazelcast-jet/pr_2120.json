{"pr_number": 2120, "pr_title": "Add job-level serializer & addClass/addPackage docs", "pr_createdAt": "2020-03-31T07:29:01Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2120", "timeline": [{"oid": "5c94c8f82b185c609c0754a96259092d2f511123", "url": "https://github.com/hazelcast/hazelcast-jet/commit/5c94c8f82b185c609c0754a96259092d2f511123", "message": "Add job-level serializer & addClass/addPackage docs", "committedDate": "2020-03-31T07:27:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1Njc5NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2120#discussion_r400756794", "bodyText": "wouldn't it be better to mention this earlier in the document? It kind of contradicts the previous section which states all classes must be present on classpath. It must be made into a coherent overall story.", "author": "cangencer", "createdAt": "2020-03-31T09:08:10Z", "path": "site/docs/api/serialization.md", "diffHunk": "@@ -294,3 +294,28 @@ hazelcast:\n All the classes - data types, serializers & hooks - should be present\n on the server classpath, ideally in server's `lib` directory packaged as\n a jar file.\n+\n+### Job-level Serializers", "originalCommit": "5c94c8f82b185c609c0754a96259092d2f511123", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "712e13ebe7ec4a8671a315b118838641366d47f4", "url": "https://github.com/hazelcast/hazelcast-jet/commit/712e13ebe7ec4a8671a315b118838641366d47f4", "message": "Improving serialization docs", "committedDate": "2020-03-31T11:44:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MTA3OA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2120#discussion_r400851078", "bodyText": "but it can still conflict with other global serializers, right?", "author": "cangencer", "createdAt": "2020-03-31T11:52:24Z", "path": "site/docs/api/serialization.md", "diffHunk": "@@ -216,44 +214,68 @@ not to mention very wasteful of memory usage.\n ### Writing Custom Serializers\n \n For best performance and simplest implementation we recommend using\n-[com.hazelcast.nio.serialization.StreamSerializer](https://docs.hazelcast.org/docs/4.0/javadoc/com/hazelcast/nio/serialization/StreamSerializer.html)\n-or\n-[com.hazelcast.nio.serialization.ByteArraySerializer](https://docs.hazelcast.org/docs/4.0/javadoc/com/hazelcast/nio/serialization/ByteArraySerializer.html).\n+[com.hazelcast.nio.serialization.StreamSerializer](https://docs.hazelcast.org/docs/4.0/javadoc/com/hazelcast/nio/serialization/StreamSerializer.html).\n \n Below you can find a sample implementation of `StreamSerializer` for\n-`Person` (mind the type id which should be unique across all serializers):\n+`Person`:\n \n ```java\n class PersonSerializer implements StreamSerializer<Person> {\n \n-        private static final int TYPE_ID = 1;\n-\n-        @Override\n-        public int getTypeId() {\n-            return TYPE_ID;\n-        }\n-\n-        @Override\n-        public void write(ObjectDataOutput out, Person person) throws IOException {\n-            out.writeUTF(person.firstName);\n-            out.writeUTF(person.lastName);\n-            out.writeInt(person.age);\n-            out.writeFloat(person.height);\n-        }\n-\n-        @Override\n-        public Person read(ObjectDataInput in) throws IOException {\n-            return new Person(in.readUTF(), in.readUTF(), in.readInt(), in.readFloat());\n-        }\n+    private static final int TYPE_ID = 1;\n+\n+    @Override\n+    public int getTypeId() {\n+        return TYPE_ID;\n+    }\n+\n+    @Override\n+    public void write(ObjectDataOutput out, Person person) throws IOException {\n+        out.writeUTF(person.firstName);\n+        out.writeUTF(person.lastName);\n+        out.writeInt(person.age);\n+        out.writeFloat(person.height);\n     }\n+\n+    @Override\n+    public Person read(ObjectDataInput in) throws IOException {\n+        return new Person(in.readUTF(), in.readUTF(), in.readInt(), in.readFloat());\n+    }\n+}\n ```\n \n-Then the serializer should be registered with Jet up front on cluster\n-startup. The best way to do is to create a `SerializerHook` which can\n-automatically be registered on startup:\n+#### Registering serializer for the job\n+\n+One way of registering a custom serializer is to do that on a job\n+level. Assuming both, value and serializer classes are already added to\n+the [classpath](submitting-jobs.md), you can simply:\n+\n+```java\n+new JobConfig()\n+    .registerSerializer(Person.class, PersonSerializer.class)\n+```\n+\n+Such serializer is scoped - the type id does not have to be globally", "originalCommit": "712e13ebe7ec4a8671a315b118838641366d47f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MTU0OA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2120#discussion_r400851548", "bodyText": "we should mention this is required for supporting querying, projections and so on.", "author": "cangencer", "createdAt": "2020-03-31T11:53:18Z", "path": "site/docs/api/serialization.md", "diffHunk": "@@ -292,5 +314,8 @@ hazelcast:\n ```\n \n All the classes - data types, serializers & hooks - should be present\n-on the server classpath, ideally in server's `lib` directory packaged as\n-a jar file.\n+on the cluster classpath, ideally in server's `lib` directory packaged as\n+a jar file. Moreover, used type ids have to be unique across all\n+serializers.\n+Despite those limitations cluster level serializers offer\n+full support for IMDG [sources and sinks](sources-sinks.md).", "originalCommit": "712e13ebe7ec4a8671a315b118838641366d47f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d95e384aeb4ba5a05fa735259bb9938a96f03835", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d95e384aeb4ba5a05fa735259bb9938a96f03835", "message": "Improving serialization docs", "committedDate": "2020-03-31T12:34:14Z", "type": "commit"}, {"oid": "056e553d804db6f46bbf6185cb9c7c127ebd34d0", "url": "https://github.com/hazelcast/hazelcast-jet/commit/056e553d804db6f46bbf6185cb9c7c127ebd34d0", "message": "Improving serialization docs", "committedDate": "2020-03-31T12:58:45Z", "type": "commit"}, {"oid": "6a1fbe6d56cbbdb4eb8682878cdd38f7e5060a40", "url": "https://github.com/hazelcast/hazelcast-jet/commit/6a1fbe6d56cbbdb4eb8682878cdd38f7e5060a40", "message": "Improving serialization docs", "committedDate": "2020-03-31T15:53:32Z", "type": "commit"}, {"oid": "7129a907dac3990f5d64aaaee8387b21803a87c6", "url": "https://github.com/hazelcast/hazelcast-jet/commit/7129a907dac3990f5d64aaaee8387b21803a87c6", "message": "Improving serialization docs", "committedDate": "2020-03-31T15:54:15Z", "type": "commit"}]}