{"pr_number": 2218, "pr_title": "[011] Json File Source", "pr_createdAt": "2020-04-27T13:57:39Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2218", "timeline": [{"oid": "1b13e85b60fd06ddb65eea7ffe5aacf8af1a9511", "url": "https://github.com/hazelcast/hazelcast-jet/commit/1b13e85b60fd06ddb65eea7ffe5aacf8af1a9511", "message": "resolve conflicts", "committedDate": "2020-04-30T08:52:52Z", "type": "forcePushed"}, {"oid": "a3b3d6c8f9bcc7143f1ca040c7f481dcdb660441", "url": "https://github.com/hazelcast/hazelcast-jet/commit/a3b3d6c8f9bcc7143f1ca040c7f481dcdb660441", "message": "add jackson-jr-all as a shaded library\nadd option to create FileSource for json files with object mapping", "committedDate": "2020-04-30T08:54:14Z", "type": "commit"}, {"oid": "aef4efefeb94ee4af6f7b50b8c6804b09064a56a", "url": "https://github.com/hazelcast/hazelcast-jet/commit/aef4efefeb94ee4af6f7b50b8c6804b09064a56a", "message": "add Nonnull tag", "committedDate": "2020-04-30T08:54:15Z", "type": "commit"}, {"oid": "3c76e9562eb2393b583b0a220f76b4b4779cb9b9", "url": "https://github.com/hazelcast/hazelcast-jet/commit/3c76e9562eb2393b583b0a220f76b4b4779cb9b9", "message": "remove StreamJsonParser use ValueIterator instead", "committedDate": "2020-04-30T08:55:43Z", "type": "commit"}, {"oid": "23ddc88a126fb40172db16e441fa97b998ffc868", "url": "https://github.com/hazelcast/hazelcast-jet/commit/23ddc88a126fb40172db16e441fa97b998ffc868", "message": "add parseToMap option to JsonUtil", "committedDate": "2020-04-30T08:57:28Z", "type": "commit"}, {"oid": "23ddc88a126fb40172db16e441fa97b998ffc868", "url": "https://github.com/hazelcast/hazelcast-jet/commit/23ddc88a126fb40172db16e441fa97b998ffc868", "message": "add parseToMap option to JsonUtil", "committedDate": "2020-04-30T08:57:28Z", "type": "forcePushed"}, {"oid": "55b86ada6a0c88660cebe4724c19dc97ec979490", "url": "https://github.com/hazelcast/hazelcast-jet/commit/55b86ada6a0c88660cebe4724c19dc97ec979490", "message": "add jackson-jr to NOTICE", "committedDate": "2020-04-30T09:01:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyMDQwMA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2218#discussion_r417820400", "bodyText": "This is problematic, because it will re-parse the JSON string every time you fetch one key-value pair from it. Now that I have used Jackson jr a bit too, I think that we don't actually need these methods (I mean all methods that return primitives, arrays, lists, sub-maps), it's would be enough to keep the one that returns the full map. Sorry for having lead you in the wrong direction initially.", "author": "jbartok", "createdAt": "2020-04-30T07:49:07Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/json/JsonUtil.java", "diffHunk": "@@ -28,14 +32,67 @@ private JsonUtil() {\n     /**\n      * Converts a JSON string to a object of given type.\n      */\n-    public static <T> T map(Class<T> type, String jsonString) {\n+    public static <T> T parse(Class<T> type, String jsonString) {\n         return uncheckCall(() -> JSON.std.beanFrom(type, jsonString));\n     }\n \n+    /**\n+     * Converts a JSON string to a {@link Map}.\n+     */\n+    public static Map<String, Object> parse(String jsonString) {\n+        return uncheckCall(() -> JSON.std.with(Feature.READ_ONLY).mapFrom(jsonString));\n+    }\n+\n+    /**\n+     * Extracts a string value from given JSON string.\n+     */\n+    public static String getString(String jsonString, String key) {\n+        return (String) parse(jsonString).get(key);", "originalCommit": "7b2759ec3c4be6242e52671363399c96c98deef2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMTg2Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2218#discussion_r419901866", "bodyText": "yes you are right but if a user wants only a single field from a json string these may come handy, saves you a lot of boilerplate code and type casting. Maybe we should mention that each call will parse the json again.", "author": "gurbuzali", "createdAt": "2020-05-05T07:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyMDQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU4Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2218#discussion_r419912582", "bodyText": "Makes sense.", "author": "jbartok", "createdAt": "2020-05-05T07:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyMDQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyMzUxOA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2218#discussion_r417823518", "bodyText": "One problem I've come across when using Jackson jr is that I needed annotation support for renaming fields (for example had first_name in JSON and wanted a mapping class field name like firstName so I needed to use @JsonProperty to translate it). To use annotation support I had to use a JSON like JSON.builder().register(JacksonAnnotationExtension.std).build() as opposed to JSON.std to do the mapping. I would not be able to do the same thing with the methods provided by this utility class, as it stands right now.", "author": "jbartok", "createdAt": "2020-04-30T07:54:51Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/json/JsonUtil.java", "diffHunk": "@@ -28,14 +32,67 @@ private JsonUtil() {\n     /**\n      * Converts a JSON string to a object of given type.\n      */\n-    public static <T> T map(Class<T> type, String jsonString) {\n+    public static <T> T parse(Class<T> type, String jsonString) {", "originalCommit": "7b2759ec3c4be6242e52671363399c96c98deef2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5MDcyNw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2218#discussion_r417890727", "bodyText": "Maybe a JSON manipulation should be inside the JsonUtil class and Jackson jr not be exposed anywhere else?", "author": "jbartok", "createdAt": "2020-04-30T09:50:44Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/FileSourceBuilder.java", "diffHunk": "@@ -161,6 +168,31 @@ public FileSourceBuilder charset(@Nonnull Charset charset) {\n                 SourceProcessors.readFilesP(directory, glob, sharedFileSystem, readFileFn));\n     }\n \n+    /**\n+     * Builds a JSON file {@link BatchSource} with supplied components. The\n+     * source expects a stream of JSON objects as the content of the file.\n+     <p>\n+     * The source does not save any state to snapshot. If the job is restarted,\n+     * it will re-emit all entries.\n+     * <p>\n+     * Any {@code IOException} will cause the job to fail. The files must not\n+     * change while being read; if they do, the behavior is unspecified.\n+     * <p>\n+     * The default local parallelism for this processor is 2 (or 1 if just 1\n+     * CPU is available).\n+     *\n+     */\n+    public <T> BatchSource<T> buildJson(@Nonnull Class<T> type) {\n+        String charsetName = charset.name();\n+        return build(path -> {\n+            InputStreamReader reader = new InputStreamReader(new FileInputStream(path.toFile()), charsetName);\n+            ValueIterator<T> valueIterator = JSON.std.beanSequenceFrom(type, reader);", "originalCommit": "55b86ada6a0c88660cebe4724c19dc97ec979490", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5MTU2Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2218#discussion_r417891566", "bodyText": "Maybe use Jackson jr annotation support to get rid of all those getters & setters?", "author": "jbartok", "createdAt": "2020-04-30T09:52:15Z", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadFilesPTest.java", "diffHunk": "@@ -121,10 +148,78 @@ private Pipeline buildDag(String glob) {\n         return p;\n     }\n \n-    private void finishDirectory(File ... files) {\n+    private Pipeline pipelineJson() {\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(Sources.filesBuilder(directory.getPath())\n+                          .buildJson(TestPerson.class))\n+         .writeTo(Sinks.list(listJson));\n+\n+        return p;\n+    }\n+\n+    private void finishDirectory(File... files) {\n         for (File file : files) {\n             assertTrue(file.delete());\n         }\n         assertTrue(directory.delete());\n     }\n+\n+    public static class TestPerson implements Serializable {", "originalCommit": "55b86ada6a0c88660cebe4724c19dc97ec979490", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a55a8dc933ac7026ca3022aee36090ee5f695a56", "url": "https://github.com/hazelcast/hazelcast-jet/commit/a55a8dc933ac7026ca3022aee36090ee5f695a56", "message": "re-shade jackson-core, address review comments", "committedDate": "2020-05-05T13:28:24Z", "type": "commit"}, {"oid": "540b61cd9ced24bcfcc8365e57c91faf62ab7525", "url": "https://github.com/hazelcast/hazelcast-jet/commit/540b61cd9ced24bcfcc8365e57c91faf62ab7525", "message": "check availability of jackson-annotations", "committedDate": "2020-05-05T13:51:41Z", "type": "commit"}, {"oid": "5f7282c11dcca20f0155e602d8cc152cc948b77d", "url": "https://github.com/hazelcast/hazelcast-jet/commit/5f7282c11dcca20f0155e602d8cc152cc948b77d", "message": "fix test", "committedDate": "2020-05-06T10:32:38Z", "type": "commit"}]}