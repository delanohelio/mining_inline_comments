{"pr_number": 2117, "pr_title": "Add 2pc to fault-tolerance.md", "pr_createdAt": "2020-03-30T15:13:45Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2117", "timeline": [{"oid": "8175c1b7bcc51a2fb031e90c2069f65c8577af0a", "url": "https://github.com/hazelcast/hazelcast-jet/commit/8175c1b7bcc51a2fb031e90c2069f65c8577af0a", "message": "Fix typos by running a spellchecker", "committedDate": "2020-03-30T13:21:32Z", "type": "commit"}, {"oid": "7e15cc133ac29eef2a041488460f6920bf82aceb", "url": "https://github.com/hazelcast/hazelcast-jet/commit/7e15cc133ac29eef2a041488460f6920bf82aceb", "message": "Add 2pc to fault-tolerance.md", "committedDate": "2020-03-30T15:12:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3NDExNQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2117#discussion_r400274115", "bodyText": "a replayable source can..", "author": "cangencer", "createdAt": "2020-03-30T15:16:13Z", "path": "site/docs/architecture/fault-tolerance.md", "diffHunk": "@@ -15,18 +15,54 @@ then seamlessly continue from that point.\n \n When you configure the processing guarantee for your job as\n _exactly-once_ or _at-least-once_, Hazelcast Jet uses the distributed\n-snapshotting feature to store all the internal computation state to an\n-`IMap`. However, this on its own isn't enough to provide the processing\n-guarantee because the snapshot must cover the entire pipeline, from\n-source to sink. Hazelcast Jet requires certain guarantees from the\n-systems used as sources and sinks in a fault-tolerant data pipeline.\n+snapshotting feature to store all the **internal** computation state to\n+an `IMap`. However, this on its own isn't enough to provide the\n+processing guarantee because the snapshot must cover the entire\n+pipeline, including the external changes performed by sources and sinks.\n+Hazelcast Jet requires certain guarantees from sources and sinks in a\n+fault-tolerant data pipeline.\n \n When the job is restarting after a node failure, Jet resets the whole\n-data pipeline to the state of the last snapshot. For the source this\n-means rewinding back to the point of snapshot, ready to replay the items\n-it already emitted in he previous (failed) job run. For the sink it's\n-usually enough to support idempotence: when Jet's sink connector asks it\n-to apply the same data again, it must simply stay in the same state.\n+data pipeline to the state of the last snapshot. More technically,\n+processors can save arbitrary data to the snapshot and Jet will present\n+that same data to the processors after a restart. Jet performs such\n+snapshots in regular intervals. Sources can cooperate with the job in\n+multiple ways:\n+\n+- **Replayable sources:** a replayable can seek to certain position and", "originalCommit": "7e15cc133ac29eef2a041488460f6920bf82aceb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2b41e486b337b162f69f2b2890f239e8e6999952", "url": "https://github.com/hazelcast/hazelcast-jet/commit/2b41e486b337b162f69f2b2890f239e8e6999952", "message": "Fix typo", "committedDate": "2020-03-30T16:01:47Z", "type": "commit"}, {"oid": "9937f8a6f79c03390d94f83450a42c36ac551303", "url": "https://github.com/hazelcast/hazelcast-jet/commit/9937f8a6f79c03390d94f83450a42c36ac551303", "message": "Merge branch 'master' into architecture-2pc", "committedDate": "2020-03-30T16:02:35Z", "type": "commit"}]}