{"pr_number": 1925, "pr_title": "Fix refman formatting & grammar", "pr_createdAt": "2020-02-04T13:01:10Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/1925", "timeline": [{"oid": "d6a631ed88a00039a294124d5b57352cd6d41803", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d6a631ed88a00039a294124d5b57352cd6d41803", "message": "Fixing reference manual formatting in couple of places.", "committedDate": "2020-02-04T13:00:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxMjM5Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374712397", "bodyText": "\"hash join\" isn't a piece of code, it shouldn't use back-ticks. Also shouldn't have the dash: a dash is used when you make one word form multiple, but in this case it's still two words, try to google for hash-join with the dash, i found no example. It could maybe be in italics.", "author": "viliam-durina", "createdAt": "2020-02-04T14:46:14Z", "path": "reference-manual/src/main/asciidoc/expert-zone/dag.adoc", "diffHunk": "@@ -321,7 +321,7 @@ include::{javasource}/expertzone/Dag.java[tag=s9]\n By default the processor receives items from all inbound edges as they\n arrive. However, there are important cases where an edge must be\n consumed in full to make the processor ready to accept data from other\n-edges. A major example is a \"`hash join`\" which enriches the data stream\n+edges. A major example is a `hash-join` which enriches the data stream", "originalCommit": "d6a631ed88a00039a294124d5b57352cd6d41803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyMjkyMA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374722920", "bodyText": "I just ran into this while re-reading the refman. As a verb, it should be \"hash-join\" but as a noun, it should be \"hash join\".", "author": "mtopolnik", "createdAt": "2020-02-04T15:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxMjM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczNjcwMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374736703", "bodyText": "\ud83e\udd14 there are 22 occurrences of hash-joins in the reference manual while only 3 hash joins... should I edit all of them?", "author": "gierlachg", "createdAt": "2020-02-04T15:22:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxMjM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MTI2Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374741262", "bodyText": "I just saw your comment @mtopolnik, let me go through the usages then", "author": "gierlachg", "createdAt": "2020-02-04T15:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxMjM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1NjM3MA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374756370", "bodyText": "Went through all of them, does it make more sense now?", "author": "gierlachg", "createdAt": "2020-02-04T15:52:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxMjM5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxNDU5MQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374714591", "bodyText": "I guess this doesn't look great rendered. Also, plural shouldn't use apostrophe. And plural shouldn't use \"a\". I think we can go with a singular and also add () to indicate it's a method:\nfor a `groupingKey()`.", "author": "viliam-durina", "createdAt": "2020-02-04T14:49:34Z", "path": "reference-manual/src/main/asciidoc/jet-concepts.adoc", "diffHunk": "@@ -576,7 +576,7 @@ maintain over a long term.\n \n ==== Caveats When Changing the Grouping Key\n \n-You can change the key-extracting function for a `groupingKey`'s, but\n+You can change the key-extracting function for a `groupingKey` 's, but", "originalCommit": "d6a631ed88a00039a294124d5b57352cd6d41803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxNjI5OA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374716298", "bodyText": "again, no dash, no code.", "author": "viliam-durina", "createdAt": "2020-02-04T14:52:18Z", "path": "reference-manual/src/main/asciidoc/pipeline-api/pipeline-api.adoc", "diffHunk": "@@ -278,7 +278,7 @@ time setting a different product on it. This will create a data race\n with the downstream stage, which may observe the same product several\n times while missing the other ones.\n \n-The safe way to perform a many-to-many hash join is to either package\n+The safe way to perform a many-to-many `hash-join` is to either package", "originalCommit": "d6a631ed88a00039a294124d5b57352cd6d41803", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyNzEzNg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374727136", "bodyText": "It should actually stay as \"class's\". Technically both are acceptable, no point in changing from one to the other and frankly class' doesn't looks so familiar to me.", "author": "mtopolnik", "createdAt": "2020-02-04T15:08:47Z", "path": "reference-manual/src/main/asciidoc/expert-zone/dag.adoc", "diffHunk": "@@ -263,7 +263,7 @@ is often significantly faster and it's safe to use on a local edge.\n On a distributed edge it is not a safe strategy in general because\n `hashCode()` 's contract does not require repeatable results across\n JVMs or even different instances of the same JVM version. If a given\n-class's Javadoc explicitly specifies the hashing function it uses, then\n+class' Javadoc explicitly specifies the hashing function it uses, then", "originalCommit": "d6a631ed88a00039a294124d5b57352cd6d41803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczOTA5NQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374739095", "bodyText": "Actually I wanted it to be consistent with other spelling members', items'...", "author": "gierlachg", "createdAt": "2020-02-04T15:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyNzEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2OTAzMQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374769031", "bodyText": "\"members\" is plural, \"class\" is singular. See https://english.stackexchange.com/q/1073/232121", "author": "viliam-durina", "createdAt": "2020-02-04T16:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyNzEzNg=="}], "type": "inlineReview"}, {"oid": "ddf485962aa72c310250fde5cb93f4fc2fb1683a", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ddf485962aa72c310250fde5cb93f4fc2fb1683a", "message": "Standardizing hash(-)joins.", "committedDate": "2020-02-04T15:52:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2MTg2NQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374761865", "bodyText": "This should be the other way:\n<<hash-join, Hash join>>", "author": "viliam-durina", "createdAt": "2020-02-04T16:00:42Z", "path": "reference-manual/src/main/asciidoc/pipeline-api/pipeline-api.adoc", "diffHunk": "@@ -196,7 +196,7 @@ enrichment_.\n \n Jet offers two basic techniques to enrich your data stream:\n \n-. <<hash-join, Hash-join>> the stream with one or more datasets that you\n+. <<hash join, Hash-join>> the stream with one or more datasets that you", "originalCommit": "ddf485962aa72c310250fde5cb93f4fc2fb1683a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc3NzAxNw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1925#discussion_r374777017", "bodyText": "Yes, I would broke the link... but i have left Hash-join as a verb.", "author": "gierlachg", "createdAt": "2020-02-04T16:24:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2MTg2NQ=="}], "type": "inlineReview"}, {"oid": "d4ad374cbfab02f4e3b578e295df55b22ee89e88", "url": "https://github.com/hazelcast/hazelcast-jet/commit/d4ad374cbfab02f4e3b578e295df55b22ee89e88", "message": "Another round of standardizing hash(-)joins.", "committedDate": "2020-02-04T16:23:01Z", "type": "commit"}, {"oid": "19b1b710f6397a0d8ca3e7da0d29f40db5d31b22", "url": "https://github.com/hazelcast/hazelcast-jet/commit/19b1b710f6397a0d8ca3e7da0d29f40db5d31b22", "message": "Yet another round of standardizing hash(-)joins.", "committedDate": "2020-02-04T16:33:59Z", "type": "commit"}]}