{"pr_number": 2580, "pr_title": "Hazelcast Jet 4.3 Release Blogpost ", "pr_createdAt": "2020-10-01T08:53:53Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2580", "timeline": [{"oid": "dd215a19a953c404357827c9c1728c4f813da157", "url": "https://github.com/hazelcast/hazelcast-jet/commit/dd215a19a953c404357827c9c1728c4f813da157", "message": "More content", "committedDate": "2020-10-01T14:05:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNDI4Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498634286", "bodyText": "I like, just let's also announce it to the team too.", "author": "jbartok", "createdAt": "2020-10-02T06:21:07Z", "path": "hazelcast-jet-distribution/src/root/release_notes.txt", "diffHunk": "@@ -23,6 +23,87 @@ To expand an issue number into a full GitHub link, use this template:\n \n https://github.com/hazelcast/hazelcast-jet/issues/<issue number>\n \n+\n+ADD YOUR PR ENTRY IN THIS SECTION: >>>", "originalCommit": "dd215a19a953c404357827c9c1728c4f813da157", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3MzcwOQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498673709", "bodyText": "The instructions are a part of the New PR template that I just updated.", "author": "mtopolnik", "createdAt": "2020-10-02T08:06:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNDI4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNTAzOA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498635038", "bodyText": "Considering all the comments I've received in the past about not writing bland enough documentation, I have to comment: the second part is pure bragging, no information content whatsoever. Don't get me wrong, I like it, but from what I understood, that's a bad sign!", "author": "jbartok", "createdAt": "2020-10-02T06:23:51Z", "path": "site/website/blog/2020-10-05-jet-43-is-released.md", "diffHunk": "@@ -0,0 +1,188 @@\n+---\n+title: Jet 4.3 is Released\n+author: Marko Topolnik\n+authorURL: https://twitter.com/mtopolnik\n+authorImageURL: https://pbs.twimg.com/profile_images/922726943614783488/Pb5DDGWF_400x400.jpg\n+---\n+\n+Today we're releasing Hazelcast Jet 4.3, our fourth release in 2020!", "originalCommit": "dd215a19a953c404357827c9c1728c4f813da157", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3NTI5Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498675297", "bodyText": "But this is a blog post, not docs :)", "author": "mtopolnik", "createdAt": "2020-10-02T08:09:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNTAzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNTI2NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498635264", "bodyText": "Maybe just say: \"... work from our student ...\", no \"made\".", "author": "jbartok", "createdAt": "2020-10-02T06:24:43Z", "path": "site/website/blog/2020-10-05-jet-43-is-released.md", "diffHunk": "@@ -0,0 +1,188 @@\n+---\n+title: Jet 4.3 is Released\n+author: Marko Topolnik\n+authorURL: https://twitter.com/mtopolnik\n+authorImageURL: https://pbs.twimg.com/profile_images/922726943614783488/Pb5DDGWF_400x400.jpg\n+---\n+\n+Today we're releasing Hazelcast Jet 4.3, our fourth release in 2020!\n+\n+We took part in Google Summer of Code that ended just a few weeks ago,\n+and this release already brings a productionized piece of work that our\n+student, [Mohamed Mandouh](https://github.com/MohamedMandouh), made:", "originalCommit": "dd215a19a953c404357827c9c1728c4f813da157", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNTUyNw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498635527", "bodyText": "Wasn't there some kind of show stopper mentioned related to this topic? Will we really continue in the near future?", "author": "jbartok", "createdAt": "2020-10-02T06:25:46Z", "path": "site/website/blog/2020-10-05-jet-43-is-released.md", "diffHunk": "@@ -0,0 +1,188 @@\n+---\n+title: Jet 4.3 is Released\n+author: Marko Topolnik\n+authorURL: https://twitter.com/mtopolnik\n+authorImageURL: https://pbs.twimg.com/profile_images/922726943614783488/Pb5DDGWF_400x400.jpg\n+---\n+\n+Today we're releasing Hazelcast Jet 4.3, our fourth release in 2020!\n+\n+We took part in Google Summer of Code that ended just a few weeks ago,\n+and this release already brings a productionized piece of work that our\n+student, [Mohamed Mandouh](https://github.com/MohamedMandouh), made:\n+distributed in-memory sorting. Mohamed's primary focus was research into\n+the feasibility of integrating RocksDB or a similar DB library as a\n+disk-based state backend for Jet's hash join, aggregation and sorting,\n+and we plan to continue with this work for some more time.", "originalCommit": "dd215a19a953c404357827c9c1728c4f813da157", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3NjExMA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498676110", "bodyText": "There's the issue of blocking on cooperative threads to be solved, a possible solution is a dedicated filesystem IO thread that concentrates all blocking ops that go to the disk.", "author": "mtopolnik", "createdAt": "2020-10-02T08:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNTUyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzODEyMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498638123", "bodyText": "Maybe be more specific about this being just a batch stage, not any stage.", "author": "jbartok", "createdAt": "2020-10-02T06:35:02Z", "path": "site/website/blog/2020-10-05-jet-43-is-released.md", "diffHunk": "@@ -0,0 +1,188 @@\n+---\n+title: Jet 4.3 is Released\n+author: Marko Topolnik\n+authorURL: https://twitter.com/mtopolnik\n+authorImageURL: https://pbs.twimg.com/profile_images/922726943614783488/Pb5DDGWF_400x400.jpg\n+---\n+\n+Today we're releasing Hazelcast Jet 4.3, our fourth release in 2020!\n+\n+We took part in Google Summer of Code that ended just a few weeks ago,\n+and this release already brings a productionized piece of work that our\n+student, [Mohamed Mandouh](https://github.com/MohamedMandouh), made:\n+distributed in-memory sorting. Mohamed's primary focus was research into\n+the feasibility of integrating RocksDB or a similar DB library as a\n+disk-based state backend for Jet's hash join, aggregation and sorting,\n+and we plan to continue with this work for some more time.\n+\n+Here are the main improvements in this release:\n+\n+## BatchStage.sort()\n+\n+As mentioned, this is the work coming out of this year's GSoC. You can\n+now sort the data coming out of a pipeline stage. For example, this", "originalCommit": "dd215a19a953c404357827c9c1728c4f813da157", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzOTIwOQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498639209", "bodyText": "This minus trick to get descending order is an unnecessary embellishment, which will just confuse and not add value. Yes, it's clever, but I would remove it.", "author": "jbartok", "createdAt": "2020-10-02T06:38:43Z", "path": "site/website/blog/2020-10-05-jet-43-is-released.md", "diffHunk": "@@ -0,0 +1,188 @@\n+---\n+title: Jet 4.3 is Released\n+author: Marko Topolnik\n+authorURL: https://twitter.com/mtopolnik\n+authorImageURL: https://pbs.twimg.com/profile_images/922726943614783488/Pb5DDGWF_400x400.jpg\n+---\n+\n+Today we're releasing Hazelcast Jet 4.3, our fourth release in 2020!\n+\n+We took part in Google Summer of Code that ended just a few weeks ago,\n+and this release already brings a productionized piece of work that our\n+student, [Mohamed Mandouh](https://github.com/MohamedMandouh), made:\n+distributed in-memory sorting. Mohamed's primary focus was research into\n+the feasibility of integrating RocksDB or a similar DB library as a\n+disk-based state backend for Jet's hash join, aggregation and sorting,\n+and we plan to continue with this work for some more time.\n+\n+Here are the main improvements in this release:\n+\n+## BatchStage.sort()\n+\n+As mentioned, this is the work coming out of this year's GSoC. You can\n+now sort the data coming out of a pipeline stage. For example, this\n+starts from an asceding sequence 0..9,999, sorts it in descending order,\n+and prints the result:\n+\n+```java\n+var pipeline = Pipeline.create();\n+var integerSequence = TestSources.items(IntStream.range(0, 10_000)\n+        .boxed().toArray(Integer[]::new));\n+pipeline.readFrom(integerSequence)\n+        .sort(ComparatorEx.comparing(i -> -i))", "originalCommit": "dd215a19a953c404357827c9c1728c4f813da157", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY3NjQ3OQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498676479", "bodyText": "Removing it means there's no sorting at all, since we started from an ascending sequence. I considered some other options, like adding a randomizing stage, but this was the simplest code to present.\nOf course, the \"legitimate\" approach is ComparatorEx.comparing(i -> i).reversed(), but that unfortunately breaks type inference and forces you to write .sort(ComparatorEx.<Integer, Integer>comparing(i -> i).reversed())\nBTW it isn't just \"clever\", it also fails for Integer.MIN_VALUE, but I think it's more appropriate than the boilerplate version.", "author": "mtopolnik", "createdAt": "2020-10-02T08:12:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzOTIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzOTU0Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498639542", "bodyText": "Maybe \"set limits on these optimizations\"?", "author": "jbartok", "createdAt": "2020-10-02T06:39:46Z", "path": "site/website/blog/2020-10-05-jet-43-is-released.md", "diffHunk": "@@ -0,0 +1,188 @@\n+---\n+title: Jet 4.3 is Released\n+author: Marko Topolnik\n+authorURL: https://twitter.com/mtopolnik\n+authorImageURL: https://pbs.twimg.com/profile_images/922726943614783488/Pb5DDGWF_400x400.jpg\n+---\n+\n+Today we're releasing Hazelcast Jet 4.3, our fourth release in 2020!\n+\n+We took part in Google Summer of Code that ended just a few weeks ago,\n+and this release already brings a productionized piece of work that our\n+student, [Mohamed Mandouh](https://github.com/MohamedMandouh), made:\n+distributed in-memory sorting. Mohamed's primary focus was research into\n+the feasibility of integrating RocksDB or a similar DB library as a\n+disk-based state backend for Jet's hash join, aggregation and sorting,\n+and we plan to continue with this work for some more time.\n+\n+Here are the main improvements in this release:\n+\n+## BatchStage.sort()\n+\n+As mentioned, this is the work coming out of this year's GSoC. You can\n+now sort the data coming out of a pipeline stage. For example, this\n+starts from an asceding sequence 0..9,999, sorts it in descending order,\n+and prints the result:\n+\n+```java\n+var pipeline = Pipeline.create();\n+var integerSequence = TestSources.items(IntStream.range(0, 10_000)\n+        .boxed().toArray(Integer[]::new));\n+pipeline.readFrom(integerSequence)\n+        .sort(ComparatorEx.comparing(i -> -i))\n+        .writeTo(Sinks.logger());\n+try {\n+    Jet.bootstrappedInstance().newJob(pipeline).join();\n+} finally {\n+    Jet.shutdownAll();\n+}\n+```\n+\n+Jet's current execution model allows reordering, e.g., when maximizing\n+parallel throughput in stateless transform stages, which means you may\n+easily lose the sort order. In the next release we'll add the ability to\n+put limits to these optimizations so that the ordering survives.", "originalCommit": "dd215a19a953c404357827c9c1728c4f813da157", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgzNDM1NQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2580#discussion_r498834355", "bodyText": "I love the mention of the exact work of each outside contributor!", "author": "nfrankel", "createdAt": "2020-10-02T13:50:53Z", "path": "hazelcast-jet-distribution/src/root/release_notes.txt", "diffHunk": "@@ -23,6 +23,87 @@ To expand an issue number into a full GitHub link, use this template:\n \n https://github.com/hazelcast/hazelcast-jet/issues/<issue number>\n \n+\n+ADD YOUR PR ENTRY IN THIS SECTION: >>>\n+\n+Members of the open source community that appear in these release notes:\n+\n+Thank you for your valuable contributions!\n+\n+1. New Features\n+\n+2. Enhancements\n+\n+3. Fixes\n+\n+4. Breaking Changes\n+\n+<<< END PR SECTION\n+\n+\n+** Hazelcast Jet 4.3 **\n+\n+Members of the open source community that appear in these release notes:\n+\n+@caioguedes\n+@guenter-hesse\n+@MohamedMandouh\n+\n+Thank you for your valuable contributions!\n+\n+1. New Features\n+\n+[pipeline-api] [014] @MohamedMandouh implemented distributed sorting: `BatchStage.sort()`", "originalCommit": "acc70414cfbda37f655c71a82060b5a1100da637", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e03ce6fb28437a3234c60ae70d427f30627ff0d5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/e03ce6fb28437a3234c60ae70d427f30627ff0d5", "message": "4.3 Release Blogpost", "committedDate": "2020-10-19T11:05:56Z", "type": "forcePushed"}, {"oid": "3169b2ad0711282a593b67a81dd4a30e4fd39025", "url": "https://github.com/hazelcast/hazelcast-jet/commit/3169b2ad0711282a593b67a81dd4a30e4fd39025", "message": "4.3 Release Blogpost", "committedDate": "2020-10-23T12:40:02Z", "type": "commit"}, {"oid": "3169b2ad0711282a593b67a81dd4a30e4fd39025", "url": "https://github.com/hazelcast/hazelcast-jet/commit/3169b2ad0711282a593b67a81dd4a30e4fd39025", "message": "4.3 Release Blogpost", "committedDate": "2020-10-23T12:40:02Z", "type": "forcePushed"}]}