{"pr_number": 2716, "pr_title": "Improve test coverage for file format of file data ingestion", "pr_createdAt": "2020-11-26T11:21:35Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2716", "timeline": [{"oid": "903a425e48fe3014d61e66e796fbce0365f47092", "url": "https://github.com/hazelcast/hazelcast-jet/commit/903a425e48fe3014d61e66e796fbce0365f47092", "message": "Improve test coverage for file format of file data ingestion", "committedDate": "2020-11-26T11:41:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjExMDQ2NA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2716#discussion_r536110464", "bodyText": "Better:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // we need to used read object to fail the job\n          \n          \n            \n            The type of the objects in the pipeline is not enforced at runtime. Adding a mapping step causes explicit cast, resulting in a failed job.", "author": "frant-hartm", "createdAt": "2020-12-04T13:46:45Z", "path": "extensions/hadoop/src/test/java/com/hazelcast/jet/hadoop/file/ParquetFileFormatTest.java", "diffHunk": "@@ -53,11 +62,73 @@ public void shouldReadParquetFile() throws Exception {\n         );\n     }\n \n+    @Test\n+    public void shouldReadEmptyParquetFile() throws Exception {\n+        createEmptyParquetFile();\n+\n+        FileSourceBuilder<User> source = FileSources.files(currentDir + \"/target/parquet\")\n+                                                    .glob(\"file-empty.parquet\")\n+                                                    .format(FileFormat.parquet());\n+\n+        assertItemsInSource(source, items -> assertThat(items).isEmpty());\n+    }\n+\n+    @Test\n+    public void shouldThrowWhenInvalidFileType() throws Exception {\n+        FileSourceBuilder<SpecificUser> source = FileSources.files(currentDir + \"/src/test/resources\")\n+                                                            .glob(\"invalid-data.png\")\n+                                                            .format(FileFormat.parquet());\n+\n+        assertJobFailed(source, RuntimeException.class, \"is not a Parquet file\");\n+    }\n+\n+    @Test\n+    public void shouldThrowWhenIncorrectSchema() throws Exception {\n+        createParquetFile();\n+\n+        FileSourceBuilder<IncorrectUser> source = FileSources.files(currentDir + \"/target/parquet\")\n+                                                             .glob(\"file.parquet\")\n+                                                             .format(FileFormat.parquet());\n+\n+        if (useHadoop) {\n+            source.useHadoopForLocalFiles(true);\n+        }\n+\n+        Pipeline p = Pipeline.create();\n+\n+        // we need to used read object to fail the job", "originalCommit": "903a425e48fe3014d61e66e796fbce0365f47092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "da1b9f309d48bf95c41cb2e76c386f980970272f", "url": "https://github.com/hazelcast/hazelcast-jet/commit/da1b9f309d48bf95c41cb2e76c386f980970272f", "message": "Improve test coverage for file format of file data ingestion", "committedDate": "2020-12-04T14:11:21Z", "type": "forcePushed"}, {"oid": "7983d9e8648606aa7a182314ba3d3ad9cc72d298", "url": "https://github.com/hazelcast/hazelcast-jet/commit/7983d9e8648606aa7a182314ba3d3ad9cc72d298", "message": "Improve test coverage for file format of file data ingestion", "committedDate": "2020-12-09T11:34:40Z", "type": "commit"}, {"oid": "7983d9e8648606aa7a182314ba3d3ad9cc72d298", "url": "https://github.com/hazelcast/hazelcast-jet/commit/7983d9e8648606aa7a182314ba3d3ad9cc72d298", "message": "Improve test coverage for file format of file data ingestion", "committedDate": "2020-12-09T11:34:40Z", "type": "forcePushed"}]}