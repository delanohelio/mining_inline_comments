{"pr_number": 2013, "pr_title": "Unify various trade sources, extract in separate module", "pr_createdAt": "2020-02-26T09:59:54Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2013", "timeline": [{"oid": "e9d0b5f86a51a479f1dfee4fe632418dd48c3492", "url": "https://github.com/hazelcast/hazelcast-jet/commit/e9d0b5f86a51a479f1dfee4fe632418dd48c3492", "message": "Unify various trade sources, extract in separate module", "committedDate": "2020-02-25T10:47:39Z", "type": "commit"}, {"oid": "bb3c3fe0d430c5d44e01fceda19af6e54c215a4a", "url": "https://github.com/hazelcast/hazelcast-jet/commit/bb3c3fe0d430c5d44e01fceda19af6e54c215a4a", "message": "Fix minor issue", "committedDate": "2020-02-26T10:05:14Z", "type": "commit"}, {"oid": "c6dce0165ee8183739751557ea225368f8710a82", "url": "https://github.com/hazelcast/hazelcast-jet/commit/c6dce0165ee8183739751557ea225368f8710a82", "message": "Fix checkstyle problems", "committedDate": "2020-02-26T11:46:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2MDk4Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2013#discussion_r385060986", "bodyText": "Is the change in the logic intended ?", "author": "eminn", "createdAt": "2020-02-27T11:11:25Z", "path": "examples/early-window-results/src/main/java/com/hazelcast/jet/examples/earlyresults/TradingVolumeOverTime.java", "diffHunk": "@@ -53,17 +53,18 @@\n \n     private static final String VOLUME_LIST_NAME = \"trading-volume\";\n     private static final int TRADES_PER_SEC = 3_000;\n+    private static final int MAX_LAG = 5000;\n     private static final int DURATION_SECONDS = 60;\n \n     private static Pipeline buildPipeline() {\n         Pipeline p = Pipeline.create();\n-        p.readFrom(TradeGenerator.tradeSource(TRADES_PER_SEC, DURATION_SECONDS))\n-         .withNativeTimestamps(TradeGenerator.MAX_LAG)\n+        p.readFrom(TradeGenerator.tradeSource(1, TRADES_PER_SEC, MAX_LAG, DURATION_SECONDS))\n+         .withNativeTimestamps(MAX_LAG)\n          .window(tumbling(SECONDS.toMillis(2))\n                  // comment out this line to see how the chart behaves without early results:\n                  .setEarlyResultsPeriod(20)\n          )\n-         .aggregate(summingLong(trade -> trade.getQuantity() * trade.getPrice()))", "originalCommit": "c6dce0165ee8183739751557ea225368f8710a82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3NzgxOA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2013#discussion_r385077818", "bodyText": "Yes. Since the original TradeGenerators emitted different kinds of trades I had to modify the examples to show the same TYPE of behaviour as before, even when moved to the new, common generator.", "author": "jbartok", "createdAt": "2020-02-27T11:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2MDk4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2MTY5Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2013#discussion_r385061692", "bodyText": "same here ?", "author": "eminn", "createdAt": "2020-02-27T11:12:49Z", "path": "examples/rolling-aggregation/src/main/java/com/hazelcast/jet/examples/rollingaggregation/TradingVolume.java", "diffHunk": "@@ -18,34 +18,36 @@\n \n import com.hazelcast.jet.Jet;\n import com.hazelcast.jet.JetInstance;\n+import com.hazelcast.jet.examples.tradesource.Trade;\n import com.hazelcast.jet.pipeline.Pipeline;\n import com.hazelcast.jet.pipeline.Sinks;\n \n import static com.hazelcast.jet.aggregate.AggregateOperations.summingLong;\n-import static com.hazelcast.jet.examples.rollingaggregation.TradeGenerator.tradeSource;\n+import static com.hazelcast.jet.examples.tradesource.TradeGenerator.tradeSource;\n \n /**\n  * Showcases the Rolling Aggregation operator of the Pipeline API.\n  * <p>\n  * The sample Jet pipeline uses a mock data source that generates random\n  * trade events. It calculates for each stock the rolling sum of the amount\n- * of money that changed hands trading it (i.e., the current traded volume\n+ * of stock that changed hands trading it (i.e., the current traded volume\n  * on that stock). The sample also starts a GUI window that visualizes the\n  * rising traded volume of all stocks.\n  */\n public class TradingVolume {\n \n     private static final String VOLUME_MAP_NAME = \"volume-by-stock\";\n     private static final int TRADES_PER_SEC = 3_000;\n+    private static final int MAX_LAG = 1000;\n     private static final int NUMBER_OF_TICKERS = 20;\n     private static final int DURATION_SECONDS = 60;\n \n     private static Pipeline buildPipeline() {\n         Pipeline p = Pipeline.create();\n-        p.readFrom(tradeSource(NUMBER_OF_TICKERS, TRADES_PER_SEC, DURATION_SECONDS))\n+        p.readFrom(tradeSource(NUMBER_OF_TICKERS, TRADES_PER_SEC, MAX_LAG, DURATION_SECONDS))\n          .withoutTimestamps()\n          .groupingKey(Trade::getTicker)\n-         .rollingAggregate(summingLong(Trade::getPrice))\n+         .rollingAggregate(summingLong(Trade::getQuantity))", "originalCommit": "c6dce0165ee8183739751557ea225368f8710a82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3ODE5Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2013#discussion_r385078196", "bodyText": "Yes, same. Change done to preserve overall behaviour and GUI looks.", "author": "jbartok", "createdAt": "2020-02-27T11:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2MTY5Mg=="}], "type": "inlineReview"}]}