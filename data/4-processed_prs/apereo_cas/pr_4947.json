{"pr_number": 4947, "pr_title": "Improve MFA:Gauth: TOTP HTTP request logging", "pr_createdAt": "2020-09-25T15:27:48Z", "pr_url": "https://github.com/apereo/cas/pull/4947", "timeline": [{"oid": "9c074939d5d619ec16a18b5ecc6c503d9f067b76", "url": "https://github.com/apereo/cas/commit/9c074939d5d619ec16a18b5ecc6c503d9f067b76", "message": "mfa:gauth: Embed QRCode image in registration template\n\nAn HTTP endpoint [0] currently serves the purpose of grabbing the user's\nTOTP secret key and produce the required QR code that in turn gets\nscanned by the user's phone.\n\nA security issue arises in the Google Authenticator registration\ntemplate [1] because the aforementioned HTTP endpoint is sourced in an\n`img` tag, passing the user's secret key as a GET parameter. This poses\nan immediate threat to the confidentiality of the key.\nGET parameters get logged in proxies (e.g. Load balancers, reverse\nproxies etc), hence CAS users might be unknowingly logging these.\n\nProvide the registration template with the QR code image, base64 encode\nit and embed it using the `base64:image/png` scheme.\n\n[0]: https://github.com/apereo/cas/blob/acdc6cfd9e919e7feb54ad1ad0cbea44db88733d/support/cas-server-support-otp-mfa-core/src/main/java/org/apereo/cas/otp/web/flow/rest/OneTimeTokenQRGeneratorController.java#L28\n[1]: https://github.com/apereo/cas/blob/c839b62772078bf347c45e67bb2b51d0aa622ff0/support/cas-server-support-thymeleaf/src/main/resources/templates/casGoogleAuthenticatorRegistrationView.html#L108", "committedDate": "2020-09-25T15:34:42Z", "type": "forcePushed"}, {"oid": "98df1509fe1e359698feeb24243caaca9a508367", "url": "https://github.com/apereo/cas/commit/98df1509fe1e359698feeb24243caaca9a508367", "message": "mfa:gauth: Embed QRCode image in registration template\n\nAn HTTP endpoint [0] currently serves the purpose of grabbing the user's\nTOTP secret key and produce the required QR code that in turn gets\nscanned by the user's phone.\n\nA security issue arises in the Google Authenticator registration\ntemplate [1] because the aforementioned HTTP endpoint is sourced in an\n`img` tag, passing the user's secret key as a GET parameter. This poses\nan immediate threat to the confidentiality of the key.\nGET parameters get logged in proxies (e.g. Load balancers, reverse\nproxies etc), hence CAS users might be unknowingly logging these.\n\nProvide the registration template with the QR code image, base64 encode\nit and embed it using the `base64:image/png` scheme.\n\n[0]: https://github.com/apereo/cas/blob/acdc6cfd9e919e7feb54ad1ad0cbea44db88733d/support/cas-server-support-otp-mfa-core/src/main/java/org/apereo/cas/otp/web/flow/rest/OneTimeTokenQRGeneratorController.java#L28\n[1]: https://github.com/apereo/cas/blob/c839b62772078bf347c45e67bb2b51d0aa622ff0/support/cas-server-support-thymeleaf/src/main/resources/templates/casGoogleAuthenticatorRegistrationView.html#L108", "committedDate": "2020-09-25T15:38:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4OTA0NA==", "url": "https://github.com/apereo/cas/pull/4947#discussion_r496089044", "bodyText": "Remove \"data:image/png;base64,\" and move it over to the actual template to be consistent with other areas in CAS doing the same.", "author": "mmoayyed", "createdAt": "2020-09-28T16:41:44Z", "path": "support/cas-server-support-otp-mfa-core/src/main/java/org/apereo/cas/otp/util/QRUtils.java", "diffHunk": "@@ -66,7 +69,13 @@ public static void generateQRCode(final OutputStream stream, final String key,\n                 .filter(j -> byteMatrix.get(i, j))\n                 .forEach(j -> graphics.fillRect(i, j, 1, 1)));\n \n-        ImageIO.write(image, \"png\", stream);\n+        ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        ImageIO.write(image, \"PNG\", out);\n+        byte[] bytes = out.toByteArray();\n+\n+        String base64bytes = EncodingUtils.encodeBase64(bytes);\n+        String src = \"data:image/png;base64,\" + base64bytes;", "originalCommit": "98df1509fe1e359698feeb24243caaca9a508367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ0NDM3OQ==", "url": "https://github.com/apereo/cas/pull/4947#discussion_r502444379", "bodyText": "I've pushed a fixup to address this one", "author": "linosgian", "createdAt": "2020-10-09T13:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4OTA0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4OTM1MQ==", "url": "https://github.com/apereo/cas/pull/4947#discussion_r496089351", "bodyText": "Renaming a flow-scope variable will surely break tests. Please review and adjust.", "author": "mmoayyed", "createdAt": "2020-09-28T16:42:18Z", "path": "support/cas-server-support-otp-mfa-core/src/main/java/org/apereo/cas/otp/web/flow/OneTimeTokenAccountCheckRegistrationAction.java", "diffHunk": "@@ -45,9 +48,12 @@ protected Event doExecute(final RequestContext requestContext) {\n         if (acct == null || StringUtils.isBlank(acct.getSecretKey())) {\n             val keyAccount = this.repository.create(uid);\n             val keyUri = \"otpauth://totp/\" + this.label + ':' + uid + \"?secret=\" + keyAccount.getSecretKey() + \"&issuer=\" + this.issuer;\n+            ByteArrayOutputStream QRcodeBase64 = new ByteArrayOutputStream();\n+            QRUtils.generateQRCode(QRcodeBase64, keyUri, QRUtils.WIDTH_LARGE, QRUtils.WIDTH_LARGE);\n+\n             val flowScope = requestContext.getFlowScope();\n             flowScope.put(FLOW_SCOPE_ATTR_ACCOUNT, keyAccount);\n-            flowScope.put(FLOW_SCOPE_ATTR_ACCOUNT_URI, keyUri);\n+            flowScope.put(FLOW_SCOPE_ATTR_QR_IMAGE_BASE64, QRcodeBase64);", "originalCommit": "98df1509fe1e359698feeb24243caaca9a508367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ0NDcxNw==", "url": "https://github.com/apereo/cas/pull/4947#discussion_r502444717", "bodyText": "Right, I've fixed the tests as well. We should be okay now", "author": "linosgian", "createdAt": "2020-10-09T13:56:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4OTM1MQ=="}], "type": "inlineReview"}, {"oid": "e114de5a5cf6bfa08219470d55aee88057f914ed", "url": "https://github.com/apereo/cas/commit/e114de5a5cf6bfa08219470d55aee88057f914ed", "message": "fixup! mfa:gauth: Embed QRCode image in registration template", "committedDate": "2020-10-09T15:42:40Z", "type": "forcePushed"}, {"oid": "e02054b0af5fa59dd1dbc680e2dbe45405e561f1", "url": "https://github.com/apereo/cas/commit/e02054b0af5fa59dd1dbc680e2dbe45405e561f1", "message": "fixup! mfa:gauth: Embed QRCode image in registration template", "committedDate": "2020-10-09T15:42:40Z", "type": "forcePushed"}, {"oid": "7ee8be94ae346f26cf1105b80a9bf4d15d717d8f", "url": "https://github.com/apereo/cas/commit/7ee8be94ae346f26cf1105b80a9bf4d15d717d8f", "message": "mfa:gauth: Embed QRCode image in registration template\n\nAn HTTP endpoint [0] currently serves the purpose of grabbing the user's\nTOTP secret key and produce the required QR code that in turn gets\nscanned by the user's phone.\n\nA security issue arises in the Google Authenticator registration\ntemplate [1] because the aforementioned HTTP endpoint is sourced in an\n`img` tag, passing the user's secret key as a GET parameter. This poses\nan immediate threat to the confidentiality of the key.\nGET parameters get logged in proxies (e.g. Load balancers, reverse\nproxies etc), hence CAS users might be unknowingly logging these.\n\nProvide the registration template with the QR code image, base64 encode\nit and embed it using the `base64:image/png` scheme.\n\n[0]: https://github.com/apereo/cas/blob/acdc6cfd9e919e7feb54ad1ad0cbea44db88733d/support/cas-server-support-otp-mfa-core/src/main/java/org/apereo/cas/otp/web/flow/rest/OneTimeTokenQRGeneratorController.java#L28\n[1]: https://github.com/apereo/cas/blob/c839b62772078bf347c45e67bb2b51d0aa622ff0/support/cas-server-support-thymeleaf/src/main/resources/templates/casGoogleAuthenticatorRegistrationView.html#L108", "committedDate": "2020-10-09T17:01:59Z", "type": "commit"}, {"oid": "fa3b7d64566441d08c3954a2bb6c7f2a43eeb10e", "url": "https://github.com/apereo/cas/commit/fa3b7d64566441d08c3954a2bb6c7f2a43eeb10e", "message": "mfa:gauth: Remove the unused QR generator endpoint\n\nSince the QR codes is now generated when the TOTP auth\nregistration template is instantiated, the `/otp/qrgen` endpoint can be\nremoved since it's unused", "committedDate": "2020-10-09T17:01:59Z", "type": "commit"}, {"oid": "fa3b7d64566441d08c3954a2bb6c7f2a43eeb10e", "url": "https://github.com/apereo/cas/commit/fa3b7d64566441d08c3954a2bb6c7f2a43eeb10e", "message": "mfa:gauth: Remove the unused QR generator endpoint\n\nSince the QR codes is now generated when the TOTP auth\nregistration template is instantiated, the `/otp/qrgen` endpoint can be\nremoved since it's unused", "committedDate": "2020-10-09T17:01:59Z", "type": "forcePushed"}]}