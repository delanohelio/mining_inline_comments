{"pr_number": 4860, "pr_title": "fix bean creation error for LDAP password sync", "pr_createdAt": "2020-05-20T05:30:51Z", "pr_url": "https://github.com/apereo/cas/pull/4860", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NDYzNg==", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428594636", "bodyText": "Small note: exception messages do no work as parameterized messages.", "author": "mmoayyed", "createdAt": "2020-05-21T11:24:43Z", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -50,21 +51,24 @@ protected void destroyInstance(final List list) {\n \n     @ConditionalOnMissingBean(name = \"ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer\")\n     @Bean\n-    @SneakyThrows\n     @Autowired\n     public AuthenticationEventExecutionPlanConfigurer ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer(\n         @Qualifier(\"ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean\")\n         final ListFactoryBean ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean) {\n-        val postProcessorList = ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject();\n         return plan -> {\n-            val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n-            ldap.stream()\n-                .filter(LdapPasswordSynchronizationProperties::isEnabled)\n-                .forEach(instance -> {\n-                    val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n-                    postProcessorList.add(postProcessor);\n-                    plan.registerAuthenticationPostProcessor(postProcessor);\n-                });\n+            try {\n+                val postProcessorList = Objects.requireNonNull(ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject());\n+                val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n+                ldap.stream()\n+                        .filter(LdapPasswordSynchronizationProperties::isEnabled)\n+                        .forEach(instance -> {\n+                            val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n+                            postProcessorList.add(postProcessor);\n+                            plan.registerAuthenticationPostProcessor(postProcessor);\n+                        });\n+            } catch (final Exception e) {\n+                throw new BeanCreationException(\"Error creating ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean: {}\", e.getMessage(), e);", "originalCommit": "047ef70f0d7957f7296eb797daf93c4e59d3bd1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NDY5NA==", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428594694", "bodyText": "Tab back 4 spaces.", "author": "mmoayyed", "createdAt": "2020-05-21T11:24:55Z", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -50,21 +51,24 @@ protected void destroyInstance(final List list) {\n \n     @ConditionalOnMissingBean(name = \"ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer\")\n     @Bean\n-    @SneakyThrows\n     @Autowired\n     public AuthenticationEventExecutionPlanConfigurer ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer(\n         @Qualifier(\"ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean\")\n         final ListFactoryBean ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean) {\n-        val postProcessorList = ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject();\n         return plan -> {\n-            val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n-            ldap.stream()\n-                .filter(LdapPasswordSynchronizationProperties::isEnabled)\n-                .forEach(instance -> {\n-                    val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n-                    postProcessorList.add(postProcessor);\n-                    plan.registerAuthenticationPostProcessor(postProcessor);\n-                });\n+            try {\n+                val postProcessorList = Objects.requireNonNull(ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject());\n+                val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n+                ldap.stream()\n+                        .filter(LdapPasswordSynchronizationProperties::isEnabled)\n+                        .forEach(instance -> {\n+                            val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n+                            postProcessorList.add(postProcessor);\n+                            plan.registerAuthenticationPostProcessor(postProcessor);\n+                        });", "originalCommit": "047ef70f0d7957f7296eb797daf93c4e59d3bd1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NTE2OQ==", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428595169", "bodyText": "Also the exception message is misleading; there is nothing that would indicate the problem might have to do with ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean, if for example, something in the constructor of LdapPasswordSynchronizationAuthenticationPostProcessor goes wrong.", "author": "mmoayyed", "createdAt": "2020-05-21T11:26:06Z", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -50,21 +51,24 @@ protected void destroyInstance(final List list) {\n \n     @ConditionalOnMissingBean(name = \"ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer\")\n     @Bean\n-    @SneakyThrows\n     @Autowired\n     public AuthenticationEventExecutionPlanConfigurer ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer(\n         @Qualifier(\"ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean\")\n         final ListFactoryBean ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean) {\n-        val postProcessorList = ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject();\n         return plan -> {\n-            val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n-            ldap.stream()\n-                .filter(LdapPasswordSynchronizationProperties::isEnabled)\n-                .forEach(instance -> {\n-                    val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n-                    postProcessorList.add(postProcessor);\n-                    plan.registerAuthenticationPostProcessor(postProcessor);\n-                });\n+            try {\n+                val postProcessorList = Objects.requireNonNull(ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean.getObject());\n+                val ldap = casProperties.getAuthn().getPasswordSync().getLdap();\n+                ldap.stream()\n+                        .filter(LdapPasswordSynchronizationProperties::isEnabled)\n+                        .forEach(instance -> {\n+                            val postProcessor = new LdapPasswordSynchronizationAuthenticationPostProcessor(instance);\n+                            postProcessorList.add(postProcessor);\n+                            plan.registerAuthenticationPostProcessor(postProcessor);\n+                        });\n+            } catch (final Exception e) {\n+                throw new BeanCreationException(\"Error creating ldapPasswordSynchronizationAuthenticationPostProcessorListFactoryBean: {}\", e.getMessage(), e);", "originalCommit": "047ef70f0d7957f7296eb797daf93c4e59d3bd1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NjA3NQ==", "url": "https://github.com/apereo/cas/pull/4860#discussion_r428596075", "bodyText": "You might want to reference ldapPasswordSynchronizationAuthenticationEventExecutionPlanConfigurer for the time being as the bean whose creation attempt has failed.", "author": "mmoayyed", "createdAt": "2020-05-21T11:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NTE2OQ=="}], "type": "inlineReview"}, {"oid": "a23ee8e7d11117a749bfdb9cd70bc46e1c422768", "url": "https://github.com/apereo/cas/commit/a23ee8e7d11117a749bfdb9cd70bc46e1c422768", "message": "fix bean creation error\n\nalso add user to AD reset password script\n\nset proxyBeanMethods to true\n\naddress feedback", "committedDate": "2020-05-21T15:14:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MjEwMA==", "url": "https://github.com/apereo/cas/pull/4860#discussion_r429652100", "bodyText": "Should be documented in the docs.", "author": "mmoayyed", "createdAt": "2020-05-24T16:16:17Z", "path": "api/cas-server-core-api-configuration-model/src/main/java/org/apereo/cas/configuration/model/core/authentication/passwordsync/PasswordSynchronizationProperties.java", "diffHunk": "@@ -23,6 +23,11 @@\n public class PasswordSynchronizationProperties implements Serializable {\n     private static final long serialVersionUID = -3878237508646993100L;\n \n+    /**\n+     * Allow password synchronization to be turned off globally.\n+     */\n+    private boolean enabled = true;\n+", "originalCommit": "7776e9c6d18412dd68d74273a93d4ea391e18696", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MjExNg==", "url": "https://github.com/apereo/cas/pull/4860#discussion_r429652116", "bodyText": "This should go to the class definition to control all beans.", "author": "mmoayyed", "createdAt": "2020-05-24T16:16:38Z", "path": "support/cas-server-support-ldap/src/main/java/org/apereo/cas/config/LdapPasswordSynchronizationConfiguration.java", "diffHunk": "@@ -33,8 +35,10 @@\n     @Autowired\n     private CasConfigurationProperties casProperties;\n \n+\n     @Bean\n     @SneakyThrows\n+    @ConditionalOnProperty(prefix = \"cas.authn.password-sync\", name = \"enabled\", havingValue = \"true\", matchIfMissing = true)", "originalCommit": "7776e9c6d18412dd68d74273a93d4ea391e18696", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "80d7f33f196e114723e42ddb4a2fc21f511358fa", "url": "https://github.com/apereo/cas/commit/80d7f33f196e114723e42ddb4a2fc21f511358fa", "message": "enable proxy bean methods to avoid bean creation error\nadd password sync enabled property\nalso add user to AD reset password script", "committedDate": "2020-05-25T00:48:06Z", "type": "commit"}, {"oid": "80d7f33f196e114723e42ddb4a2fc21f511358fa", "url": "https://github.com/apereo/cas/commit/80d7f33f196e114723e42ddb4a2fc21f511358fa", "message": "enable proxy bean methods to avoid bean creation error\nadd password sync enabled property\nalso add user to AD reset password script", "committedDate": "2020-05-25T00:48:06Z", "type": "forcePushed"}]}