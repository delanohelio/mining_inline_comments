{"pr_number": 4690, "pr_title": "Fix PM + SPNEGO supports", "pr_createdAt": "2020-02-11T08:39:39Z", "pr_url": "https://github.com/apereo/cas/pull/4690", "timeline": [{"oid": "ec92c8318cbaec66d113c49bfd476bdccac6260a", "url": "https://github.com/apereo/cas/commit/ec92c8318cbaec66d113c49bfd476bdccac6260a", "message": "Fix PM + SPNEGO supports", "committedDate": "2020-02-11T08:22:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyOTkzNw==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377529937", "bodyText": "You should try to switch this to compileOnly. Leaking the PM module statically for those who run SPNEGO who might have no use for PM is not a good idea. The reference should only be done for compile-time, by a class-name reference or you actually can order webflow configurers IIRC so one executes before the other without changes to the source code.", "author": "mmoayyed", "createdAt": "2020-02-11T09:49:30Z", "path": "support/cas-server-support-spnego-webflow/build.gradle", "diffHunk": "@@ -11,6 +11,7 @@ dependencies {\n     implementation project(\":core:cas-server-core-services-api\")\n     implementation project(\":support:cas-server-support-spnego\")\n     implementation project(\":support:cas-server-support-ldap-core\")\n+    implementation project(\":support:cas-server-support-pm-webflow\")", "originalCommit": "ec92c8318cbaec66d113c49bfd476bdccac6260a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUzMjM1Mw==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377532353", "bodyText": "In fact, the last option is probably best out of all since it will be non-maintainable to include module references in each project and cross-reference them as such to control the order. (i.e. imagine if some other module had to execute after spnego, before PM but after X and before Y. This will quickly get out of hand).\nA CasWebflowConfigurer can be ordered using the Ordered interface; We should just ensure the order is exposed somehow using a setting so that you can control the execution of the webflow configurer dynamically without changing the source code.", "author": "mmoayyed", "createdAt": "2020-02-11T09:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyOTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUzNTMwMg==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377535302", "bodyText": "I think compileOnly is not enough as it will be checked at runtime.\nIn fact, this way to do only works for the PM support and another support as the PM support is by default in the CAS server.\nBut you're right, it does not scale for other modules if one of them is not the PM.\nI will switch to the Ordered interface, it seems to be a much better solution.", "author": "leleuj", "createdAt": "2020-02-11T09:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyOTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2NDI2NA==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377564264", "bodyText": "I updated the PR accordingly...", "author": "leleuj", "createdAt": "2020-02-11T10:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyOTkzNw=="}], "type": "inlineReview"}, {"oid": "5d3964fe086cb05d8dddbc320410b78ca79e12de", "url": "https://github.com/apereo/cas/commit/5d3964fe086cb05d8dddbc320410b78ca79e12de", "message": "use getOrder()", "committedDate": "2020-02-11T10:56:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377576572", "bodyText": "This is a good start, but I think rather than hardcoding the order, you should expose the order property in CAS settings and then configure it as you wish. Hardcoding the order is more or less the same as handling the auto-configuration order in a hardcoded way.", "author": "mmoayyed", "createdAt": "2020-02-11T11:24:26Z", "path": "support/cas-server-support-pm-webflow/src/main/java/org/apereo/cas/pm/web/flow/PasswordManagementWebflowConfigurer.java", "diffHunk": "@@ -55,6 +56,7 @@ public PasswordManagementWebflowConfigurer(final FlowBuilderServices flowBuilder\n                                                final Action initPasswordChangeAction) {\n         super(flowBuilderServices, loginFlowDefinitionRegistry, applicationContext, casProperties);\n         this.initPasswordChangeAction = initPasswordChangeAction;\n+        setOrder(WebflowConfigurersOrder.PM);", "originalCommit": "5d3964fe086cb05d8dddbc320410b78ca79e12de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYwNDEyNA==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377604124", "bodyText": "I could do that, but I don't think this is something (the order configuration) we should expose. This is a technical detail  of the implementation to ensure things works properly.\nThis is the responsibility of the CAS developers to set that correctly, not the job of the CAS deployers.\nI will pretend to know CAS very well, though it took me quite some time to find out the issue, the deployers should never have to deal with that. We should have properly configured the modules order.", "author": "leleuj", "createdAt": "2020-02-11T12:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMDYxMg==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377620612", "bodyText": "I agree in concept, and that's an admirable goal but practically it's not possible to do this right 100% of the time. Some exposure is required and we have to find a middle-ground. The auto-configuration that exists today can only go so far and does a pretty good job of recreating a needed flow without really knowing anything else about its other neighboring modules but it can only do so much. At some point and for advanced use cases, a deployer would need to physically figure out the flow execution order.\nThe order property is meant to be exposed in configuration settings. It's just not done yet, because there has been no need to. We could pick sensible default values but no default value could ever address all scenarios and managing it all as the developer community is unnecessary burden coupled with the fact that we don't have the manpower or the tests to verify all different combinations of webflow modules when they are wired together in any order (also gotta remember this for any new thing we develop). So the middle-ground is, allow the auto-configuration of webflows to be configurable yet do not require it. Pick default values as cas developers to make sure things work out of the box as much as possible, and let deployers choose or modify a value if they ever have the need to, because the defaults can only go so far when you have 5 modules declared in the build and all wish to modify the webflow in some weird way. Otherwise, (and back to my earlier example), any sort of change to the webflow execution order to account for a use case or behavior would require changes to the source code, hours and weeks of diagnosis and testing, a patch release and a month's delay at best. That is not a workflow a CAS deployer might find attractive, when they could just flip a setting to change 1 to a 2.", "author": "mmoayyed", "createdAt": "2020-02-11T13:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMjQwNA==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377622404", "bodyText": "OK. I get your point. I will do that for the PM and SPNEGO modules as a starting point...", "author": "leleuj", "createdAt": "2020-02-11T13:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyNDM4Nw==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377624387", "bodyText": "Sounds wonderful. To make things easier and minimize effort, I might suggest that you only do this sort of work on master, and let 6.1 stand still as it is with your existing PR. Since the solution that is being worked out is somewhat intrusive, it's best to keep it isolated to master, and let your other PR targeting 6.1 to remain as is. Does that make sense?", "author": "mmoayyed", "createdAt": "2020-02-11T13:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzNzI1NA==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377637254", "bodyText": "On 6.1, I just fixed the typo on the webflow configurer name.\nOn the master, I exposed properties to set the webflow order for the PM and SPNEGO modules if need be.\nIs this what you have in mind?", "author": "leleuj", "createdAt": "2020-02-11T13:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzOTIxMg==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377639212", "bodyText": "Yes, exactly.\nI am probably nitpicking here but I would probably capture the webflowOrder field into a new WebflowAutoConfigurationProperties class to be used by everything else, and I would then just reference that as a nested field:\n    @NestedConfigurationProperty\n    private WebflowAutoConfigurationProperties webflow = new WebflowAutoConfigurationProperties();\nIt might be pre-mature; I am thinking we might want to reserve the spot for WebflowAutoConfigurationProperties for additional settings that might be introduced in the future but it would very well be overkill. Your call.", "author": "mmoayyed", "createdAt": "2020-02-11T13:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1NDgwMA==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377654800", "bodyText": "I was also hesitating. As you propose, I will do that.", "author": "leleuj", "createdAt": "2020-02-11T14:07:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcwODkzMg==", "url": "https://github.com/apereo/cas/pull/4690#discussion_r377708932", "bodyText": "It should be good now.", "author": "leleuj", "createdAt": "2020-02-11T15:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NjU3Mg=="}], "type": "inlineReview"}, {"oid": "5ff388a7312140a21504d1f5e7167b4d8c9d1704", "url": "https://github.com/apereo/cas/commit/5ff388a7312140a21504d1f5e7167b4d8c9d1704", "message": "make webflow order configurable and fix typo on the spnego webflow configurer name", "committedDate": "2020-02-11T13:34:02Z", "type": "commit"}, {"oid": "a498301ad47393808645d150ff6a9a0277f5d40a", "url": "https://github.com/apereo/cas/commit/a498301ad47393808645d150ff6a9a0277f5d40a", "message": "use a nested property", "committedDate": "2020-02-11T14:39:07Z", "type": "commit"}]}