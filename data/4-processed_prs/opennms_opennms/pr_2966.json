{"pr_number": 2966, "pr_title": "Nms 12588", "pr_createdAt": "2020-04-06T20:29:32Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/2966", "timeline": [{"oid": "e48528894ff858fadd74aacd97e0288b92ad67be", "url": "https://github.com/OpenNMS/opennms/commit/e48528894ff858fadd74aacd97e0288b92ad67be", "message": "doc changes\n\nXB-16 - thresholds", "committedDate": "2020-03-09T20:48:22Z", "type": "commit"}, {"oid": "f6d45f89fc68030eec555b23c895bf65e86013ea", "url": "https://github.com/OpenNMS/opennms/commit/f6d45f89fc68030eec555b23c895bf65e86013ea", "message": "Updated threshold documentation\n\nContinued work on documenting thresholding. XB-16", "committedDate": "2020-03-10T20:34:51Z", "type": "commit"}, {"oid": "6ade86978be680ca35e6f56ddffb05991eef9469", "url": "https://github.com/OpenNMS/opennms/commit/6ade86978be680ca35e6f56ddffb05991eef9469", "message": "update threshold documentation\n\nadded more documentation XB-16", "committedDate": "2020-03-10T20:37:15Z", "type": "commit"}, {"oid": "c13d1ca23b043e579ce298b446d56cc640c7fd95", "url": "https://github.com/OpenNMS/opennms/commit/c13d1ca23b043e579ce298b446d56cc640c7fd95", "message": "Adding threshold documentation\n\nXB-16", "committedDate": "2020-03-11T15:01:14Z", "type": "commit"}, {"oid": "6e7b02f56b79abfd1bd5b6406e141ed861450298", "url": "https://github.com/OpenNMS/opennms/commit/6e7b02f56b79abfd1bd5b6406e141ed861450298", "message": "Update thresholding.adoc\n\nXB-16", "committedDate": "2020-03-11T18:01:28Z", "type": "commit"}, {"oid": "b8afbbee76d3cb654528eb05b6c7c92f55467bb8", "url": "https://github.com/OpenNMS/opennms/commit/b8afbbee76d3cb654528eb05b6c7c92f55467bb8", "message": "More threshold documentation\n\nXB-16 threshold docs.", "committedDate": "2020-03-11T22:24:52Z", "type": "commit"}, {"oid": "86f6c4e7a75903a3114a59b9c5dba3067743e17c", "url": "https://github.com/OpenNMS/opennms/commit/86f6c4e7a75903a3114a59b9c5dba3067743e17c", "message": "Adding thresholding documentation\n\nNMS-12588 \"Create Threshold Documentation\"\nAdded tutorial for basic threshold. Will add more complex omes.", "committedDate": "2020-03-12T15:58:43Z", "type": "commit"}, {"oid": "1e9bef77799b31d57cbb40879ce1924ba3487d64", "url": "https://github.com/OpenNMS/opennms/commit/1e9bef77799b31d57cbb40879ce1924ba3487d64", "message": "Updated thresholding.adoc\n\nAdded more documentation for thresholds. NMS-12588", "committedDate": "2020-03-12T20:46:57Z", "type": "commit"}, {"oid": "264bf9c993c18a9c9fe6d371113d255a0ba541b4", "url": "https://github.com/OpenNMS/opennms/commit/264bf9c993c18a9c9fe6d371113d255a0ba541b4", "message": "XB-16 ONMS thresholding docs\n\nadded more thresholding documentation", "committedDate": "2020-03-16T22:07:33Z", "type": "commit"}, {"oid": "e9bdf0c1d0e7fddb4edbd73d6785f1074358c3e4", "url": "https://github.com/OpenNMS/opennms/commit/e9bdf0c1d0e7fddb4edbd73d6785f1074358c3e4", "message": "NMS-12588 threshold documentation\n\nMore updates.", "committedDate": "2020-03-17T22:44:41Z", "type": "commit"}, {"oid": "a4ce36923701355e67a8999087f8103b2c4566b8", "url": "https://github.com/OpenNMS/opennms/commit/a4ce36923701355e67a8999087f8103b2c4566b8", "message": "NMS-12588\n\nAdding a bit to the thresholding docs.", "committedDate": "2020-03-19T20:51:57Z", "type": "commit"}, {"oid": "651ff740e37b3b3797b5604cdbe57d80bca6aaff", "url": "https://github.com/OpenNMS/opennms/commit/651ff740e37b3b3797b5604cdbe57d80bca6aaff", "message": "XB-16 - thresholding documentation\n\nreformatted internal comments.", "committedDate": "2020-03-31T17:54:44Z", "type": "commit"}, {"oid": "49f2b808fbf24dab0ba766020d46e7b8556bdbc7", "url": "https://github.com/OpenNMS/opennms/commit/49f2b808fbf24dab0ba766020d46e7b8556bdbc7", "message": "NMS-12588 - threshold documentation\n\nAdded more information re: thresholding workflow, collectd, etc.", "committedDate": "2020-04-02T19:42:22Z", "type": "commit"}, {"oid": "74c6d1ea78255d955e137f335bc6e9ef7b531f70", "url": "https://github.com/OpenNMS/opennms/commit/74c6d1ea78255d955e137f335bc6e9ef7b531f70", "message": "NMS-12588 threshold documentation\n\ncontinued progress on thresholding.", "committedDate": "2020-04-02T21:53:48Z", "type": "commit"}, {"oid": "8a255057c0385c3fec3ae039253db9620d3c843e", "url": "https://github.com/OpenNMS/opennms/commit/8a255057c0385c3fec3ae039253db9620d3c843e", "message": "NMS-12588 Thresholding documents\n\nAddtional thresholding documentation.", "committedDate": "2020-04-03T21:27:41Z", "type": "commit"}, {"oid": "b99189f13ac3367f5b398eefba69a3c09fa50bca", "url": "https://github.com/OpenNMS/opennms/commit/b99189f13ac3367f5b398eefba69a3c09fa50bca", "message": "NMS-12588\n\nfixed typo", "committedDate": "2020-04-03T22:26:52Z", "type": "commit"}, {"oid": "5480e806876e47262169f3ef1c04d86103420b3b", "url": "https://github.com/OpenNMS/opennms/commit/5480e806876e47262169f3ef1c04d86103420b3b", "message": "NMS-12588- threshold docs\n\n Updated threshold docs.", "committedDate": "2020-04-06T13:46:40Z", "type": "commit"}, {"oid": "ee249bbb99bed8dbd152f33753f2f0cc0f24e3c9", "url": "https://github.com/OpenNMS/opennms/commit/ee249bbb99bed8dbd152f33753f2f0cc0f24e3c9", "message": "JIRA/NMS-12588\n\nThresholding documentation", "committedDate": "2020-04-06T20:28:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MzA0NA==", "url": "https://github.com/OpenNMS/opennms/pull/2966#discussion_r404373044", "bodyText": "TODO", "author": "j-white", "createdAt": "2020-04-06T20:38:09Z", "path": "opennms-doc/guide-admin/src/asciidoc/text/thresholds/thresholding.adoc", "diffHunk": "@@ -3,22 +3,243 @@\n :imagesdir: ../../../images\n \n [[ga-threshd-introduction]]\n-_{opennms-product-name}_ has the ability to monitor the performance of a managed entity's resource(s) by using various thresholding techniques.\n-These techniques, or algorithms, can be applied against any performance data (telemetry) that has been collected by <<ga-performance-mgmt,collectd>> or has been pushed to <<ga-telemetryd, telemetryd>>.\n-This includes, but is not limited to metrics such as: CPU Load, Bandwidth, Disk space, etc.\n+= Thresholding\n \n-There are a few basic thresholding algorithms available within OpenNMS:\n+Thresholding allows you to define limits against network performance metrics of a managed entity to trigger an event when a value goes above or below the specified limit. \n \n-* High\n-* Low\n-* Absolute Value\n-* Relative Change\n+== How Thresholding Works in {opennms-product-name} \n+\n+{opennms-product-name} uses _collectors_ to implement data collection for a particular protocol or family of protocols (SNMP, JMX, HTTP, XML/JSON, WS-Management/WinRM, JDBC, etc.).\n+You can specify configuration for a particular collector in a _collection package_: essentially the set of instructions that drives the behavior of the collector. \n+\n+The _collectd_ daemon gathers and stores performance data from these collectors. \n+This is the data against which {opennms-product-name} applies thresholds. \n+Thresholds trigger events when a specified threshold value is met. \n+You can further create notifications and alarms for threshold events. \n+\n+image::thresholding/thresholding-flow.png[thresholding, 400]\n+\n+=== What Triggers a Thresholding Event?\n+\n+_{opennms-product-name}_ uses four thresholding algorithms that trigger an event when the datasource value:\n+\n+* *Low* - equals or drops below the threshold value and re-arms when it equals or comes back up above the re-arm value (e.g., available disk space falls under the specified value)\n+* *High* - equals or exceeds the threshold value, and re-arms when it equals or drops below the re-arm value (e.g., bandwidth use exceeds the specified amount)\n+* *Absolute* - changes by the specified amount (e.g., on a fiber-optic link, a change in loss of anything greater than 3 dB is a problem regardless of what the original or final value is)\n+* *Relative* - changes by percent (e.g., available disk space changes more than 5% from the last poll)\n+\n+These thresholds can be *basic* (tested against a single value) or an *expression* (evaluated against multiple values in an expression). \n+\n+_{opennms-product-name}_ applies these algorithms against any performance data (telemetry) collected by <<ga-performance-mgmt,collectd>> or pushed to <<ga-telemetryd, telemetryd>>. \n+This includes, but is not limited to, metrics such as CPU load, bandwidth, disk space, etc. \n+\n+NOTE: The basic walkthrough focuses on how to set simple thresholds using default values in the {opennms-product-name} setup. \n+For information on setting and configuring collectors, collectd, and the  _collectd-configuration.xml_ file, see xref:performance-data-collection/introduction.adoc[Performance Management].\n+\n+[[threshold-bw]]\n+== Basic Walk-through \u2013 Thresholding\n+\n+This section describes how to create a basic threshold for a single, system-wide variable: the number of logged-in users. \n+Our threshold will tell {opennms-product-name} to create an event when the number of logged-in users on the device exceeds two, and re-arm when it falls below two. \n+\n+Before creating a threshold, you need to make sure you are collecting the metric against which you want to threshold. \n+\n+[[metric-collect]]\n+==== Determine You are Collecting Metric\n+In this case, we have chosen a metric (number of logged-in users) that is collected by default. \n+We are also using data collected via SNMP. (For information on other collectors, see xref:xref:performance-data-collection/collectors[Collectors].)\n+\n+. In the {opennms-product-name} UI, choose `Reports>Resource Graphs`.\n+. Select one of the listed resources. \n+. Under `SNMP Node Data`, select `Node-level Performance Data` and choose `Graph Selection`.\n+. Scroll to find the `Number of Users` graph. \n+.. You can click the binoculars icon to display only this graph. \n+\n+[[threshold-create]]\n+==== Create a Threshold\n+\n+. Select `<User_Name>>Configure OpenNMS` from the top-right menu. \n+. Under `Performance Measurement`, choose `Configure Thresholds`.\n+.. A screen with a list of preconfigured threshold groups appears.\n+We will work with `netsnmp`.\n+For information on how to create a threshold group, see <<threshold-group, Creating a Threshold Group>>. \n+. Click `Edit` beside the `netsnmp` group. \n+. Click `Create New Threshold` at the bottom of the `Basic Thresholds` area of the screen. \n+. Set the following information and click `Save`:\n+\n+|===\n+\n+| *Field* | *Value* | *Description*\n+\n+| Type | high | Triggers an event when the datasource value equals or exceeds the threshold value, and re-arms when it equals or drops below the re-arm value\n+\n+| Datasource | hrSystemNumUsers| Name of the datasource you want to threshold against.\n+For this tutorial, we have provided the datasource for logged-in users.  \n+\n+For information on how to determine a metric's datasource, see <<datasource-determine, Determine the Datasource>>.\n+\n+| Datasource label| leave blank | Optional text label. \n+Not required for this tutorial.\n+\n+| Value| 2 | The value above which we want to trigger an event. \n+In this case, we want to trigger an event when the number of logged-in users exceeds two. \n+\n+| Re-arm | 2 | The value below which we want the system to re-arm. \n+In this case, once the number of logged-in users falls below two. \n+\n+| Trigger | 3 | The number of consecutive times the threshold value can occur before the system triggers an event. \n+Since our default polling period is 5 minutes, a value of 3 means {opennms-product-name} would create a threshold event if there are more than 2 users for 15 minutes.\n+\n+| Description | leave blank | Optional text to describe your threshold. \n+\n+| Triggered UEI| leave blank | A custom uniform event identifier (UEI) sent into the events system when the threshold is triggered. \n+A custom UEI for each threshold makes it easier to <<threshold-notification, create notifications>>. \n+If left blank, it defaults to the standard thresholds UEIs. \n+\n+| Re-armed UEI | leave blank | A custom uniform event identifier (UEI) sent into the events system when the threshold is re-armed.\n+\n+|===\n+\n+[[threshold-test]]\n+=== Testing the Threshold\n+\n+To test the threshold we just created, log a second person into the node you are monitoring. \n+Navigate to the `Events` page.\n+You should see an event that indicates your threshold triggered when more than one user logged in. \n+\n+Log out the second user. \n+The `Events` page should indicate that the system has re-armed. \n+\n+[[thresh-cpu]]\n+=== Creating a Threshold for CPU Usage\n+This procedure describes how to create an expression-based threshold when the five-minute CPU load average metric reaches or goes above 70% for two consecutive measurement intervals.\n+Expression-based thresholds are useful when you need to threshold on a percentage, not the actual value of the data collected. \n+\n+NOTE: Expression-based thresholds work only if the data sources in question lie in the same directory.\n+\n+. Select `<User_Name>>Configure OpenNMS` from the top-right menu. \n+. Under `Performance Measurement`, choose `Configure Thresholds`.\n+. Click `Edit` beside the `netsnmp` group. \n+. Click `Create New Expression-based Threshold`. \n+. Fill in the following information:\n+\n++\n+\n+|===\n+\n+| *Field* | *Value* | *Description*\n+\n+| Type | high | Triggers an event when the datasource value equals or exceeds the threshold value, and re-arms when it equals or drops below the re-arm value\n+\n+| Expression | ((loadavg5 / 100) / CpuNumCpus) * 100| Divides the five-minute CPU load average by 100 (to obtain the effective load average^*^), which is then divided by the number of CPUs. \n+This value is then multiplied by 100 to provide a percentage. \n+\n+(* SNMP does not report in decimals, which is why the expression divides the loadavg5 by 100.) \n+\n+| Datasource type | node | The type of datasource from which you are collecting data. \n+\n+| Datasource label| leave blank | Optional text label. \n+Not required for this tutorial.\n+\n+| Value| 70 | Trigger an event when the five-minute CPU load average goes above 70%. \n+\n+| Re-arm | 50 | Re-arm the system when the five-minute CPU load average drops below 50%\n+\n+| Trigger | 2 | The number of consecutive times the threshold value can occur before the system triggers an event. \n+In this case, when the five-minute CPU load average goes above 70% for two consecutive polling periods. \n+\n+| Description | Trigger an alert when the five-minute CPU load average metric reaches or goes above 70% for two consecutive measurement intervals | Optional text to describe your threshold. \n+\n+| Triggered UEI| leave blank | See the table in xref:threshold-create[Create a Threshold] for details. \n+\n+| Re-armed UEI | leave blank | See the table in xref:threshold-create[Create a Threshold] for details. \n+\n+|===\n+\n+. Click `Save`.\n+\n+[[datasource-determine]]\n+=== Determining the Datasource\n+Creating a threshold requires the name of the datasource generating the metrics on which you want to threshold. \n+Datasource names for the SNMP protocol appear in `etc/snmp-graph.properties.d/`.\n+\n+. To determine the name of the datasource, navigate to the `Resource Graphs` screen.\n+For example,\n+.. `Reports>Resource Graphs`.\n+.. Select one of the listed resources.\n+.. Under `SNMP Node Data`, select `Node-level Performance Data` and choose `Graph Selection`.\n+. Scroll through the graphs to find the title of the graph that displays the metric on which you want to threshold. \n+For example, \"Number of Processes\" or \"System Uptime\":\n++\n+image:thresholding/thresholding/graphs.png[Thresholding graph, 200]\n+\n+. Go to `etc/snmp-graph.properties.d/` and search for the title of the graph (for example, \"System Uptime\").\n+\n+. Note the name of the datasource, and enter it in the `Datasource` field when you <<threshold-create, create your threshold>>.  \n+\n+[[threshold-group]]\n+==== Create a Threshold Group\n+A threshold group associates a set of thresholds to a service (e.g., thresholds that apply to all Cisco devices). \n+_{opennms-product-name}_ includes seven preconfigured, editable threshold groups:\n+\n+* mib2 \n+* cisco \n+* hrstorage \n+* netsnmp \n+* juniper-srx \n+* netsnmp-memory-linux \n+* netsnmp-memory-nonlinux \n+\n+You can edit an existing group (through the UI) or create a new one (in the _thresholds.xml_ file located in `$OPENNMS_HOME/etc/thresholds.xml`). \n+Once you create the group, you can then define it in the _thresholds.xml_ file or define it in the UI. \n+\n+We will create a threshold group called \"demo_group\".\n+\n+. Type the following in the _thresholds.xml_ file.\n+\n++\n+[source]\n+----\n+\n+<group name=\"demo_group\" rrdRepository=\"/opt/opennms/share/rrd/snmp/\">\n+</group>\n+\n+----\n+\n+. Once you have created the group in the _thresholds.xml_ file, switch to the UI, go to the threshold screen and click `Request a reload threshold packages configuration`.\n+\n+.. The group you created should appear in the UI.\n+\n+. Click `Edit` to edit it. \n+\n+ #TODO: add information, then show how it looks in the _thresholds.xml_ file#", "originalCommit": "ee249bbb99bed8dbd152f33753f2f0cc0f24e3c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0MzQyNg==", "url": "https://github.com/OpenNMS/opennms/pull/2966#discussion_r404443426", "bodyText": "@j-white updated.", "author": "Bonrob2", "createdAt": "2020-04-06T23:13:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MzA0NA=="}], "type": "inlineReview"}, {"oid": "035924df5e777562b2577b481cc94cd8d9fbadee", "url": "https://github.com/OpenNMS/opennms/commit/035924df5e777562b2577b481cc94cd8d9fbadee", "message": "NMS-12588 -thresholding documentation\n\nremoved TODO", "committedDate": "2020-04-06T23:13:21Z", "type": "commit"}]}