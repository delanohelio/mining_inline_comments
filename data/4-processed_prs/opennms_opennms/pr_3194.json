{"pr_number": 3194, "pr_title": "NMS-12961: \"what's new\" high-level release notes for Horizon 27", "pr_createdAt": "2020-10-21T19:30:53Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3194", "timeline": [{"oid": "333f28c699d48f74a8728c37824ccb81cdc0bd26", "url": "https://github.com/OpenNMS/opennms/commit/333f28c699d48f74a8728c37824ccb81cdc0bd26", "message": "NMS-12961: \"what's new\" high-level release notes for Horizon 27", "committedDate": "2020-10-21T21:25:10Z", "type": "commit"}, {"oid": "333f28c699d48f74a8728c37824ccb81cdc0bd26", "url": "https://github.com/OpenNMS/opennms/commit/333f28c699d48f74a8728c37824ccb81cdc0bd26", "message": "NMS-12961: \"what's new\" high-level release notes for Horizon 27", "committedDate": "2020-10-21T21:25:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTczNjgyMg==", "url": "https://github.com/OpenNMS/opennms/pull/3194#discussion_r509736822", "bodyText": "Data collection configuration has been added for Netscaler vServer", "author": "Bonrob2", "createdAt": "2020-10-21T21:58:48Z", "path": "opennms-doc/releasenotes/src/asciidoc/releasenotes/whatsnew.adoc", "diffHunk": "@@ -1,205 +1,101 @@\n-[[releasenotes-26]]\n+[[releasenotes-27]]\n \n-== What's New in OpenNMS Horizon 26\n+== What's New in OpenNMS Horizon 27\n \n === System Requirements\n \n-* *Java 8 through 11*: OpenNMS Horizon 26 runs on JDK 8 through 11.\n+* *Java 8 through 11*: OpenNMS Horizon 27 runs on JDK 8 through 11.\n   We recommend the most recent version of OpenJDK 11.\n-* *PostgreSQL 10 or higher*: Horizon 26 requires any supported version of PostgreSQL 10 or higher.\n-\n-=== Breaking Changes\n-\n-* VMware-related data is not longer stored in node assets.\n-This data is now stored in the node's meta-data.\n-\n-==== Flow Classification\n-\n-In versions before Horizon 26, the Flow Classification UI accepted invalid IP address values, e.g., `10,192.1,168.1,5.1-160`.  \n-When upgrading {opennms-product-name}, existing Flow Classification Rules may be considered invalid. In this case they are silently ignored by the Flow Classification Engine.\n-\n-In order to assure no invalid Flow Classification Rules exist, please run the OSGi shell command `opennms-classification:list-invalid-rules` to list all invalid rules.\n-If there are any invalid rules, you must manually fix them using the Flow Classification UI.\n-For more details, refer to issue https://issues.opennms.org/browse/NMS-12422[NMS-12422].\n-\n-==== Events and Kafka\n-\n-Events forwarded to Kafka  are now keyed by `id` rather than `uei`. \n-\n-==== Karaf Shell Command Changes\n-\n-All of the custom Karaf shell commands have now been updated to use a common scope of `opennms`.\n-This makes it easier to find and enumerate the commands.\n-\n-Mapping from previous to new commands is as follows:\n-\n-[options=\"header, autowidth\"]\n-|===\n-| Previous Command | New Command \n-| `opennms-provision:detect` | `opennms:detect` \n-| `opennms-provision:list-detectors` | `opennms:list-detectors` \n-| `opennms-provision:show-import` | `opennms:show-import` \n-| `opennms-provision:import-requisition` | `opennms:import-requisition` \n-| `opennms-dns:lookup` | `opennms:dns-lookup` \n-| `opennms-dns:reverse-lookup` | `opennms:dns-reverse-lookup` \n-| `opennms-ping:sweep` | `opennms:ping-sweep` \n-| `opennms-ping:ping` | `opennms:ping` \n-| `opennms-jira:list-projects` | `opennms:jira-list-projects` \n-| `opennms-jira:verify` | `opennms:jira-verify` \n-| `opennms-jira:show-config` | `opennms:jira-show-config` \n-| `opennms-jira:list-priorities` | `opennms:jira-list-priorities` \n-| `opennms-jira:list-fields` | `opennms:jira-list-fields` \n-| `opennms-jira:list-versions` | `opennms:jira-list-versions` \n-| `opennms-jira:list-issue-types` | `opennms:jist-list-issue-types` \n-| `opennms-jira:list-components` | `opennms:jira-list-components` \n-| `opennms-scv:set` | `opennms:scv-set` \n-| `opennms-scv:get` | `opennms:scv-get` \n-| `opennms-datachoices:reset-system-id` | `opennms:datachoices-reset-system-id` \n-| `opennms-datachoices:display-usage-report` | `opennms:datachoices-display-usage-report` \n-| `opennms-datachoices:send-usage-report` | `opennms:datachoies-send-usage-report` \n-| `opennms-poller:test` | `opennms:poll-test` \n-| `opennms-poller:list-monitors` | `opennms:list-monitors` \n-| `opennms-poller:poll` | `opennms:poll` \n-| `opennms-filters:filter` | `opennms:filter` \n-| `opennms-measurements:show-newts-samples` | `opennms:show-newts-samples` \n-| `opennms-measurements:delete-resource` | `opennms:delete-measurement-resources` \n-| `opennms-measurements:show-measurements` | `opennms:show-measurements` \n-| `opennms-measurements:show-resources` | `opennms:show-measurement-resources` \n-| `opennms-enlinkd:delete-topology` | `opennms:delete-topology` \n-| `opennms-enlinkd:generate-topology` | `opennms:generate-topology` \n-| `opennms-provision:list-detectors` | `opennms:list-detectors` \n-| `opennms-collection:list-collectors` | `opennms:list-collectors` \n-| `opennms-minion:id` | `opennms:minion-id` \n-| `opennnms-minion:ping` | *Removed in favor of `opennms:health-check`  \n-| `opennms-dns:stress` | `opennms:stress-dns` \n-| `opennms-kafka-producer:sync-alarms` | `opennms:kafka-sync-alarms` \n-| `opennms-kafka-producer:push-topology-edges` | `opennms:kafka-push-topology-edges` \n-| `opennms-kafka-producer:evaluate-filter` | `opennms:kafka-evaluate-filter` \n-| `opennms-kafka-producer:list-alarms` | `opennms:kafka-list-alarms` \n-| `opennms-nodecache:sync` | `opennms:sync-node-cache` \n-| `opnennms-coordination:join-election-domain` | `opennms:join-election-domain` \n-| `opennms-kv-blob:put` | `opennms:kv-put-blob` \n-| `opennms-kv-blob:get` | `opennms:kv-get-blob` \n-| `opennms-kv-blob:benchmark` | `opennms:kv-benchmark-blob` \n-| `opennms-kv-json:get` | `opennms:kv-get-json` \n-| `opennms-kv-json:put` | `opennms:kv-put-json` \n-| `opennms-classification:list-rules` | `opennms:list-classification-rules` \n-| `opennms-classification:reload-engine` | `opennms:reload-classification-engine` \n-| `opennms-classification:list-groups` | `opennms:list-classification-groups` \n-| `opennms-classification:list-invalid-rules` | `opennms:list-classification-invalid-rules` \n-| `opennms-classification:classify` | `opennms:classify-flow` \n-| `opennms-elasticsearch:send-historic-events` | `opennms:send-events-to-elasticsearch` \n-| `opennms-events:show-event-config` | `opennms:show-event-config` \n-| `opennms-reload:daemon` | `opennms:reload-daemon` \n-| `opennms-events:stress` | `opennms:stress-events` \n-| `opennms-events:send` | `opennms:send-event` \n-| `opennms-bsm:generate-hierarchies` | `opennms:bsm-generate-hierarchies` \n-| `opennms-bsm:delete-generated-hierarchies` | `opennms:bsm-delete-generated-hierarchies` \n-| `opennms-bsm:render-graph` | `opennms:bsm-render-graph` \n-| `opennms-asset-topology:regenerate` | `opennms:asset-topo-regenerate` \n-| `opennms-asset-topology:remove` | `opennms:asset-topo-remove` \n-| `opennms-asset-topology:list` | `opennms:asset-topo-list` \n-| `opennms-asset-topology:create` | `opennms:asset-topo-create` \n-| `opennms-asset-topology:regenerateall` | `opennms:asset-topo-regenerate-all` \n-| `opennms-topo:show-history` | `opennms:topo-show-history` \n-| `opennms-topo:delete-history` | `opennms:topo-delete-history` \n-| `opennms-onms:listnamespaces` | `opennms:list-namespaces` \n-| `opennms-topo:listoperations` | `opennms:topo-list-operations` \n-| `opennms-activemq:stats` | `opennms:activemq-stats` \n-| `opennms-activemq:purge-queue` | `opennms:activemq-purge-queue` \n-| `opennms-sentinel:id` | `opennms:id` \n-| `opennms-collection:list-collectors` | `opennms:list-collectors` \n-| `opennms-collection:collect` | `opennms:collect` \n-| `opennms-metrics:stress` | `opennms:stress-metrics` \n-| `opennms-threshold-states:details` | `opennms:threshold-details` \n-| `opennms-threshold-states:enumerate` | `opennms:threshold-enumerate` \n-| `opennms-threshold-states:clear-all` | `opennms:threshold-clear-all` \n-| `opennms-threshold-states:clear` | `opennms:threshold-clear` \n-| `opennms-meta:test` | `opennms:metadata-test` \n-| `opennms-rpc:stress` | `opennms:stress-rpc` \n-| `opennms-kafka-sink:topics` | `opennms:kafka-sink-topics` \n-| `opennms-kafka-rpc:topics` | `opennms:kafka-rpc-topics` \n-| `opennms-snmp:fit` | `opennms:snmp-fit` \n-| `opennms-snmp:show-config` | `opennms:snmp-show-config` \n-| `opennms-snmp:remove-from-definition` | `opennms:snmp-remove-from-definition` \n-| `opennms-snmp:walk` | `opennms:snmp-walk` \n-| `snmp:local-engine-id` | `opennms:snmp-local-engine-id` \n-| `opennms-health:metrics-list` | `opennms:metrics-list` \n-| `opennms-health:metrics-display` | `opennms:metrics-display` \n-| `opennms-health:check` | `opennms:health-check` \n-| `opennms-graph:get` | `opennms:graph-get` \n-| `opennms-graph:list` | `opennms:graph-list` \n-| `opennms-graph:force-reload` | `opennms:graph-force-reload` \n-| `opennms-graph:search` | `opennms:graph-search` \n-|===\n+* *PostgreSQL 10 or higher*: Horizon 27 requires any supported version of PostgreSQL from 10 up to (and including) 13.\n+\n+== Breaking Changes\n+\n+=== Remote Poller Removed\n+\n+The remote poller has been removed from Horizon 27.\n+It has been replaced with new infrastructure for <<Application Perspective Monitoring,perspective-based monitoring>> that runs on Minions.\n+\n+=== VMware Assets\n+\n+VMware-related data is not longer stored in node assets.\n+The `install` command will move any existing VMware asset data to the node's metadata when you upgrade.\n \n == New Features and Improvements\n \n-=== Documentation Updates\n+=== Karaf Shell\n \n-Documentation improvements have been made in a number of areas:\n+A number of useful commands have been added or updated in the Karaf shell.\n \n-* Docker\n-* Grafana PDF Reports\n-* Graph Service API\n-* Minion\n-* Telemetry/flows\n-* Thresholding\n-* Timeseries Integration\n+* `alarm-list`: list current alarms (optionally filtered by UEI)\n+* `event-list`: list events (optionally filtered by UEI)\n+* `ip-addr-range`: generate a list of IP addresses to use in other commands\n+* `reload-daemon`: now accepts an optional configuration file to target for reload\n+* `send-event`: additional options supported to match the CLI version of `send-event` more closely\n+* `snmp-fit`: can now optionally send a `newSuspect` event on success\n+* `snmp-get`: like `snmp-walk`, but fetches a single MIB object and prints the result\n \n-=== Graph API\n+=== Minion and Sentinel\n \n-A new API has been added for querying graph data, inspired by link:http://graphml.graphdrawing.org[GraphML].  \n-This API consolidates a number of internal APIs for accessing topology, application, BSM, link, and other data.\n+* The Minion `confd` configuration support now handles a bunch more options, including setting Jetty, RMI, and ssh host and port, Secure Credentials Vault configuration, and environment variables and options for the JVM.\n+* It's now possible to override entries in a Sentinel's `system.properties` with a file called `custom.system.properties`\n \n-=== Kafka and RPC\n+=== Application Perspective Monitoring\n \n-The RPC APIs for communicating between the OpenNMS core, Minion, and Sentinel have been improved, including adding support for GRPC communication.\n+Application Perspective Monitoring replaces the old Remote Poller.\n \n-It is now possible to configure Kafka to use a single topic for communication rather than one-per-module.\n+It uses the Minion infrastructure to monitor a service's availability from these different perspectives.\n+When a service is not responsive an outage will be generated with the corresponding perspective.\n \n-Flow data can now be configured to be enriched with node metadata before being forwarded to Kafka.\n+A number of provisioning, polling, and web UI changes have been made to accomodate this new infrastructure.\n \n-=== Minion and Sentinel\n+=== Provisioning\n \n-* The Minion can now be configured using `confd` by creating a `minion-config.yaml` file.  \n-For details, see link:https://github.com/OpenNMS/opennms/blob/develop/opennms-container/minion/CONFD_README.md[the README in the Minion source].\n-* The Minion Docker container has a number of enhancements:\n-** Minion container sizes have been halved.\n-** Native ICMP support has been added to improve performance.\n-** Dockerized Minion now supports ARM.\n-* The Jolokia HTTP-JMX bridge has been added to the Minion and Sentinel.\n+* Node scan has been updated to limit the number of concurrent RPC requests so as not to overload communication with Minions.\n+* New policies have been added for creating node and interface metadata during provisioning.\n \n === Polling and Monitoring\n \n-* The HTTP POST monitor has been updated to support injecting headers into the request.\n-* The poller now does a better job of validating configs on startup/reload.\n+* WMI/SMB support has been updated to use a wider set of encryption types.\n+* data collection configuration has been added for Netscaler vServer", "originalCommit": "333f28c699d48f74a8728c37824ccb81cdc0bd26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTczOTk1Ng==", "url": "https://github.com/OpenNMS/opennms/pull/3194#discussion_r509739956", "bodyText": "Provisioning", "author": "Bonrob2", "createdAt": "2020-10-21T22:02:38Z", "path": "opennms-doc/releasenotes/src/asciidoc/releasenotes/whatsnew.adoc", "diffHunk": "@@ -1,205 +1,101 @@\n-[[releasenotes-26]]\n+[[releasenotes-27]]\n \n-== What's New in OpenNMS Horizon 26\n+== What's New in OpenNMS Horizon 27\n \n === System Requirements\n \n-* *Java 8 through 11*: OpenNMS Horizon 26 runs on JDK 8 through 11.\n+* *Java 8 through 11*: OpenNMS Horizon 27 runs on JDK 8 through 11.\n   We recommend the most recent version of OpenJDK 11.\n-* *PostgreSQL 10 or higher*: Horizon 26 requires any supported version of PostgreSQL 10 or higher.\n-\n-=== Breaking Changes\n-\n-* VMware-related data is not longer stored in node assets.\n-This data is now stored in the node's meta-data.\n-\n-==== Flow Classification\n-\n-In versions before Horizon 26, the Flow Classification UI accepted invalid IP address values, e.g., `10,192.1,168.1,5.1-160`.  \n-When upgrading {opennms-product-name}, existing Flow Classification Rules may be considered invalid. In this case they are silently ignored by the Flow Classification Engine.\n-\n-In order to assure no invalid Flow Classification Rules exist, please run the OSGi shell command `opennms-classification:list-invalid-rules` to list all invalid rules.\n-If there are any invalid rules, you must manually fix them using the Flow Classification UI.\n-For more details, refer to issue https://issues.opennms.org/browse/NMS-12422[NMS-12422].\n-\n-==== Events and Kafka\n-\n-Events forwarded to Kafka  are now keyed by `id` rather than `uei`. \n-\n-==== Karaf Shell Command Changes\n-\n-All of the custom Karaf shell commands have now been updated to use a common scope of `opennms`.\n-This makes it easier to find and enumerate the commands.\n-\n-Mapping from previous to new commands is as follows:\n-\n-[options=\"header, autowidth\"]\n-|===\n-| Previous Command | New Command \n-| `opennms-provision:detect` | `opennms:detect` \n-| `opennms-provision:list-detectors` | `opennms:list-detectors` \n-| `opennms-provision:show-import` | `opennms:show-import` \n-| `opennms-provision:import-requisition` | `opennms:import-requisition` \n-| `opennms-dns:lookup` | `opennms:dns-lookup` \n-| `opennms-dns:reverse-lookup` | `opennms:dns-reverse-lookup` \n-| `opennms-ping:sweep` | `opennms:ping-sweep` \n-| `opennms-ping:ping` | `opennms:ping` \n-| `opennms-jira:list-projects` | `opennms:jira-list-projects` \n-| `opennms-jira:verify` | `opennms:jira-verify` \n-| `opennms-jira:show-config` | `opennms:jira-show-config` \n-| `opennms-jira:list-priorities` | `opennms:jira-list-priorities` \n-| `opennms-jira:list-fields` | `opennms:jira-list-fields` \n-| `opennms-jira:list-versions` | `opennms:jira-list-versions` \n-| `opennms-jira:list-issue-types` | `opennms:jist-list-issue-types` \n-| `opennms-jira:list-components` | `opennms:jira-list-components` \n-| `opennms-scv:set` | `opennms:scv-set` \n-| `opennms-scv:get` | `opennms:scv-get` \n-| `opennms-datachoices:reset-system-id` | `opennms:datachoices-reset-system-id` \n-| `opennms-datachoices:display-usage-report` | `opennms:datachoices-display-usage-report` \n-| `opennms-datachoices:send-usage-report` | `opennms:datachoies-send-usage-report` \n-| `opennms-poller:test` | `opennms:poll-test` \n-| `opennms-poller:list-monitors` | `opennms:list-monitors` \n-| `opennms-poller:poll` | `opennms:poll` \n-| `opennms-filters:filter` | `opennms:filter` \n-| `opennms-measurements:show-newts-samples` | `opennms:show-newts-samples` \n-| `opennms-measurements:delete-resource` | `opennms:delete-measurement-resources` \n-| `opennms-measurements:show-measurements` | `opennms:show-measurements` \n-| `opennms-measurements:show-resources` | `opennms:show-measurement-resources` \n-| `opennms-enlinkd:delete-topology` | `opennms:delete-topology` \n-| `opennms-enlinkd:generate-topology` | `opennms:generate-topology` \n-| `opennms-provision:list-detectors` | `opennms:list-detectors` \n-| `opennms-collection:list-collectors` | `opennms:list-collectors` \n-| `opennms-minion:id` | `opennms:minion-id` \n-| `opennnms-minion:ping` | *Removed in favor of `opennms:health-check`  \n-| `opennms-dns:stress` | `opennms:stress-dns` \n-| `opennms-kafka-producer:sync-alarms` | `opennms:kafka-sync-alarms` \n-| `opennms-kafka-producer:push-topology-edges` | `opennms:kafka-push-topology-edges` \n-| `opennms-kafka-producer:evaluate-filter` | `opennms:kafka-evaluate-filter` \n-| `opennms-kafka-producer:list-alarms` | `opennms:kafka-list-alarms` \n-| `opennms-nodecache:sync` | `opennms:sync-node-cache` \n-| `opnennms-coordination:join-election-domain` | `opennms:join-election-domain` \n-| `opennms-kv-blob:put` | `opennms:kv-put-blob` \n-| `opennms-kv-blob:get` | `opennms:kv-get-blob` \n-| `opennms-kv-blob:benchmark` | `opennms:kv-benchmark-blob` \n-| `opennms-kv-json:get` | `opennms:kv-get-json` \n-| `opennms-kv-json:put` | `opennms:kv-put-json` \n-| `opennms-classification:list-rules` | `opennms:list-classification-rules` \n-| `opennms-classification:reload-engine` | `opennms:reload-classification-engine` \n-| `opennms-classification:list-groups` | `opennms:list-classification-groups` \n-| `opennms-classification:list-invalid-rules` | `opennms:list-classification-invalid-rules` \n-| `opennms-classification:classify` | `opennms:classify-flow` \n-| `opennms-elasticsearch:send-historic-events` | `opennms:send-events-to-elasticsearch` \n-| `opennms-events:show-event-config` | `opennms:show-event-config` \n-| `opennms-reload:daemon` | `opennms:reload-daemon` \n-| `opennms-events:stress` | `opennms:stress-events` \n-| `opennms-events:send` | `opennms:send-event` \n-| `opennms-bsm:generate-hierarchies` | `opennms:bsm-generate-hierarchies` \n-| `opennms-bsm:delete-generated-hierarchies` | `opennms:bsm-delete-generated-hierarchies` \n-| `opennms-bsm:render-graph` | `opennms:bsm-render-graph` \n-| `opennms-asset-topology:regenerate` | `opennms:asset-topo-regenerate` \n-| `opennms-asset-topology:remove` | `opennms:asset-topo-remove` \n-| `opennms-asset-topology:list` | `opennms:asset-topo-list` \n-| `opennms-asset-topology:create` | `opennms:asset-topo-create` \n-| `opennms-asset-topology:regenerateall` | `opennms:asset-topo-regenerate-all` \n-| `opennms-topo:show-history` | `opennms:topo-show-history` \n-| `opennms-topo:delete-history` | `opennms:topo-delete-history` \n-| `opennms-onms:listnamespaces` | `opennms:list-namespaces` \n-| `opennms-topo:listoperations` | `opennms:topo-list-operations` \n-| `opennms-activemq:stats` | `opennms:activemq-stats` \n-| `opennms-activemq:purge-queue` | `opennms:activemq-purge-queue` \n-| `opennms-sentinel:id` | `opennms:id` \n-| `opennms-collection:list-collectors` | `opennms:list-collectors` \n-| `opennms-collection:collect` | `opennms:collect` \n-| `opennms-metrics:stress` | `opennms:stress-metrics` \n-| `opennms-threshold-states:details` | `opennms:threshold-details` \n-| `opennms-threshold-states:enumerate` | `opennms:threshold-enumerate` \n-| `opennms-threshold-states:clear-all` | `opennms:threshold-clear-all` \n-| `opennms-threshold-states:clear` | `opennms:threshold-clear` \n-| `opennms-meta:test` | `opennms:metadata-test` \n-| `opennms-rpc:stress` | `opennms:stress-rpc` \n-| `opennms-kafka-sink:topics` | `opennms:kafka-sink-topics` \n-| `opennms-kafka-rpc:topics` | `opennms:kafka-rpc-topics` \n-| `opennms-snmp:fit` | `opennms:snmp-fit` \n-| `opennms-snmp:show-config` | `opennms:snmp-show-config` \n-| `opennms-snmp:remove-from-definition` | `opennms:snmp-remove-from-definition` \n-| `opennms-snmp:walk` | `opennms:snmp-walk` \n-| `snmp:local-engine-id` | `opennms:snmp-local-engine-id` \n-| `opennms-health:metrics-list` | `opennms:metrics-list` \n-| `opennms-health:metrics-display` | `opennms:metrics-display` \n-| `opennms-health:check` | `opennms:health-check` \n-| `opennms-graph:get` | `opennms:graph-get` \n-| `opennms-graph:list` | `opennms:graph-list` \n-| `opennms-graph:force-reload` | `opennms:graph-force-reload` \n-| `opennms-graph:search` | `opennms:graph-search` \n-|===\n+* *PostgreSQL 10 or higher*: Horizon 27 requires any supported version of PostgreSQL from 10 up to (and including) 13.\n+\n+== Breaking Changes\n+\n+=== Remote Poller Removed\n+\n+The remote poller has been removed from Horizon 27.\n+It has been replaced with new infrastructure for <<Application Perspective Monitoring,perspective-based monitoring>> that runs on Minions.\n+\n+=== VMware Assets\n+\n+VMware-related data is not longer stored in node assets.\n+The `install` command will move any existing VMware asset data to the node's metadata when you upgrade.\n \n == New Features and Improvements\n \n-=== Documentation Updates\n+=== Karaf Shell\n \n-Documentation improvements have been made in a number of areas:\n+A number of useful commands have been added or updated in the Karaf shell.\n \n-* Docker\n-* Grafana PDF Reports\n-* Graph Service API\n-* Minion\n-* Telemetry/flows\n-* Thresholding\n-* Timeseries Integration\n+* `alarm-list`: list current alarms (optionally filtered by UEI)\n+* `event-list`: list events (optionally filtered by UEI)\n+* `ip-addr-range`: generate a list of IP addresses to use in other commands\n+* `reload-daemon`: now accepts an optional configuration file to target for reload\n+* `send-event`: additional options supported to match the CLI version of `send-event` more closely\n+* `snmp-fit`: can now optionally send a `newSuspect` event on success\n+* `snmp-get`: like `snmp-walk`, but fetches a single MIB object and prints the result\n \n-=== Graph API\n+=== Minion and Sentinel\n \n-A new API has been added for querying graph data, inspired by link:http://graphml.graphdrawing.org[GraphML].  \n-This API consolidates a number of internal APIs for accessing topology, application, BSM, link, and other data.\n+* The Minion `confd` configuration support now handles a bunch more options, including setting Jetty, RMI, and ssh host and port, Secure Credentials Vault configuration, and environment variables and options for the JVM.\n+* It's now possible to override entries in a Sentinel's `system.properties` with a file called `custom.system.properties`\n \n-=== Kafka and RPC\n+=== Application Perspective Monitoring\n \n-The RPC APIs for communicating between the OpenNMS core, Minion, and Sentinel have been improved, including adding support for GRPC communication.\n+Application Perspective Monitoring replaces the old Remote Poller.\n \n-It is now possible to configure Kafka to use a single topic for communication rather than one-per-module.\n+It uses the Minion infrastructure to monitor a service's availability from these different perspectives.\n+When a service is not responsive an outage will be generated with the corresponding perspective.\n \n-Flow data can now be configured to be enriched with node metadata before being forwarded to Kafka.\n+A number of provisioning, polling, and web UI changes have been made to accomodate this new infrastructure.\n \n-=== Minion and Sentinel\n+=== Provisioning\n \n-* The Minion can now be configured using `confd` by creating a `minion-config.yaml` file.  \n-For details, see link:https://github.com/OpenNMS/opennms/blob/develop/opennms-container/minion/CONFD_README.md[the README in the Minion source].\n-* The Minion Docker container has a number of enhancements:\n-** Minion container sizes have been halved.\n-** Native ICMP support has been added to improve performance.\n-** Dockerized Minion now supports ARM.\n-* The Jolokia HTTP-JMX bridge has been added to the Minion and Sentinel.\n+* Node scan has been updated to limit the number of concurrent RPC requests so as not to overload communication with Minions.\n+* New policies have been added for creating node and interface metadata during provisioning.\n \n === Polling and Monitoring\n \n-* The HTTP POST monitor has been updated to support injecting headers into the request.\n-* The poller now does a better job of validating configs on startup/reload.\n+* WMI/SMB support has been updated to use a wider set of encryption types.\n+* data collection configuration has been added for Netscaler vServer\n \n-=== Provisioning\n+=== Thresholding\n+\n+* It is now possible to use metadata in threshold evaluation.\n+\n+=== RPC, Telemetry, Flows, and BMP\n \n-* Provisiond has been enhanced to improve performance of scans.\n-* Nodes provisioned through new suspect events now get assigned a foreign source.\n+* Improvements have been made for supporting aggregate flow metrics.\n+* Flow DNS enrichment has been enhanced to improve performance.\n+* Aggregate flow queries now support resolving hostnames if available.\n+* Sink RPC APIs have been enhanced to expose metrics to Karaf for tracing and performance tuning.\n \n-=== Telemetry and BMP\n+=== Notifications\n \n-* The flow classification editor now supports CIDR notation for IP address expressions.\n-* Support has been added for the BGP Monitoring Protocol (BMP).\n+* It is now possible to use node-, interface-, and service-level metadata in notifications.\n \n-=== Time-Series API\n+=== ReST API\n \n-A new experimental internal API has been added for supporting persisting time-series data in a way that doesn't carry the baggage of the existing persistence APIs which are still heavily influenced by RRDTool.\n+* Events for `applicationCreated`/`applicationDeleted` are now sent when applications are added or removed through the ReST API.\n+* A new v2 API for retrieving application status has been added.\n \n === Web UI Improvements\n \n-* The navbar notification alert now shows everywhere, not just the front page.\n-* The \"user\" menu has been reorganized and cleaned up.\n-* The requisitions UI now supports deleting a node from its node page in the editor.\n+* A new universal search bar has been added which allows for searching alarms, nodes, and more from the top of any page in the UI.\n+\n+=== Documentation Updates\n+\n+Documentation improvements and additions have been made in a number of areas:\n+\n+* Application Perspective Monitoring\n+* Data Collection Configuration\n+* Metadata\n+* Mail Transport Monitor\n+* Minion/Kafka RPC Tuning\n+* Thresholding\n+* Users Configuration, Duty Schedules, and Security Roles\n+", "originalCommit": "333f28c699d48f74a8728c37824ccb81cdc0bd26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f17fcfedea421e462870d7e3343120db7ce90b97", "url": "https://github.com/OpenNMS/opennms/commit/f17fcfedea421e462870d7e3343120db7ce90b97", "message": "NMS-12961: updates from feedback", "committedDate": "2020-10-22T13:55:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNDIxOQ==", "url": "https://github.com/OpenNMS/opennms/pull/3194#discussion_r510224219", "bodyText": "The OpenConfig integration now supports gRPC, in addition to JTI.", "author": "Bonrob2", "createdAt": "2020-10-22T14:48:24Z", "path": "opennms-doc/releasenotes/src/asciidoc/releasenotes/whatsnew.adoc", "diffHunk": "@@ -68,6 +68,7 @@ A number of provisioning, polling, and web UI changes have been made to accomoda\n * Flow DNS enrichment has been enhanced to improve performance.\n * Aggregate flow queries now support resolving hostnames if available.\n * Sink RPC APIs have been enhanced to expose metrics to Karaf for tracing and performance tuning.\n+* The OpenConfig integration now supports gNMI, in addition to JTI.", "originalCommit": "f17fcfedea421e462870d7e3343120db7ce90b97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1ODQ3NQ==", "url": "https://github.com/OpenNMS/opennms/pull/3194#discussion_r510458475", "bodyText": "Yeah, even JTI is gRPC based so I think original statement seems to be fine.", "author": "cgorantla", "createdAt": "2020-10-22T21:08:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNDIxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2MzM0Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3194#discussion_r510463342", "bodyText": "Works for me.", "author": "Bonrob2", "createdAt": "2020-10-22T21:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyNDIxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1MDQ5Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3194#discussion_r510450492", "bodyText": "If I recall correctly we can refer to the CONFD_README which is the only place which documents what is possible with Minion and Confd.", "author": "indigo423", "createdAt": "2020-10-22T20:53:54Z", "path": "opennms-doc/releasenotes/src/asciidoc/releasenotes/whatsnew.adoc", "diffHunk": "@@ -1,205 +1,103 @@\n-[[releasenotes-26]]\n+[[releasenotes-27]]\n \n-== What's New in OpenNMS Horizon 26\n+== What's New in OpenNMS Horizon 27\n \n === System Requirements\n \n-* *Java 8 through 11*: OpenNMS Horizon 26 runs on JDK 8 through 11.\n+* *Java 8 through 11*: OpenNMS Horizon 27 runs on JDK 8 through 11.\n   We recommend the most recent version of OpenJDK 11.\n-* *PostgreSQL 10 or higher*: Horizon 26 requires any supported version of PostgreSQL 10 or higher.\n-\n-=== Breaking Changes\n-\n-* VMware-related data is not longer stored in node assets.\n-This data is now stored in the node's meta-data.\n-\n-==== Flow Classification\n-\n-In versions before Horizon 26, the Flow Classification UI accepted invalid IP address values, e.g., `10,192.1,168.1,5.1-160`.  \n-When upgrading {opennms-product-name}, existing Flow Classification Rules may be considered invalid. In this case they are silently ignored by the Flow Classification Engine.\n-\n-In order to assure no invalid Flow Classification Rules exist, please run the OSGi shell command `opennms-classification:list-invalid-rules` to list all invalid rules.\n-If there are any invalid rules, you must manually fix them using the Flow Classification UI.\n-For more details, refer to issue https://issues.opennms.org/browse/NMS-12422[NMS-12422].\n-\n-==== Events and Kafka\n-\n-Events forwarded to Kafka  are now keyed by `id` rather than `uei`. \n-\n-==== Karaf Shell Command Changes\n-\n-All of the custom Karaf shell commands have now been updated to use a common scope of `opennms`.\n-This makes it easier to find and enumerate the commands.\n-\n-Mapping from previous to new commands is as follows:\n-\n-[options=\"header, autowidth\"]\n-|===\n-| Previous Command | New Command \n-| `opennms-provision:detect` | `opennms:detect` \n-| `opennms-provision:list-detectors` | `opennms:list-detectors` \n-| `opennms-provision:show-import` | `opennms:show-import` \n-| `opennms-provision:import-requisition` | `opennms:import-requisition` \n-| `opennms-dns:lookup` | `opennms:dns-lookup` \n-| `opennms-dns:reverse-lookup` | `opennms:dns-reverse-lookup` \n-| `opennms-ping:sweep` | `opennms:ping-sweep` \n-| `opennms-ping:ping` | `opennms:ping` \n-| `opennms-jira:list-projects` | `opennms:jira-list-projects` \n-| `opennms-jira:verify` | `opennms:jira-verify` \n-| `opennms-jira:show-config` | `opennms:jira-show-config` \n-| `opennms-jira:list-priorities` | `opennms:jira-list-priorities` \n-| `opennms-jira:list-fields` | `opennms:jira-list-fields` \n-| `opennms-jira:list-versions` | `opennms:jira-list-versions` \n-| `opennms-jira:list-issue-types` | `opennms:jist-list-issue-types` \n-| `opennms-jira:list-components` | `opennms:jira-list-components` \n-| `opennms-scv:set` | `opennms:scv-set` \n-| `opennms-scv:get` | `opennms:scv-get` \n-| `opennms-datachoices:reset-system-id` | `opennms:datachoices-reset-system-id` \n-| `opennms-datachoices:display-usage-report` | `opennms:datachoices-display-usage-report` \n-| `opennms-datachoices:send-usage-report` | `opennms:datachoies-send-usage-report` \n-| `opennms-poller:test` | `opennms:poll-test` \n-| `opennms-poller:list-monitors` | `opennms:list-monitors` \n-| `opennms-poller:poll` | `opennms:poll` \n-| `opennms-filters:filter` | `opennms:filter` \n-| `opennms-measurements:show-newts-samples` | `opennms:show-newts-samples` \n-| `opennms-measurements:delete-resource` | `opennms:delete-measurement-resources` \n-| `opennms-measurements:show-measurements` | `opennms:show-measurements` \n-| `opennms-measurements:show-resources` | `opennms:show-measurement-resources` \n-| `opennms-enlinkd:delete-topology` | `opennms:delete-topology` \n-| `opennms-enlinkd:generate-topology` | `opennms:generate-topology` \n-| `opennms-provision:list-detectors` | `opennms:list-detectors` \n-| `opennms-collection:list-collectors` | `opennms:list-collectors` \n-| `opennms-minion:id` | `opennms:minion-id` \n-| `opennnms-minion:ping` | *Removed in favor of `opennms:health-check`  \n-| `opennms-dns:stress` | `opennms:stress-dns` \n-| `opennms-kafka-producer:sync-alarms` | `opennms:kafka-sync-alarms` \n-| `opennms-kafka-producer:push-topology-edges` | `opennms:kafka-push-topology-edges` \n-| `opennms-kafka-producer:evaluate-filter` | `opennms:kafka-evaluate-filter` \n-| `opennms-kafka-producer:list-alarms` | `opennms:kafka-list-alarms` \n-| `opennms-nodecache:sync` | `opennms:sync-node-cache` \n-| `opnennms-coordination:join-election-domain` | `opennms:join-election-domain` \n-| `opennms-kv-blob:put` | `opennms:kv-put-blob` \n-| `opennms-kv-blob:get` | `opennms:kv-get-blob` \n-| `opennms-kv-blob:benchmark` | `opennms:kv-benchmark-blob` \n-| `opennms-kv-json:get` | `opennms:kv-get-json` \n-| `opennms-kv-json:put` | `opennms:kv-put-json` \n-| `opennms-classification:list-rules` | `opennms:list-classification-rules` \n-| `opennms-classification:reload-engine` | `opennms:reload-classification-engine` \n-| `opennms-classification:list-groups` | `opennms:list-classification-groups` \n-| `opennms-classification:list-invalid-rules` | `opennms:list-classification-invalid-rules` \n-| `opennms-classification:classify` | `opennms:classify-flow` \n-| `opennms-elasticsearch:send-historic-events` | `opennms:send-events-to-elasticsearch` \n-| `opennms-events:show-event-config` | `opennms:show-event-config` \n-| `opennms-reload:daemon` | `opennms:reload-daemon` \n-| `opennms-events:stress` | `opennms:stress-events` \n-| `opennms-events:send` | `opennms:send-event` \n-| `opennms-bsm:generate-hierarchies` | `opennms:bsm-generate-hierarchies` \n-| `opennms-bsm:delete-generated-hierarchies` | `opennms:bsm-delete-generated-hierarchies` \n-| `opennms-bsm:render-graph` | `opennms:bsm-render-graph` \n-| `opennms-asset-topology:regenerate` | `opennms:asset-topo-regenerate` \n-| `opennms-asset-topology:remove` | `opennms:asset-topo-remove` \n-| `opennms-asset-topology:list` | `opennms:asset-topo-list` \n-| `opennms-asset-topology:create` | `opennms:asset-topo-create` \n-| `opennms-asset-topology:regenerateall` | `opennms:asset-topo-regenerate-all` \n-| `opennms-topo:show-history` | `opennms:topo-show-history` \n-| `opennms-topo:delete-history` | `opennms:topo-delete-history` \n-| `opennms-onms:listnamespaces` | `opennms:list-namespaces` \n-| `opennms-topo:listoperations` | `opennms:topo-list-operations` \n-| `opennms-activemq:stats` | `opennms:activemq-stats` \n-| `opennms-activemq:purge-queue` | `opennms:activemq-purge-queue` \n-| `opennms-sentinel:id` | `opennms:id` \n-| `opennms-collection:list-collectors` | `opennms:list-collectors` \n-| `opennms-collection:collect` | `opennms:collect` \n-| `opennms-metrics:stress` | `opennms:stress-metrics` \n-| `opennms-threshold-states:details` | `opennms:threshold-details` \n-| `opennms-threshold-states:enumerate` | `opennms:threshold-enumerate` \n-| `opennms-threshold-states:clear-all` | `opennms:threshold-clear-all` \n-| `opennms-threshold-states:clear` | `opennms:threshold-clear` \n-| `opennms-meta:test` | `opennms:metadata-test` \n-| `opennms-rpc:stress` | `opennms:stress-rpc` \n-| `opennms-kafka-sink:topics` | `opennms:kafka-sink-topics` \n-| `opennms-kafka-rpc:topics` | `opennms:kafka-rpc-topics` \n-| `opennms-snmp:fit` | `opennms:snmp-fit` \n-| `opennms-snmp:show-config` | `opennms:snmp-show-config` \n-| `opennms-snmp:remove-from-definition` | `opennms:snmp-remove-from-definition` \n-| `opennms-snmp:walk` | `opennms:snmp-walk` \n-| `snmp:local-engine-id` | `opennms:snmp-local-engine-id` \n-| `opennms-health:metrics-list` | `opennms:metrics-list` \n-| `opennms-health:metrics-display` | `opennms:metrics-display` \n-| `opennms-health:check` | `opennms:health-check` \n-| `opennms-graph:get` | `opennms:graph-get` \n-| `opennms-graph:list` | `opennms:graph-list` \n-| `opennms-graph:force-reload` | `opennms:graph-force-reload` \n-| `opennms-graph:search` | `opennms:graph-search` \n-|===\n+* *PostgreSQL 10 or higher*: Horizon 27 requires any supported version of PostgreSQL from 10 up to (and including) 13.\n+\n+== Breaking Changes\n+\n+=== Remote Poller Removed\n+\n+The remote poller has been removed from Horizon 27.\n+It has been replaced with new infrastructure for <<Application Perspective Monitoring,perspective-based monitoring>> that runs on Minions.\n+\n+=== VMware Assets\n+\n+VMware-related data is not longer stored in node assets.\n+The `install` command will move any existing VMware asset data to the node's metadata when you upgrade.\n \n == New Features and Improvements\n \n-=== Documentation Updates\n+=== Karaf Shell\n \n-Documentation improvements have been made in a number of areas:\n+A number of useful commands have been added or updated in the Karaf shell.\n \n-* Docker\n-* Grafana PDF Reports\n-* Graph Service API\n-* Minion\n-* Telemetry/flows\n-* Thresholding\n-* Timeseries Integration\n+* `alarm-list`: list current alarms (optionally filtered by UEI)\n+* `event-list`: list events (optionally filtered by UEI)\n+* `ip-addr-range`: generate a list of IP addresses to use in other commands\n+* `reload-daemon`: now accepts an optional configuration file to target for reload\n+* `send-event`: additional options supported to match the CLI version of `send-event` more closely\n+* `snmp-fit`: can now optionally send a `newSuspect` event on success\n+* `snmp-get`: like `snmp-walk`, but fetches a single MIB object and prints the result\n \n-=== Graph API\n+=== Minion and Sentinel\n \n-A new API has been added for querying graph data, inspired by link:http://graphml.graphdrawing.org[GraphML].  \n-This API consolidates a number of internal APIs for accessing topology, application, BSM, link, and other data.\n+* The Minion `confd` configuration support now handles a bunch more options, including setting Jetty, RMI, and ssh host and port, Secure Credentials Vault configuration, and environment variables and options for the JVM.", "originalCommit": "f17fcfedea421e462870d7e3343120db7ce90b97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NzEzNg==", "url": "https://github.com/OpenNMS/opennms/pull/3194#discussion_r513567136", "bodyText": "Good point, I'll link it in the release notes.  We should probably make an issue to transition that to actual asciidoc.", "author": "RangerRick", "createdAt": "2020-10-28T16:03:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1MDQ5Mg=="}], "type": "inlineReview"}, {"oid": "1bb91ec3db21d3a22aa645e67eac80f33ca68830", "url": "https://github.com/OpenNMS/opennms/commit/1bb91ec3db21d3a22aa645e67eac80f33ca68830", "message": "NMS-12961: link to CONFD_README", "committedDate": "2020-10-28T16:05:27Z", "type": "commit"}]}