{"pr_number": 2909, "pr_title": "NMS-12436: Use bgpId to associate exporter node", "pr_createdAt": "2020-03-04T21:43:43Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/2909", "timeline": [{"oid": "fe889e3ea30c37d61d04803fdf387f25bbcd3a2a", "url": "https://github.com/OpenNMS/opennms/commit/fe889e3ea30c37d61d04803fdf387f25bbcd3a2a", "message": "NMS-12436: Use bgpId to associate exporter node", "committedDate": "2020-03-04T13:21:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NDUwNg==", "url": "https://github.com/OpenNMS/opennms/pull/2909#discussion_r388464506", "bodyText": "Maybe change this to INFO now that we handle it properly?", "author": "j-white", "createdAt": "2020-03-05T17:58:46Z", "path": "features/telemetry/protocols/bmp/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/adapter/BmpPeerStatusAdapter.java", "diffHunk": "@@ -91,10 +103,28 @@ public void handleMessage(final TelemetryMessageLogEntry messageLogEntry,\n \n         // Find the node for the router who has exported the peer status notification\n         final InetAddress exporterAddress = InetAddressUtils.getInetAddress(messageLog.getSourceAddress());\n-        final Optional<Integer> exporterNodeId = this.interfaceToNodeCache.getFirstNodeId(messageLog.getLocation(), exporterAddress);\n+        Optional<Integer> exporterNodeId = this.interfaceToNodeCache.getFirstNodeId(messageLog.getLocation(), exporterAddress);\n+\n         if (!exporterNodeId.isPresent()) {\n-            LOG.warn(\"Unable to find node for exporter: {}\", exporterAddress);\n-            return;\n+            LOG.warn(\"Unable to find node for exporter address: {}\", exporterAddress);", "originalCommit": "fe889e3ea30c37d61d04803fdf387f25bbcd3a2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2NzM1OA==", "url": "https://github.com/OpenNMS/opennms/pull/2909#discussion_r388867358", "bodyText": "done.", "author": "christianpape", "createdAt": "2020-03-06T12:07:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NDUwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NTY2NQ==", "url": "https://github.com/OpenNMS/opennms/pull/2909#discussion_r388465665", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if (nodes.size() > 0) {\n          \n          \n            \n                                    if (!nodes.isEmpty()) {\n          \n      \n    \n    \n  \n\nThis one is for @mattixtech :)", "author": "j-white", "createdAt": "2020-03-05T18:00:55Z", "path": "features/telemetry/protocols/bmp/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/adapter/BmpTelemetryAdapter.java", "diffHunk": "@@ -91,12 +118,51 @@ public BmpTelemetryAdapter(final AdapterDefinition adapterConfig,\n         final Transport.StatisticsReportPacket stats = message.getStatisticsReport();\n \n         // Find the node for the router who has exported the stats and build a collection agent for it\n-        final InetAddress exporterAddress = InetAddressUtils.getInetAddress(messageLog.getSourceAddress());\n-        final Optional<Integer> exporterNodeId = this.interfaceToNodeCache.getFirstNodeId(messageLog.getLocation(), exporterAddress);\n+        InetAddress exporterAddress = InetAddressUtils.getInetAddress(messageLog.getSourceAddress());\n+        Optional<Integer> exporterNodeId = this.interfaceToNodeCache.getFirstNodeId(messageLog.getLocation(), exporterAddress);\n+\n         if (!exporterNodeId.isPresent()) {\n-            LOG.warn(\"Unable to find node and interface for agent address: {}\", exporterAddress);\n-            return Stream.empty();\n+            LOG.warn(\"Unable to find node for exporter address: {}\", exporterAddress);\n+\n+            if (message.hasBgpId()) {\n+                final InetAddress bgpId = address(message.getBgpId());\n+\n+                final ExporterInfo exporterInfo = transactionTemplate.execute(new TransactionCallback<ExporterInfo>() {\n+                    @Override\n+                    public ExporterInfo doInTransaction(final TransactionStatus transactionStatus) {\n+                        final List<OnmsNode> nodes = nodeDao.findNodeWithMetaData(contextKey.getContext(), contextKey.getKey(), InetAddressUtils.toIpAddrString(bgpId));\n+\n+                        if (nodes.size() > 0) {", "originalCommit": "fe889e3ea30c37d61d04803fdf387f25bbcd3a2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg2NzM4Nw==", "url": "https://github.com/OpenNMS/opennms/pull/2909#discussion_r388867387", "bodyText": "done.", "author": "christianpape", "createdAt": "2020-03-06T12:07:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NTY2NQ=="}], "type": "inlineReview"}, {"oid": "c8322f70b587cf219e2404701dd421ef44e69dc3", "url": "https://github.com/OpenNMS/opennms/commit/c8322f70b587cf219e2404701dd421ef44e69dc3", "message": "NMS-12436: Review changes", "committedDate": "2020-03-06T12:06:43Z", "type": "commit"}, {"oid": "d185cf977dc40b8c5480b2606095e1aedd8feb36", "url": "https://github.com/OpenNMS/opennms/commit/d185cf977dc40b8c5480b2606095e1aedd8feb36", "message": "Merge branch 'features/bmp' into jira/NMS-12436", "committedDate": "2020-03-10T06:34:02Z", "type": "commit"}]}