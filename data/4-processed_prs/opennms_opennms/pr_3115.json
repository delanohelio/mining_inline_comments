{"pr_number": 3115, "pr_title": "CLOUD-435: configure Java options for Minion process", "pr_createdAt": "2020-08-17T14:59:46Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3115", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MzY4Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471543682", "bodyText": "The org.opennms.minion.*.cfg files are normally used for storing properties referenced by features i.e. https://github.com/OpenNMS/opennms/blob/develop/features/minion/dominion/grpc-client/src/main/resources/OSGI-INF/blueprint/blueprint.xml#L20\nI'd rename this to /opt/minion/bin/minion-env.sh or similar.", "author": "j-white", "createdAt": "2020-08-17T15:07:00Z", "path": "opennms-container/minion/container-fs/entrypoint.sh", "diffHunk": "@@ -9,6 +9,7 @@\n umask 002\n MINION_HOME=\"/opt/minion\"\n MINION_CONFIG=\"/opt/minion/etc/org.opennms.minion.controller.cfg\"\n+MINION_PROCESS_ENV_CFG=\"/opt/minion/etc/org.opennms.minion.process-env.cfg\"", "originalCommit": "4d671a8982e4c8f530ffb847823ba9fbf04c4eae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MDc5Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471580792", "bodyText": "I'd rather not add this to bin and not name it with .sh as I wanted to avoid a constraint on this file that it be sourceable/runnable. Renaming it should be fine, we could even just call it process-env.txt.\nIMO this file can simply be a text file that we parse what we want out of.", "author": "mattixtech", "createdAt": "2020-08-17T16:02:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExNjQwNQ==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r472116405", "bodyText": "Initially, I had the same idea of the process environment configuration being a script that can be sourced. However, lacking OpenNMS experience, I will change the name how both of you decide.", "author": "swachter", "createdAt": "2020-08-18T11:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwOTM3OA==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r472309378", "bodyText": "I was originally thinking we could keep this file more generic and it wouldn't necessarily just be for variables we want to export to the environment. Seems like we are restricting it to that use case now which I guess is fine. What we have now looks good.", "author": "mattixtech", "createdAt": "2020-08-18T16:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxMzQ4OQ==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r472313489", "bodyText": "Perhaps we could call the file minion.env?", "author": "mattixtech", "createdAt": "2020-08-18T16:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0MzY4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0NDM1OQ==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471544359", "bodyText": "What's the expected behavior if JAVA_OPTS is already set in the environment?", "author": "j-white", "createdAt": "2020-08-17T15:08:04Z", "path": "opennms-container/minion/container-fs/entrypoint.sh", "diffHunk": "@@ -183,6 +184,10 @@ configure() {\n   initConfig\n   applyConfd\n   applyOverlayConfig\n+  chmod a+x \"$MINION_PROCESS_ENV_CFG\"\n+  set -a\n+  source \"$MINION_PROCESS_ENV_CFG\"", "originalCommit": "4b07b9b4da9e0cd0cc5347fe33f151c656069653", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MjU1MA==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471582550", "bodyText": "My preference is to overwrite in the case we have been explicitly provided one via confd. This should only ever be set by a user intending to provide their own options in full. The plan is to move the config that dominion already sets in the environment to go through confd instead to preserve the existing defaults.", "author": "mattixtech", "createdAt": "2020-08-17T16:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0NDM1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU0NDcyNQ==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471544725", "bodyText": "References /java-opts.sh", "author": "j-white", "createdAt": "2020-08-17T15:08:38Z", "path": "opennms-container/minion/CONFD_README.md", "diffHunk": "@@ -201,3 +202,39 @@ scv:\n ```\n Can be used to override the default SCV provider from the JCEKS implementation (which uses the file system) to a gRPC\n based implementation which requests credentials from Dominion. If not specified the default JCEKS will be used.\n+\n+### Java Options\n+```\n+---\n+process-env:\n+    java-opts:\n+        - -Xmx4096m\n+        - -Xdebug\n+        - -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=7896\n+```\n+\n+Can be used to specify an arbitrary list of Java options. Config specified is written to the script `/java-opts.sh` that contains a corresponding `export JAVA_OPTS=\"...\"` statement.", "originalCommit": "4b07b9b4da9e0cd0cc5347fe33f151c656069653", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU3NzY2NA==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471577664", "bodyText": "We can set the key path to be more permissive here for the small chance we want to add things in the future.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"/process-env/java-opts\"\n          \n          \n            \n                \"/process-env\"", "author": "mattixtech", "createdAt": "2020-08-17T15:57:22Z", "path": "opennms-container/minion/container-fs/confd/conf.d/org.opennms.minion.process-env.toml", "diffHunk": "@@ -0,0 +1,7 @@\n+[template]\n+src = \"org.opennms.minion.process-env.tmpl\"\n+dest = \"/opt/minion/etc/org.opennms.minion.process-env.cfg\"\n+keys = [\n+    \"/process-env/java-opts\"", "originalCommit": "4b07b9b4da9e0cd0cc5347fe33f151c656069653", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExOTY0MQ==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r472119641", "bodyText": "done", "author": "swachter", "createdAt": "2020-08-18T11:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU3NzY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MTY5MA==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471581690", "bodyText": "Instead of making the file executable, can we just read the value we want out of it, then export the environment variable for JAVA_OPTS to the value we read out of the file?\nAlso keep in mind that we are only creating the file if some config has been provided so we need a conditional to check if the file is present and only override the options in that case.\nOnly export the env variable if we found the config file and we were able to parse java options out of it, otherwise noop and use existing behavior.", "author": "mattixtech", "createdAt": "2020-08-17T16:03:37Z", "path": "opennms-container/minion/container-fs/entrypoint.sh", "diffHunk": "@@ -183,6 +184,10 @@ configure() {\n   initConfig\n   applyConfd\n   applyOverlayConfig\n+  chmod a+x \"$MINION_PROCESS_ENV_CFG\"", "originalCommit": "4b07b9b4da9e0cd0cc5347fe33f151c656069653", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIwMjk0Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r472202942", "bodyText": "I changed the behavior to read the file line by line, skipping comments, and exporting key=value settings. I had to remove the quotes from the file, i.e. before the change the file contained\nJAVA_OPTS=\"...\"\n\nnow it contains\nJAVA_OPTS=...", "author": "swachter", "createdAt": "2020-08-18T13:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MTY5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MzIyNA==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471583224", "bodyText": "We should surround this whole block with a conditional to check if any keys exist under /process-env/java-opts/ so that we don't output any content if there isn't any.\nThat way the remove-if-empty will work as intended.", "author": "mattixtech", "createdAt": "2020-08-17T16:06:05Z", "path": "opennms-container/minion/container-fs/confd/templates/org.opennms.minion.process-env.tmpl", "diffHunk": "@@ -0,0 +1,8 @@\n+#", "originalCommit": "4b07b9b4da9e0cd0cc5347fe33f151c656069653", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NjE1Nw==", "url": "https://github.com/OpenNMS/opennms/pull/3115#discussion_r471586157", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. If the result is not yet satifactory then remove the container by `docker rm -f minion`, edit the files in your IDE, and start the image again\n          \n          \n            \n            1. If the result is not yet satisfactory then remove the container by `docker rm -f minion`, edit the files in your IDE, and start the image again", "author": "mattixtech", "createdAt": "2020-08-17T16:10:47Z", "path": "opennms-container/minion/CONFD_README.md", "diffHunk": "@@ -201,3 +202,39 @@ scv:\n ```\n Can be used to override the default SCV provider from the JCEKS implementation (which uses the file system) to a gRPC\n based implementation which requests credentials from Dominion. If not specified the default JCEKS will be used.\n+\n+### Java Options\n+```\n+---\n+process-env:\n+    java-opts:\n+        - -Xmx4096m\n+        - -Xdebug\n+        - -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=7896\n+```\n+\n+Can be used to specify an arbitrary list of Java options. Config specified is written to the script `/java-opts.sh` that contains a corresponding `export JAVA_OPTS=\"...\"` statement.\n+\n+## Test/Develop confd templates\n+`confd` template changes can locally be tested by running a Minion container and mapping the corresponding files into the container. The following procedure might be useful:\n+\n+1. A Minion Docker image is required. It can be downloaded from a build in CircleCI.\n+1. Load the image into Docker: `docker load minion.oci`\n+1. Create a `docker-compose.yaml` file in the parent folder of the checked out `opennms` repo. An example compose file is given below\n+1. Start the image: `docker-compose up -d`\n+1. Open a shell in the container using `docker exec -ti minion bash` or look at the logs `docker logs minion`\n+1. If the result is not yet satifactory then remove the container by `docker rm -f minion`, edit the files in your IDE, and start the image again", "originalCommit": "4b07b9b4da9e0cd0cc5347fe33f151c656069653", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "324d66097b0025efda80ff5e8eead3e3cc233c36", "url": "https://github.com/OpenNMS/opennms/commit/324d66097b0025efda80ff5e8eead3e3cc233c36", "message": "use file name 'minion-process.env' when configuring the environment of the minion process", "committedDate": "2020-08-21T15:04:16Z", "type": "forcePushed"}, {"oid": "aeff79242294b4fff2dbb275eafd020bc7ad0e66", "url": "https://github.com/OpenNMS/opennms/commit/aeff79242294b4fff2dbb275eafd020bc7ad0e66", "message": "cloud-435: Support setting environment variables of minion process; for now only java-opts are considered", "committedDate": "2020-08-24T08:39:03Z", "type": "commit"}, {"oid": "aeff79242294b4fff2dbb275eafd020bc7ad0e66", "url": "https://github.com/OpenNMS/opennms/commit/aeff79242294b4fff2dbb275eafd020bc7ad0e66", "message": "cloud-435: Support setting environment variables of minion process; for now only java-opts are considered", "committedDate": "2020-08-24T08:39:03Z", "type": "forcePushed"}]}