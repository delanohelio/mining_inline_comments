{"pr_number": 977, "pr_title": "Initial support for windows development", "pr_createdAt": "2020-03-23T16:59:15Z", "pr_url": "https://github.com/apple/servicetalk/pull/977", "timeline": [{"oid": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "url": "https://github.com/apple/servicetalk/commit/4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "message": "Initial support for windows development\n\nMotivation:\nServiceTalk currently doesn't build on windows. This can be limiting for\nfolks who are comfortable with that development environment.\n\nModifications:\n- grpc-protoc project needs refactoring of the plugin in order to\nexecute on unix and windows platforms. The distribution is now\nconsistent with a script as the executable and co-located uber jar\ncontaining the plugin logic.\n- ignore/modify tests that failed when running locally on windows, there\nwill be followup PRs for other tests that sporadically fail.\n\nResult:\nServiceTalk can now be built on windows.", "committedDate": "2020-03-23T16:54:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzc3MQ==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396607771", "bodyText": "PublishToMavenRepository does not cover PublishToMavenLocal. Should we use AbstractPublishToMaven type instead?\nhttps://docs.gradle.org/current/javadoc/org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html", "author": "idelpivnitskiy", "createdAt": "2020-03-23T17:00:44Z", "path": "servicetalk-grpc-protoc/build.gradle", "diffHunk": "@@ -47,42 +50,78 @@ shadowJar {\n   classifier = ''\n }\n \n+def grpcPluginUberJarName = project.name + \"-\" + project.version + \"-all.jar\"\n+\n+task copyUberJarForDevelopment(type: Copy) {\n+  dependsOn tasks.shadowJar\n+  from shadowJar.outputs.files.singleFile\n+  into file(\"$buildDir/buildExecutable\")\n+\n+  rename { fileName ->\n+    return grpcPluginUberJarName\n+  }\n+}\n+\n task buildExecutable {\n-  def outputFile = file(\"$buildDir/buildExecutable/protoc-gen-servicetalk_grpc.exe\")\n+  def isWindows = org.gradle.internal.os.OperatingSystem.current().isWindows()\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk_grpc\", isWindows))\n+  dependsOn tasks.copyUberJarForDevelopment\n   inputs.files shadowJar.outputs.files\n   outputs.file outputFile\n \n   doLast {\n-    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {\n-      throw new GradleException(\"Windows is currently not supported\")\n+    if (isWindows) {\n+      buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+    } else {\n+      buildUnixExecutable(grpcPluginUberJarName, outputFile)\n     }\n-\n-    outputFile.parentFile.mkdirs()\n-    outputFile.delete()\n-    outputFile <<\n-        '''#!/bin/sh\n-exec java -jar \"$0\" \"$@\"\n-exit1\n-'''\n-    shadowJar.outputs.files.singleFile.withInputStream { outputFile.append(it) }\n-    outputFile.executable = true\n   }\n }\n tasks.compileJava.finalizedBy(buildExecutable)\n \n+task buildExecutableWindowsPublishing {\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk-windows_grpc\", true))\n+  dependsOn tasks.copyUberJarForDevelopment\n+  inputs.files shadowJar.outputs.files\n+  outputs.file outputFile\n+\n+  doLast {\n+    buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+  }\n+}\n+\n+// we attempt to generate both grpc executables when on windows, and don't publish from windows anyways.\n+tasks.withType(PublishToMavenRepository) {", "originalCommit": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyNzAxMg==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396827012", "bodyText": "I actually want PublishToMavenLocal to work for local testing. This is just meant to highlight the fact that we can generate all artifacts from a single architecture (e.g. just a jar and a script for windows). It could be removed but the hope is that it helps clarify expectations.", "author": "Scottmitch", "createdAt": "2020-03-23T23:51:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNzc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwODM4NA==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396608384", "bodyText": "Could you please elaborate why this is necessary? Does it cause issues with the test if windows has different default value here?", "author": "idelpivnitskiy", "createdAt": "2020-03-23T17:01:33Z", "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/MultiAddressUrlHttpClientTest.java", "diffHunk": "@@ -92,6 +93,7 @@ public static void beforeClass() throws Exception {\n         afterClassCloseables = newCompositeCloseable();\n \n         client = afterClassCloseables.append(HttpClients.forMultiAddressUrl()\n+                .socketOption(CONNECT_TIMEOUT, 1) // windows default connect timeout is seconds, we want to fail fast.", "originalCommit": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyNzQxOA==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396827418", "bodyText": "yes, tests which expect connection failures to trigger retries and ultimately failures on my windows installation were taking 2 seconds to fail each connection attempt. This often lead to test timeouts when we do 5 retries and have a 10 second test timeout.", "author": "Scottmitch", "createdAt": "2020-03-23T23:52:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwODM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNTYwNw==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396835607", "bodyText": "Thanks!", "author": "idelpivnitskiy", "createdAt": "2020-03-24T00:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwODM4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMDk3Mg==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396610972", "bodyText": "Should we use \\r\\n for windows?", "author": "idelpivnitskiy", "createdAt": "2020-03-23T17:05:24Z", "path": "buildSrc/src/main/java/io/servicetalk/internal/build/ExecutableBuilder.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright \u00a9 2020 Apple Inc. and the ServiceTalk project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.servicetalk.internal.build;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.nio.charset.StandardCharsets;\n+\n+public final class ExecutableBuilder {\n+\n+    private ExecutableBuilder() {\n+        // no instances\n+    }\n+\n+    public static void buildUnixExecutable(String uberJarName, File outputFile) throws IOException {\n+        prepareOutputFile(outputFile);\n+        try(FileOutputStream execOutputStream = new FileOutputStream(outputFile)) {\n+            execOutputStream.write((\"#!/bin/sh\\n\" +\n+                    \"pushd $(dirname \\\"$0\\\") > /dev/null\\n\" +\n+                    \"exec java -jar \" + uberJarName + \" \\\"$@\\\"\\n\" +\n+                    \"popd > /dev/null\\n\").getBytes(StandardCharsets.US_ASCII));\n+        }\n+        finalizeOutputFile(outputFile);\n+    }\n+\n+    public static void buildWindowsExecutable(String uberJarName, File outputFile) throws IOException {\n+        prepareOutputFile(outputFile);\n+        try(FileOutputStream execOutputStream = new FileOutputStream(outputFile)) {\n+            execOutputStream.write((\"@ECHO OFF\\n\" +\n+                    \"pushd %~dp0\\n\" +\n+                    \"java -jar \" + uberJarName + \" %*\\n\" +\n+                    \"popd\\n\").getBytes(StandardCharsets.US_ASCII));", "originalCommit": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyODM5OA==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396828398", "bodyText": "I tested with the \\n but yes let me change to \\r\\n.", "author": "Scottmitch", "createdAt": "2020-03-23T23:55:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMDk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMjg3NA==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396612874", "bodyText": "Consider creating an issue, otherwise it's hard to track.", "author": "idelpivnitskiy", "createdAt": "2020-03-23T17:08:17Z", "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/InsufficientlySizedExecutorHttpTest.java", "diffHunk": "@@ -116,6 +116,7 @@ public void insufficientServerCapacityStreaming() throws Exception {\n         insufficientServerCapacityStreaming0();\n     }\n \n+    // TODO Windows seeing CHANNEL_CLOSED_INBOUND. Is 1 thread enough with control events (e.g. close)?", "originalCommit": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyODk2NQ==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396828965", "bodyText": "actually one already exists :) #336", "author": "Scottmitch", "createdAt": "2020-03-23T23:57:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMjg3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyOTAxNw==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396829017", "bodyText": "I'll just ignore this test for now...", "author": "Scottmitch", "createdAt": "2020-03-23T23:57:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMjg3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxODc4NA==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396618784", "bodyText": "What is the expected output for linux and osx classifiers? After running it locally, in servicetalk-grpc-protoc/build/buildExecutable folder I see only:\n\nprotoc-gen-servicetalk_grpc.sh\nservicetalk-grpc-protoc-0.26.0-SNAPSHOT-all.jar\nShould I see any files with classifiers?", "author": "idelpivnitskiy", "createdAt": "2020-03-23T17:16:29Z", "path": "servicetalk-grpc-protoc/build.gradle", "diffHunk": "@@ -47,42 +50,78 @@ shadowJar {\n   classifier = ''\n }\n \n+def grpcPluginUberJarName = project.name + \"-\" + project.version + \"-all.jar\"\n+\n+task copyUberJarForDevelopment(type: Copy) {\n+  dependsOn tasks.shadowJar\n+  from shadowJar.outputs.files.singleFile\n+  into file(\"$buildDir/buildExecutable\")\n+\n+  rename { fileName ->\n+    return grpcPluginUberJarName\n+  }\n+}\n+\n task buildExecutable {\n-  def outputFile = file(\"$buildDir/buildExecutable/protoc-gen-servicetalk_grpc.exe\")\n+  def isWindows = org.gradle.internal.os.OperatingSystem.current().isWindows()\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk_grpc\", isWindows))\n+  dependsOn tasks.copyUberJarForDevelopment\n   inputs.files shadowJar.outputs.files\n   outputs.file outputFile\n \n   doLast {\n-    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {\n-      throw new GradleException(\"Windows is currently not supported\")\n+    if (isWindows) {\n+      buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+    } else {\n+      buildUnixExecutable(grpcPluginUberJarName, outputFile)\n     }\n-\n-    outputFile.parentFile.mkdirs()\n-    outputFile.delete()\n-    outputFile <<\n-        '''#!/bin/sh\n-exec java -jar \"$0\" \"$@\"\n-exit1\n-'''\n-    shadowJar.outputs.files.singleFile.withInputStream { outputFile.append(it) }\n-    outputFile.executable = true\n   }\n }\n tasks.compileJava.finalizedBy(buildExecutable)\n \n+task buildExecutableWindowsPublishing {\n+  def outputFile = new File(\"$buildDir/buildExecutable/\" +\n+      addExecutablePostFix(\"protoc-gen-servicetalk-windows_grpc\", true))\n+  dependsOn tasks.copyUberJarForDevelopment\n+  inputs.files shadowJar.outputs.files\n+  outputs.file outputFile\n+\n+  doLast {\n+    buildWindowsExecutable(grpcPluginUberJarName, outputFile)\n+  }\n+}\n+\n+// we attempt to generate both grpc executables when on windows, and don't publish from windows anyways.\n+tasks.withType(PublishToMavenRepository) {\n+  onlyIf {\n+    !org.gradle.internal.os.OperatingSystem.current().isWindows()\n+  }\n+}\n+\n publishing {\n   publications {\n     mavenJava {\n       artifact(buildExecutable.outputs.files.singleFile) {\n         classifier = \"linux-x86_64\"\n-        extension = \"exe\"\n+        extension = \"sh\"\n         builtBy buildExecutable\n       }\n       artifact(buildExecutable.outputs.files.singleFile) {\n         classifier = \"osx-x86_64\"", "originalCommit": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNTUwOQ==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396625509", "bodyText": "Weird, in servicetalk-grpc-protoc/build/buildExecutable I see only protoc-gen-servicetalk_grpc.sh. But when I do ./gradlew publishToMavenLocal` then I see that it publishes two scripts:\n\nservicetalk-grpc-protoc-0.26.0-SNAPSHOT-linux-x86_64.sh\nservicetalk-grpc-protoc-0.26.0-SNAPSHOT-osx-x86_64.sh\nBut their content is identical. I think we may have only one .sh script.", "author": "idelpivnitskiy", "createdAt": "2020-03-23T17:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxODc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NTA0MQ==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396695041", "bodyText": "Tested with the mavenLocal, looks like os-classifier is necessary and we need to have separate scripts for all platforms.", "author": "idelpivnitskiy", "createdAt": "2020-03-23T19:14:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxODc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyOTUyMg==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396829522", "bodyText": "yes for local development/builds we use a single script targeted at the current platform in servicetalk-grpc-protoc/build/buildExecutable. However for maven we publish both scripts with classifiers to disambiguate and this is also what the grpc-gradle-plugin expects too.", "author": "Scottmitch", "createdAt": "2020-03-23T23:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxODc4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzMzI0Nw==", "url": "https://github.com/apple/servicetalk/pull/977#discussion_r396833247", "bodyText": "will be replaced by reference to #977", "author": "Scottmitch", "createdAt": "2020-03-24T00:12:48Z", "path": "servicetalk-http-netty/src/test/java/io/servicetalk/http/netty/HttpServerMultipleRequestsTest.java", "diffHunk": "@@ -65,6 +66,7 @@\n     @Rule\n     public final Timeout timeout = new ServiceTalkTestTimeout();\n \n+    @Ignore(\"todo NettyHttpServer repeat WriteStreamSubscriber issues\")", "originalCommit": "4c0171521e3e4a485a92dedf3f450bdd2e8b832f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "332f64dd4cb929bda4f0a018c5632b332303cd6b", "url": "https://github.com/apple/servicetalk/commit/332f64dd4cb929bda4f0a018c5632b332303cd6b", "message": "review comments", "committedDate": "2020-03-24T00:14:00Z", "type": "commit"}]}