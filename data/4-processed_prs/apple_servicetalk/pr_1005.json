{"pr_number": 1005, "pr_title": "Change when* operators to before* instead of after*", "pr_createdAt": "2020-04-07T02:17:27Z", "pr_url": "https://github.com/apple/servicetalk/pull/1005", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU0ODQyNQ==", "url": "https://github.com/apple/servicetalk/pull/1005#discussion_r404548425", "bodyText": "Is before not appropriate here as we are sending an error and hence the channel will not be usable?", "author": "NiteshKant", "createdAt": "2020-04-07T05:43:42Z", "path": "servicetalk-tcp-netty-internal/src/main/java/io/servicetalk/tcp/netty/internal/TcpServerBinder.java", "diffHunk": "@@ -122,7 +122,7 @@ protected void initChannel(Channel channel) {\n                                     // subscribeOn is required to offload calls to connectionAcceptor#accept\n                                     .subscribeOn(executionContext.executor()));\n                 }\n-                connectionSingle.whenOnError(cause -> {\n+                connectionSingle.afterOnError(cause -> {", "originalCommit": "866181bbf7d57e55f1f52d806c28ce518bbef1f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3NzU4NQ==", "url": "https://github.com/apple/servicetalk/pull/1005#discussion_r404977585", "bodyText": "I guess it shouldn't matter ... was just trying to keep behavior the same. I will make it explicit before* rather than having to deal with this ambiguity in the future.", "author": "Scottmitch", "createdAt": "2020-04-07T17:14:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU0ODQyNQ=="}], "type": "inlineReview"}, {"oid": "d80a23bc211e0e240c6f352f1b3d0f20423ac8d3", "url": "https://github.com/apple/servicetalk/commit/d80a23bc211e0e240c6f352f1b3d0f20423ac8d3", "message": "Change when* operators to before* instead of after*\n\nMotivation:\nThe when* operators provide call backs to take action when that action\nisn't sensitive to execution order. The current implementation of the\nwhen* operators uses after* semantics, despite the order being explicitly\nundefiend by the API. The after* semantics may result in user code\nexecuting in unexpected times, espeically when local state is involved.\nFor example tracing filters utilize AsyncContext and trigger the state\ncleanup on the response payload Publisher termination. This filter must\nbe appended first in order for the trace information to be initialized\ncorrectly and if any subsequent filters apply a payload Publisher\ntransformation with after* semantics the terminal methods will be\ninvoked after the tracing Scope has been closed. If subsequent operators\nuse before* semantics they will not be subject to this ordering issue.\n\nModifications:\n- Change Publisher, Single, Completable when* operators to use before*\nsemantics instead of after* semantics.\n\nResult:\nwhen* operators use before* semantics to reduce the risk that local\nstate managed outside the scope of the operator flow is cleaned up when\nuser code executes.", "committedDate": "2020-04-07T17:10:23Z", "type": "commit"}, {"oid": "a59afc69a3473d2a298583930866ee1ff4d91e1b", "url": "https://github.com/apple/servicetalk/commit/a59afc69a3473d2a298583930866ee1ff4d91e1b", "message": "review comments", "committedDate": "2020-04-07T17:17:03Z", "type": "commit"}, {"oid": "a59afc69a3473d2a298583930866ee1ff4d91e1b", "url": "https://github.com/apple/servicetalk/commit/a59afc69a3473d2a298583930866ee1ff4d91e1b", "message": "review comments", "committedDate": "2020-04-07T17:17:03Z", "type": "forcePushed"}]}