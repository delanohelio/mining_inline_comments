{"pr_number": 1144, "pr_title": "Simplify ServiceDiscoverer generics in client builders", "pr_createdAt": "2020-09-05T00:01:59Z", "pr_url": "https://github.com/apple/servicetalk/pull/1144", "timeline": [{"oid": "9ff07a1d75a149035b039a3de13423e4d407c488", "url": "https://github.com/apple/servicetalk/commit/9ff07a1d75a149035b039a3de13423e4d407c488", "message": "Simplify ServiceDiscoverer generics in client builders\n\n__Motivation__\n\n`SingleAddressHttpClientBuilder` is used as a template for partitioned and multi-address builders for which SD event types is different. Although, users are not expected to use a ServiceDiscoverer with different event type, we accommodate this usage in our public APIs. Accomodating this usage further trickles down to builder implementation and the external facing `ServiceDiscoveryRetryStrategy`. It also complicates generic handling whenever we change `ServiceDiscoverer` APIs.\nFurther the partitioned builder uncheck casts the service discovery stream while using which hides type issues.\n\n__Modification__\n\n - Remove the `? extends` in the `ServiceDiscoverer` event type while accepting a `ServiceDiscoverer` in the builders. When a different event type is required (partitioned builder), store the `ServiceDiscoverer` locally.\n - Simplify `ServiceDiscoveryRetryStrategy` generics.\n\n __Result__\n\n Less generics clutter in public APIs.", "committedDate": "2020-09-04T23:59:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3NzUwMg==", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485977502", "bodyText": "If the closeable is always emptyAsyncCloseable(), can we return Completable.completed() everywhere instead and avoid allocation of empty closeable?", "author": "idelpivnitskiy", "createdAt": "2020-09-09T23:32:56Z", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/HttpClients.java", "diffHunk": "@@ -292,11 +297,33 @@ private HttpClients() {\n      * @return new builder with provided configuration\n      */\n     public static <U, R> PartitionedHttpClientBuilder<U, R> forPartitionedAddress(\n-            final ServiceDiscoverer<U, R, ? extends PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n+            final ServiceDiscoverer<U, R, PartitionedServiceDiscovererEvent<R>> serviceDiscoverer,\n             final U address,\n             final Function<HttpRequestMetaData, PartitionAttributesBuilder> partitionAttributesBuilderFactory) {\n         return new DefaultPartitionedHttpClientBuilder<>(\n-                new DefaultSingleAddressHttpClientBuilder<>(address, serviceDiscoverer),\n-                partitionAttributesBuilderFactory);\n+                new DefaultSingleAddressHttpClientBuilder<>(address,\n+                        new ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>>() {\n+                            private final ListenableAsyncCloseable closeable = emptyAsyncCloseable();\n+\n+                            @Override\n+                            public Publisher<ServiceDiscovererEvent<R>> discover(final U u) {\n+                                return failed(new IllegalStateException(\"Invalid service discoverer.\"));\n+                            }\n+\n+                            @Override\n+                            public Completable onClose() {\n+                                return closeable.onClose();", "originalCommit": "9ff07a1d75a149035b039a3de13423e4d407c488", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4OTM2Mw==", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r486589363", "bodyText": "emptyAsyncCloseable() makes sure that onClose() does not complete till the closeable is closed. Using completed() will violate that constraint.", "author": "NiteshKant", "createdAt": "2020-09-10T19:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3NzUwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4ODAyMQ==", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485988021", "bodyText": "We can also kill ? extends  in ctor argument (line 101) and in GroupedByPartitionSubscriber (lines 258, 278).", "author": "idelpivnitskiy", "createdAt": "2020-09-10T00:09:54Z", "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "diffHunk": "@@ -74,8 +75,7 @@\n          * @param psd the partitioned {@link ServiceDiscoverer}\n          * @return new client for the given arguments\n          */\n-        Client apply(PartitionAttributes pa,\n-                     ServiceDiscoverer<U, R, ? extends PartitionedServiceDiscovererEvent<R>> psd);\n+        Client apply(PartitionAttributes pa, ServiceDiscoverer<U, R, ServiceDiscovererEvent<R>> psd);", "originalCommit": "9ff07a1d75a149035b039a3de13423e4d407c488", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4ODY2MQ==", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485988661", "bodyText": "Kill ? extends here as well?", "author": "idelpivnitskiy", "createdAt": "2020-09-10T00:12:13Z", "path": "servicetalk-http-netty/src/main/java/io/servicetalk/http/netty/DefaultSingleAddressHttpClientBuilder.java", "diffHunk": "@@ -263,8 +252,9 @@ public StreamingHttpClient buildStreaming() {\n         // Track resources that potentially need to be closed when an exception is thrown during buildStreaming\n         final CompositeCloseable closeOnException = newCompositeCloseable();\n         try {\n-            final SdStatusCompletable sdStatus = new SdStatusCompletable();\n-            final Publisher<? extends ServiceDiscovererEvent<R>> sdEvents = ctx.discover(sdStatus);\n+\n+            final Publisher<? extends ServiceDiscovererEvent<R>> sdEvents =", "originalCommit": "9ff07a1d75a149035b039a3de13423e4d407c488", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTkxMQ==", "url": "https://github.com/apple/servicetalk/pull/1144#discussion_r485989911", "bodyText": "Consider using Function.identity().", "author": "idelpivnitskiy", "createdAt": "2020-09-10T00:16:39Z", "path": "servicetalk-client-api-internal/src/main/java/io/servicetalk/client/api/internal/DefaultPartitionedClientGroup.java", "diffHunk": "@@ -181,7 +182,7 @@ public boolean test(PSDE evt) {\n                     }\n                     return acceptEvent;\n                 }\n-            }).beforeFinally(partition::closeNow);\n+            }).beforeFinally(partition::closeNow).map(psde -> psde);", "originalCommit": "9ff07a1d75a149035b039a3de13423e4d407c488", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1db3b0b599cba5ca3c017252fac52b401c424d4b", "url": "https://github.com/apple/servicetalk/commit/1db3b0b599cba5ca3c017252fac52b401c424d4b", "message": "Review comments", "committedDate": "2020-09-10T19:36:29Z", "type": "commit"}, {"oid": "bf36c650d34f930abc4c6c96af28a4b62218bc3c", "url": "https://github.com/apple/servicetalk/commit/bf36c650d34f930abc4c6c96af28a4b62218bc3c", "message": "Review comments", "committedDate": "2020-09-10T19:39:46Z", "type": "commit"}, {"oid": "2f638965e1cc5f93174c6375558616772659e5c0", "url": "https://github.com/apple/servicetalk/commit/2f638965e1cc5f93174c6375558616772659e5c0", "message": "Review comments", "committedDate": "2020-09-10T19:40:37Z", "type": "commit"}]}