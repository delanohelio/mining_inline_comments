{"pr_number": 1289, "pr_title": "QueueDynamicCompositeCancellable -> CancellableStack", "pr_createdAt": "2020-12-18T02:28:57Z", "pr_url": "https://github.com/apple/servicetalk/pull/1289", "timeline": [{"oid": "a05d22cbd259b3c5f2c5259d084208816a76b511", "url": "https://github.com/apple/servicetalk/commit/a05d22cbd259b3c5f2c5259d084208816a76b511", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators.", "committedDate": "2020-12-18T10:48:25Z", "type": "forcePushed"}, {"oid": "f03c11705345082ca0510f28d1df91caa400ef9b", "url": "https://github.com/apple/servicetalk/commit/f03c11705345082ca0510f28d1df91caa400ef9b", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators.", "committedDate": "2020-12-18T10:52:59Z", "type": "forcePushed"}, {"oid": "de37665536516455eeecc0162fbd99db74681498", "url": "https://github.com/apple/servicetalk/commit/de37665536516455eeecc0162fbd99db74681498", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators.", "committedDate": "2020-12-19T00:44:44Z", "type": "commit"}, {"oid": "de37665536516455eeecc0162fbd99db74681498", "url": "https://github.com/apple/servicetalk/commit/de37665536516455eeecc0162fbd99db74681498", "message": "QueueDynamicCompositeCancellable -> CancellableStack\n\nMotivation:\nRecent benchmarking in CompletableProcessor has shown that a\nConcurrentStack implementation provides performance benefits when random\nremoval isn't common. QueueDynamicCompositeCancellable falls into this\ncase and should use a consistent approach.\n\nModifications:\n- Remove DynamicCompositeCancellable interface because the stack no\nlonger provides all the same capabilities (e.g. removal) and the\ninterface is internal and isn't strictly required.\n- Rename QueueDynamicCompositeCancellable to CancellableStack.\n- Rename SetDynamicCompositeCancellable to CancellableSet.\n- Use ConcurrentStack in CancellableStack.\n\nResult:\nImproved performance for CancellableStack for use cases such as\nCompletable#merge* operators.", "committedDate": "2020-12-19T00:44:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3MTAzOQ==", "url": "https://github.com/apple/servicetalk/pull/1289#discussion_r546171039", "bodyText": "queue -> stack?", "author": "idelpivnitskiy", "createdAt": "2020-12-19T01:31:26Z", "path": "servicetalk-concurrent-api/src/main/java/io/servicetalk/concurrent/api/CancellableStack.java", "diffHunk": "@@ -17,44 +17,46 @@\n \n import io.servicetalk.concurrent.Cancellable;\n \n-/**\n- * Provides a means to cascade a {@link #cancel()} call to other {@link Cancellable} objects.\n- */\n-interface DynamicCompositeCancellable extends Cancellable {\n+final class CancellableStack implements Cancellable {\n+    private final ConcurrentStack<Cancellable> queue = new ConcurrentStack<>();", "originalCommit": "de37665536516455eeecc0162fbd99db74681498", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4bd08fa99b0f06037668d035222e09d10123a664", "url": "https://github.com/apple/servicetalk/commit/4bd08fa99b0f06037668d035222e09d10123a664", "message": "queue -> stack variable name", "committedDate": "2020-12-19T04:02:39Z", "type": "commit"}]}