{"pr_number": 390, "pr_title": "adds PyList support to ForTag", "pr_createdAt": "2020-01-21T18:51:38Z", "pr_url": "https://github.com/HubSpot/jinjava/pull/390", "timeline": [{"oid": "c166c881c601bd4ebb2357ca57cae9031f6d3147", "url": "https://github.com/HubSpot/jinjava/commit/c166c881c601bd4ebb2357ca57cae9031f6d3147", "message": "adds PyList support to ForTag", "committedDate": "2020-01-21T18:30:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTc3NA==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369279774", "bodyText": "any reason for running this through the escape filter (e) here?", "author": "boulter", "createdAt": "2020-01-21T22:33:16Z", "path": "src/test/java/com/hubspot/jinjava/lib/tag/ForTagTest.java", "diffHunk": "@@ -205,6 +205,27 @@ public void testForLoopWithDates() {\n     assertEquals(new PyishDate(testDate).toString(), rendered);\n   }\n \n+  @Test\n+  public void testTuplesWithPyList() {\n+\t  String template = \"{% for href, caption in [('index.html', 'Index'), ('downloads.html', 'Downloads'), ('products.html', 'Products')] %}\" + \n+\t  \t\t\"<li><a href=\\\"{{href|e}}\\\">{{caption|e}}</a></li>\\n\" + ", "originalCommit": "c166c881c601bd4ebb2357ca57cae9031f6d3147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3MDE3OA==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369370178", "bodyText": "this was mentioned in issue #321, therefore, I used the exact same thing to test the functionality out. there is no specific reason for choosing this template. \ud83d\ude05", "author": "gabru-md", "createdAt": "2020-01-22T04:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxNzIxMA==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r371317210", "bodyText": "Ok, can you remove anything that's not relevant to the test then? We don't want to be testing the escape filter here.", "author": "boulter", "createdAt": "2020-01-27T15:45:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1MjMwNQ==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r371352305", "bodyText": "done!", "author": "gabru-md", "createdAt": "2020-01-27T16:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTk4OQ==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369279989", "bodyText": "this could be broken out into a separate test", "author": "boulter", "createdAt": "2020-01-21T22:33:50Z", "path": "src/test/java/com/hubspot/jinjava/lib/tag/ForTagTest.java", "diffHunk": "@@ -205,6 +205,27 @@ public void testForLoopWithDates() {\n     assertEquals(new PyishDate(testDate).toString(), rendered);\n   }\n \n+  @Test\n+  public void testTuplesWithPyList() {\n+\t  String template = \"{% for href, caption in [('index.html', 'Index'), ('downloads.html', 'Downloads'), ('products.html', 'Products')] %}\" + \n+\t  \t\t\"<li><a href=\\\"{{href|e}}\\\">{{caption|e}}</a></li>\\n\" + \n+\t  \t\t\"{% endfor %}\";\n+\t  String expected = \"<li><a href=\\\"index.html\\\">Index</a></li>\\n\" +\n+\t  \t\t\"<li><a href=\\\"downloads.html\\\">Downloads</a></li>\\n\" +\n+\t  \t\t\"<li><a href=\\\"products.html\\\">Products</a></li>\\n\";\n+\t  \n+\t  String rendered = jinjava.render(template, context);", "originalCommit": "c166c881c601bd4ebb2357ca57cae9031f6d3147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3ODQ2OA==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369378468", "bodyText": "done \ud83d\udc4d", "author": "gabru-md", "createdAt": "2020-01-22T05:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTk4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4MDUxOA==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369280518", "bodyText": "could you also add a test that confirms that this works for non-string values? Perhaps add 1 + 2 + 3?", "author": "boulter", "createdAt": "2020-01-21T22:35:09Z", "path": "src/test/java/com/hubspot/jinjava/lib/tag/ForTagTest.java", "diffHunk": "@@ -205,6 +205,27 @@ public void testForLoopWithDates() {\n     assertEquals(new PyishDate(testDate).toString(), rendered);\n   }\n \n+  @Test\n+  public void testTuplesWithPyList() {\n+\t  String template = \"{% for href, caption in [('index.html', 'Index'), ('downloads.html', 'Downloads'), ('products.html', 'Products')] %}\" + \n+\t  \t\t\"<li><a href=\\\"{{href|e}}\\\">{{caption|e}}</a></li>\\n\" + \n+\t  \t\t\"{% endfor %}\";\n+\t  String expected = \"<li><a href=\\\"index.html\\\">Index</a></li>\\n\" +\n+\t  \t\t\"<li><a href=\\\"downloads.html\\\">Downloads</a></li>\\n\" +\n+\t  \t\t\"<li><a href=\\\"products.html\\\">Products</a></li>\\n\";\n+\t  \n+\t  String rendered = jinjava.render(template, context);\n+\t  assertEquals(rendered, expected);\n+\t  \n+\t  template = \"{% for a, b, c in [(1,2,3), (4,5,6)] %}\"\n+\t  \t\t+ \"<p>{{a}} {{b}} {{c}}</p>\\n\"\n+\t  \t\t+ \"{% endfor %}\";\n+\t  expected = \"<p>1 2 3</p>\\n\"\n+\t  \t\t+ \"<p>4 5 6</p>\\n\";\n+\t  rendered = jinjava.render(template, context);\n+\t  assertEquals(rendered, expected);", "originalCommit": "c166c881c601bd4ebb2357ca57cae9031f6d3147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3ODU5Mg==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369378592", "bodyText": "I've added tests for the same.\nAlso, I've modified the ForTag.java file to accommodate the changes.", "author": "gabru-md", "createdAt": "2020-01-22T05:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4MDUxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4MjIyMA==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369282220", "bodyText": "can you add a test for this case?", "author": "boulter", "createdAt": "2020-01-21T22:39:25Z", "path": "src/main/java/com/hubspot/jinjava/lib/tag/ForTag.java", "diffHunk": "@@ -159,6 +162,14 @@ public String interpret(TagNode tagNode, JinjavaInterpreter interpreter) {\n                 entryVal = entry.getValue();\n               }\n \n+              interpreter.getContext().put(loopVar, entryVal);\n+            } else if (List.class.isAssignableFrom(val.getClass())) {\n+              List<Object> entries = ((PyList) val).toList();\n+              String entryVal = null;\n+              // safety check for size\n+              if (entries.size() >= loopVarIndex) {\n+                entryVal = Objects.toString(entries.get(loopVarIndex));", "originalCommit": "c166c881c601bd4ebb2357ca57cae9031f6d3147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3ODc5MA==", "url": "https://github.com/HubSpot/jinjava/pull/390#discussion_r369378790", "bodyText": "This is a safety check only but I've added tests where the jinjava.render is expected to throw an exception when there are lesses values to unpack. \ud83d\udc4d", "author": "gabru-md", "createdAt": "2020-01-22T05:44:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4MjIyMA=="}], "type": "inlineReview"}, {"oid": "9f23d1086a70c0fcf83f1063c4634e50825343dd", "url": "https://github.com/HubSpot/jinjava/commit/9f23d1086a70c0fcf83f1063c4634e50825343dd", "message": "adds tests for ForTag", "committedDate": "2020-01-22T05:40:16Z", "type": "commit"}, {"oid": "78a0226b47f010344c884b2b6682561e19717781", "url": "https://github.com/HubSpot/jinjava/commit/78a0226b47f010344c884b2b6682561e19717781", "message": "removes escape filter from fortag test", "committedDate": "2020-01-27T16:39:19Z", "type": "commit"}]}