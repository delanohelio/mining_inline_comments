{"pr_number": 385, "pr_title": "Implement safe filter as SafeString and handle SafeString in filters, functions and expressions", "pr_createdAt": "2020-01-09T15:03:20Z", "pr_url": "https://github.com/HubSpot/jinjava/pull/385", "timeline": [{"oid": "16679771bf9b81a2435d9140a574ab0d15a05603", "url": "https://github.com/HubSpot/jinjava/commit/16679771bf9b81a2435d9140a574ab0d15a05603", "message": "Start implementing safe filter", "committedDate": "2020-01-09T13:54:44Z", "type": "commit"}, {"oid": "7fe49fcb907fa2aa0689b4baf6e37b78924039d9", "url": "https://github.com/HubSpot/jinjava/commit/7fe49fcb907fa2aa0689b4baf6e37b78924039d9", "message": "Remove comment about pass-through implementation", "committedDate": "2020-01-09T14:56:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NDA5OA==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r364884098", "bodyText": "perhaps the friendlier thing to do here is just to return the passed in object", "author": "jboulter", "createdAt": "2020-01-09T18:05:50Z", "path": "src/main/java/com/hubspot/jinjava/lib/filter/SafeFilter.java", "diffHunk": "@@ -25,9 +25,15 @@ public String getName() {\n   }\n \n   @Override\n-  public Object filter(Object var, JinjavaInterpreter interpreter,\n-      String... args) {\n-    return var;\n-  }\n+  public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n+    if (var == null) {\n+      return null;\n+    }\n+\n+    if (!(var instanceof String)) {", "originalCommit": "7fe49fcb907fa2aa0689b4baf6e37b78924039d9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9f8a0768bd413a7cd4580c76715632201496271d", "url": "https://github.com/HubSpot/jinjava/commit/9f8a0768bd413a7cd4580c76715632201496271d", "message": "Return var if it's not instance of string instead of throwing", "committedDate": "2020-01-10T11:03:12Z", "type": "commit"}, {"oid": "2e8bcdda0ca6dac88bcfb68fc2de75478603ecab", "url": "https://github.com/HubSpot/jinjava/commit/2e8bcdda0ca6dac88bcfb68fc2de75478603ecab", "message": "Add test for pass-through", "committedDate": "2020-01-10T11:06:35Z", "type": "commit"}, {"oid": "cb11ed46a2bc90846faca8e1d01dd57d6954159f", "url": "https://github.com/HubSpot/jinjava/commit/cb11ed46a2bc90846faca8e1d01dd57d6954159f", "message": "Add support for SafeString to all filters which handle Strings", "committedDate": "2020-01-20T15:17:21Z", "type": "commit"}, {"oid": "b637aac90ef674d0b48503dacd9b1d7db643fdb2", "url": "https://github.com/HubSpot/jinjava/commit/b637aac90ef674d0b48503dacd9b1d7db643fdb2", "message": "Remove utils for string reverse filter", "committedDate": "2020-01-20T15:28:50Z", "type": "commit"}, {"oid": "93bb78e255416eddbc0bb6ae06d7cb76cc8c9f99", "url": "https://github.com/HubSpot/jinjava/commit/93bb78e255416eddbc0bb6ae06d7cb76cc8c9f99", "message": "Handle SafeString in truncate function", "committedDate": "2020-01-20T16:20:27Z", "type": "commit"}, {"oid": "2f074525dbe21723589cb3b8927c6e17c3446b27", "url": "https://github.com/HubSpot/jinjava/commit/2f074525dbe21723589cb3b8927c6e17c3446b27", "message": "Formatting fix", "committedDate": "2020-01-20T16:23:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3MDc1Mg==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r369070752", "bodyText": "Perhaps you could use a Delegate pattern here and implement SafeStringFilter which takes care of this rather than manually checking for SafeStrings in every filter?\nYou could have the default interface implement filter, then delegate to a safeFilter method in each of these classes, unwrapping and wrapping the SafeString around it.", "author": "boulter", "createdAt": "2020-01-21T15:31:32Z", "path": "src/main/java/com/hubspot/jinjava/lib/filter/DivideFilter.java", "diffHunk": "@@ -87,6 +88,9 @@ public Object filter(Object object, JinjavaInterpreter interpreter, String... ar\n         throw new InvalidInputException(interpreter, this, InvalidReason.NUMBER_FORMAT, object.toString());\n       }\n     }\n+    if (object instanceof SafeString) {", "originalCommit": "2f074525dbe21723589cb3b8927c6e17c3446b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5MTYzNQ==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r369091635", "bodyText": "Sounds good, thanks!", "author": "Joeoh", "createdAt": "2020-01-21T16:04:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3MDc1Mg=="}], "type": "inlineReview"}, {"oid": "b75330f11d995872e596a661b77c9e802e861acc", "url": "https://github.com/HubSpot/jinjava/commit/b75330f11d995872e596a661b77c9e802e861acc", "message": "Add SafeStringFilter interface", "committedDate": "2020-01-23T16:51:59Z", "type": "commit"}, {"oid": "9b4d844d7617200ca597ec0d99726f70511365c4", "url": "https://github.com/HubSpot/jinjava/commit/9b4d844d7617200ca597ec0d99726f70511365c4", "message": "Handle safe strings in filters", "committedDate": "2020-01-23T16:52:13Z", "type": "commit"}, {"oid": "882a1dfec539c9eb06d22604e617e4406e53c852", "url": "https://github.com/HubSpot/jinjava/commit/882a1dfec539c9eb06d22604e617e4406e53c852", "message": "rm trailing space", "committedDate": "2020-01-23T16:56:13Z", "type": "commit"}, {"oid": "2204dbda804c640a9aea4a14e7b188590b7b643f", "url": "https://github.com/HubSpot/jinjava/commit/2204dbda804c640a9aea4a14e7b188590b7b643f", "message": "Formatting fixes", "committedDate": "2020-01-23T16:59:18Z", "type": "commit"}, {"oid": "e55ee852b81b4e64f98c0a346e92c5229978e377", "url": "https://github.com/HubSpot/jinjava/commit/e55ee852b81b4e64f98c0a346e92c5229978e377", "message": "Move safeFilter method to Filter IF and remove SafeFilter IF", "committedDate": "2020-01-23T17:11:08Z", "type": "commit"}, {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195", "url": "https://github.com/HubSpot/jinjava/commit/6b624b91b891f26ba88e8305b5c8c6025a705195", "message": "rm space", "committedDate": "2020-01-23T17:23:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1NjU4Nw==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370256587", "bodyText": "Should this be return StringUtils.trim(Objects.toString(var)); instead?", "author": "jkollmann", "createdAt": "2020-01-23T17:31:33Z", "path": "src/main/java/com/hubspot/jinjava/lib/filter/TrimFilter.java", "diffHunk": "@@ -28,7 +26,9 @@ public String getName() {\n \n   @Override\n   public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n-    return StringUtils.trim(Objects.toString(var));\n+    if (var instanceof String) {\n+      return safeFilter(StringUtils.trim(var.toString()), interpreter, args);", "originalCommit": "6b624b91b891f26ba88e8305b5c8c6025a705195", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzOTc1OQ==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370639759", "bodyText": "Why? If we know its a string, whats the need to wrap it in the call. We know we can cast or do .toString", "author": "Joeoh", "createdAt": "2020-01-24T13:45:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1NjU4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMDc5Nw==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370300797", "bodyText": "nit: unnecessary variable", "author": "boulter", "createdAt": "2020-01-23T19:06:15Z", "path": "src/main/java/com/hubspot/jinjava/lib/filter/EscapeJsFilter.java", "diffHunk": "@@ -36,11 +36,18 @@\n \n   @Override\n   public Object filter(Object objectToFilter, JinjavaInterpreter jinjavaInterpreter, String... strings) {\n-    String input = Objects.toString(objectToFilter, \"\");\n-    LengthLimitingStringBuilder builder = new LengthLimitingStringBuilder(jinjavaInterpreter.getConfig().getMaxOutputSize());\n+    if (objectToFilter instanceof String) {\n+      String input = Objects.toString(objectToFilter, \"\");", "originalCommit": "6b624b91b891f26ba88e8305b5c8c6025a705195", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMTk0NQ==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370301945", "bodyText": "in general, it's nice to separate formatting changes like this out into a separate PR so make your PRs clean and easy to understand.", "author": "boulter", "createdAt": "2020-01-23T19:08:47Z", "path": "src/main/java/com/hubspot/jinjava/lib/filter/LowerFilter.java", "diffHunk": "@@ -1,17 +1,17 @@\n /**********************************************************************\n-Copyright (c) 2014 HubSpot Inc.\n+ Copyright (c) 2014 HubSpot Inc.", "originalCommit": "6b624b91b891f26ba88e8305b5c8c6025a705195", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0ODMyMQ==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370548321", "bodyText": "100% agree", "author": "Joeoh", "createdAt": "2020-01-24T09:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMTk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzEwNw==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370303107", "bodyText": "could you have this extend String? That might simplify all your instanceof checks.", "author": "boulter", "createdAt": "2020-01-23T19:11:14Z", "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.hubspot.jinjava.objects;\n+\n+public class SafeString {", "originalCommit": "6b624b91b891f26ba88e8305b5c8c6025a705195", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzNDA0MQ==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370634041", "bodyText": "I wish! Unfortunately String is final so we can't. String with an extra property would have made this a lot more simple. I think if we were designing this from scratch we wouldn't use strings anywhere and instead always pass some sort of StringToken that could be safe/not safe and have some other properties.", "author": "Joeoh", "createdAt": "2020-01-24T13:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzY4NQ==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370303685", "bodyText": "nit: extra space after object", "author": "boulter", "createdAt": "2020-01-23T19:12:22Z", "path": "src/main/java/com/hubspot/jinjava/lib/filter/RootFilter.java", "diffHunk": "@@ -64,9 +65,9 @@ public Object filter(Object object, JinjavaInterpreter interpreter, String... ar\n     if (object instanceof BigInteger) {\n       return calculateBigRoot(interpreter, new BigDecimal((BigInteger) object), root);\n     }\n-    if (object instanceof String) {\n+    if (object instanceof String || object  instanceof SafeString) {", "originalCommit": "6b624b91b891f26ba88e8305b5c8c6025a705195", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNDA5Mg==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370304092", "bodyText": "is this method needed?", "author": "boulter", "createdAt": "2020-01-23T19:13:15Z", "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.hubspot.jinjava.objects;\n+\n+public class SafeString {\n+\n+  private final String value;\n+\n+  public SafeString(String value) {\n+    this.value = value;\n+  }\n+\n+  public String getValue() {", "originalCommit": "6b624b91b891f26ba88e8305b5c8c6025a705195", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1MjU1NQ==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r371152555", "bodyText": "Yes its needed to resolve the token to a string when rendering", "author": "Joeoh", "createdAt": "2020-01-27T10:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNDA5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0NjgzMw==", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r371746833", "bodyText": "Never-mind. Its actually not. I got mixed up with tokens.", "author": "Joeoh", "createdAt": "2020-01-28T11:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNDA5Mg=="}], "type": "inlineReview"}, {"oid": "8ef1752e45fe5c33f90d7d9feb7bb147dd0fa653", "url": "https://github.com/HubSpot/jinjava/commit/8ef1752e45fe5c33f90d7d9feb7bb147dd0fa653", "message": "Change behaviour of Urlize filter to not always return a SafeString", "committedDate": "2020-01-24T13:39:28Z", "type": "commit"}, {"oid": "b6d398fc34ae17e9ad6041090fa90caf1f364862", "url": "https://github.com/HubSpot/jinjava/commit/b6d398fc34ae17e9ad6041090fa90caf1f364862", "message": "Code style changes", "committedDate": "2020-01-24T13:39:44Z", "type": "commit"}, {"oid": "7ceb66ea30065ed408b36e96809f58bd57ca4881", "url": "https://github.com/HubSpot/jinjava/commit/7ceb66ea30065ed408b36e96809f58bd57ca4881", "message": "Remove unnecessary call to safeString", "committedDate": "2020-01-24T13:47:33Z", "type": "commit"}, {"oid": "2b981e722d68a01b54abe9bb7de96cb5228d1afc", "url": "https://github.com/HubSpot/jinjava/commit/2b981e722d68a01b54abe9bb7de96cb5228d1afc", "message": "Style fix", "committedDate": "2020-01-24T13:54:40Z", "type": "commit"}, {"oid": "e265bb586c9c9546e920d0c063091555b2ec1b72", "url": "https://github.com/HubSpot/jinjava/commit/e265bb586c9c9546e920d0c063091555b2ec1b72", "message": "Add tests to handle Urlize string being escaped and made safe", "committedDate": "2020-01-24T15:47:29Z", "type": "commit"}, {"oid": "1b4f61543e5aa223bac3425c89589fb8af4ee222", "url": "https://github.com/HubSpot/jinjava/commit/1b4f61543e5aa223bac3425c89589fb8af4ee222", "message": "rm hardcoded string", "committedDate": "2020-01-24T15:49:12Z", "type": "commit"}, {"oid": "fee9566c5b6eea0caa079babc17ff2fdbf9e6b32", "url": "https://github.com/HubSpot/jinjava/commit/fee9566c5b6eea0caa079babc17ff2fdbf9e6b32", "message": "rm uneeded getValue", "committedDate": "2020-01-28T11:40:01Z", "type": "commit"}, {"oid": "aaeeb975fa2a9cb6e74bd2fcff46a84e2c731ea8", "url": "https://github.com/HubSpot/jinjava/commit/aaeeb975fa2a9cb6e74bd2fcff46a84e2c731ea8", "message": "Add SafeString type as str", "committedDate": "2020-01-28T11:40:58Z", "type": "commit"}, {"oid": "4fc82849bd572bde11a670fbcb0bc2b90e0a83da", "url": "https://github.com/HubSpot/jinjava/commit/4fc82849bd572bde11a670fbcb0bc2b90e0a83da", "message": "Handle SafeString in expressions", "committedDate": "2020-01-28T13:58:33Z", "type": "commit"}]}