{"pr_number": 445, "pr_title": "TagCycleException was thrown when rendering template that doesn't have any cycles", "pr_createdAt": "2020-05-25T13:27:24Z", "pr_url": "https://github.com/HubSpot/jinjava/pull/445", "timeline": [{"oid": "da3f60ee62e87269be84591e03318ad35895d7e5", "url": "https://github.com/HubSpot/jinjava/commit/da3f60ee62e87269be84591e03318ad35895d7e5", "message": "Do not process extended roots when render included templates", "committedDate": "2020-05-26T09:22:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5NDM2MA==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r435794360", "bodyText": "I find it a bit easier to reason about these import chains if you rename them to something sequential like template-a template-b,template-c so  you can easily track a extends b imports c etc.", "author": "Joeoh", "createdAt": "2020-06-05T09:14:35Z", "path": "src/test/java/com/hubspot/jinjava/lib/tag/IncludeTagTest.java", "diffHunk": "@@ -188,4 +188,16 @@ public void itSetsErrorLineNumbersCorrectlyTwoLevelsDeep() throws IOException {\n     assertThat(result.getErrors().get(0).getSourceTemplate().get())\n       .isEqualTo(\"tags/includetag/errors/error.html\");\n   }\n+\n+  @Test\n+  public void itRunsWithoutTagCycleException() throws Exception {\n+    String result = jinjava.render(\n+      Resources.toString(\n+        Resources.getResource(\"tags/extendstag/tagcycleexception/main-template.jinja\"),", "originalCommit": "da3f60ee62e87269be84591e03318ad35895d7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2MTYxOA==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r437961618", "bodyText": "Ok, templates were renamed. To better understanding please check the inheritance tree:", "author": "Roobun", "createdAt": "2020-06-10T08:45:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5NDM2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNjM5Mg==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r436426392", "bodyText": "could you explain a bit more why this is more correct?", "author": "boulter", "createdAt": "2020-06-08T01:53:39Z", "path": "src/main/java/com/hubspot/jinjava/lib/tag/IncludeTag.java", "diffHunk": "@@ -106,7 +106,7 @@ public String interpret(TagNode tagNode, JinjavaInterpreter interpreter) {\n         .getCurrentPathStack()\n         .push(templateFile, interpreter.getLineNumber(), interpreter.getPosition());\n \n-      return interpreter.render(node);\n+      return interpreter.render(node, false);", "originalCommit": "da3f60ee62e87269be84591e03318ad35895d7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkzODY2MQ==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r437938661", "bodyText": "I\u2019ve been trying to check other examples of Cycle Exception being thrown. It was the only combination of tags like \u201cimport/export/extends\u201d that reacted like that, ending up with TagCycleException which seems some kind of last resort in the case when common types of exceptions weren\u2019t handled.\nIn that instance, we have an error because we went to render() method again before we actually pop the node from CurrentPathStack.\nComparing to \u201cimport\u201d: there we also try to render the template when we got to the imported part, but unlike \u201cinclude\u201d we\u2019re creating a new interpreter instance. It\u2019s alright because jinja documentation told us so: \u201cIt\u2019s important to know that imports are cached and imported templates don\u2019t have access to the current template variables\u201d\nHowever, we cannot use the same trick with \u201cimport\u201d.  About this tag jinja has that statement: \u201cIncluded templates have access to the variables of the active context by default\u201d. So we must use the same interpreter for both the original templates and the imported ones.\nKnowing that I found the only way to get rid of that problem: forbid the included template to render whatever we have inside ExtendedRoots. It shouldn\u2019t break anything because eventually we will process them but it\u2019s better to do that outside the imported template.\nSources for the behavior of each tag:\nhttps://jinja.palletsprojects.com/en/2.11.x/templates/#include\nhttps://jinja.palletsprojects.com/en/2.11.x/templates/#import", "author": "Roobun", "createdAt": "2020-06-10T08:08:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNjM5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNjYxNQ==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r436426615", "bodyText": "are these variables relevant to the test?", "author": "boulter", "createdAt": "2020-06-08T01:55:11Z", "path": "src/test/resources/tags/extendstag/tagcycleexception/library-template.jinja", "diffHunk": "@@ -0,0 +1,2 @@\n+{{ variable1 }}", "originalCommit": "da3f60ee62e87269be84591e03318ad35895d7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0MTQ0NQ==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r437941445", "bodyText": "No, you're right, we don't really need them here.\nRemoved them.", "author": "Roobun", "createdAt": "2020-06-10T08:12:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNjYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNjg4Mg==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r436426882", "bodyText": "maybe explain this better in the name. Something about extended files not triggering tag cycle exceptions?", "author": "boulter", "createdAt": "2020-06-08T01:56:54Z", "path": "src/test/java/com/hubspot/jinjava/lib/tag/IncludeTagTest.java", "diffHunk": "@@ -188,4 +188,16 @@ public void itSetsErrorLineNumbersCorrectlyTwoLevelsDeep() throws IOException {\n     assertThat(result.getErrors().get(0).getSourceTemplate().get())\n       .isEqualTo(\"tags/includetag/errors/error.html\");\n   }\n+\n+  @Test\n+  public void itRunsWithoutTagCycleException() throws Exception {", "originalCommit": "da3f60ee62e87269be84591e03318ad35895d7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk0MTAyOQ==", "url": "https://github.com/HubSpot/jinjava/pull/445#discussion_r437941029", "bodyText": "Sure, renamed to \"itAvoidsTagCycleExceptionInsideExtendedFiles\"", "author": "Roobun", "createdAt": "2020-06-10T08:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNjg4Mg=="}], "type": "inlineReview"}, {"oid": "68bf6c8a38284be1cf4bee80760dd27e347b413c", "url": "https://github.com/HubSpot/jinjava/commit/68bf6c8a38284be1cf4bee80760dd27e347b413c", "message": "Render Templates without cycles but getting TagCycleException", "committedDate": "2020-06-10T08:09:28Z", "type": "commit"}, {"oid": "a1ad55420556d480dd483a0a40980ced3898c457", "url": "https://github.com/HubSpot/jinjava/commit/a1ad55420556d480dd483a0a40980ced3898c457", "message": "Do not process extended roots when render included templates", "committedDate": "2020-06-10T08:09:28Z", "type": "commit"}, {"oid": "a1ad55420556d480dd483a0a40980ced3898c457", "url": "https://github.com/HubSpot/jinjava/commit/a1ad55420556d480dd483a0a40980ced3898c457", "message": "Do not process extended roots when render included templates", "committedDate": "2020-06-10T08:09:28Z", "type": "forcePushed"}]}