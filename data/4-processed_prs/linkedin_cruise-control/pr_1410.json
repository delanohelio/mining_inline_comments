{"pr_number": 1410, "pr_title": "Add a sensor to emit topic count in cluster", "pr_createdAt": "2020-12-03T23:52:03Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1410", "timeline": [{"oid": "2cff851d14b7ae376323104414a7f7805e03b260", "url": "https://github.com/linkedin/cruise-control/commit/2cff851d14b7ae376323104414a7f7805e03b260", "message": "Add a sensor to emit topic count in cluster", "committedDate": "2020-12-03T23:49:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNjk1MQ==", "url": "https://github.com/linkedin/cruise-control/pull/1410#discussion_r535816951", "bodyText": "Fetching metadata to update this might be expensive. I wonder if we can use the metadata that is periodically updated within PartitionMetricSampleAggregatorCleaner for updating this sensor?\nIt is ok for it to be stale for a couple seconds as long is it keeps the metadata fetches at minimum.", "author": "efeg", "createdAt": "2020-12-04T03:53:14Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/monitor/LoadMonitor.java", "diffHunk": "@@ -703,6 +706,14 @@ private int numPartitionsWithExtrapolations() {\n     return _latestStateUpdateMs + _monitorStateUpdateTimeoutMs > _time.milliseconds() ? _numPartitionsWithExtrapolations : -1;\n   }\n \n+  private int numTopics() {\n+    // Get topic count from the metadata cache in metadata client first. If it's 0 that means the metadata cache has not\n+    // bootstrapped yet. In this case, refresh the metadata cache and get topic count. In other words, refreshing\n+    // metadata cache only when it is necessary.\n+    int topicCount = _metadataClient.metadata().fetch().topics().size();\n+    return topicCount == 0 ? _metadataClient.refreshMetadata().cluster().topics().size() : topicCount;", "originalCommit": "2cff851d14b7ae376323104414a7f7805e03b260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxODU2MA==", "url": "https://github.com/linkedin/cruise-control/pull/1410#discussion_r535818560", "bodyText": "In this implementation, the numTopics method will fetch metadata at most once when the metadata cache has not finished bootstrapping. Once the metadata cache has something, it will never return an empty set of topics (topicCount == 0).\nThe _metadataClient which has the metadata cache is also used by other methods as well. For example, getMonitoredPartitionsPercentage", "author": "Lincong", "createdAt": "2020-12-04T03:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxNzM2Ng==", "url": "https://github.com/linkedin/cruise-control/pull/1410#discussion_r536317366", "bodyText": "Thanks for the clarification.\nDoes 0 topic count always imply that the that the metadata cache has not bootstrapped -- i.e. however unlikely, if the cluster indeed has no topics, wouldn't this approach keep refreshing metadata?\nI am curious what you think about simply returning _metadataClient.metadata().fetch().topics().size() rather than having the extra logic to handle the one time bootstrapping scenario. We know that PartitionMetricSampleAggregatorCleaner starts refreshing metadata instantaneously upon startup, so the topic count can only be reported as 0 during the bootstrapping for a brief period of time.", "author": "efeg", "createdAt": "2020-12-04T19:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0OTQ0OA==", "url": "https://github.com/linkedin/cruise-control/pull/1410#discussion_r536449448", "bodyText": "Thanks for your comment.\nIn my implementation, I tried to minimize the occurrences of returning 0 since we are using Gauge as the sensor and a 0 value is a sudden drop in the plotted metrics line.\nIf the cluster has no topic, such a cluster is very likely to be OK with CC fetching metadata once every minute. In other words, the zero-topic clusters should be extremely rare, and even though they do exist, they are extremely unlikely to be sensitive to the overhead of fetching metadata since there should be little load on them anyway.", "author": "Lincong", "createdAt": "2020-12-04T23:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ3ODAwOQ==", "url": "https://github.com/linkedin/cruise-control/pull/1410#discussion_r536478009", "bodyText": "Discussed offline and I will change it to always fetch from the metadata cache in the admin client.", "author": "Lincong", "createdAt": "2020-12-05T01:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNjk1MQ=="}], "type": "inlineReview"}, {"oid": "2fab06b2555df1f84d1946d1af37bf15cbb6fae4", "url": "https://github.com/linkedin/cruise-control/commit/2fab06b2555df1f84d1946d1af37bf15cbb6fae4", "message": "Change the implementaiton to always read from metadata cahce in the admin client", "committedDate": "2020-12-07T23:19:05Z", "type": "commit"}]}