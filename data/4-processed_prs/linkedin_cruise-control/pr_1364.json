{"pr_number": 1364, "pr_title": "Let implementations of OptimizationOptionsGenerator be configured with an AdminClient", "pr_createdAt": "2020-10-27T01:29:01Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1364", "timeline": [{"oid": "c32d8a9b2ce8caeb42ab496e0f607eec10a5c765", "url": "https://github.com/linkedin/cruise-control/commit/c32d8a9b2ce8caeb42ab496e0f607eec10a5c765", "message": "Let implementations of OptimizationOptionsGenerator be configured with an AdminClient", "committedDate": "2020-10-27T01:28:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NDk2OA==", "url": "https://github.com/linkedin/cruise-control/pull/1364#discussion_r512884968", "bodyText": "Nit: maybe considering the below approach which is slightly more cohesive. I personally like immutability.\n    Map<String, Object> overrideConfigs = Collections.unmodifiableMap(new HashMap<String, Object>(2) {{\n      put(KAFKA_CRUISE_CONTROL_CONFIG_OBJECT_CONFIG, config);\n      put(ADMIN_CLIENT_CONFIG, adminClient);\n    }});", "author": "Lincong", "createdAt": "2020-10-27T17:26:02Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/GoalOptimizer.java", "diffHunk": "@@ -121,7 +124,9 @@ public GoalOptimizer(KafkaCruiseControlConfig config,\n     _priorityWeight = config.getDouble(AnalyzerConfig.GOAL_BALANCEDNESS_PRIORITY_WEIGHT_CONFIG);\n     _strictnessWeight = config.getDouble(AnalyzerConfig.GOAL_BALANCEDNESS_STRICTNESS_WEIGHT_CONFIG);\n     _allowCapacityEstimationOnProposalPrecompute = config.getBoolean(AnalyzerConfig.ALLOW_CAPACITY_ESTIMATION_ON_PROPOSAL_PRECOMPUTE_CONFIG);\n-    Map<String, Object> overrideConfigs = Collections.singletonMap(KAFKA_CRUISE_CONTROL_CONFIG_OBJECT_CONFIG, config);\n+    Map<String, Object> overrideConfigs = new HashMap<>(2);", "originalCommit": "c32d8a9b2ce8caeb42ab496e0f607eec10a5c765", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxNzA4Mw==", "url": "https://github.com/linkedin/cruise-control/pull/1364#discussion_r512917083", "bodyText": "Double brace initialization comes with a significant overhead (please see efficiency-of-java-double-brace-initialization) and (personally) an unorthodox syntax. Hence, I'd prefer to avoid it.\nIn this particular use-case, immutability does not provide much benefit as the map is purely generated for the use of KafkaCruiseControlConfig#getConfiguredInstance and not for any subsequent use.", "author": "efeg", "createdAt": "2020-10-27T18:06:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NDk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NzE1NQ==", "url": "https://github.com/linkedin/cruise-control/pull/1364#discussion_r512887155", "bodyText": "Nit: same suggestion as above", "author": "Lincong", "createdAt": "2020-10-27T17:28:29Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/GoalViolationDetector.java", "diffHunk": "@@ -72,7 +73,9 @@ public GoalViolationDetector(Queue<Anomaly> anomalies, KafkaCruiseControl kafkaC\n                                                      config.getDouble(AnalyzerConfig.GOAL_BALANCEDNESS_PRIORITY_WEIGHT_CONFIG),\n                                                      config.getDouble(AnalyzerConfig.GOAL_BALANCEDNESS_STRICTNESS_WEIGHT_CONFIG));\n     _balancednessScore = MAX_BALANCEDNESS_SCORE;\n-    Map<String, Object> overrideConfigs = Collections.singletonMap(KAFKA_CRUISE_CONTROL_CONFIG_OBJECT_CONFIG, config);\n+    Map<String, Object> overrideConfigs = new HashMap<>(2);", "originalCommit": "c32d8a9b2ce8caeb42ab496e0f607eec10a5c765", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxNzMwNA==", "url": "https://github.com/linkedin/cruise-control/pull/1364#discussion_r512917304", "bodyText": "Please see the previous response.", "author": "efeg", "createdAt": "2020-10-27T18:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NzE1NQ=="}], "type": "inlineReview"}]}