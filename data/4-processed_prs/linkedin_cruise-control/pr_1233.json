{"pr_number": 1233, "pr_title": "Upgrade to kafka 2.5.0", "pr_createdAt": "2020-06-09T09:17:22Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1233", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1OTk3Ng==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r439959976", "bodyText": "Here, not TP but tp1, because of the topic parameter is TOPIC0+\"1\"", "author": "akatona84", "createdAt": "2020-06-15T06:43:16Z", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/monitor/sampling/aggregator/KafkaPartitionMetricSampleAggregatorTest.java", "diffHunk": "@@ -129,24 +129,24 @@ public void testAggregateWithUpdatedCluster() throws NotEnoughValidWindowsExcept\n                                                          TOPIC0,\n                                                          false,\n                                                          Collections.singletonList(new MetadataResponse.PartitionMetadata(\n-                                                             Errors.NONE, PARTITION, NODE_0,\n+                                                             Errors.NONE, TP, Optional.of(NODE_0.id()),\n                                                              Optional.of(RecordBatch.NO_PARTITION_LEADER_EPOCH),\n-                                                             Arrays.asList(nodes()), Arrays.asList(nodes()),\n+                                                             nodeIds(), nodeIds(),\n                                                              Collections.emptyList()))));\n     topicMetadata.add(new MetadataResponse.TopicMetadata(Errors.NONE,\n                                                          TOPIC0 + \"1\",\n                                                          false,\n                                                          Collections.singletonList(new MetadataResponse.PartitionMetadata(\n-                                                             Errors.NONE, 0, NODE_0,\n+                                                             Errors.NONE, TP, Optional.of(NODE_0.id()),", "originalCommit": "76d0fe8279bbdfacbd1b690454566b425508e23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4MTI5Mw==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r440681293", "bodyText": "thanks", "author": "amuraru", "createdAt": "2020-06-16T08:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1OTk3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTY5Nw==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r439961697", "bodyText": "how about\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return Arrays.asList(NODES.clone()).stream().map(n -> n.id()).collect(Collectors.toList());\n          \n          \n            \n                return Arrays.stream(NODES).map(Node::id).collect(Collectors.toList());\n          \n      \n    \n    \n  \n\nimho array cloning is unnecessary also more concise", "author": "akatona84", "createdAt": "2020-06-15T06:47:50Z", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/monitor/MonitorUnitTestUtils.java", "diffHunk": "@@ -44,6 +46,13 @@ private MonitorUnitTestUtils() {\n     return NODES.clone();\n   }\n \n+  /**\n+   * @return The clone of the nodes in the {@link #getCluster(Collection)} and {@link #getMetadata(Collection)}.\n+   */\n+  public static List<Integer> nodeIds() {\n+    return Arrays.asList(NODES.clone()).stream().map(n -> n.id()).collect(Collectors.toList());", "originalCommit": "76d0fe8279bbdfacbd1b690454566b425508e23e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2NTM3Mw==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r439965373", "bodyText": "-1 could be MetadataResponse.NO_LEADER_ID", "author": "akatona84", "createdAt": "2020-06-15T06:56:56Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControlUtils.java", "diffHunk": "@@ -430,13 +430,13 @@ public static MetadataResponse prepareMetadataResponse(List<Node> brokers,\n     for (MetadataResponse.PartitionMetadata partitionMetadata : topicMetadata.partitionMetadata()) {\n       metadataResponseTopic.partitions().add(\n           new MetadataResponseData.MetadataResponsePartition()\n-              .setErrorCode(partitionMetadata.error().code())\n+              .setErrorCode(partitionMetadata.error.code())\n               .setPartitionIndex(partitionMetadata.partition())\n-              .setLeaderId(partitionMetadata.leader() == null ? -1 : partitionMetadata.leader().id())\n-              .setLeaderEpoch(partitionMetadata.leaderEpoch().orElse(RecordBatch.NO_PARTITION_LEADER_EPOCH))\n-              .setReplicaNodes(partitionMetadata.replicas().stream().map(Node::id).collect(Collectors.toList()))\n-              .setIsrNodes(partitionMetadata.isr().stream().map(Node::id).collect(Collectors.toList()))\n-              .setOfflineReplicas(partitionMetadata.offlineReplicas().stream().map(Node::id).collect(Collectors.toList())));\n+              .setLeaderId(partitionMetadata.leaderId.orElse(-1))", "originalCommit": "76d0fe8279bbdfacbd1b690454566b425508e23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4MTM3Nw==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r440681377", "bodyText": "thanks - updated", "author": "amuraru", "createdAt": "2020-06-16T08:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2NTM3Mw=="}], "type": "inlineReview"}, {"oid": "2982cb144f4467a3ff474a3b8bf35ff603da5d47", "url": "https://github.com/linkedin/cruise-control/commit/2982cb144f4467a3ff474a3b8bf35ff603da5d47", "message": "Upgrade to kafka 2.5.0", "committedDate": "2020-06-16T08:28:44Z", "type": "commit"}, {"oid": "e49a127d66a13a463a8ddeeca495493575ea7085", "url": "https://github.com/linkedin/cruise-control/commit/e49a127d66a13a463a8ddeeca495493575ea7085", "message": "addressed review comments", "committedDate": "2020-06-16T08:34:53Z", "type": "commit"}, {"oid": "e49a127d66a13a463a8ddeeca495493575ea7085", "url": "https://github.com/linkedin/cruise-control/commit/e49a127d66a13a463a8ddeeca495493575ea7085", "message": "addressed review comments", "committedDate": "2020-06-16T08:34:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMDg3OA==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r442900878", "bodyText": "Can we avoid version bump to 3.6.1? -- please see #1236 (comment)", "author": "efeg", "createdAt": "2020-06-19T15:19:37Z", "path": "gradle.properties", "diffHunk": "@@ -1,5 +1,5 @@\n org.gradle.daemon=false\n org.gradle.parallel=false\n org.gradle.jvmargs=-Xms512m -Xmx512m\n-kafkaVersion=2.4.1\n-zookeeperVersion=3.6.0\n\\ No newline at end of file\n+kafkaVersion=2.5.0\n+zookeeperVersion=3.6.1", "originalCommit": "e49a127d66a13a463a8ddeeca495493575ea7085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzU2NQ==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r443043565", "bodyText": "Thanks @efeg - good catch! I missed your previous comment", "author": "amuraru", "createdAt": "2020-06-19T21:04:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMDg3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMjYyNw==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r442902627", "bodyText": "I am curious why we add MS_PKGPROTECT?", "author": "efeg", "createdAt": "2020-06-19T15:22:54Z", "path": "gradle/findbugs-exclude.xml", "diffHunk": "@@ -50,6 +50,7 @@\n       <Bug pattern=\"EC_NULL_ARG\"/>\n       <Bug pattern=\"NP_ALWAYS_NULL\"/>\n       <Bug pattern=\"MS_CANNOT_BE_FINAL\"/>\n+      <Bug pattern=\"MS_PKGPROTECT\"/>", "originalCommit": "e49a127d66a13a463a8ddeeca495493575ea7085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDc2NQ==", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r443044765", "bodyText": "This came out of migrating to scala 2.12 (a requirement when migrating to kafka 2.5)\nSpotbugs checks fail on scala compiled classes in this new version.\ngradle/gradle#8308 seems to report a similar issue. Fwiw I noticed kafka itself excludes this check also in their spotbugs configuration.", "author": "amuraru", "createdAt": "2020-06-19T21:08:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMjYyNw=="}], "type": "inlineReview"}]}