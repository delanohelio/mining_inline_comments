{"pr_number": 1162, "pr_title": "Fix the bug that stop_ongoing_execution parameter does not work.", "pr_createdAt": "2020-04-01T01:03:03Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1162", "timeline": [{"oid": "5ade9f2e0994c66876eda233672d970e7303cd65", "url": "https://github.com/linkedin/cruise-control/commit/5ade9f2e0994c66876eda233672d970e7303cd65", "message": "Fix the bug that stop_ongoing_execution parameter does not work.", "committedDate": "2020-04-01T01:02:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwOTMzNA==", "url": "https://github.com/linkedin/cruise-control/pull/1162#discussion_r401309334", "bodyText": "Nit: Is the change from else if (_executor.hasOngoingLeaderElection()) to if (_executor.hasOngoingLeaderElection()) needed?", "author": "efeg", "createdAt": "2020-04-01T01:42:32Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControl.java", "diffHunk": "@@ -217,14 +217,19 @@ public void sanityCheckDryRun(boolean dryRun, boolean stopOngoingExecution) {\n     if (dryRun) {\n       return;\n     }\n-    if (_executor.hasOngoingExecution() && !stopOngoingExecution) {\n-      throw new IllegalStateException(String.format(\"Cannot start a new execution while there is an ongoing execution. \"\n-                                                    + \"Please use %s=true to stop ongoing execution and start a new one.\",\n-                                                    STOP_ONGOING_EXECUTION_PARAM));\n-    } else if (_executor.hasOngoingPartitionReassignments()) {\n-      throw new IllegalStateException(\"Cannot execute new proposals while there are ongoing partition reassignments.\");\n-    } else if (_executor.hasOngoingLeaderElection()) {\n-      throw new IllegalStateException(\"Cannot execute new proposals while there are ongoing leadership reassignments.\");\n+    if (_executor.hasOngoingExecution()) {\n+      if (!stopOngoingExecution) {\n+        throw new IllegalStateException(String.format(\"Cannot start a new execution while there is an ongoing execution. \"\n+                                                      + \"Please use %s=true to stop ongoing execution and start a new one.\",\n+                                                      STOP_ONGOING_EXECUTION_PARAM));\n+      }\n+    } else {\n+      if (_executor.hasOngoingPartitionReassignments()) {\n+        throw new IllegalStateException(\"Cannot execute new proposals while there are ongoing partition reassignments.\");\n+      }\n+      if (_executor.hasOngoingLeaderElection()) {", "originalCommit": "5ade9f2e0994c66876eda233672d970e7303cd65", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMxMDEyNw==", "url": "https://github.com/linkedin/cruise-control/pull/1162#discussion_r401310127", "bodyText": "In these two exception messages, can we indicate that these ongoing executions are expected to have been started by an agent that is external to this Cruise Control instance?", "author": "efeg", "createdAt": "2020-04-01T01:45:35Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControl.java", "diffHunk": "@@ -217,14 +217,19 @@ public void sanityCheckDryRun(boolean dryRun, boolean stopOngoingExecution) {\n     if (dryRun) {\n       return;\n     }\n-    if (_executor.hasOngoingExecution() && !stopOngoingExecution) {\n-      throw new IllegalStateException(String.format(\"Cannot start a new execution while there is an ongoing execution. \"\n-                                                    + \"Please use %s=true to stop ongoing execution and start a new one.\",\n-                                                    STOP_ONGOING_EXECUTION_PARAM));\n-    } else if (_executor.hasOngoingPartitionReassignments()) {\n-      throw new IllegalStateException(\"Cannot execute new proposals while there are ongoing partition reassignments.\");\n-    } else if (_executor.hasOngoingLeaderElection()) {\n-      throw new IllegalStateException(\"Cannot execute new proposals while there are ongoing leadership reassignments.\");\n+    if (_executor.hasOngoingExecution()) {\n+      if (!stopOngoingExecution) {\n+        throw new IllegalStateException(String.format(\"Cannot start a new execution while there is an ongoing execution. \"\n+                                                      + \"Please use %s=true to stop ongoing execution and start a new one.\",\n+                                                      STOP_ONGOING_EXECUTION_PARAM));\n+      }\n+    } else {\n+      if (_executor.hasOngoingPartitionReassignments()) {\n+        throw new IllegalStateException(\"Cannot execute new proposals while there are ongoing partition reassignments.\");\n+      }\n+      if (_executor.hasOngoingLeaderElection()) {\n+        throw new IllegalStateException(\"Cannot execute new proposals while there are ongoing leadership reassignments.\");", "originalCommit": "5ade9f2e0994c66876eda233672d970e7303cd65", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1af6e0909760b36b89066c16a6291f5ed3806b8d", "url": "https://github.com/linkedin/cruise-control/commit/1af6e0909760b36b89066c16a6291f5ed3806b8d", "message": "Address the feedback.", "committedDate": "2020-04-01T16:47:13Z", "type": "commit"}]}