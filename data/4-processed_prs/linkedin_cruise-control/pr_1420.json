{"pr_number": 1420, "pr_title": "Relax low resource utlization upper limit for resource distribution goals", "pr_createdAt": "2020-12-10T03:47:04Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1420", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDY2MQ==", "url": "https://github.com/linkedin/cruise-control/pull/1420#discussion_r540570661", "bodyText": "This looks incorrect to me.\nShouldn't we pick the maximum between the following:\n\nbalancingConstraint.lowUtilizationThreshold(resource) * balanceMargin and\navgUtilizationPercentage * (1 + balancePercentageWithMargin)", "author": "efeg", "createdAt": "2020-12-10T23:14:57Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/GoalUtils.java", "diffHunk": "@@ -530,7 +530,10 @@ public static double computeResourceUtilizationBalanceThreshold(double avgUtiliz\n \n     } else {\n       if (isLowUtilization) {\n-        return balancingConstraint.lowUtilizationThreshold(resource) * balanceMargin;\n+        double resourceBalanceUtilizationUpperLimit =\n+            Math.max(balancingConstraint.resourceBalancePercentage(resource) * avgUtilizationPercentage,\n+                     balancingConstraint.lowUtilizationThreshold(resource));\n+        return resourceBalanceUtilizationUpperLimit * balanceMargin;", "originalCommit": "f261928c0126cbf7dbe2d63ab14ca474ca1b9e31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MzQ2Ng==", "url": "https://github.com/linkedin/cruise-control/pull/1420#discussion_r540583466", "bodyText": "Right. This way does make more sense", "author": "Lincong", "createdAt": "2020-12-10T23:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MDY2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MTcxMA==", "url": "https://github.com/linkedin/cruise-control/pull/1420#discussion_r540571710", "bodyText": "Nit: Bad indentation", "author": "efeg", "createdAt": "2020-12-10T23:17:24Z", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/GoalUtilsTest.java", "diffHunk": "@@ -13,34 +13,51 @@\n public class GoalUtilsTest {\n \n   private static final double AVG_UTILIZATION_PERCENTAGE = 0.3;\n-  private static final double RESOURCE_BALANCE_THRESHOLD = 1.3;\n+  private static final double DEFAULT_RESOURCE_BALANCE_THRESHOLD = 1.3;\n   private static final double GOAL_VIOLATION_DISTRIBUTION_THRESHOLD_MULTIPLIER = 1.2;\n \n   @Test\n   public void testComputeResourceUtilizationBalanceThreshold() {\n     Resource resource = Resource.CPU;\n \n-    // Verify 1: Low utilization and compute balance threshold lower bound\n+    // Verify case 1: Low utilization and compute balance threshold lower bound\n     verifyComputingResourceUtilizationBalanceThreshold(resource, true, 0.4, 0.0);\n \n-    // Verify 2: Low utilization and compute balance threshold upper bound\n+    // Verify case 2: Low utilization and compute balance threshold upper bound\n     verifyComputingResourceUtilizationBalanceThreshold(resource, false, 0.4, 0.4 * ResourceDistributionGoal.BALANCE_MARGIN);\n \n-    // Verify 3: Not low utilization and compute balance threshold lower bound\n+    // Verify case 3: Low utilization. But the average utilization percentage * resource balance threshold > low resource utilization percentage\n+    double resourceBalanceThreshold = 1.6;\n+    double expectedComputedBalanceUpperLimit = resourceBalanceThreshold * AVG_UTILIZATION_PERCENTAGE * ResourceDistributionGoal.BALANCE_MARGIN;\n+    verifyComputingResourceUtilizationBalanceThreshold(resource, false, 0.4, expectedComputedBalanceUpperLimit, resourceBalanceThreshold);\n+\n+    // Verify case 4: Not low utilization and compute balance threshold lower bound\n     verifyComputingResourceUtilizationBalanceThreshold(resource, true, 0.2, 0.3 * (1 - ((1.3 * 1.2) - 1) * ResourceDistributionGoal.BALANCE_MARGIN));\n \n-    // Verify 4: Not low utilization and compute balance threshold upper bound\n+    // Verify case 5: Not low utilization and compute balance threshold upper bound\n     verifyComputingResourceUtilizationBalanceThreshold(resource, false, 0.2, 0.3 * (1 + ((1.3 * 1.2) - 1) * ResourceDistributionGoal.BALANCE_MARGIN));\n   }\n \n+  private void verifyComputingResourceUtilizationBalanceThreshold(Resource resource,\n+      boolean isLowerThreshold,\n+      double lowUtilizationThreshold,\n+      double expectedComputedBalanceThreshold) {", "originalCommit": "f261928c0126cbf7dbe2d63ab14ca474ca1b9e31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MzUxMA==", "url": "https://github.com/linkedin/cruise-control/pull/1420#discussion_r540583510", "bodyText": "Fixex", "author": "Lincong", "createdAt": "2020-12-10T23:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MTcxMA=="}], "type": "inlineReview"}, {"oid": "8e4bab1cf71adfa56fa735eefdc5d114fdc0dd8b", "url": "https://github.com/linkedin/cruise-control/commit/8e4bab1cf71adfa56fa735eefdc5d114fdc0dd8b", "message": "Relax low resource utlization upper limit for resource distribution goals", "committedDate": "2020-12-11T00:09:23Z", "type": "commit"}, {"oid": "41063c3d62bb3170273891f980c6977bcf6e7ae6", "url": "https://github.com/linkedin/cruise-control/commit/41063c3d62bb3170273891f980c6977bcf6e7ae6", "message": "Fix PR issues", "committedDate": "2020-12-11T00:09:23Z", "type": "commit"}, {"oid": "16f8fdf223d1925e552c0ff260aeb35d3d269c15", "url": "https://github.com/linkedin/cruise-control/commit/16f8fdf223d1925e552c0ff260aeb35d3d269c15", "message": "Small adjustment", "committedDate": "2020-12-11T00:09:23Z", "type": "commit"}, {"oid": "16f8fdf223d1925e552c0ff260aeb35d3d269c15", "url": "https://github.com/linkedin/cruise-control/commit/16f8fdf223d1925e552c0ff260aeb35d3d269c15", "message": "Small adjustment", "committedDate": "2020-12-11T00:09:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwMDczOA==", "url": "https://github.com/linkedin/cruise-control/pull/1420#discussion_r540600738", "bodyText": "Nit: (not introduced in this patch): Bad indentation\n    double computedBalanceThreshold = GoalUtils.computeResourceUtilizationBalanceThreshold(AVG_UTILIZATION_PERCENTAGE,\n                                                                                           resource,\n                                                                                           mockBalanceConstraint, \n                                                                                           true,\n                                                                                           ResourceDistributionGoal.BALANCE_MARGIN,\n                                                                                           isLowerThreshold);", "author": "efeg", "createdAt": "2020-12-11T00:28:15Z", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/GoalUtilsTest.java", "diffHunk": "@@ -40,7 +46,7 @@ private void verifyComputingResourceUtilizationBalanceThreshold(Resource resourc\n \n     BalancingConstraint mockBalanceConstraint = EasyMock.mock(BalancingConstraint.class);\n     EasyMock.expect(mockBalanceConstraint.lowUtilizationThreshold(resource)).andReturn(lowUtilizationThreshold).anyTimes();\n-    EasyMock.expect(mockBalanceConstraint.resourceBalancePercentage(resource)).andReturn(RESOURCE_BALANCE_THRESHOLD).anyTimes();\n+    EasyMock.expect(mockBalanceConstraint.resourceBalancePercentage(resource)).andReturn(DEFAULT_RESOURCE_BALANCE_THRESHOLD).anyTimes();\n     EasyMock.expect(mockBalanceConstraint.goalViolationDistributionThresholdMultiplier()).\n         andReturn(GOAL_VIOLATION_DISTRIBUTION_THRESHOLD_MULTIPLIER).anyTimes();\n ", "originalCommit": "16f8fdf223d1925e552c0ff260aeb35d3d269c15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "942f5ad5a766bdd2abd80cf4cd6632515d8652eb", "url": "https://github.com/linkedin/cruise-control/commit/942f5ad5a766bdd2abd80cf4cd6632515d8652eb", "message": "Fix indentation", "committedDate": "2020-12-11T00:38:12Z", "type": "commit"}]}