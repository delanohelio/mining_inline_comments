{"pr_number": 1281, "pr_title": "Fix issue #1264 incompatible EXTCODEHASH implementation, with hardfork", "pr_createdAt": "2020-07-24T14:45:34Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1281", "timeline": [{"oid": "d2e7865af2a39a7fbf75c764563623f16254153d", "url": "https://github.com/rsksmart/rskj/commit/d2e7865af2a39a7fbf75c764563623f16254153d", "message": "Fix issue #1264 incompatible EXTCODEHASH implementation, with hardfork", "committedDate": "2020-07-24T16:19:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1MzQ2Nw==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462453467", "bodyText": "was it agree by the team ?  hah", "author": "julianlen", "createdAt": "2020-07-29T17:07:24Z", "path": "rskj-core/src/main/java/org/ethereum/config/blockchain/upgrades/NetworkUpgrade.java", "diffHunk": "@@ -26,7 +26,8 @@\n     ORCHID_060(\"orchid060\"),\n     WASABI_100(\"wasabi100\"),\n     PAPYRUS_200(\"papyrus200\"),\n-    TWOTOTHREE(\"twoToThree\");\n+    TWOTOTHREE(\"twoToThree\"),\n+    COVID220(\"covid220\");", "originalCommit": "d2e7865af2a39a7fbf75c764563623f16254153d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2ODYwMA==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462468600", "bodyText": "It's wrong. The key is an address that it's a contract but without code. Then, we are in the case it has empty code. The answer should be KECCAK_256_OF_EMPTY_ARRAY", "author": "julianlen", "createdAt": "2020-07-29T17:32:16Z", "path": "rskj-core/src/main/java/org/ethereum/db/MutableRepository.java", "diffHunk": "@@ -158,21 +159,47 @@ public synchronized int getCodeLength(RskAddress addr) {\n     }\n \n     @Override\n-    public synchronized Keccak256 getCodeHash(RskAddress addr) {\n+    public synchronized Keccak256 getCodeHashNonStandard(RskAddress addr) {\n \n         if (!isExist(addr)) {\n             return Keccak256.ZERO_HASH;\n         }\n \n         if (!isContract(addr)) {\n-            return new Keccak256(\n-                    Keccak256Helper.keccak256(EMPTY_BYTE_ARRAY));\n+            return KECCAK_256_OF_EMPTY_ARRAY;\n         }\n \n         byte[] key = trieKeyMapper.getCodeKey(addr);\n-        return mutableTrie.getValueHash(key);\n-    }\n+        Keccak256 valueHash = mutableTrie.getValueHash(key);\n+\n+        if (valueHash == null) {\n+            //This is the non standard implementation we had pre RskipEXTCODEHASH implementation\n+            //and thus me must honor it.\n+            return Keccak256.ZERO_HASH;", "originalCommit": "d2e7865af2a39a7fbf75c764563623f16254153d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjI1OQ==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464452259", "bodyText": "This is the method that implements the previous behavior", "author": "nicops", "createdAt": "2020-08-03T14:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2ODYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2ODk5Nw==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462468997", "bodyText": "Well, this is correct", "author": "julianlen", "createdAt": "2020-07-29T17:32:59Z", "path": "rskj-core/src/main/java/org/ethereum/db/MutableRepository.java", "diffHunk": "@@ -158,21 +159,47 @@ public synchronized int getCodeLength(RskAddress addr) {\n     }\n \n     @Override\n-    public synchronized Keccak256 getCodeHash(RskAddress addr) {\n+    public synchronized Keccak256 getCodeHashNonStandard(RskAddress addr) {\n \n         if (!isExist(addr)) {\n             return Keccak256.ZERO_HASH;\n         }\n \n         if (!isContract(addr)) {\n-            return new Keccak256(\n-                    Keccak256Helper.keccak256(EMPTY_BYTE_ARRAY));\n+            return KECCAK_256_OF_EMPTY_ARRAY;\n         }\n \n         byte[] key = trieKeyMapper.getCodeKey(addr);\n-        return mutableTrie.getValueHash(key);\n-    }\n+        Keccak256 valueHash = mutableTrie.getValueHash(key);\n+\n+        if (valueHash == null) {\n+            //This is the non standard implementation we had pre RskipEXTCODEHASH implementation\n+            //and thus me must honor it.\n+            return Keccak256.ZERO_HASH;\n+        }\n+\n+        return valueHash;    }\n \n+    @Override\n+    public synchronized Keccak256 getCodeHashStandard(RskAddress addr) {\n+\n+        if (!isExist(addr)) {\n+            return Keccak256.ZERO_HASH;\n+        }\n+\n+        if (!isContract(addr)) {\n+            return KECCAK_256_OF_EMPTY_ARRAY;\n+        }\n+\n+        byte[] key = trieKeyMapper.getCodeKey(addr);\n+        Keccak256 valueHash = mutableTrie.getValueHash(key);\n+\n+        if (valueHash == null) {", "originalCommit": "d2e7865af2a39a7fbf75c764563623f16254153d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3MTEzNw==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462471137", "bodyText": "is zeroHash variable being used ?", "author": "julianlen", "createdAt": "2020-07-29T17:36:39Z", "path": "rskj-core/src/test/java/co/rsk/db/MutableTrieCacheTest.java", "diffHunk": "@@ -433,8 +433,8 @@ public void testGetValueNotStoredAndGetHash() {\n         byte[] wrongKey = toBytes(\"BOB\");\n         Keccak256 zeroHash = Keccak256.ZERO_HASH;", "originalCommit": "d2e7865af2a39a7fbf75c764563623f16254153d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "500c5c6aca365d668b602dfe5bb0e857334ddc0e", "url": "https://github.com/rsksmart/rskj/commit/500c5c6aca365d668b602dfe5bb0e857334ddc0e", "message": "Fix issue #1264 incompatible EXTCODEHASH implementation, with hardfork", "committedDate": "2020-08-03T14:31:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTYyOQ==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464939629", "bodyText": "can we mark this method with @Nullable annotation. Some IDE's and static code analysis tools will complain when calling methods on a result of this method without checking it for null.", "author": "Vovchyk", "createdAt": "2020-08-04T09:59:25Z", "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieCache.java", "diffHunk": "@@ -235,7 +235,7 @@ public Uint24 getValueLength(byte[] key) {\n \n     @Override\n     public Keccak256 getValueHash(byte[] key) {", "originalCommit": "500c5c6aca365d668b602dfe5bb0e857334ddc0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMTgyOA==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r465721828", "bodyText": "Changed it to Optional instead", "author": "nicops", "createdAt": "2020-08-05T13:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTgyMQ==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464939821", "bodyText": "Same here - @Nullable result", "author": "Vovchyk", "createdAt": "2020-08-04T09:59:48Z", "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieImpl.java", "diffHunk": "@@ -89,9 +89,8 @@ public Uint24 getValueLength(byte[] key) {\n     @Override\n     public Keccak256 getValueHash(byte[] key) {", "originalCommit": "500c5c6aca365d668b602dfe5bb0e857334ddc0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMTkyNQ==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r465721925", "bodyText": "Same, using Optional now", "author": "nicops", "createdAt": "2020-08-05T13:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk0MzgyOQ==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464943829", "bodyText": "2020 ? J", "author": "Vovchyk", "createdAt": "2020-08-04T10:07:16Z", "path": "rskj-core/src/test/java/co/rsk/vm/ExtCodeHashDslTest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2018 RSK Labs Ltd.", "originalCommit": "500c5c6aca365d668b602dfe5bb0e857334ddc0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a0881f53f3b0641a468575deb06c0a9fd8a99a7", "url": "https://github.com/rsksmart/rskj/commit/4a0881f53f3b0641a468575deb06c0a9fd8a99a7", "message": "Changed MutableTrie#getValueHash to return Optional", "committedDate": "2020-08-04T20:24:28Z", "type": "forcePushed"}, {"oid": "94acf60cd68963533897cfb2a7fd0e8d41affac5", "url": "https://github.com/rsksmart/rskj/commit/94acf60cd68963533897cfb2a7fd0e8d41affac5", "message": "Rename hardfork to iris", "committedDate": "2020-08-28T15:08:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3MzM4Ng==", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r479373386", "bodyText": "iris300?", "author": "patogallaiovlabs", "createdAt": "2020-08-28T15:19:48Z", "path": "rskj-core/src/main/resources/reference.conf", "diffHunk": "@@ -37,7 +37,7 @@ blockchain = {\n             rskip152 = papyrus200\n             rskip156 = papyrus200\n             rskipUMM = papyrus200\n-            rskip169 = hop\n+            rskip169 = iris", "originalCommit": "94acf60cd68963533897cfb2a7fd0e8d41affac5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2c87c35588ced35560b2309f805070cdcb8ec03b", "url": "https://github.com/rsksmart/rskj/commit/2c87c35588ced35560b2309f805070cdcb8ec03b", "message": "Rename hardfork to iris", "committedDate": "2020-09-02T15:08:50Z", "type": "forcePushed"}, {"oid": "21773f3faa38310c5b1e3ecf58294ae5113540bf", "url": "https://github.com/rsksmart/rskj/commit/21773f3faa38310c5b1e3ecf58294ae5113540bf", "message": "Fix issue #1264 incompatible EXTCODEHASH implementation, with hardfork", "committedDate": "2020-09-02T15:59:37Z", "type": "commit"}, {"oid": "ef990277ffe8d93e602bc42f78b252781bb2fe6b", "url": "https://github.com/rsksmart/rskj/commit/ef990277ffe8d93e602bc42f78b252781bb2fe6b", "message": "Changed MutableTrie#getValueHash to return Optional", "committedDate": "2020-09-02T15:59:37Z", "type": "commit"}, {"oid": "6988fdafbc6ca8b76375dfdb64814e170b37a2b9", "url": "https://github.com/rsksmart/rskj/commit/6988fdafbc6ca8b76375dfdb64814e170b37a2b9", "message": "Rename hardfork to iris300", "committedDate": "2020-09-02T16:09:22Z", "type": "commit"}, {"oid": "6988fdafbc6ca8b76375dfdb64814e170b37a2b9", "url": "https://github.com/rsksmart/rskj/commit/6988fdafbc6ca8b76375dfdb64814e170b37a2b9", "message": "Rename hardfork to iris300", "committedDate": "2020-09-02T16:09:22Z", "type": "forcePushed"}]}