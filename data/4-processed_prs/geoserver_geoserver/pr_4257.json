{"pr_number": 4257, "pr_title": "[GEOS-9627] vector tiles - buffer around tile is too small", "pr_createdAt": "2020-05-21T05:39:03Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4257", "timeline": [{"oid": "04402b8372791b983240b8db548ba14d1118e643", "url": "https://github.com/geoserver/geoserver/commit/04402b8372791b983240b8db548ba14d1118e643", "message": "fix VT oversampling buffer issue", "committedDate": "2020-05-21T05:31:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MTg5Ng==", "url": "https://github.com/geoserver/geoserver/pull/4257#discussion_r428471896", "bodyText": "Was getOverSampleX() an getOverSampleY() already part of the API?\nThere is some support for automatically determining the buffer from the style, or making use of the user suplied value (if the style is \"too dynamic\").", "author": "jodygarnett", "createdAt": "2020-05-21T06:35:29Z", "path": "src/extension/vectortiles/src/main/java/org/geoserver/wms/vector/VectorTileMapOutputFormat.java", "diffHunk": "@@ -114,6 +114,13 @@ public WebMap produceMap(final WMSMapContent mapContent) throws ServiceException\n                                     paintArea,\n                                     VectorMapRenderUtils.getMapScale(mapContent, renderingArea),\n                                     (FeatureType) featureSource.getSchema()));\n+            // buffer is in pixels (style pixels), need to convert to paint area pixels\n+            buffer *=\n+                    Math.max(\n+                            Math.max(\n+                                    this.tileBuilderFactory.getOversampleX(),\n+                                    this.tileBuilderFactory.getOversampleY()),", "originalCommit": "04402b8372791b983240b8db548ba14d1118e643", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4NTIzMQ==", "url": "https://github.com/geoserver/geoserver/pull/4257#discussion_r428485231", "bodyText": "There is actually a layer setting for the buffer, used when the style is too dynamic. This it's part of the layer metadata map, see usage here:\n\n  \n    \n      geoserver/src/wms/src/main/java/org/geoserver/wms/GetMap.java\n    \n    \n         Line 808\n      in\n      b76bba7\n    \n    \n    \n    \n\n        \n          \n           int[] layerBuffers = new int[layers.size()];", "author": "aaime", "createdAt": "2020-05-21T07:13:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MTg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4NjI4NA==", "url": "https://github.com/geoserver/geoserver/pull/4257#discussion_r428486284", "bodyText": "Also, looking at other code, should this be guarded? E.g., quoting other bits using the oversamplign factors:\nif (this.tileBuilderFactory.shouldOversampleScale()) {\nif (this.tileBuilderFactory.shouldOversampleScale()) {\n            paintArea =\n                    new Rectangle(\n                            this.tileBuilderFactory.getOversampleX() * mapWidth,\n                            this.tileBuilderFactory.getOversampleY() * mapHeight);\n        }\n}\n\nI'm also not familiar with this code, see the output format class has a oversampling factor, but the tile builder has two separate ones, not sure how related those are. \"git blame\" shows they have been coded by two different people, so it may well be they are not properly connected.", "author": "aaime", "createdAt": "2020-05-21T07:16:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MTg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MDExNg==", "url": "https://github.com/geoserver/geoserver/pull/4257#discussion_r428790116", "bodyText": "I've put the guard in, and fixed the byte/pixels typo.\nI think the in-the-query-buffer is already being handled;\nhttps://github.com/geoserver/geoserver/blob/master/src/extension/vectortiles/src/main/java/org/geoserver/wms/vector/PipelineBuilder.java#L298\n(NOTE: this might want to be multiplied by the oversample factor, but I'm not sure how people are using it).\nThe oversample factor is hard coded to 16, which is pretty high.  Perhaps we should drop this to 2 or 4?", "author": "davidblasby", "createdAt": "2020-05-21T17:07:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MTg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MDc5Ng==", "url": "https://github.com/geoserver/geoserver/pull/4257#discussion_r428790796", "bodyText": "Okay so oversampleX&Y are in part to support the hi-def displays, so a 512x512 \"pixel\" tile contains 4096x4096 detail (to support those 400 dpi phones do doubt).\nSo combining these two things: the layer buffer calculated from the style (or supplied by user override) x oversample should be correct.\nOnly remaining \"huh\" question is why there are different oversample X and Y...", "author": "jodygarnett", "createdAt": "2020-05-21T17:08:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MTg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwODYwNg==", "url": "https://github.com/geoserver/geoserver/pull/4257#discussion_r428808606", "bodyText": "I think the oversample factor was decided to support highres displays? I believe @travislbrundage did it, why not ask him directly? :-D", "author": "aaime", "createdAt": "2020-05-21T17:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MTg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MzY0MQ==", "url": "https://github.com/geoserver/geoserver/pull/4257#discussion_r428483641", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // here's the test - the buffer (from style) is 32 bytes\n          \n          \n            \n                    // here's the test - the buffer (from style) is 32 pixels", "author": "aaime", "createdAt": "2020-05-21T07:09:31Z", "path": "src/extension/vectortiles/src/test/java/org/geoserver/wms/vector/VectorTileMapOutputFormatTest.java", "diffHunk": "@@ -201,6 +203,34 @@ public void testNoRulesByScale() throws Exception {\n         assertTrue(q.getFilter() == Filter.EXCLUDE);\n     }\n \n+    // the calculated style buffer must account for oversampling\n+    @Test\n+    public void testBufferOversample() throws Exception {\n+        ReferencedEnvelope mapBounds = new ReferencedEnvelope(-90, 90, 0, 180, WGS84);\n+        Rectangle renderingArea = new Rectangle(256, 256);\n+\n+        WMSMapContent mapContent = createMapContent(mapBounds, renderingArea, 32, pointLayer);\n+\n+        MapBoxTileBuilderFactory mbbf = new MapBoxTileBuilderFactory();\n+        VectorTileMapOutputFormat vtof = new VectorTileMapOutputFormat(mbbf);\n+\n+        VectorTileMapOutputFormat vtof_spy = Mockito.spy(vtof);\n+\n+        // here's the test - the buffer (from style) is 32 bytes", "originalCommit": "04402b8372791b983240b8db548ba14d1118e643", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e0f83c6668428769501acad7965ae7816d2f603c", "url": "https://github.com/geoserver/geoserver/commit/e0f83c6668428769501acad7965ae7816d2f603c", "message": "dont oversample if not requested, typo fix", "committedDate": "2020-05-21T17:09:42Z", "type": "commit"}]}