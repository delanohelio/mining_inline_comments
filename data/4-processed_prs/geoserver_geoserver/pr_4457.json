{"pr_number": 4457, "pr_title": "[GEOS-9647] Black lives matter", "pr_createdAt": "2020-08-20T18:22:40Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4457", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4ODk3Mw==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474288973", "bodyText": "I think this could be confusing, in that \"geoserver\" isn't just the code. Its often the machine name (formally or informally) too. If its \"root\" then that is ambiguous with the Linux/Unix \"root\" operating system password.  Could it be called the \"keystore\" password or \"main GeoServer\" password?", "author": "bradh", "createdAt": "2020-08-20T21:42:34Z", "path": "doc/en/developer/source/programming-guide/security/index.rst", "diffHunk": "@@ -182,11 +182,11 @@ Password Policy\n ``PasswordPolicy`` is the interface for validating user passwords, applying constraints such\n as password length, character mix, etc...\n \n-MasterPasswordProvider\n+RootPasswordProvider\n ^^^^^^^^^^^^^^^^^^^^^^\n \n-Security service that provides a method for obtaining the GeoServer master password.\n-The master password serves two purposes.\n+Security service that provides a method for obtaining the GeoServer root password.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNzQ3Ng==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474317476", "bodyText": "I can change to \"keystore password\"", "author": "davidblasby", "createdAt": "2020-08-20T23:01:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4ODk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg2ODIxOA==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474868218", "bodyText": "I think keystone password works, as it is always used for this purpose. Allowing login as root is optional now.", "author": "jodygarnett", "createdAt": "2020-08-21T18:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4ODk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg2ODkxOQ==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474868919", "bodyText": "its already been changed to \"keystore password\"", "author": "davidblasby", "createdAt": "2020-08-21T18:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4ODk3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTU0Ng==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474289546", "bodyText": "Why \"primary\" rather than \"main\" here?", "author": "bradh", "createdAt": "2020-08-20T21:43:57Z", "path": "doc/en/developer/source/release-guide/index.rst", "diffHunk": "@@ -135,23 +135,23 @@ When creating the first release candidate of a series, there are some extra step\n      * ``doc/en/docguide/source/conf.py``\n      * ``doc/en/user/source/conf.py``\n \n-* Commit the changes and push to the master branch on GitHub::\n+* Commit the changes and push to the the main development branch branch on GitHub::\n \n       git commit -am \"Updated version to 2.12-SNAPSHOT, updated GeoTools dependency to 18-SNAPSHOT, updated GeoWebCache dependency to 1.12-SNAPSHOT, and related changes\"\n       git push geoserver master\n       \n-* Create the new RC version in `JIRA <https://osgeo-org.atlassian.net/projects/GEOS>`_ for issues on master; for example, if master is now ``2.12-SNAPSHOT``, create a Jira version ``2.12-RC1`` for the first release of the ``2.12.x`` series\n+* Create the new RC version in `JIRA <https://osgeo-org.atlassian.net/projects/GEOS>`_ for issues on the main development branch; for example, if the primary development branch is now ``2.12-SNAPSHOT``, create a Jira version ``2.12-RC1`` for the first release of the ``2.12.x`` series", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNzY3OA==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474317678", "bodyText": "yes - I noticed I did that a few times...  I think github is going to move from \"master\" to \"main\", so \"main development branch\" is better.", "author": "davidblasby", "createdAt": "2020-08-20T23:01:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTU0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MDgzMg==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474290832", "bodyText": "Orthogonal to this patch, but should \"them\" be \"then\"?", "author": "bradh", "createdAt": "2020-08-20T21:46:43Z", "path": "doc/en/user/source/community/jms-cluster/activemq/JDBC.rst", "diffHunk": "@@ -1,43 +1,43 @@\n-JDBC Master Slave\n-=================\n+JDBC Primary/Replica\n+====================\n \n If you are using pure JDBC and not using the high performance journal then you are generally relying on your database as your single point of failure and persistence engine. If you do not have really high performance requirements this approach can make a lot of sense as you have a single persistence engine to backup and manage etc.\n \n Startup\n -------\n \n-When using just JDBC as the data source you can use a Master Slave approach, running as many brokers as you wish as this diagram shows. On startup one master grabs an exclusive lock in the broker database - all other brokers are slaves and pause waiting for the exclusive lock.\n+When using just JDBC as the data source you can use a Primary/Replica approach, running as many brokers as you wish as this diagram shows. On startup one primary grabs an exclusive lock in the broker database - all other brokers are replicas and pause waiting for the exclusive lock.\n \n .. figure:: images/Startup.png\n    :align: center\n \n Clients should be using the Failover Transport to connect to the available brokers. e.g. using a URL something like the following\n failover:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)\n-Only the master broker starts up its transport connectors and so the clients can only connect to the master.\n+Only the primary broker starts up its transport connectors and so the clients can only connect to the primary.\n \n-Master failure\n+Primary failure\n --------------\n \n-If the master looses connection to the database or looses the exclusive lock then it immediately shuts down. If a master shuts down or fails, one of the other slaves will grab the lock and so the topology switches to the following diagram\n+If the primary looses connection to the database or looses the exclusive lock then it immediately shuts down. If a primary shuts down or fails, one of the other replicas will grab the lock and so the topology switches to the following diagram\n \n .. figure:: images/MasterFailed.png\n    :align: center\n \n-One of the other other slaves immediately grabs the exclusive lock on the database to them commences becoming the master, starting all of its transport connectors.\n-Clients loose connection to the stopped master and then the failover transport tries to connect to the available brokers - of which the only one available is the new master.\n-Master restart\n-At any time you can restart other brokers which join the cluster and start as slaves waiting to become a master if the master is shutdown or a failure occurs. So the following topology is created after a restart of an old master...\n+One of the other other replicas immediately grabs the exclusive lock on the database to them commences becoming the primary, starting all of its transport connectors.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNTU4MQ==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474315581", "bodyText": "@iant1212 already hooked up a spell check at some point, I think we are free to fix any mistakes like this as we see them.", "author": "jodygarnett", "createdAt": "2020-08-20T22:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MDgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTAzNQ==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474291035", "bodyText": "\"loose\" -> \"lose\"", "author": "bradh", "createdAt": "2020-08-20T21:47:09Z", "path": "doc/en/user/source/community/jms-cluster/activemq/JDBC.rst", "diffHunk": "@@ -1,43 +1,43 @@\n-JDBC Master Slave\n-=================\n+JDBC Primary/Replica\n+====================\n \n If you are using pure JDBC and not using the high performance journal then you are generally relying on your database as your single point of failure and persistence engine. If you do not have really high performance requirements this approach can make a lot of sense as you have a single persistence engine to backup and manage etc.\n \n Startup\n -------\n \n-When using just JDBC as the data source you can use a Master Slave approach, running as many brokers as you wish as this diagram shows. On startup one master grabs an exclusive lock in the broker database - all other brokers are slaves and pause waiting for the exclusive lock.\n+When using just JDBC as the data source you can use a Primary/Replica approach, running as many brokers as you wish as this diagram shows. On startup one primary grabs an exclusive lock in the broker database - all other brokers are replicas and pause waiting for the exclusive lock.\n \n .. figure:: images/Startup.png\n    :align: center\n \n Clients should be using the Failover Transport to connect to the available brokers. e.g. using a URL something like the following\n failover:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)\n-Only the master broker starts up its transport connectors and so the clients can only connect to the master.\n+Only the primary broker starts up its transport connectors and so the clients can only connect to the primary.\n \n-Master failure\n+Primary failure\n --------------\n \n-If the master looses connection to the database or looses the exclusive lock then it immediately shuts down. If a master shuts down or fails, one of the other slaves will grab the lock and so the topology switches to the following diagram\n+If the primary looses connection to the database or looses the exclusive lock then it immediately shuts down. If a primary shuts down or fails, one of the other replicas will grab the lock and so the topology switches to the following diagram\n \n .. figure:: images/MasterFailed.png\n    :align: center\n \n-One of the other other slaves immediately grabs the exclusive lock on the database to them commences becoming the master, starting all of its transport connectors.\n-Clients loose connection to the stopped master and then the failover transport tries to connect to the available brokers - of which the only one available is the new master.\n-Master restart\n-At any time you can restart other brokers which join the cluster and start as slaves waiting to become a master if the master is shutdown or a failure occurs. So the following topology is created after a restart of an old master...\n+One of the other other replicas immediately grabs the exclusive lock on the database to them commences becoming the primary, starting all of its transport connectors.\n+Clients loose connection to the stopped primary and then the failover transport tries to connect to the available brokers - of which the only one available is the new primary.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTQwOA==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474291408", "bodyText": "Again, maybe \"them\" -> \"then\"?", "author": "bradh", "createdAt": "2020-08-20T21:48:07Z", "path": "doc/en/user/source/community/jms-cluster/activemq/JDBC.rst", "diffHunk": "@@ -1,43 +1,43 @@\n-JDBC Master Slave\n-=================\n+JDBC Primary/Replica\n+====================\n \n If you are using pure JDBC and not using the high performance journal then you are generally relying on your database as your single point of failure and persistence engine. If you do not have really high performance requirements this approach can make a lot of sense as you have a single persistence engine to backup and manage etc.\n \n Startup\n -------\n \n-When using just JDBC as the data source you can use a Master Slave approach, running as many brokers as you wish as this diagram shows. On startup one master grabs an exclusive lock in the broker database - all other brokers are slaves and pause waiting for the exclusive lock.\n+When using just JDBC as the data source you can use a Primary/Replica approach, running as many brokers as you wish as this diagram shows. On startup one primary grabs an exclusive lock in the broker database - all other brokers are replicas and pause waiting for the exclusive lock.\n \n .. figure:: images/Startup.png\n    :align: center\n \n Clients should be using the Failover Transport to connect to the available brokers. e.g. using a URL something like the following\n failover:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)\n-Only the master broker starts up its transport connectors and so the clients can only connect to the master.\n+Only the primary broker starts up its transport connectors and so the clients can only connect to the primary.\n \n-Master failure\n+Primary failure\n --------------\n \n-If the master looses connection to the database or looses the exclusive lock then it immediately shuts down. If a master shuts down or fails, one of the other slaves will grab the lock and so the topology switches to the following diagram\n+If the primary looses connection to the database or looses the exclusive lock then it immediately shuts down. If a primary shuts down or fails, one of the other replicas will grab the lock and so the topology switches to the following diagram\n \n .. figure:: images/MasterFailed.png\n    :align: center\n \n-One of the other other slaves immediately grabs the exclusive lock on the database to them commences becoming the master, starting all of its transport connectors.\n-Clients loose connection to the stopped master and then the failover transport tries to connect to the available brokers - of which the only one available is the new master.\n-Master restart\n-At any time you can restart other brokers which join the cluster and start as slaves waiting to become a master if the master is shutdown or a failure occurs. So the following topology is created after a restart of an old master...\n+One of the other other replicas immediately grabs the exclusive lock on the database to them commences becoming the primary, starting all of its transport connectors.\n+Clients loose connection to the stopped primary and then the failover transport tries to connect to the available brokers - of which the only one available is the new primary.\n+Primary restart\n+At any time you can restart other brokers which join the cluster and start as replicas waiting to become a primary if the primary is shutdown or a failure occurs. So the following topology is created after a restart of an old primary...\n \n-Configuring JDBC Master Slave\n------------------------------\n+Configuring JDBC Primary/Replica\n+--------------------------------\n \n \n .. figure:: images/MasterRestarted.png\n    :align: center\n \n-By default if you use the <jdbcPersistenceAdapter/> to avoid the high performance journal you will be using JDBC Master Slave by default. You just need to run more than one broker and point the client side URIs to them to get master/slave. This works because they both try an acquire an exclusive lock on a shared table in the database and only one will succeed.\n+By default if you use the <jdbcPersistenceAdapter/> to avoid the high performance journal you will be using JDBC Primary/Replica by default. You just need to run more than one broker and point the client side URIs to them to get primary/replica. This works because they both try an acquire an exclusive lock on a shared table in the database and only one will succeed.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxOTcyOA==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474319728", "bodyText": "I think this is correct", "author": "davidblasby", "createdAt": "2020-08-20T23:08:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTQwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzczOTE2OA==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r477739168", "bodyText": "The sentence is correct them refers to the more than one broker", "author": "jodygarnett", "createdAt": "2020-08-27T00:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTQwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTcwMg==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474291702", "bodyText": "\"lose\"", "author": "bradh", "createdAt": "2020-08-20T21:48:50Z", "path": "doc/en/user/source/community/jms-cluster/activemq/SharedFolder.rst", "diffHunk": "@@ -44,22 +44,22 @@ Clients should be using the Failover Transport to connect to the available broke\n \n   failover:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)\n \n-Only the master broker starts up its transport connectors and so the clients can only connect to the master.\n+Only the primary broker starts up its transport connectors and so the clients can only connect to the primary.\n \n-Master failure\n+Primary failure\n --------------\n-If the master looses the exclusive lock then it immediately shuts down. If a master shuts down or fails, one of the other slaves will grab the lock and so the topology switches to the following diagram\n+If the primary looses the exclusive lock then it immediately shuts down. If a primary shuts down or fails, one of the other replicas will grab the lock and so the topology switches to the following diagram\n \n .. figure:: images/MasterFailed.png\n    :align: center\n \n-One of the other other slaves immediately grabs the exclusive lock on the file system to them commences becoming the master, starting all of its transport connectors.\n-Clients loose connection to the stopped master and then the failover transport tries to connect to the available brokers - of which the only one available is the new master.\n+One of the other other replicas immediately grabs the exclusive lock on the file system to them commences becoming the primary, starting all of its transport connectors.\n+Clients loose connection to the stopped primary and then the failover transport tries to connect to the available brokers - of which the only one available is the new primary.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNzU4Mw==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474317583", "bodyText": "@bradh do you have the ability as a geoserver team member to direct edit PR? I find it helpful for quickly correcting documentation sphinx mistakes before merging.", "author": "jodygarnett", "createdAt": "2020-08-20T23:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTcwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MjQyOA==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474292428", "bodyText": "\"dinamic routing\" -> \"dynamic routing\" just before the change you made", "author": "bradh", "createdAt": "2020-08-20T21:50:33Z", "path": "doc/en/user/source/community/jms-cluster/index.rst", "diffHunk": "@@ -43,17 +43,17 @@ It is composed by 3 distinct actors:\n This structure allows to have:\n \n 1. Queue fail-over components (using MOM).\n-2. Slaves down are automatically handled using durable topic (which will store message to re-synch changes happens if one of the slaves is down when the message was made available)\n-3. Master down will not affect any slave synchronization process.\n+2. Replica down are automatically handled using durable topic (which will store message to re-synch changes happens if one of the replicas is down when the message was made available)\n+3. Primary down will not affect any replicas synchronization process.\n \n This full blown deployment is composed by:\n \n-* A pure Master GeoServer(s), this instance can only send events to the topic. It cannot act as a slave\n-* A set of GeoServer which can work as both Master and Slave. These instances can send and receive messages to/from the topic. They can work as Masters (sending message to other subscribers) as well as Slaves (these instances are also subscribers of the topic).\n-* A set of pure Slaves GeoServer instances whic can only receive messages from the topic.\n+* A pure Primary GeoServer(s), this instance can only send events to the topic. It cannot act as a replica\n+* A set of GeoServer which can work as both Primary and Replica. These instances can send and receive messages to/from the topic. They can work as Primaries (sending message to other subscribers) as well as Replicas (these instances are also subscribers of the topic).\n+* A set of pure Replicas GeoServer instances whic can only receive messages from the topic.\n * A set of MOM brokers so that each GeoServer instance is configured with a set of available brokers (failover). Each broker use the shared database as persistence. Doing so if a broker fails for some reason, messages can still be written and read from the shared database.\n \n-All the produced code is based on spring-jms to ensure portability amongst different MOM, but if you look at the schema, we are also leveraging ActiveMQ VirtualTopics to get dinamic routing (you can dinamically attach masters and slaves).\n+All the produced code is based on spring-jms to ensure portability amongst different MOM, but if you look at the schema, we are also leveraging ActiveMQ VirtualTopics to get dinamic routing (you can dynamically attach primary and replica).", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MjcyNQ==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474292725", "bodyText": "main instead of primary here?", "author": "bradh", "createdAt": "2020-08-20T21:51:15Z", "path": "doc/en/user/source/community/monitor-hibernate/installation.rst", "diffHunk": "@@ -8,7 +8,7 @@ Installing the Hibernate Monitor Extension\n      If performing an upgrade of the monitor extension please see :ref:`monitor_upgrade`. \n   \n As a community module, the package needs to be downloaded from the `nightly builds <https://build.geoserver.org/geoserver/>`_,\n-picking the community folder of the corresponding GeoServer series (e.g. if working on GeoServer master nightly\n+picking the community folder of the corresponding GeoServer series (e.g. if working on GeoServer primary development branch nightly", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MzM3NQ==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474293375", "bodyText": "Maybe \"keystore\" here too.", "author": "bradh", "createdAt": "2020-08-20T21:52:45Z", "path": "doc/en/user/source/rest/api/masterpassword.rst", "diffHunk": "@@ -1,9 +1,9 @@\n .. _rest_api_masterpassword:\n \n-Master Password\n+Root Password", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MzY2MQ==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474293661", "bodyText": "suggest \"blank space\" or \"blank-space\"", "author": "bradh", "createdAt": "2020-08-20T21:53:32Z", "path": "doc/en/user/source/rest/api/styles.rst", "diffHunk": "@@ -161,7 +161,7 @@ The ``quietOnNotFound`` parameter avoids to log an Exception when the style is n\n ``pretty``\n ^^^^^^^^^^\n \n-The ``pretty`` parameter returns the style in a human-readable format, with proper whitespace and indentation. This parameter has no effect if you request a style in its native format - in this case the API returns the exact content of the underlying file. The HTML, XML, and JSON formats do not support this parameter.\n+The ``pretty`` parameter returns the style in a human-readable format, with proper blankspace and indentation. This parameter has no effect if you request a style in its native format - in this case the API returns the exact content of the underlying file. The HTML, XML, and JSON formats do not support this parameter.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwODgzMw==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474308833", "bodyText": "There is a second \"master password\" in this line.", "author": "bradh", "createdAt": "2020-08-20T22:34:54Z", "path": "doc/en/user/source/security/passwd.rst", "diffHunk": "@@ -85,23 +85,23 @@ The GeoServer keystore is password protected with a :ref:`security_master_passwd\n \n .. _security_master_passwd:\n \n-Master password\n+Root password\n ---------------\n \n-It is also possible to set a **master password** for GeoServer. This password serves two purposes:\n+It is also possible to set a **root password** for GeoServer. This password serves two purposes:\n \n * Protect access to the :ref:`keystore <security_passwd_keystore>`\n * Protect access to the GeoServer :ref:`security_root`\n \n-By default, the master password is generated and stored in a file named ``security/masterpw.info`` using plain text. When upgrading from an existing GeoServer data directory (versions 2.1.x and lower), the algorithm attempts to figure out the password of a user with the role ``ROLE_ADMINISTRATOR``. If such a password is found and the password length is 8 characters at minimum, GeoServer uses this password as master password. Again, the name of the chosen user is found in ``security/masterpw.info``. \n+By default, the root password is generated and stored in a file named ``security/masterpw.info`` using plain text. When upgrading from an existing GeoServer data directory (versions 2.1.x and lower), the algorithm attempts to figure out the password of a user with the role ``ROLE_ADMINISTRATOR``. If such a password is found and the password length is 8 characters at minimum, GeoServer uses this password as master password. Again, the name of the chosen user is found in ``security/masterpw.info``.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNjYyNQ==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474316625", "bodyText": "I think we are stuck with whitespace characters for a bit, part of the unicode standard etc. I spent some time researching and could not find any evidence of white space (a visual design concept) being considered in a racist context.", "author": "jodygarnett", "createdAt": "2020-08-20T22:58:27Z", "path": "doc/en/user/source/data/app-schema/tutorial.rst", "diffHunk": "@@ -80,7 +80,7 @@ For ``gsml:MappedFeature`` the file is ``workspaces/gsml/gsml_MappedFeature/data\n         </connectionParameters>\n     </dataStore>\n \n-.. note:: Ensure that there is no whitespace inside an ``entry`` element.\n+.. note:: Ensure that there is no blank-space inside an ``entry`` element.", "originalCommit": "3ba98c8d52e485ad661a2defedd3f8fefdce9d9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxODE1Nw==", "url": "https://github.com/geoserver/geoserver/pull/4457#discussion_r474318157", "bodyText": "I just made the change due to its proximity to the \"safe space\" term.", "author": "davidblasby", "createdAt": "2020-08-20T23:03:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNjYyNQ=="}], "type": "inlineReview"}, {"oid": "ee8ee2c7cbd736aeab78cde548defbd1170eff72", "url": "https://github.com/geoserver/geoserver/commit/ee8ee2c7cbd736aeab78cde548defbd1170eff72", "message": "[GEOS-9647] Update text to be more inclusive\n\nChange to:\n\n* allow-list / deny-list\n* primary/replica\n* main development branch in documentation\n* keystore password\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>", "committedDate": "2020-08-27T00:18:12Z", "type": "forcePushed"}, {"oid": "de8d9675f8bd0f595243274c3642344ed5b96839", "url": "https://github.com/geoserver/geoserver/commit/de8d9675f8bd0f595243274c3642344ed5b96839", "message": "update text to be more inclusive", "committedDate": "2020-08-27T03:17:13Z", "type": "commit"}, {"oid": "3837393424e7db50153e7981cf9131170addd07c", "url": "https://github.com/geoserver/geoserver/commit/3837393424e7db50153e7981cf9131170addd07c", "message": "changes for review", "committedDate": "2020-08-27T03:17:13Z", "type": "commit"}, {"oid": "7958bdaff28699db67beb6b5f4fa53fe8dbf951f", "url": "https://github.com/geoserver/geoserver/commit/7958bdaff28699db67beb6b5f4fa53fe8dbf951f", "message": "fix test case", "committedDate": "2020-08-27T03:17:13Z", "type": "commit"}, {"oid": "7958bdaff28699db67beb6b5f4fa53fe8dbf951f", "url": "https://github.com/geoserver/geoserver/commit/7958bdaff28699db67beb6b5f4fa53fe8dbf951f", "message": "fix test case", "committedDate": "2020-08-27T03:17:13Z", "type": "forcePushed"}, {"oid": "319b7e3c5ad3d8e1e9f27c36b6f63c1109eef870", "url": "https://github.com/geoserver/geoserver/commit/319b7e3c5ad3d8e1e9f27c36b6f63c1109eef870", "message": "fix sphinx warnings", "committedDate": "2020-08-27T05:16:55Z", "type": "commit"}]}