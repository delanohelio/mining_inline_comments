{"pr_number": 4270, "pr_title": "[GEOT-6577] Allow plugin to handle multiple valid date formats from elastic", "pr_createdAt": "2020-05-29T21:02:45Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4270", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4Nzk4Mg==", "url": "https://github.com/geoserver/geoserver/pull/4270#discussion_r439187982", "bodyText": "Just noticed an error here, wrong variable name. Also working on backwards compatibility, so will have to update these things.", "author": "travisb-fe", "createdAt": "2020-06-12T03:31:29Z", "path": "src/community/elasticsearch/src/main/java/org/geoserver/elasticsearch/ElasticConfigurationPage.java", "diffHunk": "@@ -326,10 +326,19 @@ protected Component getComponentForProperty(\n                                 return new Fragment(id, \"empty\", ElasticConfigurationPage.this);\n                             }\n                         } else if (property == ElasticAttributeProvider.DATE_FORMAT) {\n-                            if (att.getDateFormat() != null) {\n+                            List<String> validFormats = att.getValidDateFormats();\n+                            if (validFormats != null) {\n                                 Fragment f =\n                                         new Fragment(id, \"label\", ElasticConfigurationPage.this);\n-                                f.add(new Label(\"label\", String.valueOf(att.getDateFormat())));\n+                                String format = \"\";\n+                                for (int i = 0; i < validFormats.size(); i++) {\n+                                    if (i != valid_formats.size()) {", "originalCommit": "6467f6b5e144082f34f6d4489c8930111455761a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0241a298fca70d94220c92cfe25a498e157de31", "url": "https://github.com/geoserver/geoserver/commit/d0241a298fca70d94220c92cfe25a498e157de31", "message": "[GEOT-6577] Update documentation to reflect multiple valid date formats", "committedDate": "2020-07-03T00:39:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ5MTA5MA==", "url": "https://github.com/geoserver/geoserver/pull/4270#discussion_r450491090", "bodyText": "On the mailing list I discussed about using a Strategy pattern to interpret the date behaviour. However, due to how small the code sections are that use the date format, I found this way of handling it to be pretty straightforward, but I'm not sure it's the correct approach.\nIt does work that will be unnecessary for all future DataStores. Essentially this just \"corrects\" existing DataStores that were using the old date format. It could even be removed in a later release. Otherwise, I am not sure how old DataStores would ever get updated to use the new date format behaviour.\nThe Strategy option discussed would also work and be a permanent solution, but it wouldn't update old DataStores as far as I can tell. The old DataStores with the old date behaviour is technically incorrect and can fail to interpret Dates correctly. We could leave them alone and instruct users to recreate the DataStores with the new way of handling date formats (which would be handled via the Strategy, allowing both to exist simultaneously).\nI am not sure which approach is better here, but hopefully I made the intent clear. If this way is not recommended, and using the Strategy is more proper, I'll update to that.", "author": "travisb-fe", "createdAt": "2020-07-06T21:32:33Z", "path": "src/community/elasticsearch/src/main/java/org/geoserver/elasticsearch/ElasticConfigurationPage.java", "diffHunk": "@@ -305,10 +305,28 @@ protected Component getComponentForProperty(\n                                 return new Fragment(id, \"empty\", ElasticConfigurationPage.this);\n                             }\n                         } else if (property == ElasticAttributeProvider.DATE_FORMAT) {\n-                            if (att.getDateFormat() != null) {\n+                            List<String> validFormats = null;\n+                            if (att.getValidDateFormats() == null) {\n+                                if (att.getDateFormat() != null) {\n+                                    validFormats = new ArrayList<String>();\n+                                    validFormats.add(att.getDateFormat());\n+                                    att.setValidDateFormats(validFormats);\n+                                }\n+                            } else {\n+                                validFormats = att.getValidDateFormats();\n+                            }", "originalCommit": "f554b1a7218ccac272708e5513ae1413ad706ed0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f1486e99c8a3b6a43b3ed515a5296414a36cb490", "url": "https://github.com/geoserver/geoserver/commit/f1486e99c8a3b6a43b3ed515a5296414a36cb490", "message": "[GEOT-6577] Handle multiple valid date formats in UI", "committedDate": "2021-02-10T19:37:43Z", "type": "commit"}, {"oid": "895a509edc3f7a4ec69ef733f2fae187ce8cb780", "url": "https://github.com/geoserver/geoserver/commit/895a509edc3f7a4ec69ef733f2fae187ce8cb780", "message": "[GEOT-6577] Update documentation to reflect multiple valid date formats", "committedDate": "2021-02-10T19:37:43Z", "type": "commit"}, {"oid": "ef55fd4018840fd21bfd52ea23bcbdac74a12e68", "url": "https://github.com/geoserver/geoserver/commit/ef55fd4018840fd21bfd52ea23bcbdac74a12e68", "message": "[GEOT-6577] Adding catch to support old date format", "committedDate": "2021-02-10T19:37:43Z", "type": "commit"}, {"oid": "ef55fd4018840fd21bfd52ea23bcbdac74a12e68", "url": "https://github.com/geoserver/geoserver/commit/ef55fd4018840fd21bfd52ea23bcbdac74a12e68", "message": "[GEOT-6577] Adding catch to support old date format", "committedDate": "2021-02-10T19:37:43Z", "type": "forcePushed"}]}