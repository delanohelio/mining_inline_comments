{"pr_number": 3156, "pr_title": "KOGITO-879 KOGITO-880 KOGITO-881: State Control API (undo/redo)", "pr_createdAt": "2020-02-12T15:34:16Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3156", "timeline": [{"oid": "7004856f059f375f6d8539525e18a2e00fe58a1c", "url": "https://github.com/kiegroup/kie-wb-common/commit/7004856f059f375f6d8539525e18a2e00fe58a1c", "message": "- Enforcer dependency fix.", "committedDate": "2020-02-12T18:50:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4OTAxOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379389018", "bodyText": "What is the purpose of this event?! I see it fired by the command registry when commands are executed/undone (by setting the Registry's Change Listener) however I could not find any observers of the event (in kie-wb-common or appformer) so wonder what is its reason to exist!", "author": "manstis", "createdAt": "2020-02-14T11:45:08Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/session/DMNEditorSession.java", "diffHunk": "@@ -68,11 +70,13 @@\n     public DMNEditorSession(final ManagedSession session,\n                             final CanvasCommandManager<AbstractCanvasHandler> canvasCommandManager,\n                             final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n-                            final ClientCommandRegistry<org.kie.workbench.common.stunner.core.command.Command<AbstractCanvasHandler, CanvasViolation>> clientCommandRegistry) {\n+                            final CommandRegistry<org.kie.workbench.common.stunner.core.command.Command<AbstractCanvasHandler, CanvasViolation>> commandRegistry,\n+                            final Event<RegisterChangedEvent> registerChangedEvent) {", "originalCommit": "7004856f059f375f6d8539525e18a2e00fe58a1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NTk2NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379475964", "bodyText": "@manstis good question. The old ClientCommandRegistry was firing this event when changes on the registry were happening. Honestly I don't know why it's used, I just wrapped the event trigger on the RCL.", "author": "pefernan", "createdAt": "2020-02-14T14:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4OTAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTU0OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379395549", "bodyText": "I struggle with this...\nI'd much prefer RedoSessionCommand to be written for Business Central (i.e. binds to session.getKeyboardControl().. control, L#74). Then have another (CDI) @Specializes implementation here that works with KogitoStateControlInitializer).\nI'd also like to have seen more re-use of EditorContextProvider.getChannel() as opposed to KogitoStateControlInitializer.isKogitoEnabled() to determine the environment in which the editor is running.", "author": "manstis", "createdAt": "2020-02-14T12:02:13Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/RedoSessionCommand.java", "diffHunk": "@@ -44,26 +45,34 @@\n public class RedoSessionCommand extends AbstractClientSessionCommand<EditorSession> {\n \n     private final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager;\n-    private final ClientRedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler;\n+    private final RedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler;\n+    private final KogitoStateControlInitializer stateControlInitializer;\n \n     protected RedoSessionCommand() {\n-        this(null,\n-             null);\n+        this(null, null, null);\n     }\n \n     @Inject\n     public RedoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n-                              final ClientRedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler) {\n+                              final RedoCommandHandler<Command<AbstractCanvasHandler, CanvasViolation>> redoCommandHandler,\n+                              final KogitoStateControlInitializer stateControlInitializer) {\n         super(false);\n         this.redoCommandHandler = redoCommandHandler;\n         this.sessionCommandManager = sessionCommandManager;\n+        this.stateControlInitializer = stateControlInitializer;\n     }\n \n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n         redoCommandHandler.setSession(getSession());\n+\n+        //If running in Kogito we should initialize the Kogito StateControl undo/redo commands. Otherwise we should keep the key binding.", "originalCommit": "7004856f059f375f6d8539525e18a2e00fe58a1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwNzE3MA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379407170", "bodyText": "@romartin FYI... my suggestion would mean BPMN-kogito would need to extend the referenced module (IIUC that is yet to be done.. but this could be a good catalyst to ensure it's completed sooner than later!)", "author": "manstis", "createdAt": "2020-02-14T12:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NzI4NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r379477284", "bodyText": "@manstis I think you're right on the @specializes, Monday I'll work on that. The change that introduced the channel wasn't there when I started, I'll reuse that too.", "author": "pefernan", "createdAt": "2020-02-14T15:02:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5NTU0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNDc0MQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r380114741", "bodyText": "Could you please clarify why this is needed in non-kogito modules?", "author": "jomarko", "createdAt": "2020-02-17T10:57:50Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-standalone/pom.xml", "diffHunk": "@@ -537,6 +537,17 @@\n     <dependency>\n       <groupId>com.google.elemental2</groupId>\n       <artifactId>elemental2-promise</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-js-bridge</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>\n+      <scope>provided</scope>", "originalCommit": "7004856f059f375f6d8539525e18a2e00fe58a1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5OTMwOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r381299308", "bodyText": "I agree with @jomarko (and it's a great spot!) only the -kogito related modules should have dependencies on other -kogito modules which suggests a restructuring of the code in these PRs is needed (to move interfaces and default - Business Central - implementations from appformer-kogito-bridge to some where more generic in appformer and keep kogito specific implementations alone in appformer-kogito-bridge etc).", "author": "manstis", "createdAt": "2020-02-19T13:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNDc0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExNTMwOQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r380115309", "bodyText": "formatting", "author": "jomarko", "createdAt": "2020-02-17T10:59:02Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/UndoSessionCommand.java", "diffHunk": "@@ -42,17 +43,26 @@\n public class UndoSessionCommand extends AbstractClientSessionCommand<EditorSession> {\n \n     private final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager;\n+    private final KogitoStateControlInitializer stateControlInitializer;\n \n     @Inject\n-    public UndoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager) {\n+    public UndoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> sessionCommandManager,\n+                              final KogitoStateControlInitializer stateControlInitializer) {\n         super(false);\n         this.sessionCommandManager = sessionCommandManager;\n+        this.stateControlInitializer = stateControlInitializer;\n     }\n \n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n+\n+        //If running in Kogito we should initialize the Kogito StateControl undo/redo commands. Otherwise we should keep the key binding.\n+        if(stateControlInitializer.isKogitoEnabled()) {", "originalCommit": "7004856f059f375f6d8539525e18a2e00fe58a1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c652aa290f21025e5af17a4852b69ad482e58564", "url": "https://github.com/kiegroup/kie-wb-common/commit/c652aa290f21025e5af17a4852b69ad482e58564", "message": "- Code improvements.", "committedDate": "2020-02-18T17:11:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMTEwOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r381301108", "bodyText": "Did you want to remove this block?", "author": "manstis", "createdAt": "2020-02-19T13:50:28Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/test/java/org/kie/workbench/common/stunner/core/client/session/command/impl/UndoSessionCommandTest.java", "diffHunk": "@@ -167,4 +167,28 @@ public void testOnCommandExecutedCheckWrongSession() {\n         verify(commandRegistry,\n                never()).clear();\n     }\n+/*", "originalCommit": "c652aa290f21025e5af17a4852b69ad482e58564", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTQwOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383351408", "bodyText": "@pefernan what about these commented tests?", "author": "jomarko", "createdAt": "2020-02-24T15:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMTEwOA=="}], "type": "inlineReview"}, {"oid": "6a6421363144a681d09ea3127e895794e48ea716", "url": "https://github.com/kiegroup/kie-wb-common/commit/6a6421363144a681d09ea3127e895794e48ea716", "message": "- Code improvements.", "committedDate": "2020-02-21T17:33:50Z", "type": "forcePushed"}, {"oid": "9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "url": "https://github.com/kiegroup/kie-wb-common/commit/9af476b85e01ade4d9f8d71c6ce0016b1de3184c", "message": "- Code improvements.", "committedDate": "2020-02-24T09:34:23Z", "type": "forcePushed"}, {"oid": "9064ebe3c09937f89f17743d9b2475a18c86d360", "url": "https://github.com/kiegroup/kie-wb-common/commit/9064ebe3c09937f89f17743d9b2475a18c86d360", "message": "- Code improvements.", "committedDate": "2020-02-24T12:35:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NzU3Mg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383347572", "bodyText": "Please could you explain why kie-wb-common-dmn-client doesn't need a dependency for the module where the CommandRegistry was introduced?", "author": "jomarko", "createdAt": "2020-02-24T15:51:30Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/session/DMNEditorSessionTest.java", "diffHunk": "@@ -20,6 +20,7 @@\n import java.util.Map;\n \n import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.appformer.kogito.api.stateControl.registry.CommandRegistry;", "originalCommit": "9064ebe3c09937f89f17743d9b2475a18c86d360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM3MzUxMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383373513", "bodyText": "It has a dep to kie-wb-common-stunner-client-common that already has a dep to appformer-kogito-api.", "author": "pefernan", "createdAt": "2020-02-24T16:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NzU3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTEyMQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383349121", "bodyText": "Don't we need to inherit those appformer-kogito-api and appformer-kogito-bridge ?", "author": "jomarko", "createdAt": "2020-02-24T15:53:44Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/src/main/resources/org/kie/workbench/common/dmn/showcase/DMNKogitoRuntimeWebapp.gwt.xml", "diffHunk": "@@ -19,6 +19,7 @@\n <module>\n \n   <inherits name=\"org.kie.workbench.common.dmn.webapp.kogito.common.DMNWebappKogitoCommon\"/>\n+  <inherits name=\"org.kie.workbench.common.stunner.kogito.runtime.StunnerKogitoRuntimeCommon\"/>", "originalCommit": "9064ebe3c09937f89f17743d9b2475a18c86d360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM3MDI0MQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383370241", "bodyText": "Actually the StunnerKogitoRuntimeCommon is already doing inheriting them.", "author": "pefernan", "createdAt": "2020-02-24T16:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTEyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NzUxNA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383357514", "bodyText": "I think should be added to AbstractClientSessionCommand (or higher) interface level with javadoc what is purpose of this method", "author": "jomarko", "createdAt": "2020-02-24T16:06:48Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/RedoSessionCommand.java", "diffHunk": "@@ -62,8 +61,13 @@ public RedoSessionCommand(final SessionCommandManager<AbstractCanvasHandler> ses\n     @Override\n     public void bind(final EditorSession session) {\n         super.bind(session);\n-        session.getKeyboardControl().addKeyShortcutCallback(this::onKeyDownEvent);\n         redoCommandHandler.setSession(getSession());\n+\n+        bindCommand();", "originalCommit": "9064ebe3c09937f89f17743d9b2475a18c86d360", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4NjcyMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r383386723", "bodyText": "The problem here is that those methods are only required for undo/redo sessioncommand, moving it up on the inheritance tree could cause a big refactor.", "author": "pefernan", "createdAt": "2020-02-24T16:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NzUxNA=="}], "type": "inlineReview"}, {"oid": "f1cf3ed127111fe17378df58d5c957dc9454de6d", "url": "https://github.com/kiegroup/kie-wb-common/commit/f1cf3ed127111fe17378df58d5c957dc9454de6d", "message": "- Code suggestions", "committedDate": "2020-02-24T17:41:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MzgxNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384153815", "bodyText": "scope shoudn't be provided?", "author": "romartin", "createdAt": "2020-02-25T22:02:53Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-runtime-common/pom.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kie-wb-common-stunner-kogito</artifactId>\n+    <groupId>org.kie.workbench.stunner</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kie-wb-common-stunner-kogito-runtime-common</artifactId>\n+  <name>Kie Workbench - Common - Stunner - Kogito Runtime Common</name>\n+  <description>Kie Workbench - Common - Stunner - Kogito Runtime Common</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>", "originalCommit": "97656c210409443b5df264755f73a0224449efe6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0NTE2OA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384345168", "bodyText": "@romartin I thought the provided was only relevant for showcase webaps, np with that.\nThe idea of kie-wb-common-stunner-kogito-runtime-common is to keep the base stunner stuff for kogito webaps (here I added the specific specialization of Undo/RedoSessionCommands for kogito). To me is OK moving stuff from kie-wb-common-stunner-kogito-runtime-common to kie-wb-common-kogito-webapp-base module, but this means that kie-wb-common-kogito-webapp-base will have deps to kie-wb-common-stunner-client-common. Not sure if that's something we want but if we all agree I'll do it.", "author": "pefernan", "createdAt": "2020-02-26T08:48:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MzgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0OTk3Mw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384349973", "bodyText": "@romartin @pefernan kie-wb-common-kogito-webapp-base is where we've been keeping (client-side) stuff that is common to the webapps needed for kogito editors; so it makes sense to merge @pefernan new module with it. That said I'm happy with the PRs so any further improvements are \"icing on the cake\".", "author": "manstis", "createdAt": "2020-02-26T08:58:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MzgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1NTUzMQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384355531", "bodyText": "Ok, if you both agree going to move everything there, to me that's fine.", "author": "pefernan", "createdAt": "2020-02-26T09:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MzgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwODY5Mg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384808692", "bodyText": "so what I'm only trying to achieve is not adding new modules guys, because that makes everything complex...\nOn the other hand, as @manstis describes above, the kie-wb-common-kogito-webapp-base is a common module for kogito editors, which I understand is not just about Stunner, so I don't like the idea ok making kie-wb-common-kogito-webapp-base module depend on Stunner (kie-wb-common-stunner-client-common), but we don't have other quick solution I guess.\nSo well I will not block the PR for this too, was just a suggestion - given the small amount of code, no need for a new module, and also because we recently added some \"common\" module too... too many \"common\" :) But anyway, up to you guys as well, it's my own opinion but yours counts as mine!", "author": "romartin", "createdAt": "2020-02-26T22:33:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MzgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwOTM2OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384809369", "bodyText": "@pefernan good point about provided , my bad, it makes no difference here!", "author": "romartin", "createdAt": "2020-02-26T22:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MzgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1Mzg1MA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384153850", "bodyText": "scope shoudn't be provided?", "author": "romartin", "createdAt": "2020-02-25T22:02:58Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-runtime-common/pom.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kie-wb-common-stunner-kogito</artifactId>\n+    <groupId>org.kie.workbench.stunner</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kie-wb-common-stunner-kogito-runtime-common</artifactId>\n+  <name>Kie Workbench - Common - Stunner - Kogito Runtime Common</name>\n+  <description>Kie Workbench - Common - Stunner - Kogito Runtime Common</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.workbench.stunner</groupId>\n+      <artifactId>kie-wb-common-stunner-client-api</artifactId>", "originalCommit": "97656c210409443b5df264755f73a0224449efe6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwOTQ3Nw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384809477", "bodyText": "nope, it should not :) Sorry", "author": "romartin", "createdAt": "2020-02-26T22:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1Mzg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1Mzg4OA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384153888", "bodyText": "scope shoudn't be provided?", "author": "romartin", "createdAt": "2020-02-25T22:03:02Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-runtime-common/pom.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kie-wb-common-stunner-kogito</artifactId>\n+    <groupId>org.kie.workbench.stunner</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kie-wb-common-stunner-kogito-runtime-common</artifactId>\n+  <name>Kie Workbench - Common - Stunner - Kogito Runtime Common</name>\n+  <description>Kie Workbench - Common - Stunner - Kogito Runtime Common</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.uberfire</groupId>\n+      <artifactId>appformer-kogito-bridge</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.workbench.stunner</groupId>\n+      <artifactId>kie-wb-common-stunner-client-api</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.workbench.stunner</groupId>\n+      <artifactId>kie-wb-common-stunner-client-common</artifactId>", "originalCommit": "97656c210409443b5df264755f73a0224449efe6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwOTUyOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3156#discussion_r384809528", "bodyText": "nope, it should not :) Sorry", "author": "romartin", "createdAt": "2020-02-26T22:35:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1Mzg4OA=="}], "type": "inlineReview"}, {"oid": "400275abbe96222d9265404b024c62dd4f0b0d51", "url": "https://github.com/kiegroup/kie-wb-common/commit/400275abbe96222d9265404b024c62dd4f0b0d51", "message": "KOGITO-879: Define State Control API\nKOGITO-880: Create JSInterop layer for StateControl API\nKOGITO-881: Integrate State Control API in Stunner to handle Undo & Redo", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "1c3d08240d8d587e7eea5fda063c38f36783133d", "url": "https://github.com/kiegroup/kie-wb-common/commit/1c3d08240d8d587e7eea5fda063c38f36783133d", "message": "- Enforcer dependency fix.", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "ade958e85ecbc6bd1022c7ec6958ff489eca30f7", "url": "https://github.com/kiegroup/kie-wb-common/commit/ade958e85ecbc6bd1022c7ec6958ff489eca30f7", "message": "- Code improvements.", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "8742f5fd87e394633372877c6273025c67a2a8d1", "url": "https://github.com/kiegroup/kie-wb-common/commit/8742f5fd87e394633372877c6273025c67a2a8d1", "message": "- Code improvements.", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "668351dc7888158065c61893f3e4a14b55082b55", "url": "https://github.com/kiegroup/kie-wb-common/commit/668351dc7888158065c61893f3e4a14b55082b55", "message": "- Code suggestions", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "b53bf5860a19624f45e4b6e386071ea8e7ef6ef3", "url": "https://github.com/kiegroup/kie-wb-common/commit/b53bf5860a19624f45e4b6e386071ea8e7ef6ef3", "message": "- Module renaming", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "90b8355af725c2554a625b93e37cb107fba8a07c", "url": "https://github.com/kiegroup/kie-wb-common/commit/90b8355af725c2554a625b93e37cb107fba8a07c", "message": "- Class renames", "committedDate": "2020-02-27T16:05:49Z", "type": "commit"}, {"oid": "90b8355af725c2554a625b93e37cb107fba8a07c", "url": "https://github.com/kiegroup/kie-wb-common/commit/90b8355af725c2554a625b93e37cb107fba8a07c", "message": "- Class renames", "committedDate": "2020-02-27T16:05:49Z", "type": "forcePushed"}]}