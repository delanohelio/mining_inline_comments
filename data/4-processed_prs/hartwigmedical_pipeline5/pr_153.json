{"pr_number": 153, "pr_title": "DEV-1279 Copy all single-pipeline files on rerun", "pr_createdAt": "2020-05-20T22:28:49Z", "pr_url": "https://github.com/hartwigmedical/pipeline5/pull/153", "timeline": [{"oid": "915dbcd985ad8b13c478bb29fcb976aa208a8f1f", "url": "https://github.com/hartwigmedical/pipeline5/commit/915dbcd985ad8b13c478bb29fcb976aa208a8f1f", "message": "DEV-1279 Copy all single-pipeline files on rerun\n\nWe encountered a failure in production in which a failure in the CRAM\nstage resulted in a rerun of the pipeline, but after the rerun succeeded\nthe output directory did not contain the files from the sample that had\nfailed the first time (none of them; the subdirectory for the sample\nitself wasn't even present).\n\nLooks like the reason for this was that the flag file which tells the\npipeline that the staging directory has been populated was left-over\nfrom the first run, which meant that upon re-run the pipeline didn't\nwait for the files to be copied from the staging bucket into the final\narchive bucket.\n\nAlso improve logging output for post-applied operations to make\ndebugging this problem easier.", "committedDate": "2020-05-20T22:27:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM1ODgxNg==", "url": "https://github.com/hartwigmedical/pipeline5/pull/153#discussion_r428358816", "bodyText": "How do these toStrings relate to the bug?", "author": "pauldwolfe", "createdAt": "2020-05-20T23:12:16Z", "path": "cluster/src/main/java/com/hartwig/pipeline/metadata/AddDatatypeToFile.java", "diffHunk": "@@ -21,4 +23,9 @@ public void apply(final SbpRestApi api, final AddFileApiResponse file) {\n     public String path() {\n         return path;\n     }\n+\n+    @Override\n+    public String toString() {", "originalCommit": "915dbcd985ad8b13c478bb29fcb976aa208a8f1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzNDM2MQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/153#discussion_r428634361", "bodyText": "I mentioned in the commit message but the detail is that as part of testing this change I made the pipeline temporarily fail on only one of the CRAM operations. It was useful to be able to see that the correct one was being registered at the end of the run (all the operations that are applied already get logged) and having a proper toString on the operations provided that.", "author": "nedleitch", "createdAt": "2020-05-21T12:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM1ODgxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2MDY2NQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/153#discussion_r428360665", "bodyText": "Why is the STAGING_COMPETE flag written if the single sample pipeline failed? Is there any way we can fix this such that staging complete isn't written when CRAM fails and the somatic pipeline is never kicked off?", "author": "pauldwolfe", "createdAt": "2020-05-20T23:18:14Z", "path": "cluster/src/main/java/com/hartwig/pipeline/report/PipelineResults.java", "diffHunk": "@@ -97,4 +97,12 @@ private void writeComplete(final String name) {\n     private String path(final String name, final Folder folder, final String fileName) {\n         return String.format(\"%s/%s%s\", name, folder.name(), fileName);\n     }\n+\n+    public void initialise(final Arguments arguments, final SingleSampleRunMetadata metadata) {", "originalCommit": "915dbcd985ad8b13c478bb29fcb976aa208a8f1f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "84431c1379cda70658f09b6467f69c48b2d213a2", "url": "https://github.com/hartwigmedical/pipeline5/commit/84431c1379cda70658f09b6467f69c48b2d213a2", "message": "DEV-1279 Improve naming for cleanup", "committedDate": "2020-05-21T14:51:45Z", "type": "commit"}]}