{"pr_number": 168, "pr_title": "DEV-1386 Link to datatype/sample once per file", "pr_createdAt": "2020-07-18T20:00:47Z", "pr_url": "https://github.com/hartwigmedical/pipeline5/pull/168", "timeline": [{"oid": "db376bb357ce621aa4dcab1231df91b43b2c13db", "url": "https://github.com/hartwigmedical/pipeline5/commit/db376bb357ce621aa4dcab1231df91b43b2c13db", "message": "DEV-1386 Link to datatype/sample once per file\n\nNot precisely sure yet why sometimes multiple copies of the\nsame operation are requested but it is not incorrect to store\nand apply the operations in a set rather than a list.", "committedDate": "2020-07-18T19:58:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgyNDE2Nw==", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r456824167", "bodyText": "As neither implementation of ApiFileOperation implement equals/hashcode this is only ensuring that the same reference isn't in the collection twice, which feels like masking another bug. I think we should keep going until we find where that is happening.\nStill fine to keep idea but maybe then better we check for duplicates and log something before removing them?", "author": "pauldwolfe", "createdAt": "2020-07-18T20:18:02Z", "path": "cluster/src/main/java/com/hartwig/pipeline/transfer/SbpFileApiUpdate.java", "diffHunk": "@@ -30,14 +30,15 @@\n     private final SbpRun sbpRun;\n     private final Bucket sourceBucket;\n     private final SbpRestApi sbpApi;\n-    private final List<ApiFileOperation> fileOperations = new ArrayList<>();\n+    private final Set<ApiFileOperation> fileOperations;", "originalCommit": "db376bb357ce621aa4dcab1231df91b43b2c13db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ca685be9080aeca417f357e2744226bd3ce3157c", "url": "https://github.com/hartwigmedical/pipeline5/commit/ca685be9080aeca417f357e2744226bd3ce3157c", "message": "DEV-1386 Log when operations are removed\n\nThis is looking more and more like a race condition, I have\nnot been able to reproduce it locally recently. Until it has\nbeen tracked down definitively, try logging when we see a\nduplicate operation.", "committedDate": "2020-07-21T15:16:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5MTU1OQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r458291559", "bodyText": "I would suggest reverting all this to get back to a place where you can duplicate the bug. I don't see a possible concurrency issue as the new code only processes the list which should already contain the duplicate. If you can't duplicate it after that, it suggests we still don't quite understand the problem.", "author": "pauldwolfe", "createdAt": "2020-07-21T18:07:39Z", "path": "cluster/src/main/java/com/hartwig/pipeline/transfer/SbpFileApiUpdate.java", "diffHunk": "@@ -59,14 +62,26 @@ public void accept(final Blob blob) {\n \n                 for (ApiFileOperation fileOperation : fileOperations) {\n                     if (fileOperation.path().equals(blob.getName().substring(blob.getName().indexOf(\"/\") + 1))) {\n-                        LOGGER.info(\"Applying: {}\", fileOperation);\n+                        LOGGER.info(\"Applying [{}] for [{}]\", fileOperation, blob.getName());\n                         fileOperation.apply(sbpApi, fileResponse);\n                     }\n                 }\n             }\n         }\n     }\n \n+    private void storeOperations(List<StageOutput> stageOutputs) {", "originalCommit": "ca685be9080aeca417f357e2744226bd3ce3157c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3Nzc2NA==", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r458977764", "bodyText": "I don't think we should keep this code, its a little confusing when you don't have the full context of why its here. If we do keep, the second info statement should probably be a WARN.", "author": "pauldwolfe", "createdAt": "2020-07-22T17:54:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5MTU1OQ=="}], "type": "inlineReview"}, {"oid": "23baa8cfe9628f33137de77405f432ea0bcf50cf", "url": "https://github.com/hartwigmedical/pipeline5/commit/23baa8cfe9628f33137de77405f432ea0bcf50cf", "message": "DEV-1386 Make a copy of single sample state after alignment\n\nOtherwise we can end up adding the post-alignment steps twice to the state.", "committedDate": "2020-07-22T16:24:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkzMzc0NQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/168#discussion_r458933745", "bodyText": "[Package?] private?", "author": "nedleitch", "createdAt": "2020-07-22T16:42:15Z", "path": "cluster/src/main/java/com/hartwig/pipeline/PipelineState.java", "diffHunk": "@@ -13,7 +13,15 @@\n public class PipelineState {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(PipelineState.class);\n-    private final List<StageOutput> stageOutputs = Lists.newArrayList();\n+    private final List<StageOutput> stageOutputs;\n+\n+    public PipelineState() {\n+        this.stageOutputs = new ArrayList<>();\n+    }\n+\n+    public PipelineState(final List<StageOutput> stageOutputs) {", "originalCommit": "23baa8cfe9628f33137de77405f432ea0bcf50cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eaee0afd19ef1c03cabe398fc73bacd613d59b6a", "url": "https://github.com/hartwigmedical/pipeline5/commit/eaee0afd19ef1c03cabe398fc73bacd613d59b6a", "message": "DEV-1386 Fix test failures", "committedDate": "2020-07-22T17:51:07Z", "type": "commit"}, {"oid": "a295d50da30b1f220f14a41987eaeb0e2e792478", "url": "https://github.com/hartwigmedical/pipeline5/commit/a295d50da30b1f220f14a41987eaeb0e2e792478", "message": "DEV-1386 Remove complex logging statements", "committedDate": "2020-07-22T18:22:14Z", "type": "commit"}]}