{"pr_number": 1516, "pr_title": "Studio encoding profile performance improved", "pr_createdAt": "2020-04-09T20:59:34Z", "pr_url": "https://github.com/opencast/opencast/pull/1516", "timeline": [{"oid": "2d54d18f7e4a99ff4dd88d70d783859ff7e7eb76", "url": "https://github.com/opencast/opencast/commit/2d54d18f7e4a99ff4dd88d70d783859ff7e7eb76", "message": "Speedup studio adaptive streaming optimized encoding profile\n\nThe studio-upload workflow uses an dynamic encoding profile for generating the delivery version of the videos. This profile is currently really slow. I've changed the x264 encoder preset from slower to faster. On the way the buffer size for each quality was fixed to hold 2 sec. of video.", "committedDate": "2020-04-09T20:57:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNjgyNA==", "url": "https://github.com/opencast/opencast/pull/1516#discussion_r406506824", "bodyText": "You accidentally deleted the -:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                -c:v libx264 preset faster -tune film -pix_fmt yuv420p \\\n          \n          \n            \n                -c:v libx264 -preset faster -tune film -pix_fmt yuv420p \\", "author": "lkiesow", "createdAt": "2020-04-09T22:13:28Z", "path": "etc/encoding/adaptive-streaming-movies.properties", "diffHunk": "@@ -108,33 +108,33 @@ profile.studio.adaptive-parallel.http.suffix.360p-quality = -360p-quality.mp4\n profile.studio.adaptive-parallel.http.jobload = 4\n profile.studio.adaptive-parallel.http.ffmpeg.command.if-height-geq-1800 = \\\n   -filter:v scale=w=3840:h=trunc(3840/dar/2)*2,setsar=1,fps=25 \\\n-    -c:v libx264 -preset slower -tune film -pix_fmt yuv420p \\\n-    -x264opts keyint=25:min-keyint=25:no-scenecut -crf 20 -maxrate 14800k -bufsize 18000k \\\n-    -c:a aac -b:a 196k -ac 2 \\\n+    -c:v libx264 preset faster -tune film -pix_fmt yuv420p \\", "originalCommit": "2d54d18f7e4a99ff4dd88d70d783859ff7e7eb76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMDI4NQ==", "url": "https://github.com/opencast/opencast/pull/1516#discussion_r406510285", "bodyText": "-crf 23 is the default value. We can just drop it.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                -x264opts keyint=25:min-keyint=25:no-scenecut -crf 23 -maxrate 14800k -bufsize 29600k \\\n          \n          \n            \n                -x264opts keyint=25:min-keyint=25:no-scenecut -maxrate 14800k -bufsize 29600k \\", "author": "lkiesow", "createdAt": "2020-04-09T22:23:13Z", "path": "etc/encoding/adaptive-streaming-movies.properties", "diffHunk": "@@ -108,33 +108,33 @@ profile.studio.adaptive-parallel.http.suffix.360p-quality = -360p-quality.mp4\n profile.studio.adaptive-parallel.http.jobload = 4\n profile.studio.adaptive-parallel.http.ffmpeg.command.if-height-geq-1800 = \\\n   -filter:v scale=w=3840:h=trunc(3840/dar/2)*2,setsar=1,fps=25 \\\n-    -c:v libx264 -preset slower -tune film -pix_fmt yuv420p \\\n-    -x264opts keyint=25:min-keyint=25:no-scenecut -crf 20 -maxrate 14800k -bufsize 18000k \\\n-    -c:a aac -b:a 196k -ac 2 \\\n+    -c:v libx264 preset faster -tune film -pix_fmt yuv420p \\\n+    -x264opts keyint=25:min-keyint=25:no-scenecut -crf 23 -maxrate 14800k -bufsize 29600k \\", "originalCommit": "2d54d18f7e4a99ff4dd88d70d783859ff7e7eb76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMTE4Ng==", "url": "https://github.com/opencast/opencast/pull/1516#discussion_r406511186", "bodyText": "\ud83d\udc4d  for 128k audio for speech. Since we are only recording a microphone which is unlikely to be a stereo signal, should we go for mono? And if we go for mono, should we go for 96k? So many questions :D", "author": "lkiesow", "createdAt": "2020-04-09T22:25:35Z", "path": "etc/encoding/adaptive-streaming-movies.properties", "diffHunk": "@@ -108,33 +108,33 @@ profile.studio.adaptive-parallel.http.suffix.360p-quality = -360p-quality.mp4\n profile.studio.adaptive-parallel.http.jobload = 4\n profile.studio.adaptive-parallel.http.ffmpeg.command.if-height-geq-1800 = \\\n   -filter:v scale=w=3840:h=trunc(3840/dar/2)*2,setsar=1,fps=25 \\\n-    -c:v libx264 -preset slower -tune film -pix_fmt yuv420p \\\n-    -x264opts keyint=25:min-keyint=25:no-scenecut -crf 20 -maxrate 14800k -bufsize 18000k \\\n-    -c:a aac -b:a 196k -ac 2 \\\n+    -c:v libx264 preset faster -tune film -pix_fmt yuv420p \\\n+    -x264opts keyint=25:min-keyint=25:no-scenecut -crf 23 -maxrate 14800k -bufsize 29600k \\\n+    -c:a aac -b:a 128k -ac 2 \\", "originalCommit": "2d54d18f7e4a99ff4dd88d70d783859ff7e7eb76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc4ODg2NA==", "url": "https://github.com/opencast/opencast/pull/1516#discussion_r413788864", "bodyText": "How much are we really saving by dropping to mono?  I'd leave it at stereo, but I'm happy to see the drop to 128.", "author": "gregorydlogan", "createdAt": "2020-04-23T12:51:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMTE4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwNjQ5OQ==", "url": "https://github.com/opencast/opencast/pull/1516#discussion_r413806499", "bodyText": "The idea was that mono will give you better quality for the same fixed bandwith. Especially if the content is really mono anyway.", "author": "lkiesow", "createdAt": "2020-04-23T13:43:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMTE4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg5NDAyOQ==", "url": "https://github.com/opencast/opencast/pull/1516#discussion_r413894029", "bodyText": "I agree with @gregorydlogan. Dropping to 128k make sense. I would prefer to keep stereo.", "author": "wsmirnow", "createdAt": "2020-04-23T15:25:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMTE4Ng=="}], "type": "inlineReview"}, {"oid": "12b0ac0ceb18643d083e283cfbc64d8571b72810", "url": "https://github.com/opencast/opencast/commit/12b0ac0ceb18643d083e283cfbc64d8571b72810", "message": "Update etc/encoding/adaptive-streaming-movies.properties\r\n\r\ntypo fixed\n\nCo-Authored-By: Lars Kiesow <lkiesow@uos.de>", "committedDate": "2020-04-14T15:20:29Z", "type": "commit"}, {"oid": "460a647dbe3783044adf36c6596b82134562be25", "url": "https://github.com/opencast/opencast/commit/460a647dbe3783044adf36c6596b82134562be25", "message": "studio encoding profile updated\n\nremoved -crf 23 ffmpeg option as it is the default value", "committedDate": "2020-04-23T15:29:48Z", "type": "commit"}, {"oid": "f5200a2e1abc6f9d367641dfe5f2d4dae737c754", "url": "https://github.com/opencast/opencast/commit/f5200a2e1abc6f9d367641dfe5f2d4dae737c754", "message": "studio workflow updated\n\nThe x264 preset is now set to medium, which is the default preset. For this reason the preset option was removed from studio encoding profile.", "committedDate": "2020-04-23T20:19:27Z", "type": "commit"}, {"oid": "a08716a0b1ed7da4ab2280c9765bddcf8aa90eeb", "url": "https://github.com/opencast/opencast/commit/a08716a0b1ed7da4ab2280c9765bddcf8aa90eeb", "message": "studio encoding profile updated\n\nSet bufsize for each quality to maxrate value. For more information see the ffmpeg documentation at\nhttps://trac.ffmpeg.org/wiki/Limiting%20the%20output%20bitrate", "committedDate": "2020-04-28T16:43:15Z", "type": "commit"}]}