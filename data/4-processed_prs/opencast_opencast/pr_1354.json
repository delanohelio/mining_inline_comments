{"pr_number": 1354, "pr_title": "Addition of trim segment configuration and new documentation", "pr_createdAt": "2020-01-13T14:18:11Z", "pr_url": "https://github.com/opencast/opencast/pull/1354", "timeline": [{"oid": "600fed04510938da9cf12a797b5a6146cd76dc89", "url": "https://github.com/opencast/opencast/commit/600fed04510938da9cf12a797b5a6146cd76dc89", "message": "Addition of trim segment configuration and new documentation", "committedDate": "2020-01-13T13:46:54Z", "type": "commit"}, {"oid": "04ae7e228ebf7fe2c8a6ccb4814bf9b4737b6bf0", "url": "https://github.com/opencast/opencast/commit/04ae7e228ebf7fe2c8a6ccb4814bf9b4737b6bf0", "message": "Updated documentation", "committedDate": "2020-01-13T14:10:03Z", "type": "commit"}, {"oid": "4ff507d815e3505f137c55143c9ad8cdf272f9eb", "url": "https://github.com/opencast/opencast/commit/4ff507d815e3505f137c55143c9ad8cdf272f9eb", "message": "Updated documentation", "committedDate": "2020-01-13T14:17:16Z", "type": "commit"}, {"oid": "16c941ba21a1a422bc7d6e728443b1cecae80dec", "url": "https://github.com/opencast/opencast/commit/16c941ba21a1a422bc7d6e728443b1cecae80dec", "message": "Add new documentation to mkdocs.yml", "committedDate": "2020-01-14T07:02:08Z", "type": "commit"}, {"oid": "cd36f5e9d61662e8a3ff722903112c51f2ee638e", "url": "https://github.com/opencast/opencast/commit/cd36f5e9d61662e8a3ff722903112c51f2ee638e", "message": "Merge branch 'parent_develop' into f/videoeditor_default_start_end", "committedDate": "2020-02-25T09:07:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MDk3NQ==", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r386460975", "bodyText": "We don't really enforce code standards in the javascript, but please declare each variable on a separate line.", "author": "gregorydlogan", "createdAt": "2020-03-02T15:27:35Z", "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {\n+          var startLength = parseInt(user.org.properties['admin.editor.segment.start_length'] || 0, 10);\n+          var endLength = parseInt(user.org.properties['admin.editor.segment.end_length'] || 0, 10);\n+          var minLength = parseInt(user.org.properties['admin.editor.segment.minimum_length'] || 0, 10);\n+\n+          scope.startLength = startLength;\n+          scope.endLength = endLength;\n+          scope.minLength = minLength;\n+\n+          if (!startLength && !endLength && !minLength) {\n+            return;\n+          }\n+\n+          scope.video.$promise.then(function(vidObj) {\n+            var duration = parseInt(vidObj.duration, 10);\n+            var segments = vidObj.segments;\n+\n+            if (duration <= startLength + endLength) {\n+              return;\n+            }\n+\n+            var setSegment = function(_start, _end, _min, _del) {\n+\n+              if (_min > 0) {\n+                _end = (_start - _end < _min) ? _start + _min : _end;\n+              }\n+\n+              return {\n+                start: _start,\n+                end: _end,\n+                deleted: _del,\n+                selected: false\n+              };\n+            };\n+\n+            var getSegmentLength = function(_s) {\n+              return (_s.end - _s.start);\n+            };\n+\n+            var maxSegIdx = segments.length - 1;\n+            segments[0].start = 0;\n+            segments[maxSegIdx].end = duration;\n+\n+            if (segments.length == 1) {\n+\n+              var _start = 0, _duration = duration;", "originalCommit": "cd36f5e9d61662e8a3ff722903112c51f2ee638e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNDM5Mg==", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r435414392", "bodyText": "Updated", "author": "NgoniChoga", "createdAt": "2020-06-04T17:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MDk3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MTU0Nw==", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r386461547", "bodyText": "If there's only one segment, doesn't maxSegIdx end up at -1?", "author": "gregorydlogan", "createdAt": "2020-03-02T15:28:29Z", "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {\n+          var startLength = parseInt(user.org.properties['admin.editor.segment.start_length'] || 0, 10);\n+          var endLength = parseInt(user.org.properties['admin.editor.segment.end_length'] || 0, 10);\n+          var minLength = parseInt(user.org.properties['admin.editor.segment.minimum_length'] || 0, 10);\n+\n+          scope.startLength = startLength;\n+          scope.endLength = endLength;\n+          scope.minLength = minLength;\n+\n+          if (!startLength && !endLength && !minLength) {\n+            return;\n+          }\n+\n+          scope.video.$promise.then(function(vidObj) {\n+            var duration = parseInt(vidObj.duration, 10);\n+            var segments = vidObj.segments;\n+\n+            if (duration <= startLength + endLength) {\n+              return;\n+            }\n+\n+            var setSegment = function(_start, _end, _min, _del) {\n+\n+              if (_min > 0) {\n+                _end = (_start - _end < _min) ? _start + _min : _end;\n+              }\n+\n+              return {\n+                start: _start,\n+                end: _end,\n+                deleted: _del,\n+                selected: false\n+              };\n+            };\n+\n+            var getSegmentLength = function(_s) {\n+              return (_s.end - _s.start);\n+            };\n+\n+            var maxSegIdx = segments.length - 1;\n+            segments[0].start = 0;\n+            segments[maxSegIdx].end = duration;", "originalCommit": "cd36f5e9d61662e8a3ff722903112c51f2ee638e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNDc4Nw==", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r435414787", "bodyText": "maxSegIdx end up at 0 if there's only one segment.", "author": "NgoniChoga", "createdAt": "2020-06-04T17:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MTU0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2NzE1OA==", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r387167158", "bodyText": "I'm not a huge fan of the way this has nested function declarations.  Is this how the rest of Angular codebase is?  It's been a while, but we try to keep things similar, file to file.", "author": "gregorydlogan", "createdAt": "2020-03-03T17:09:25Z", "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {", "originalCommit": "cd36f5e9d61662e8a3ff722903112c51f2ee638e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNTM4MQ==", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r435415381", "bodyText": "This is how it was done in a number of different files.", "author": "NgoniChoga", "createdAt": "2020-06-04T17:09:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2NzE1OA=="}], "type": "inlineReview"}, {"oid": "1fbccd106441ed5307a70dec079eecab8f526f34", "url": "https://github.com/opencast/opencast/commit/1fbccd106441ed5307a70dec079eecab8f526f34", "message": "Declare variables on separate lines", "committedDate": "2020-06-04T17:06:11Z", "type": "commit"}]}