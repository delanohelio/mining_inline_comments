{"pr_number": 6472, "pr_title": "Sonar Fixes", "pr_createdAt": "2020-11-02T20:53:24Z", "pr_url": "https://github.com/primefaces/primefaces/pull/6472", "timeline": [{"oid": "0c8e141648fdd0d9208777e72be630a63a643a64", "url": "https://github.com/primefaces/primefaces/commit/0c8e141648fdd0d9208777e72be630a63a643a64", "message": "Sonar Fixes", "committedDate": "2020-11-02T20:53:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0ODgyOQ==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516248829", "bodyText": "Dead variable according to Sonar.", "author": "melloware", "createdAt": "2020-11-02T20:55:50Z", "path": "src/main/java/org/primefaces/component/datatable/export/DataTableCSVExporter.java", "diffHunk": "@@ -66,8 +65,6 @@ public void doExport(FacesContext context, DataTable table, ExportConfiguration\n         try (OutputStreamWriter osw = new OutputStreamWriter(getOutputStream(), exportConfiguration.getEncodingType());\n             PrintWriter writer = new PrintWriter(osw);) {\n \n-            ExternalContext externalContext = context.getExternalContext();\n-", "originalCommit": "0c8e141648fdd0d9208777e72be630a63a643a64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2MzU0Ng==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516263546", "bodyText": "Pretty sure I haven't worked on the DataTableCSVExporter, but yes, the variable externalContext is not used anywhere.", "author": "blutorange", "createdAt": "2020-11-02T21:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0ODgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NTg4MQ==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516265881", "bodyText": "Yes, should be removed.", "author": "christophs78", "createdAt": "2020-11-02T21:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0ODgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0ODk1MA==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516248950", "bodyText": "Already declared in Interface.", "author": "melloware", "createdAt": "2020-11-02T20:56:05Z", "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "diffHunk": "@@ -337,8 +342,6 @@ public void export(FacesContext context, List<DataTable> tables, OutputStream ou\n      */\n     protected abstract void doExport(FacesContext facesContext, DataTable table, ExportConfiguration exportConfiguration, int index) throws IOException;\n \n-    public abstract String getFileExtension();\n-", "originalCommit": "0c8e141648fdd0d9208777e72be630a63a643a64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NDA4NA==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516264084", "bodyText": "Again haven't worked on DataTableExporter, but also yes, that declaration can be removed.", "author": "blutorange", "createdAt": "2020-11-02T21:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0ODk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NjA4Nw==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516266087", "bodyText": "Yes, should be removed.", "author": "christophs78", "createdAt": "2020-11-02T21:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0ODk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0OTEyNg==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516249126", "bodyText": "Made this a fall through since both 'z' and 'Z' do the same thing.", "author": "melloware", "createdAt": "2020-11-02T20:56:23Z", "path": "src/main/java/org/primefaces/convert/CombinedDateTimePatternTokenVisitor.java", "diffHunk": "@@ -99,8 +99,6 @@ public void visitTokenLetter(int letter, int repetitions) {\n \n             // time zone\n             case 'z':\n-                visitZonezToken(repetitions, builder);\n-                break;\n             case 'Z':", "originalCommit": "0c8e141648fdd0d9208777e72be630a63a643a64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NDk5Nw==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516264997", "bodyText": "I made a separate method for each case, and for 'z' and 'Z' the JQueryUI pattern happens to be the same for both. Makes the code a tiny bit easier to read imo, but I've got no problem with this change.", "author": "blutorange", "createdAt": "2020-11-02T21:29:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0OTEyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0OTMyNA==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516249324", "bodyText": "Sonar recommended removing the switch for if else for readability", "author": "melloware", "createdAt": "2020-11-02T20:56:47Z", "path": "src/main/java/org/primefaces/convert/CombinedDateTimePatternTokenVisitor.java", "diffHunk": "@@ -175,13 +175,12 @@ private static void visitDayOfWeekToken(int repetitions, JQueryDateTimePatternBu\n      * More than three 'D' are interpreted as 'DDD'.\n      */\n     private static void visitDayOfYearToken(int repetitions, JQueryDateTimePatternBuilder builder) {\n-        switch (repetitions) {\n-            case 1:\n-                builder.appendDayOfYearNoLeadingZeros();\n-                break;\n-            default: // 2+\n-                builder.appendDayOfYearWithLeadingZeros();\n-                break;\n+        if (repetitions == 1) {\n+            builder.appendDayOfYearNoLeadingZeros();\n+        }\n+        else {\n+            // 2+\n+            builder.appendDayOfYearWithLeadingZeros();\n         }", "originalCommit": "0c8e141648fdd0d9208777e72be630a63a643a64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NTgxMA==", "url": "https://github.com/primefaces/primefaces/pull/6472#discussion_r516265810", "bodyText": "I used the switch-pattern in other methods too so always using that keeps it consistent, but yeah, this is fine as well.", "author": "blutorange", "createdAt": "2020-11-02T21:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0OTMyNA=="}], "type": "inlineReview"}]}