{"pr_number": 2852, "pr_title": "Close the connection with failed HTTP/2 upgrade request early", "pr_createdAt": "2020-06-29T13:32:11Z", "pr_url": "https://github.com/line/armeria/pull/2852", "timeline": [{"oid": "ead31ac24357eb35a4b335b3b294f24ddea0d5e9", "url": "https://github.com/line/armeria/commit/ead31ac24357eb35a4b335b3b294f24ddea0d5e9", "message": "Close the connection with failed HTTP/2 upgrade request early\n\nMotivation:\n\nWhen we are sure that we cannot reuse the HTTP/1 connection that we\nfailed to upgrade to HTTP/2, we do not need to wait until the response\nis fully received.\n\nModifications:\n\n- Disconnect early when it's not possible to reuse the HTTP/1 connection\n  that we failed to upgrade to HTTP/2.\n  - Improve how we determine whether it's possible to reuse or not, by\n    checking `connection`, `content-length` and `transfer-encoding`.\n- Record the response headers of rejected upgrade requests\n\nResult:\n\n- Potentially lower initial connection latency by giving up hopeless\n  HTTP/1 connection early\n- Maybe easier to figure out why upgrade was failed", "committedDate": "2020-06-29T13:28:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NjgyMQ==", "url": "https://github.com/line/armeria/pull/2852#discussion_r446996821", "bodyText": "question: which one releases the msg?", "author": "minwoox", "createdAt": "2020-06-29T14:04:22Z", "path": "core/src/main/java/com/linecorp/armeria/client/HttpClientPipelineConfigurator.java", "diffHunk": "@@ -467,28 +467,51 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exc\n \n         @Override\n         public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n-            boolean handled = false;\n             if (msg instanceof HttpResponse) {\n                 // The server rejected the upgrade request and sent its response in HTTP/1.\n                 assert upgradeEvt == UPGRADE_REJECTED;\n-                final String connection = ((HttpResponse) msg).headers().get(HttpHeaderNames.CONNECTION);\n-                needsToClose = connection != null && Ascii.equalsIgnoreCase(\"close\", connection);\n-                handled = true;\n+                final HttpResponse res = (HttpResponse) msg;\n+                upgradeRejectionCause = \"Upgrade request rejected with: \" + res.headers();\n+                // We can persist connection only when:\n+                // - The response has 'Connection: keep-alive' header on HTTP/1.0.\n+                // - The response has no 'Connection: close' header on HTTP/1.1.\n+                // and:\n+                // - The response has 'Content-Length' or 'Transfer-Encoding: chunked',\n+                //   i.e. possible to determine the end of the response.\n+                //\n+                // See: https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.1.2.1\n+                //      https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4\n+                needsToClose = !(HttpUtil.isKeepAlive(res) &&\n+                                 (HttpUtil.isContentLengthSet(res) ||\n+                                  HttpUtil.isTransferEncodingChunked(res)));\n+                if (needsToClose) {\n+                    // No need to wait till the end of the response.\n+                    // Close the connection immediately and finish the upgrade process.\n+                    onUpgradeResponse(ctx, false);\n+                }\n+\n+                ReferenceCountUtil.release(msg);\n+                return;\n+            }\n+\n+            // We're not going to reuse the connection,\n+            // so we just discard everything received.\n+            if (needsToClose) {\n+                ReferenceCountUtil.release(msg);\n+                return;\n             }\n \n+            // We're not going to close but reuse the connection,\n+            // so we wait until the end of the rejecting response.\n             if (msg instanceof HttpContent) {\n                 if (msg instanceof LastHttpContent) {\n-                    // Received the rejecting response completely.\n                     onUpgradeResponse(ctx, false);\n                 }\n-                handled = true;\n-            }\n-\n-            if (!handled) {\n-                ctx.fireChannelRead(msg);\n-            } else {\n                 ReferenceCountUtil.release(msg);\n+                return;\n             }\n+\n+            ctx.fireChannelRead(msg);", "originalCommit": "ead31ac24357eb35a4b335b3b294f24ddea0d5e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM1NjMzMA==", "url": "https://github.com/line/armeria/pull/2852#discussion_r447356330", "bodyText": "The other handlers in the pipeline, or if it reaches at the end of the pipeline, it will be released by the pipeline.", "author": "trustin", "createdAt": "2020-06-30T01:37:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NjgyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM2OTg4NA==", "url": "https://github.com/line/armeria/pull/2852#discussion_r447369884", "bodyText": "Thanks for the explanation. \ud83d\ude04", "author": "minwoox", "createdAt": "2020-06-30T02:25:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NjgyMQ=="}], "type": "inlineReview"}, {"oid": "500d615d8bb379b1d95b7a8073119e4bd05e0102", "url": "https://github.com/line/armeria/commit/500d615d8bb379b1d95b7a8073119e4bd05e0102", "message": "Record status and protocol version as well", "committedDate": "2020-06-30T01:42:23Z", "type": "commit"}, {"oid": "21a5cde3f5c83797afb455d353eb20d506560478", "url": "https://github.com/line/armeria/commit/21a5cde3f5c83797afb455d353eb20d506560478", "message": "Merge branch 'master' into upgrade_close", "committedDate": "2020-06-30T01:55:52Z", "type": "commit"}]}