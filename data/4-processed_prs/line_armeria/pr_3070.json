{"pr_number": 3070, "pr_title": "Add release note for 1.1.0", "pr_createdAt": "2020-09-18T08:28:41Z", "pr_url": "https://github.com/line/armeria/pull/3070", "timeline": [{"oid": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "url": "https://github.com/line/armeria/commit/e8b7d58d61c1a807ae102228ef22bc752e497cb7", "message": "Add release note for 1.1.0", "committedDate": "2020-09-18T08:27:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5OTkzOA==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491699938", "bodyText": "How about:\n`RequestLog#serviceName()` is now used as a span name if you use ... for <why it's better>.", "author": "trustin", "createdAt": "2020-09-20T15:03:15Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDA4Ng==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700086", "bodyText": "while converting a RequestLog into a String?", "author": "trustin", "createdAt": "2020-09-20T15:04:59Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDE2NQ==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700165", "bodyText": "stack-trace -> stack trace\nnot logged anymore by\nExplain why we don't do that anymore. Depending on the explanation, could it be a bug fix?", "author": "trustin", "createdAt": "2020-09-20T15:05:34Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDI0MA==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700240", "bodyText": "is now initialized", "author": "trustin", "createdAt": "2020-09-20T15:06:35Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDMwNg==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700306", "bodyText": "boot autoconfigure -> Boot integration ?", "author": "trustin", "createdAt": "2020-09-20T15:07:09Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066\n+- Reactor subscriber context is now properly propagated. #3058\n+- Armeria Spring boot autoconfigure collects metrics correctly if <type://ArmeriaSettings#enableMetrics>", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDM3MA==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491700370", "bodyText": "rejects -> now rejects\na PUSH_PROMISE frame (missing a)", "author": "trustin", "createdAt": "2020-09-20T15:07:47Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066\n+- Reactor subscriber context is now properly propagated. #3058\n+- Armeria Spring boot autoconfigure collects metrics correctly if <type://ArmeriaSettings#enableMetrics>\n+is `true`. #3048\n+- You now see the proper exception from WebFlux `WebClient` when <type://CircuitBreakerClient> is applied. #3064\n+- Armeria client rejects `PUSH_PROMISE` frame correctly because it doesn't support it yet. #3045", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwOTMxOQ==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491709319", "bodyText": "A PUSH_PROMISE frame is not rejected. SETTINGS_ENABLE_PUSH of the initial settings is set to 0.\nArmeria client tells the server that it doesn't expect PUSH_PROMISE. ?", "author": "ikhoon", "createdAt": "2020-09-20T16:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDM3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc3MzYwMQ==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491773601", "bodyText": "A PUSH_PROMISE frame is not rejected.\n\nIf a non Armeria server ignores SETTINGS_ENABLE_PUSH and sends PUSH_PROMISE, we don't reject the frame? then I think we should fix the code. \ud83d\ude04", "author": "minwoox", "createdAt": "2020-09-21T02:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMDM3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNzgyMw==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491707823", "bodyText": "Missing issue link #3032", "author": "ikhoon", "createdAt": "2020-09-20T16:26:44Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034\n+  ```java\n+  @Bean\n+  public MeterIdPrefixFunction myMeterIdPrefixFunction() {\n+      return MeterIdPrefixFunction.of(\"custom.armeria.server\");\n+  }\n+  ```\n+- You can now use a string to specify the `Logger` for <type://LoggingService> and <type://LoggingClient>. #3035\n+  ```java\n+  ServerBuilder sb = ...\n+  sb.decorator(LoggingService.builder()\n+                             .logger(\"com.foo\")\n+                             .build());\n+  ```\n+\n+## \ud83d\udcc8 Improvements\n+\n+- Span name is the service name if you use the default `HttpRequestParser` and `HttpResponseParser` with\n+  `BraveClient` and `BraveService`. #3023\n+- You can now easily find out whether SPI service interfaces are applied from the logs. #3039\n+- You can now get the log of the exception which is raised while making request and response logs. #3043\n+- The stack-trace of <type://HttpStatusException> and <type://HttpResponseException> are not logged in\n+  <type://LoggingService>. #3053, #3054\n+\n+## \ud83d\udee0\ufe0f Bug fixes\n+\n+- <type://TimeoutScheduler> is initialized exactly once. #3066\n+- Reactor subscriber context is now properly propagated. #3058\n+- Armeria Spring boot autoconfigure collects metrics correctly if <type://ArmeriaSettings#enableMetrics>\n+is `true`. #3048\n+- You now see the proper exception from WebFlux `WebClient` when <type://CircuitBreakerClient> is applied. #3064\n+- Armeria client rejects `PUSH_PROMISE` frame correctly because it doesn't support it yet. #3045\n+- Armeria gRPC server does not raise a `NullPointerException` anymore when a gRPC server interceptor closes\n+  the `ServerCall`.", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwODE0Mw==", "url": "https://github.com/line/armeria/pull/3070#discussion_r491708143", "bodyText": "Spring boot -> Spring Boot", "author": "ikhoon", "createdAt": "2020-09-20T16:29:57Z", "path": "site/src/pages/release-notes/1.1.0.mdx", "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+date: 2020-09-18\n+---\n+\n+## \ud83c\udf1f New features\n+\n+- You can now inject your own <type://MeterIdPrefixFunction> when using Armeria Spring boot autoconfigure. #3034", "originalCommit": "e8b7d58d61c1a807ae102228ef22bc752e497cb7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f3b92e57c9edc69bac4cb544d6824cadb5a84fc6", "url": "https://github.com/line/armeria/commit/f3b92e57c9edc69bac4cb544d6824cadb5a84fc6", "message": "Address comments by @trustin and @ikhoon", "committedDate": "2020-09-21T02:57:33Z", "type": "commit"}, {"oid": "5d3193ea2615707c1c32bb18d9fd35180a6f2e41", "url": "https://github.com/line/armeria/commit/5d3193ea2615707c1c32bb18d9fd35180a6f2e41", "message": "Add description", "committedDate": "2020-09-21T02:59:24Z", "type": "commit"}, {"oid": "04ebacb2abc7d4df8cea13d2307200effa5d3ed1", "url": "https://github.com/line/armeria/commit/04ebacb2abc7d4df8cea13d2307200effa5d3ed1", "message": "Fix", "committedDate": "2020-09-21T03:04:24Z", "type": "commit"}, {"oid": "abae50fb8b99862b100928891defe7c657980ab5", "url": "https://github.com/line/armeria/commit/abae50fb8b99862b100928891defe7c657980ab5", "message": "Add disable TLS verification", "committedDate": "2020-09-21T03:08:23Z", "type": "commit"}, {"oid": "cbb78d619dbaeec54b1f77f7de1a4451323e9670", "url": "https://github.com/line/armeria/commit/cbb78d619dbaeec54b1f77f7de1a4451323e9670", "message": "Fix date", "committedDate": "2020-09-22T02:03:44Z", "type": "commit"}]}