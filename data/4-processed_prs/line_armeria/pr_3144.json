{"pr_number": 3144, "pr_title": "Allow user to configure `HealthCheckService` in Spring integration", "pr_createdAt": "2020-10-28T11:04:09Z", "pr_url": "https://github.com/line/armeria/pull/3144", "timeline": [{"oid": "a497d0561945598cea4bf4429d50e4363d3ee524", "url": "https://github.com/line/armeria/commit/a497d0561945598cea4bf4429d50e4363d3ee524", "message": "Allow user to configure `HealthCheckService` in Spring integration", "committedDate": "2020-10-28T10:56:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4NzIyMA==", "url": "https://github.com/line/armeria/pull/3144#discussion_r513387220", "bodyText": "Other Armeria configurators for Spring do not extend Ordered.\nDo we need to apply Ordered to others?\nAny thought? @heowc", "author": "ikhoon", "createdAt": "2020-10-28T12:00:46Z", "path": "spring/boot2-autoconfigure/src/main/java/com/linecorp/armeria/spring/HealthCheckServiceConfigurator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.spring;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.core.Ordered;\n+import org.springframework.core.annotation.AnnotationAwareOrderComparator;\n+import org.springframework.core.annotation.Order;\n+\n+import com.linecorp.armeria.server.healthcheck.HealthCheckService;\n+import com.linecorp.armeria.server.healthcheck.HealthCheckServiceBuilder;\n+\n+/**\n+ * Interface used to configure a {@link HealthCheckService} on the default armeria server.\n+ */\n+@FunctionalInterface\n+public interface HealthCheckServiceConfigurator extends Ordered {\n+\n+    /**\n+     * Configures the {@link HealthCheckService} using the specified {@link HealthCheckServiceBuilder}.\n+     */\n+    void configure(HealthCheckServiceBuilder healthCheckServiceBuilder);\n+\n+    /**\n+     * Returns the evaluation order of this configurator. A user can specify the order with an {@link Order}\n+     * annotation when defining a bean with a {@link Bean} annotation.\n+     *\n+     * <p>Note that the default value of the {@link Order} annotation is {@link Ordered#LOWEST_PRECEDENCE}\n+     * which equals to {@link Integer#MAX_VALUE}, but it is overridden to {@code 0} by this default method.\n+     *\n+     * @see Ordered#LOWEST_PRECEDENCE\n+     * @see Ordered#HIGHEST_PRECEDENCE\n+     * @see AnnotationAwareOrderComparator\n+     */\n+    default int getOrder() {\n+        return 0;\n+    }", "originalCommit": "a497d0561945598cea4bf4429d50e4363d3ee524", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ1MjY1OA==", "url": "https://github.com/line/armeria/pull/3144#discussion_r513452658", "bodyText": "Hmm, what configurators don't extend? I referred ArmeriaServerConfigurator and DocServiceConfigurator.\nOn the contrary, although I added Ordered, do we really need to support Ordered to here...? Let me watch this discussion.", "author": "ghkim3221", "createdAt": "2020-10-28T13:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4NzIyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ1Njc4MA==", "url": "https://github.com/line/armeria/pull/3144#discussion_r513456780", "bodyText": "Hmm, what configurators don't extend?\n\nOops, I checked different ArmeriaServerConfigurator file that is used for Dropwizard. \ud83d\ude05\nPlease ignore this review.", "author": "ikhoon", "createdAt": "2020-10-28T13:48:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4NzIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ3Mjg5NQ==", "url": "https://github.com/line/armeria/pull/3144#discussion_r513472895", "bodyText": "How about leaving a warn message if healthCheckPath is empty and healthCheckServiceConfigurators is not empty such as:\nlogger.warn(\"{}s exist but they are disabled by the empty 'health-check-path' property. configurations: {}\", \n        HealthCheckServiceConfigurator.class.getSimpleName(), healthCheckServiceConfigurators);", "author": "ikhoon", "createdAt": "2020-10-28T14:08:55Z", "path": "spring/boot2-autoconfigure/src/main/java/com/linecorp/armeria/internal/spring/ArmeriaConfigurationUtil.java", "diffHunk": "@@ -102,7 +109,9 @@ public static void configureServerWithArmeriaSettings(ServerBuilder server, Arme\n \n         final String healthCheckPath = settings.getHealthCheckPath();\n         if (!Strings.isNullOrEmpty(healthCheckPath)) {", "originalCommit": "a497d0561945598cea4bf4429d50e4363d3ee524", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk1ODI1MA==", "url": "https://github.com/line/armeria/pull/3144#discussion_r513958250", "bodyText": "Nice idea \ud83d\udc4d", "author": "ghkim3221", "createdAt": "2020-10-29T04:30:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ3Mjg5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkzNzc2Mw==", "url": "https://github.com/line/armeria/pull/3144#discussion_r513937763", "bodyText": "missing @Override", "author": "minwoox", "createdAt": "2020-10-29T03:56:32Z", "path": "spring/boot2-autoconfigure/src/main/java/com/linecorp/armeria/spring/HealthCheckServiceConfigurator.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.linecorp.armeria.spring;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.core.Ordered;\n+import org.springframework.core.annotation.AnnotationAwareOrderComparator;\n+import org.springframework.core.annotation.Order;\n+\n+import com.linecorp.armeria.server.healthcheck.HealthCheckService;\n+import com.linecorp.armeria.server.healthcheck.HealthCheckServiceBuilder;\n+\n+/**\n+ * Interface used to configure a {@link HealthCheckService} on the default armeria server.\n+ */\n+@FunctionalInterface\n+public interface HealthCheckServiceConfigurator extends Ordered {\n+\n+    /**\n+     * Configures the {@link HealthCheckService} using the specified {@link HealthCheckServiceBuilder}.\n+     */\n+    void configure(HealthCheckServiceBuilder healthCheckServiceBuilder);\n+\n+    /**\n+     * Returns the evaluation order of this configurator. A user can specify the order with an {@link Order}\n+     * annotation when defining a bean with a {@link Bean} annotation.\n+     *\n+     * <p>Note that the default value of the {@link Order} annotation is {@link Ordered#LOWEST_PRECEDENCE}\n+     * which equals to {@link Integer#MAX_VALUE}, but it is overridden to {@code 0} by this default method.\n+     *\n+     * @see Ordered#LOWEST_PRECEDENCE\n+     * @see Ordered#HIGHEST_PRECEDENCE\n+     * @see AnnotationAwareOrderComparator\n+     */\n+    default int getOrder() {", "originalCommit": "a497d0561945598cea4bf4429d50e4363d3ee524", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk1ODg1Nw==", "url": "https://github.com/line/armeria/pull/3144#discussion_r513958857", "bodyText": "Ooops \ud83d\ude05", "author": "ghkim3221", "createdAt": "2020-10-29T04:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkzNzc2Mw=="}], "type": "inlineReview"}, {"oid": "2f4aae2b55e479de1fe0ef574add724379785860", "url": "https://github.com/line/armeria/commit/2f4aae2b55e479de1fe0ef574add724379785860", "message": "Leave warning message when configurators exist but health check is disabled", "committedDate": "2020-10-29T04:30:09Z", "type": "commit"}, {"oid": "3ec02bb14e37e89e57b6b50e77bcc7a4e8e19eee", "url": "https://github.com/line/armeria/commit/3ec02bb14e37e89e57b6b50e77bcc7a4e8e19eee", "message": "Add missing `@Override`", "committedDate": "2020-10-29T04:31:42Z", "type": "commit"}, {"oid": "2d29860a1000741fde344c1d44a2beb35d78b481", "url": "https://github.com/line/armeria/commit/2d29860a1000741fde344c1d44a2beb35d78b481", "message": "Fix checkstyle", "committedDate": "2020-10-29T05:03:42Z", "type": "commit"}]}