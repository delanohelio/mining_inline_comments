{"pr_number": 2720, "pr_title": "Upgrade to Spring Boot 2.3.0", "pr_createdAt": "2020-05-18T03:29:22Z", "pr_url": "https://github.com/line/armeria/pull/2720", "timeline": [{"oid": "0f5bd4f6283dbadc97780c7916817ecca21e6274", "url": "https://github.com/line/armeria/commit/0f5bd4f6283dbadc97780c7916817ecca21e6274", "message": "Fix ClassNotFoundException due to deleted HealthStatusHttpMapper in Spring Boot 2.3.0", "committedDate": "2020-05-15T16:42:56Z", "type": "commit"}, {"oid": "38c196a890c493db148a6a0f18e5b2ca9f7bbecd", "url": "https://github.com/line/armeria/commit/38c196a890c493db148a6a0f18e5b2ca9f7bbecd", "message": "Copy SimpleHttpCodeStatusMapper from spring-boot-actuator", "committedDate": "2020-05-17T07:06:20Z", "type": "commit"}, {"oid": "49e7504e3569c4a0ae228ae81d1dc70d94b15cb5", "url": "https://github.com/line/armeria/commit/49e7504e3569c4a0ae228ae81d1dc70d94b15cb5", "message": "Upgrade to Spring Boot 2.3.0", "committedDate": "2020-05-17T17:23:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1Mjc1MQ==", "url": "https://github.com/line/armeria/pull/2720#discussion_r426352751", "bodyText": "Since Spring Boot 2.3.0, the dependency libraries info included in spring-boot has been changed.\nspring-boot doesn't have dependency libraries and version.\nI guess we need to refer to spring-boot-dependencies.\n2.2.7:\n\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot/2.2.7.RELEASE\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies/2.2.7.RELEASE\nhttps://github.com/spring-projects/spring-boot/blob/v2.2.7.RELEASE/spring-boot-project/spring-boot-dependencies/pom.xml\n\n2.3.0:\n\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot/2.3.0.RELEASE\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies/2.3.0.RELEASE\nhttps://github.com/spring-projects/spring-boot/blob/v2.3.0.RELEASE/spring-boot-project/spring-boot-dependencies/build.gradle", "author": "matsumana", "createdAt": "2020-05-18T03:30:34Z", "path": "dependencies.yml", "diffHunk": "@@ -11,7 +11,9 @@ boms:\n   - io.netty:netty-bom:4.1.50.Final\n   - io.zipkin.brave:brave-bom:5.11.2\n   - org.eclipse.jetty:jetty-bom:9.4.28.v20200408\n+  - org.springframework.boot:spring-boot-dependencies:2.3.0.RELEASE", "originalCommit": "49e7504e3569c4a0ae228ae81d1dc70d94b15cb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwMzAxNg==", "url": "https://github.com/line/armeria/pull/2720#discussion_r428403016", "bodyText": "I think adding spring-boot-dependencies is not a good idea. There are so many version conflicts with other modules such as dropwizard. Actually that's the reason we didn't use Spring BOM before.", "author": "minwoox", "createdAt": "2020-05-21T01:55:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1Mjc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwMzEzMA==", "url": "https://github.com/line/armeria/pull/2720#discussion_r428403130", "bodyText": "So the solution is I think we need to add the needed dependencies one by one.", "author": "minwoox", "createdAt": "2020-05-21T01:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1Mjc1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1MzQwOQ==", "url": "https://github.com/line/armeria/pull/2720#discussion_r426353409", "bodyText": "If I don't add dependency-management-plugin, can't compile due to the following error.\nSince Spring Boot Gradle Plugin 2.3.0, it has not dependency libraries info.\nSo I guess we need to add dependency-management-plugin.\n2.2.7:\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin/2.2.7.RELEASE\n2.3.0:\nhttps://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin/2.3.0.RELEASE\n$ ./gradlew :examples:spring-boot-minimal:build\n> Task :examples:spring-boot-minimal:bootJar FAILED\n\nDuring the build, one or more dependencies that were declared without a version failed to resolve:\n    com.google.code.findbugs:jsr305:\n    org.jctools:jctools-core:\n    org.hibernate.validator:hibernate-validator:\n    io.netty:netty-handler-proxy:\n    com.github.ben-manes.caffeine:caffeine:\n    io.netty:netty-codec-haproxy:\n    io.netty:netty-codec-http2:\n    org.bouncycastle:bcprov-jdk15on:\n    io.netty:netty-tcnative-boringssl-static:\n    it.unimi.dsi:fastutil:\n    ch.qos.logback:logback-classic:\n    io.micrometer:micrometer-core:\n    com.google.guava:guava:\n    org.reactivestreams:reactive-streams:\n    org.slf4j:slf4j-api:\n    org.reflections:reflections:\n    com.fasterxml.jackson.core:jackson-core:\n    javax.inject:javax.inject:\n    org.springframework.boot:spring-boot-actuator-autoconfigure:\n    com.spotify:completable-futures:\n    com.fasterxml.jackson.core:jackson-annotations:\n    com.fasterxml.jackson.core:jackson-databind:\n    io.netty:netty-resolver-dns:\n    org.springframework.boot:spring-boot-starter:\n    io.netty:netty-transport:\n    org.springframework.boot:spring-boot-autoconfigure:\n\nDid you forget to apply the io.spring.dependency-management plugin to the spring-boot-minimal project?\n\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':examples:spring-boot-minimal:bootJar'.\n> Could not resolve all files for configuration ':examples:spring-boot-minimal:productionRuntimeClasspath'.\n   > Could not find com.spotify:completable-futures:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find it.unimi.dsi:fastutil:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find com.google.guava:guava:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find com.google.code.findbugs:jsr305:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find org.jctools:jctools-core:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find org.slf4j:slf4j-api:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find org.reflections:reflections:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find org.hibernate.validator:hibernate-validator:.\n     Required by:\n         project :examples:spring-boot-minimal\n   > Could not find com.fasterxml.jackson.core:jackson-core:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find com.fasterxml.jackson.core:jackson-annotations:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find com.fasterxml.jackson.core:jackson-databind:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.micrometer:micrometer-core:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-transport:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-codec-http2:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-codec-haproxy:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-resolver-dns:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find org.reactivestreams:reactive-streams:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find com.github.ben-manes.caffeine:caffeine:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-transport-native-unix-common:null.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-transport-native-epoll:null.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-tcnative-boringssl-static:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find io.netty:netty-handler-proxy:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find org.bouncycastle:bcprov-jdk15on:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find javax.inject:javax.inject:.\n     Required by:\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n   > Could not find org.springframework.boot:spring-boot-starter:.\n     Required by:\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n   > Could not find org.springframework.boot:spring-boot-autoconfigure:.\n     Required by:\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n   > Could not find org.springframework.boot:spring-boot-actuator-autoconfigure:.\n     Required by:\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n   > Could not find ch.qos.logback:logback-classic:.\n     Required by:\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n\n* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n\n* Get more help at https://help.gradle.org\n\nDeprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.\nUse '--warning-mode all' to show the individual deprecation warnings.\nSee https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings\n\nBUILD FAILED in 6s\n49 actionable tasks: 9 executed, 40 up-to-date", "author": "matsumana", "createdAt": "2020-05-18T03:34:19Z", "path": "examples/spring-boot-minimal/build.gradle", "diffHunk": "@@ -3,20 +3,27 @@ buildscript {\n         gradlePluginPortal()\n     }\n     dependencies {\n-        classpath \"org.springframework.boot:spring-boot-gradle-plugin:${managedVersions['org.springframework.boot:spring-boot-gradle-plugin']}\"\n+        classpath \"org.springframework.boot:spring-boot-gradle-plugin:${managedVersions['org.springframework.boot:spring-boot-dependencies']}\"\n+        classpath \"io.spring.gradle:dependency-management-plugin:${managedVersions['io.spring.gradle:dependency-management-plugin']}\"\n     }\n }\n \n apply plugin: 'org.springframework.boot'\n-\n-springBoot {\n-    mainClassName = 'example.springframework.boot.minimal.Main'\n-}\n+apply plugin: 'io.spring.dependency-management'", "originalCommit": "49e7504e3569c4a0ae228ae81d1dc70d94b15cb5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1MzU4OA==", "url": "https://github.com/line/armeria/pull/2720#discussion_r426353588", "bodyText": "If I don't add these settings, can't compile due to the following error.\nSeems If I add dependency-management-plugin, these settings are not applied.\nhttps://github.com/line/armeria/blob/master/build.gradle#L73-L132\n$ ./gradlew :examples:spring-boot-minimal:build\n> Task :examples:spring-boot-minimal:bootJar FAILED\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':examples:spring-boot-minimal:bootJar'.\n> Could not resolve all files for configuration ':examples:spring-boot-minimal:productionRuntimeClasspath'.\n   > Could not find com.spotify:completable-futures:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find it.unimi.dsi:fastutil:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find com.google.guava:guava:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find com.google.code.findbugs:jsr305:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find org.jctools:jctools-core:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find org.reflections:reflections:.\n     Required by:\n         project :examples:spring-boot-minimal\n         project :examples:spring-boot-minimal > project :core\n         project :examples:spring-boot-minimal > project :spring:boot-starter\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure > project :logback\n   > Could not find org.bouncycastle:bcprov-jdk15on:.\n     Required by:\n         project :examples:spring-boot-minimal > project :core\n   > Could not find javax.inject:javax.inject:.\n     Required by:\n         project :examples:spring-boot-minimal > project :spring:boot-starter > project :spring:boot-autoconfigure\n         project :examples:spring-boot-minimal > project :spring:boot-actuator-starter > project :spring:boot-actuator-autoconfigure\n\n* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n\n* Get more help at https://help.gradle.org\n\nDeprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.\nUse '--warning-mode all' to show the individual deprecation warnings.\nSee https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings\n\nBUILD FAILED in 8s\n49 actionable tasks: 4 executed, 45 up-to-date", "author": "matsumana", "createdAt": "2020-05-18T03:35:14Z", "path": "examples/spring-boot-minimal/build.gradle", "diffHunk": "@@ -3,20 +3,27 @@ buildscript {\n         gradlePluginPortal()\n     }\n     dependencies {\n-        classpath \"org.springframework.boot:spring-boot-gradle-plugin:${managedVersions['org.springframework.boot:spring-boot-gradle-plugin']}\"\n+        classpath \"org.springframework.boot:spring-boot-gradle-plugin:${managedVersions['org.springframework.boot:spring-boot-dependencies']}\"\n+        classpath \"io.spring.gradle:dependency-management-plugin:${managedVersions['io.spring.gradle:dependency-management-plugin']}\"\n     }\n }\n \n apply plugin: 'org.springframework.boot'\n-\n-springBoot {\n-    mainClassName = 'example.springframework.boot.minimal.Main'\n-}\n+apply plugin: 'io.spring.dependency-management'\n \n dependencies {\n     implementation project(':spring:boot-starter')\n     implementation 'org.hibernate.validator:hibernate-validator'\n \n+    implementation \"com.spotify:completable-futures:${managedVersions['com.spotify:completable-futures']}\"\n+    implementation \"it.unimi.dsi:fastutil:${managedVersions['it.unimi.dsi:fastutil']}\"\n+    implementation \"com.google.guava:guava:${managedVersions['com.google.guava:guava']}\"\n+    implementation \"com.google.code.findbugs:jsr305:${managedVersions['com.google.code.findbugs:jsr305']}\"\n+    implementation \"org.jctools:jctools-core:${managedVersions['org.jctools:jctools-core']}\"\n+    implementation \"org.reflections:reflections:${managedVersions['org.reflections:reflections']}\"\n+    implementation \"org.bouncycastle:bcprov-jdk15on:${managedVersions['org.bouncycastle:bcprov-jdk15on']}\"\n+    implementation \"javax.inject:javax.inject:${managedVersions['javax.inject:javax.inject']}\"", "originalCommit": "49e7504e3569c4a0ae228ae81d1dc70d94b15cb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwNDE3Mg==", "url": "https://github.com/line/armeria/pull/2720#discussion_r428404172", "bodyText": "from Boot 2.3.0 productionRuntimeClasspath is newly added and its canBeConsumed is true, so the version is not added because this condition is not meet. https://github.com/line/gradle-scripts/blob/master/lib/common-dependencies.gradle#L156\nPerhaps we can add a logic in https://github.com/line/gradle-scripts to set\nconfigurations.productionRuntimeClasspath.setCanBeConsumed(false) if bootJar task exists.\n@anuraaga Do you have any idea about this?", "author": "minwoox", "createdAt": "2020-05-21T01:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1MzU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwNDM4Ng==", "url": "https://github.com/line/armeria/pull/2720#discussion_r428404386", "bodyText": "By the way, this is how I managed to build this:\ndiff --git a/dependencies.yml b/dependencies.yml\nindex ef594b06c..1e216a11f 100644\n--- a/dependencies.yml\n+++ b/dependencies.yml\n@@ -494,12 +494,16 @@ org.slf4j:\n     - https://static.javadoc.io/org.slf4j/slf4j-api/1.7.30/\n   slf4j-simple: { version: *SLF4J_VERSION }\n\n+org.springframework:\n+  spring-web: { version: '5.2.6.RELEASE' }\n+\n org.springframework.boot:\n   spring-boot-starter:\n-    version: &SPRING_BOOT_VERSION '2.2.7.RELEASE'\n+    version: &SPRING_BOOT_VERSION '2.3.0.RELEASE'\n     javadocs:\n     - https://docs.spring.io/spring/docs/current/javadoc-api/\n   spring-boot-actuator-autoconfigure: { version: *SPRING_BOOT_VERSION }\n+  spring-boot-autoconfigure: { version: *SPRING_BOOT_VERSION }\n   spring-boot-starter-actuator: { version: *SPRING_BOOT_VERSION }\n   spring-boot-starter-test: { version: *SPRING_BOOT_VERSION }\n   spring-boot-starter-web: { version: *SPRING_BOOT_VERSION }\ndiff --git a/examples/spring-boot-minimal-kotlin/build.gradle.kts b/examples/spring-boot-minimal-kotlin/build.gradle.kts\nindex 59dd1b093..581f4014d 100644\n--- a/examples/spring-boot-minimal-kotlin/build.gradle.kts\n+++ b/examples/spring-boot-minimal-kotlin/build.gradle.kts\n@@ -23,6 +23,9 @@ apply(plugin = \"org.jetbrains.kotlin.plugin.spring\")\n apply(plugin = \"org.jlleitschuh.gradle.ktlint\")\n apply(plugin = \"org.springframework.boot\")\n\n+val productionRuntimeClasspath by configurations\n+productionRuntimeClasspath.setCanBeConsumed(false)\n+\n dependencies {\n     implementation(project(\":spring:boot-starter\"))\n     implementation(\"org.hibernate.validator:hibernate-validator\")\ndiff --git a/examples/spring-boot-minimal/build.gradle b/examples/spring-boot-minimal/build.gradle\nindex bcf6a5621..4874c0019 100644\n--- a/examples/spring-boot-minimal/build.gradle\n+++ b/examples/spring-boot-minimal/build.gradle\n@@ -13,6 +13,8 @@ springBoot {\n     mainClassName = 'example.springframework.boot.minimal.Main'\n }\n\n+configurations.productionRuntimeClasspath.setCanBeConsumed(false)\n+\n dependencies {\n     implementation project(':spring:boot-starter')\n     implementation 'org.hibernate.validator:hibernate-validator'\ndiff --git a/examples/spring-boot-tomcat/build.gradle b/examples/spring-boot-tomcat/build.gradle\nindex 58e678673..848ff7de2 100644\n--- a/examples/spring-boot-tomcat/build.gradle\n+++ b/examples/spring-boot-tomcat/build.gradle\n@@ -13,6 +13,8 @@ springBoot {\n     mainClassName = 'example.springframework.boot.tomcat.Main'\n }\n\n+configurations.productionRuntimeClasspath.setCanBeConsumed(false)\n+\n dependencies {\n     implementation project(':core')\n     implementation project(':spring:boot-starter')\ndiff --git a/examples/spring-boot-webflux/build.gradle b/examples/spring-boot-webflux/build.gradle\nindex bf2e04e6c..151773407 100644\n--- a/examples/spring-boot-webflux/build.gradle\n+++ b/examples/spring-boot-webflux/build.gradle\n@@ -13,6 +13,8 @@ springBoot {\n     mainClassName = 'example.springframework.boot.webflux.Main'\n }\n\n+configurations.productionRuntimeClasspath.setCanBeConsumed(false)\n+\n dependencies {\n     implementation project(':spring:boot-webflux-starter')\n\ndiff --git a/it/spring/boot-tomcat/build.gradle b/it/spring/boot-tomcat/build.gradle\nindex 0aa813e30..e4f60230b 100644\n--- a/it/spring/boot-tomcat/build.gradle\n+++ b/it/spring/boot-tomcat/build.gradle\n@@ -4,5 +4,6 @@ dependencies {\n     implementation('org.springframework.boot:spring-boot-starter-web') {\n         exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'\n     }\n+    implementation 'org.springframework:spring-web'\n     testImplementation('org.springframework.boot:spring-boot-starter-test')\n }\ndiff --git a/it/spring/boot-tomcat8.5/build.gradle b/it/spring/boot-tomcat8.5/build.gradle\nindex 0d549447e..b89b07700 100644\n--- a/it/spring/boot-tomcat8.5/build.gradle\n+++ b/it/spring/boot-tomcat8.5/build.gradle\n@@ -1,21 +1,28 @@\n final def SPRING_BOOT_VERSION = '2.1.14.RELEASE'\n+final def SPRING_VERSION = '5.1.15.RELEASE'\n final def TOMCAT_VERSION = '8.5.55'\n\n dependencies {\n     implementation project(':spring:boot-starter')\n     implementation project(':tomcat8.5')\n-    implementation(\"org.springframework.boot:spring-boot-starter\") {\n-        version {\n-            // Will fail the build if the override doesn't work\n-            strictly SPRING_BOOT_VERSION\n+\n+    [ 'spring-boot-starter', 'spring-boot-autoconfigure', 'spring-boot-starter-web' ].each {\n+        implementation(\"org.springframework.boot:$it\") {\n+            version {\n+                // Will fail the build if the override doesn't work\n+                strictly SPRING_BOOT_VERSION\n+            }\n+            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'\n         }\n     }\n-    implementation(\"org.springframework.boot:spring-boot-starter-web\") {\n-        version {\n-            // Will fail the build if the override doesn't work\n-            strictly SPRING_BOOT_VERSION\n+\n+    [ 'spring-beans', 'spring-web' ].each {\n+        implementation(\"org.springframework:$it\") {\n+            version {\n+                // Will fail the build if the override doesn't work\n+                strictly SPRING_VERSION\n+            }\n         }\n-        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'\n     }\n\n     [ 'tomcat-embed-core', 'tomcat-embed-jasper', 'tomcat-embed-el' ].each {\ndiff --git a/spring/boot-actuator-autoconfigure/build.gradle b/spring/boot-actuator-autoconfigure/build.gradle\nindex 93c2aedc4..22fbd7fab 100644\n--- a/spring/boot-actuator-autoconfigure/build.gradle\n+++ b/spring/boot-actuator-autoconfigure/build.gradle\n@@ -3,6 +3,8 @@ dependencies {\n     api 'javax.inject:javax.inject'\n     compileOnly 'javax.validation:validation-api'\n\n+    implementation 'org.springframework.boot:spring-boot-autoconfigure'\n+\n     testImplementation 'org.springframework.boot:spring-boot-starter-actuator'\n     testImplementation 'org.springframework.boot:spring-boot-starter-test'\n     testImplementation 'io.projectreactor:reactor-test'\ndiff --git a/spring/boot-autoconfigure/build.gradle b/spring/boot-autoconfigure/build.gradle\nindex 3ae48457c..71d2b77d4 100644\n--- a/spring/boot-autoconfigure/build.gradle\n+++ b/spring/boot-autoconfigure/build.gradle\n@@ -3,6 +3,8 @@ dependencies {\n     compileOnly project(':thrift')\n     implementation project(':logback')\n\n+    implementation 'org.springframework.boot:spring-boot-autoconfigure'\n+\n     // TODO(anuraaga): Consider removing these since this module does not have related functionality.\n     optionalApi 'io.micrometer:micrometer-registry-prometheus'\n     optionalApi 'io.dropwizard.metrics:metrics-json'", "author": "minwoox", "createdAt": "2020-05-21T02:00:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM1MzU4OA=="}], "type": "inlineReview"}, {"oid": "d96ef6dc3c0472e50065e235f0d6b2db8e6c4436", "url": "https://github.com/line/armeria/commit/d96ef6dc3c0472e50065e235f0d6b2db8e6c4436", "message": "Add Spring's license", "committedDate": "2020-05-18T16:17:03Z", "type": "commit"}, {"oid": "c30b49f09c04dca57de141758647b51ba345e988", "url": "https://github.com/line/armeria/commit/c30b49f09c04dca57de141758647b51ba345e988", "message": "Delete unnecessary logic", "committedDate": "2020-05-18T16:29:08Z", "type": "commit"}, {"oid": "8c6af90130f0b7d0c3eef1b43c0693e19bc6e854", "url": "https://github.com/line/armeria/commit/8c6af90130f0b7d0c3eef1b43c0693e19bc6e854", "message": "Delete dependency-management-plugin then add spring-boot-dependencies as dependency", "committedDate": "2020-05-18T17:21:32Z", "type": "commit"}, {"oid": "e32bebc79201f7659bb2281f75d263ff22421c4c", "url": "https://github.com/line/armeria/commit/e32bebc79201f7659bb2281f75d263ff22421c4c", "message": "Merge branch 'fix/HealthStatusHttpMapper-boot2.3.0' into feature/upgrade-spring-boot-2.3.0", "committedDate": "2020-05-18T17:22:07Z", "type": "commit"}, {"oid": "a3732a9039e859ed81884ce46d6320db6644c917", "url": "https://github.com/line/armeria/commit/a3732a9039e859ed81884ce46d6320db6644c917", "message": "Merge branch 'master' into feature/upgrade-spring-boot-2.3.0", "committedDate": "2020-05-19T16:37:56Z", "type": "commit"}, {"oid": "ff609ba6c548daedcbfdcf19c12cb9cc5a77fc0e", "url": "https://github.com/line/armeria/commit/ff609ba6c548daedcbfdcf19c12cb9cc5a77fc0e", "message": "Merge branch 'master' into feature/upgrade-spring-boot-2.3.0", "committedDate": "2020-05-20T04:44:31Z", "type": "commit"}, {"oid": "7cacee112ed5cf01aa6dda6a9633a970edc673d9", "url": "https://github.com/line/armeria/commit/7cacee112ed5cf01aa6dda6a9633a970edc673d9", "message": "Fix dependency resolving error", "committedDate": "2020-05-21T17:21:47Z", "type": "commit"}]}