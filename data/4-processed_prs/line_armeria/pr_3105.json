{"pr_number": 3105, "pr_title": "Make UnionMap#entrySet won't return multiple values for same key", "pr_createdAt": "2020-10-10T08:06:21Z", "pr_url": "https://github.com/line/armeria/pull/3105", "timeline": [{"oid": "1393a36700711e9ea9307780f069d14c5f057ef4", "url": "https://github.com/line/armeria/commit/1393a36700711e9ea9307780f069d14c5f057ef4", "message": "Make UnionMap#entrySet won't return multiple values for same key", "committedDate": "2020-10-10T08:05:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2NDUzOQ==", "url": "https://github.com/line/armeria/pull/3105#discussion_r502764539", "bodyText": "We aren't using Guava in the other project but Sets.union should work fine here.", "author": "anuraaga", "createdAt": "2020-10-10T08:32:09Z", "path": "logback/src/main/java/com/linecorp/armeria/common/logback/UnionMap.java", "diffHunk": "@@ -108,6 +110,99 @@ public void clear() {\n             return entrySet;\n         }\n \n-        return entrySet = Collections.unmodifiableSet(Sets.union(first.entrySet(), second.entrySet()));\n+        // Check for dupes first to reduce allocations on the vastly more common case where there aren't any.\n+        boolean secondHasDupes = false;\n+        for (Entry<K, V> entry : second.entrySet()) {\n+            if (first.containsKey(entry.getKey())) {\n+                secondHasDupes = true;\n+                break;\n+            }\n+        }\n+\n+        final Set<Entry<K, V>> filteredSecond;\n+        if (!secondHasDupes) {\n+            filteredSecond = second.entrySet();\n+        } else {\n+            filteredSecond = new LinkedHashSet<>();\n+            for (Entry<K, V> entry : second.entrySet()) {\n+                if (!first.containsKey(entry.getKey())) {\n+                    filteredSecond.add(entry);\n+                }\n+            }\n+        }\n+        return entrySet =\n+                Collections.unmodifiableSet(new ConcatenatedSet<>(first.entrySet(), filteredSecond));", "originalCommit": "1393a36700711e9ea9307780f069d14c5f057ef4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2416694fd807caf8b1fdd6ae86059cee3c0c8a4f", "url": "https://github.com/line/armeria/commit/2416694fd807caf8b1fdd6ae86059cee3c0c8a4f", "message": "Use Guava Sets", "committedDate": "2020-10-10T09:21:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyMjk0Ng==", "url": "https://github.com/line/armeria/pull/3105#discussion_r503622946", "bodyText": "nit: Could introduce second.entrySet() as a local variable and reuse?", "author": "ikhoon", "createdAt": "2020-10-13T01:55:35Z", "path": "logback/src/main/java/com/linecorp/armeria/common/logback/UnionMap.java", "diffHunk": "@@ -108,6 +109,26 @@ public void clear() {\n             return entrySet;\n         }\n \n-        return entrySet = Collections.unmodifiableSet(Sets.union(first.entrySet(), second.entrySet()));\n+        // Check for dupes first to reduce allocations on the vastly more common case where there aren't any.\n+        boolean secondHasDupes = false;\n+        for (Entry<K, V> entry : second.entrySet()) {", "originalCommit": "2416694fd807caf8b1fdd6ae86059cee3c0c8a4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMDI2NA==", "url": "https://github.com/line/armeria/pull/3105#discussion_r503700264", "bodyText": "IIUC, Sets.union() returns an immutable view, so there`s no need to wrap it again. It also handles the duplicate entries already, so maybe we can simplify most of this pull request?", "author": "trustin", "createdAt": "2020-10-13T06:39:25Z", "path": "logback/src/main/java/com/linecorp/armeria/common/logback/UnionMap.java", "diffHunk": "@@ -108,6 +109,26 @@ public void clear() {\n             return entrySet;\n         }\n \n-        return entrySet = Collections.unmodifiableSet(Sets.union(first.entrySet(), second.entrySet()));\n+        // Check for dupes first to reduce allocations on the vastly more common case where there aren't any.\n+        boolean secondHasDupes = false;\n+        for (Entry<K, V> entry : second.entrySet()) {\n+            if (first.containsKey(entry.getKey())) {\n+                secondHasDupes = true;\n+                break;\n+            }\n+        }\n+\n+        final Set<Entry<K, V>> filteredSecond;\n+        if (!secondHasDupes) {\n+            filteredSecond = second.entrySet();\n+        } else {\n+            filteredSecond = new LinkedHashSet<>();\n+            for (Entry<K, V> entry : second.entrySet()) {\n+                if (!first.containsKey(entry.getKey())) {\n+                    filteredSecond.add(entry);\n+                }\n+            }\n+        }\n+        return entrySet = Collections.unmodifiableSet(Sets.union(first.entrySet(), filteredSecond));", "originalCommit": "2416694fd807caf8b1fdd6ae86059cee3c0c8a4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxNzU0MQ==", "url": "https://github.com/line/armeria/pull/3105#discussion_r503717541", "bodyText": "It handles duplicates, but the items of the set are Entry, not the key, so it's not deduping. Hence the bug in the first place :)", "author": "anuraaga", "createdAt": "2020-10-13T07:15:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMDI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc2NTI0MQ==", "url": "https://github.com/line/armeria/pull/3105#discussion_r503765241", "bodyText": "Ah \ud83e\udd23", "author": "trustin", "createdAt": "2020-10-13T08:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMDI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc2NjEzMQ==", "url": "https://github.com/line/armeria/pull/3105#discussion_r503766131", "bodyText": "If that's the case, then maybe ConcatenatedSet is better, especially in terms of iteration performance?", "author": "trustin", "createdAt": "2020-10-13T08:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMDI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc5MzM1MQ==", "url": "https://github.com/line/armeria/pull/3105#discussion_r503793351", "bodyText": "Ah yeah that's true, I forgot I removed the dedupe logic from it assuming the caller deduped to get some performance back. @kojilin Sorry for the bad pointer, it's probably good to avoid Sets.union here.", "author": "anuraaga", "createdAt": "2020-10-13T09:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMDI2NA=="}], "type": "inlineReview"}, {"oid": "e7f5935dbfa51e16c9cb7f0932bd5bdd44fbc54d", "url": "https://github.com/line/armeria/commit/e7f5935dbfa51e16c9cb7f0932bd5bdd44fbc54d", "message": "Revert \"Use Guava Sets\"\n\nThis reverts commit 2416694f", "committedDate": "2020-10-13T10:09:17Z", "type": "commit"}, {"oid": "336d843dad02e6906d4b084dc96345303121536f", "url": "https://github.com/line/armeria/commit/336d843dad02e6906d4b084dc96345303121536f", "message": "Revert and extract local variable", "committedDate": "2020-10-13T10:12:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg1Nzk3MQ==", "url": "https://github.com/line/armeria/pull/3105#discussion_r503857971", "bodyText": "This is the last comment I believe: Do we need to wrap ConcatenatedSet with UnmodifiableSet? It looks unmodifiable already.", "author": "trustin", "createdAt": "2020-10-13T10:58:08Z", "path": "logback/src/main/java/com/linecorp/armeria/common/logback/UnionMap.java", "diffHunk": "@@ -108,6 +110,99 @@ public void clear() {\n             return entrySet;\n         }\n \n-        return entrySet = Collections.unmodifiableSet(Sets.union(first.entrySet(), second.entrySet()));\n+        // Check for dupes first to reduce allocations on the vastly more common case where there aren't any.\n+        boolean secondHasDupes = false;\n+        final Set<Entry<K, V>> secondEntries = second.entrySet();\n+        for (Entry<K, V> entry : secondEntries) {\n+            if (first.containsKey(entry.getKey())) {\n+                secondHasDupes = true;\n+                break;\n+            }\n+        }\n+\n+        final Set<Entry<K, V>> filteredSecond;\n+        if (!secondHasDupes) {\n+            filteredSecond = secondEntries;\n+        } else {\n+            filteredSecond = new LinkedHashSet<>();\n+            for (Entry<K, V> entry : secondEntries) {\n+                if (!first.containsKey(entry.getKey())) {\n+                    filteredSecond.add(entry);\n+                }\n+            }\n+        }\n+        return entrySet = Collections.unmodifiableSet(new ConcatenatedSet<>(first.entrySet(), filteredSecond));", "originalCommit": "336d843dad02e6906d4b084dc96345303121536f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d183e036d59d27f9595271e56519b14e4cd6a198", "url": "https://github.com/line/armeria/commit/d183e036d59d27f9595271e56519b14e4cd6a198", "message": "Remove wrapping unmodified set.", "committedDate": "2020-10-13T13:21:31Z", "type": "commit"}]}