{"pr_number": 4187, "pr_title": "Climbing should not bypass cramming gamerule", "pr_createdAt": "2020-08-23T19:37:12Z", "pr_url": "https://github.com/PaperMC/Paper/pull/4187", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1ODg1MA==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475258850", "bodyText": "Lower the paper comment?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    // Paper start\n          \n          \n            \n                 @Override\n          \n          \n            \n                 public boolean isCollidable() {\n          \n          \n            \n                 @Override\n          \n          \n            \n                 public boolean isCollidable() {\n          \n          \n            \n            +        // Paper start", "author": "Prof-Bloodstone", "createdAt": "2020-08-23T20:00:14Z", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n++    // Paper start\n+     @Override\n+     public boolean isCollidable() {", "originalCommit": "e0f5a2d1f1579e46126a0eb995747e4085131185", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1OTE5Nw==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475259197", "bodyText": "Since canCollideWith is checked on both entities - shouldn't isCollidable also be checked on both?", "author": "Prof-Bloodstone", "createdAt": "2020-08-23T20:04:29Z", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n++    // Paper start\n+     @Override\n+     public boolean isCollidable() {\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);\n++    }\n++\n++    @Override\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        return this.isAlive() && !this.isSpectator() && (ignoreClimbing || !this.isClimbing()) && this.collides; // CraftBukkit\n++        // Paper end\n+     }\n+ \n+     // CraftBukkit start - collidable API\n+diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+index 13fcb666ec20f844846eb48265ec9f77484b397a..4af241e4b8d073acf88a6c12896ea1bdeaa983d1 100644\n+--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+@@ -107,7 +107,7 @@ public abstract class EntityMinecartAbstract extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityParrot.java b/src/main/java/net/minecraft/server/EntityParrot.java\n+index 34e08dda2e16cd4a6ecd8d8c6dc89f090ec2bc56..318852bff2b4ddc88465287a34377e47f3e72280 100644\n+--- a/src/main/java/net/minecraft/server/EntityParrot.java\n++++ b/src/main/java/net/minecraft/server/EntityParrot.java\n+@@ -314,8 +314,8 @@ public class EntityParrot extends EntityPerchable implements EntityBird {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n+-        return super.isCollidable(); // CraftBukkit - collidable API\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n++        return super.isCollidable(ignoreClimbing); // CraftBukkit - collidable API // Paper\n+     }\n+ \n+     @Override\n+diff --git a/src/main/java/net/minecraft/server/IEntitySelector.java b/src/main/java/net/minecraft/server/IEntitySelector.java\n+index 06ce390b6492f23343e57e648bff241d96fdb7b6..9dafea8af0284e17f7ae9b755eddc2e6349833df 100644\n+--- a/src/main/java/net/minecraft/server/IEntitySelector.java\n++++ b/src/main/java/net/minecraft/server/IEntitySelector.java\n+@@ -43,11 +43,17 @@ public final class IEntitySelector {\n+     }\n+ \n+     public static Predicate<Entity> a(Entity entity) {\n++        // Paper start - ignoreClimbing param\n++        return pushable(entity, false);\n++    }\n++\n++    public static Predicate<Entity> pushable(Entity entity, boolean ignoreClimbing) {\n++        // Paper end\n+         ScoreboardTeamBase scoreboardteambase = entity.getScoreboardTeam();\n+         ScoreboardTeamBase.EnumTeamPush scoreboardteambase_enumteampush = scoreboardteambase == null ? ScoreboardTeamBase.EnumTeamPush.ALWAYS : scoreboardteambase.getCollisionRule();\n+ \n+         return (Predicate) (scoreboardteambase_enumteampush == ScoreboardTeamBase.EnumTeamPush.NEVER ? Predicates.alwaysFalse() : IEntitySelector.g.and((entity1) -> {\n+-            if (!entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API\n++            if (!entity1.isCollidable(ignoreClimbing) || !entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API // Paper - isCollidable", "originalCommit": "e0f5a2d1f1579e46126a0eb995747e4085131185", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDAwOA==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260008", "bodyText": "No, the canCollideWith is an API addition from md_5 and has nothing to do with the cramming rule fix.", "author": "BillyGalbreath", "createdAt": "2020-08-23T20:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1OTE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDkwNw==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260907", "bodyText": "Derp. You are right, makes sense.", "author": "Prof-Bloodstone", "createdAt": "2020-08-23T20:20:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1OTE5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDQ1Mg==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260452", "bodyText": "?", "author": "BillyGalbreath", "createdAt": "2020-08-23T20:17:53Z", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper", "originalCommit": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDUxMg==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260512", "bodyText": "IntelliJ going rogue again \ud83d\ude20", "author": "Proximyst", "createdAt": "2020-08-23T20:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260615", "bodyText": "This wasnt neccessary since Entity#isCollidable() already forwards to isCollidable(boolean)", "author": "BillyGalbreath", "createdAt": "2020-08-23T20:19:35Z", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n+     @Override\n+     public boolean isCollidable() {\n++        // Paper start\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);", "originalCommit": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MTAyMg==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475261022", "bodyText": "It was when testing. Without that one, e.g. pigs in vines would not cram to death even though there were well over 50 pigs there; the second I started the server with, they crammed to death.", "author": "Proximyst", "createdAt": "2020-08-23T20:22:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MzU1OQ==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475263559", "bodyText": "You likely didn't add the param to this method in your test? My patch made it so the only isCollidable() was in Entity\nWill test here in a minute and see whats up", "author": "BillyGalbreath", "createdAt": "2020-08-23T20:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2NjA0Nw==", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475266047", "bodyText": "Ok, properly tested and confirmed you did fix a bug with my impl here. Carry on ^_^", "author": "BillyGalbreath", "createdAt": "2020-08-23T20:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ=="}], "type": "inlineReview"}, {"oid": "aeaf8a5693e571c22d49f17be2b9f678d9c31bdc", "url": "https://github.com/PaperMC/Paper/commit/aeaf8a5693e571c22d49f17be2b9f678d9c31bdc", "message": "Climbing should not bypass cramming gamerule", "committedDate": "2020-08-26T14:04:03Z", "type": "forcePushed"}, {"oid": "d69fe99e90d63dd091d2cafb933d7eff6e2a771c", "url": "https://github.com/PaperMC/Paper/commit/d69fe99e90d63dd091d2cafb933d7eff6e2a771c", "message": "Climbing should not bypass cramming gamerule", "committedDate": "2020-10-27T21:57:42Z", "type": "forcePushed"}, {"oid": "6e1ebf8e9f460dabb536f4d206a77e706d253127", "url": "https://github.com/PaperMC/Paper/commit/6e1ebf8e9f460dabb536f4d206a77e706d253127", "message": "Climbing should not bypass cramming gamerule", "committedDate": "2020-12-02T21:53:34Z", "type": "commit"}, {"oid": "6e1ebf8e9f460dabb536f4d206a77e706d253127", "url": "https://github.com/PaperMC/Paper/commit/6e1ebf8e9f460dabb536f4d206a77e706d253127", "message": "Climbing should not bypass cramming gamerule", "committedDate": "2020-12-02T21:53:34Z", "type": "forcePushed"}]}