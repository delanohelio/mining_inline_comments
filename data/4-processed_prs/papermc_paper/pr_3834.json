{"pr_number": 3834, "pr_title": "Add Block#isValidTool", "pr_createdAt": "2020-07-06T19:47:24Z", "pr_url": "https://github.com/PaperMC/Paper/pull/3834", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwMTI1Nw==", "url": "https://github.com/PaperMC/Paper/pull/3834#discussion_r475201257", "bodyText": "Perhaps we should use a tristate here instead? I.e. either you can break it as it's supposed to, can break but not ideal tool, or cannot break at all. (cc @kickash32)", "author": "Proximyst", "createdAt": "2020-08-23T10:20:20Z", "path": "Spigot-API-Patches/0218-Add-Block-isValidTool.patch", "diffHunk": "@@ -0,0 +1,26 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Mon, 6 Jul 2020 12:44:23 -0700\n+Subject: [PATCH] Add Block#isValidTool\n+\n+\n+diff --git a/src/main/java/org/bukkit/block/Block.java b/src/main/java/org/bukkit/block/Block.java\n+index 999f2a362c62cf58752d9c3d378aafe6754d2aaf..5f3503c481e03b3c49588ca1086bcb3675073e79 100644\n+--- a/src/main/java/org/bukkit/block/Block.java\n++++ b/src/main/java/org/bukkit/block/Block.java\n+@@ -218,6 +218,15 @@ public interface Block extends Metadatable {\n+     public static int getBlockKeyZ(long packed) {\n+         return (int) ((packed << 10) >> 37);\n+     }\n++\n++    /**\n++     * Checks if the itemstack is a valid tool to\n++     * break the block with\n++     *\n++     * @param itemStack The (tool) itemstack\n++     * @return whether the block will drop items\n++     */\n++    boolean isValidTool(ItemStack itemStack);", "originalCommit": "652d298b4297ed6e2fe3513ce423e1675d3324e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIzMzMyNg==", "url": "https://github.com/PaperMC/Paper/pull/3834#discussion_r475233326", "bodyText": "Not exactly opposed to it but maybe that should be a different method that returns a 3 valued enum. The original purpose of this API addition was to have a create a simple API call which would help reduce code complexity for API consumers, so lets not lose sight of that.", "author": "kickash32", "createdAt": "2020-08-23T15:36:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwMTI1Nw=="}], "type": "inlineReview"}, {"oid": "761333663780573d543bfa94ad422d4b2be3f357", "url": "https://github.com/PaperMC/Paper/commit/761333663780573d543bfa94ad422d4b2be3f357", "message": "rebased", "committedDate": "2020-11-02T21:31:23Z", "type": "forcePushed"}, {"oid": "a14a40ede3493f21d8bbe39e4051676fe0b03669", "url": "https://github.com/PaperMC/Paper/commit/a14a40ede3493f21d8bbe39e4051676fe0b03669", "message": "fix tests & rebase", "committedDate": "2020-12-22T22:34:57Z", "type": "forcePushed"}, {"oid": "51b938d434d2cc36f9e995c975251299fe8fada0", "url": "https://github.com/PaperMC/Paper/commit/51b938d434d2cc36f9e995c975251299fe8fada0", "message": "Add Block#isValidTool", "committedDate": "2021-03-09T18:33:07Z", "type": "commit"}, {"oid": "51b938d434d2cc36f9e995c975251299fe8fada0", "url": "https://github.com/PaperMC/Paper/commit/51b938d434d2cc36f9e995c975251299fe8fada0", "message": "Add Block#isValidTool", "committedDate": "2021-03-09T18:33:07Z", "type": "forcePushed"}]}