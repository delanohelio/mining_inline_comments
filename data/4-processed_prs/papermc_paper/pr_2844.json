{"pr_number": 2844, "pr_title": "Guard against serializing mismatching chunk coordinate", "pr_createdAt": "2020-01-12T06:15:18Z", "pr_url": "https://github.com/PaperMC/Paper/pull/2844", "timeline": [{"oid": "32599ecd745f84a31a2156459d3233aed87c02da", "url": "https://github.com/PaperMC/Paper/commit/32599ecd745f84a31a2156459d3233aed87c02da", "message": "Guard against serializing mismatching chunk coordinate\n\nShould help if something dumb happens", "committedDate": "2020-01-12T05:39:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MDc2MQ==", "url": "https://github.com/PaperMC/Paper/pull/2844#discussion_r365560761", "bodyText": "Justification for throw vs fix? jw", "author": "electronicboy", "createdAt": "2020-01-12T06:27:49Z", "path": "Spigot-Server-Patches/0422-Guard-against-serializing-mismatching-chunk-coordina.patch", "diffHunk": "@@ -0,0 +1,57 @@\n+From 4feed34cc8482b201d1c0a61edc1590991e19016 Mon Sep 17 00:00:00 2001\n+From: Spottedleaf <Spottedleaf@users.noreply.github.com>\n+Date: Fri, 27 Dec 2019 09:42:26 -0800\n+Subject: [PATCH] Guard against serializing mismatching chunk coordinate\n+\n+Should help if something dumb happens\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkRegionLoader.java b/src/main/java/net/minecraft/server/ChunkRegionLoader.java\n+index 26f1a4b09..4349d22cc 100644\n+--- a/src/main/java/net/minecraft/server/ChunkRegionLoader.java\n++++ b/src/main/java/net/minecraft/server/ChunkRegionLoader.java\n+@@ -23,6 +23,13 @@ public class ChunkRegionLoader {\n+ \n+     private static final Logger LOGGER = LogManager.getLogger();\n+ \n++    // Paper start - guard against serializing mismatching coordinates\n++    // TODO Note: This needs to be re-checked each update\n++    public static ChunkCoordIntPair getChunkCoordinate(NBTTagCompound chunkData) {\n++        NBTTagCompound levelData = chunkData.getCompound(\"Level\");\n++        return new ChunkCoordIntPair(levelData.getInt(\"xPos\"), levelData.getInt(\"zPos\"));\n++    }\n++    // Paper end\n+     // Paper start\n+     public static final class InProgressChunkHolder {\n+ \n+@@ -48,8 +55,8 @@ public class ChunkRegionLoader {\n+         // Paper end\n+         ChunkGenerator<?> chunkgenerator = worldserver.getChunkProvider().getChunkGenerator();\n+         WorldChunkManager worldchunkmanager = chunkgenerator.getWorldChunkManager();\n+-        NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound(\"Level\");\n+-        ChunkCoordIntPair chunkcoordintpair1 = new ChunkCoordIntPair(nbttagcompound1.getInt(\"xPos\"), nbttagcompound1.getInt(\"zPos\"));\n++        NBTTagCompound nbttagcompound1 = nbttagcompound.getCompound(\"Level\"); // Paper - diff on change, see ChunkRegionLoader#getChunkCoordinate\n++        ChunkCoordIntPair chunkcoordintpair1 = new ChunkCoordIntPair(nbttagcompound1.getInt(\"xPos\"), nbttagcompound1.getInt(\"zPos\")); // Paper - diff on change, see ChunkRegionLoader#getChunkCoordinate\n+ \n+         if (!Objects.equals(chunkcoordintpair, chunkcoordintpair1)) {\n+             ChunkRegionLoader.LOGGER.error(\"Chunk file at {} is in the wrong location; relocating. (Expected {}, got {})\", chunkcoordintpair, chunkcoordintpair, chunkcoordintpair1);\n+diff --git a/src/main/java/net/minecraft/server/IChunkLoader.java b/src/main/java/net/minecraft/server/IChunkLoader.java\n+index 134c76065..25c8b131f 100644\n+--- a/src/main/java/net/minecraft/server/IChunkLoader.java\n++++ b/src/main/java/net/minecraft/server/IChunkLoader.java\n+@@ -106,6 +106,13 @@ public class IChunkLoader extends RegionFileCache implements AutoCloseable {\n+ //\n+     public void a(ChunkCoordIntPair chunkcoordintpair, NBTTagCompound nbttagcompound) throws IOException { write(chunkcoordintpair, nbttagcompound); } // Paper OBFHELPER\n+     public void write(ChunkCoordIntPair chunkcoordintpair, NBTTagCompound nbttagcompound) throws IOException { // Paper - OBFHELPER - (Switched around for safety)\n++        // Paper start\n++        if (!chunkcoordintpair.equals(ChunkRegionLoader.getChunkCoordinate(nbttagcompound))) {", "originalCommit": "32599ecd745f84a31a2156459d3233aed87c02da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MDgwMA==", "url": "https://github.com/PaperMC/Paper/pull/2844#discussion_r365560800", "bodyText": "if neither are consistent we're taking a coin toss for overriding good data", "author": "Spottedleaf", "createdAt": "2020-01-12T06:28:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MDc2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MDgzMg==", "url": "https://github.com/PaperMC/Paper/pull/2844#discussion_r365560832", "bodyText": "Good point, I mean, I'm guessing that I'm mostly expecting that this is\n\nNot the issue\nNever going to be seen\n\nBut, I've seen odder things...", "author": "electronicboy", "createdAt": "2020-01-12T06:29:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MDc2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MDg0Mg==", "url": "https://github.com/PaperMC/Paper/pull/2844#discussion_r365560842", "bodyText": "if anything would be caught it'll be plugins", "author": "Spottedleaf", "createdAt": "2020-01-12T06:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU2MDc2MQ=="}], "type": "inlineReview"}]}