{"pr_number": 3252, "pr_title": "Allow delegation to vanilla chunk gen (implements #3250)", "pr_createdAt": "2020-04-29T00:17:19Z", "pr_url": "https://github.com/PaperMC/Paper/pull/3252", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r417701138", "bodyText": "is there anything here making this unsafe for async usage? If so, i think we should resolve that.\nWorldGenerators are now supposed to be parallel capable, so let's not regress that.", "author": "aikar", "createdAt": "2020-04-30T01:13:00Z", "path": "Spigot-Server-Patches/0496-Allow-delegation-to-vanilla-chunk-gen.patch", "diffHunk": "@@ -0,0 +1,71 @@\n+From 9a92b34331e5f08498239aa29b6bba768fdba252 Mon Sep 17 00:00:00 2001\n+From: MiniDigger <admin@minidigger.me>\n+Date: Wed, 29 Apr 2020 02:10:32 +0200\n+Subject: [PATCH] Allow delegation to vanilla chunk gen\n+\n+\n+diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java\n+index f49193d9d..c7e41c7e3 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java\n++++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java\n+@@ -1857,6 +1857,31 @@ public final class CraftServer implements Server {\n+         return new CraftChunkData(world);\n+     }\n+ \n++    // Paper start\n++    @Override\n++    public ChunkGenerator.ChunkData createVanillaChunkData(World world, int x, int z) {", "originalCommit": "977c7644c7e956baec7e35a70d195583744a1bd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTY0NA==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r417701644", "bodyText": "Overall may be better to return a CompletableFuture for safety if we do need to multi tier stage this int he future.", "author": "aikar", "createdAt": "2020-04-30T01:14:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTc0OA==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r417701748", "bodyText": "Even if that future will currently be resolved immediately, keeps API safe if it can't be in future.", "author": "aikar", "createdAt": "2020-04-30T01:15:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwNzQ1MA==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r417707450", "bodyText": "We really do NEED the ability to get the content from the vanilla generator as modified by \"shouldAddFoo\". Otherwise generators still need to come up with that content on their own anyways.\nAs for the async, iirc the vanilla generator has the isParallelEnabledOrWhateverItWasCalled function returning false. I assume this would be doing the same here.", "author": "Pangamma", "createdAt": "2020-04-30T01:37:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwNzk2NQ==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r417707965", "bodyText": "I'll start devving like this and let you know if it breaks...", "author": "Pangamma", "createdAt": "2020-04-30T01:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg3NTEwMg==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r417875102", "bodyText": "I don't know enough about world generation and how bukkits custom world gen fits into the whole parallel world gen. I did just assume this will work as it's what vanilla does too, altho in multiple steps after each other, this now does all steps per chunk.\nIn my testing I didn't run into any issues (as long as I left decorations alone, those blow up horrible, but spigot has the booleans for that you can override), pangammas testing is much more large scale, so let's see what that does.\nIf anybody who has more insight into how this all works together that would be greatly appreciated obviously.\nEdit for what it's worth, I did test all that with parallel world gen enabled.", "author": "MiniDigger", "createdAt": "2020-04-30T09:23:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMxOTQ1OQ==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r418319459", "bodyText": "It does not break, though it is always possible I am just not testing hard enough.", "author": "Pangamma", "createdAt": "2020-04-30T22:14:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3OTYxNA==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r418979614", "bodyText": "I have been testing with parallel capable enabled for the last 3 days or so. I have not experienced any crashes from leaving that flag true.", "author": "Pangamma", "createdAt": "2020-05-02T16:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwMTEzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwNzgxNg==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r418307816", "bodyText": "these doCarving calls need to be removed, thats by spigots generator.shouldGenerateCaves() already", "author": "MiniDigger", "createdAt": "2020-04-30T21:46:57Z", "path": "Spigot-Server-Patches/0496-Allow-delegation-to-vanilla-chunk-gen.patch", "diffHunk": "@@ -0,0 +1,71 @@\n+From 9a92b34331e5f08498239aa29b6bba768fdba252 Mon Sep 17 00:00:00 2001\n+From: MiniDigger <admin@minidigger.me>\n+Date: Wed, 29 Apr 2020 02:10:32 +0200\n+Subject: [PATCH] Allow delegation to vanilla chunk gen\n+\n+\n+diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java\n+index f49193d9d..c7e41c7e3 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java\n++++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java\n+@@ -1857,6 +1857,31 @@ public final class CraftServer implements Server {\n+         return new CraftChunkData(world);\n+     }\n+ \n++    // Paper start\n++    @Override\n++    public ChunkGenerator.ChunkData createVanillaChunkData(World world, int x, int z) {\n++        // get empty object\n++        CraftChunkData data = (CraftChunkData) createChunkData(world);\n++        // do bunch of vanilla shit\n++        net.minecraft.server.WorldServer nmsWorld = ((CraftWorld) world).getHandle();\n++        net.minecraft.server.ProtoChunk protoChunk = new net.minecraft.server.ProtoChunk(new net.minecraft.server.ChunkCoordIntPair(x, z), net.minecraft.server.ChunkConverter.a); // TODO obfhelper\n++        List<net.minecraft.server.IChunkAccess> list = new ArrayList<>();\n++        list.add(protoChunk);\n++        net.minecraft.server.RegionLimitedWorldAccess genRegion = new net.minecraft.server.RegionLimitedWorldAccess(nmsWorld, list);\n++        // call vanilla generator, one feature after another. Order here is important!\n++        net.minecraft.server.ChunkGenerator<?> chunkGenerator = ((CraftWorld) world).getHandle().worldProvider.getChunkGenerator();\n++        chunkGenerator.createBiomes(protoChunk);\n++        chunkGenerator.buildNoise(genRegion, protoChunk);\n++        chunkGenerator.buildBase(genRegion, protoChunk);\n++        chunkGenerator.doCarving(genRegion.d(), protoChunk,  net.minecraft.server.WorldGenStage.Features.AIR);", "originalCommit": "977c7644c7e956baec7e35a70d195583744a1bd1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc3NjA0MA==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r422776040", "bodyText": "Any update on this @MiniDigger ? I gathered this was a 'dont pull' comment", "author": "aikar", "createdAt": "2020-05-11T04:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwNzgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgyMjQxNA==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r422822414", "bodyText": "Come on man! We're all eager to try it out and get it merged in! @MiniDigger", "author": "Pangamma", "createdAt": "2020-05-11T06:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwNzgxNg=="}], "type": "inlineReview"}, {"oid": "86f3d12586f1ec31b86865d7531b8a4dd852fe90", "url": "https://github.com/PaperMC/Paper/commit/86f3d12586f1ec31b86865d7531b8a4dd852fe90", "message": "Allow delegation to vanilla chunk gen", "committedDate": "2020-05-11T19:14:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MDI1Nw==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r439770257", "bodyText": "Should this go in 0003-MC-Dev-fixes.patch? I haven't contributed to Paper in a while - I forget the right procedure \ud83d\ude06", "author": "Techcable", "createdAt": "2020-06-13T21:19:49Z", "path": "Spigot-Server-Patches/0521-Allow-delegation-to-vanilla-chunk-gen.patch", "diffHunk": "@@ -0,0 +1,88 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: MiniDigger <admin@minidigger.me>\n+Date: Wed, 29 Apr 2020 02:10:32 +0200\n+Subject: [PATCH] Allow delegation to vanilla chunk gen\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkConverter.java b/src/main/java/net/minecraft/server/ChunkConverter.java\n+index 8dd940fd94e4d129d1b8e20a91310028477bbd9b..24c64e5f487ef8ccd508071feb88712216c7b66d 100644\n+--- a/src/main/java/net/minecraft/server/ChunkConverter.java\n++++ b/src/main/java/net/minecraft/server/ChunkConverter.java\n+@@ -17,7 +17,7 @@ import org.apache.logging.log4j.Logger;\n+ public class ChunkConverter {\n+ \n+     private static final Logger LOGGER = LogManager.getLogger();\n+-    public static final ChunkConverter a = new ChunkConverter();\n++    public static final ChunkConverter a = new ChunkConverter(); public static ChunkConverter getEmptyConverter() { return a; } // Paper - obfhelper\n+     private static final EnumDirection8[] c = EnumDirection8.values();\n+     private final EnumSet<EnumDirection8> d;\n+     private final int[][] e;\n+@@ -343,7 +343,7 @@ public class ChunkConverter {\n+                         if ((Integer) iblockdata.get(BlockProperties.ah) >= j) {\n+                             generatoraccess.setTypeAndData(blockposition, (IBlockData) iblockdata.set(BlockProperties.ah, j), 18);\n+                             if (i != 7) {\n+-                                EnumDirection[] aenumdirection = null.f;\n++                                EnumDirection[] aenumdirection = f; // Paper - decomp fix", "originalCommit": "86f3d12586f1ec31b86865d7531b8a4dd852fe90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMTg3MQ==", "url": "https://github.com/PaperMC/Paper/pull/3252#discussion_r439811871", "bodyText": "I actually have no clue, I have seen decomp fixes in other patches before, I can move it if wanted.", "author": "MiniDigger", "createdAt": "2020-06-14T09:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MDI1Nw=="}], "type": "inlineReview"}, {"oid": "40ace3f7b767dbd96ba6a7614c55aa7da48ffce4", "url": "https://github.com/PaperMC/Paper/commit/40ace3f7b767dbd96ba6a7614c55aa7da48ffce4", "message": "Allow delegation to vanilla chunk gen", "committedDate": "2020-07-05T03:45:11Z", "type": "commit"}, {"oid": "40ace3f7b767dbd96ba6a7614c55aa7da48ffce4", "url": "https://github.com/PaperMC/Paper/commit/40ace3f7b767dbd96ba6a7614c55aa7da48ffce4", "message": "Allow delegation to vanilla chunk gen", "committedDate": "2020-07-05T03:45:11Z", "type": "forcePushed"}]}