{"pr_number": 4602, "pr_title": "Improve ServerGUI", "pr_createdAt": "2020-10-03T06:31:54Z", "pr_url": "https://github.com/PaperMC/Paper/pull/4602", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139811", "bodyText": "The TPS should be the same as with /tps; the last 5s isn't always the best metric.\nAlso use an obfhelper to access this.d.", "author": "Proximyst", "createdAt": "2020-10-03T11:26:03Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );", "originalCommit": "1ebe8782619d4539492d9764deb426cb879f4b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTU5Mg==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145592", "bodyText": "So you want Bukkit.getServer().getTPS[0] instead of Bukkit.getTPS[0] ?\nWhat is a obfhelper? I just searched it up on google, but didn't anything useful.", "author": "AlexProgrammerDE", "createdAt": "2020-10-03T12:53:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTczMg==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145732", "bodyText": "Check the TPS command's source.\nCheck the CONTRIBUTING.md file.", "author": "Proximyst", "createdAt": "2020-10-03T12:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1MzIyMA==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499153220", "bodyText": "@Proximyst\n\nYou mean this code?\n\n        double[] tps = org.bukkit.Bukkit.getTPS();\n        String[] tpsAvg = new String[tps.length];\n\n        for ( int i = 0; i < tps.length; i++) {\n            tpsAvg[i] = format( tps[i] );\n        }\n        sender.sendMessage(ChatColor.GOLD + \"TPS from last 1m, 5m, 15m: \" + org.apache.commons.lang.StringUtils.join(tpsAvg, \", \"));`\nI still don't get what you want me to do here.\n2. Like this? public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER", "author": "AlexProgrammerDE", "createdAt": "2020-10-03T14:37:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTkwNQ==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139905", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "author": "Proximyst", "createdAt": "2020-10-03T11:27:18Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper", "originalCommit": "1ebe8782619d4539492d9764deb426cb879f4b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTQ0Ng==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145446", "bodyText": "Yeah right imma revert them.", "author": "AlexProgrammerDE", "createdAt": "2020-10-03T12:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTkwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk1NA==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139954", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "author": "Proximyst", "createdAt": "2020-10-03T11:27:54Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper", "originalCommit": "1ebe8782619d4539492d9764deb426cb879f4b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139967", "bodyText": "Did you check if this was the cause to your issue?", "author": "Proximyst", "createdAt": "2020-10-03T11:28:11Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "originalCommit": "1ebe8782619d4539492d9764deb426cb879f4b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTQwNg==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145406", "bodyText": "Nope, but even with official builds i saw it happen.", "author": "AlexProgrammerDE", "createdAt": "2020-10-03T12:51:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTY5Nw==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145697", "bodyText": "See this stackoverflow comment: https://stackoverflow.com/questions/31219169/javafx-application-name-on-gnome#comment99994011_54467323\nSeems it needs a Preloader where the name is changed.", "author": "Proximyst", "createdAt": "2020-10-03T12:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NzIxNw==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499157217", "bodyText": "I wonder if it is worth doing that. Seems like its going to get hard to fix this.", "author": "AlexProgrammerDE", "createdAt": "2020-10-03T15:27:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIyMTQ0Nw==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502221447", "bodyText": "I will just skip this issue. May be worth fixing sometime else.", "author": "AlexProgrammerDE", "createdAt": "2020-10-09T06:48:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2NjQxMQ==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502766411", "bodyText": "I just pushed some changes which fixed it. Reflection is required.", "author": "AlexProgrammerDE", "createdAt": "2020-10-10T08:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU2NDgxNQ==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r554564815", "bodyText": "as talked about in discord this fix was removed", "author": "AlexProgrammerDE", "createdAt": "2021-01-10T13:04:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk4OQ==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139989", "bodyText": "The name is in no way conveyed to the user (afaik?), so this is unnecessary.", "author": "Proximyst", "createdAt": "2020-10-03T11:28:39Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper\n++\n++        // Paper start - Add logo as frame image\n++        try {\n++            jframe.setIconImage(ImageIO.read(Objects.requireNonNull(ServerGUI.class.getClassLoader().getResourceAsStream(\"logo.png\"))));\n++        } catch (IOException ignore) {\n++        }\n++        // Paper end\n++\n+         jframe.addWindowListener(new WindowAdapter() {\n+             public void windowClosing(WindowEvent windowevent) {\n+                 if (!servergui.f.getAndSet(true)) {\n+                     jframe.setTitle(\"Minecraft server - shutting down!\");\n++                    jframe.setName(\"Minecraft server - shutting down!\"); // Paper", "originalCommit": "1ebe8782619d4539492d9764deb426cb879f4b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MDAzMA==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499140030", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "author": "Proximyst", "createdAt": "2020-10-03T11:29:13Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper\n++\n++        // Paper start - Add logo as frame image\n++        try {\n++            jframe.setIconImage(ImageIO.read(Objects.requireNonNull(ServerGUI.class.getClassLoader().getResourceAsStream(\"logo.png\"))));\n++        } catch (IOException ignore) {\n++        }\n++        // Paper end\n++\n+         jframe.addWindowListener(new WindowAdapter() {\n+             public void windowClosing(WindowEvent windowevent) {\n+                 if (!servergui.f.getAndSet(true)) {\n+                     jframe.setTitle(\"Minecraft server - shutting down!\");\n++                    jframe.setName(\"Minecraft server - shutting down!\"); // Paper\n+                     dedicatedserver.safeShutdown(true);\n+                     servergui.f();\n+                 }\n+@@ -100,7 +115,7 @@ public class ServerGUI extends JComponent {\n+ \n+     private JComponent d() {\n+         JList<?> jlist = new PlayerListBox(this.c);\n+-        JScrollPane jscrollpane = new JScrollPane(jlist, 22, 30);\n++        JScrollPane jscrollpane = new JScrollPane(jlist, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED); // Paper", "originalCommit": "1ebe8782619d4539492d9764deb426cb879f4b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MDAzMw==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499140033", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "author": "Proximyst", "createdAt": "2020-10-03T11:29:17Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper\n++\n++        // Paper start - Add logo as frame image\n++        try {\n++            jframe.setIconImage(ImageIO.read(Objects.requireNonNull(ServerGUI.class.getClassLoader().getResourceAsStream(\"logo.png\"))));\n++        } catch (IOException ignore) {\n++        }\n++        // Paper end\n++\n+         jframe.addWindowListener(new WindowAdapter() {\n+             public void windowClosing(WindowEvent windowevent) {\n+                 if (!servergui.f.getAndSet(true)) {\n+                     jframe.setTitle(\"Minecraft server - shutting down!\");\n++                    jframe.setName(\"Minecraft server - shutting down!\"); // Paper\n+                     dedicatedserver.safeShutdown(true);\n+                     servergui.f();\n+                 }\n+@@ -100,7 +115,7 @@ public class ServerGUI extends JComponent {\n+ \n+     private JComponent d() {\n+         JList<?> jlist = new PlayerListBox(this.c);\n+-        JScrollPane jscrollpane = new JScrollPane(jlist, 22, 30);\n++        JScrollPane jscrollpane = new JScrollPane(jlist, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED); // Paper\n+ \n+         jscrollpane.setBorder(new TitledBorder(new EtchedBorder(), \"Players\"));\n+         return jscrollpane;\n+@@ -109,7 +124,7 @@ public class ServerGUI extends JComponent {\n+     private JComponent e() {\n+         JPanel jpanel = new JPanel(new BorderLayout());\n+         JTextArea jtextarea = new JTextArea();\n+-        JScrollPane jscrollpane = new JScrollPane(jtextarea, 22, 30);\n++        JScrollPane jscrollpane = new JScrollPane(jtextarea, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED); // Paper", "originalCommit": "1ebe8782619d4539492d9764deb426cb879f4b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c4e0e82f240950ceaf7841cedc2de1ef9698e670", "url": "https://github.com/PaperMC/Paper/commit/c4e0e82f240950ceaf7841cedc2de1ef9698e670", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2020-10-03T14:59:16Z", "type": "forcePushed"}, {"oid": "99951a586f2cac8b7e4ec279a59c3d8c145e3e0e", "url": "https://github.com/PaperMC/Paper/commit/99951a586f2cac8b7e4ec279a59c3d8c145e3e0e", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2020-10-03T15:14:36Z", "type": "forcePushed"}, {"oid": "cda3ec4e104a305b1e3555425b1543ac5439d66c", "url": "https://github.com/PaperMC/Paper/commit/cda3ec4e104a305b1e3555425b1543ac5439d66c", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2020-10-09T19:43:24Z", "type": "forcePushed"}, {"oid": "f613f8e28d683b7ee0c40ec031e37508bc7167c3", "url": "https://github.com/PaperMC/Paper/commit/f613f8e28d683b7ee0c40ec031e37508bc7167c3", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2020-10-09T19:45:53Z", "type": "forcePushed"}, {"oid": "2442942cb9842299532ade03118f39df1ee3a476", "url": "https://github.com/PaperMC/Paper/commit/2442942cb9842299532ade03118f39df1ee3a476", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats\n- Fix title issue on gnome", "committedDate": "2020-10-10T08:49:23Z", "type": "forcePushed"}, {"oid": "3de1964a1164fb40304f53430312143ca3df505c", "url": "https://github.com/PaperMC/Paper/commit/3de1964a1164fb40304f53430312143ca3df505c", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats\n- Fix title issue on gnome", "committedDate": "2020-10-10T08:53:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTE2NA==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771164", "bodyText": "This is a Paper class.", "author": "Proximyst", "createdAt": "2020-10-10T09:44:38Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry", "originalCommit": "3de1964a1164fb40304f53430312143ca3df505c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTE4MA==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771180", "bodyText": "Paper comment", "author": "Proximyst", "createdAt": "2020-10-10T09:44:52Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];", "originalCommit": "3de1964a1164fb40304f53430312143ca3df505c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTI1NA==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771254", "bodyText": "No", "author": "Proximyst", "createdAt": "2020-10-10T09:45:15Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +35,18 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        getStatEntries()[2] = \"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg);\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+@@ -83,4 +93,10 @@ public class GuiStatsComponent extends JComponent {\n+     public void a() {\n+         this.f.stop();\n+     }\n++\n++    public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..032283c520536cafa075dfd3690590c03e488b94 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -2,15 +2,15 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.util.QueueLogAppender;\n+-import java.awt.BorderLayout;\n+-import java.awt.Component;\n+-import java.awt.Dimension;\n+-import java.awt.Font;\n++\n++import java.awt.*;", "originalCommit": "3de1964a1164fb40304f53430312143ca3df505c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MjYzOQ==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502772639", "bodyText": "lmao sry again my ide is handling imports without me noticing.", "author": "AlexProgrammerDE", "createdAt": "2020-10-10T10:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTI4Mg==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771282", "bodyText": "Don't touch sun packages", "author": "Proximyst", "createdAt": "2020-10-10T09:45:27Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +35,18 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        getStatEntries()[2] = \"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg);\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+@@ -83,4 +93,10 @@ public class GuiStatsComponent extends JComponent {\n+     public void a() {\n+         this.f.stop();\n+     }\n++\n++    public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..032283c520536cafa075dfd3690590c03e488b94 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -2,15 +2,15 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.util.QueueLogAppender;\n+-import java.awt.BorderLayout;\n+-import java.awt.Component;\n+-import java.awt.Dimension;\n+-import java.awt.Font;\n++\n++import java.awt.*;\n+ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +22,7 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -29,6 +30,7 @@ import javax.swing.text.BadLocationException;\n+ import javax.swing.text.Document;\n+ import org.apache.logging.log4j.LogManager;\n+ import org.apache.logging.log4j.Logger;\n++import sun.awt.X11.XToolkit;", "originalCommit": "3de1964a1164fb40304f53430312143ca3df505c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTM2Mw==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771363", "bodyText": "You don't need reflection nor sun pkg stuff here. Did you not look at the stackoverflow answer I linked?", "author": "Proximyst", "createdAt": "2020-10-10T09:46:20Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +35,18 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        getStatEntries()[2] = \"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg);\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+@@ -83,4 +93,10 @@ public class GuiStatsComponent extends JComponent {\n+     public void a() {\n+         this.f.stop();\n+     }\n++\n++    public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..032283c520536cafa075dfd3690590c03e488b94 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -2,15 +2,15 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.util.QueueLogAppender;\n+-import java.awt.BorderLayout;\n+-import java.awt.Component;\n+-import java.awt.Dimension;\n+-import java.awt.Font;\n++\n++import java.awt.*;\n+ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +22,7 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -29,6 +30,7 @@ import javax.swing.text.BadLocationException;\n+ import javax.swing.text.Document;\n+ import org.apache.logging.log4j.LogManager;\n+ import org.apache.logging.log4j.Logger;\n++import sun.awt.X11.XToolkit;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+@@ -46,6 +48,16 @@ public class ServerGUI extends JComponent {\n+             ;\n+         }\n+ \n++        // Paper start - Fix windows title issue on gnome desktop", "originalCommit": "3de1964a1164fb40304f53430312143ca3df505c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTQ1Mg==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771452", "bodyText": "Don't remove imports", "author": "Proximyst", "createdAt": "2020-10-10T09:47:41Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;", "originalCommit": "3de1964a1164fb40304f53430312143ca3df505c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTQ3Ng==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771476", "bodyText": "Bukkit is imported.", "author": "Proximyst", "createdAt": "2020-10-10T09:47:54Z", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();", "originalCommit": "3de1964a1164fb40304f53430312143ca3df505c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MjQ3Nw==", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502772477", "bodyText": "yeah idk what exactly happened there. Imma revert it", "author": "AlexProgrammerDE", "createdAt": "2020-10-10T09:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTQ3Ng=="}], "type": "inlineReview"}, {"oid": "345a88fddd8cd93eb6693a7d6ac0a983b3b580d6", "url": "https://github.com/PaperMC/Paper/commit/345a88fddd8cd93eb6693a7d6ac0a983b3b580d6", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats\n- Fix title issue on gnome", "committedDate": "2020-10-10T10:06:49Z", "type": "forcePushed"}, {"oid": "5219eb29d4dca4ec72e8ef694f5b236886bb1fe0", "url": "https://github.com/PaperMC/Paper/commit/5219eb29d4dca4ec72e8ef694f5b236886bb1fe0", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2020-10-10T10:37:56Z", "type": "forcePushed"}, {"oid": "822f83fa72455b809e7c31561d4a13a9e20058b7", "url": "https://github.com/PaperMC/Paper/commit/822f83fa72455b809e7c31561d4a13a9e20058b7", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2020-10-10T10:39:35Z", "type": "forcePushed"}, {"oid": "0b031f55be33815a9190099d55fd285a09ef36e7", "url": "https://github.com/PaperMC/Paper/commit/0b031f55be33815a9190099d55fd285a09ef36e7", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2021-03-03T21:12:37Z", "type": "commit"}, {"oid": "0b031f55be33815a9190099d55fd285a09ef36e7", "url": "https://github.com/PaperMC/Paper/commit/0b031f55be33815a9190099d55fd285a09ef36e7", "message": "Improve ServerGUI\n\n- Added logo to server frame\n- Show tps in the server stats", "committedDate": "2021-03-03T21:12:37Z", "type": "forcePushed"}]}