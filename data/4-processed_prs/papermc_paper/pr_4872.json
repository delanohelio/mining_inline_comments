{"pr_number": 4872, "pr_title": "Fix MC-4 (oldest MC bug) item position desync", "pr_createdAt": "2020-12-09T02:42:42Z", "pr_url": "https://github.com/PaperMC/Paper/pull/4872", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4NTMwMA==", "url": "https://github.com/PaperMC/Paper/pull/4872#discussion_r538985300", "bodyText": "these are encode/decode, encryption isn't right word here\nI'm thinking encodeDouble and decodeVector for names", "author": "aikar", "createdAt": "2020-12-09T03:51:05Z", "path": "Spigot-Server-Patches/0613-Fix-item-position-desync.patch", "diffHunk": "@@ -0,0 +1,58 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: BillyGalbreath <blake.galbreath@gmail.com>\n+Date: Tue, 8 Dec 2020 20:24:52 -0600\n+Subject: [PATCH] Fix item position desync\n+\n+This fixes item position desync (MC-4) by running the item coordinates\n+through the encryption/decryption methods of the packet that causes the\n+precision loss, which forces the server to lose the same precision as\n+the client keeping them in sync.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index 6ab0a51b421dc696aec292f2db955311c9cc31e3..c70b80ab32d7bac66f69a08f25726e73114bb7fe 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -462,4 +462,9 @@ public class PaperConfig {\n+     private static void trackPluginScoreboards() {\n+         trackPluginScoreboards = getBoolean(\"settings.track-plugin-scoreboards\", false);\n+     }\n++\n++    public static boolean fixItemPositionDesync = true;\n++    private static void fixItemPositionDesync() {\n++        fixItemPositionDesync = getBoolean(\"settings.fix-item-position-desync\", fixItemPositionDesync);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java\n+index 4efc40c01ec12b80bd7cf9d35cf0ea0df973baf7..9c5a331aaa9d97ce1b8ea748705db5581ded4010 100644\n+--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java\n++++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java\n+@@ -133,6 +133,12 @@ public class EntityTrackerEntry {\n+                 double vec3d_dz = this.tracker.locZ() - 2.44140625E-4D*(this.zLoc);\n+                 boolean flag1 = (vec3d_dx * vec3d_dx + vec3d_dy * vec3d_dy + vec3d_dz * vec3d_dz) >= 7.62939453125E-6D;\n+                 // Paper end - reduce allocation of Vec3D here\n++                // Paper start - fix MC-4\n++                if (com.destroystokyo.paper.PaperConfig.fixItemPositionDesync && this.tracker instanceof EntityItem) {\n++                    Vec3D loc = PacketPlayOutEntity.decrypt(PacketPlayOutEntity.encrypt(tracker.locX()), PacketPlayOutEntity.encrypt(tracker.locY()), PacketPlayOutEntity.encrypt(tracker.locZ()));\n++                    tracker.setPosition(loc.getX(), loc.getY(), loc.getZ());\n++                }\n++                // Paper end - fix MC-4\n+                 Packet<?> packet1 = null;\n+                 boolean flag2 = flag1 || this.tickCounter % 60 == 0;\n+                 boolean flag3 = Math.abs(i - this.yRot) >= 1 || Math.abs(j - this.xRot) >= 1;\n+diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java\n+index e5da2b19c1177ba7f88f0aaad9d810bb313ce67b..7209a53f1f278acf6e7246d0cba5b4d1687b9f7a 100644\n+--- a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java\n++++ b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java\n+@@ -14,10 +14,12 @@ public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {\n+     protected boolean h;\n+     protected boolean i;\n+ \n++    public static long encrypt(double d) { return a(d); } // Paper - OBFHELPER", "originalCommit": "3c3d3ee8f191a02a165dac3717ad006efb3f5888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4OTM3OA==", "url": "https://github.com/PaperMC/Paper/pull/4872#discussion_r538989378", "bodyText": "Done", "author": "BillyGalbreath", "createdAt": "2020-12-09T04:03:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4NTMwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQyNzI2NQ==", "url": "https://github.com/PaperMC/Paper/pull/4872#discussion_r539427265", "bodyText": "doing this in tracker feels odd, itll be done multiple times for players.\nShouldnt this be done in the setPosition methods that update the  x/y/z directly?", "author": "aikar", "createdAt": "2020-12-09T15:56:20Z", "path": "Spigot-Server-Patches/0613-Fix-item-position-desync.patch", "diffHunk": "@@ -0,0 +1,58 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: BillyGalbreath <blake.galbreath@gmail.com>\n+Date: Tue, 8 Dec 2020 20:24:52 -0600\n+Subject: [PATCH] Fix item position desync\n+\n+This fixes item position desync (MC-4) by running the item coordinates\n+through the encryption/decryption methods of the packet that causes the\n+precision loss, which forces the server to lose the same precision as\n+the client keeping them in sync.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index 6ab0a51b421dc696aec292f2db955311c9cc31e3..c70b80ab32d7bac66f69a08f25726e73114bb7fe 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -462,4 +462,9 @@ public class PaperConfig {\n+     private static void trackPluginScoreboards() {\n+         trackPluginScoreboards = getBoolean(\"settings.track-plugin-scoreboards\", false);\n+     }\n++\n++    public static boolean fixItemPositionDesync = true;\n++    private static void fixItemPositionDesync() {\n++        fixItemPositionDesync = getBoolean(\"settings.fix-item-position-desync\", fixItemPositionDesync);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java\n+index 4efc40c01ec12b80bd7cf9d35cf0ea0df973baf7..a0bd864290f11abf2a7be9c70f21406529f21eeb 100644\n+--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java\n++++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java\n+@@ -133,6 +133,12 @@ public class EntityTrackerEntry {\n+                 double vec3d_dz = this.tracker.locZ() - 2.44140625E-4D*(this.zLoc);\n+                 boolean flag1 = (vec3d_dx * vec3d_dx + vec3d_dy * vec3d_dy + vec3d_dz * vec3d_dz) >= 7.62939453125E-6D;\n+                 // Paper end - reduce allocation of Vec3D here\n++                // Paper start - fix MC-4\n++                if (com.destroystokyo.paper.PaperConfig.fixItemPositionDesync && this.tracker instanceof EntityItem) {", "originalCommit": "6b05e38126917db4045022d469a54ef2759ea597", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQyOTk0Mw==", "url": "https://github.com/PaperMC/Paper/pull/4872#discussion_r539429943", "bodyText": "also, im thinking we should maybe just inline the logic to avoid creating a vec3d just to do this.", "author": "aikar", "createdAt": "2020-12-09T15:59:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQyNzI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3Mzg5OQ==", "url": "https://github.com/PaperMC/Paper/pull/4872#discussion_r543573899", "bodyText": "hmm just noticed this is flooring x/y/z, this would lock you at flat x/y/z so cant be mid block etc. that def was source of the issue for players.\nBut I question that overall for items even... can figure out how to reduce precision without throwing every decimal place away?", "author": "aikar", "createdAt": "2020-12-15T18:12:58Z", "path": "Spigot-Server-Patches/0616-MC-4-Fix-item-position-desync.patch", "diffHunk": "@@ -0,0 +1,84 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: BillyGalbreath <blake.galbreath@gmail.com>\n+Date: Tue, 8 Dec 2020 20:24:52 -0600\n+Subject: [PATCH] MC-4: Fix item position desync\n+\n+This fixes item position desync (MC-4) by running the item coordinates\n+through the encode/decode methods of the packet that causes the precision\n+loss, which forces the server to lose the same precision as the client\n+keeping them in sync.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index cdf1177ca7b4b1b0808176c455f62b395146da50..26db8a5d92d494e5f6ba9498d5a1aa555642a92b 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -469,4 +469,9 @@ public class PaperConfig {\n+     private static void trackPluginScoreboards() {\n+         trackPluginScoreboards = getBoolean(\"settings.track-plugin-scoreboards\", false);\n+     }\n++\n++    public static boolean fixEntityPositionDesync = true;\n++    private static void fixEntityPositionDesync() {\n++        fixEntityPositionDesync = getBoolean(\"settings.fix-entity-position-desync\", fixEntityPositionDesync);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/EntityItem.java b/src/main/java/net/minecraft/server/EntityItem.java\n+index ba73d14437cfdf07ef0f1f6266131c113c2741fd..f41aaa7623c052b9f4044898d1bdee898c03057a 100644\n+--- a/src/main/java/net/minecraft/server/EntityItem.java\n++++ b/src/main/java/net/minecraft/server/EntityItem.java\n+@@ -523,4 +523,16 @@ public class EntityItem extends Entity {\n+     public Packet<?> P() {\n+         return new PacketPlayOutSpawnEntity(this);\n+     }\n++\n++    // Paper start - fix MC-4\n++    public void setPositionRaw(double x, double y, double z) {\n++        if (com.destroystokyo.paper.PaperConfig.fixEntityPositionDesync) {\n++            // encode/decode from PacketPlayOutEntity\n++            x = MathHelper.floorLong(x * 4096.0D) * (1 / 4096.0D);", "originalCommit": "146626185d3929e579a0ac0b71cc27d50484a09e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3OTQzMA==", "url": "https://github.com/PaperMC/Paper/pull/4872#discussion_r543579430", "bodyText": "Its not throwing them all away. I forget how many it leaves behind, but it is definitely smaller than the eye can see. You end up with like 4 or 5 decimals instead of 20 (or whatever). Thats what I meant about the precision loss", "author": "BillyGalbreath", "createdAt": "2020-12-15T18:21:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3Mzg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NzI2MA==", "url": "https://github.com/PaperMC/Paper/pull/4872#discussion_r543587260", "bodyText": "doh my brain just took x + floor together and forgot about the 4096 modifier. ok so ignore that comment.\nI think this should be fine then. I question if we maybe should of just excluded players but I suspect it could have also had issues with entity pathing still.", "author": "aikar", "createdAt": "2020-12-15T18:32:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3Mzg5OQ=="}], "type": "inlineReview"}, {"oid": "a0a11f61f5eb9c6259272669c5cd81ce9bb02048", "url": "https://github.com/PaperMC/Paper/commit/a0a11f61f5eb9c6259272669c5cd81ce9bb02048", "message": "MC-4 Fix item position desync", "committedDate": "2020-12-16T19:05:20Z", "type": "commit"}]}