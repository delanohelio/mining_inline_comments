{"pr_number": 4954, "pr_title": "Optimized tile tick ready check", "pr_createdAt": "2020-12-29T13:25:55Z", "pr_url": "https://github.com/PaperMC/Paper/pull/4954", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcwNDM2NA==", "url": "https://github.com/PaperMC/Paper/pull/4954#discussion_r549704364", "bodyText": "Drop this", "author": "Proximyst", "createdAt": "2020-12-29T13:27:48Z", "path": "Spigot-Server-Patches/0625-Optimized-tick-ready-check.patch", "diffHunk": "@@ -0,0 +1,21 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: lukas <lukasalt98@gmail.com>\n+Date: Sun, 27 Dec 2020 17:19:51 +0100\n+Subject: [PATCH] Optimized tick ready check\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java\n+index 9ed21f434c5fb019b74dfe9ee0b802ccc5c07fd8..631a01c6f65c29cf20a3dfcdca29d4de9c8cce92 100644\n+--- a/src/main/java/net/minecraft/server/World.java\n++++ b/src/main/java/net/minecraft/server/World.java\n+@@ -792,8 +792,8 @@ public abstract class World implements GeneratorAccess, AutoCloseable {\n+ \n+             if (!tileentity.isRemoved() && tileentity.hasWorld()) {\n+                 BlockPosition blockposition = tileentity.getPosition();\n+-\n+-                if (this.getChunkProvider().a(blockposition) && this.getWorldBorder().a(blockposition)) {\n++                ", "originalCommit": "d0144e62fc6b946c23b30ff2cabe4031de75a748", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcwNDU3Mg==", "url": "https://github.com/PaperMC/Paper/pull/4954#discussion_r549704572", "bodyText": "Add a comment of what exactly you did (i.e. inlined the getChunkProvider().a(BlockPosition) call).", "author": "Proximyst", "createdAt": "2020-12-29T13:28:23Z", "path": "Spigot-Server-Patches/0625-Optimized-tick-ready-check.patch", "diffHunk": "@@ -0,0 +1,21 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: lukas <lukasalt98@gmail.com>\n+Date: Sun, 27 Dec 2020 17:19:51 +0100\n+Subject: [PATCH] Optimized tick ready check\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java\n+index 9ed21f434c5fb019b74dfe9ee0b802ccc5c07fd8..631a01c6f65c29cf20a3dfcdca29d4de9c8cce92 100644\n+--- a/src/main/java/net/minecraft/server/World.java\n++++ b/src/main/java/net/minecraft/server/World.java\n+@@ -792,8 +792,8 @@ public abstract class World implements GeneratorAccess, AutoCloseable {\n+ \n+             if (!tileentity.isRemoved() && tileentity.hasWorld()) {\n+                 BlockPosition blockposition = tileentity.getPosition();\n+-\n+-                if (this.getChunkProvider().a(blockposition) && this.getWorldBorder().a(blockposition)) {\n++                \n++                Chunk chunk; PlayerChunk playerChunk; if ((chunk = tileentity.getCurrentChunk()) != null && (playerChunk = chunk.playerChunk) != null && playerChunk.isTickingReady() && this.getWorldBorder().a(blockposition)) { // Paper - optimized tick ready check", "originalCommit": "d0144e62fc6b946c23b30ff2cabe4031de75a748", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcxMTY1NQ==", "url": "https://github.com/PaperMC/Paper/pull/4954#discussion_r549711655", "bodyText": "Alright, I've added a comment", "author": "lukalt", "createdAt": "2020-12-29T13:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTcwNDU3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDU1Mzc4OA==", "url": "https://github.com/PaperMC/Paper/pull/4954#discussion_r550553788", "bodyText": "nitpick, these are two lines now, so two comments please :P\ncan fix that while merging tho", "author": "MiniDigger", "createdAt": "2020-12-31T16:53:17Z", "path": "Spigot-Server-Patches/0625-Optimized-tick-ready-check.patch", "diffHunk": "@@ -0,0 +1,52 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: lukas <lukasalt98@gmail.com>\n+Date: Sun, 27 Dec 2020 17:19:51 +0100\n+Subject: [PATCH] Optimized tick ready check\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java\n+index 9ed21f434c5fb019b74dfe9ee0b802ccc5c07fd8..8e4f646625b0a7904ccc4f1c091ba3c6458e3aad 100644\n+--- a/src/main/java/net/minecraft/server/World.java\n++++ b/src/main/java/net/minecraft/server/World.java\n+@@ -792,14 +792,13 @@ public abstract class World implements GeneratorAccess, AutoCloseable {\n+\n+             if (!tileentity.isRemoved() && tileentity.hasWorld()) {\n+                 BlockPosition blockposition = tileentity.getPosition();\n+-\n+-                if (this.getChunkProvider().a(blockposition) && this.getWorldBorder().a(blockposition)) {\n++                Chunk chunk; PlayerChunk playerChunk; if ((chunk = tileentity.getCurrentChunk()) != null && (playerChunk = chunk.playerChunk) != null && playerChunk.isTickingReady() && this.getWorldBorder().isInBounds(blockposition)) { // Paper - optimized tick ready check by inlining ChunkProviderServer.a(BlockPosition). Chunk lookup is no longer required and we can use the PlayerChunk directly available through the tile entity\n+                     try {\n+                         gameprofilerfiller.a(() -> {\n+                             return String.valueOf(TileEntityTypes.a(tileentity.getTileType()));\n+                         });\n+                         tileentity.tickTimer.startTiming(); // Spigot\n+-                        if (tileentity.getTileType().isValidBlock(this.getType(blockposition).getBlock())) {\n++                        if (tileentity.getTileType().isValidBlock(chunk.getType(blockposition).getBlock())) { // Paper - reuse the chunk from above, do not look it up again\n+                             ((ITickable) tileentity).tick();\n+                         } else {\n+                             tileentity.w();\n+@@ -833,9 +832,11 @@ public abstract class World implements GeneratorAccess, AutoCloseable {\n+                 this.tileEntityListTick.remove(tileTickPosition--);\n+                 // Spigot end\n+                 //this.tileEntityList.remove(tileentity); // Paper - remove unused list\n+-                if (this.isLoaded(tileentity.getPosition())) {\n+-                    this.getChunkAtWorldCoords(tileentity.getPosition()).removeTileEntity(tileentity.getPosition());\n++                // Paper - prevent double chunk lookups\n++                Chunk chunk; if ((chunk = this.getChunkIfLoaded(tileentity.getPosition())) != null) { // inlined contents of this.isLoaded(BlockPosition). Reuse the returned chunk instead of looking it up again\n++                    chunk.removeTileEntity(tileentity.getPosition());\n+                 }\n++                // Paper end\n+             }\n+         }\n+\n+@@ -854,8 +855,8 @@ public abstract class World implements GeneratorAccess, AutoCloseable {\n+                     }\n+                     // CraftBukkit end */\n+\n+-                    if (this.isLoaded(tileentity1.getPosition())) {\n+-                        Chunk chunk = this.getChunkAtWorldCoords(tileentity1.getPosition());\n++                    Chunk chunk; if ((chunk = this.getChunkIfLoaded(tileentity1.getPosition())) != null) {  // inlined contents of this.isLoaded(BlockPosition). Reuse the returned chunk instead of looking it up again", "originalCommit": "3c0e6c4ba1676a74d6f1618443b631134d8c2980", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a2800fb2d463805ed761f4746252e8a703ceccd1", "url": "https://github.com/PaperMC/Paper/commit/a2800fb2d463805ed761f4746252e8a703ceccd1", "message": "Optimized tick ready check", "committedDate": "2021-01-01T15:37:12Z", "type": "commit"}, {"oid": "a2800fb2d463805ed761f4746252e8a703ceccd1", "url": "https://github.com/PaperMC/Paper/commit/a2800fb2d463805ed761f4746252e8a703ceccd1", "message": "Optimized tick ready check", "committedDate": "2021-01-01T15:37:12Z", "type": "forcePushed"}]}