{"pr_number": 4710, "pr_title": "Fix client lag on advancement loading", "pr_createdAt": "2020-10-31T19:13:49Z", "pr_url": "https://github.com/PaperMC/Paper/pull/4710", "timeline": [{"oid": "ae83391e347e836fe2889e4dce7bf32faf9f8864", "url": "https://github.com/PaperMC/Paper/commit/ae83391e347e836fe2889e4dce7bf32faf9f8864", "message": "Fix client lag on advancement loading\n\nWhen new advancements are added via the UnsafeValues#loadAdvancement\nAPI, it triggers a full datapack reload when this is not necessary. The\nadvancement is already loaded directly into the advancement registry,\nand the point of saving the advancement to the Bukkit datapack seems to\nbe for persistence. By removing the call to reload datapacks when an\nadvancement is loaded, the client no longer completely freezes up when\nadding a new advancement.\nTo ensure the client still receives the updated advancement data, we\nmanually reload the advancement data for all players, which\nnormally takes place as a part of the datapack reloading.", "committedDate": "2020-10-31T20:25:22Z", "type": "forcePushed"}, {"oid": "98dcba45ca202101b32dd3096114b8aa3053f8df", "url": "https://github.com/PaperMC/Paper/commit/98dcba45ca202101b32dd3096114b8aa3053f8df", "message": "Fix client lag on advancement loading\n\nWhen new advancements are added via the UnsafeValues#loadAdvancement\nAPI, it triggers a full datapack reload when this is not necessary. The\nadvancement is already loaded directly into the advancement registry,\nand the point of saving the advancement to the Bukkit datapack seems to\nbe for persistence. By removing the call to reload datapacks when an\nadvancement is loaded, the client no longer completely freezes up when\nadding a new advancement.\nTo ensure the client still receives the updated advancement data, we\nmanually reload the advancement data for all players, which\nnormally takes place as a part of the datapack reloading.", "committedDate": "2020-10-31T20:39:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU0MTEwMA==", "url": "https://github.com/PaperMC/Paper/pull/4710#discussion_r515541100", "bodyText": "OBFHELPER.", "author": "Proximyst", "createdAt": "2020-10-31T21:21:52Z", "path": "Spigot-Server-Patches/0595-Fix-client-lag-on-advancement-loading.patch", "diffHunk": "@@ -0,0 +1,35 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: jmp <jasonpenilla2@me.com>\n+Date: Sat, 31 Oct 2020 11:49:01 -0700\n+Subject: [PATCH] Fix client lag on advancement loading\n+\n+When new advancements are added via the UnsafeValues#loadAdvancement\n+API, it triggers a full datapack reload when this is not necessary. The\n+advancement is already loaded directly into the advancement registry,\n+and the point of saving the advancement to the Bukkit datapack seems to\n+be for persistence. By removing the call to reload datapacks when an\n+advancement is loaded, the client no longer completely freezes up when\n+adding a new advancement.\n+To ensure the client still receives the updated advancement data, we\n+manually reload the advancement data for all players, which\n+normally takes place as a part of the datapack reloading.\n+\n+diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java\n+index 3ebaa9463e365831de37d8fa3cc191693f5b856f..3c379763abc5b2f22ffaba16130ca0edf4a09441 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java\n++++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java\n+@@ -282,7 +282,13 @@ public final class CraftMagicNumbers implements UnsafeValues {\n+                     Bukkit.getLogger().log(Level.SEVERE, \"Error saving advancement \" + key, ex);\n+                 }\n+ \n+-                MinecraftServer.getServer().getPlayerList().reload();\n++                // Paper start\n++                //MinecraftServer.getServer().getPlayerList().reload();\n++                MinecraftServer.getServer().getPlayerList().getPlayers().forEach(player -> {\n++                    player.getAdvancementData().a(MinecraftServer.getServer().getAdvancementData());", "originalCommit": "98dcba45ca202101b32dd3096114b8aa3053f8df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU0MTEwMg==", "url": "https://github.com/PaperMC/Paper/pull/4710#discussion_r515541102", "bodyText": "OBFHELPER.", "author": "Proximyst", "createdAt": "2020-10-31T21:21:58Z", "path": "Spigot-Server-Patches/0595-Fix-client-lag-on-advancement-loading.patch", "diffHunk": "@@ -0,0 +1,35 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: jmp <jasonpenilla2@me.com>\n+Date: Sat, 31 Oct 2020 11:49:01 -0700\n+Subject: [PATCH] Fix client lag on advancement loading\n+\n+When new advancements are added via the UnsafeValues#loadAdvancement\n+API, it triggers a full datapack reload when this is not necessary. The\n+advancement is already loaded directly into the advancement registry,\n+and the point of saving the advancement to the Bukkit datapack seems to\n+be for persistence. By removing the call to reload datapacks when an\n+advancement is loaded, the client no longer completely freezes up when\n+adding a new advancement.\n+To ensure the client still receives the updated advancement data, we\n+manually reload the advancement data for all players, which\n+normally takes place as a part of the datapack reloading.\n+\n+diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java\n+index 3ebaa9463e365831de37d8fa3cc191693f5b856f..3c379763abc5b2f22ffaba16130ca0edf4a09441 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java\n++++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java\n+@@ -282,7 +282,13 @@ public final class CraftMagicNumbers implements UnsafeValues {\n+                     Bukkit.getLogger().log(Level.SEVERE, \"Error saving advancement \" + key, ex);\n+                 }\n+ \n+-                MinecraftServer.getServer().getPlayerList().reload();\n++                // Paper start\n++                //MinecraftServer.getServer().getPlayerList().reload();\n++                MinecraftServer.getServer().getPlayerList().getPlayers().forEach(player -> {\n++                    player.getAdvancementData().a(MinecraftServer.getServer().getAdvancementData());\n++                    player.getAdvancementData().b(player);", "originalCommit": "98dcba45ca202101b32dd3096114b8aa3053f8df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cbee679d45aa4a63e948585cc172c2efde500125", "url": "https://github.com/PaperMC/Paper/commit/cbee679d45aa4a63e948585cc172c2efde500125", "message": "Fix client lag on advancement loading\n\nWhen new advancements are added via the UnsafeValues#loadAdvancement\nAPI, it triggers a full datapack reload when this is not necessary. The\nadvancement is already loaded directly into the advancement registry,\nand the point of saving the advancement to the Bukkit datapack seems to\nbe for persistence. By removing the call to reload datapacks when an\nadvancement is loaded, the client no longer completely freezes up when\nadding a new advancement.\nTo ensure the client still receives the updated advancement data, we\nmanually reload the advancement data for all players, which\nnormally takes place as a part of the datapack reloading.", "committedDate": "2020-10-31T21:28:48Z", "type": "forcePushed"}, {"oid": "301f8f0b8471d18e823479e5cd25a045048d1fb0", "url": "https://github.com/PaperMC/Paper/commit/301f8f0b8471d18e823479e5cd25a045048d1fb0", "message": "Fix client lag on advancement loading\n\nWhen new advancements are added via the UnsafeValues#loadAdvancement\nAPI, it triggers a full datapack reload when this is not necessary. The\nadvancement is already loaded directly into the advancement registry,\nand the point of saving the advancement to the Bukkit datapack seems to\nbe for persistence. By removing the call to reload datapacks when an\nadvancement is loaded, the client no longer completely freezes up when\nadding a new advancement.\nTo ensure the client still receives the updated advancement data, we\nmanually reload the advancement data for all players, which\nnormally takes place as a part of the datapack reloading.", "committedDate": "2020-11-01T19:59:49Z", "type": "commit"}, {"oid": "301f8f0b8471d18e823479e5cd25a045048d1fb0", "url": "https://github.com/PaperMC/Paper/commit/301f8f0b8471d18e823479e5cd25a045048d1fb0", "message": "Fix client lag on advancement loading\n\nWhen new advancements are added via the UnsafeValues#loadAdvancement\nAPI, it triggers a full datapack reload when this is not necessary. The\nadvancement is already loaded directly into the advancement registry,\nand the point of saving the advancement to the Bukkit datapack seems to\nbe for persistence. By removing the call to reload datapacks when an\nadvancement is loaded, the client no longer completely freezes up when\nadding a new advancement.\nTo ensure the client still receives the updated advancement data, we\nmanually reload the advancement data for all players, which\nnormally takes place as a part of the datapack reloading.", "committedDate": "2020-11-01T19:59:49Z", "type": "forcePushed"}]}