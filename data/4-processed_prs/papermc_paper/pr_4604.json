{"pr_number": 4604, "pr_title": "Lazily track plugin scoreboards by default", "pr_createdAt": "2020-10-03T08:48:23Z", "pr_url": "https://github.com/PaperMC/Paper/pull/4604", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyOTc3MQ==", "url": "https://github.com/PaperMC/Paper/pull/4604#discussion_r499129771", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    private final MinecraftServer a; public MinecraftServer getServer() { return this.a; } // Paper - OBFHELPER\n          \n          \n            \n            +    private final MinecraftServer a; public final MinecraftServer getServer() { return this.a; } // Paper - OBFHELPER", "author": "Proximyst", "createdAt": "2020-10-03T08:49:49Z", "path": "Spigot-Server-Patches/0581-Lazily-track-plugin-scoreboards-by-default.patch", "diffHunk": "@@ -0,0 +1,102 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Andrew Steinborn <git@steinborn.me>\n+Date: Sat, 3 Oct 2020 04:15:09 -0400\n+Subject: [PATCH] Lazily track plugin scoreboards by default\n+\n+On servers with plugins that constantly churn through scoreboards, there is a risk of\n+degraded GC performance due to the number of scoreboards held on by weak references.\n+Most plugins don't even need the (vanilla) functionality that requires all plugin\n+scoreboards to be tracked by the server. Instead, only track scoreboards when an\n+objective is added with a non-dummy criteria.\n+\n+This is a breaking change, however the change is a much more sensible default. In case\n+this breaks your workflow you can always force all scoreboards to be tracked with\n+settings.track-plugin-scoreboards in paper.yml.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index f65d3545039a2c471819ab5950c171ef6193cdb4..e14d71d60c3433c39dcf217d48bd667b2c2b49e1 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -457,4 +457,9 @@ public class PaperConfig {\n+     private static void maxJoinsPerTick() {\n+         maxJoinsPerTick = getInt(\"settings.max-joins-per-tick\", 3);\n+     }\n++\n++    public static boolean trackPluginScoreboards;\n++    private static void trackPluginScoreboards() {\n++        trackPluginScoreboards = getBoolean(\"settings.track-plugin-scoreboards\", false);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ScoreboardServer.java b/src/main/java/net/minecraft/server/ScoreboardServer.java\n+index 929397a4ca8af8aba24c36bd6fc8ed0071982b64..c4129d90ac01f8892842ee6e42de29131d4a44ec 100644\n+--- a/src/main/java/net/minecraft/server/ScoreboardServer.java\n++++ b/src/main/java/net/minecraft/server/ScoreboardServer.java\n+@@ -10,7 +10,7 @@ import javax.annotation.Nullable;\n+ \n+ public class ScoreboardServer extends Scoreboard {\n+ \n+-    private final MinecraftServer a;\n++    private final MinecraftServer a; public MinecraftServer getServer() { return this.a; } // Paper - OBFHELPER", "originalCommit": "b413a7d083a109dc480b46d872c469998c65b255", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzODgxNQ==", "url": "https://github.com/PaperMC/Paper/pull/4604#discussion_r499138815", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    public void registerScoreboardForVanilla(CraftScoreboard scoreboard) {\n          \n          \n            \n            +    void registerScoreboardForVanilla(CraftScoreboard scoreboard) {", "author": "kashike", "createdAt": "2020-10-03T11:09:52Z", "path": "Spigot-Server-Patches/0581-Lazily-track-plugin-scoreboards-by-default.patch", "diffHunk": "@@ -0,0 +1,102 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Andrew Steinborn <git@steinborn.me>\n+Date: Sat, 3 Oct 2020 04:15:09 -0400\n+Subject: [PATCH] Lazily track plugin scoreboards by default\n+\n+On servers with plugins that constantly churn through scoreboards, there is a risk of\n+degraded GC performance due to the number of scoreboards held on by weak references.\n+Most plugins don't even need the (vanilla) functionality that requires all plugin\n+scoreboards to be tracked by the server. Instead, only track scoreboards when an\n+objective is added with a non-dummy criteria.\n+\n+This is a breaking change, however the change is a much more sensible default. In case\n+this breaks your workflow you can always force all scoreboards to be tracked with\n+settings.track-plugin-scoreboards in paper.yml.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index f65d3545039a2c471819ab5950c171ef6193cdb4..e14d71d60c3433c39dcf217d48bd667b2c2b49e1 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -457,4 +457,9 @@ public class PaperConfig {\n+     private static void maxJoinsPerTick() {\n+         maxJoinsPerTick = getInt(\"settings.max-joins-per-tick\", 3);\n+     }\n++\n++    public static boolean trackPluginScoreboards;\n++    private static void trackPluginScoreboards() {\n++        trackPluginScoreboards = getBoolean(\"settings.track-plugin-scoreboards\", false);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ScoreboardServer.java b/src/main/java/net/minecraft/server/ScoreboardServer.java\n+index 929397a4ca8af8aba24c36bd6fc8ed0071982b64..c4129d90ac01f8892842ee6e42de29131d4a44ec 100644\n+--- a/src/main/java/net/minecraft/server/ScoreboardServer.java\n++++ b/src/main/java/net/minecraft/server/ScoreboardServer.java\n+@@ -10,7 +10,7 @@ import javax.annotation.Nullable;\n+ \n+ public class ScoreboardServer extends Scoreboard {\n+ \n+-    private final MinecraftServer a;\n++    private final MinecraftServer a; public MinecraftServer getServer() { return this.a; } // Paper - OBFHELPER\n+     private final Set<ScoreboardObjective> b = Sets.newHashSet();\n+     private Runnable[] c = new Runnable[0];\n+ \n+diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java\n+index e3036fe23fa2be100044332c432d1ad5b4872823..ef9efddd3797fadc4df03cc381eb080412c42755 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java\n++++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java\n+@@ -19,6 +19,7 @@ import org.bukkit.scoreboard.Team;\n+ \n+ public final class CraftScoreboard implements org.bukkit.scoreboard.Scoreboard {\n+     final Scoreboard board;\n++    boolean registeredGlobally = false; // Paper\n+ \n+     CraftScoreboard(Scoreboard board) {\n+         this.board = board;\n+@@ -45,6 +46,12 @@ public final class CraftScoreboard implements org.bukkit.scoreboard.Scoreboard {\n+         Validate.isTrue(board.getObjective(name) == null, \"An objective of name '\" + name + \"' already exists\");\n+ \n+         CraftCriteria craftCriteria = CraftCriteria.getFromBukkit(criteria);\n++        // Paper start\n++        if (craftCriteria.criteria != net.minecraft.server.IScoreboardCriteria.DUMMY && !registeredGlobally) {\n++            ((net.minecraft.server.ScoreboardServer) board).getServer().server.getScoreboardManager().registerScoreboardForVanilla(this);\n++            registeredGlobally = true;\n++        }\n++        // Paper end\n+         ScoreboardObjective objective = board.registerObjective(name, craftCriteria.criteria, CraftChatMessage.fromStringOrNull(displayName), CraftScoreboardTranslations.fromBukkitRender(renderType));\n+         return new CraftObjective(this, objective);\n+     }\n+diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java\n+index ca2be30609159e6ca98b363d75cbc3ac550bca31..6fa2e271f7f01cd0bf247e2071fa33bd8c5c6cbe 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java\n++++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java\n+@@ -30,6 +30,7 @@ public final class CraftScoreboardManager implements ScoreboardManager {\n+ \n+     public CraftScoreboardManager(MinecraftServer minecraftserver, net.minecraft.server.Scoreboard scoreboardServer) {\n+         mainScoreboard = new CraftScoreboard(scoreboardServer);\n++        mainScoreboard.registeredGlobally = true; // Paper\n+         server = minecraftserver;\n+         scoreboards.add(mainScoreboard);\n+     }\n+@@ -43,10 +44,22 @@ public final class CraftScoreboardManager implements ScoreboardManager {\n+     public CraftScoreboard getNewScoreboard() {\n+         org.spigotmc.AsyncCatcher.catchOp(\"scoreboard creation\"); // Spigot\n+         CraftScoreboard scoreboard = new CraftScoreboard(new ScoreboardServer(server));\n++        // Paper start\n++        if (com.destroystokyo.paper.PaperConfig.trackPluginScoreboards) {\n++            scoreboard.registeredGlobally = true;\n+         scoreboards.add(scoreboard);\n++        }\n++        // Paper end\n+         return scoreboard;\n+     }\n+ \n++    // Paper start\n++    public void registerScoreboardForVanilla(CraftScoreboard scoreboard) {", "originalCommit": "b413a7d083a109dc480b46d872c469998c65b255", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NTE4MQ==", "url": "https://github.com/PaperMC/Paper/pull/4604#discussion_r499155181", "bodyText": "Can drop this and just use minecraftserver getserver instead, don't need a new diff when one exists to get the server already", "author": "aikar", "createdAt": "2020-10-03T15:02:39Z", "path": "Spigot-Server-Patches/0581-Lazily-track-plugin-scoreboards-by-default.patch", "diffHunk": "@@ -0,0 +1,102 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Andrew Steinborn <git@steinborn.me>\n+Date: Sat, 3 Oct 2020 04:15:09 -0400\n+Subject: [PATCH] Lazily track plugin scoreboards by default\n+\n+On servers with plugins that constantly churn through scoreboards, there is a risk of\n+degraded GC performance due to the number of scoreboards held on by weak references.\n+Most plugins don't even need the (vanilla) functionality that requires all plugin\n+scoreboards to be tracked by the server. Instead, only track scoreboards when an\n+objective is added with a non-dummy criteria.\n+\n+This is a breaking change, however the change is a much more sensible default. In case\n+this breaks your workflow you can always force all scoreboards to be tracked with\n+settings.always-track-plugin-scoreboards in paper.yml.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index f65d3545039a2c471819ab5950c171ef6193cdb4..9fae20c5c1344d905cb2a20fab473af685a01a55 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -457,4 +457,9 @@ public class PaperConfig {\n+     private static void maxJoinsPerTick() {\n+         maxJoinsPerTick = getInt(\"settings.max-joins-per-tick\", 3);\n+     }\n++\n++    public static boolean alwaysTrackPluginScoreboards;\n++    private static void alwaysTrackPluginScoreboards() {\n++        alwaysTrackPluginScoreboards = getBoolean(\"settings.always-track-plugin-scoreboards\", false);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ScoreboardServer.java b/src/main/java/net/minecraft/server/ScoreboardServer.java\n+index 929397a4ca8af8aba24c36bd6fc8ed0071982b64..b7605d2850d440cd0c4924d9e430c590e0683f98 100644\n+--- a/src/main/java/net/minecraft/server/ScoreboardServer.java\n++++ b/src/main/java/net/minecraft/server/ScoreboardServer.java\n+@@ -10,7 +10,7 @@ import javax.annotation.Nullable;\n+\n+ public class ScoreboardServer extends Scoreboard {\n+\n+-    private final MinecraftServer a;\n++    private final MinecraftServer a; public final MinecraftServer getServer() { return this.a; } // Paper - OBFHELPER", "originalCommit": "49a943c3bedbda13d09e10f8318576e11241348b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c56d62efde571112285a2d310d7d762b85b0eb5", "url": "https://github.com/PaperMC/Paper/commit/3c56d62efde571112285a2d310d7d762b85b0eb5", "message": "Lazily track plugin scoreboards by default\n\nOn servers with plugins that constantly churn through scoreboards, there is a risk of degraded GC performance due to the number of scoreboards held on by weak references. Most plugins don't even need the (vanilla) functionality that requires all plugin scoreboards to be tracked by the server. Instead, only track scoreboards when an objective is added with a non-dummy criteria.\n\nThis is a breaking change, however the change is a much more sensible default. In case this breaks your workflow you can always force all scoreboards to be tracked with settings.track-plugin-scoreboards in paper.yml.", "committedDate": "2020-10-03T19:04:54Z", "type": "commit"}, {"oid": "3c56d62efde571112285a2d310d7d762b85b0eb5", "url": "https://github.com/PaperMC/Paper/commit/3c56d62efde571112285a2d310d7d762b85b0eb5", "message": "Lazily track plugin scoreboards by default\n\nOn servers with plugins that constantly churn through scoreboards, there is a risk of degraded GC performance due to the number of scoreboards held on by weak references. Most plugins don't even need the (vanilla) functionality that requires all plugin scoreboards to be tracked by the server. Instead, only track scoreboards when an objective is added with a non-dummy criteria.\n\nThis is a breaking change, however the change is a much more sensible default. In case this breaks your workflow you can always force all scoreboards to be tracked with settings.track-plugin-scoreboards in paper.yml.", "committedDate": "2020-10-03T19:04:54Z", "type": "forcePushed"}]}