{"pr_number": 375, "pr_title": "CCS-3762: Error in git2pantheonpod while gitimport: http: superfluous  response.WriteHeader", "pr_createdAt": "2020-08-20T09:14:12Z", "pr_url": "https://github.com/redhataccess/pantheon/pull/375", "timeline": [{"oid": "8b76336ee068d51b650966ffd1b50e45019bd5a2", "url": "https://github.com/redhataccess/pantheon/commit/8b76336ee068d51b650966ffd1b50e45019bd5a2", "message": "CCS-3762: Error in git2pantheonpod while gitimport: http: superfluous response.WriteHeader", "committedDate": "2020-08-20T08:58:34Z", "type": "commit"}, {"oid": "b016c5cb5d777cfec48507c4bdb19edc4e50de3f", "url": "https://github.com/redhataccess/pantheon/commit/b016c5cb5d777cfec48507c4bdb19edc4e50de3f", "message": "CCS-3762: fixing failing tests", "committedDate": "2020-08-20T09:51:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjk2MQ==", "url": "https://github.com/redhataccess/pantheon/pull/375#discussion_r474236961", "bodyText": "I recall we currently only support import via git repo.", "author": "xdavidson", "createdAt": "2020-08-20T19:54:38Z", "path": "tools/git2pantheon/main.go", "diffHunk": "@@ -33,20 +33,30 @@ func cloneBranch(w http.ResponseWriter, r *http.Request) {\n \t\tvar repo repository_and_branch\n \t\terr = json.Unmarshal(body, &repo)\n \n-\t\tlog.Println(repo.Repo)\n-\t\tlog.Println(repo.Branch)\n+\t\t//check parsing error. If error is not null, log and return 400 if parse failed\n+\t\tif err != nil {\n+\t\t\tlog.Printf(\"Error in unmarshalling request body %s\", err)\n+\t\t\t//setting the response in JSON format for standardizing error responses\n+\t\t\tresponse := \"{\\\"error\\\" : \\\"Error reading request body due to \" + err.Error() + \" \\\"}\"\n+\t\t\thttp.Error(w, response, http.StatusBadRequest)\n+\t\t\treturn\n+\t\t}\n+\n+\t\tlog.Println(\"repo:  \" + repo.Repo)\n+\t\tlog.Println(\"branch: \" + repo.Branch)\n \n \t\trepository := repo.Repo\n-\t\terror_status := false\n+\n \t\tif repository == \"\" {\n-\t\t\thttp.Error(w, \"Error reading repository url\", http.StatusInternalServerError)\n-\t\t\terror_status = true\n+\t\t\t//setting the response in JSON format for standardizing error responses\n+\t\t\thttp.Error(w, \"{\\\"error\\\" : \\\"Error reading repository url\\\"}\", http.StatusInternalServerError)\n+\t\t\t// return after setting error response to avoid superfluous error header in logs\n+\t\t\treturn\n \t\t}\n \t\tif !strings.Contains(strings.ToUpper(repository), \"GIT\") {\n-\t\t\thttp.Error(w, \"The repository entered does not look like a git repo.\", http.StatusInternalServerError)", "originalCommit": "b016c5cb5d777cfec48507c4bdb19edc4e50de3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUyMDI2Nw==", "url": "https://github.com/redhataccess/pantheon/pull/375#discussion_r474520267", "bodyText": "I do not have context about why this check is there. The main focus of this PR is to add error handling, providing response for each error that is caught, and make the error response standard. Hence, I did not change the check. Anyways we are going to rewrite the git2pantheon later, we can make discuss it in a JIRA  related to that. Sounds good?", "author": "aprajshekhar", "createdAt": "2020-08-21T08:29:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNDExOA==", "url": "https://github.com/redhataccess/pantheon/pull/375#discussion_r474724118", "bodyText": "sounds good. btw, I'm thinking about maybe we should rewrite the Import feature in java via a servlet.", "author": "xdavidson", "createdAt": "2020-08-21T14:12:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjk2MQ=="}], "type": "inlineReview"}]}