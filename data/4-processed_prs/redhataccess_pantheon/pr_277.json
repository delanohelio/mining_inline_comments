{"pr_number": 277, "pr_title": " Once modules have been uploaded into Pantheon using the dynamic incl\u2026", "pr_createdAt": "2020-04-22T08:21:41Z", "pr_url": "https://github.com/redhataccess/pantheon/pull/277", "timeline": [{"oid": "58fe349a3de23a2eef86cf7ebad17594280e0c73", "url": "https://github.com/redhataccess/pantheon/commit/58fe349a3de23a2eef86cf7ebad17594280e0c73", "message": " Once modules have been uploaded into Pantheon using the dynamic include syntax, Pantheon needs to populate the attsFile attribute similar to the following CLI invocation of asciidoctor", "committedDate": "2020-04-22T08:18:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1Nzk4MA==", "url": "https://github.com/redhataccess/pantheon/pull/277#discussion_r413257980", "bodyText": "Small nitpick, but could you remove the double-spacing after the equal sign?\n...attributeFileRelPath =<space><space>moduleVersion... <-- double-spacing here.", "author": "benradey", "createdAt": "2020-04-22T19:26:02Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -179,10 +179,15 @@ private String buildModule(Module base, ModuleVersion moduleVersion, Map<String,\n                     .map(Supplier::get);\n \n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd MMMMM yyyy\");\n+\n+            String workspacePath = moduleVersion.getWorkspace().getPath();\n+            String attributeFileRelPath =  moduleVersion.getWorkspace().attributeFile().get();", "originalCommit": "58fe349a3de23a2eef86cf7ebad17594280e0c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1OTQ0MA==", "url": "https://github.com/redhataccess/pantheon/pull/277#discussion_r413259440", "bodyText": "Two comments here... first of all, please fix the spacing in this code. :)\n...concat(<remove this space>\"/\"<add a space here>+ attribute...\nSecond, it's very minor, but please be consistent the call that you use. I'd like to see either\nworkspacePath + \"/\" + attributeFileRelPath\n...or...\nworkspacePath.concat(\"/\").concat(attributeFileRelPath)\n...but not a mix of the two. It keeps the code clean.\nThanks!", "author": "benradey", "createdAt": "2020-04-22T19:28:29Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -179,10 +179,15 @@ private String buildModule(Module base, ModuleVersion moduleVersion, Map<String,\n                     .map(Supplier::get);\n \n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd MMMMM yyyy\");\n+\n+            String workspacePath = moduleVersion.getWorkspace().getPath();\n+            String attributeFileRelPath =  moduleVersion.getWorkspace().attributeFile().get();\n             // build the attributes (default + those coming from http parameters)\n             AttributesBuilder atts = AttributesBuilder.attributes()\n                     // show the title on the generated html\n                     .attribute(\"showtitle\")\n+                    // provide attribute file as argument to ASCIIDOCTOR for building doc.\n+                    .attribute(\"attsFile\", workspacePath.concat( \"/\"+ attributeFileRelPath))", "originalCommit": "58fe349a3de23a2eef86cf7ebad17594280e0c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI2MTIyMQ==", "url": "https://github.com/redhataccess/pantheon/pull/277#discussion_r413261221", "bodyText": "Clever! I wouldn't have thought of this, but I like the logic!", "author": "benradey", "createdAt": "2020-04-22T19:31:20Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -240,14 +245,10 @@ private String buildModule(Module base, ModuleVersion moduleVersion, Map<String,\n                             new MetadataExtractorTreeProcessor(moduleVersion.metadata().getOrCreate()));\n                 }\n \n-                String workspacePath = moduleVersion.getWorkspace().getPath();\n-                String attributeFileRelPath =  moduleVersion.getWorkspace().attributeFile().get();\n                 StringBuilder content = new StringBuilder();\n                 if (attributeFileRelPath != null && !attributeFileRelPath.isEmpty()) {\n                     content.append(\"include::\")\n-                            .append(workspacePath)\n-                            .append(\"/\")\n-                            .append(attributeFileRelPath)\n+                            .append(\"{attsFile}\")", "originalCommit": "58fe349a3de23a2eef86cf7ebad17594280e0c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "01a3d28a9d48ce94ebde7b1a6c796624637b5ff1", "url": "https://github.com/redhataccess/pantheon/commit/01a3d28a9d48ce94ebde7b1a6c796624637b5ff1", "message": "Syntactic changes corresponding to peer review", "committedDate": "2020-04-24T04:55:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA5MDU5Mw==", "url": "https://github.com/redhataccess/pantheon/pull/277#discussion_r416090593", "bodyText": "You're missing a space after the \"/\", but I won't ask for another commit, just please keep an eye out in the future. :)\nThanks!", "author": "benradey", "createdAt": "2020-04-27T19:31:11Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/asciidoctor/AsciidoctorService.java", "diffHunk": "@@ -179,10 +179,15 @@ private String buildModule(Module base, ModuleVersion moduleVersion, Map<String,\n                     .map(Supplier::get);\n \n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd MMMMM yyyy\");\n+\n+            String workspacePath = moduleVersion.getWorkspace().getPath();\n+            String attributeFileRelPath = moduleVersion.getWorkspace().attributeFile().get();\n             // build the attributes (default + those coming from http parameters)\n             AttributesBuilder atts = AttributesBuilder.attributes()\n                     // show the title on the generated html\n                     .attribute(\"showtitle\")\n+                    // provide attribute file as argument to ASCIIDOCTOR for building doc.\n+                    .attribute(\"attsFile\", workspacePath + \"/\"+ attributeFileRelPath)", "originalCommit": "01a3d28a9d48ce94ebde7b1a6c796624637b5ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}