{"pr_number": 465, "pr_title": "Search Beta ", "pr_createdAt": "2020-11-05T20:58:52Z", "pr_url": "https://github.com/redhataccess/pantheon/pull/465", "timeline": [{"oid": "f9e347c134b76c4cf52530efe4cf2fa8d303deb3", "url": "https://github.com/redhataccess/pantheon/commit/f9e347c134b76c4cf52530efe4cf2fa8d303deb3", "message": "initial work", "committedDate": "2020-10-07T18:44:23Z", "type": "commit"}, {"oid": "1de9f8b23ce95718a0c8bbcfff2947cba41e0653", "url": "https://github.com/redhataccess/pantheon/commit/1de9f8b23ce95718a0c8bbcfff2947cba41e0653", "message": "update expandable content on Filters", "committedDate": "2020-10-12T19:10:39Z", "type": "commit"}, {"oid": "92f6a02ee525e156a33e9ce5bb3ffcad9a1b9edb", "url": "https://github.com/redhataccess/pantheon/commit/92f6a02ee525e156a33e9ce5bb3ffcad9a1b9edb", "message": "resize drawer", "committedDate": "2020-10-13T19:09:23Z", "type": "commit"}, {"oid": "258e46f80c43c354ef97e44c3a962cf8fdd56fdd", "url": "https://github.com/redhataccess/pantheon/commit/258e46f80c43c354ef97e44c3a962cf8fdd56fdd", "message": "cleanup", "committedDate": "2020-10-14T15:12:30Z", "type": "commit"}, {"oid": "2c832ec578d4edc56de0c2d578fd0d790f5a35d9", "url": "https://github.com/redhataccess/pantheon/commit/2c832ec578d4edc56de0c2d578fd0d790f5a35d9", "message": "WIP", "committedDate": "2020-10-21T19:12:19Z", "type": "commit"}, {"oid": "91ba18f7d7f8a7600ee5763ee1951112a5d6e541", "url": "https://github.com/redhataccess/pantheon/commit/91ba18f7d7f8a7600ee5763ee1951112a5d6e541", "message": "enable multiselect on Filter by repo", "committedDate": "2020-11-05T22:57:59Z", "type": "commit"}, {"oid": "7a96b081102052105e2efc1fed2db097e56d0a21", "url": "https://github.com/redhataccess/pantheon/commit/7a96b081102052105e2efc1fed2db097e56d0a21", "message": "add repo name", "committedDate": "2020-11-11T14:35:43Z", "type": "commit"}, {"oid": "50921d15eeef99983b7094de73e442616897907e", "url": "https://github.com/redhataccess/pantheon/commit/50921d15eeef99983b7094de73e442616897907e", "message": "remerge with master", "committedDate": "2020-11-23T19:17:17Z", "type": "commit"}, {"oid": "6ed7d55cdc9151630410a51e26fa9b4b5da17a3f", "url": "https://github.com/redhataccess/pantheon/commit/6ed7d55cdc9151630410a51e26fa9b4b5da17a3f", "message": "provide default behaviour for expandable section", "committedDate": "2020-11-23T21:18:36Z", "type": "commit"}, {"oid": "4e2b71e287913f3c4d8878ce8bc8cfd857b3f216", "url": "https://github.com/redhataccess/pantheon/commit/4e2b71e287913f3c4d8878ce8bc8cfd857b3f216", "message": "add emtpy table to initial page load", "committedDate": "2020-11-23T23:05:29Z", "type": "commit"}, {"oid": "45bae8747c93fb9ecf3b1bb5cf041f69f7f8d2a7", "url": "https://github.com/redhataccess/pantheon/commit/45bae8747c93fb9ecf3b1bb5cf041f69f7f8d2a7", "message": "Reflect empty rows when fitlers are unchecked", "committedDate": "2020-11-24T19:41:12Z", "type": "commit"}, {"oid": "eff4fb61f68136d27b4037dcc23ff395f80b02eb", "url": "https://github.com/redhataccess/pantheon/commit/eff4fb61f68136d27b4037dcc23ff395f80b02eb", "message": "hide pager dropdown options", "committedDate": "2020-11-24T21:42:54Z", "type": "commit"}, {"oid": "ccbd9daa530251b7fce29d33b1adadee2f3a7b13", "url": "https://github.com/redhataccess/pantheon/commit/ccbd9daa530251b7fce29d33b1adadee2f3a7b13", "message": "turn document title into a hotlink", "committedDate": "2020-11-30T21:43:29Z", "type": "commit"}, {"oid": "d8205f3675a6d667ba39d9975ccd6a4b777f06f9", "url": "https://github.com/redhataccess/pantheon/commit/d8205f3675a6d667ba39d9975ccd6a4b777f06f9", "message": "add Search Beta to nav", "committedDate": "2020-12-01T18:51:01Z", "type": "commit"}, {"oid": "e60891cb8ad3e901966f135e3e5f0de88691b0a0", "url": "https://github.com/redhataccess/pantheon/commit/e60891cb8ad3e901966f135e3e5f0de88691b0a0", "message": "enable search by keyword and status and content type filters", "committedDate": "2020-12-02T02:21:49Z", "type": "commit"}, {"oid": "08045e0878109d5e38a99214054e76e81e40aea6", "url": "https://github.com/redhataccess/pantheon/commit/08045e0878109d5e38a99214054e76e81e40aea6", "message": "add alert for Beta feature", "committedDate": "2020-12-02T20:56:52Z", "type": "commit"}, {"oid": "d6a56a75ea5c20eb38dcef488a4b29b8668b8a85", "url": "https://github.com/redhataccess/pantheon/commit/d6a56a75ea5c20eb38dcef488a4b29b8668b8a85", "message": "fix status dropdown issue", "committedDate": "2020-12-02T21:30:45Z", "type": "commit"}, {"oid": "3a6a96e3cb064ef7e2bfcc50fa51c0d0a931cf12", "url": "https://github.com/redhataccess/pantheon/commit/3a6a96e3cb064ef7e2bfcc50fa51c0d0a931cf12", "message": "update tests", "committedDate": "2020-12-02T23:07:19Z", "type": "commit"}, {"oid": "f60afb7671eae4bbce79999b908b5474c8b36e7d", "url": "https://github.com/redhataccess/pantheon/commit/f60afb7671eae4bbce79999b908b5474c8b36e7d", "message": "code clean up", "committedDate": "2020-12-03T14:19:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI3NTQ4MQ==", "url": "https://github.com/redhataccess/pantheon/pull/465#discussion_r535275481", "bodyText": "do you need the onDelete function here?", "author": "grantsydney", "createdAt": "2020-12-03T14:32:17Z", "path": "pantheon-bundle/frontend/src/app/searchBeta.tsx", "diffHunk": "@@ -0,0 +1,570 @@\n+import React, { Component } from \"react\";\n+import {\n+  Drawer,\n+  DrawerPanelContent,\n+  DrawerContent,\n+  DrawerContentBody,\n+  DrawerPanelBody,\n+  DrawerHead,\n+  DrawerActions,\n+  DrawerCloseButton,\n+  Button, ButtonVariant,\n+  InputGroup,\n+  Select,\n+  SelectOption,\n+  Dropdown,\n+  DropdownItem,\n+  DropdownSeparator,\n+  KebabToggle,\n+  Toolbar, ToolbarItem, ToolbarContent, ToolbarFilter, ToolbarToggleGroup, ToolbarGroup,\n+  TextInput,\n+  SelectVariant,\n+  ExpandableSection,\n+  Checkbox,\n+  Divider,\n+  SimpleListItem,\n+  SimpleList,\n+  SearchInput,\n+  Alert,\n+\n+} from \"@patternfly/react-core\";\n+\n+import { SearchResults } from \"@app/searchResults\";\n+\n+import \"@app/app.css\";\n+import SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\n+import FilterIcon from \"@patternfly/react-icons/dist/js/icons/filter-icon\";\n+import { IAppState } from \"@app/app\"\n+\n+export interface ISearchState {\n+  filterLabel: string\n+  isExpanded: boolean\n+  assembliesIsExpanded: boolean\n+  expandableSectionIsExpanded: boolean\n+  modulesIsExpanded: boolean\n+  productFilterIsExpanded: boolean\n+  repoFilterIsExpanded: boolean\n+  products: Array<{ name: string, id: string }>\n+  repositories: Array<{ name: string, id: string, checked: boolean }>\n+\n+  inputValue: string,\n+  statusIsExpanded: boolean,\n+  ctypeIsExpanded: boolean,\n+  filters: {\n+    ctype: any,\n+    status: any\n+  },\n+\n+  productFilterValue: string\n+  repoFilterValue: string\n+\n+  productsSelected: string[]\n+  repositoriesSelected: string[]\n+}\n+class SearchBeta extends Component<IAppState, ISearchState> {\n+  private drawerRef: React.RefObject<HTMLInputElement>;\n+\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      // states for drawer\n+      filterLabel: \"repo\",\n+      isExpanded: true,\n+      assembliesIsExpanded: true,\n+      expandableSectionIsExpanded: true,\n+      modulesIsExpanded: true,\n+      productFilterIsExpanded: true,\n+      repoFilterIsExpanded: true,\n+      products: [{ name: \"\", id: \"\" }],\n+      repositories: [{ name: \"\", id: \"\", checked: false }],\n+      // states for toolbar\n+      inputValue: \"\",\n+      statusIsExpanded: false,\n+      ctypeIsExpanded: false,\n+      filters: {\n+        ctype: [],\n+        status: []\n+      },\n+\n+      // filters\n+      productFilterValue: \"\",\n+      repoFilterValue: \"\",\n+\n+      // search\n+      productsSelected: [],\n+      repositoriesSelected: [],\n+    };\n+    this.drawerRef = React.createRef();\n+\n+  }\n+\n+  public componentDidMount() {\n+    // list repos inside the drawer\n+    this.getRepositories()\n+    // this.getProducts()\n+\n+    // TODO: enable resize\n+    // toolbar\n+    // window.addEventListener(\"resize\", this.closeExpandableContent);\n+  }\n+\n+  public componentWillMount() {\n+    // list repos inside the drawer\n+    this.getRepositories()\n+    // this.getProducts()\n+  }\n+\n+  public componentWillUnmount() {\n+    // TODO: enable resize\n+    // toolbar\n+    // window.removeEventListener(\"resize\", this.closeExpandableContent);\n+  }\n+  public render() {\n+    const { filterLabel, isExpanded, assembliesIsExpanded, modulesIsExpanded, productFilterIsExpanded, repoFilterIsExpanded, expandableSectionIsExpanded, repositories, inputValue, filters, statusIsExpanded, ctypeIsExpanded } = this.state;\n+\n+    const panelContent = (\n+      <DrawerPanelContent widths={{ lg: \"width_25\" }}>\n+        <DrawerHead>\n+          <span className=\"pf-c-title pf-m-2xl\" tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>Filters</span>\n+          <DrawerActions>\n+            <DrawerCloseButton onClick={this.onCloseClick} />\n+          </DrawerActions>\n+          <ExpandableSection toggleText=\"By repo\" isActive={true} isExpanded={repoFilterIsExpanded} onToggle={this.onRepositoriesToggle}>\n+            <SearchInput\n+              placeholder=\"Filter\"\n+              value={this.state.repoFilterValue}\n+              onChange={this.onChangeRepoFilter}\n+              onClear={(evt) => this.onChangeRepoFilter(\"\", evt)}\n+            />\n+            <SimpleList aria-label=\"Repository List\">\n+              {this.state.repositories.map((data) => (\n+                <SimpleListItem key={data.id}>\n+                  <Checkbox label={data.name} aria-label=\"uncontrolled checkbox\" id={data.id} onClick={this.onSelectRepositories} />\n+                </SimpleListItem>\n+              ))}\n+            </SimpleList>\n+\n+          </ExpandableSection>\n+          <br />\n+          {/* <ExpandableSection toggleText=\"By product\">\n+            <SearchInput\n+              placeholder=\"Filter\"\n+              value={this.state.productFilterValue}\n+              onChange={this.onChangeProductFilter}\n+              onClear={(evt) => this.onChangeProductFilter(\"\", evt)}\n+            />\n+            <SimpleList aria-label=\"Product List\">\n+              {this.state.products.map((data) => (\n+                <SimpleListItem key={data.id}>\n+                  <Checkbox label={data.name} aria-label=\"uncontrolled checkbox\" id={data.id} />\n+                </SimpleListItem>\n+              ))}\n+            </SimpleList>\n+\n+          </ExpandableSection> */}\n+        </DrawerHead>\n+      </DrawerPanelContent>\n+    );\n+    const drawerContent = (\n+      <React.Fragment>\n+        <ExpandableSection toggleText=\"Modules\" className=\"pf-c-title\" isActive={true} isExpanded={modulesIsExpanded} onToggle={this.onModulesToggle}>\n+          <SearchResults\n+            contentType=\"module\"\n+            keyWord={this.state.inputValue}\n+            repositoriesSelected={this.state.repositoriesSelected}\n+            productsSelected={this.state.productsSelected}\n+            userAuthenticated={this.props.userAuthenticated}\n+            filters={this.state.filters}\n+          />\n+\n+        </ExpandableSection>\n+        <br />\n+        <ExpandableSection toggleText=\"Assemblies\" className=\"pf-c-title\" isActive={true} isExpanded={assembliesIsExpanded} onToggle={this.onAssembliesToggle}>\n+          <SearchResults\n+            contentType=\"assembly\"\n+            keyWord={this.state.inputValue}\n+            repositoriesSelected={this.state.repositoriesSelected}\n+            productsSelected={this.state.productsSelected}\n+            userAuthenticated={this.props.userAuthenticated}\n+            filters={this.state.filters}\n+          />\n+\n+        </ExpandableSection>\n+      </React.Fragment>\n+    );\n+\n+    const statusMenuItems = [\n+      <SelectOption key=\"statusDraft\" value=\"draft\" label= \"Draft\" />,\n+      <SelectOption key=\"statusPublished\" value=\"released\" label=\"Published\" />\n+    ];\n+\n+    const contentTypeMenuItems = [\n+      <SelectOption key=\"ctypeConcept\" value=\"CONCEPT\" label=\"Concept\" />,\n+      <SelectOption key=\"ctypeProcedure\" value=\"PROCEDURE\" label=\"Procedure\" />,\n+      <SelectOption key=\"ctypeReference\" value=\"REFERENCE\" label=\"Reference\" />\n+    ];\n+\n+    const toggleGroupItems = (\n+      <React.Fragment>\n+        <ToolbarItem>\n+          <Button variant=\"tertiary\" aria-expanded={isExpanded} onClick={this.onClick} icon={<FilterIcon />} />\n+        </ToolbarItem>\n+        <ToolbarItem>\n+          <InputGroup>\n+            <SearchInput\n+              name=\"textInput\"\n+              id=\"textInput\"\n+              placeholder=\"Find by name\"\n+              type=\"search\"\n+              aria-label=\"search input\"\n+              onChange={this.onInputChange}\n+              onClear={this.onInputClear}\n+              value={inputValue}\n+            />\n+            <Button variant={ButtonVariant.control} aria-label=\"search button for search input\">\n+              <SearchIcon />\n+            </Button>\n+          </InputGroup>\n+        </ToolbarItem>\n+        <ToolbarGroup variant=\"filter-group\">\n+          <ToolbarFilter\n+            chips={filters.status}\n+            // deleteChip={this.onDelete}", "originalCommit": "3a6a96e3cb064ef7e2bfcc50fa51c0d0a931cf12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM1NjQwOQ==", "url": "https://github.com/redhataccess/pantheon/pull/465#discussion_r535356409", "bodyText": "Currently, users have two options to remove filter chips\n\n\n\"clear all filters\"\n\n\nuncheck items from the dropdown\n\n\nideally, we enable deleteChip prop for ToobarFilter component. This gives user a third option to remove chip. I created a jira ticket to capture the effort: CCS-3975", "author": "xdavidson", "createdAt": "2020-12-03T15:52:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI3NTQ4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI3ODM2Ng==", "url": "https://github.com/redhataccess/pantheon/pull/465#discussion_r535278366", "bodyText": "Is this duplicate code? Looks the same starting on line 249", "author": "grantsydney", "createdAt": "2020-12-03T14:34:41Z", "path": "pantheon-bundle/frontend/src/app/searchBeta.tsx", "diffHunk": "@@ -0,0 +1,570 @@\n+import React, { Component } from \"react\";\n+import {\n+  Drawer,\n+  DrawerPanelContent,\n+  DrawerContent,\n+  DrawerContentBody,\n+  DrawerPanelBody,\n+  DrawerHead,\n+  DrawerActions,\n+  DrawerCloseButton,\n+  Button, ButtonVariant,\n+  InputGroup,\n+  Select,\n+  SelectOption,\n+  Dropdown,\n+  DropdownItem,\n+  DropdownSeparator,\n+  KebabToggle,\n+  Toolbar, ToolbarItem, ToolbarContent, ToolbarFilter, ToolbarToggleGroup, ToolbarGroup,\n+  TextInput,\n+  SelectVariant,\n+  ExpandableSection,\n+  Checkbox,\n+  Divider,\n+  SimpleListItem,\n+  SimpleList,\n+  SearchInput,\n+  Alert,\n+\n+} from \"@patternfly/react-core\";\n+\n+import { SearchResults } from \"@app/searchResults\";\n+\n+import \"@app/app.css\";\n+import SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\n+import FilterIcon from \"@patternfly/react-icons/dist/js/icons/filter-icon\";\n+import { IAppState } from \"@app/app\"\n+\n+export interface ISearchState {\n+  filterLabel: string\n+  isExpanded: boolean\n+  assembliesIsExpanded: boolean\n+  expandableSectionIsExpanded: boolean\n+  modulesIsExpanded: boolean\n+  productFilterIsExpanded: boolean\n+  repoFilterIsExpanded: boolean\n+  products: Array<{ name: string, id: string }>\n+  repositories: Array<{ name: string, id: string, checked: boolean }>\n+\n+  inputValue: string,\n+  statusIsExpanded: boolean,\n+  ctypeIsExpanded: boolean,\n+  filters: {\n+    ctype: any,\n+    status: any\n+  },\n+\n+  productFilterValue: string\n+  repoFilterValue: string\n+\n+  productsSelected: string[]\n+  repositoriesSelected: string[]\n+}\n+class SearchBeta extends Component<IAppState, ISearchState> {\n+  private drawerRef: React.RefObject<HTMLInputElement>;\n+\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      // states for drawer\n+      filterLabel: \"repo\",\n+      isExpanded: true,\n+      assembliesIsExpanded: true,\n+      expandableSectionIsExpanded: true,\n+      modulesIsExpanded: true,\n+      productFilterIsExpanded: true,\n+      repoFilterIsExpanded: true,\n+      products: [{ name: \"\", id: \"\" }],\n+      repositories: [{ name: \"\", id: \"\", checked: false }],\n+      // states for toolbar\n+      inputValue: \"\",\n+      statusIsExpanded: false,\n+      ctypeIsExpanded: false,\n+      filters: {\n+        ctype: [],\n+        status: []\n+      },\n+\n+      // filters\n+      productFilterValue: \"\",\n+      repoFilterValue: \"\",\n+\n+      // search\n+      productsSelected: [],\n+      repositoriesSelected: [],\n+    };\n+    this.drawerRef = React.createRef();\n+\n+  }\n+\n+  public componentDidMount() {\n+    // list repos inside the drawer\n+    this.getRepositories()\n+    // this.getProducts()\n+\n+    // TODO: enable resize\n+    // toolbar\n+    // window.addEventListener(\"resize\", this.closeExpandableContent);\n+  }\n+\n+  public componentWillMount() {\n+    // list repos inside the drawer\n+    this.getRepositories()\n+    // this.getProducts()\n+  }\n+\n+  public componentWillUnmount() {\n+    // TODO: enable resize\n+    // toolbar\n+    // window.removeEventListener(\"resize\", this.closeExpandableContent);\n+  }\n+  public render() {\n+    const { filterLabel, isExpanded, assembliesIsExpanded, modulesIsExpanded, productFilterIsExpanded, repoFilterIsExpanded, expandableSectionIsExpanded, repositories, inputValue, filters, statusIsExpanded, ctypeIsExpanded } = this.state;\n+\n+    const panelContent = (\n+      <DrawerPanelContent widths={{ lg: \"width_25\" }}>\n+        <DrawerHead>\n+          <span className=\"pf-c-title pf-m-2xl\" tabIndex={isExpanded ? 0 : -1} ref={this.drawerRef}>Filters</span>\n+          <DrawerActions>\n+            <DrawerCloseButton onClick={this.onCloseClick} />\n+          </DrawerActions>\n+          <ExpandableSection toggleText=\"By repo\" isActive={true} isExpanded={repoFilterIsExpanded} onToggle={this.onRepositoriesToggle}>\n+            <SearchInput\n+              placeholder=\"Filter\"\n+              value={this.state.repoFilterValue}\n+              onChange={this.onChangeRepoFilter}\n+              onClear={(evt) => this.onChangeRepoFilter(\"\", evt)}\n+            />\n+            <SimpleList aria-label=\"Repository List\">\n+              {this.state.repositories.map((data) => (\n+                <SimpleListItem key={data.id}>\n+                  <Checkbox label={data.name} aria-label=\"uncontrolled checkbox\" id={data.id} onClick={this.onSelectRepositories} />\n+                </SimpleListItem>\n+              ))}\n+            </SimpleList>\n+\n+          </ExpandableSection>\n+          <br />\n+          {/* <ExpandableSection toggleText=\"By product\">\n+            <SearchInput\n+              placeholder=\"Filter\"\n+              value={this.state.productFilterValue}\n+              onChange={this.onChangeProductFilter}\n+              onClear={(evt) => this.onChangeProductFilter(\"\", evt)}\n+            />\n+            <SimpleList aria-label=\"Product List\">\n+              {this.state.products.map((data) => (\n+                <SimpleListItem key={data.id}>\n+                  <Checkbox label={data.name} aria-label=\"uncontrolled checkbox\" id={data.id} />\n+                </SimpleListItem>\n+              ))}\n+            </SimpleList>\n+\n+          </ExpandableSection> */}\n+        </DrawerHead>\n+      </DrawerPanelContent>\n+    );\n+    const drawerContent = (\n+      <React.Fragment>\n+        <ExpandableSection toggleText=\"Modules\" className=\"pf-c-title\" isActive={true} isExpanded={modulesIsExpanded} onToggle={this.onModulesToggle}>\n+          <SearchResults\n+            contentType=\"module\"\n+            keyWord={this.state.inputValue}\n+            repositoriesSelected={this.state.repositoriesSelected}\n+            productsSelected={this.state.productsSelected}\n+            userAuthenticated={this.props.userAuthenticated}\n+            filters={this.state.filters}\n+          />\n+\n+        </ExpandableSection>\n+        <br />\n+        <ExpandableSection toggleText=\"Assemblies\" className=\"pf-c-title\" isActive={true} isExpanded={assembliesIsExpanded} onToggle={this.onAssembliesToggle}>\n+          <SearchResults\n+            contentType=\"assembly\"\n+            keyWord={this.state.inputValue}\n+            repositoriesSelected={this.state.repositoriesSelected}\n+            productsSelected={this.state.productsSelected}\n+            userAuthenticated={this.props.userAuthenticated}\n+            filters={this.state.filters}\n+          />\n+\n+        </ExpandableSection>\n+      </React.Fragment>\n+    );\n+\n+    const statusMenuItems = [\n+      <SelectOption key=\"statusDraft\" value=\"draft\" label= \"Draft\" />,\n+      <SelectOption key=\"statusPublished\" value=\"released\" label=\"Published\" />\n+    ];\n+\n+    const contentTypeMenuItems = [\n+      <SelectOption key=\"ctypeConcept\" value=\"CONCEPT\" label=\"Concept\" />,\n+      <SelectOption key=\"ctypeProcedure\" value=\"PROCEDURE\" label=\"Procedure\" />,\n+      <SelectOption key=\"ctypeReference\" value=\"REFERENCE\" label=\"Reference\" />\n+    ];\n+\n+    const toggleGroupItems = (\n+      <React.Fragment>\n+        <ToolbarItem>\n+          <Button variant=\"tertiary\" aria-expanded={isExpanded} onClick={this.onClick} icon={<FilterIcon />} />\n+        </ToolbarItem>\n+        <ToolbarItem>\n+          <InputGroup>\n+            <SearchInput\n+              name=\"textInput\"\n+              id=\"textInput\"\n+              placeholder=\"Find by name\"\n+              type=\"search\"\n+              aria-label=\"search input\"\n+              onChange={this.onInputChange}\n+              onClear={this.onInputClear}\n+              value={inputValue}\n+            />\n+            <Button variant={ButtonVariant.control} aria-label=\"search button for search input\">\n+              <SearchIcon />\n+            </Button>\n+          </InputGroup>\n+        </ToolbarItem>\n+        <ToolbarGroup variant=\"filter-group\">\n+          <ToolbarFilter\n+            chips={filters.status}\n+            // deleteChip={this.onDelete}\n+            deleteChipGroup={this.onDeleteGroup}\n+            categoryName=\"Status\"\n+          >\n+            <Select\n+              variant={SelectVariant.checkbox}\n+              aria-label=\"Status\"\n+              onToggle={this.onStatusToggle}\n+              onSelect={this.onStatusSelect}\n+              selections={filters.status}\n+              isOpen={statusIsExpanded}\n+              placeholderText=\"Status\"\n+            >\n+              {statusMenuItems}\n+            </Select>\n+          </ToolbarFilter>\n+          {/* <ToolbarFilter chips={filters.ctype} deleteChip={this.onDelete} categoryName=\"Content Type\"> */}", "originalCommit": "3a6a96e3cb064ef7e2bfcc50fa51c0d0a931cf12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM1Nzc1OQ==", "url": "https://github.com/redhataccess/pantheon/pull/465#discussion_r535357759", "bodyText": "This is not duplicated code, line 248 enables \"deleteChip\" function while line 249 doesn't. Ideally, we want to have \"deleteChip\" enabled. this work effort is captured in CCS-3975", "author": "xdavidson", "createdAt": "2020-12-03T15:53:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI3ODM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM2NTc4Mw==", "url": "https://github.com/redhataccess/pantheon/pull/465#discussion_r535365783", "bodyText": "Ah got it, thanks for clarifying", "author": "grantsydney", "createdAt": "2020-12-03T16:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI3ODM2Ng=="}], "type": "inlineReview"}, {"oid": "0208683baf76463eb956af7ebfdda2e790fcfac4", "url": "https://github.com/redhataccess/pantheon/commit/0208683baf76463eb956af7ebfdda2e790fcfac4", "message": "update emptyState when repositories are unchecked", "committedDate": "2020-12-03T15:24:00Z", "type": "commit"}, {"oid": "c8595e956c0ac8d468654e7a9066d181c8a10393", "url": "https://github.com/redhataccess/pantheon/commit/c8595e956c0ac8d468654e7a9066d181c8a10393", "message": "remove dot in title", "committedDate": "2020-12-03T15:30:59Z", "type": "commit"}, {"oid": "b8a083564503db693b42008d5ec1506141929da0", "url": "https://github.com/redhataccess/pantheon/commit/b8a083564503db693b42008d5ec1506141929da0", "message": "fix test failure", "committedDate": "2020-12-03T15:43:31Z", "type": "commit"}, {"oid": "29c7e39c3c0740db886dc9a43e9c87175374f95f", "url": "https://github.com/redhataccess/pantheon/commit/29c7e39c3c0740db886dc9a43e9c87175374f95f", "message": "merge with master", "committedDate": "2020-12-03T16:19:22Z", "type": "commit"}, {"oid": "d0d16a7244bb97010700f3c01d1e0df7686af344", "url": "https://github.com/redhataccess/pantheon/commit/d0d16a7244bb97010700f3c01d1e0df7686af344", "message": "clean up", "committedDate": "2020-12-03T16:49:41Z", "type": "commit"}]}