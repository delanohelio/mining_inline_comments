{"pr_number": 279, "pr_title": "FCCEUD-11 Describe how to contribute to Pantheon", "pr_createdAt": "2020-04-22T15:12:17Z", "pr_url": "https://github.com/redhataccess/pantheon/pull/279", "timeline": [{"oid": "7bc2cc4da3976281d60a08fca1b70c10c5a90c60", "url": "https://github.com/redhataccess/pantheon/commit/7bc2cc4da3976281d60a08fca1b70c10c5a90c60", "message": "FCCEUD-11 Added a TOC.", "committedDate": "2020-02-12T15:26:11Z", "type": "commit"}, {"oid": "e5e102b186e5defd4c5e49baddbe5464b0f6031f", "url": "https://github.com/redhataccess/pantheon/commit/e5e102b186e5defd4c5e49baddbe5464b0f6031f", "message": "Update README.md", "committedDate": "2020-02-12T15:31:05Z", "type": "commit"}, {"oid": "5b5cf91f6c430b959449b68f74b750604f3b2860", "url": "https://github.com/redhataccess/pantheon/commit/5b5cf91f6c430b959449b68f74b750604f3b2860", "message": "Merge branch 'master' of github.com:redhataccess/pantheon into FCCEUD-11", "committedDate": "2020-03-25T12:33:39Z", "type": "commit"}, {"oid": "2669baf989610f0e7a150ff9b1a125f2027f1cad", "url": "https://github.com/redhataccess/pantheon/commit/2669baf989610f0e7a150ff9b1a125f2027f1cad", "message": "FCCEUD-11 Added instructions on contributing to Pantheon docs.", "committedDate": "2020-04-22T15:08:03Z", "type": "commit"}, {"oid": "7eb4f71e360b3e7b745c5a6ca2b342af3676aa7e", "url": "https://github.com/redhataccess/pantheon/commit/7eb4f71e360b3e7b745c5a6ca2b342af3676aa7e", "message": "FCCEUD-11 Minor edits.", "committedDate": "2020-04-22T15:19:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExNDAwOA==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r413114008", "bodyText": "The process here is that the developer adds the label \"tech review complete\" (not 'passed') as soon as the review has been performed, regardless of whether there were comments - so that way, we don't have a 2nd developer coming along and potentially duplicating the review. A minor point, but if we're going for accuracy, then it's worth mentioning. :)", "author": "benradey", "createdAt": "2020-04-22T16:06:24Z", "path": "README.md", "diffHunk": "@@ -77,7 +77,7 @@ The developers review the pull request for technical accuracy and team members r\n \n Both the technical review and peer review processes take place in pull requests in GitHub.\n \n-After creating and labeling a pull request as outlined above, the developers review the pull request and add comments regarding technical accuracy. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the developers change the label from **Awaiting technical review** to **Technical review passed**.\n+After creating and labeling a pull request as outlined above, the developers review the pull request and add comments regarding technical accuracy. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the developers change the label from **awaiting tech review** to **tech review passed**.", "originalCommit": "7eb4f71e360b3e7b745c5a6ca2b342af3676aa7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc1MzQyNg==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420753426", "bodyText": "Got it. Fixed.", "author": "stoobie", "createdAt": "2020-05-06T12:32:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExNDAwOA=="}], "type": "inlineReview"}, {"oid": "054bc1eb287d3fbad6304eb4e58f19dce5e9644c", "url": "https://github.com/redhataccess/pantheon/commit/054bc1eb287d3fbad6304eb4e58f19dce5e9644c", "message": "FCCEUD-11 Implemented SME comments.", "committedDate": "2020-05-06T12:42:07Z", "type": "commit"}, {"oid": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "url": "https://github.com/redhataccess/pantheon/commit/033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "message": "FCCEUD-11 minor edit.", "committedDate": "2020-05-06T12:43:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyNTY5OA==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420825698", "bodyText": "\"AsciiDoc\"", "author": "robin-owen", "createdAt": "2020-05-06T14:14:58Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4OTg3Mw==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426689873", "bodyText": "Fixed.", "author": "stoobie", "createdAt": "2020-05-18T14:59:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyNTY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyNTc1OA==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420825758", "bodyText": "Awkward new line.", "author": "robin-owen", "createdAt": "2020-05-06T14:15:02Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyNjYyNg==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420826626", "bodyText": "This link feels awkward just sitting here. Could we introduce the concept (\"for more information, see\") or make the entire prerequisite a link to the help article covering the topic?", "author": "robin-owen", "createdAt": "2020-05-06T14:16:07Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5MTY4MQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426691681", "bodyText": "or make the entire prerequisite a link to the help article covering the topic\n\n@robin-owen, isn't that what we have here? The text of the prereq is a link to the help article.", "author": "stoobie", "createdAt": "2020-05-18T15:01:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyNjYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyNjc0NQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420826745", "bodyText": "Same here. :)", "author": "robin-owen", "createdAt": "2020-05-06T14:16:17Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)\n+* You must have registered SSH keys in your GitHub account.  \n+[Adding a new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwOTc0NA==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426709744", "bodyText": "Same comment as above.", "author": "stoobie", "createdAt": "2020-05-18T15:27:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyNjc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyODA3NQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420828075", "bodyText": "\"clarity, consistency, and compliance with necessary standards\"", "author": "robin-owen", "createdAt": "2020-05-06T14:18:06Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)\n+* You must have registered SSH keys in your GitHub account.  \n+[Adding a new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)\n+* You must be a member of the `pantheon-doc-authors` team in the `redhataccess` group in GitHub.\n+* You must be logged in to your account on GitHub.\n+\n+### Forking the repository\n+\n+Fork the repository so that you can create and work with branches independently of the `redhataccess/pantheon` repository.\n+\n+1. In a web browser, navigate to https://github.com/redhataccess/pantheon\n+1. Click **Fork**.\n+1. Click your user space in GitHub.\n+\n+### Cloning the repository\n+\n+After you have forked the repository, you must clone it to your local machine and add the original `redhataccess/pantheon` repository as an upstream remote.\n+\n+1. From a terminal, clone the repository:  \n+       $ git clone git@github.com:<user-space>/pantheon.git\n+1. Set up `redhataccess/pantheon` as the upstream:  \n+       $ cd pantheon\n+       $ git remote add upstream git@github.com:redhataccess/pantheon.git\n+\n+### Creating a working branch\n+\n+Whenever you work on a new issue, you must create a new working branch based on the latest version of the upstream master branch.\n+\n+1. Ensure you are on master  \n+       $ git checkout master\n+1. Ensure your fork is up to date  \n+       $ git pull upstream master\n+1. Create a working branch based on the issue in JIRA:  \n+       $ git checkout -b FCCEUD<ID#>\n+\n+### Creating a pull request and completing review\n+\n+When your work is ready to be reviewed and merged, create a pull request.\n+\n+1. Push your working branch to your fork:  \n+       $ git push -u origin <branch_name>\n+1. From the repository page in GitHub, click **New pull request**.\n+1. Select your working branch from the compare list.\n+1. Add `WIP` to the title of the pull request.\n+1. Add the **awaiting tech review** label to the pull request.\n+1. In the pull request comment field, enter `@redhataccess/pantheon-developers Please review for technical completeness and accuracy`.\n+1. Click **Create new pull request**.\n+\n+For code pull requests, one or more developers review the pull request. For documentation pull requests, the developers review the pull request for technical accuracy and documentation team members review the pull request for clarity and consistency and compliance with necessary standards.", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMDEyMw==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426710123", "bodyText": "Fixed.", "author": "stoobie", "createdAt": "2020-05-18T15:27:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyODA3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyOTg3Mw==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420829873", "bodyText": "Should this be \"Running unit tests\"?", "author": "robin-owen", "createdAt": "2020-05-06T14:20:30Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)\n+* You must have registered SSH keys in your GitHub account.  \n+[Adding a new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)\n+* You must be a member of the `pantheon-doc-authors` team in the `redhataccess` group in GitHub.\n+* You must be logged in to your account on GitHub.\n+\n+### Forking the repository\n+\n+Fork the repository so that you can create and work with branches independently of the `redhataccess/pantheon` repository.\n+\n+1. In a web browser, navigate to https://github.com/redhataccess/pantheon\n+1. Click **Fork**.\n+1. Click your user space in GitHub.\n+\n+### Cloning the repository\n+\n+After you have forked the repository, you must clone it to your local machine and add the original `redhataccess/pantheon` repository as an upstream remote.\n+\n+1. From a terminal, clone the repository:  \n+       $ git clone git@github.com:<user-space>/pantheon.git\n+1. Set up `redhataccess/pantheon` as the upstream:  \n+       $ cd pantheon\n+       $ git remote add upstream git@github.com:redhataccess/pantheon.git\n+\n+### Creating a working branch\n+\n+Whenever you work on a new issue, you must create a new working branch based on the latest version of the upstream master branch.\n+\n+1. Ensure you are on master  \n+       $ git checkout master\n+1. Ensure your fork is up to date  \n+       $ git pull upstream master\n+1. Create a working branch based on the issue in JIRA:  \n+       $ git checkout -b FCCEUD<ID#>\n+\n+### Creating a pull request and completing review\n+\n+When your work is ready to be reviewed and merged, create a pull request.\n+\n+1. Push your working branch to your fork:  \n+       $ git push -u origin <branch_name>\n+1. From the repository page in GitHub, click **New pull request**.\n+1. Select your working branch from the compare list.\n+1. Add `WIP` to the title of the pull request.\n+1. Add the **awaiting tech review** label to the pull request.\n+1. In the pull request comment field, enter `@redhataccess/pantheon-developers Please review for technical completeness and accuracy`.\n+1. Click **Create new pull request**.\n+\n+For code pull requests, one or more developers review the pull request. For documentation pull requests, the developers review the pull request for technical accuracy and documentation team members review the pull request for clarity and consistency and compliance with necessary standards.\n+\n+### The review process\n+\n+Both the technical review and peer review processes take place in pull requests in GitHub.\n+\n+After creating and labeling a pull request as outlined above, the developers review the pull request and add comments regarding technical accuracy. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the developers change the label from **awaiting tech review** to **tech review passed**.\n+\n+When technical review is complete, writers click the **Reviewers** gear icon and select the name of a team member to request peer review. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the reviewer clicks **Review changes > Approve** from the **Files changed** tab of the pull request to approve the changes and the pull request.\n+\n+### Merging a pull request\n+\n+When you have addressed all technical review and peer review comments, notify the developers to accept the pull request.\n+\n+1. Remove `WIP` from the title of the pull request.\n+1. Click **Request Review** and enter `@redhataccess/pantheon-developers`.\n+\n+The developers check that the **Tech review passed** label has been added to the pull request and peer pull request approval provided, then accept it.\n+\n+## Installing Pantheon\n+\n+### Prerequisites\n+* Podman\n+* Buildah\n+* Java\n+\n+### Building the application\n+_(All commands from here on will be assumed to be run from the project's root directory)_\n \n ```sh\n ./mvnw clean install\n ```\n \n-### Unit Tests\n+### Unit tests", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTIyNA==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420831224", "bodyText": "Does this note belong here, or does it belong under the \"Installing Pantheon\" heading?", "author": "robin-owen", "createdAt": "2020-05-06T14:22:17Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)\n+* You must have registered SSH keys in your GitHub account.  \n+[Adding a new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)\n+* You must be a member of the `pantheon-doc-authors` team in the `redhataccess` group in GitHub.\n+* You must be logged in to your account on GitHub.\n+\n+### Forking the repository\n+\n+Fork the repository so that you can create and work with branches independently of the `redhataccess/pantheon` repository.\n+\n+1. In a web browser, navigate to https://github.com/redhataccess/pantheon\n+1. Click **Fork**.\n+1. Click your user space in GitHub.\n+\n+### Cloning the repository\n+\n+After you have forked the repository, you must clone it to your local machine and add the original `redhataccess/pantheon` repository as an upstream remote.\n+\n+1. From a terminal, clone the repository:  \n+       $ git clone git@github.com:<user-space>/pantheon.git\n+1. Set up `redhataccess/pantheon` as the upstream:  \n+       $ cd pantheon\n+       $ git remote add upstream git@github.com:redhataccess/pantheon.git\n+\n+### Creating a working branch\n+\n+Whenever you work on a new issue, you must create a new working branch based on the latest version of the upstream master branch.\n+\n+1. Ensure you are on master  \n+       $ git checkout master\n+1. Ensure your fork is up to date  \n+       $ git pull upstream master\n+1. Create a working branch based on the issue in JIRA:  \n+       $ git checkout -b FCCEUD<ID#>\n+\n+### Creating a pull request and completing review\n+\n+When your work is ready to be reviewed and merged, create a pull request.\n+\n+1. Push your working branch to your fork:  \n+       $ git push -u origin <branch_name>\n+1. From the repository page in GitHub, click **New pull request**.\n+1. Select your working branch from the compare list.\n+1. Add `WIP` to the title of the pull request.\n+1. Add the **awaiting tech review** label to the pull request.\n+1. In the pull request comment field, enter `@redhataccess/pantheon-developers Please review for technical completeness and accuracy`.\n+1. Click **Create new pull request**.\n+\n+For code pull requests, one or more developers review the pull request. For documentation pull requests, the developers review the pull request for technical accuracy and documentation team members review the pull request for clarity and consistency and compliance with necessary standards.\n+\n+### The review process\n+\n+Both the technical review and peer review processes take place in pull requests in GitHub.\n+\n+After creating and labeling a pull request as outlined above, the developers review the pull request and add comments regarding technical accuracy. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the developers change the label from **awaiting tech review** to **tech review passed**.\n+\n+When technical review is complete, writers click the **Reviewers** gear icon and select the name of a team member to request peer review. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the reviewer clicks **Review changes > Approve** from the **Files changed** tab of the pull request to approve the changes and the pull request.\n+\n+### Merging a pull request\n+\n+When you have addressed all technical review and peer review comments, notify the developers to accept the pull request.\n+\n+1. Remove `WIP` from the title of the pull request.\n+1. Click **Request Review** and enter `@redhataccess/pantheon-developers`.\n+\n+The developers check that the **Tech review passed** label has been added to the pull request and peer pull request approval provided, then accept it.\n+\n+## Installing Pantheon\n+\n+### Prerequisites\n+* Podman\n+* Buildah\n+* Java\n+\n+### Building the application\n+_(All commands from here on will be assumed to be run from the project's root directory)_", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMTc2Ng==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426711766", "bodyText": "Building the application is a sub-heading of Installing Pantheon. (This is actually out of scope of what I wrote.)", "author": "stoobie", "createdAt": "2020-05-18T15:29:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTIyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTgwNQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420831805", "bodyText": "\"Build the Pantheon Docker image\"\nWould it be more accurate to say \"Docker-formatted container image\"?", "author": "robin-owen", "createdAt": "2020-05-06T14:23:02Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)\n+* You must have registered SSH keys in your GitHub account.  \n+[Adding a new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)\n+* You must be a member of the `pantheon-doc-authors` team in the `redhataccess` group in GitHub.\n+* You must be logged in to your account on GitHub.\n+\n+### Forking the repository\n+\n+Fork the repository so that you can create and work with branches independently of the `redhataccess/pantheon` repository.\n+\n+1. In a web browser, navigate to https://github.com/redhataccess/pantheon\n+1. Click **Fork**.\n+1. Click your user space in GitHub.\n+\n+### Cloning the repository\n+\n+After you have forked the repository, you must clone it to your local machine and add the original `redhataccess/pantheon` repository as an upstream remote.\n+\n+1. From a terminal, clone the repository:  \n+       $ git clone git@github.com:<user-space>/pantheon.git\n+1. Set up `redhataccess/pantheon` as the upstream:  \n+       $ cd pantheon\n+       $ git remote add upstream git@github.com:redhataccess/pantheon.git\n+\n+### Creating a working branch\n+\n+Whenever you work on a new issue, you must create a new working branch based on the latest version of the upstream master branch.\n+\n+1. Ensure you are on master  \n+       $ git checkout master\n+1. Ensure your fork is up to date  \n+       $ git pull upstream master\n+1. Create a working branch based on the issue in JIRA:  \n+       $ git checkout -b FCCEUD<ID#>\n+\n+### Creating a pull request and completing review\n+\n+When your work is ready to be reviewed and merged, create a pull request.\n+\n+1. Push your working branch to your fork:  \n+       $ git push -u origin <branch_name>\n+1. From the repository page in GitHub, click **New pull request**.\n+1. Select your working branch from the compare list.\n+1. Add `WIP` to the title of the pull request.\n+1. Add the **awaiting tech review** label to the pull request.\n+1. In the pull request comment field, enter `@redhataccess/pantheon-developers Please review for technical completeness and accuracy`.\n+1. Click **Create new pull request**.\n+\n+For code pull requests, one or more developers review the pull request. For documentation pull requests, the developers review the pull request for technical accuracy and documentation team members review the pull request for clarity and consistency and compliance with necessary standards.\n+\n+### The review process\n+\n+Both the technical review and peer review processes take place in pull requests in GitHub.\n+\n+After creating and labeling a pull request as outlined above, the developers review the pull request and add comments regarding technical accuracy. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the developers change the label from **awaiting tech review** to **tech review passed**.\n+\n+When technical review is complete, writers click the **Reviewers** gear icon and select the name of a team member to request peer review. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the reviewer clicks **Review changes > Approve** from the **Files changed** tab of the pull request to approve the changes and the pull request.\n+\n+### Merging a pull request\n+\n+When you have addressed all technical review and peer review comments, notify the developers to accept the pull request.\n+\n+1. Remove `WIP` from the title of the pull request.\n+1. Click **Request Review** and enter `@redhataccess/pantheon-developers`.\n+\n+The developers check that the **Tech review passed** label has been added to the pull request and peer pull request approval provided, then accept it.\n+\n+## Installing Pantheon\n+\n+### Prerequisites\n+* Podman\n+* Buildah\n+* Java\n+\n+### Building the application\n+_(All commands from here on will be assumed to be run from the project's root directory)_\n \n ```sh\n ./mvnw clean install\n ```\n \n-### Unit Tests\n+### Unit tests\n \n ```sh\n ./mvnw test\n ```\n \n-### Run the application\n+### Running the application\n \n The best way to run Pantheon is to install [podman](https://podman.io).\n \n-First, create a pod:\n-\n+1. First, create a pod:  \n ```sh\n podman pod create --name pantheon -p 8080 -p 5005\n ```\n-\n This will create a `pantheon` pod with ports 8080 (for web access) and 5005 (for\n remote Java debugging) open.\n \n-Run a mongo database container in the pod.\n-\n+1. Run a mongo database container in the pod.\n ```sh\n podman run --pod pantheon --name slingmongo -d mongo\n ```\n-\n-Build the pantheon docker image\n-\n+1. Build the pantheon docker image", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMjYzOQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426712639", "bodyText": "Changed to: 1.\n\nBuild the Pantheon Docker-formatted container image.", "author": "stoobie", "createdAt": "2020-05-18T15:31:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTgwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTk0NQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420831945", "bodyText": "\"Mongo\" should be capitalized.", "author": "robin-owen", "createdAt": "2020-05-06T14:23:12Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)\n+* You must have registered SSH keys in your GitHub account.  \n+[Adding a new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)\n+* You must be a member of the `pantheon-doc-authors` team in the `redhataccess` group in GitHub.\n+* You must be logged in to your account on GitHub.\n+\n+### Forking the repository\n+\n+Fork the repository so that you can create and work with branches independently of the `redhataccess/pantheon` repository.\n+\n+1. In a web browser, navigate to https://github.com/redhataccess/pantheon\n+1. Click **Fork**.\n+1. Click your user space in GitHub.\n+\n+### Cloning the repository\n+\n+After you have forked the repository, you must clone it to your local machine and add the original `redhataccess/pantheon` repository as an upstream remote.\n+\n+1. From a terminal, clone the repository:  \n+       $ git clone git@github.com:<user-space>/pantheon.git\n+1. Set up `redhataccess/pantheon` as the upstream:  \n+       $ cd pantheon\n+       $ git remote add upstream git@github.com:redhataccess/pantheon.git\n+\n+### Creating a working branch\n+\n+Whenever you work on a new issue, you must create a new working branch based on the latest version of the upstream master branch.\n+\n+1. Ensure you are on master  \n+       $ git checkout master\n+1. Ensure your fork is up to date  \n+       $ git pull upstream master\n+1. Create a working branch based on the issue in JIRA:  \n+       $ git checkout -b FCCEUD<ID#>\n+\n+### Creating a pull request and completing review\n+\n+When your work is ready to be reviewed and merged, create a pull request.\n+\n+1. Push your working branch to your fork:  \n+       $ git push -u origin <branch_name>\n+1. From the repository page in GitHub, click **New pull request**.\n+1. Select your working branch from the compare list.\n+1. Add `WIP` to the title of the pull request.\n+1. Add the **awaiting tech review** label to the pull request.\n+1. In the pull request comment field, enter `@redhataccess/pantheon-developers Please review for technical completeness and accuracy`.\n+1. Click **Create new pull request**.\n+\n+For code pull requests, one or more developers review the pull request. For documentation pull requests, the developers review the pull request for technical accuracy and documentation team members review the pull request for clarity and consistency and compliance with necessary standards.\n+\n+### The review process\n+\n+Both the technical review and peer review processes take place in pull requests in GitHub.\n+\n+After creating and labeling a pull request as outlined above, the developers review the pull request and add comments regarding technical accuracy. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the developers change the label from **awaiting tech review** to **tech review passed**.\n+\n+When technical review is complete, writers click the **Reviewers** gear icon and select the name of a team member to request peer review. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the reviewer clicks **Review changes > Approve** from the **Files changed** tab of the pull request to approve the changes and the pull request.\n+\n+### Merging a pull request\n+\n+When you have addressed all technical review and peer review comments, notify the developers to accept the pull request.\n+\n+1. Remove `WIP` from the title of the pull request.\n+1. Click **Request Review** and enter `@redhataccess/pantheon-developers`.\n+\n+The developers check that the **Tech review passed** label has been added to the pull request and peer pull request approval provided, then accept it.\n+\n+## Installing Pantheon\n+\n+### Prerequisites\n+* Podman\n+* Buildah\n+* Java\n+\n+### Building the application\n+_(All commands from here on will be assumed to be run from the project's root directory)_\n \n ```sh\n ./mvnw clean install\n ```\n \n-### Unit Tests\n+### Unit tests\n \n ```sh\n ./mvnw test\n ```\n \n-### Run the application\n+### Running the application\n \n The best way to run Pantheon is to install [podman](https://podman.io).\n \n-First, create a pod:\n-\n+1. First, create a pod:  \n ```sh\n podman pod create --name pantheon -p 8080 -p 5005\n ```\n-\n This will create a `pantheon` pod with ports 8080 (for web access) and 5005 (for\n remote Java debugging) open.\n \n-Run a mongo database container in the pod.\n-\n+1. Run a mongo database container in the pod.", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMjk2NQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426712965", "bodyText": "Fixed.", "author": "stoobie", "createdAt": "2020-05-18T15:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMTk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMjAzNg==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r420832036", "bodyText": "\"Sling\"", "author": "robin-owen", "createdAt": "2020-05-06T14:23:21Z", "path": "README.md", "diffHunk": "@@ -3,54 +3,134 @@\n [![Build Status](https://travis-ci.org/redhataccess/pantheon.png)](https://travis-ci.org/redhataccess/pantheon)\n [![Code Coverage](https://codecov.io/gh/redhataccess/pantheon/branch/master/graph/badge.svg)](https://codecov.io/github/redhataccess/pantheon?branch=master)\n \n-Pantheon 2 is a modular documentation management and publication system based on asciidoc\n-and built on top of Apache sling.\n+Pantheon 2 is a modular documentation management and publication system based on Asciidoc\n+and built on top of Apache Sling.\n \n-### Prerequsistes\n-Podman\n-Buildah\n-Java\n+* [Contributing to Pantheon](#contributing-to-pantheon)\n+* [Installing Pantheon](#installing-pantheon)\n+ * [Prerequisites](#prerequisites)\n+ * [Building the application](#building-the-application)\n+ * [Unit tests](#unit-tests)\n+ * [Running the application](#running-the-application)\n+ * [Live deploy of code](#live-deploy-of-code)\n+ * [Using the application](#using-the-application)\n+ * [Other use cases](#other-use-cases)\n+ * [Developing the frontend code](#developing-the-frontend-code)\n+* [End user documentation](#end-user-documentation)\n \n-### Build the application\n-_(All commands from here on will be assumed to be ran from the project's root directory)_\n+## Contributing to Pantheon\n+\n+### Prerequisites\n+\n+* You must have an account on GitHub.  \n+  [Signing up for a new GitHub account](https://help.github.com/en/github/getting-started-with-github/signing-up-for-a-new-github-account)\n+* You must have registered SSH keys in your GitHub account.  \n+[Adding a new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)\n+* You must be a member of the `pantheon-doc-authors` team in the `redhataccess` group in GitHub.\n+* You must be logged in to your account on GitHub.\n+\n+### Forking the repository\n+\n+Fork the repository so that you can create and work with branches independently of the `redhataccess/pantheon` repository.\n+\n+1. In a web browser, navigate to https://github.com/redhataccess/pantheon\n+1. Click **Fork**.\n+1. Click your user space in GitHub.\n+\n+### Cloning the repository\n+\n+After you have forked the repository, you must clone it to your local machine and add the original `redhataccess/pantheon` repository as an upstream remote.\n+\n+1. From a terminal, clone the repository:  \n+       $ git clone git@github.com:<user-space>/pantheon.git\n+1. Set up `redhataccess/pantheon` as the upstream:  \n+       $ cd pantheon\n+       $ git remote add upstream git@github.com:redhataccess/pantheon.git\n+\n+### Creating a working branch\n+\n+Whenever you work on a new issue, you must create a new working branch based on the latest version of the upstream master branch.\n+\n+1. Ensure you are on master  \n+       $ git checkout master\n+1. Ensure your fork is up to date  \n+       $ git pull upstream master\n+1. Create a working branch based on the issue in JIRA:  \n+       $ git checkout -b FCCEUD<ID#>\n+\n+### Creating a pull request and completing review\n+\n+When your work is ready to be reviewed and merged, create a pull request.\n+\n+1. Push your working branch to your fork:  \n+       $ git push -u origin <branch_name>\n+1. From the repository page in GitHub, click **New pull request**.\n+1. Select your working branch from the compare list.\n+1. Add `WIP` to the title of the pull request.\n+1. Add the **awaiting tech review** label to the pull request.\n+1. In the pull request comment field, enter `@redhataccess/pantheon-developers Please review for technical completeness and accuracy`.\n+1. Click **Create new pull request**.\n+\n+For code pull requests, one or more developers review the pull request. For documentation pull requests, the developers review the pull request for technical accuracy and documentation team members review the pull request for clarity and consistency and compliance with necessary standards.\n+\n+### The review process\n+\n+Both the technical review and peer review processes take place in pull requests in GitHub.\n+\n+After creating and labeling a pull request as outlined above, the developers review the pull request and add comments regarding technical accuracy. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the developers change the label from **awaiting tech review** to **tech review passed**.\n+\n+When technical review is complete, writers click the **Reviewers** gear icon and select the name of a team member to request peer review. Writers receive a notification that comments have been added via email, and when all comments have been addressed, the reviewer clicks **Review changes > Approve** from the **Files changed** tab of the pull request to approve the changes and the pull request.\n+\n+### Merging a pull request\n+\n+When you have addressed all technical review and peer review comments, notify the developers to accept the pull request.\n+\n+1. Remove `WIP` from the title of the pull request.\n+1. Click **Request Review** and enter `@redhataccess/pantheon-developers`.\n+\n+The developers check that the **Tech review passed** label has been added to the pull request and peer pull request approval provided, then accept it.\n+\n+## Installing Pantheon\n+\n+### Prerequisites\n+* Podman\n+* Buildah\n+* Java\n+\n+### Building the application\n+_(All commands from here on will be assumed to be run from the project's root directory)_\n \n ```sh\n ./mvnw clean install\n ```\n \n-### Unit Tests\n+### Unit tests\n \n ```sh\n ./mvnw test\n ```\n \n-### Run the application\n+### Running the application\n \n The best way to run Pantheon is to install [podman](https://podman.io).\n \n-First, create a pod:\n-\n+1. First, create a pod:  \n ```sh\n podman pod create --name pantheon -p 8080 -p 5005\n ```\n-\n This will create a `pantheon` pod with ports 8080 (for web access) and 5005 (for\n remote Java debugging) open.\n \n-Run a mongo database container in the pod.\n-\n+1. Run a mongo database container in the pod.\n ```sh\n podman run --pod pantheon --name slingmongo -d mongo\n ```\n-\n-Build the pantheon docker image\n-\n+1. Build the pantheon docker image\n ```sh\n buildah bud --layers -f container/Dockerfile -t pantheon-app .\n ```\n \n-Run the sling container pod in the pod.\n-\n+1. Run the sling container pod in the pod.", "originalCommit": "033b256a7538dd4ba492d769e8bdaf4ba1c40be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMzQ2OQ==", "url": "https://github.com/redhataccess/pantheon/pull/279#discussion_r426713469", "bodyText": "Fixed. Fixed other occurrences too.", "author": "stoobie", "createdAt": "2020-05-18T15:32:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMjAzNg=="}], "type": "inlineReview"}, {"oid": "5a228ca21a2e7a5a83fba3500045f3231ba30b31", "url": "https://github.com/redhataccess/pantheon/commit/5a228ca21a2e7a5a83fba3500045f3231ba30b31", "message": "FCCEUD-11 Implemented peer review comments.", "committedDate": "2020-05-18T15:33:03Z", "type": "commit"}]}