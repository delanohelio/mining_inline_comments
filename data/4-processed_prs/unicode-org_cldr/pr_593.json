{"pr_number": 593, "pr_title": "CLDR-13771 Ansible playbook and docs for setup of Survey Tool.", "pr_createdAt": "2020-07-29T06:54:38Z", "pr_url": "https://github.com/unicode-org/cldr/pull/593", "timeline": [{"oid": "f711b8078ba6ea6364920755120bc671fd3d7246", "url": "https://github.com/unicode-org/cldr/commit/f711b8078ba6ea6364920755120bc671fd3d7246", "message": "CLDR-13771 Ansible playbook and docs for setup of Survey Tool.\n\n- For now, this targets cldr-ref which is a test machine.\n- add a lint step which tests the build with vagrant", "committedDate": "2020-07-29T20:50:39Z", "type": "forcePushed"}, {"oid": "80161de442966dd54e3b0208ed1522b00a9fe9e4", "url": "https://github.com/unicode-org/cldr/commit/80161de442966dd54e3b0208ed1522b00a9fe9e4", "message": "CLDR-13771 Ansible playbook and docs for setup of Survey Tool.\n\n- For now, this targets cldr-ref which is a test machine.\n- add a lint step which tests the build with vagrant", "committedDate": "2020-07-29T21:06:08Z", "type": "forcePushed"}, {"oid": "f442cb5822a8a1bf7e3cb883d185e7d5cf2acfac", "url": "https://github.com/unicode-org/cldr/commit/f442cb5822a8a1bf7e3cb883d185e7d5cf2acfac", "message": "CLDR-13771 Ansible playbook and docs for setup of Survey Tool.\n\n- For now, this targets cldr-ref which is a test machine.\n- add a lint step which tests the build with vagrant", "committedDate": "2020-07-29T23:44:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyMDM5OQ==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463120399", "bodyText": "Does the build job depend on the lint job succeeding, or are they independent?  Asking b/c I don't know Ansible, so I can't say if linting is more like validation / error-prone checking or if it is more like formatting style.\nIf it linting is more than just strongly recommended (ex: in the ICU4X case, we treat warnings like errors), then you could make the build job depend on the lint job.\nBut if the the build job or lint job take a long time, and/or one job's input does not necessarily depend on the success of output of the other job, then it makes sense to keep them un-linked as deps.", "author": "echeran", "createdAt": "2020-07-30T16:26:38Z", "path": ".github/workflows/ansible-lint.yml", "diffHunk": "@@ -0,0 +1,30 @@\n+name: Ansible Lint\n+\n+on: [push, pull_request]\n+\n+jobs:\n+  lint:\n+    runs-on: ubuntu-latest\n+    steps:\n+    - uses: actions/checkout@v2\n+      with:\n+        lfs: false # not needed currently\n+    - name: Lint Ansible Playbook\n+      uses: ansible/ansible-lint-action@master\n+      with:\n+        targets: |\n+          tools/scripts/ansible/setup-playbook.yml\n+        override-deps: |\n+          ansible==2.9\n+          ansible-lint==4.2.0\n+        args: \"\"\n+  build:", "originalCommit": "f442cb5822a8a1bf7e3cb883d185e7d5cf2acfac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwOTc1Mg==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463209752", "bodyText": "Does the build job depend on the lint job succeeding, or are they independent? Asking b/c I don't know Ansible, so I can't say if linting is more like validation / error-prone checking or if it is more like formatting style.\n\nThey are independent.   Amusingly, only the mac Github VMs have VT-x enabled to sublaunch an Ubuntu VM with vagrant. (Go figure, that's what Github support said somewhere.)  But the ansible-lint action is only Linux.\nThe linting is validation/error prone and deprecation checking. It \u201cmade\u201d me rewrite a 'notifier' to become a 'handler'.  The build step could pass if lint fails, but at this point I'd like to keep the linter happy since i'm newer to ansible. (I have been using it personally for a couple of years, but not as part of CD.)\n\nIf it linting is more than just strongly recommended (ex: in the ICU4X case, we treat warnings like errors), then you could make the build job depend on the lint job.\n\nDoes that mean running them in series?\n\nBut if the the build job or lint job take a long time, and/or one job's input does not necessarily depend on the success of output of the other job, then it makes sense to keep them un-linked as deps.\n\nThe build job takes a while because it spins up a VM.  Actually, one way I will want to refactor this, and I'm not sure entirely how, is to make the 'build' step deploy the cldr-apps.war artifact from the 'ant' workflow. It seems you cannot share artifacts across workflows, so this 'build' job may want to move to be a later step in the 'ant' workflow (which you reviewed the other day).  However, it would be good to make the 'ant' workflow more speedy before that, perhaps by making all of the long running tests a parallel step in 'ant'.\nI'll do this. I'll draw out a simple flowchart of where I think the build steps and artifacts need to go. One of the tensions here is premature optimization vs. caching.  I wince at all of those GB of data, downloaded anew each time, but I think the reason is because the buildbots are of course stateless independent throwaway units.  So this is kind of the 'new normal' for distributed cloud based building.", "author": "srl295", "createdAt": "2020-07-30T19:04:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyMDM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMjE0NA==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463212144", "bodyText": "@echeran I'm inclined to try to merge this as is if there aren't issues, because it does bring an improvement, and then to iterate.", "author": "srl295", "createdAt": "2020-07-30T19:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyMDM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjI4Ng==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463222286", "bodyText": "Sounds good to me.", "author": "echeran", "createdAt": "2020-07-30T19:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyMDM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwNzQ0NQ==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463207445", "bodyText": "Would the comment still make sense if it were reworded as \"not needed for this job\"?  If so, that might be clearer, and then ditto for line 26.", "author": "echeran", "createdAt": "2020-07-30T19:00:25Z", "path": ".github/workflows/ansible-lint.yml", "diffHunk": "@@ -0,0 +1,30 @@\n+name: Ansible Lint\n+\n+on: [push, pull_request]\n+\n+jobs:\n+  lint:\n+    runs-on: ubuntu-latest\n+    steps:\n+    - uses: actions/checkout@v2\n+      with:\n+        lfs: false # not needed currently", "originalCommit": "f442cb5822a8a1bf7e3cb883d185e7d5cf2acfac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMTQ4MA==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463211480", "bodyText": "Done.  lfs: false is the default, but I wanted to make it explicit that this wasn't an oversight here.", "author": "srl295", "createdAt": "2020-07-30T19:08:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwNzQ0NQ=="}], "type": "inlineReview"}, {"oid": "7db077e7f059c012e9f6217cb8c21c04f06b308e", "url": "https://github.com/unicode-org/cldr/commit/7db077e7f059c012e9f6217cb8c21c04f06b308e", "message": "CLDR-13771 Ansible playbook and docs for setup of Survey Tool.\n\n- For now, this targets cldr-ref which is a test machine.\n- add a lint step which tests the build with vagrant", "committedDate": "2020-07-30T19:06:48Z", "type": "commit"}, {"oid": "7db077e7f059c012e9f6217cb8c21c04f06b308e", "url": "https://github.com/unicode-org/cldr/commit/7db077e7f059c012e9f6217cb8c21c04f06b308e", "message": "CLDR-13771 Ansible playbook and docs for setup of Survey Tool.\n\n- For now, this targets cldr-ref which is a test machine.\n- add a lint step which tests the build with vagrant", "committedDate": "2020-07-30T19:06:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MTQ5Nw==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463271497", "bodyText": "Nitpick: do we really want *-latest?\nSure, I can see pros and cons...\nBut on the other side the ansible version is fixed (in override-deps)\nSo do we want to be on the latest and greatest everywhere, or nowhere?\nI would make everything latest, or everything stable, but not a mixture.\nNote: in my comments I tag with \"Nitpick\" stuff that I don't feel strongly about.\nNothing is wrong, it is just a personal opinion.\nImplement if you like it, ignore if you don't (there is no need to explain why not :-)\nDisclaimer: I know nothing about Ansible", "author": "mihnita", "createdAt": "2020-07-30T21:06:46Z", "path": ".github/workflows/ansible-lint.yml", "diffHunk": "@@ -0,0 +1,30 @@\n+name: Ansible Lint\n+\n+on: [push, pull_request]\n+\n+jobs:\n+  lint:\n+    runs-on: ubuntu-latest", "originalCommit": "7db077e7f059c012e9f6217cb8c21c04f06b308e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3Mjc3Mg==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463272772", "bodyText": "One more thing: if all my comments are nitpicks, then I usually approve. You can implement or not, your call :-)", "author": "mihnita", "createdAt": "2020-07-30T21:09:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MTQ5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NzQxMA==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463287410", "bodyText": "I think latest is probably fine, but i'm not sure.  The actual ansible version is fixed.", "author": "srl295", "createdAt": "2020-07-30T21:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MTQ5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMwOTE1MA==", "url": "https://github.com/unicode-org/cldr/pull/593#discussion_r463309150", "bodyText": "Yeah, I think latest is fine, given it's GH Actions.  For applications, there's the balance between updating versions too frequently (instability and deps hell) and too infrequently (security holes, new features inaccessible).  I think the reason why the model GH Actions is quite different is because each job (\"task\") is run on a fresh VM, and only for a short amount of time.  The actions are written independent of the OS's bundled libs/deps, and thus actions are independent of each other.  So I think that's why the selection of OS versions are so few.  Slightly unrelated, but interestingly, for paid situations, there's a 1:2:10 ratio of cost among the different OSes.", "author": "echeran", "createdAt": "2020-07-30T22:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MTQ5Nw=="}], "type": "inlineReview"}]}