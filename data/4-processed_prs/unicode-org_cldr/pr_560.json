{"pr_number": 560, "pr_title": "CLDR-13947 Revamp checking for placeholders, add tests", "pr_createdAt": "2020-07-12T15:06:27Z", "pr_url": "https://github.com/unicode-org/cldr/pull/560", "timeline": [{"oid": "fb5f8aee08a65a8e0a8c30345aa3d32fedf8c099", "url": "https://github.com/unicode-org/cldr/commit/fb5f8aee08a65a8e0a8c30345aa3d32fedf8c099", "message": "CLDR-13947 Revamp checking for placeholders, add tests", "committedDate": "2020-07-12T15:05:36Z", "type": "commit"}, {"oid": "5a3bf19e78038916461d2ed493111fea5633fa23", "url": "https://github.com/unicode-org/cldr/commit/5a3bf19e78038916461d2ed493111fea5633fa23", "message": "CLDR-13947 Cleaned up tests", "committedDate": "2020-07-13T04:19:27Z", "type": "commit"}, {"oid": "bc9cf4dc50fa172243045f8b8fc249ed163e2b75", "url": "https://github.com/unicode-org/cldr/commit/bc9cf4dc50fa172243045f8b8fc249ed163e2b75", "message": "CLDR-13947 fix test to allow multiple errors", "committedDate": "2020-07-13T05:13:58Z", "type": "commit"}, {"oid": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "url": "https://github.com/unicode-org/cldr/commit/95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "message": "CLDR-13947 work around problem in ICU plural rules", "committedDate": "2020-07-13T13:56:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3MDYxMw==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453670613", "bodyText": "Fix missing placeholder in de", "author": "macchiati", "createdAt": "2020-07-13T13:59:32Z", "path": "common/main/de.xml", "diffHunk": "@@ -8493,7 +8493,7 @@ Warnings: All cp values have U+FE0F characters removed. See /annotationsDerived/\n \t\t\t</unit>\n \t\t\t<unit type=\"force-pound-force\">\n \t\t\t\t<displayName>\u2191\u2191\u2191</displayName>\n-\t\t\t\t<unitPattern count=\"one\">Pound-force</unitPattern>\n+\t\t\t\t<unitPattern count=\"one\" draft=\"provisional\">{0} Pound-force</unitPattern>", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNDE5OQ==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453704199", "bodyText": "Add specific test cases to check each option.", "author": "macchiati", "createdAt": "2020-07-13T14:47:06Z", "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestCheckCLDR.java", "diffHunk": "@@ -181,11 +180,77 @@ public void TestTestCache() {\n \n     private static final boolean DEBUG = true;\n \n+    public void testPlaceholderSamples() {", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNDYzMw==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453704633", "bodyText": "Revamp the old testing code, since it is not find-grained enough to be accurate.", "author": "macchiati", "createdAt": "2020-07-13T14:47:43Z", "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestCheckCLDR.java", "diffHunk": "@@ -215,79 +280,43 @@ public void checkPlaceholders(CLDRFile cldrFileToTest) {\n             String path = pathHeader.getOriginalPath();\n             String value = cldrFileToTest.getStringValue(path);\n             if (value == null) {\n-                value = \"?\";\n+                continue;\n             }\n             boolean containsMessagePattern = messagePlaceholder.reset(value)\n                 .find();\n             final Map<String, PlaceholderInfo> placeholderInfo = patternPlaceholders\n                 .get(path);\n             final PlaceholderStatus placeholderStatus = patternPlaceholders\n                 .getStatus(path);\n-            if (containsMessagePattern && placeholderStatus == PlaceholderStatus.DISALLOWED", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNDk4Nw==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453704987", "bodyText": "Add utility for creating test factory.", "author": "macchiati", "createdAt": "2020-07-13T14:48:13Z", "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestCheckCLDR.java", "diffHunk": "@@ -504,6 +529,15 @@ public void TestCheckNewRootFailure() {\n         }\n     }\n \n+    public TestFactory makeTestFactory(CLDRFile root, XMLSource localeSource) {", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNTUzMg==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453705532", "bodyText": "Revamp test code to be more precise.", "author": "macchiati", "createdAt": "2020-07-13T14:48:57Z", "path": "tools/java/org/unicode/cldr/test/CheckForExemplars.java", "diffHunk": "@@ -463,88 +469,88 @@ public CheckCLDR handleCheck(String path, String fullPath, String value,\n     }\n \n     private String checkAndReplacePlaceholders(String path, String value, List<CheckStatus> result) {", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNjE4Mw==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453706183", "bodyText": "Broaden the search so that we don't miss cases like {10}.", "author": "macchiati", "createdAt": "2020-07-13T14:49:49Z", "path": "tools/java/org/unicode/cldr/test/ExampleGenerator.java", "diffHunk": "@@ -2008,8 +2008,8 @@ private String removeEmptyRuns(String input) {\n             .replace(backgroundEndSymbol + backgroundStartSymbol, \"\");\n     }\n \n-    public static final Pattern PARAMETER = PatternCache.get(\"(\\\\{[0-9]\\\\})\");\n-    public static final Pattern PARAMETER_SKIP0 = PatternCache.get(\"(\\\\{[1-9]\\\\})\");\n+    public static final Pattern PARAMETER = PatternCache.get(\"(\\\\{(?:0|[1-9][0-9]*)\\\\})\");", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNjYyMQ==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453706621", "bodyText": "Drop Optional, which was not used. Fix explanations.", "author": "macchiati", "createdAt": "2020-07-13T14:50:22Z", "path": "tools/java/org/unicode/cldr/util/PatternPlaceholders.java", "diffHunk": "@@ -5,27 +5,40 @@\n import java.util.Map;\n import java.util.Map.Entry;\n \n+import org.unicode.cldr.test.CheckCLDR.CheckStatus.Subtype;\n import org.unicode.cldr.tool.GenerateXMB;\n import org.unicode.cldr.util.RegexLookup.Merger;\n \n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.ImmutableSet;\n import com.ibm.icu.text.Transform;\n \n public class PatternPlaceholders {\n \n     public enum PlaceholderStatus {\n-        DISALLOWED(\"No placeholders allowed.\"), //\n-        OPTIONAL(\"Zero or one placeholder allowed.\"), //\n-        MULTIPLE(\"Zero or more placeholders allowed.\"), //\n-        LOCALE_DEPENDENT( \"Varies by locale.\"),\n-        REQUIRED(\"Placeholder required\");\n+        DISALLOWED(\"No placeholders allowed.\"),//", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNjkyNA==", "url": "https://github.com/unicode-org/cldr/pull/560#discussion_r453706924", "bodyText": "drop optional, since it is not used.", "author": "macchiati", "createdAt": "2020-07-13T14:50:44Z", "path": "tools/java/org/unicode/cldr/util/data/Placeholders.txt", "diffHunk": "@@ -1,10 +1,9 @@\n #Remember to quote any [ character!\n # The default is DISALLOWED for anything not in this file.\n-# The default for everything in this file is REQUIRED.\n-# That default is overridden if the line has as the X parameter: locale, optional, or multiple.\n-#\toptional: there may or may not be a placeholder.\n-#\tlocale: there is a count= or ordinal=, so the value is subject to the locale.\n-#\tmultiple: there may be one or more placeholders (normally only in minimalPairs)\n+# The default for everything in this file is REQUIRED, meaning that the number of placeholders has to match the number in the final field.", "originalCommit": "95f68b9f433fde222121b6dcc0eab5a571fd8a5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}