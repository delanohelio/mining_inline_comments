{"pr_number": 449, "pr_title": "CLDR-13610 Survey Tool Forum Filter", "pr_createdAt": "2020-05-01T19:21:16Z", "pr_url": "https://github.com/unicode-org/cldr/pull/449", "timeline": [{"oid": "43b1938da1ecf13039d477165bff37357a97494f", "url": "https://github.com/unicode-org/cldr/commit/43b1938da1ecf13039d477165bff37357a97494f", "message": "CLDR-13610 Survey Tool Forum Filter\n\n-Revise post threading so that the same locale+path can have multiple distinct threads\n\n-Rename openReply to openPostOrReply, since not always reply, e.g., forumNewPostButton\n\n-In openPostOrReply, default subject is empty, not Re:\n\n-Status menu for making a post is required, and has choices depending on stage and user\n\n-Status filter is applied only in main forum context, not Info Panel or Dashboard\n\n-In main forum context only, show the number of passing threads below the filter menu\n\n-Display the status of each post\n\n-Enable forum display in Dashboard Fix (pencil icon) window, including New Forum Post button\n\n-Delete openPost function, which was limited to Dashboard Forum (bubble icon) button\n\n-New function cldrStForum.parseContentInMainContext\n\n-Increase encapsulation of CldrStForum.js: move some code, check if stui, etc., are defined\n\n-Remove Dashboard Forum (bubble icon) button\n\n-Add more JavaScript unit tests\n\n-One change in CldrSurveyVettingTable.js is for related CLDR-13727 Link in Forum Post\n\n-Some changes, described below, are for related CLDR-13695 Forum Metadata\n\n-New db table FORUM_STATUS (cldr_forum_status)\n\n-New enum SurveyForum.ForumStatus\n\n-Communicate forumStatus between server and client\n\n-New functions SurveyForum.addStatusToTable, SurveyForum.prepare_pAddStatus\n\n-New function SurveyForum.postFlagRemoved; make doPostInternal private\n\n-Move some code for WHAT_FORUM_POST to new function SurveyAjax.postToForum\n\n-Change public to private where possible\n\n-Remove dead or obsolete code, including RSS feed\n\n-Comments", "committedDate": "2020-05-01T18:40:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxMDEzNw==", "url": "https://github.com/unicode-org/cldr/pull/449#discussion_r420510137", "bodyText": "This sounds like a reply happened from a different locale. Sounds like a bug.", "author": "srl295", "createdAt": "2020-05-06T02:14:13Z", "path": "tools/cldr-apps/WebContent/js/CldrStForum.js", "diffHunk": "@@ -464,35 +491,152 @@ const cldrStForum = (function() {\n \t\t\t\ttopicDivs[post.threadId].appendChild(postDivs[post.id]);\n \t\t\t}\n \t\t}\n-\t\treturn filterAndAssembleForumThreads(json.ret, topicDivs);\n+\t\treturn filterAndAssembleForumThreads(posts, topicDivs, opts.applyFilter, opts.showThreadCount);\n \t}\n \n \t/**\n-\t * Get the \"thread id\" for the given post.\n+\t * Get an object whose properties define the parseContent options to be used for a particular\n+\t * context in which parseContent is called\n+\t *\n+\t * @param context the string defining the context:\n+\t *\n+\t *   'main' for the context in which \"Forum\" is chosen from the left sidebar\n+\t *\n+\t *   'info' for the \"Info Panel\" context (either main vetting view row, or Dashboard \"Fix\" button)\n+\t *\n+\t *   'new' for creation of a new post or reply\n+\t *\n+\t * @return an object with these properties:\n \t *\n-\t * For posts with parents, the thread id is the same as the thread id of the parent.\n+\t *   showItemLink = true if there should be an \"item\" (xpath) link\n \t *\n-\t * For posts without parents, the thread id depends on whether the post is an \"item post\"\n-\t * or a \"non-item\" post -- that is, whether or not it is associated with an xpath.\n+\t *   showReplyButton = true if there should be a reply button\n \t *\n-\t * An \"item post\" has a thread id like \"aa|7f8ed9085d13fcc6\", where aa is the locale and 7f8ed9085d13fcc6 is the xpath.\n+\t *   fullSet = true if this is a full set of posts\n \t *\n-\t * A \"non-item post\" has a thread id like \"aa|#1234\", where aa is the locale and 1234 is the post id.\n+\t *   applyFilter = true if the currently menu-selected filter should be applied\n+\t *\n+\t *   showThreadCount = true to display the number of threads\n+\t */\n+\tfunction getOptionsForContext(context) {\n+\t\tlet opts = getDefaultParseOptions();\n+\t\tif (context === 'main') {\n+\t\t\topts.showItemLink = true;\n+\t\t\topts.showReplyButton = true;\n+\t\t\topts.applyFilter = true;\n+\t\t\topts.showThreadCount = true;\n+\t\t} else if (context === 'info') {\n+\t\t\topts.showReplyButton = true;\n+\t\t} else if (context === 'new') {\n+\t\t\t/*\n+\t\t\t * posts may have zero, one, or more elements here, for parent(s),\n+\t\t\t * if any, of a new post in the process of being created\n+\t\t\t */\n+\t\t\topts.fullSet = false;\n+\t\t} else {\n+\t\t\tconsole.log('Unrecognized context in getOptionsForContext: ' + context)\n+\t\t}\n+\t\treturn opts;\n+\t}\n+\n+\t/**\n+\t * Get the default parseContent options\n+\t *\n+\t * @return a new object with the default properties\n+\t */\n+\tfunction getDefaultParseOptions() {\n+\t\tlet opts = {};\n+\t\topts.showItemLink = false;\n+\t\topts.showReplyButton = false;\n+\t\topts.fullSet = true;\n+\t\topts.applyFilter = false;\n+\t\topts.showThreadCount = false;\n+\t\treturn opts;\n+\t}\n+\n+\t/**\n+\t * Update the postHash mapping from post id to post object\n+\t *\n+\t * @param posts the array of posts\n+\t */\n+\tfunction updatePostHash(posts) {\n+\t\tfor (let num in posts) {\n+\t\t\tpostHash[posts[num].id] = posts[num];\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Convert the given text by replacing some html with plain text\n+\t *\n+\t * @param the plain text\n+\t */\n+\tfunction post2text(text) {\n+\t\tif (text === undefined || text === null) {\n+\t\t\ttext = \"(empty)\";\n+\t\t}\n+\t\tvar out = text;\n+\t\tout = out.replace(/<p>/g, '\\n');\n+\t\tout = out.replace(/&quot;/g, '\"');\n+\t\tout = out.replace(/&lt;/g, '<');\n+\t\tout = out.replace(/&gt;/g, '>');\n+\t\tout = out.replace(/&amp;/g, '&');\n+\t\treturn out;\n+\t}\n+\n+\t/**\n+\t * Create a DOM object with the specified text, tag, and HTML class.\n+\t *\n+\t * @param text textual content of the new object, or null for none\n+\t * @param tag which element type to create, or null for \"span\"\n+\t * @param className CSS className, or null for none.\n+\t * @return new DOM object\n+\t *\n+\t * This duplicated a function in survey.js; copied here to avoid the dependency, at least while testing/refactoring\n+\t */\n+\tfunction forumCreateChunk(text, tag, className) {\n+\t\tif (!tag) {\n+\t\t\ttag = \"span\";\n+\t\t}\n+\t\tvar chunk = document.createElement(tag);\n+\t\tif (className) {\n+\t\t\tchunk.className = className;\n+\t\t}\n+\t\tif (text) {\n+\t\t\tchunk.appendChild(document.createTextNode(text));\n+\t\t}\n+\t\treturn chunk;\n+\t}\n+\n+\t/**\n+\t * Get the \"thread id\" for the given post.\n+\t *\n+\t * For a post with a parent, the thread id is the same as the thread id of the parent.\n+\t *\n+\t * For post without a parent, the thread id is like \"aa|1234\", where aa is the locale and 1234 is the post id.\n+\t *\n+\t * Caution: strangely, a post may have a different locale than the first post in its thread.\n+\t * For example, even though post 32034 is fr_CA, its child 32036 is fr.\n+\t * The thread id must use the locale of of the first post, for consistency.", "originalCommit": "43b1938da1ecf13039d477165bff37357a97494f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxNjczNg==", "url": "https://github.com/unicode-org/cldr/pull/449#discussion_r421016736", "bodyText": "Yes, Mark asked me to make it impossible, so I'll fix the table on the production server and try to make sure it can't happen anymore with new posts.", "author": "btangmu", "createdAt": "2020-05-06T18:51:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxMDEzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2NDQ2NA==", "url": "https://github.com/unicode-org/cldr/pull/449#discussion_r420864464", "bodyText": "why const to var?", "author": "srl295", "createdAt": "2020-05-06T15:03:59Z", "path": "tools/cldr-apps/js-unittest/TestCldrStForumFilter.js", "diffHunk": "@@ -1,11 +1,11 @@\n 'use strict';\n \n-const assert = chai.assert;\n+var assert = chai.assert;", "originalCommit": "43b1938da1ecf13039d477165bff37357a97494f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2OTc1NQ==", "url": "https://github.com/unicode-org/cldr/pull/449#discussion_r420969755", "bodyText": "It's in the global namespace, and it's declared in two files (so far): TestCldrStForum.js and TestCldrStForumFilter.js. If they both used const, we'd get an error. That's why I changed it when adding the second test file. Now I think about it more, one alternative would be to add brackets around everything and add a level of indentation. Then const would be OK and we'd avoid polluting the global namespace. Maybe I'll do that the next time I revise those files.", "author": "btangmu", "createdAt": "2020-05-06T17:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2NDQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwNDU2Nw==", "url": "https://github.com/unicode-org/cldr/pull/449#discussion_r421004567", "bodyText": "That makes sense about global scope.", "author": "srl295", "createdAt": "2020-05-06T18:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg2NDQ2NA=="}], "type": "inlineReview"}]}