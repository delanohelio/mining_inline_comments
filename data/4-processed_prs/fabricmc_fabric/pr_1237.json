{"pr_number": 1237, "pr_title": "Fix example implementation of using FAPI modules for Groovy", "pr_createdAt": "2020-12-22T09:17:26Z", "pr_url": "https://github.com/FabricMC/fabric/pull/1237", "timeline": [{"oid": "5d7a6a7e9f3441ef81067017c5552eb48bb21ea4", "url": "https://github.com/FabricMC/fabric/commit/5d7a6a7e9f3441ef81067017c5552eb48bb21ea4", "message": "Fix example implementation of using FAPI modules for Groovy\n\nThe previous implementation does not quite correctly describe what it does", "committedDate": "2020-12-22T09:16:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw==", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547394257", "bodyText": "I believe we should mention the fact this includes the module inside the built jar also with that change.\nOtherwise yes this is fine", "author": "i509VCB", "createdAt": "2020-12-22T17:06:52Z", "path": "README.md", "diffHunk": "@@ -54,7 +54,7 @@ Set<String> apiModules = [\n \n // Add each module as a dependency\n apiModules.forEach {\n-    modImplementation(fabricApi.module(it, FABRIC_API_VERSION))\n+    include(modImplementation(fabricApi.module(it, FABRIC_API_VERSION)))", "originalCommit": "5d7a6a7e9f3441ef81067017c5552eb48bb21ea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1Njc1Nw==", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547456757", "bodyText": "I initially thought that it should be so. But the original code didn't work for me at all, so I added \"include\" and it worked. Perhaps it was my mistake. Ok, I will describe your request a little later ;)", "author": "maityyy", "createdAt": "2020-12-22T19:13:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1Nzg2Mg==", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547457862", "bodyText": "Will my change work for Kotlin (add \"include\")? I haven't worked with Kotlin, so I don't know. It's just that these two codes should produce the same result.", "author": "maityyy", "createdAt": "2020-12-22T19:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1OTYyNg==", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547459626", "bodyText": "Not exactly. Kotlin's type checking would not exactly like that.\nIn kotlin modImplementation(\"blah\") and any other gradle configuration returns a Dependecy? which is nullable. This won't work if you chain the include like you do in groovy. You'd either need to make a custom configuration and add that configuration to both modImplementation and include or use the ?.let { include(it) } syntax after the last bracket on modImplementation(...)", "author": "i509VCB", "createdAt": "2020-12-22T19:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ2NTY5OQ==", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547465699", "bodyText": "Oh, I'll fix mistake I made in the new commit now.", "author": "maityyy", "createdAt": "2020-12-22T19:26:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}], "type": "inlineReview"}, {"oid": "3ad9f5007e36c9cfc4745bc765684d0622006d9d", "url": "https://github.com/FabricMC/fabric/commit/3ad9f5007e36c9cfc4745bc765684d0622006d9d", "message": "Improve description of adding dependencies", "committedDate": "2020-12-22T19:23:22Z", "type": "commit"}, {"oid": "41014f489afad836325d2b09146a952dd3addf48", "url": "https://github.com/FabricMC/fabric/commit/41014f489afad836325d2b09146a952dd3addf48", "message": "Undo the last commit changes for Kotlin DSL", "committedDate": "2020-12-22T19:29:21Z", "type": "commit"}]}