{"pr_number": 1076, "pr_title": "Add helper methods to create custom villager types.", "pr_createdAt": "2020-09-11T17:13:42Z", "pr_url": "https://github.com/FabricMC/fabric/pull/1076", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNTM2NQ==", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491415365", "bodyText": "IMO plain create implies creating an instance of the surrounding type (VillagerTypeHelper instance)\nElsewhere we used register, but idk if this case has any side effects / does something similar to registration.", "author": "sfPlayer1", "createdAt": "2020-09-19T12:30:26Z", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * // Note: You should register your villager types via the corresponding registry\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.create(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:\n+ * <blockquote><pre>\n+ * VillagerTypeHelper.mapBiomeToVillagerType(BiomeKeys.MOUNTAIN, MyVillagerTypes.MOUNTAIN);\n+ * </pre></blockquote>\n+ */\n+public final class VillagerTypeHelper {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t/**\n+\t * Creates a new villager type.\n+\t *\n+\t * @param id the id of the villager type\n+\t * @return a new villager type\n+\t */\n+\tpublic static VillagerType create(Identifier id) {", "originalCommit": "153a5363431cebfef9029f73630d8fa3a64b392a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTUxMDI2Mg==", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491510262", "bodyText": "I decided to rename this to register and also make it register the villager type.", "author": "i509VCB", "createdAt": "2020-09-19T20:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNTM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNTY5Mw==", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491415693", "bodyText": "The examples should use the standard combination of @code and <pre>", "author": "sfPlayer1", "createdAt": "2020-09-19T12:31:18Z", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * // Note: You should register your villager types via the corresponding registry\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.create(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>", "originalCommit": "153a5363431cebfef9029f73630d8fa3a64b392a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNjg4MA==", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491416880", "bodyText": "map is a weak term, it doesn't really explain what happens - could as well mean \"give me the villager type for the biome\" (ignoring the signature).\nThe impl suggests that it adds the villager type to a biome (\"add\" vs \"map\", \"to biome\" vs \"to villager\"). I'd thus call it addVillagerTypeToBiome.", "author": "sfPlayer1", "createdAt": "2020-09-19T12:34:52Z", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * // Note: You should register your villager types via the corresponding registry\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.create(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:\n+ * <blockquote><pre>\n+ * VillagerTypeHelper.mapBiomeToVillagerType(BiomeKeys.MOUNTAIN, MyVillagerTypes.MOUNTAIN);\n+ * </pre></blockquote>\n+ */\n+public final class VillagerTypeHelper {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t/**\n+\t * Creates a new villager type.\n+\t *\n+\t * @param id the id of the villager type\n+\t * @return a new villager type\n+\t */\n+\tpublic static VillagerType create(Identifier id) {\n+\t\tObjects.requireNonNull(id, \"Id of villager type cannot be null\");\n+\t\treturn VillagerTypeAccessor.callCreate(id.toString());\n+\t}\n+\n+\t/**\n+\t * Maps a biome to villager type.\n+\t * This mapping is used when a new villager entity is created.\n+\t *\n+\t * @param biomeKey the registry key of the biome\n+\t * @param villagerType the villager type\n+\t */\n+\tpublic static void mapBiomeToVillagerType(RegistryKey<Biome> biomeKey, VillagerType villagerType) {", "originalCommit": "153a5363431cebfef9029f73630d8fa3a64b392a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4fa8d94913638aa13806fd446bba6d112cb183a8", "url": "https://github.com/FabricMC/fabric/commit/4fa8d94913638aa13806fd446bba6d112cb183a8", "message": "Add helper methods to create custom villager types.", "committedDate": "2020-09-19T20:10:33Z", "type": "commit"}, {"oid": "4fa8d94913638aa13806fd446bba6d112cb183a8", "url": "https://github.com/FabricMC/fabric/commit/4fa8d94913638aa13806fd446bba6d112cb183a8", "message": "Add helper methods to create custom villager types.", "committedDate": "2020-09-19T20:10:33Z", "type": "forcePushed"}, {"oid": "51456111a7b19a405564452c9f2c00cdaaf6b688", "url": "https://github.com/FabricMC/fabric/commit/51456111a7b19a405564452c9f2c00cdaaf6b688", "message": "Rename biome method", "committedDate": "2020-09-19T20:15:50Z", "type": "commit"}, {"oid": "bc675d099014b4191bfd53e6f1230d3b403e1b8e", "url": "https://github.com/FabricMC/fabric/commit/bc675d099014b4191bfd53e6f1230d3b403e1b8e", "message": "Make it register and register the instance of the villager type.", "committedDate": "2020-09-19T20:19:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTM3MQ==", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r492449371", "bodyText": "Spelling error. \"wouldd\" -> \"would\"", "author": "frqnny", "createdAt": "2020-09-22T02:56:35Z", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation and registration of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:", "originalCommit": "bc675d099014b4191bfd53e6f1230d3b403e1b8e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTY5Ng==", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r492449696", "bodyText": "Maybe, I'd add a short sentence about how textures work, or maybe we can just leave it to yarn to do some javadocs on VillagerType class", "author": "frqnny", "createdAt": "2020-09-22T02:58:11Z", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation and registration of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.register(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:", "originalCommit": "bc675d099014b4191bfd53e6f1230d3b403e1b8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ2MDAyNQ==", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r492460025", "bodyText": "Ah yeah I should cover that, I did mention textures in villager profession pull request.", "author": "i509VCB", "createdAt": "2020-09-22T03:49:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTY5Ng=="}], "type": "inlineReview"}, {"oid": "1a480412af40407072e8b302c5be7068fd6d147d", "url": "https://github.com/FabricMC/fabric/commit/1a480412af40407072e8b302c5be7068fd6d147d", "message": "Javadoc 2", "committedDate": "2020-09-24T02:37:17Z", "type": "commit"}, {"oid": "2a689aa4826f9568ba001598df268ae0382077d4", "url": "https://github.com/FabricMC/fabric/commit/2a689aa4826f9568ba001598df268ae0382077d4", "message": "Add texture javadoc", "committedDate": "2020-09-24T02:41:33Z", "type": "commit"}]}