{"pr_number": 627, "pr_title": "Rework Dimensions for 1.16", "pr_createdAt": "2020-05-20T21:35:33Z", "pr_url": "https://github.com/FabricMC/fabric/pull/627", "timeline": [{"oid": "fdba5291eb73f49fa3ab92901c811cb5d968df52", "url": "https://github.com/FabricMC/fabric/commit/fdba5291eb73f49fa3ab92901c811cb5d968df52", "message": "dim api initial port", "committedDate": "2020-05-20T21:30:07Z", "type": "commit"}, {"oid": "bcea9a42f765fb7523183416f10954f8bc86d15a", "url": "https://github.com/FabricMC/fabric/commit/bcea9a42f765fb7523183416f10954f8bc86d15a", "message": "A whole bunch of work", "committedDate": "2020-05-27T21:37:53Z", "type": "commit"}, {"oid": "e34a2307ad80af4be71d4cd2edd44dc5e6987d60", "url": "https://github.com/FabricMC/fabric/commit/e34a2307ad80af4be71d4cd2edd44dc5e6987d60", "message": "Checkstyle :)", "committedDate": "2020-05-27T21:46:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2NDA2Ng==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r431464066", "bodyText": "Don't catch the command syntax exception. Let brigadier handle it (you can make the method throw it and be fine).\nReason being the command manager will return a richer message when you attempt to get the ServerPlayerEntity if you are running as a server and fail for you.", "author": "i509VCB", "createdAt": "2020-05-27T21:52:32Z", "path": "fabric-dimensions-v1/src/testmod/java/net/fabricmc/fabric/test/dimension/FabricDimensionTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package net.fabricmc.fabric.test.dimension;\n+\n+import static net.minecraft.server.command.CommandManager.literal;\n+\n+import com.mojang.brigadier.context.CommandContext;\n+import com.mojang.brigadier.exceptions.CommandSyntaxException;\n+\n+import net.minecraft.block.pattern.BlockPattern;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.server.command.ServerCommandSource;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.world.ServerWorld;\n+import net.minecraft.util.math.Direction;\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.dimension.DimensionType;\n+import net.minecraft.world.gen.chunk.ChunkGeneratorType;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.math.Vec3d;\n+import net.minecraft.world.biome.source.VanillaLayeredBiomeSource;\n+import net.minecraft.world.gen.chunk.SurfaceChunkGenerator;\n+\n+import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.command.v1.CommandRegistrationCallback;\n+import net.fabricmc.fabric.api.dimension.v1.FabricDimensionType;\n+import net.fabricmc.fabric.api.dimension.v1.FabricDimensions;\n+\n+public class FabricDimensionTest implements ModInitializer {\n+\tprivate static RegistryKey<DimensionType> dimensionRegistryKey;\n+\n+\t@Override\n+\tpublic void onInitialize() {\n+\t\tdimensionRegistryKey = RegistryKey.of(Registry.DIMENSION_TYPE_KEY, new Identifier(\"fabric_dimension\", \"test\"));\n+\n+\t\tFabricDimensionType.builder()\n+\t\t\t\t.chunkGenerator(seed -> new SurfaceChunkGenerator(new VanillaLayeredBiomeSource(seed, false, false), seed, ChunkGeneratorType.Preset.OVERWORLD.getChunkGeneratorType()))\n+\t\t\t\t.defaultPlacer(FabricDimensionTest::placeEntity)\n+\t\t\t\t.buildAndRegister(dimensionRegistryKey);\n+\n+\t\tCommandRegistrationCallback.EVENT.register((dispatcher, dedicated) ->\n+\t\t\t\tdispatcher.register(literal(\"fabric_dimension_test\").executes(FabricDimensionTest.this::executeTestCommand))\n+\t\t);\n+\t}\n+\n+\tprivate int executeTestCommand(CommandContext<ServerCommandSource> context) {\n+\t\ttry {\n+\t\t\tServerPlayerEntity serverPlayerEntity = context.getSource().getPlayer();\n+\t\t\tServerWorld serverWorld = serverPlayerEntity.getServerWorld();\n+\n+\t\t\tif (!serverWorld.method_27983().equals(dimensionRegistryKey)) {\n+\t\t\t\tFabricDimensions.teleport(serverPlayerEntity, dimensionRegistryKey, FabricDimensionTest::placeEntity);\n+\t\t\t} else {\n+\t\t\t\tFabricDimensions.teleport(serverPlayerEntity, DimensionType.OVERWORLD_REGISTRY_KEY, FabricDimensionTest::placeEntity);\n+\t\t\t}\n+\t\t} catch (CommandSyntaxException e) {", "originalCommit": "e34a2307ad80af4be71d4cd2edd44dc5e6987d60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2NTQ2Mg==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r431465462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic static final LinkedHashMap<RegistryKey<DimensionType>, Pair<DimensionType, ChunkGeneratorFactory>> FABRIC_DIM_MAP = new LinkedHashMap<>();\n          \n          \n            \n            \tpublic static final Map<RegistryKey<DimensionType>, Pair<DimensionType, ChunkGeneratorFactory>> FABRIC_DIM_MAP = new LinkedHashMap<>();", "author": "i509VCB", "createdAt": "2020-05-27T21:55:40Z", "path": "fabric-dimensions-v1/src/main/java/net/fabricmc/fabric/impl/dimension/FabricDimensionInternals.java", "diffHunk": "@@ -39,12 +46,14 @@ private FabricDimensionInternals() {\n \tpublic static final boolean DEBUG = System.getProperty(\"fabric.dimension.debug\", \"false\").equalsIgnoreCase(\"true\");\n \tpublic static final Logger LOGGER = LogManager.getLogger();\n \n+\tpublic static final LinkedHashMap<RegistryKey<DimensionType>, Pair<DimensionType, ChunkGeneratorFactory>> FABRIC_DIM_MAP = new LinkedHashMap<>();", "originalCommit": "e34a2307ad80af4be71d4cd2edd44dc5e6987d60", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "099660b9299627d490adcb3e01df2f0ae9982809", "url": "https://github.com/FabricMC/fabric/commit/099660b9299627d490adcb3e01df2f0ae9982809", "message": "Minor tweaks based on feedback", "committedDate": "2020-05-27T22:17:25Z", "type": "commit"}, {"oid": "55296ce781a6f71260b64cf91436f21a867ab528", "url": "https://github.com/FabricMC/fabric/commit/55296ce781a6f71260b64cf91436f21a867ab528", "message": "Merge branch '1.16' into dim-v2\n\n# Conflicts:\n#\tbuild.gradle\n#\tfabric-command-api-v1/src/main/java/net/fabricmc/fabric/mixin/command/MixinMinecraftDedicatedServer.java\n#\tfabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinIdRegistry.java\n#\tfabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinLevelStorageSession.java", "committedDate": "2020-05-29T19:49:17Z", "type": "commit"}, {"oid": "1d693c20fbc11063b5a7f9f026e925a3fc3d86fa", "url": "https://github.com/FabricMC/fabric/commit/1d693c20fbc11063b5a7f9f026e925a3fc3d86fa", "message": "Update to latest snapshot", "committedDate": "2020-05-29T20:01:32Z", "type": "commit"}, {"oid": "72912027dd8b7852fe9718ca59be7d686a401a96", "url": "https://github.com/FabricMC/fabric/commit/72912027dd8b7852fe9718ca59be7d686a401a96", "message": "Checkstyle ;)", "committedDate": "2020-05-29T20:08:22Z", "type": "commit"}, {"oid": "3caeeb01df07c67cb53d6bf51aae1635f44fa649", "url": "https://github.com/FabricMC/fabric/commit/3caeeb01df07c67cb53d6bf51aae1635f44fa649", "message": "Merge remote-tracking branch 'remotes/origin/1.16' into dim-v2", "committedDate": "2020-06-03T20:57:47Z", "type": "commit"}, {"oid": "0129ea38bbd1b778961b7a89580fa503285b6af7", "url": "https://github.com/FabricMC/fabric/commit/0129ea38bbd1b778961b7a89580fa503285b6af7", "message": "Merge branch '1.16' into dim-v2", "committedDate": "2020-06-04T20:38:09Z", "type": "commit"}, {"oid": "f4027c24c9c6c31b847946c136e8f6a24724634e", "url": "https://github.com/FabricMC/fabric/commit/f4027c24c9c6c31b847946c136e8f6a24724634e", "message": "Merge remote-tracking branch 'remotes/fabric/1.16' into dim-v2", "committedDate": "2020-06-04T22:20:57Z", "type": "commit"}, {"oid": "26d2d8536fa4dd1c0ac3e311fc08442c7f98c155", "url": "https://github.com/FabricMC/fabric/commit/26d2d8536fa4dd1c0ac3e311fc08442c7f98c155", "message": "Merge remote-tracking branch 'modmuss50/dim-v2' into dim-v2", "committedDate": "2020-06-05T10:38:44Z", "type": "commit"}, {"oid": "c774c81b18e7571e04a6dbe588ca63cd0ea033f9", "url": "https://github.com/FabricMC/fabric/commit/c774c81b18e7571e04a6dbe588ca63cd0ea033f9", "message": "Merge branch '1.16' into dim-v2", "committedDate": "2020-06-05T12:31:27Z", "type": "commit"}, {"oid": "7cd292d6cfc30bf5ab958f11d48d2021e4db706c", "url": "https://github.com/FabricMC/fabric/commit/7cd292d6cfc30bf5ab958f11d48d2021e4db706c", "message": "Some more dim work", "committedDate": "2020-06-05T13:33:27Z", "type": "commit"}, {"oid": "630c4a0e1e790ec62dbe790024222dfd5c0e1e89", "url": "https://github.com/FabricMC/fabric/commit/630c4a0e1e790ec62dbe790024222dfd5c0e1e89", "message": "Merge branch '1.16' into dim-v2", "committedDate": "2020-06-10T18:50:54Z", "type": "commit"}, {"oid": "fa3d05c0be67123af7060866135a725e5b5d2cc9", "url": "https://github.com/FabricMC/fabric/commit/fa3d05c0be67123af7060866135a725e5b5d2cc9", "message": "Re add default placer's, the example mod includes a test dim that currently marks the world as experimental", "committedDate": "2020-06-10T19:53:28Z", "type": "commit"}, {"oid": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837", "url": "https://github.com/FabricMC/fabric/commit/4e72501ba5ed5cac2f5354a4e46d8282c7c36837", "message": "license", "committedDate": "2020-06-10T20:04:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMDQ0Mw==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438410443", "bodyText": "can be inlined to context.getSource().getServer()", "author": "i509VCB", "createdAt": "2020-06-10T21:10:40Z", "path": "fabric-dimensions-v1/src/testmod/java/net/fabricmc/fabric/test/dimension/FabricDimensionTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.test.dimension;\n+\n+import static net.minecraft.server.command.CommandManager.literal;\n+\n+import com.mojang.brigadier.context.CommandContext;\n+import com.mojang.brigadier.exceptions.CommandSyntaxException;\n+\n+import net.minecraft.block.Blocks;\n+import net.minecraft.block.pattern.BlockPattern;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.server.command.ServerCommandSource;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.world.ServerWorld;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.Direction;\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.World;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.math.Vec3d;\n+\n+import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.command.v1.CommandRegistrationCallback;\n+import net.fabricmc.fabric.api.dimension.v1.FabricDimensions;\n+\n+public class FabricDimensionTest implements ModInitializer {\n+\tprivate static RegistryKey<World> dimensionRegistryKey;\n+\n+\t@Override\n+\tpublic void onInitialize() {\n+\t\tRegistry.register(Registry.CHUNK_GENERATOR, new Identifier(\"fabric_dimension\", \"void\"), VoidChunkGenerator.CODEC);\n+\n+\t\tdimensionRegistryKey = RegistryKey.of(Registry.DIMENSION, new Identifier(\"fabric_dimension\", \"void\"));\n+\n+\t\tFabricDimensions.registerDefaultPlacer(dimensionRegistryKey, FabricDimensionTest::placeEntityInVoid);\n+\n+\t\tCommandRegistrationCallback.EVENT.register((dispatcher, dedicated) ->\n+\t\t\t\tdispatcher.register(literal(\"fabric_dimension_test\").executes(FabricDimensionTest.this::executeTestCommand))\n+\t\t);\n+\t}\n+\n+\tprivate int executeTestCommand(CommandContext<ServerCommandSource> context) throws CommandSyntaxException {\n+\t\tServerPlayerEntity serverPlayerEntity = context.getSource().getPlayer();\n+\t\tServerWorld serverWorld = serverPlayerEntity.getServerWorld();\n+\n+\t\tif (!serverWorld.getRegistryKey().equals(dimensionRegistryKey)) {\n+\t\t\tserverPlayerEntity.changeDimension(serverWorld.getServer().getWorld(dimensionRegistryKey));\n+\t\t} else {\n+\t\t\tFabricDimensions.teleport(serverPlayerEntity, serverWorld.getServer().getWorld(World.OVERWORLD), FabricDimensionTest::placeEntity);", "originalCommit": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMDk4Nw==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438410987", "bodyText": "I think we should move this up to be in alphabetical order like how all the other modules appear", "author": "i509VCB", "createdAt": "2020-06-10T21:11:53Z", "path": "settings.gradle", "diffHunk": "@@ -44,5 +44,5 @@ include 'fabric-rendering-fluids-v1'\n include 'fabric-resource-loader-v0'\n include 'fabric-tag-extensions-v0'\n include 'fabric-textures-v0'\n-//include 'fabric-dimensions-v1'\n+include 'fabric-dimensions-v1'", "originalCommit": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMTQyNg==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438411426", "bodyText": "I don't think these files should be in the minecraft namespace?\nShouldn't this be located at src/testmod/resources/data/testrmod/dimension/fabric_dimension/void.json", "author": "i509VCB", "createdAt": "2020-06-10T21:12:52Z", "path": "fabric-dimensions-v1/src/testmod/resources/data/minecraft/dimension/fabric_dimension/void.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "originalCommit": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MTY5NQ==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438451695", "bodyText": "It's a quirk of the system.\n\nUnlike other data pack contents, dimensions only function in the minecraft namespace, and require a sub folder which is treated as the namespace. For example data/minecraft/dimension/custom/test.json will be called with custom:test.\n\nhttps://minecraft.gamepedia.com/Dimension#Dimension_syntax", "author": "Daomephsta", "createdAt": "2020-06-10T22:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MTgzNA==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438451834", "bodyText": "ah okay so this is a special case", "author": "i509VCB", "createdAt": "2020-06-10T22:57:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MjAxMQ==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438452011", "bodyText": "Yes.. this confused me at first, almost seems like a vanilla bug IMO.", "author": "modmuss50", "createdAt": "2020-06-10T22:58:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMTQyNg=="}], "type": "inlineReview"}, {"oid": "78e1d5b73870f63e978d7fc835de103e7f607450", "url": "https://github.com/FabricMC/fabric/commit/78e1d5b73870f63e978d7fc835de103e7f607450", "message": "Fixup javadoc", "committedDate": "2020-06-11T00:22:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTA4MQ==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438481081", "bodyText": "how about something like DimensionTeleportHandler or just TeleportHandler? EntityPlacer is very vague and it leads to vague class names in user code", "author": "Reoseah", "createdAt": "2020-06-11T00:39:48Z", "path": "fabric-dimensions-v1/src/main/java/net/fabricmc/fabric/api/dimension/v1/EntityPlacer.java", "diffHunk": "@@ -23,16 +23,18 @@\n \n /**\n  * Responsible for placing an Entity once they have entered a dimension.\n- * Stored by a FabricDimensionType, and used in Entity::changeDimension.\n+ * used in Entity::changeDimension.\n+ *\n+ * @deprecated Experimental feature, may be removed or changed without further notice due to potential changes to Dimensions in subsequent versions.\n  *\n  * @see FabricDimensions\n- * @see FabricDimensionType\n  */\n+@Deprecated\n @FunctionalInterface\n public interface EntityPlacer {", "originalCommit": "78e1d5b73870f63e978d7fc835de103e7f607450", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjA2OQ==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438482069", "bodyText": "Right before this place in javadoc word used is not capitalized at the start of a sentence", "author": "Reoseah", "createdAt": "2020-06-11T00:43:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTA4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjU0OQ==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438482549", "bodyText": "This doesnt actually have anything to do with the teleportation. Its just handling the spawn (location, and possibly portal creation) of the entity in the other world.", "author": "modmuss50", "createdAt": "2020-06-11T00:45:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTA4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MzMyMw==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438483323", "bodyText": "TeleportListener or TeleportPlacer?", "author": "Reoseah", "createdAt": "2020-06-11T00:48:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTA4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4NDIxMg==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438484212", "bodyText": "For me, EntityPlacer can be anything related to entity spawning, entities summoning other entities for attack etc\nTeleportationSomething is significantly clearer.\nAnything that mentions \"teleport\" or \"teleportation\" will be better than that", "author": "Reoseah", "createdAt": "2020-06-11T00:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTA4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4NDczNQ==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438484735", "bodyText": "TeleportListener is wrong, possibly TeleportPlacer?", "author": "modmuss50", "createdAt": "2020-06-11T00:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTA4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTg2NQ==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438481865", "bodyText": "Example for fabric entity placer? also, does this need to go in a minecraft/ subfolder like the dimension JSON?", "author": "LemmaEOF", "createdAt": "2020-06-11T00:42:53Z", "path": "fabric-dimensions-v1/src/testmod/resources/data/minecraft/dimension_type/fabric_dimension/void_type.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{", "originalCommit": "78e1d5b73870f63e978d7fc835de103e7f607450", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjE0OA==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438482148", "bodyText": "The entity placer is handled in code, see the example mod.\nAnd yes this also needs to go in minecraft/", "author": "modmuss50", "createdAt": "2020-06-11T00:44:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjcwNA==", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438482704", "bodyText": "ahhh, alright, sounds good", "author": "LemmaEOF", "createdAt": "2020-06-11T00:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTg2NQ=="}], "type": "inlineReview"}]}