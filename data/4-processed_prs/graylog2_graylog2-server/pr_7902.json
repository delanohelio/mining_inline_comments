{"pr_number": 7902, "pr_title": "Add option to enable/disable event definitions", "pr_createdAt": "2020-04-17T12:19:31Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7902", "timeline": [{"oid": "ec50a1dadf8fc79c80ee1b279af30234a3d299f4", "url": "https://github.com/Graylog2/graylog2-server/commit/ec50a1dadf8fc79c80ee1b279af30234a3d299f4", "message": "Split up EventDefinitionHandler code into smaller methods\n\nThis should make it a bit easier to reason about the behavior.", "committedDate": "2020-04-17T08:30:31Z", "type": "commit"}, {"oid": "e525bf354fb3ca9ac12788d2a58d5d13af22151e", "url": "https://github.com/Graylog2/graylog2-server/commit/e525bf354fb3ca9ac12788d2a58d5d13af22151e", "message": "Add #schedule() and #unschedule() methods to EventDefinitionHandler\n\nFixes #7497", "committedDate": "2020-04-17T12:13:11Z", "type": "commit"}, {"oid": "b4dca087646914bcf20f8f196695215259bf016b", "url": "https://github.com/Graylog2/graylog2-server/commit/b4dca087646914bcf20f8f196695215259bf016b", "message": "Don't log an error if \"releaseTrigger\" doesn't do anything\n\nThis can happen if a trigger gets removed while a job is running. (e.g.\ndisable scheduling of a job)\nWe also don't check this in other places.", "committedDate": "2020-04-20T14:38:18Z", "type": "commit"}, {"oid": "a45cb35a8597cd66535f5cd4caed65e1f224bb55", "url": "https://github.com/Graylog2/graylog2-server/commit/a45cb35a8597cd66535f5cd4caed65e1f224bb55", "message": "Add EventDefinitionHanlder#createWithoutSchedule", "committedDate": "2020-04-20T14:40:02Z", "type": "commit"}, {"oid": "ad0d924911534038b844a790bd22b40bbbabe968", "url": "https://github.com/Graylog2/graylog2-server/commit/ad0d924911534038b844a790bd22b40bbbabe968", "message": "Allow conditional scheduling for event definitions in content packs", "committedDate": "2020-04-20T15:15:42Z", "type": "commit"}, {"oid": "aa90d785e8ff3af42ff3419604c7b651ea68e8c1", "url": "https://github.com/Graylog2/graylog2-server/commit/aa90d785e8ff3af42ff3419604c7b651ea68e8c1", "message": "Add optional context to PaginatedResponse", "committedDate": "2020-04-20T18:06:49Z", "type": "commit"}, {"oid": "fc348315df97b5352decd2e026537228ca9e3dfa", "url": "https://github.com/Graylog2/graylog2-server/commit/fc348315df97b5352decd2e026537228ca9e3dfa", "message": "Add getAllByConfigField to DBJobDefinitionService", "committedDate": "2020-04-21T18:22:35Z", "type": "commit"}, {"oid": "490c96660c0afc760973fd0f79a399d2a7fd1ef9", "url": "https://github.com/Graylog2/graylog2-server/commit/490c96660c0afc760973fd0f79a399d2a7fd1ef9", "message": "Add DBJobTriggerService#getForJobs", "committedDate": "2020-04-22T11:11:25Z", "type": "commit"}, {"oid": "743c13d6eaf5e21c18f037db10635cd779a6ab02", "url": "https://github.com/Graylog2/graylog2-server/commit/743c13d6eaf5e21c18f037db10635cd779a6ab02", "message": "Add missing license", "committedDate": "2020-04-22T12:20:24Z", "type": "commit"}, {"oid": "36e9a3eeeb4497aff2f5e5bef1021604669ef065", "url": "https://github.com/Graylog2/graylog2-server/commit/36e9a3eeeb4497aff2f5e5bef1021604669ef065", "message": "Add option to enable/disable event definitions and show scheduler info\n\nFixes #7497", "committedDate": "2020-04-22T12:32:21Z", "type": "commit"}, {"oid": "c67c03b1aa55b14647bddf0514fc55453e9e6b5b", "url": "https://github.com/Graylog2/graylog2-server/commit/c67c03b1aa55b14647bddf0514fc55453e9e6b5b", "message": "Merge branch 'master' into issue-7497", "committedDate": "2020-04-27T07:55:12Z", "type": "commit"}, {"oid": "2672eb1a0edb6c7b1eecc8da35f04ce0ed168f97", "url": "https://github.com/Graylog2/graylog2-server/commit/2672eb1a0edb6c7b1eecc8da35f04ce0ed168f97", "message": "Make it possible to create/update event definitions without scheduling", "committedDate": "2020-04-27T16:37:05Z", "type": "commit"}, {"oid": "54c0f78a8e5c487b025608f57cbd798b52ea4e84", "url": "https://github.com/Graylog2/graylog2-server/commit/54c0f78a8e5c487b025608f57cbd798b52ea4e84", "message": "Add checkbox to enable/disable scheduling in event definition forms", "committedDate": "2020-04-27T16:37:47Z", "type": "commit"}, {"oid": "e8b47338403bb6cd33406114feb45d02164a6fa3", "url": "https://github.com/Graylog2/graylog2-server/commit/e8b47338403bb6cd33406114feb45d02164a6fa3", "message": "Merge remote-tracking branch 'origin/master' into issue-7497", "committedDate": "2020-04-28T08:28:34Z", "type": "commit"}, {"oid": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "url": "https://github.com/Graylog2/graylog2-server/commit/92b1135d27c02e52b27f8d63b91dda7dd238b18e", "message": "Show scheduling status in edit summary", "committedDate": "2020-04-29T07:33:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1OTgyNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417159825", "bodyText": "A short javadoc about what this class does would be nice", "author": "mpfz0r", "createdAt": "2020-04-29T08:47:52Z", "path": "graylog2-server/src/main/java/org/graylog/events/context/EventDefinitionContextService.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.events.context;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.auto.value.AutoValue;\n+import com.google.common.collect.ImmutableMap;\n+import org.graylog.events.processor.EventDefinitionDto;\n+import org.graylog.events.processor.EventProcessorExecutionJob;\n+import org.graylog.scheduler.DBJobDefinitionService;\n+import org.graylog.scheduler.DBJobTriggerService;\n+import org.graylog.scheduler.JobDefinitionDto;\n+import org.graylog.scheduler.JobTriggerData;\n+import org.graylog.scheduler.JobTriggerDto;\n+import org.graylog.scheduler.JobTriggerStatus;\n+import org.joda.time.DateTime;\n+\n+import javax.inject.Inject;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class EventDefinitionContextService {", "originalCommit": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyOTg5OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417329898", "bodyText": "Aye \ud83d\udc4d", "author": "bernd", "createdAt": "2020-04-29T13:50:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1OTgyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MTgwMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417161802", "bodyText": "Just an idea. If we use Serializable instead, it would be clearer that this is meant to\nbe sent out as a response..\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ImmutableMap<String, Object> contextFor(List<EventDefinitionDto> eventDefinitions) {\n          \n          \n            \n                public ImmutableMap<String, Serializable> contextFor(List<EventDefinitionDto> eventDefinitions) {", "author": "mpfz0r", "createdAt": "2020-04-29T08:51:10Z", "path": "graylog2-server/src/main/java/org/graylog/events/context/EventDefinitionContextService.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.events.context;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.auto.value.AutoValue;\n+import com.google.common.collect.ImmutableMap;\n+import org.graylog.events.processor.EventDefinitionDto;\n+import org.graylog.events.processor.EventProcessorExecutionJob;\n+import org.graylog.scheduler.DBJobDefinitionService;\n+import org.graylog.scheduler.DBJobTriggerService;\n+import org.graylog.scheduler.JobDefinitionDto;\n+import org.graylog.scheduler.JobTriggerData;\n+import org.graylog.scheduler.JobTriggerDto;\n+import org.graylog.scheduler.JobTriggerStatus;\n+import org.joda.time.DateTime;\n+\n+import javax.inject.Inject;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class EventDefinitionContextService {\n+    private final DBJobDefinitionService jobDefinitionService;\n+    private final DBJobTriggerService jobTriggerService;\n+\n+    @Inject\n+    public EventDefinitionContextService(DBJobDefinitionService jobDefinitionService, DBJobTriggerService jobTriggerService) {\n+        this.jobDefinitionService = jobDefinitionService;\n+        this.jobTriggerService = jobTriggerService;\n+    }\n+\n+    public ImmutableMap<String, Object> contextFor(List<EventDefinitionDto> eventDefinitions) {", "originalCommit": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMzMDQ2NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417330465", "bodyText": "I would keep it as it is. We use Map<String, Object> for these types of return values all over the place. \ud83d\ude04", "author": "bernd", "createdAt": "2020-04-29T13:51:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MTgwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MjM1Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417452357", "bodyText": "Fair enough", "author": "mpfz0r", "createdAt": "2020-04-29T16:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MTgwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MzY1OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417163658", "bodyText": "If we want to be extra correct, we would also query for the type being EventProcessorExecutionJob.TYPE_NAME", "author": "mpfz0r", "createdAt": "2020-04-29T08:54:17Z", "path": "graylog2-server/src/main/java/org/graylog/events/context/EventDefinitionContextService.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.events.context;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.auto.value.AutoValue;\n+import com.google.common.collect.ImmutableMap;\n+import org.graylog.events.processor.EventDefinitionDto;\n+import org.graylog.events.processor.EventProcessorExecutionJob;\n+import org.graylog.scheduler.DBJobDefinitionService;\n+import org.graylog.scheduler.DBJobTriggerService;\n+import org.graylog.scheduler.JobDefinitionDto;\n+import org.graylog.scheduler.JobTriggerData;\n+import org.graylog.scheduler.JobTriggerDto;\n+import org.graylog.scheduler.JobTriggerStatus;\n+import org.joda.time.DateTime;\n+\n+import javax.inject.Inject;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class EventDefinitionContextService {\n+    private final DBJobDefinitionService jobDefinitionService;\n+    private final DBJobTriggerService jobTriggerService;\n+\n+    @Inject\n+    public EventDefinitionContextService(DBJobDefinitionService jobDefinitionService, DBJobTriggerService jobTriggerService) {\n+        this.jobDefinitionService = jobDefinitionService;\n+        this.jobTriggerService = jobTriggerService;\n+    }\n+\n+    public ImmutableMap<String, Object> contextFor(List<EventDefinitionDto> eventDefinitions) {\n+        return ImmutableMap.of(\"scheduler\", schedulerContext(eventDefinitions));\n+    }\n+\n+    public ImmutableMap<String, Object> contextFor(EventDefinitionDto eventDefinition) {\n+        final ImmutableMap<String, SchedulerCtx> schedulerContext = schedulerContext(Collections.singletonList(eventDefinition));\n+        return ImmutableMap.of(\"scheduler\", schedulerContext.get(eventDefinition.id()));\n+    }\n+\n+    private Map<String, List<JobDefinitionDto>> getJobDefinitions(List<EventDefinitionDto> eventDefinitions) {\n+        final Set<String> eventDefinitionIds = eventDefinitions.stream().map(EventDefinitionDto::id).collect(Collectors.toSet());\n+        return jobDefinitionService.getAllByConfigField(EventProcessorExecutionJob.Config.FIELD_EVENT_DEFINITION_ID, eventDefinitionIds);", "originalCommit": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMzMjYyMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417332622", "bodyText": "We this in several other places as well without the type. I think it wouldn't be possible that we have two event definitions with the same _id but different types. Since the _id has a unique index.", "author": "bernd", "createdAt": "2020-04-29T13:54:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MzY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NDM3OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417454378", "bodyText": "My concern was not duplicates, but the fact that we are the config document from other types doesn't have the field we are querying.\nBut I guess it's fine.", "author": "mpfz0r", "createdAt": "2020-04-29T16:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MzY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1NTkzNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417455934", "bodyText": "Hmm. But then we would just get no result from the query, no?", "author": "bernd", "createdAt": "2020-04-29T16:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MzY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2NTY3MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417465670", "bodyText": "yeah, unless someone creates a plugin that uses the same field name in its config, which is quite unlikely :-D", "author": "mpfz0r", "createdAt": "2020-04-29T16:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE2MzY1OA=="}], "type": "inlineReview"}, {"oid": "15697ebca6b2ded1c9711004eb962e310bb4afd9", "url": "https://github.com/Graylog2/graylog2-server/commit/15697ebca6b2ded1c9711004eb962e310bb4afd9", "message": "Add javadoc for EventDefinitionContextService", "committedDate": "2020-04-29T13:50:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxMDEyNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417210126", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ApiOperation(\"Delete event definition\")\n          \n          \n            \n                @ApiOperation(\"Enable event definition\")", "author": "mpfz0r", "createdAt": "2020-04-29T10:19:20Z", "path": "graylog2-server/src/main/java/org/graylog/events/rest/EventDefinitionsResource.java", "diffHunk": "@@ -164,6 +186,24 @@ public void delete(@ApiParam(name = \"definitionId\") @PathParam(\"definitionId\") @\n         eventDefinitionHandler.delete(definitionId);\n     }\n \n+    @PUT\n+    @Path(\"{definitionId}/schedule\")\n+    @ApiOperation(\"Delete event definition\")", "originalCommit": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxMDQyNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417210425", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ApiOperation(\"Delete event definition\")\n          \n          \n            \n                @ApiOperation(\"Disable event definition\")", "author": "mpfz0r", "createdAt": "2020-04-29T10:19:59Z", "path": "graylog2-server/src/main/java/org/graylog/events/rest/EventDefinitionsResource.java", "diffHunk": "@@ -164,6 +186,24 @@ public void delete(@ApiParam(name = \"definitionId\") @PathParam(\"definitionId\") @\n         eventDefinitionHandler.delete(definitionId);\n     }\n \n+    @PUT\n+    @Path(\"{definitionId}/schedule\")\n+    @ApiOperation(\"Delete event definition\")\n+    @AuditEvent(type = EventsAuditEventTypes.EVENT_DEFINITION_UPDATE)\n+    public void schedule(@ApiParam(name = \"definitionId\") @PathParam(\"definitionId\") @NotBlank String definitionId) {\n+        checkPermission(RestPermissions.EVENT_DEFINITIONS_EDIT, definitionId);\n+        eventDefinitionHandler.schedule(definitionId);\n+    }\n+\n+    @PUT\n+    @Path(\"{definitionId}/unschedule\")\n+    @ApiOperation(\"Delete event definition\")", "originalCommit": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQxMzk0Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417413947", "bodyText": "Couldn't' this also be done with StreamEx like in DBJobTriggerService?\nSeems simpler", "author": "mpfz0r", "createdAt": "2020-04-29T15:38:48Z", "path": "graylog2-server/src/main/java/org/graylog/scheduler/DBJobDefinitionService.java", "diffHunk": "@@ -50,4 +58,52 @@ public DBJobDefinitionService(MongoConnection mongoConnection, MongoJackObjectMa\n         final String field = String.format(Locale.US, \"%s.%s\", JobDefinitionDto.FIELD_CONFIG, configField);\n         return Optional.ofNullable(db.findOne(DBQuery.is(field, value)));\n     }\n+\n+    /**\n+     * Returns all job definitions that have the given config field values, grouped by config field value.\n+     *\n+     * @param configField the config field\n+     * @param values      the values of the config field\n+     * @return the job definitions grouped by the given values\n+     */\n+    public Map<String, List<JobDefinitionDto>> getAllByConfigField(String configField, Collection<? extends Object> values) {\n+        final String field = String.format(Locale.US, \"%s.%s\", JobDefinitionDto.FIELD_CONFIG, configField);\n+\n+        // Use aggregation to group job definitions by each config field value\n+        // Example aggregation output:\n+        //   {\n+        //     \"config-field-value-1\": [\n+        //       {JobDefinitionDto}, {JobDefinitionDto}\n+        //      ],\n+        //     \"config-field-value-2\": [\n+        //       {JobDefinitionDto}, {JobDefinitionDto}\n+        //      ]\n+        //   }\n+        final Aggregation.Pipeline<Void> pipeline = Aggregation.match(DBQuery.in(field, values))", "originalCommit": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ2ODAyNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417468025", "bodyText": "No, unfortunately not. The \"config\" structure in JobDefinitionDto is pluggable so there is no method that I could use for the grouping key. (without converting the object to a map or JsonNode and access the key again)", "author": "bernd", "createdAt": "2020-04-29T16:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQxMzk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDQ3Mg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417474472", "bodyText": "Okay, I tested this. Using the object mapper to deserialize the value and pick the config field isn't that hard. Less code than the aggregation.", "author": "bernd", "createdAt": "2020-04-29T17:07:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQxMzk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MTczMw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417481733", "bodyText": "@mpfz0r I implemented it with StreamEx. Good catch!", "author": "bernd", "createdAt": "2020-04-29T17:19:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQxMzk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0MDk4OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417440988", "bodyText": "How about:\n\"Should this event definition be executed?\"\nOr maybe don't use the word scheduling at all, and just call it enable/disable?", "author": "mpfz0r", "createdAt": "2020-04-29T16:16:48Z", "path": "graylog2-web-interface/src/components/event-definitions/event-definition-types/FilterForm.jsx", "diffHunk": "@@ -295,6 +295,13 @@ class FilterForm extends React.Component {\n             <HelpBlock>{lodash.get(validation, 'errors.execute_every_ms[0]')}</HelpBlock>\n           )}\n         </FormGroup>\n+        <Input id=\"schedule-checkbox\"\n+               type=\"checkbox\"\n+               name=\"_is_scheduled\"\n+               label=\"Enable scheduling\"\n+               help=\"Whether scheduling for this event definition should be enabled?\"", "originalCommit": "92b1135d27c02e52b27f8d63b91dda7dd238b18e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ5NDkyNw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7902#discussion_r417494927", "bodyText": "Changed.", "author": "bernd", "createdAt": "2020-04-29T17:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0MDk4OA=="}], "type": "inlineReview"}, {"oid": "495a809bc7d23fbad6797898ba6263771f5839e8", "url": "https://github.com/Graylog2/graylog2-server/commit/495a809bc7d23fbad6797898ba6263771f5839e8", "message": "Update graylog2-server/src/main/java/org/graylog/events/rest/EventDefinitionsResource.java\n\nCo-Authored-By: Marco Pfatschbacher <marco@graylog.com>", "committedDate": "2020-04-29T16:39:51Z", "type": "commit"}, {"oid": "1cc4a93a355539fba3196e8ca0d55b10e0fa7abc", "url": "https://github.com/Graylog2/graylog2-server/commit/1cc4a93a355539fba3196e8ca0d55b10e0fa7abc", "message": "Update graylog2-server/src/main/java/org/graylog/events/rest/EventDefinitionsResource.java\n\nCo-Authored-By: Marco Pfatschbacher <marco@graylog.com>", "committedDate": "2020-04-29T16:40:10Z", "type": "commit"}, {"oid": "263eb50e65bced11cc9392c061794a28253933b5", "url": "https://github.com/Graylog2/graylog2-server/commit/263eb50e65bced11cc9392c061794a28253933b5", "message": "Simplify DBJobDefinitionService#getAllByConfigField\n\nUse StreamEx instead of a MongoDB aggregation.", "committedDate": "2020-04-29T17:18:00Z", "type": "commit"}, {"oid": "e7916640684a95df0efcde1ea9f41c9d7ac90070", "url": "https://github.com/Graylog2/graylog2-server/commit/e7916640684a95df0efcde1ea9f41c9d7ac90070", "message": "Wording", "committedDate": "2020-04-29T17:26:34Z", "type": "commit"}, {"oid": "7beb404c5ee538b5d2a075ac053dd471b48bbecd", "url": "https://github.com/Graylog2/graylog2-server/commit/7beb404c5ee538b5d2a075ac053dd471b48bbecd", "message": "Allow isScheduled to be used with content pack parameters", "committedDate": "2020-04-30T10:50:14Z", "type": "commit"}, {"oid": "e0581c94421d7aef159614f02160ba004ed4202a", "url": "https://github.com/Graylog2/graylog2-server/commit/e0581c94421d7aef159614f02160ba004ed4202a", "message": "Merge remote-tracking branch 'origin/master' into issue-7497", "committedDate": "2020-04-30T11:52:48Z", "type": "commit"}]}