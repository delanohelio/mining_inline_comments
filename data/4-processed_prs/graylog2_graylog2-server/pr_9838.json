{"pr_number": 9838, "pr_title": "Save focused widget id in url", "pr_createdAt": "2020-12-21T15:05:00Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/9838", "timeline": [{"oid": "d7270e56ce76b4e034984b5f080748602e7f6bff", "url": "https://github.com/Graylog2/graylog2-server/commit/d7270e56ce76b4e034984b5f080748602e7f6bff", "message": "Save focused widget id in url\n\n## Motivation\nPrior to this change, we did not save the state\nof the focused widget in the url.\n\n## Description\nThis change will sync the focused widget id with the\nurl so a user can copy and past the state to another\nuser.", "committedDate": "2020-12-21T14:33:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE4NzA3NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9838#discussion_r550187075", "bodyText": "You can use this instead:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const { search, pathname } = useLocation();\n          \n          \n            \n              const { focused } = useQuery();\n          \n      \n    \n    \n  \n\nuseQuery should be imported from routing/useQuery.\nThis already does the query string parsing and returns an object containing the query parameters.", "author": "dennisoelkers", "createdAt": "2020-12-30T13:00:20Z", "path": "graylog2-web-interface/src/views/components/contexts/WidgetFocusProvider.tsx", "diffHunk": "@@ -15,27 +15,63 @@\n  * <http://www.mongodb.com/licensing/server-side-public-license>.\n  */\n import * as React from 'react';\n-import { useState, useEffect } from 'react';\n+import { useState, useEffect, useCallback } from 'react';\n+import { useLocation, useHistory } from 'react-router-dom';\n import PropTypes from 'prop-types';\n+import URI from 'urijs';\n \n import { useStore } from 'stores/connect';\n import { WidgetStore } from 'views/stores/WidgetStore';\n import WidgetFocusContext from 'views/components/contexts/WidgetFocusContext';\n \n+const _syncWithQuery = (query: string, focusedWidget: string) => {\n+  const baseUri = new URI(query)\n+    .removeSearch('focused');\n+\n+  if (focusedWidget) {\n+    return baseUri.setSearch('focused', focusedWidget).toString();\n+  }\n+\n+  return baseUri.toString();\n+};\n+\n+const getFocusedWidgetFromSearch = (search: string) => {\n+  const uri = new URI(search);\n+  const { focused } = uri.search(true);\n+\n+  return focused;\n+};\n+\n const WidgetFocusProvider = ({ children }: { children: React.ReactNode }): React.ReactElement => {\n-  const [focusedWidget, setFocusedWidget] = useState(undefined);\n+  const { search, pathname } = useLocation();", "originalCommit": "d7270e56ce76b4e034984b5f080748602e7f6bff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE4NzM3OQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9838#discussion_r550187379", "bodyText": "We could extract this into a useFocusedWidgetIdFromURL() hook to improve readability.", "author": "dennisoelkers", "createdAt": "2020-12-30T13:01:41Z", "path": "graylog2-web-interface/src/views/components/contexts/WidgetFocusProvider.tsx", "diffHunk": "@@ -15,27 +15,63 @@\n  * <http://www.mongodb.com/licensing/server-side-public-license>.\n  */\n import * as React from 'react';\n-import { useState, useEffect } from 'react';\n+import { useState, useEffect, useCallback } from 'react';\n+import { useLocation, useHistory } from 'react-router-dom';\n import PropTypes from 'prop-types';\n+import URI from 'urijs';\n \n import { useStore } from 'stores/connect';\n import { WidgetStore } from 'views/stores/WidgetStore';\n import WidgetFocusContext from 'views/components/contexts/WidgetFocusContext';\n \n+const _syncWithQuery = (query: string, focusedWidget: string) => {\n+  const baseUri = new URI(query)\n+    .removeSearch('focused');\n+\n+  if (focusedWidget) {\n+    return baseUri.setSearch('focused', focusedWidget).toString();\n+  }\n+\n+  return baseUri.toString();\n+};\n+\n+const getFocusedWidgetFromSearch = (search: string) => {\n+  const uri = new URI(search);\n+  const { focused } = uri.search(true);\n+\n+  return focused;\n+};\n+\n const WidgetFocusProvider = ({ children }: { children: React.ReactNode }): React.ReactElement => {\n-  const [focusedWidget, setFocusedWidget] = useState(undefined);\n+  const { search, pathname } = useLocation();\n+  const query = pathname + search;\n+  const history = useHistory();\n+  const [focusedWidget, setFocusedWidget] = useState<string | undefined>();\n   const widgets = useStore(WidgetStore);\n \n+  useEffect(() => {", "originalCommit": "d7270e56ce76b4e034984b5f080748602e7f6bff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5MDYyMw==", "url": "https://github.com/Graylog2/graylog2-server/pull/9838#discussion_r550190623", "bodyText": "I do not understand this part. If the updateFocus function is called with the widget id of the currently focused widget, _syncWithQuery would be called with undefined and would remove the focused query parameter. Or am I misreading something?\nMaybe we should simplify the functionality of the updateFocus function. We could let it set:\n\nthe URL only (which would then be synced with the state in WidgetContextProvider)\nthe state only (through setFocusedWidget) and synchronize with the URL in WidgetContextProvider", "author": "dennisoelkers", "createdAt": "2020-12-30T13:13:24Z", "path": "graylog2-web-interface/src/views/components/contexts/WidgetFocusProvider.tsx", "diffHunk": "@@ -15,27 +15,63 @@\n  * <http://www.mongodb.com/licensing/server-side-public-license>.\n  */\n import * as React from 'react';\n-import { useState, useEffect } from 'react';\n+import { useState, useEffect, useCallback } from 'react';\n+import { useLocation, useHistory } from 'react-router-dom';\n import PropTypes from 'prop-types';\n+import URI from 'urijs';\n \n import { useStore } from 'stores/connect';\n import { WidgetStore } from 'views/stores/WidgetStore';\n import WidgetFocusContext from 'views/components/contexts/WidgetFocusContext';\n \n+const _syncWithQuery = (query: string, focusedWidget: string) => {\n+  const baseUri = new URI(query)\n+    .removeSearch('focused');\n+\n+  if (focusedWidget) {\n+    return baseUri.setSearch('focused', focusedWidget).toString();\n+  }\n+\n+  return baseUri.toString();\n+};\n+\n+const getFocusedWidgetFromSearch = (search: string) => {\n+  const uri = new URI(search);\n+  const { focused } = uri.search(true);\n+\n+  return focused;\n+};\n+\n const WidgetFocusProvider = ({ children }: { children: React.ReactNode }): React.ReactElement => {\n-  const [focusedWidget, setFocusedWidget] = useState(undefined);\n+  const { search, pathname } = useLocation();\n+  const query = pathname + search;\n+  const history = useHistory();\n+  const [focusedWidget, setFocusedWidget] = useState<string | undefined>();\n   const widgets = useStore(WidgetStore);\n \n+  useEffect(() => {\n+    const paramFocusedWidget = getFocusedWidgetFromSearch(search);\n+\n+    if (paramFocusedWidget && focusedWidget !== paramFocusedWidget) {\n+      setFocusedWidget(paramFocusedWidget);\n+    }\n+  }, [focusedWidget, search]);\n+\n   useEffect(() => {\n     if (focusedWidget && !widgets.has(focusedWidget)) {\n       setFocusedWidget(undefined);\n     }\n   }, [focusedWidget, widgets]);\n \n-  const updateFocus = (widgetId: string | undefined | null) => (\n-    widgetId === focusedWidget\n-      ? setFocusedWidget(undefined)\n-      : setFocusedWidget(widgetId));\n+  const updateFocus = useCallback((widgetId: string | undefined | null) => {\n+    const newFocus = widgetId === focusedWidget", "originalCommit": "d7270e56ce76b4e034984b5f080748602e7f6bff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "85409ae751468bf0dfd1403f8b22a7d3bb42ef0b", "url": "https://github.com/Graylog2/graylog2-server/commit/85409ae751468bf0dfd1403f8b22a7d3bb42ef0b", "message": "Add recommendations and fixes from @dennisoelkers", "committedDate": "2021-01-04T09:16:37Z", "type": "commit"}, {"oid": "dc5f4ace55cd902a792bdb9483597ade8b0f37bb", "url": "https://github.com/Graylog2/graylog2-server/commit/dc5f4ace55cd902a792bdb9483597ade8b0f37bb", "message": "Add a minimal test", "committedDate": "2021-01-05T16:22:51Z", "type": "commit"}, {"oid": "c09eeb45e1050d9404aaa08ec3368dbcde54b7e3", "url": "https://github.com/Graylog2/graylog2-server/commit/c09eeb45e1050d9404aaa08ec3368dbcde54b7e3", "message": "Add a test for setting a focused widget found in the url", "committedDate": "2021-01-07T10:05:24Z", "type": "commit"}, {"oid": "1dc4412a162c4798546b7f75e0b30d3fb84ae72e", "url": "https://github.com/Graylog2/graylog2-server/commit/1dc4412a162c4798546b7f75e0b30d3fb84ae72e", "message": "Fix now failing test", "committedDate": "2021-01-07T10:15:04Z", "type": "commit"}, {"oid": "f22da909a2232e83af1ffbabe9d0465b7a6f948f", "url": "https://github.com/Graylog2/graylog2-server/commit/f22da909a2232e83af1ffbabe9d0465b7a6f948f", "message": "Isolate use of mocking search to depending test", "committedDate": "2021-01-07T11:00:13Z", "type": "commit"}, {"oid": "b5b2d9182a27594c3c513ed0ff7cfe6529d90f52", "url": "https://github.com/Graylog2/graylog2-server/commit/b5b2d9182a27594c3c513ed0ff7cfe6529d90f52", "message": "Use async test", "committedDate": "2021-01-07T14:48:50Z", "type": "commit"}]}