{"pr_number": 8553, "pr_title": "Roles in user details", "pr_createdAt": "2020-07-15T14:19:09Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8553", "timeline": [{"oid": "a63ad23abdd42889dc2c22db6123c214a56f1281", "url": "https://github.com/Graylog2/graylog2-server/commit/a63ad23abdd42889dc2c22db6123c214a56f1281", "message": "Fix flow error", "committedDate": "2020-07-16T07:56:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3NzczMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455677732", "bodyText": "Let's add a space here.", "author": "linuspahl", "createdAt": "2020-07-16T10:12:08Z", "path": "graylog2-web-interface/src/components/users/PaginatedItem.jsx", "diffHunk": "@@ -0,0 +1,33 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { css, type StyledComponent } from 'styled-components';\n+\n+import { type ThemeInterface } from 'theme';\n+\n+import type { DescriptiveItem } from './PaginatedItemOverview';\n+\n+type Props = { item: DescriptiveItem };\n+\n+const Container: StyledComponent<{ isAdmin: boolean }, ThemeInterface, HTMLSpanElement> = styled.span(({ isAdmin, theme }) => css`\n+  display:block;", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3ODg0Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455678846", "bodyText": "Whats ist the purpose of hl here? I saw a warning in the console, that hl is not a supported html tag.", "author": "linuspahl", "createdAt": "2020-07-16T10:14:17Z", "path": "graylog2-web-interface/src/components/users/PaginatedItem.jsx", "diffHunk": "@@ -0,0 +1,33 @@\n+// @flow strict\n+import * as React from 'react';\n+import styled, { css, type StyledComponent } from 'styled-components';\n+\n+import { type ThemeInterface } from 'theme';\n+\n+import type { DescriptiveItem } from './PaginatedItemOverview';\n+\n+type Props = { item: DescriptiveItem };\n+\n+const Container: StyledComponent<{ isAdmin: boolean }, ThemeInterface, HTMLSpanElement> = styled.span(({ isAdmin, theme }) => css`\n+  display:block;\n+  padding: 10px;\n+  background-color: ${theme.colors.table.background};\n+\n+  :nth-of-type(even) {\n+    background-color: ${theme.colors.table.backgroundAlt};\n+  };\n+`);\n+\n+const Header = styled.h4`\n+  padding-bottom: 5px;\n+`;\n+\n+const PaginatedItem = ({ item: { name, description } }: Props) => (\n+  <Container>\n+    <Header>{name}</Header>\n+    <span>{description}</span>\n+    <hl />", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4MjQyMA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455682420", "bodyText": "We could create a constant for the initial page size and use it here + for the PaginatedList -> pagesSizes", "author": "linuspahl", "createdAt": "2020-07-16T10:20:46Z", "path": "graylog2-web-interface/src/components/users/PaginatedItemOverview.jsx", "diffHunk": "@@ -0,0 +1,92 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useEffect, useState } from 'react';\n+import styled from 'styled-components';\n+import * as Immutable from 'immutable';\n+\n+import { PaginatedList, SearchForm } from 'components/common';\n+\n+import PaginatedItem from './PaginatedItem';\n+\n+const Container = styled.div`\n+  margin-top: 10px;\n+`;\n+\n+export type PaginationInfo = {\n+  total: number,\n+  count: number,\n+  page: number,\n+  perPage: number,\n+  query: string,\n+};\n+\n+export interface DescriptiveItem {\n+  get id(): string,\n+  get name(): string,\n+  get description(): string,\n+}\n+\n+type ListOfDescriptiveItems = Immutable.List<DescriptiveItem>;\n+\n+export type PaginatedListType = {\n+  pagination: PaginationInfo,\n+  list: ListOfDescriptiveItems,\n+};\n+\n+type Props = {\n+  onLoad: (PaginationInfo) => Promise<PaginatedListType>,\n+};\n+\n+const PaginatedItemOverview = ({ onLoad }: Props) => {\n+  const [items, setItems] = useState();\n+  const [paginationInfo, setPaginationInfo] = useState({\n+    count: 0,\n+    total: 0,\n+    page: 1,\n+    perPage: 5,", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4MzQ0Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455683447", "bodyText": "There are some warnings in the console for these methods:\n.then() only accepts functions but was passed: [object Undefined]", "author": "linuspahl", "createdAt": "2020-07-16T10:22:44Z", "path": "graylog2-web-interface/src/components/users/PaginatedItemOverview.jsx", "diffHunk": "@@ -0,0 +1,92 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useEffect, useState } from 'react';\n+import styled from 'styled-components';\n+import * as Immutable from 'immutable';\n+\n+import { PaginatedList, SearchForm } from 'components/common';\n+\n+import PaginatedItem from './PaginatedItem';\n+\n+const Container = styled.div`\n+  margin-top: 10px;\n+`;\n+\n+export type PaginationInfo = {\n+  total: number,\n+  count: number,\n+  page: number,\n+  perPage: number,\n+  query: string,\n+};\n+\n+export interface DescriptiveItem {\n+  get id(): string,\n+  get name(): string,\n+  get description(): string,\n+}\n+\n+type ListOfDescriptiveItems = Immutable.List<DescriptiveItem>;\n+\n+export type PaginatedListType = {\n+  pagination: PaginationInfo,\n+  list: ListOfDescriptiveItems,\n+};\n+\n+type Props = {\n+  onLoad: (PaginationInfo) => Promise<PaginatedListType>,\n+};\n+\n+const PaginatedItemOverview = ({ onLoad }: Props) => {\n+  const [items, setItems] = useState();\n+  const [paginationInfo, setPaginationInfo] = useState({\n+    count: 0,\n+    total: 0,\n+    page: 1,\n+    perPage: 5,\n+    query: '',\n+  });\n+\n+  const _setResponse = ({ list, pagination }: PaginatedListType) => {\n+    setPaginationInfo(pagination);\n+    setItems(list);\n+  };\n+\n+  useEffect(() => {\n+    onLoad(paginationInfo).then(_setResponse);\n+  }, []);\n+\n+  const _onPageChange = (query) => (page, perPage) => {\n+    const pageInfo = {\n+      ...paginationInfo,\n+      query,\n+      page,\n+      perPage,\n+    };\n+    onLoad(pageInfo).then(_setResponse);\n+  };\n+\n+  const _onSearch = (query) => {\n+    const pageInfo = {\n+      ...paginationInfo,\n+      page: 1,\n+      query,\n+    };\n+    onLoad(pageInfo).then(_setResponse);\n+  };\n+", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4NDE0NA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455684144", "bodyText": "We could display a message here, if there are no results for the current search.", "author": "linuspahl", "createdAt": "2020-07-16T10:24:06Z", "path": "graylog2-web-interface/src/components/users/PaginatedItemOverview.jsx", "diffHunk": "@@ -0,0 +1,92 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useEffect, useState } from 'react';\n+import styled from 'styled-components';\n+import * as Immutable from 'immutable';\n+\n+import { PaginatedList, SearchForm } from 'components/common';\n+\n+import PaginatedItem from './PaginatedItem';\n+\n+const Container = styled.div`\n+  margin-top: 10px;\n+`;\n+\n+export type PaginationInfo = {\n+  total: number,\n+  count: number,\n+  page: number,\n+  perPage: number,\n+  query: string,\n+};\n+\n+export interface DescriptiveItem {\n+  get id(): string,\n+  get name(): string,\n+  get description(): string,\n+}\n+\n+type ListOfDescriptiveItems = Immutable.List<DescriptiveItem>;\n+\n+export type PaginatedListType = {\n+  pagination: PaginationInfo,\n+  list: ListOfDescriptiveItems,\n+};\n+\n+type Props = {\n+  onLoad: (PaginationInfo) => Promise<PaginatedListType>,\n+};\n+\n+const PaginatedItemOverview = ({ onLoad }: Props) => {\n+  const [items, setItems] = useState();\n+  const [paginationInfo, setPaginationInfo] = useState({\n+    count: 0,\n+    total: 0,\n+    page: 1,\n+    perPage: 5,\n+    query: '',\n+  });\n+\n+  const _setResponse = ({ list, pagination }: PaginatedListType) => {\n+    setPaginationInfo(pagination);\n+    setItems(list);\n+  };\n+\n+  useEffect(() => {\n+    onLoad(paginationInfo).then(_setResponse);\n+  }, []);\n+\n+  const _onPageChange = (query) => (page, perPage) => {\n+    const pageInfo = {\n+      ...paginationInfo,\n+      query,\n+      page,\n+      perPage,\n+    };\n+    onLoad(pageInfo).then(_setResponse);\n+  };\n+\n+  const _onSearch = (query) => {\n+    const pageInfo = {\n+      ...paginationInfo,\n+      page: 1,\n+      query,\n+    };\n+    onLoad(pageInfo).then(_setResponse);\n+  };\n+\n+  return (\n+    <PaginatedList onChange={_onPageChange(paginationInfo.query)}\n+                   pageSize={paginationInfo.perPage}\n+                   totalItems={paginationInfo.total}\n+                   pageSizes={[5, 10, 30]}\n+                   activePage={paginationInfo.page}>\n+      <SearchForm onSearch={_onSearch} />\n+      <Container>\n+        {items && items.toArray().map((item) => <PaginatedItem key={item.id} item={item} />) }", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4NTQ2MQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455685461", "bodyText": "() => setLoading(false) \ud83d\ude09", "author": "linuspahl", "createdAt": "2020-07-16T10:26:34Z", "path": "graylog2-web-interface/src/components/users/UserDetails/RolesSection.jsx", "diffHunk": "@@ -0,0 +1,33 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useState } from 'react';\n+\n+import User from 'logic/users/User';\n+import { AuthzRolesActions } from 'stores/roles/AuthzRolesStore';\n+\n+import PaginatedItemOverview, { type PaginationInfo, type PaginatedListType } from '../PaginatedItemOverview';\n+import SectionComponent from '../SectionComponent';\n+\n+type Props = {\n+  user: User,\n+};\n+\n+const RolesSection = ({ user: { username } }: Props) => {\n+  const [loading, setLoading] = useState(false);\n+\n+  const _onLoad = ({ page, perPage, query }: PaginationInfo): Promise<PaginatedListType> => {\n+    setLoading(true);\n+\n+    // $FlowFixMe Role implements Descriptive Item!!!\n+    return AuthzRolesActions.loadForUser(username, page, perPage, query)\n+      .then(setLoading(false));", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4NzIyNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455687224", "bodyText": "(or something similar)", "author": "linuspahl", "createdAt": "2020-07-16T10:29:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4NTQ2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4ODE0OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455688148", "bodyText": "I like it! but we should display the spinner, like in the UsersOverview currently Loading... is being displayed under the headline.", "author": "linuspahl", "createdAt": "2020-07-16T10:31:27Z", "path": "graylog2-web-interface/src/components/users/SectionComponent.jsx", "diffHunk": "@@ -2,24 +2,30 @@\n import * as React from 'react';\n import styled from 'styled-components';\n \n+import Spinner from 'components/common/Spinner';\n import { Row, Col } from 'components/graylog';\n \n type Props = {\n   children: React.Node,\n   title: string,\n+  showLoading?: boolean,\n };\n \n const Headline = styled.h2`\n   margin-bottom: 15px;\n `;\n \n-const SectionComponent = ({ children, title }: Props) => (\n+const SectionComponent = ({ children, title, showLoading = false }: Props) => (\n   <Row className=\"content\">\n     <Col xs={12}>\n-      <Headline>{title}</Headline>\n+      <Headline>{title}</Headline>{showLoading && <Spinner />}", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY5MDM2NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455690365", "bodyText": "I prefer to trigger the user notification inside the component, so the store does not contain any presentation logic.  We should refactor this for our previous changes as well.", "author": "linuspahl", "createdAt": "2020-07-16T10:35:25Z", "path": "graylog2-web-interface/src/stores/roles/AuthzRolesStore.js", "diffHunk": "@@ -0,0 +1,69 @@\n+// @flow strict\n+import Reflux from 'reflux';\n+import * as Immutable from 'immutable';\n+\n+import type { Store } from 'stores/StoreTypes';\n+import fetch from 'logic/rest/FetchProvider';\n+import ApiRoutes from 'routing/ApiRoutes';\n+import { qualifyUrl } from 'util/URLUtils';\n+import UserNotification from 'util/UserNotification';\n+import { singletonStore } from 'views/logic/singleton';\n+import PaginationURL from 'util/PaginationURL';\n+import Role from 'logic/roles/Role';\n+import type { RoleJSON } from 'logic/roles/Role';\n+import AuthzRolesActions from 'actions/roles/AuthzRolesActions';\n+\n+import type { PaginatedResponseType, PaginationType } from '../PaginationTypes';\n+\n+type PaginatedResponse = PaginatedResponseType & {\n+  roles: Array<RoleJSON>,\n+};\n+\n+export type PaginatedListType = {\n+  list: Immutable.List<Role>,\n+  pagination: PaginationType,\n+};\n+\n+type AuthzRolesStoreState = {};\n+\n+type AuthzRolesStoreType = Store<AuthzRolesStoreState>;\n+\n+// eslint-disable-next-line camelcase\n+const _responseToPaginatedList = ({ count, total, page, per_page, query, roles }: PaginatedResponse) => {\n+  return {\n+    list: Immutable.List(roles.map((r) => Role.fromJSON(r))),\n+    pagination: {\n+      count,\n+      total,\n+      page,\n+      perPage: per_page,\n+      query,\n+    },\n+  };\n+};\n+\n+const AuthzRolesStore: AuthzRolesStoreType = singletonStore(\n+  'AuthzRoles',\n+  () => Reflux.createStore({\n+    listenables: [AuthzRolesActions],\n+\n+    loadForUser(username: string, page: number, perPage: number, query: string): Promise<PaginatedListType> {\n+      const url = PaginationURL(ApiRoutes.AuthzRolesController.loadForUser(username).url, page, perPage, query);\n+\n+      const promise = fetch('GET', qualifyUrl(url))\n+        .then(_responseToPaginatedList,\n+          (error) => {\n+            if (error.additional.status !== 404) {\n+              UserNotification.error(`Loading roles for user ${username} failed with status: ${error}`,\n+                'Could not load roles for user');\n+            }\n+          });", "originalCommit": "874e11fd2c09524d3c30a03d3c95b3fd78abbae4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcyMTA0Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/8553#discussion_r455721047", "bodyText": "Nice there was a bug in the code as well! \ud83d\udc4d", "author": "kmerz", "createdAt": "2020-07-16T11:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY5MDM2NQ=="}], "type": "inlineReview"}, {"oid": "8b8b72ea70874992fd8407d0df4f6ae8ea0b707b", "url": "https://github.com/Graylog2/graylog2-server/commit/8b8b72ea70874992fd8407d0df4f6ae8ea0b707b", "message": "Add new Role value class", "committedDate": "2020-07-17T13:10:10Z", "type": "commit"}, {"oid": "d178fda5bfb3734beed8052184a4f86dc0674854", "url": "https://github.com/Graylog2/graylog2-server/commit/d178fda5bfb3734beed8052184a4f86dc0674854", "message": "Add AuthzRolesStore", "committedDate": "2020-07-17T13:10:10Z", "type": "commit"}, {"oid": "70dd8b9e5cecc632942b51c12705846cda9459cf", "url": "https://github.com/Graylog2/graylog2-server/commit/70dd8b9e5cecc632942b51c12705846cda9459cf", "message": "Add basic RolesSection", "committedDate": "2020-07-17T13:10:10Z", "type": "commit"}, {"oid": "a69929c50ad8df63f5317f66dd660777c00e66a4", "url": "https://github.com/Graylog2/graylog2-server/commit/a69929c50ad8df63f5317f66dd660777c00e66a4", "message": "Refine display of Roles for user", "committedDate": "2020-07-17T13:10:58Z", "type": "commit"}, {"oid": "ab98eb6999651962f2a94838313df5e5660fee24", "url": "https://github.com/Graylog2/graylog2-server/commit/ab98eb6999651962f2a94838313df5e5660fee24", "message": "Fix linter warnings", "committedDate": "2020-07-17T13:10:59Z", "type": "commit"}, {"oid": "bda76970e1692e2c5a05e4f27751626f552159bf", "url": "https://github.com/Graylog2/graylog2-server/commit/bda76970e1692e2c5a05e4f27751626f552159bf", "message": "Fix flow error", "committedDate": "2020-07-17T13:10:59Z", "type": "commit"}, {"oid": "65149ee6b142a89be963b48950aeaca474662d82", "url": "https://github.com/Graylog2/graylog2-server/commit/65149ee6b142a89be963b48950aeaca474662d82", "message": "Create PaginatedItemOverview to make it reusable", "committedDate": "2020-07-17T13:10:59Z", "type": "commit"}, {"oid": "008e10f5bc3715af182b0f7531fab49377b199ef", "url": "https://github.com/Graylog2/graylog2-server/commit/008e10f5bc3715af182b0f7531fab49377b199ef", "message": "Remove now unused RoleItem", "committedDate": "2020-07-17T13:10:59Z", "type": "commit"}, {"oid": "402762a39b342337eb130999a9515546f662ea0e", "url": "https://github.com/Graylog2/graylog2-server/commit/402762a39b342337eb130999a9515546f662ea0e", "message": "Fix annotations from @linuspahl", "committedDate": "2020-07-17T13:11:00Z", "type": "commit"}, {"oid": "1e7c2dc9d77092c88bf7b3ffd4aef5663f158349", "url": "https://github.com/Graylog2/graylog2-server/commit/1e7c2dc9d77092c88bf7b3ffd4aef5663f158349", "message": "Fix linter warning", "committedDate": "2020-07-17T13:11:00Z", "type": "commit"}, {"oid": "3e232cde22b930a85e195759bdc1f48560640dec", "url": "https://github.com/Graylog2/graylog2-server/commit/3e232cde22b930a85e195759bdc1f48560640dec", "message": "Fix flow errors", "committedDate": "2020-07-17T13:11:00Z", "type": "commit"}, {"oid": "3e232cde22b930a85e195759bdc1f48560640dec", "url": "https://github.com/Graylog2/graylog2-server/commit/3e232cde22b930a85e195759bdc1f48560640dec", "message": "Fix flow errors", "committedDate": "2020-07-17T13:11:00Z", "type": "forcePushed"}]}