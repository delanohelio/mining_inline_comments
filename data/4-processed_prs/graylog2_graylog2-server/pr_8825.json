{"pr_number": 8825, "pr_title": "Merge webpack overrides from plugin into core config", "pr_createdAt": "2020-08-19T11:28:50Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8825", "timeline": [{"oid": "c282447af6a341ebc1b2b15ed1152e12ccffcae9", "url": "https://github.com/Graylog2/graylog2-server/commit/c282447af6a341ebc1b2b15ed1152e12ccffcae9", "message": "Merge actual plugin webpack config into dev webpack config.", "committedDate": "2020-08-19T11:24:41Z", "type": "commit"}, {"oid": "0135a9ab1cd9d137d0150ae599acddf0f7eaa823", "url": "https://github.com/Graylog2/graylog2-server/commit/0135a9ab1cd9d137d0150ae599acddf0f7eaa823", "message": "Removing unused code, adding linter hints.", "committedDate": "2020-08-19T11:24:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk4NDQxMQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8825#discussion_r472984411", "bodyText": "This is exactly what I had planned to do! Cool", "author": "Gaya", "createdAt": "2020-08-19T12:18:08Z", "path": "graylog2-web-interface/webpack.combined.config.js", "diffHunk": "@@ -16,55 +12,46 @@ const globOptions = {\n   nodir: true,\n };\n \n-const pluginConfigs = process.env.disable_plugins === 'true' ? [] : glob.sync(pluginConfigPattern, globOptions).map(config => `${globCwd}/${config}`);\n+function isNotDependency(pluginConfig) {\n+  // Avoid including webpack configs of dependencies and built files.\n+  return !pluginConfig.includes('/target/') && !pluginConfig.includes('/node_modules/');\n+}\n+\n+const pluginConfigs = process.env.disable_plugins === 'true' ? [] : glob.sync(pluginConfigPattern, globOptions)\n+  .map((config) => `${globCwd}/${config}`)\n+  .filter(isNotDependency);\n \n process.env.web_src_path = path.resolve(__dirname);\n \n // eslint-disable-next-line import/no-dynamic-require\n const webpackConfig = require(path.resolve(__dirname, './webpack.config.js'));\n \n-function getPluginName(pluginConfig) {\n-  const packageConfig = path.join(path.dirname(pluginConfig), 'package.json');\n-  if (fs.existsSync(packageConfig)) {\n-    // If a package.json file exists (should normally be the case) use the package name for pluginName\n-    const pkg = JSON.parse(fs.readFileSync(packageConfig, 'utf8'));\n-    return pkg.name.replace(/\\s+/g, '');\n-  } else {\n-    // Otherwise just use the directory name of the webpack config file\n-    return path.basename(path.dirname(pluginConfig));\n-  }\n-}\n+const mergedPluginConfigs = pluginConfigs\n+  // eslint-disable-next-line global-require,import/no-dynamic-require\n+  .map((configFile) => require(configFile))\n+  .reduce((config, pluginConfig) => merge.smart(config, pluginConfig), {});", "originalCommit": "0135a9ab1cd9d137d0150ae599acddf0f7eaa823", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}