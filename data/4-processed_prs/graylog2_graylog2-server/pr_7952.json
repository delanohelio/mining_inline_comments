{"pr_number": 7952, "pr_title": "Post events from export to be used for audit logging", "pr_createdAt": "2020-04-23T12:48:24Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7952", "timeline": [{"oid": "67f9d806a908308e471b9f46818ea15eb7828b8f", "url": "https://github.com/Graylog2/graylog2-server/commit/67f9d806a908308e471b9f46818ea15eb7828b8f", "message": "Fix MessagesResourceTest\n\nAdded MessagesTestResource with mocked user", "committedDate": "2020-04-24T08:26:48Z", "type": "forcePushed"}, {"oid": "d10750d36395b6e71eba9abc4b91308c8f101553", "url": "https://github.com/Graylog2/graylog2-server/commit/d10750d36395b6e71eba9abc4b91308c8f101553", "message": "Use same event with type for requested and succeeded\n\nSince the events were identical, adding a type field makes things a bit simpler.", "committedDate": "2020-05-08T12:37:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNjE0NA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7952#discussion_r423016144", "bodyText": "I would add the limit for a rough estimation how many messages were exported. Or perhaps the total message count in the succeed case?", "author": "kmerz", "createdAt": "2020-05-11T12:51:50Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/events/MessagesExportEvent.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.events;\n+\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.google.auto.value.AutoValue;\n+import com.google.common.collect.ImmutableMap;\n+import org.graylog.plugins.views.search.export.ExportMessagesCommand;\n+import org.graylog2.plugin.indexer.searches.timeranges.AbsoluteRange;\n+import org.joda.time.DateTime;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static org.graylog.plugins.views.audit.ViewsAuditEventTypes.MESSAGES_EXPORT_REQUESTED;\n+import static org.graylog.plugins.views.audit.ViewsAuditEventTypes.MESSAGES_EXPORT_SUCCEEDED;\n+\n+@AutoValue\n+@JsonAutoDetect\n+public abstract class MessagesExportEvent {\n+\n+    public static MessagesExportEvent requested(DateTime startTime, String userName, ExportMessagesCommand command) {\n+        return from(startTime, userName, command, MESSAGES_EXPORT_REQUESTED);\n+    }\n+\n+    public static MessagesExportEvent succeeded(DateTime startTime, String userName, ExportMessagesCommand command) {\n+        return from(startTime, userName, command, MESSAGES_EXPORT_SUCCEEDED);\n+    }\n+\n+    private static MessagesExportEvent from(DateTime startTime, String userName, ExportMessagesCommand command, String auditType) {\n+        return Builder.create()\n+                .userName(userName)\n+                .auditType(auditType)\n+                .timestamp(startTime)\n+                .timeRange(command.timeRange())\n+                .queryString(command.queryString().queryString())\n+                .streams(command.streams())\n+                .fieldsInOrder(command.fieldsInOrder())\n+                .build();\n+    }\n+\n+    public abstract String userName();\n+\n+    public abstract String auditType();\n+\n+    public abstract DateTime timestamp();\n+\n+    public abstract AbsoluteRange timeRange();\n+\n+    public abstract String queryString();\n+\n+    public abstract Set<String> streams();", "originalCommit": "d10750d36395b6e71eba9abc4b91308c8f101553", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1176ee032a7c71285aa57d2ec412b5051d1bf7ce", "url": "https://github.com/Graylog2/graylog2-server/commit/1176ee032a7c71285aa57d2ec412b5051d1bf7ce", "message": "Send MessagesExportEvent for audit for all export variants", "committedDate": "2020-05-12T13:16:50Z", "type": "commit"}, {"oid": "77bf80b9b458346c3315f990d0a0913653b183ae", "url": "https://github.com/Graylog2/graylog2-server/commit/77bf80b9b458346c3315f990d0a0913653b183ae", "message": "Add user name to export audit event\n\nNo better idea than lamely passing it from the resource", "committedDate": "2020-05-12T13:16:50Z", "type": "commit"}, {"oid": "0ac5bb58ca2bbbd27cc15814dfda2ef47c9b8fd4", "url": "https://github.com/Graylog2/graylog2-server/commit/0ac5bb58ca2bbbd27cc15814dfda2ef47c9b8fd4", "message": "Fix MessagesResourceTest\n\nAdded MessagesTestResource with mocked user", "committedDate": "2020-05-12T13:16:51Z", "type": "commit"}, {"oid": "6b82e8eb10888372bd2a48ea0a85c8792c32faed", "url": "https://github.com/Graylog2/graylog2-server/commit/6b82e8eb10888372bd2a48ea0a85c8792c32faed", "message": "Added separate audit event for requested export\n\nThis allows auditing cases where exports where an export was requested, but never reached the point of logging the success. Some data could still have been retrieved.", "committedDate": "2020-05-12T13:16:51Z", "type": "commit"}, {"oid": "e5e00eb222314c5c2308089e1b5c0f77074c3f05", "url": "https://github.com/Graylog2/graylog2-server/commit/e5e00eb222314c5c2308089e1b5c0f77074c3f05", "message": "Use same event with type for requested and succeeded\n\nSince the events were identical, adding a type field makes things a bit simpler.", "committedDate": "2020-05-12T13:16:51Z", "type": "commit"}, {"oid": "920f60c992d56d2211a499a3d1ebc5b6a43a7a7d", "url": "https://github.com/Graylog2/graylog2-server/commit/920f60c992d56d2211a499a3d1ebc5b6a43a7a7d", "message": "Add limit to audit events", "committedDate": "2020-05-12T13:16:52Z", "type": "commit"}, {"oid": "804268968ab5b732eebfa29a09c606c7702a20c0", "url": "https://github.com/Graylog2/graylog2-server/commit/804268968ab5b732eebfa29a09c606c7702a20c0", "message": "Extract audit event creation to separate class\n\n- Added MessagesExporter interface\n- Added AuditingMessagesExporter implementation\n- Extracted command creation from DecoratingMessagesExporter to allow AuditingMessagesExporter to implement the same interface\n\nCommandFactory has gotten a bit big, but a big advantage is that now all the weird mappings from Search, Query etc. are encapsulated there.", "committedDate": "2020-05-12T13:16:52Z", "type": "commit"}, {"oid": "804268968ab5b732eebfa29a09c606c7702a20c0", "url": "https://github.com/Graylog2/graylog2-server/commit/804268968ab5b732eebfa29a09c606c7702a20c0", "message": "Extract audit event creation to separate class\n\n- Added MessagesExporter interface\n- Added AuditingMessagesExporter implementation\n- Extracted command creation from DecoratingMessagesExporter to allow AuditingMessagesExporter to implement the same interface\n\nCommandFactory has gotten a bit big, but a big advantage is that now all the weird mappings from Search, Query etc. are encapsulated there.", "committedDate": "2020-05-12T13:16:52Z", "type": "forcePushed"}, {"oid": "33e7a4487ba40bd13f6c2c05d5047f6c7d048dec", "url": "https://github.com/Graylog2/graylog2-server/commit/33e7a4487ba40bd13f6c2c05d5047f6c7d048dec", "message": "Add search id and search type id to audit event, if present", "committedDate": "2020-05-12T15:00:59Z", "type": "commit"}, {"oid": "4cdd95f351e7b69b64bd26daabd65d072a5bc278", "url": "https://github.com/Graylog2/graylog2-server/commit/4cdd95f351e7b69b64bd26daabd65d072a5bc278", "message": "Fixed getter naming in AuditContext", "committedDate": "2020-05-12T15:06:44Z", "type": "commit"}, {"oid": "8cd9536f21a9b4d7a9995f9f06b2bd45aac530dc", "url": "https://github.com/Graylog2/graylog2-server/commit/8cd9536f21a9b4d7a9995f9f06b2bd45aac530dc", "message": "Fix map generation in MessagesExportEvent\n\nAccidentally included searchId for searchTypeId before.\nUsing Optional#ifPresent now.", "committedDate": "2020-05-12T15:26:21Z", "type": "commit"}]}