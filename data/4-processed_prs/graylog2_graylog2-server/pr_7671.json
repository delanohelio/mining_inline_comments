{"pr_number": 7671, "pr_title": "Implementing `shouldComponentUpdate` for `connect`.", "pr_createdAt": "2020-03-12T08:58:57Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7671", "timeline": [{"oid": "592755923355a9d13b5137b054b5e2ce226f74c2", "url": "https://github.com/Graylog2/graylog2-server/commit/592755923355a9d13b5137b054b5e2ce226f74c2", "message": "Fixing linter hints.", "committedDate": "2020-03-12T09:12:25Z", "type": "forcePushed"}, {"oid": "eab3bb2e479fbbfab8cc1036856eaeb7a9c1c3be", "url": "https://github.com/Graylog2/graylog2-server/commit/eab3bb2e479fbbfab8cc1036856eaeb7a9c1c3be", "message": "Adding literal from default props.", "committedDate": "2020-03-12T16:15:56Z", "type": "forcePushed"}, {"oid": "6613140e821cde5196ddfb7beef59c90bef60c53", "url": "https://github.com/Graylog2/graylog2-server/commit/6613140e821cde5196ddfb7beef59c90bef60c53", "message": "Implementing `shouldComponentUpdate` for `connect`.", "committedDate": "2020-03-13T11:29:52Z", "type": "commit"}, {"oid": "df5baab5afb37a721511d80850ac8f429c39e5b7", "url": "https://github.com/Graylog2/graylog2-server/commit/df5baab5afb37a721511d80850ac8f429c39e5b7", "message": "Extracting `isDeepEqual` function.", "committedDate": "2020-03-13T11:29:52Z", "type": "commit"}, {"oid": "cac9d94b9d4f8b16984c99d23d70c97c00bf0be3", "url": "https://github.com/Graylog2/graylog2-server/commit/cac9d94b9d4f8b16984c99d23d70c97c00bf0be3", "message": "Splitting up equality checking for general and search updates.", "committedDate": "2020-03-13T11:29:52Z", "type": "commit"}, {"oid": "e7de39f8a9bdff4cc895b214de235f922f2eb106", "url": "https://github.com/Graylog2/graylog2-server/commit/e7de39f8a9bdff4cc895b214de235f922f2eb106", "message": "Adding tests.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "1dd42c2b1523304fe44627cec04fa9063d773156", "url": "https://github.com/Graylog2/graylog2-server/commit/1dd42c2b1523304fe44627cec04fa9063d773156", "message": "Avoid mutating and leaking internal state.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "09bf8295d0513457ea3a7e5ee137e826c8fa9ac4", "url": "https://github.com/Graylog2/graylog2-server/commit/09bf8295d0513457ea3a7e5ee137e826c8fa9ac4", "message": "Fixing linter hints.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "8e68335cab6a93423936696f41a52da7f914a7c8", "url": "https://github.com/Graylog2/graylog2-server/commit/8e68335cab6a93423936696f41a52da7f914a7c8", "message": "Typing `connect` properly.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "31dcebf8cf3ec20bbfc0c151fbaf9a52a35f2cbc", "url": "https://github.com/Graylog2/graylog2-server/commit/31dcebf8cf3ec20bbfc0c151fbaf9a52a35f2cbc", "message": "Testing `connect` without expecting it to return a class.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "d0487c0564223d1c15339e7938c4d1929d2bb14e", "url": "https://github.com/Graylog2/graylog2-server/commit/d0487c0564223d1c15339e7938c4d1929d2bb14e", "message": "Using proper view in test.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "66dadd6ca80b01e135eb501dff3f015c335db8e0", "url": "https://github.com/Graylog2/graylog2-server/commit/66dadd6ca80b01e135eb501dff3f015c335db8e0", "message": "Using full type for component.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "df493f9a7ea154bb7b2e424399a416bb91301eb1", "url": "https://github.com/Graylog2/graylog2-server/commit/df493f9a7ea154bb7b2e424399a416bb91301eb1", "message": "Simplifying mocking `CurrentViewTypeProvider`.", "committedDate": "2020-03-13T11:29:53Z", "type": "commit"}, {"oid": "2e4d2b5f9051d1c01a63ca39c8aad38914a63d18", "url": "https://github.com/Graylog2/graylog2-server/commit/2e4d2b5f9051d1c01a63ca39c8aad38914a63d18", "message": "Making component/props/connect usage more explicit.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "4d183534bc5fd8f06d3661f01b7075606b51ef7a", "url": "https://github.com/Graylog2/graylog2-server/commit/4d183534bc5fd8f06d3661f01b7075606b51ef7a", "message": "Fixing props type inference.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "5ba5c43345e96ebacd418f32971b18b7f89e1a1e", "url": "https://github.com/Graylog2/graylog2-server/commit/5ba5c43345e96ebacd418f32971b18b7f89e1a1e", "message": "Fixing handling of visualization types and props.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "e2dfd4469a7f759a218f722b8ef7996b5df85b50", "url": "https://github.com/Graylog2/graylog2-server/commit/e2dfd4469a7f759a218f722b8ef7996b5df85b50", "message": "Adding `asMock`.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "f5cc47ddc35b5effe4fc3f82ae598379ed03adb6", "url": "https://github.com/Graylog2/graylog2-server/commit/f5cc47ddc35b5effe4fc3f82ae598379ed03adb6", "message": "Adding literal from default props.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "7950c54b957b41ebfd48780bca0ba01b2e858782", "url": "https://github.com/Graylog2/graylog2-server/commit/7950c54b957b41ebfd48780bca0ba01b2e858782", "message": "Fixing flow hints.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "42400ec6b488295f4a02716d93b295901ee90186", "url": "https://github.com/Graylog2/graylog2-server/commit/42400ec6b488295f4a02716d93b295901ee90186", "message": "Ensure that all mocked stores have `getInitialState`.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "f9ffbc11d19097abe22727c83cad0f068d7982dc", "url": "https://github.com/Graylog2/graylog2-server/commit/f9ffbc11d19097abe22727c83cad0f068d7982dc", "message": "Qualifying import.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "43cc94e123dd8b648ab9eff325dc0c1a1002f039", "url": "https://github.com/Graylog2/graylog2-server/commit/43cc94e123dd8b648ab9eff325dc0c1a1002f039", "message": "Adding types, adding default store methods.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935", "url": "https://github.com/Graylog2/graylog2-server/commit/c12d28db960683bf228d1516feb7ba864f9c2935", "message": "Fixing and improving `Sidebar` test.", "committedDate": "2020-03-13T11:29:54Z", "type": "commit"}, {"oid": "c12d28db960683bf228d1516feb7ba864f9c2935", "url": "https://github.com/Graylog2/graylog2-server/commit/c12d28db960683bf228d1516feb7ba864f9c2935", "message": "Fixing and improving `Sidebar` test.", "committedDate": "2020-03-13T11:29:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMzkzMA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393033930", "bodyText": "You could use isDeepEqual() for the redundant logic.", "author": "linuspahl", "createdAt": "2020-03-16T13:47:50Z", "path": "graylog2-web-interface/src/views/stores/isEqualForSearch.js", "diffHunk": "@@ -0,0 +1,24 @@\n+// @flow strict\n+import { isEqualWith, isFunction } from 'lodash';\n+\n+const hasFn = (obj, fn) => (obj && obj[fn] && isFunction(obj[fn]));\n+const hasEquals = obj => hasFn(obj, 'equals');\n+const hasEqualsForSearch = obj => hasFn(obj, 'equalsForSearch');\n+const isImmutable = obj => hasFn(obj, 'toJS');\n+\n+const _isEqual = (first, second) => {\n+  if (hasEqualsForSearch(first)) {\n+    return first.equalsForSearch(second);\n+  }\n+  if (isImmutable(first) && isImmutable(second)) {\n+    return isEqualWith(first.toJS(), second.toJS(), _isEqual);\n+  }\n+  if (hasEquals(first)) {\n+    return first.equals(second);\n+  }\n+  return undefined;\n+};", "originalCommit": "c12d28db960683bf228d1516feb7ba864f9c2935", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDEyMw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393090123", "bodyText": "Just saw we can't reuse some of the logic in isDeepEqual.js, please ignore this comment.", "author": "linuspahl", "createdAt": "2020-03-16T15:00:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzMzkzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NDk2Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393044966", "bodyText": "I am currently seeing the following warning, when I open any search page:\nConnectStoresWrapper[Widget] stores=view: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop.", "author": "linuspahl", "createdAt": "2020-03-16T14:04:11Z", "path": "graylog2-web-interface/src/stores/connect.jsx", "diffHunk": "@@ -27,57 +38,77 @@ import { isFunction } from 'lodash';\n  * connect(SamplesComponent, { samples: SamplesStore }, ({ samples }) => ({ samples: samples.filter(sample => sample.id === 4) }))\n  *\n  */\n-export default (Component, stores, mapProps = props => props) => {\n+\n+function connect<Stores: Object, Props, ComponentType: React.ComponentType<Props>, MappedProps>(\n+  Component: ComponentType,\n+  stores: Stores,\n+  mapProps: (ResultType<Stores>) => MappedProps = props => props,\n+): React.ComponentType<$Diff<$Call<ExtractComponentProps, ComponentType>, MappedProps>> {\n   const wrappedComponentName = Component.displayName || Component.name || 'Unknown/Anonymous';\n-  class ConnectStoresWrapper extends React.Component {\n-    constructor(props) {\n-      super(props);\n+  class ConnectStoresWrapper extends React.Component<$Diff<$Call<ExtractComponentProps, ComponentType>, MappedProps>> {", "originalCommit": "c12d28db960683bf228d1516feb7ba864f9c2935", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDgyMA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393104820", "bodyText": "\u2705", "author": "dennisoelkers", "createdAt": "2020-03-16T15:21:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NDk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2ODU4Mw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393068583", "bodyText": "Due to the existing prop type warning we are receiving for some visualizations, I found out the component name gets lost here. Currently the warning looks like:\nWarning: Failed prop type: Invalid prop `data` of type `object` supplied to `<<anonymous>>`, expected an array.\n\nWhich means we need to add something like LineVisualization.displayName = 'LineVisualization' to every visualization, or we add an argument to this function makeVisualization(component, displayName, type) and add it here with visualizationComponent.displayName = displayName.\nThe first solution looks more familiar because the displayName clearly belongs to the component, but I prefer the second approach, because we only need to add the displayName when we use makeVisualization() and flow will remind us, whenever we could forget about adding the attribute.", "author": "linuspahl", "createdAt": "2020-03-16T14:30:41Z", "path": "graylog2-web-interface/src/views/components/aggregationbuilder/AggregationBuilder.jsx", "diffHunk": "@@ -37,12 +37,19 @@ export type VisualizationComponentProps = {|\n   onChange: OnVisualizationConfigChange,\n   width: number,\n   toggleEdit: () => void,\n-|};\n+};\n \n export type VisualizationComponent =\n-  { type?: string, propTypes?: any }\n+  { type: string, propTypes?: any }\n   & React.ComponentType<VisualizationComponentProps>;\n \n+export const makeVisualization = (component: React.ComponentType<VisualizationComponentProps>, type: string): VisualizationComponent => {", "originalCommit": "c12d28db960683bf228d1516feb7ba864f9c2935", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMjAxNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393102014", "bodyText": "I think this happens for the BarVisualization component? In that case, I think the display name never got lost, because it was simply never present as it is a functional component. We could use the logic from connect.jsx:\n  const wrappedComponentName = Component.displayName || Component.name || 'Unknown/Anonymous';\n\nand use that as displayName, but we would not gain anything.\nLong story short: I think we should just set displayName explicitly, when creating a functional component. E.g. adding: BarVisualization.displayName = 'BarVisualization'; before exporting it. This is beyond the scope of this PR though.", "author": "dennisoelkers", "createdAt": "2020-03-16T15:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2ODU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExOTQ5Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/7671#discussion_r393119496", "bodyText": "You are right, it never gets lost, I thought so because the component's name was part of the warning before these changes.\nI agree adding the displayName for functional components is a good idea in general, but out of the scope. Looks like a good case for an ESLint rule, i will have a look at a possible solution.", "author": "linuspahl", "createdAt": "2020-03-16T15:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2ODU4Mw=="}], "type": "inlineReview"}, {"oid": "c5a1883ced226e8a75a8afc1525327899250673c", "url": "https://github.com/Graylog2/graylog2-server/commit/c5a1883ced226e8a75a8afc1525327899250673c", "message": "Not extracting `key` pseudo-prop.", "committedDate": "2020-03-16T15:21:34Z", "type": "commit"}]}