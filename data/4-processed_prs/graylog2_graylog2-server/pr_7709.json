{"pr_number": 7709, "pr_title": "Bulk CSV export for views-based searches", "pr_createdAt": "2020-03-18T14:56:59Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7709", "timeline": [{"oid": "4e6e731ea6396551052384bf05edd989a9fc305e", "url": "https://github.com/Graylog2/graylog2-server/commit/4e6e731ea6396551052384bf05edd989a9fc305e", "message": "Pick correct query for search type\n\n... if a search type is specified for the export.\nThe assumption that a search may only have a single Query\nof course doesn't hold for exports from dashboards, where\na search can have multiple.\nPick the single query containing the requested search type instead.", "committedDate": "2020-04-23T14:28:37Z", "type": "commit"}, {"oid": "bcf13214876654184e607443a06724a843a90c0e", "url": "https://github.com/Graylog2/graylog2-server/commit/bcf13214876654184e607443a06724a843a90c0e", "message": "Fix integration test\n\n...to expect the corrected timestamp format", "committedDate": "2020-04-23T14:28:38Z", "type": "commit"}, {"oid": "10418613328f2fcfaa24d19bc2646da6b0e84a22", "url": "https://github.com/Graylog2/graylog2-server/commit/10418613328f2fcfaa24d19bc2646da6b0e84a22", "message": "Fix linter warnings and errors", "committedDate": "2020-04-23T14:28:38Z", "type": "commit"}, {"oid": "65b1c6462f91b9ea70208e5ae253c656dd9d8fca", "url": "https://github.com/Graylog2/graylog2-server/commit/65b1c6462f91b9ea70208e5ae253c656dd9d8fca", "message": "Make ElasticsearchExportBackend keep all fields\n\n...instead of reducing them down to only the requested ones.\nThis is important for decorators. A user might want a field in\nthe result that is added by a decorator based on other fields,\nwhich the user doesn't want to see in the result.", "committedDate": "2020-04-23T14:28:40Z", "type": "commit"}, {"oid": "70b038ade16ff6f66504fe4bfecefcb0cbf9ba99", "url": "https://github.com/Graylog2/graylog2-server/commit/70b038ade16ff6f66504fe4bfecefcb0cbf9ba99", "message": "Remove `MessagesRequest#additionalQueryString`\n\n...and concatenate query strings beforehand, if necessary", "committedDate": "2020-04-23T14:28:40Z", "type": "commit"}, {"oid": "be9e8fd109bb324c09729fb7a57ebcb49fcd8af4", "url": "https://github.com/Graylog2/graylog2-server/commit/be9e8fd109bb324c09729fb7a57ebcb49fcd8af4", "message": "Change export limit description", "committedDate": "2020-04-23T14:28:41Z", "type": "commit"}, {"oid": "e6f327070d3c09230f50cefe61983f4ffa1984b0", "url": "https://github.com/Graylog2/graylog2-server/commit/e6f327070d3c09230f50cefe61983f4ffa1984b0", "message": "Change export setting input labels", "committedDate": "2020-04-23T14:28:42Z", "type": "commit"}, {"oid": "00c9fc40e3ec51f5641a7c9a5e4159f795dfc000", "url": "https://github.com/Graylog2/graylog2-server/commit/00c9fc40e3ec51f5641a7c9a5e4159f795dfc000", "message": "Optionally allow creation of custom options when using the Select component", "committedDate": "2020-04-23T14:28:43Z", "type": "commit"}, {"oid": "6b39dee47aac70706cb6872e909e789fb1c45f1a", "url": "https://github.com/Graylog2/graylog2-server/commit/6b39dee47aac70706cb6872e909e789fb1c45f1a", "message": "Allow creation of custom fields on CSV export", "committedDate": "2020-04-23T14:28:43Z", "type": "commit"}, {"oid": "1c0535ae9a783b91a339586a683a8778e1f781e6", "url": "https://github.com/Graylog2/graylog2-server/commit/1c0535ae9a783b91a339586a683a8778e1f781e6", "message": "Update snapshots and fix CSVExportModal text", "committedDate": "2020-04-23T14:28:44Z", "type": "commit"}, {"oid": "6e97e0e5e684dec0f5c2a321249cfca65cf43f35", "url": "https://github.com/Graylog2/graylog2-server/commit/6e97e0e5e684dec0f5c2a321249cfca65cf43f35", "message": "Remove not needed import", "committedDate": "2020-04-23T14:28:45Z", "type": "commit"}, {"oid": "e00ad76f869c616f68f62bae7e46c1170cd00a55", "url": "https://github.com/Graylog2/graylog2-server/commit/e00ad76f869c616f68f62bae7e46c1170cd00a55", "message": "Remove weak Object type definition", "committedDate": "2020-04-23T14:28:45Z", "type": "commit"}, {"oid": "667f991672bad15896d1dbef415b3f0b079ee222", "url": "https://github.com/Graylog2/graylog2-server/commit/667f991672bad15896d1dbef415b3f0b079ee222", "message": "Change text style", "committedDate": "2020-04-23T14:28:46Z", "type": "commit"}, {"oid": "a0cce5853171aa5d44cc1801e40e89337d3b0335", "url": "https://github.com/Graylog2/graylog2-server/commit/a0cce5853171aa5d44cc1801e40e89337d3b0335", "message": "Always include message field as an initial field in export form", "committedDate": "2020-04-23T14:28:46Z", "type": "commit"}, {"oid": "8b9bc18207f70ec7706391119c90e58641d05e1a", "url": "https://github.com/Graylog2/graylog2-server/commit/8b9bc18207f70ec7706391119c90e58641d05e1a", "message": "Adjust sort input description", "committedDate": "2020-04-23T14:28:47Z", "type": "commit"}, {"oid": "088bae0e2ce3fae2caf5fe0f4d327a7ca5b99024", "url": "https://github.com/Graylog2/graylog2-server/commit/088bae0e2ce3fae2caf5fe0f4d327a7ca5b99024", "message": "Adjust decorated fields description", "committedDate": "2020-04-23T14:28:47Z", "type": "commit"}, {"oid": "37a324d7d1c66f90dd13746cfd76afbbdadd9438", "url": "https://github.com/Graylog2/graylog2-server/commit/37a324d7d1c66f90dd13746cfd76afbbdadd9438", "message": "Fixing typo", "committedDate": "2020-04-23T14:28:48Z", "type": "commit"}, {"oid": "e5ee19fd8f1fc9b7e4ec92c6f6468b3d415601c4", "url": "https://github.com/Graylog2/graylog2-server/commit/e5ee19fd8f1fc9b7e4ec92c6f6468b3d415601c4", "message": "Fix indentation", "committedDate": "2020-04-23T14:28:49Z", "type": "commit"}, {"oid": "747df1f601deffb104a5f979ddda83d302fbaa55", "url": "https://github.com/Graylog2/graylog2-server/commit/747df1f601deffb104a5f979ddda83d302fbaa55", "message": "Disable start download button while export file is being generated", "committedDate": "2020-04-23T14:28:49Z", "type": "commit"}, {"oid": "717e8ed4b97197f363c8dfba8421b79dab5882de", "url": "https://github.com/Graylog2/graylog2-server/commit/717e8ed4b97197f363c8dfba8421b79dab5882de", "message": "Revert not needed propTypes placement change", "committedDate": "2020-04-23T14:28:50Z", "type": "commit"}, {"oid": "1afa2bfc7e5b389658063f42be5e0108ebb4b9ae", "url": "https://github.com/Graylog2/graylog2-server/commit/1afa2bfc7e5b389658063f42be5e0108ebb4b9ae", "message": "Fix FetchProvider behaviour on unauthorized requests", "committedDate": "2020-04-23T14:28:50Z", "type": "commit"}, {"oid": "4c8341a7b05cf1e8182311c2871fe7b8ca739ab4", "url": "https://github.com/Graylog2/graylog2-server/commit/4c8341a7b05cf1e8182311c2871fe7b8ca739ab4", "message": "Close CSVExportModal after finished download", "committedDate": "2020-04-23T14:28:51Z", "type": "commit"}, {"oid": "ab88778046ab8918b3adcb0dba31598ec49a1953", "url": "https://github.com/Graylog2/graylog2-server/commit/ab88778046ab8918b3adcb0dba31598ec49a1953", "message": "Import * as React when importing react instead of only default", "committedDate": "2020-04-23T14:28:52Z", "type": "commit"}, {"oid": "53ba1b1c7552a5fc017e6abc9e89cd17fcf920b3", "url": "https://github.com/Graylog2/graylog2-server/commit/53ba1b1c7552a5fc017e6abc9e89cd17fcf920b3", "message": "Integrate view type specific export start in export strategy", "committedDate": "2020-04-23T14:28:52Z", "type": "commit"}, {"oid": "fba98af30d3c73261404d457c867e6e1eddfaae1", "url": "https://github.com/Graylog2/graylog2-server/commit/fba98af30d3c73261404d457c867e6e1eddfaae1", "message": "Refactor Select component structure", "committedDate": "2020-04-23T14:28:53Z", "type": "commit"}, {"oid": "e39abb78a18c8af5d63a4413c55f1b3aa908d998", "url": "https://github.com/Graylog2/graylog2-server/commit/e39abb78a18c8af5d63a4413c55f1b3aa908d998", "message": "Refactor export filename creation", "committedDate": "2020-04-23T14:28:53Z", "type": "commit"}, {"oid": "4461ecfb906d7e08cf74678d574c4c2bd0e74cb2", "url": "https://github.com/Graylog2/graylog2-server/commit/4461ecfb906d7e08cf74678d574c4c2bd0e74cb2", "message": "Extract building MessagesRequest to own class\n\nIntroduced CommandFactory to improve the code for building a MessagesRequest from a Search and MessageList (if available).", "committedDate": "2020-04-23T14:28:54Z", "type": "commit"}, {"oid": "5b3d916366ce7d54b1b0724f54cd006de28aaa01", "url": "https://github.com/Graylog2/graylog2-server/commit/5b3d916366ce7d54b1b0724f54cd006de28aaa01", "message": "Only support ElasticsearchQueryString in export\n\nWe don't have anything else anyway, and this avoids type casting", "committedDate": "2020-04-23T14:28:55Z", "type": "commit"}, {"oid": "46fbc57d1d15e58b57e5727f413b2aa54cd29892", "url": "https://github.com/Graylog2/graylog2-server/commit/46fbc57d1d15e58b57e5727f413b2aa54cd29892", "message": "Introduce ExportMessagesCommand\n\nHaving a separate class makes it simpler to distinguish what the api accepts from what we need for processing an export.\nMost prominently we want to convert all time ranges to absolute before processing so that we can submit the absolute time range to the audit log exactly as it's executed", "committedDate": "2020-04-23T14:28:55Z", "type": "commit"}, {"oid": "ca387a3f469416f257e718414e2b257506317e8b", "url": "https://github.com/Graylog2/graylog2-server/commit/ca387a3f469416f257e718414e2b257506317e8b", "message": "Add decorators to ExportMessagesCommand\n\nFinding the decorators to apply belongs in CommandFactory. This will also make it simpler to add in support from decorators that are not directly attached to message lists.\nE.g., decorators configured for streams, if we want to use them, or decorators a user might want to specify on API requests.", "committedDate": "2020-04-23T14:28:56Z", "type": "commit"}, {"oid": "ca387a3f469416f257e718414e2b257506317e8b", "url": "https://github.com/Graylog2/graylog2-server/commit/ca387a3f469416f257e718414e2b257506317e8b", "message": "Add decorators to ExportMessagesCommand\n\nFinding the decorators to apply belongs in CommandFactory. This will also make it simpler to add in support from decorators that are not directly attached to message lists.\nE.g., decorators configured for streams, if we want to use them, or decorators a user might want to specify on API requests.", "committedDate": "2020-04-23T14:28:56Z", "type": "forcePushed"}, {"oid": "875b602a59663945faae9c6d0ef9db913d0f9234", "url": "https://github.com/Graylog2/graylog2-server/commit/875b602a59663945faae9c6d0ef9db913d0f9234", "message": "Disable sort direction select if no sort is selected", "committedDate": "2020-04-23T15:24:27Z", "type": "commit"}, {"oid": "e788f442ffabcc0f6f3938736ccb8df3af761582", "url": "https://github.com/Graylog2/graylog2-server/commit/e788f442ffabcc0f6f3938736ccb8df3af761582", "message": "Only allow export messages limits greater than one", "committedDate": "2020-04-23T15:27:38Z", "type": "commit"}, {"oid": "1fdf83c68f703ef5a56522fc8530fbe154bc280f", "url": "https://github.com/Graylog2/graylog2-server/commit/1fdf83c68f703ef5a56522fc8530fbe154bc280f", "message": "Create MessagesExportUtil for API calls on CSV export", "committedDate": "2020-03-20T10:44:53Z", "type": "forcePushed"}, {"oid": "a0140ac5445b0aa4a1e555f3dbc6e03a4dfbebb0", "url": "https://github.com/Graylog2/graylog2-server/commit/a0140ac5445b0aa4a1e555f3dbc6e03a4dfbebb0", "message": "Remove font-awesome from package.json", "committedDate": "2020-04-06T12:34:09Z", "type": "forcePushed"}, {"oid": "1caaef202f5c2c356381f529a7444c1b7fce708c", "url": "https://github.com/Graylog2/graylog2-server/commit/1caaef202f5c2c356381f529a7444c1b7fce708c", "message": "Use search specific endpoint to export all messages of a search", "committedDate": "2020-04-14T08:21:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNTM0NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408925345", "bodyText": "This could be replaced by using the LinkedHashSetUtil#linkedHashSetOf() method. I think I saw a few more places where you could use the newly introduced util class.", "author": "bernd", "createdAt": "2020-04-15T15:18:51Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/export/MessagesRequest.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.export;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.google.auto.value.AutoValue;\n+import org.graylog.plugins.views.search.engine.BackendQuery;\n+import org.graylog.plugins.views.search.searchtypes.Sort;\n+import org.graylog2.plugin.indexer.searches.timeranges.TimeRange;\n+\n+import javax.validation.ValidationException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+@AutoValue\n+@JsonDeserialize(builder = MessagesRequest.Builder.class)\n+public abstract class MessagesRequest {\n+    public abstract Optional<TimeRange> timeRange();\n+\n+    public abstract Optional<BackendQuery> queryString();\n+\n+    public abstract Optional<BackendQuery> additionalQueryString();\n+\n+    public abstract Optional<Set<String>> streams();\n+\n+    public abstract Optional<LinkedHashSet<String>> fieldsInOrder();\n+\n+    public abstract Optional<LinkedHashSet<Sort>> sort();\n+\n+    public abstract Optional<Integer> chunkSize();\n+\n+    public static MessagesRequest empty() {\n+        return builder().build();\n+    }\n+\n+    public static Builder builder() {\n+        return Builder.create();\n+    }\n+\n+    public abstract Builder toBuilder();\n+\n+    public void ensureCompleteness() {\n+        List<String> missingFields = new ArrayList<>();\n+        if (!timeRange().isPresent())\n+            missingFields.add(\"timeRange\");\n+        if (!queryString().isPresent())\n+            missingFields.add(\"queryString\");\n+        if (!streams().isPresent() || streams().get().isEmpty())\n+            missingFields.add(\"streams\");\n+        if (!fieldsInOrder().isPresent() || fieldsInOrder().get().isEmpty())\n+            missingFields.add(\"fieldsInOrder\");\n+        if (!sort().isPresent())\n+            missingFields.add(\"sort\");\n+\n+        if (!missingFields.isEmpty()) {\n+            String message = \"Missing fields: \" + missingFields;\n+            throw new ValidationException(message);\n+        }\n+    }\n+\n+    @AutoValue.Builder\n+    public abstract static class Builder {\n+        @JsonProperty(\"timerange\")\n+        public abstract Builder timeRange(TimeRange timeRange);\n+\n+        @JsonProperty\n+        public abstract Builder streams(Set<String> streams);\n+\n+        @JsonProperty(\"query_string\")\n+        public abstract Builder queryString(BackendQuery queryString);\n+\n+        public abstract Builder additionalQueryString(BackendQuery queryString);\n+\n+        @JsonProperty(\"fields_in_order\")\n+        public abstract Builder fieldsInOrder(LinkedHashSet<String> fieldsInOrder);\n+\n+        public Builder fieldsInOrder(String... fieldsInOrder) {\n+            LinkedHashSet<String> fields = Arrays.stream(fieldsInOrder).collect(Collectors.toCollection(LinkedHashSet::new));", "originalCommit": "41ca176aee268d0432b6fd8e03c88a66ccf98c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MDEwOA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408970108", "bodyText": "\ud83d\udc4d", "author": "alex-konn", "createdAt": "2020-04-15T16:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNTM0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNjA5Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408926096", "bodyText": "How about using Message.FIELD_GL2_MESSAGE_ID here instead of hardcoding the field name here?", "author": "bernd", "createdAt": "2020-04-15T15:19:41Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/export/es/ElasticsearchExportBackend.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.export.es;\n+\n+import io.searchbox.client.JestClient;\n+import io.searchbox.core.Search;\n+import io.searchbox.core.SearchResult;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+import org.elasticsearch.search.sort.SortBuilders;\n+import org.elasticsearch.search.sort.SortOrder;\n+import org.graylog.plugins.views.search.elasticsearch.ElasticsearchQueryString;\n+import org.graylog.plugins.views.search.elasticsearch.IndexLookup;\n+import org.graylog.plugins.views.search.export.ExportBackend;\n+import org.graylog.plugins.views.search.export.MessagesRequest;\n+import org.graylog.plugins.views.search.export.SimpleMessage;\n+import org.graylog.plugins.views.search.export.SimpleMessageChunk;\n+import org.graylog.plugins.views.search.searchtypes.Sort;\n+import org.graylog2.indexer.IndexHelper;\n+import org.graylog2.indexer.IndexMapping;\n+import org.graylog2.indexer.cluster.jest.JestUtils;\n+import org.graylog2.plugin.Message;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.function.Consumer;\n+\n+import static java.util.Objects.requireNonNull;\n+import static java.util.stream.Collectors.toCollection;\n+import static org.elasticsearch.index.query.QueryBuilders.boolQuery;\n+import static org.elasticsearch.index.query.QueryBuilders.matchAllQuery;\n+import static org.elasticsearch.index.query.QueryBuilders.queryStringQuery;\n+import static org.elasticsearch.index.query.QueryBuilders.termsQuery;\n+\n+public class ElasticsearchExportBackend implements ExportBackend {\n+    private static final Logger LOG = LoggerFactory.getLogger(ElasticsearchExportBackend.class);\n+\n+    private static final int DEFAULT_CHUNK_SIZE = 1000;\n+    private static final String TIEBREAKER_FIELD = \"gl2_message_id\";", "originalCommit": "41ca176aee268d0432b6fd8e03c88a66ccf98c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MDE4Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408970186", "bodyText": "\ud83d\udc4d", "author": "alex-konn", "createdAt": "2020-04-15T16:21:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNjA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNjc2MQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408926761", "bodyText": "Is this a typo or intentional? runAsyncc with a double c", "author": "bernd", "createdAt": "2020-04-15T15:20:31Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/export/ChunkedRunner.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.export;\n+\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n+import org.glassfish.jersey.server.ChunkedOutput;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.function.Consumer;\n+\n+public class ChunkedRunner {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ChunkedRunner.class);\n+\n+    private final ChunkedOutput<SimpleMessageChunk> output = new ChunkedOutput<>(SimpleMessageChunk.class);\n+\n+    public static ChunkedOutput<SimpleMessageChunk> runAsyncc(Consumer<Consumer<SimpleMessageChunk>> call) {", "originalCommit": "41ca176aee268d0432b6fd8e03c88a66ccf98c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MDYyNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408970625", "bodyText": "HOW DARE YOU DOUBT MY SPELLING!\nwill fix...", "author": "alex-konn", "createdAt": "2020-04-15T16:22:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNjc2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkzMzc0NA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408933744", "bodyText": "How about trimming the queryString() here to handle typos like \" *\" and similar?", "author": "bernd", "createdAt": "2020-04-15T15:29:31Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/ElasticsearchQueryString.java", "diffHunk": "@@ -30,12 +31,21 @@\n \n     public static final String NAME = \"elasticsearch\";\n \n+    public static ElasticsearchQueryString empty() {\n+        return ElasticsearchQueryString.builder().queryString(\"\").build();\n+    }\n+\n     @Override\n     public abstract String type();\n \n     @JsonProperty\n     public abstract String queryString();\n \n+    @JsonIgnore\n+    public boolean isEmpty() {\n+        return queryString().isEmpty() || queryString().equals(\"*\");", "originalCommit": "41ca176aee268d0432b6fd8e03c88a66ccf98c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MDc0MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408970740", "bodyText": "\ud83d\udc4d", "author": "alex-konn", "createdAt": "2020-04-15T16:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkzMzc0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk0MTgzNw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408941837", "bodyText": "This class seems to be unused.", "author": "bernd", "createdAt": "2020-04-15T15:40:20Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/export/MessagesResult.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.export;\n+\n+import com.google.auto.value.AutoValue;\n+\n+@AutoValue\n+public abstract class MessagesResult {", "originalCommit": "41ca176aee268d0432b6fd8e03c88a66ccf98c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MDk2Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408970967", "bodyText": "Holy shit. All this time..", "author": "alex-konn", "createdAt": "2020-04-15T16:22:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk0MTgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk0NjYxMw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408946613", "bodyText": "The leading wildcard handling probably needs to be enabled.", "author": "bernd", "createdAt": "2020-04-15T15:47:04Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/export/es/ElasticsearchExportBackend.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.export.es;\n+\n+import io.searchbox.client.JestClient;\n+import io.searchbox.core.Search;\n+import io.searchbox.core.SearchResult;\n+import org.elasticsearch.index.query.BoolQueryBuilder;\n+import org.elasticsearch.index.query.QueryBuilder;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+import org.elasticsearch.search.sort.SortBuilders;\n+import org.elasticsearch.search.sort.SortOrder;\n+import org.graylog.plugins.views.search.elasticsearch.ElasticsearchQueryString;\n+import org.graylog.plugins.views.search.elasticsearch.IndexLookup;\n+import org.graylog.plugins.views.search.export.ExportBackend;\n+import org.graylog.plugins.views.search.export.MessagesRequest;\n+import org.graylog.plugins.views.search.export.SimpleMessage;\n+import org.graylog.plugins.views.search.export.SimpleMessageChunk;\n+import org.graylog.plugins.views.search.searchtypes.Sort;\n+import org.graylog2.indexer.IndexHelper;\n+import org.graylog2.indexer.IndexMapping;\n+import org.graylog2.indexer.cluster.jest.JestUtils;\n+import org.graylog2.plugin.Message;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.function.Consumer;\n+\n+import static java.util.Objects.requireNonNull;\n+import static java.util.stream.Collectors.toCollection;\n+import static org.elasticsearch.index.query.QueryBuilders.boolQuery;\n+import static org.elasticsearch.index.query.QueryBuilders.matchAllQuery;\n+import static org.elasticsearch.index.query.QueryBuilders.queryStringQuery;\n+import static org.elasticsearch.index.query.QueryBuilders.termsQuery;\n+\n+public class ElasticsearchExportBackend implements ExportBackend {\n+    private static final Logger LOG = LoggerFactory.getLogger(ElasticsearchExportBackend.class);\n+\n+    private static final int DEFAULT_CHUNK_SIZE = 1000;\n+    private static final String TIEBREAKER_FIELD = \"gl2_message_id\";\n+\n+    private final JestClient jestClient;\n+    private final IndexLookup indexLookup;\n+\n+    @Inject\n+    public ElasticsearchExportBackend(JestClient jestClient, IndexLookup indexLookup) {\n+        this.jestClient = jestClient;\n+        this.indexLookup = indexLookup;\n+    }\n+\n+    @Override\n+    public void run(MessagesRequest request, Consumer<SimpleMessageChunk> chunkCollector) {\n+        request.ensureCompleteness();\n+\n+        fetchResults(request, chunkCollector);\n+    }\n+\n+    private void fetchResults(MessagesRequest request, Consumer<SimpleMessageChunk> chunkCollector) {\n+        Object[] searchAfterValues = null;\n+        boolean isFirstChunk = true;\n+\n+        while (true) {\n+            List<SearchResult.Hit<Map, Void>> hits = search(request, searchAfterValues);\n+\n+            if (hits.isEmpty()) {\n+                return;\n+            }\n+\n+            boolean success = publishChunk(chunkCollector, hits, request.fieldsInOrder().get(), isFirstChunk);\n+            if (!success) {\n+                return;\n+            }\n+\n+            searchAfterValues = lastHitSortFrom(hits);\n+            isFirstChunk = false;\n+        }\n+    }\n+\n+    private List<SearchResult.Hit<Map, Void>> search(MessagesRequest request, Object[] searchAfterValues) {\n+        Search search = buildSearchRequest(request, searchAfterValues);\n+\n+        SearchResult result = JestUtils.execute(jestClient, search, () -> \"Failed to execute Search After request\");\n+\n+        return result.getHits(Map.class, false);\n+    }\n+\n+    private Search buildSearchRequest(MessagesRequest request, Object[] searchAfterValues) {\n+        SearchSourceBuilder ssb = searchSourceBuilderFrom(request, searchAfterValues);\n+\n+        Set<String> indices = indicesFor(request);\n+\n+        return new Search.Builder(ssb.toString())\n+                .addType(IndexMapping.TYPE_MESSAGE)\n+                .allowNoIndices(false)\n+                .ignoreUnavailable(false)\n+                .addIndex(indices)\n+                .build();\n+    }\n+\n+    @SuppressWarnings(\"OptionalGetWithoutIsPresent\")\n+    private SearchSourceBuilder searchSourceBuilderFrom(MessagesRequest request, Object[] searchAfterValues) {\n+        QueryBuilder query = queryFrom(request);\n+\n+        SearchSourceBuilder ssb = new SearchSourceBuilder()\n+                .query(query)\n+                .size(request.chunkSize().orElse(DEFAULT_CHUNK_SIZE));\n+\n+        addSort(ssb, request.sort().get());\n+\n+        if (searchAfterValues != null) {\n+            ssb.searchAfter(searchAfterValues);\n+        }\n+        return ssb;\n+    }\n+\n+    @SuppressWarnings(\"OptionalGetWithoutIsPresent\")\n+    private QueryBuilder queryFrom(MessagesRequest request) {\n+        ElasticsearchQueryString backendQuery = (ElasticsearchQueryString) request.queryString().get();\n+\n+        QueryBuilder query = backendQuery.isEmpty() ?\n+                matchAllQuery() :\n+                queryStringQuery(backendQuery.queryString());//.allowLeadingWildcard(allowLeadingWildcardSearches);", "originalCommit": "41ca176aee268d0432b6fd8e03c88a66ccf98c33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MTQzNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r408971436", "bodyText": "\ud83d\ude2c", "author": "alex-konn", "createdAt": "2020-04-15T16:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk0NjYxMw=="}], "type": "inlineReview"}, {"oid": "a60e56daa0e10581628707f08723654b62cb0f1d", "url": "https://github.com/Graylog2/graylog2-server/commit/a60e56daa0e10581628707f08723654b62cb0f1d", "message": "Provide search execution state on CSV export", "committedDate": "2020-04-19T11:21:21Z", "type": "forcePushed"}, {"oid": "250386b297ae0df80ba407ee6d76dc9bb5d0d9cd", "url": "https://github.com/Graylog2/graylog2-server/commit/250386b297ae0df80ba407ee6d76dc9bb5d0d9cd", "message": "Fix integration test\n\n...to expect the corrected timestamp format", "committedDate": "2020-04-20T13:58:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0ODI5OQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r413648299", "bodyText": "Extracting the props makes it harder to see how the effective props look like. Instead we could leave the structure as before (with inline props next to the component) and do something like: const Component = allowOptionCreation ? CreatableSelect : ReactSelect; and render <Component ... later.", "author": "dennisoelkers", "createdAt": "2020-04-23T09:11:12Z", "path": "graylog2-web-interface/src/views/components/Select.jsx", "diffHunk": "@@ -115,24 +121,34 @@ const Select = ({ components, styles, ignoreCase = true, ignoreAccents = false,\n     valueContainer,\n   };\n   const filterOption = createFilter({ ignoreCase, ignoreAccents });\n+  const selectProps = {", "originalCommit": "0ae146dca6ac09747e2fe8148d11e5447ac9693a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzczMjQyNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r413732424", "bodyText": "Thanks, this is a very good suggestion.", "author": "linuspahl", "createdAt": "2020-04-23T11:21:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0ODI5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY1MzgzMQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r413653831", "bodyText": "Should we move this and the corresponding call for a search to the strategies as well?", "author": "dennisoelkers", "createdAt": "2020-04-23T09:19:11Z", "path": "graylog2-web-interface/src/views/components/searchbar/csvexport/startDownload.js", "diffHunk": "@@ -0,0 +1,64 @@\n+// @flow strict\n+import { Set } from 'immutable';\n+\n+import { exportSearchMessages, exportSearchTypeMessages, type ExportPayload } from 'util/MessagesExportUtils';\n+import StringUtils from 'util/StringUtils';\n+\n+import MessageSortConfig from 'views/logic/searchtypes/messages/MessageSortConfig';\n+import Query from 'views/logic/queries/Query';\n+import SortConfig from 'views/logic/aggregationbuilder/SortConfig';\n+import View from 'views/logic/views/View';\n+import Widget from 'views/logic/widgets/Widget';\n+import ViewTypeLabel from 'views/components/ViewTypeLabel';\n+import SearchExecutionState from 'views/logic/search/SearchExecutionState';\n+\n+const _exportOnDashboard = (defaultExportPayload: ExportPayload, searchType: any, searchId: string, filename: string) => {\n+  if (!searchType) {\n+    throw new Error('CSV exports on a dashboard require a selected widget!');\n+  }\n+  return exportSearchTypeMessages(defaultExportPayload, searchId, searchType.id, filename);\n+};\n+\n+const _exportOnSearchPage = (defaultExportPayload: ExportPayload, searchQueries: Set<Query>, searchType: ?any, searchId: string, filename: string) => {\n+  if (searchQueries.size !== 1) {\n+    throw new Error('Searches must only have a single query!');\n+  }\n+  if (searchType) {\n+    return exportSearchTypeMessages(defaultExportPayload, searchId, searchType.id, filename);\n+  }\n+  return exportSearchMessages(defaultExportPayload, searchId, filename);\n+};\n+\n+const startDownload = (view: View, executionState: SearchExecutionState, selectedWidget: ?Widget, selectedFields: { field: string }[], selectedSort: SortConfig[], limit: ?number) => {\n+  const defaultExportPayload = {\n+    execution_state: executionState,\n+    fields_in_order: selectedFields.map((field) => field.field),\n+    sort: selectedSort.map((sortConfig) => new MessageSortConfig(sortConfig.field, sortConfig.direction)),\n+    limit,\n+  };\n+  let filename = 'search-result';\n+  let searchType;\n+\n+  if (selectedWidget) {\n+    const widgetTitle = view.getWidgetTitleByWidget(selectedWidget);\n+    filename = `${widgetTitle}-${filename}`;\n+    searchType = view.getSearchTypeByWidgetId(selectedWidget.id);\n+  } else {\n+    const viewTitle = view.title || `Untitled ${ViewTypeLabel({ type: view.type, capitalize: true })}`;\n+    filename = `${viewTitle}-${filename}`;\n+  }\n+\n+  const filenameWithoutSpaces = StringUtils.replaceSpaces(filename, '-');\n+\n+  if (view.type === View.Type.Dashboard) {\n+    return _exportOnDashboard(defaultExportPayload, searchType, view.search.id, filenameWithoutSpaces);", "originalCommit": "129f0cad1811bf36655af50b23adbe3f3027585a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY1NDY5Mw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7709#discussion_r413654693", "bodyText": "We should import this as\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import React from 'react';\n          \n          \n            \n            import * as React from 'react';\n          \n      \n    \n    \n  \n\nSo we do not get only the default export.", "author": "dennisoelkers", "createdAt": "2020-04-23T09:20:26Z", "path": "graylog2-web-interface/src/views/components/searchbar/csvexport/CSVExportSettings.jsx", "diffHunk": "@@ -0,0 +1,107 @@\n+// @flow strict\n+import React from 'react';", "originalCommit": "129f0cad1811bf36655af50b23adbe3f3027585a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "13982ea56728c939bc76d8599b5ad73902996228", "url": "https://github.com/Graylog2/graylog2-server/commit/13982ea56728c939bc76d8599b5ad73902996228", "message": "Fix FetchProvider behaviour on unauthorized requests", "committedDate": "2020-04-23T09:40:40Z", "type": "forcePushed"}, {"oid": "cdd7ab291eef32b071908b6b95abe9d8d42f4b68", "url": "https://github.com/Graylog2/graylog2-server/commit/cdd7ab291eef32b071908b6b95abe9d8d42f4b68", "message": "Fix FetchProvider behaviour on unauthorized requests", "committedDate": "2020-04-23T10:20:32Z", "type": "forcePushed"}, {"oid": "b611c3d003bf67807288cc9766f53f261924c7a3", "url": "https://github.com/Graylog2/graylog2-server/commit/b611c3d003bf67807288cc9766f53f261924c7a3", "message": "Extend CSV export modal", "committedDate": "2020-04-23T14:27:28Z", "type": "commit"}, {"oid": "cf9d2567eadf890a18a949013ced8c0204edea58", "url": "https://github.com/Graylog2/graylog2-server/commit/cf9d2567eadf890a18a949013ced8c0204edea58", "message": "Disable widget csv export for every widget which is not a message list", "committedDate": "2020-04-23T14:27:29Z", "type": "commit"}, {"oid": "737b664744f019f0b8d9db72b068f8132d02a4c3", "url": "https://github.com/Graylog2/graylog2-server/commit/737b664744f019f0b8d9db72b068f8132d02a4c3", "message": "Cleanup code", "committedDate": "2020-04-23T14:27:29Z", "type": "commit"}, {"oid": "5f008a6df7e3ebf5e8150b108c2f324cfb39c061", "url": "https://github.com/Graylog2/graylog2-server/commit/5f008a6df7e3ebf5e8150b108c2f324cfb39c061", "message": "Add csv export button for dashboard actions menu and use view instead of view store in CSVExportModal", "committedDate": "2020-04-23T14:27:29Z", "type": "commit"}, {"oid": "4f5a9436fabcbeadc7f934a228497b7f594b4afb", "url": "https://github.com/Graylog2/graylog2-server/commit/4f5a9436fabcbeadc7f934a228497b7f594b4afb", "message": "Further code refactoring", "committedDate": "2020-04-23T14:27:30Z", "type": "commit"}, {"oid": "b24c4bd9ffb1977c22db3d345575ade66574282d", "url": "https://github.com/Graylog2/graylog2-server/commit/b24c4bd9ffb1977c22db3d345575ade66574282d", "message": "Creat separate component for sortable field select", "committedDate": "2020-04-23T14:27:30Z", "type": "commit"}, {"oid": "36f34ec74ed29b040d52882d25157832175623fe", "url": "https://github.com/Graylog2/graylog2-server/commit/36f34ec74ed29b040d52882d25157832175623fe", "message": "Simplify widget and title extraction", "committedDate": "2020-04-23T14:27:30Z", "type": "commit"}, {"oid": "3699b11628bffc207ba873ff117c921efe688cd9", "url": "https://github.com/Graylog2/graylog2-server/commit/3699b11628bffc207ba873ff117c921efe688cd9", "message": "Add separate API endpoints for new views export\n- Added MessagesResource\n- Added generic endpoint for search-type-independent results\n- Added search-type-specific endpoint. Tbd, if this is actually\n  needed for the first iteration. Will be thrown out, if not\n- Stubbed resulting CSV for now", "committedDate": "2020-04-23T14:27:31Z", "type": "commit"}, {"oid": "3aca805e67dece9510516ac0a7c31750f2aa2865", "url": "https://github.com/Graylog2/graylog2-server/commit/3aca805e67dece9510516ac0a7c31750f2aa2865", "message": "Split up modal steps and create separate components", "committedDate": "2020-04-23T14:27:31Z", "type": "commit"}, {"oid": "b0ec57c9e00ffec8330c190ba6e9b52fda4a7617", "url": "https://github.com/Graylog2/graylog2-server/commit/b0ec57c9e00ffec8330c190ba6e9b52fda4a7617", "message": "Enable audit events for MessagesResource", "committedDate": "2020-04-23T14:27:32Z", "type": "commit"}, {"oid": "c7213600162c2172cf2e073c0812552e75717b85", "url": "https://github.com/Graylog2/graylog2-server/commit/c7213600162c2172cf2e073c0812552e75717b85", "message": "Removed wrong import", "committedDate": "2020-04-23T14:27:32Z", "type": "commit"}, {"oid": "b578541d7ffbc4a77181a4beb76f3e65195ee92e", "url": "https://github.com/Graylog2/graylog2-server/commit/b578541d7ffbc4a77181a4beb76f3e65195ee92e", "message": "Improve description", "committedDate": "2020-04-23T14:27:33Z", "type": "commit"}, {"oid": "882889d56291a28cf7773149f007d64cedb82196", "url": "https://github.com/Graylog2/graylog2-server/commit/882889d56291a28cf7773149f007d64cedb82196", "message": "Refactor code style", "committedDate": "2020-04-23T14:27:33Z", "type": "commit"}, {"oid": "983f2a7ff7fe6cab2d7797cd3f69e8e0dd2e6b63", "url": "https://github.com/Graylog2/graylog2-server/commit/983f2a7ff7fe6cab2d7797cd3f69e8e0dd2e6b63", "message": "Add info about sort seelction", "committedDate": "2020-04-23T14:27:34Z", "type": "commit"}, {"oid": "b5463332eba82091d426281a5a545e0b169dcb55", "url": "https://github.com/Graylog2/graylog2-server/commit/b5463332eba82091d426281a5a545e0b169dcb55", "message": "Unify naming", "committedDate": "2020-04-23T14:27:34Z", "type": "commit"}, {"oid": "b8510319f6819e436cd7c275687c7e0afae350ef", "url": "https://github.com/Graylog2/graylog2-server/commit/b8510319f6819e436cd7c275687c7e0afae350ef", "message": "Create MessagesExportUtil for API calls on CSV export", "committedDate": "2020-04-23T14:27:35Z", "type": "commit"}, {"oid": "665a89c7b4bd5f7eec81b8b8f36eab53a4038a10", "url": "https://github.com/Graylog2/graylog2-server/commit/665a89c7b4bd5f7eec81b8b8f36eab53a4038a10", "message": "Use correct payload when exporting csv", "committedDate": "2020-04-23T14:27:36Z", "type": "commit"}, {"oid": "732c787ba4c40b9608df6a5c230da239dc832b27", "url": "https://github.com/Graylog2/graylog2-server/commit/732c787ba4c40b9608df6a5c230da239dc832b27", "message": "Implement correct url creation for message export", "committedDate": "2020-04-23T14:27:36Z", "type": "commit"}, {"oid": "619090319625a1cdcda520ab2c923b38073a6ee6", "url": "https://github.com/Graylog2/graylog2-server/commit/619090319625a1cdcda520ab2c923b38073a6ee6", "message": "Implement downloadjs and extend FetchProvider for file downloads", "committedDate": "2020-04-23T14:27:37Z", "type": "commit"}, {"oid": "2d3636fbe51aeb0f5f5f81c08b89fab9ba262cb6", "url": "https://github.com/Graylog2/graylog2-server/commit/2d3636fbe51aeb0f5f5f81c08b89fab9ba262cb6", "message": "Show info when no message list is existst on a dashboard", "committedDate": "2020-04-23T14:27:37Z", "type": "commit"}, {"oid": "e2819e7d3c44ef24b9a4e3beffd1621c7631a5a9", "url": "https://github.com/Graylog2/graylog2-server/commit/e2819e7d3c44ef24b9a4e3beffd1621c7631a5a9", "message": "Improve CSVExportModal code quality by implementing export strategies", "committedDate": "2020-04-23T14:27:38Z", "type": "commit"}, {"oid": "c7fda34b601b1335a26b15cd773bea4071a2bffe", "url": "https://github.com/Graylog2/graylog2-server/commit/c7fda34b601b1335a26b15cd773bea4071a2bffe", "message": "Rename fixedWidgetId prop to directExportWidgetId", "committedDate": "2020-04-23T14:27:39Z", "type": "commit"}, {"oid": "3e386c9fe87ece4565ad3138dec263efe638209a", "url": "https://github.com/Graylog2/graylog2-server/commit/3e386c9fe87ece4565ad3138dec263efe638209a", "message": "Add tests", "committedDate": "2020-04-23T14:27:39Z", "type": "commit"}, {"oid": "7eccc24c0dfa70e018a554bf23761d750b942ae3", "url": "https://github.com/Graylog2/graylog2-server/commit/7eccc24c0dfa70e018a554bf23761d750b942ae3", "message": "Sort imports", "committedDate": "2020-04-23T14:27:40Z", "type": "commit"}, {"oid": "fa41c602cd336ae051afb6a1d1945ede7c049eac", "url": "https://github.com/Graylog2/graylog2-server/commit/fa41c602cd336ae051afb6a1d1945ede7c049eac", "message": "Add tests for csv export download execution\n- Add mock for fetchFile in FetchProvider\n- Fix search type flow type definition by using string instead of String\n- Use lodash flatten instead of Array.prototype.flat() due to missing jest / jsdom support", "committedDate": "2020-04-23T14:27:41Z", "type": "commit"}, {"oid": "9d4e578127c9d0b3b4ee21b40e8d2d5de0b7df45", "url": "https://github.com/Graylog2/graylog2-server/commit/9d4e578127c9d0b3b4ee21b40e8d2d5de0b7df45", "message": "Disable download when no fields got selected", "committedDate": "2020-04-23T14:27:41Z", "type": "commit"}, {"oid": "b704945ddd57a6f7a11f6799b333ed9069f8fb80", "url": "https://github.com/Graylog2/graylog2-server/commit/b704945ddd57a6f7a11f6799b333ed9069f8fb80", "message": "Clean up CSVExportModal component by splitting the related logic", "committedDate": "2020-04-23T14:27:42Z", "type": "commit"}, {"oid": "fb98508bf478e2e754bcccf30f0dc703d6eecdb8", "url": "https://github.com/Graylog2/graylog2-server/commit/fb98508bf478e2e754bcccf30f0dc703d6eecdb8", "message": "Add flow-types stub for downloadjs", "committedDate": "2020-04-23T14:27:43Z", "type": "commit"}, {"oid": "98c618ae5bfbe59c16779baffaa06f37966b0272", "url": "https://github.com/Graylog2/graylog2-server/commit/98c618ae5bfbe59c16779baffaa06f37966b0272", "message": "Fix flow errors", "committedDate": "2020-04-23T14:27:43Z", "type": "commit"}, {"oid": "e800f382d1017f133894245b2e93b794224daf1a", "url": "https://github.com/Graylog2/graylog2-server/commit/e800f382d1017f133894245b2e93b794224daf1a", "message": "Add flow annotation for downloadjs stub", "committedDate": "2020-04-23T14:27:44Z", "type": "commit"}, {"oid": "468a35c6f5e156afca5096b8d9bc8f4d5ea4e631", "url": "https://github.com/Graylog2/graylog2-server/commit/468a35c6f5e156afca5096b8d9bc8f4d5ea4e631", "message": "Fix linter warnings", "committedDate": "2020-04-23T14:27:45Z", "type": "commit"}, {"oid": "7e5e9e77bc6f75154c78f4e8194608510b5286b8", "url": "https://github.com/Graylog2/graylog2-server/commit/7e5e9e77bc6f75154c78f4e8194608510b5286b8", "message": "Fix typo", "committedDate": "2020-04-23T14:27:45Z", "type": "commit"}, {"oid": "6a61552f15e47084c0818a84a759acd525ff513e", "url": "https://github.com/Graylog2/graylog2-server/commit/6a61552f15e47084c0818a84a759acd525ff513e", "message": "WIP: add dedicated ElasticsearchExportBackend\n\n- Added separate class for making the \"search after\" request\n  It doesn't actually use \"search after\" yet. Will be added next.\n  It might turn out to be better to integrate this with the big\n  ElasticsearchBackend of the views context, but I don't want to do\n  that from the start, because that would make getting started much\n  more difficult and I'm not sure that that's even a good idea.\n- Added default values for MessagesRequest\n- Added validation for completeness of MessagesRequest", "committedDate": "2020-04-23T14:27:46Z", "type": "commit"}, {"oid": "17e31208d1d7fe012c9184212ef7d51178acc6f1", "url": "https://github.com/Graylog2/graylog2-server/commit/17e31208d1d7fe012c9184212ef7d51178acc6f1", "message": "Continued implementing ElasticsearchExportBackend", "committedDate": "2020-04-23T14:27:47Z", "type": "commit"}, {"oid": "9e24e07d1a6f7140f5a4bf969598559b6bf49a70", "url": "https://github.com/Graylog2/graylog2-server/commit/9e24e07d1a6f7140f5a4bf969598559b6bf49a70", "message": "Use LinkedHashSet in MessagesRequest\n\n... to guarantee ordering of fields and sort", "committedDate": "2020-04-23T14:27:47Z", "type": "commit"}, {"oid": "7d908b5038357b215e312f6a7f096bd520e74050", "url": "https://github.com/Graylog2/graylog2-server/commit/7d908b5038357b215e312f6a7f096bd520e74050", "message": "JsonIgnore convenience getter on ElasticsearchQueryString", "committedDate": "2020-04-23T14:27:48Z", "type": "commit"}, {"oid": "f9165733d551bbbd3912f41fee60a7164e972f76", "url": "https://github.com/Graylog2/graylog2-server/commit/f9165733d551bbbd3912f41fee60a7164e972f76", "message": "Run \"search after\" queries asynchronously\n\n- Use Executor in MessagesResource\n- Forward chunks to ChunkedOutput via callbacks", "committedDate": "2020-04-23T14:27:49Z", "type": "commit"}, {"oid": "7ab8f98d1e8961c87a2c66c442e83991de77a370", "url": "https://github.com/Graylog2/graylog2-server/commit/7ab8f98d1e8961c87a2c66c442e83991de77a370", "message": "Add named ThreadFactoryBuilder\n\n...to properly name the resulting thread.", "committedDate": "2020-04-23T14:27:49Z", "type": "commit"}, {"oid": "d0f35a6a76f391bd151d189b87de8ecd78c3abac", "url": "https://github.com/Graylog2/graylog2-server/commit/d0f35a6a76f391bd151d189b87de8ecd78c3abac", "message": "Allow mocking async execution in MessagesResource\n\nto avoid flaky tests", "committedDate": "2020-04-23T14:27:50Z", "type": "commit"}, {"oid": "1cd771b558cdf41801d70fc706e03fb2de6386cf", "url": "https://github.com/Graylog2/graylog2-server/commit/1cd771b558cdf41801d70fc706e03fb2de6386cf", "message": "Fix merge conflict in package.json", "committedDate": "2020-04-23T14:27:50Z", "type": "commit"}, {"oid": "0b4cc4c47aafe8803d4c9341a2d227f57bc2e40c", "url": "https://github.com/Graylog2/graylog2-server/commit/0b4cc4c47aafe8803d4c9341a2d227f57bc2e40c", "message": "Remove font-awesome from package.json", "committedDate": "2020-04-23T14:27:51Z", "type": "commit"}, {"oid": "e252abea0a411f06fd0bfa1565454e57885f7a64", "url": "https://github.com/Graylog2/graylog2-server/commit/e252abea0a411f06fd0bfa1565454e57885f7a64", "message": "Some cleanup in ElasticsearchExportBackend", "committedDate": "2020-04-23T14:27:51Z", "type": "commit"}, {"oid": "26adad9568d800dc43f1571dd7fb57ba82bbb063", "url": "https://github.com/Graylog2/graylog2-server/commit/26adad9568d800dc43f1571dd7fb57ba82bbb063", "message": "Build MessagesRequest for export from Search", "committedDate": "2020-04-23T14:27:52Z", "type": "commit"}, {"oid": "3893ac8c63f9554e6bb562a6ca08ce4145df2fbd", "url": "https://github.com/Graylog2/graylog2-server/commit/3893ac8c63f9554e6bb562a6ca08ce4145df2fbd", "message": "Use additional query string in ElasticsearchExportBackend", "committedDate": "2020-04-23T14:27:52Z", "type": "commit"}, {"oid": "1e1b56826e42070e911f6637b7cb5544725b251f", "url": "https://github.com/Graylog2/graylog2-server/commit/1e1b56826e42070e911f6637b7cb5544725b251f", "message": "Require streams and fieldsInOrder to be specified", "committedDate": "2020-04-23T14:27:53Z", "type": "commit"}, {"oid": "acc53523cda7168b65b9748235adff54bbc35e63", "url": "https://github.com/Graylog2/graylog2-server/commit/acc53523cda7168b65b9748235adff54bbc35e63", "message": "Copy permission checks from SearchResource to MessagesResource\n\nWhile copying that code is certainly not ideal, I decided to hold off\non implementing a better solution until we have a better way to check\npermissions in general. Better to stick to one awkward way of doing things\nthan inventing another slightly-better-but-not-really-good variant that's only\nused in one place.", "committedDate": "2020-04-23T14:27:53Z", "type": "commit"}, {"oid": "f73782f5904daa2cd09a57ee19d3b3dc095ece9c", "url": "https://github.com/Graylog2/graylog2-server/commit/f73782f5904daa2cd09a57ee19d3b3dc095ece9c", "message": "Add default streams also for plain messages request", "committedDate": "2020-04-23T14:27:54Z", "type": "commit"}, {"oid": "4e123b67a883eb0ab524924eac4f7a836dc01c87", "url": "https://github.com/Graylog2/graylog2-server/commit/4e123b67a883eb0ab524924eac4f7a836dc01c87", "message": "Remove not needed CSVExportModal component, which is a leftover from the lest rebase", "committedDate": "2020-04-23T14:27:55Z", "type": "commit"}, {"oid": "dfc6ca6f9e2d929e365ac99b105023ce8e01c707", "url": "https://github.com/Graylog2/graylog2-server/commit/dfc6ca6f9e2d929e365ac99b105023ce8e01c707", "message": "Added endpoint with only search id", "committedDate": "2020-04-23T14:27:56Z", "type": "commit"}, {"oid": "5d5b40a0130c0680d2546dbb1a6f19725cf1f9a7", "url": "https://github.com/Graylog2/graylog2-server/commit/5d5b40a0130c0680d2546dbb1a6f19725cf1f9a7", "message": "Added missing license header", "committedDate": "2020-04-23T14:27:56Z", "type": "commit"}, {"oid": "9692f6a07af20ce4bddff2f45ce7f4eb1e1c6fb6", "url": "https://github.com/Graylog2/graylog2-server/commit/9692f6a07af20ce4bddff2f45ce7f4eb1e1c6fb6", "message": "Fix failing test", "committedDate": "2020-04-23T14:27:57Z", "type": "commit"}, {"oid": "fc87724f0e619601602787507f814f9ffc95e3a0", "url": "https://github.com/Graylog2/graylog2-server/commit/fc87724f0e619601602787507f814f9ffc95e3a0", "message": "Introduce SimpleMessage class instead of using plain strings", "committedDate": "2020-04-23T14:27:58Z", "type": "commit"}, {"oid": "aefb1d375fcdaee2b92b83a5594fdfe1c812b0a5", "url": "https://github.com/Graylog2/graylog2-server/commit/aefb1d375fcdaee2b92b83a5594fdfe1c812b0a5", "message": "Introduce collection class SimpleMessages", "committedDate": "2020-04-23T14:27:59Z", "type": "commit"}, {"oid": "84460f0525208f065ed523cb4b21fe498c4d20ad", "url": "https://github.com/Graylog2/graylog2-server/commit/84460f0525208f065ed523cb4b21fe498c4d20ad", "message": "Write response chunks as csv\n\n- Added a SimpleMessageChunkCsvWriter, which is a JAX-RS MessageBodyWriter,\n  similar to ScrollChunkWriter for the old export\n- Renamed SimpleMessages to SimpleMessageChunk", "committedDate": "2020-04-23T14:28:00Z", "type": "commit"}, {"oid": "13a49f8171733a8992bd2e23ea235ee60d0f1d8f", "url": "https://github.com/Graylog2/graylog2-server/commit/13a49f8171733a8992bd2e23ea235ee60d0f1d8f", "message": "Add charset to string construction in test\n\n...to satisfy forbiddenapis check", "committedDate": "2020-04-23T14:28:00Z", "type": "commit"}, {"oid": "010fe48e3cb9a021f95f653a8c186200828a008e", "url": "https://github.com/Graylog2/graylog2-server/commit/010fe48e3cb9a021f95f653a8c186200828a008e", "message": "Minor cleanup\n\n- Deleted unnecessary file\n- Filled in error message for Jest call in ElasticsearchExportBackend", "committedDate": "2020-04-23T14:28:01Z", "type": "commit"}, {"oid": "01a10f5f194d3e82c6f6d4c8e56ad677d68b6c84", "url": "https://github.com/Graylog2/graylog2-server/commit/01a10f5f194d3e82c6f6d4c8e56ad677d68b6c84", "message": "Extracted async run and creation of ChunkedOutput\n\n...to new class ChunkedRunner. This simplifies MessagesResource,\nadds a central place for error handling, and removes the necessity\nto close the output via an onDone callback passed down to\nElasticsearchExportBackend", "committedDate": "2020-04-23T14:28:02Z", "type": "commit"}, {"oid": "fca27f56922dac90992a7b0e9c3b4bd2020b075d", "url": "https://github.com/Graylog2/graylog2-server/commit/fca27f56922dac90992a7b0e9c3b4bd2020b075d", "message": "Allow overriding default chunk size from request", "committedDate": "2020-04-23T14:28:04Z", "type": "commit"}, {"oid": "3fd58fec1c76159be333ceefcb9c0c8951f017ea", "url": "https://github.com/Graylog2/graylog2-server/commit/3fd58fec1c76159be333ceefcb9c0c8951f017ea", "message": "Added integration test", "committedDate": "2020-04-23T14:28:06Z", "type": "commit"}, {"oid": "01b6a3d354959107cbe342eccbbf802847179316", "url": "https://github.com/Graylog2/graylog2-server/commit/01b6a3d354959107cbe342eccbbf802847179316", "message": "Remove yarn-error.log", "committedDate": "2020-04-23T14:28:07Z", "type": "commit"}, {"oid": "ea7763a071cf74f493ad0b0ce4e97d373656fc7e", "url": "https://github.com/Graylog2/graylog2-server/commit/ea7763a071cf74f493ad0b0ce4e97d373656fc7e", "message": "Fix yarn.lock conflict", "committedDate": "2020-04-23T14:28:09Z", "type": "commit"}, {"oid": "c9970c7eca223c9012abb9c3c4574438141e8407", "url": "https://github.com/Graylog2/graylog2-server/commit/c9970c7eca223c9012abb9c3c4574438141e8407", "message": "Use search specific endpoint to export all messages of a search", "committedDate": "2020-04-23T14:28:10Z", "type": "commit"}, {"oid": "2867004e759ac58106eee839d986457c448f9ba2", "url": "https://github.com/Graylog2/graylog2-server/commit/2867004e759ac58106eee839d986457c448f9ba2", "message": "Add basic decorators support for export\n\n- Added interface ChunkDecorator, which is used by MessagesExporter to apply decorators\n- Added implementation LegacyChunkDecorator to encapsulate the current decorators logic.", "committedDate": "2020-04-23T14:28:12Z", "type": "commit"}, {"oid": "13431a64526717c33704b5fceced49ec8434f809", "url": "https://github.com/Graylog2/graylog2-server/commit/13431a64526717c33704b5fceced49ec8434f809", "message": "Add basic decorators support for export\n\n- Added interface ChunkDecorator, which is used by MessagesExporter to apply decorators\n- Added implementation LegacyChunkDecorator to encapsulate the current decorators logic.\n- Extracted LegacyDecoratorProcessor from ESMessageList for reuse", "committedDate": "2020-04-23T14:28:13Z", "type": "commit"}, {"oid": "4b7c2f3b0eb715c311f38699077ce7da9c55f4bd", "url": "https://github.com/Graylog2/graylog2-server/commit/4b7c2f3b0eb715c311f38699077ce7da9c55f4bd", "message": "Add index and _id to SimpleMessage for legacy decorator support\n\nThe old decorators implementation relies on an _id field and the the index name to map decorated messages to the undecorated original", "committedDate": "2020-04-23T14:28:15Z", "type": "commit"}, {"oid": "6726f5e18fd4312e1e010a8437dd1e5111dac430", "url": "https://github.com/Graylog2/graylog2-server/commit/6726f5e18fd4312e1e010a8437dd1e5111dac430", "message": "Set additional fields on SearchResponse\n\nMake a best effort to set the non-message fields on SearchResponse. This is not necessary for our own decorators, but users might use their own, which rely on these fields.", "committedDate": "2020-04-23T14:28:16Z", "type": "commit"}, {"oid": "ed090ef825ee43cb773378ffea88ec1c0121b889", "url": "https://github.com/Graylog2/graylog2-server/commit/ed090ef825ee43cb773378ffea88ec1c0121b889", "message": "Show loading spinner after starting CSV export", "committedDate": "2020-04-23T14:28:17Z", "type": "commit"}, {"oid": "9c6e25e0331599e8609ace4215f6b881e49ee6f0", "url": "https://github.com/Graylog2/graylog2-server/commit/9c6e25e0331599e8609ace4215f6b881e49ee6f0", "message": "Improve loading indicator code style", "committedDate": "2020-04-23T14:28:18Z", "type": "commit"}, {"oid": "a33cb671d93ec7a8724d645f5fb36666964b6a6b", "url": "https://github.com/Graylog2/graylog2-server/commit/a33cb671d93ec7a8724d645f5fb36666964b6a6b", "message": "Show loading spinner after starting CSV export", "committedDate": "2020-04-23T14:28:19Z", "type": "commit"}, {"oid": "8e5ad1dca5266d1e2129b560c44a21ea2b8ad26e", "url": "https://github.com/Graylog2/graylog2-server/commit/8e5ad1dca5266d1e2129b560c44a21ea2b8ad26e", "message": "Add method for view to get search type by widget id", "committedDate": "2020-04-23T14:28:20Z", "type": "commit"}, {"oid": "eb5fd4b7e60ffc471934c448c7b89046ef2690f1", "url": "https://github.com/Graylog2/graylog2-server/commit/eb5fd4b7e60ffc471934c448c7b89046ef2690f1", "message": "Change sort input description", "committedDate": "2020-04-23T14:28:21Z", "type": "commit"}, {"oid": "a54273c04bedfe136b7c935fd5e72efeb83c99de", "url": "https://github.com/Graylog2/graylog2-server/commit/a54273c04bedfe136b7c935fd5e72efeb83c99de", "message": "Remove _id field for asserts in ElasticsearchExportBackendIT", "committedDate": "2020-04-23T14:28:22Z", "type": "commit"}, {"oid": "f419ce84fc329dcced26bb3f80761903991fad27", "url": "https://github.com/Graylog2/graylog2-server/commit/f419ce84fc329dcced26bb3f80761903991fad27", "message": "Simplified setting defaults on MessagesRequest\n\nRemoved custom validation for now and will add it back where it makes sense.", "committedDate": "2020-04-23T14:28:23Z", "type": "commit"}, {"oid": "a9733df59ae55bccb810be53a83fd67ec5e1000e", "url": "https://github.com/Graylog2/graylog2-server/commit/a9733df59ae55bccb810be53a83fd67ec5e1000e", "message": "Add @NotEmpty validation where it makes sense for\n\n- MessagesRequest#fieldsInOrder (default will be applied if null)\n- MessagesRequest#sort (default will be applied if null)\n- ResultFormat#fieldsInOrder (default will be applied if null)", "committedDate": "2020-04-23T14:28:24Z", "type": "commit"}, {"oid": "8b3ae53264612df97b1bcf7e41605209fce6bab6", "url": "https://github.com/Graylog2/graylog2-server/commit/8b3ae53264612df97b1bcf7e41605209fce6bab6", "message": "Respect allow_leading_wildcard_searches config\n\n- Injected config value in ElasticsearchExportBackend\n- Extracted shard error parsing from ElasticsearchBackend\n  to JestUtils for reuse\n- Added JestWrapper instead of using JestUtils in\n  ElasticsearchExportBackend to avoid static method calls\n  in tests, which complicate mocking", "committedDate": "2020-04-23T14:28:25Z", "type": "commit"}, {"oid": "a4687886beb583ceedaa17f63c22c716697c1279", "url": "https://github.com/Graylog2/graylog2-server/commit/a4687886beb583ceedaa17f63c22c716697c1279", "message": "Small cleanup", "committedDate": "2020-04-23T14:28:26Z", "type": "commit"}, {"oid": "ba51c78b42c92d5c39ca6c409b3ec74d69d3a94a", "url": "https://github.com/Graylog2/graylog2-server/commit/ba51c78b42c92d5c39ca6c409b3ec74d69d3a94a", "message": "Add parameter support\n\n- Added wrapper class QueryStringDecorator for use in MessagesExporter\n- Parameters are resolved using a stubbed `SearchJob`. The map of QueryResults for use only in QueryReferenceParameters is left empty, because we decided to get rid of QueryReferenceParameters completely. Thank goodness. That would have been an even bigger mess.\n- The ResultFormat API parameter can now also contain an execution state, equivalent to what's used for search execution. That's where parameter values come in. (It's also used to parse global overrides from dashboards - something we had overlooked so far).", "committedDate": "2020-04-23T14:28:26Z", "type": "commit"}, {"oid": "253e0ac3524bade3312ec12a04653ee971eee8ec", "url": "https://github.com/Graylog2/graylog2-server/commit/253e0ac3524bade3312ec12a04653ee971eee8ec", "message": "Add missing license header", "committedDate": "2020-04-23T14:28:27Z", "type": "commit"}, {"oid": "3eb940ffcbad405b62fe725fbfe599bba98d29af", "url": "https://github.com/Graylog2/graylog2-server/commit/3eb940ffcbad405b62fe725fbfe599bba98d29af", "message": "Fix failing tests\n\n...by correctly mocking QueryStringDecorator in MessagesExporterTest", "committedDate": "2020-04-23T14:28:28Z", "type": "commit"}, {"oid": "e41d2b30394f8850a1f99b3cbc1a24bc9836b112", "url": "https://github.com/Graylog2/graylog2-server/commit/e41d2b30394f8850a1f99b3cbc1a24bc9836b112", "message": "Add limit parameter", "committedDate": "2020-04-23T14:28:29Z", "type": "commit"}, {"oid": "488309cc2cc8ae36e2bee8eb9d10d81aefb3c957", "url": "https://github.com/Graylog2/graylog2-server/commit/488309cc2cc8ae36e2bee8eb9d10d81aefb3c957", "message": "Fix sloppy method name in ChunkedRunner", "committedDate": "2020-04-23T14:28:29Z", "type": "commit"}, {"oid": "270a8efd396f92885aaad2c925680a1ca500713b", "url": "https://github.com/Graylog2/graylog2-server/commit/270a8efd396f92885aaad2c925680a1ca500713b", "message": "Trim string in ElasticsearchQueryString.isEmpty", "committedDate": "2020-04-23T14:28:30Z", "type": "commit"}, {"oid": "905eb7146493b83284774700190bea14e85552e5", "url": "https://github.com/Graylog2/graylog2-server/commit/905eb7146493b83284774700190bea14e85552e5", "message": "Use `LinkedHashSetUtil::linkedHashSetOf` in more places", "committedDate": "2020-04-23T14:28:31Z", "type": "commit"}, {"oid": "042d5452dd942a5197fe0e85b15539611b5273cd", "url": "https://github.com/Graylog2/graylog2-server/commit/042d5452dd942a5197fe0e85b15539611b5273cd", "message": "Reuse constant Message.FIELD_GL2_MESSAGE_ID", "committedDate": "2020-04-23T14:28:32Z", "type": "commit"}, {"oid": "d646fae948ac3a5106c658df904acfe022151c1f", "url": "https://github.com/Graylog2/graylog2-server/commit/d646fae948ac3a5106c658df904acfe022151c1f", "message": "Add limit input for CSV export modal", "committedDate": "2020-04-23T14:28:32Z", "type": "commit"}, {"oid": "277919dce9f6e1ea76d4328eb1e5e7eb31408a58", "url": "https://github.com/Graylog2/graylog2-server/commit/277919dce9f6e1ea76d4328eb1e5e7eb31408a58", "message": "Provide search execution state on CSV export", "committedDate": "2020-04-23T14:28:33Z", "type": "commit"}, {"oid": "8b59911a6ab4a67b3c5a0b1891f010ba59d015a9", "url": "https://github.com/Graylog2/graylog2-server/commit/8b59911a6ab4a67b3c5a0b1891f010ba59d015a9", "message": "Adjust limit description", "committedDate": "2020-04-23T14:28:33Z", "type": "commit"}, {"oid": "384bd8c508fd301925a72639de445b1f35db189a", "url": "https://github.com/Graylog2/graylog2-server/commit/384bd8c508fd301925a72639de445b1f35db189a", "message": "Refactor CSVExport modal test structure", "committedDate": "2020-04-23T14:28:34Z", "type": "commit"}, {"oid": "4aeab61e304aa62e34dc66c75aca34d49adbdfea", "url": "https://github.com/Graylog2/graylog2-server/commit/4aeab61e304aa62e34dc66c75aca34d49adbdfea", "message": "Test if search execution state is being provided on export", "committedDate": "2020-04-23T14:28:35Z", "type": "commit"}, {"oid": "05183cd317a0f2f8aa55fd7bedc00aca2c818386", "url": "https://github.com/Graylog2/graylog2-server/commit/05183cd317a0f2f8aa55fd7bedc00aca2c818386", "message": "Use selected widget or view title as filename", "committedDate": "2020-04-23T14:28:36Z", "type": "commit"}]}