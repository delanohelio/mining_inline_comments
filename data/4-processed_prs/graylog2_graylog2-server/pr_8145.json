{"pr_number": 8145, "pr_title": "Add input selection for StreamRuleForm", "pr_createdAt": "2020-05-18T11:01:14Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8145", "timeline": [{"oid": "94981df0805ad7e8607d435b6b51078e6e044bc4", "url": "https://github.com/Graylog2/graylog2-server/commit/94981df0805ad7e8607d435b6b51078e6e044bc4", "message": "Fix web linter", "committedDate": "2020-05-18T13:29:34Z", "type": "forcePushed"}, {"oid": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "url": "https://github.com/Graylog2/graylog2-server/commit/3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "message": "Add validation for selected input", "committedDate": "2020-06-08T14:00:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MDQyNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r446860426", "bodyText": "IMO we can do a case-insensitive check in here, as afaics input IDs should be unique regarding the case.", "author": "dennisoelkers", "createdAt": "2020-06-29T08:34:14Z", "path": "graylog2-server/src/main/java/org/graylog2/streams/matchers/MatchInput.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.streams.matchers;\n+\n+import org.graylog2.plugin.Message;\n+import org.graylog2.plugin.streams.StreamRule;\n+\n+public class MatchInput implements StreamRuleMatcher {\n+\n+    @Override\n+    public boolean match(Message msg, StreamRule rule) {\n+       if(msg.getField(Message.FIELD_GL2_SOURCE_INPUT) == null) {\n+           return rule.getInverted();\n+       }\n+        final String value = msg.getField(Message.FIELD_GL2_SOURCE_INPUT).toString();\n+        return rule.getInverted() ^ value.trim().equals(rule.getValue());", "originalCommit": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MTIxNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r446861214", "bodyText": "The rules list should be ordered by matching complexity of the rules (ascending), so the match input rules should be before or after exactRules.", "author": "dennisoelkers", "createdAt": "2020-06-29T08:35:35Z", "path": "graylog2-server/src/main/java/org/graylog2/streams/StreamRouterEngine.java", "diffHunk": "@@ -135,6 +139,7 @@ public StreamRouterEngine(@Assisted List<Stream> streams,\n         this.rulesList.addAll(smallerRules);\n         this.rulesList.addAll(containsRules);\n         this.rulesList.addAll(regexRules);\n+        this.rulesList.addAll(matchInputRules);", "originalCommit": "3429f4bf2ceb5348a0db5011c3456dd11104b6e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2MzUwOQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r448863509", "bodyText": "I moved it below contains rule. Since it is just that.", "author": "kmerz", "createdAt": "2020-07-02T09:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MTIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NTM1MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r451395350", "bodyText": "It should be after the exactRules, as it does not do a contains check, but an equals check.", "author": "dennisoelkers", "createdAt": "2020-07-08T09:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MTIxNA=="}], "type": "inlineReview"}, {"oid": "7c8e8ade7024201c8fb363da04a49b49deff1f6d", "url": "https://github.com/Graylog2/graylog2-server/commit/7c8e8ade7024201c8fb363da04a49b49deff1f6d", "message": "Fix suggestions from @dennisoelkers", "committedDate": "2020-07-02T09:19:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NDk1MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r451394950", "bodyText": "The naming scheme for matchers is <Type>Matcher, so it should be InputMatcher for this one.", "author": "dennisoelkers", "createdAt": "2020-07-08T09:05:03Z", "path": "graylog2-server/src/main/java/org/graylog2/streams/matchers/MatchInput.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.streams.matchers;\n+\n+import org.graylog2.plugin.Message;\n+import org.graylog2.plugin.streams.StreamRule;\n+\n+public class MatchInput implements StreamRuleMatcher {", "originalCommit": "b17c069d4eae077bbb372bbaca49adac1a612646", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NjUyNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r451396524", "bodyText": "Instead of message-id-... we should use input-id-... in the tests to make the intention clearer.", "author": "dennisoelkers", "createdAt": "2020-07-08T09:07:46Z", "path": "graylog2-server/src/test/java/org/graylog2/streams/matchers/MatchInputTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog2.streams.matchers;\n+\n+import org.graylog2.plugin.Message;\n+import org.graylog2.plugin.streams.StreamRule;\n+import org.graylog2.plugin.streams.StreamRuleType;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class MatchInputTest extends MatcherTest {\n+\n+    @Test\n+    public void testSuccessfulMatch() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-beef\");\n+\n+        Message msg = getSampleMessage();\n+        msg.addField(Message.FIELD_GL2_SOURCE_INPUT, \"message-id-beef\");\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertTrue(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testUnsuccessfulMatch() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-dead\");\n+\n+        Message msg = getSampleMessage();\n+        msg.addField(Message.FIELD_GL2_SOURCE_INPUT, \"message-id-beef\");\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertFalse(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testUnsuccessfulMatchWhenMissing() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-dead\");\n+\n+        Message msg = getSampleMessage();\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertFalse(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testSuccessfulMatchInverted() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-beef\");\n+        rule.setInverted(true);\n+\n+        Message msg = getSampleMessage();\n+        msg.addField(Message.FIELD_GL2_SOURCE_INPUT, \"message-id-beef\");\n+\n+        StreamRuleMatcher matcher = getMatcher(rule);\n+        assertFalse(matcher.match(msg, rule));\n+    }\n+\n+    @Test\n+    public void testUnsuccessfulMatchInverted() {\n+        StreamRule rule = getSampleRule();\n+        rule.setValue(\"message-id-dead\");", "originalCommit": "b17c069d4eae077bbb372bbaca49adac1a612646", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "917f2b2b1fa709129d482d798df0d3b95716b9ce", "url": "https://github.com/Graylog2/graylog2-server/commit/917f2b2b1fa709129d482d798df0d3b95716b9ce", "message": "Fix really good annotations from @dennisoelkers", "committedDate": "2020-07-09T17:34:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTIxNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454311215", "bodyText": "The function name is giving the wrong impression of what it's doing. It should be something like findInput.", "author": "dennisoelkers", "createdAt": "2020-07-14T12:14:13Z", "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -23,7 +20,21 @@ class HumanReadableStreamRule extends React.Component {\n     return undefined;\n   };\n \n+  _inputName = (inputId) => {", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxNDY1Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454314657", "bodyText": "Right now, if the input does not exist/is not started, only the id is shown. IMO we should also show an indicator, something like <deleted input>, like we do in message details.", "author": "dennisoelkers", "createdAt": "2020-07-14T12:20:40Z", "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -23,7 +20,21 @@ class HumanReadableStreamRule extends React.Component {\n     return undefined;\n   };\n \n+  _inputName = (inputId) => {\n+    const { inputs } = this.props;\n+\n+    return inputs.find((input) => input.id === inputId);\n+  }\n+\n   _formatRuleValue = (streamRule) => {\n+    if (String(streamRule.type) === String(this.MATCH_INPUT)) {\n+      const input = this._inputName(streamRule.value);\n+\n+      if (input) {\n+        return `${input.title} (${input.name}: ${input.id})`;\n+      }", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1MjI4OQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r455552289", "bodyText": "Best idea ever! Now you can remove the rules with deleted input!", "author": "kmerz", "createdAt": "2020-07-16T06:59:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxNDY1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTQ3NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335475", "bodyText": "We do this String coercion a few times, not sure if it's worth doing once and setting as a const then comparing throughout the code?", "author": "kyleknighted", "createdAt": "2020-07-14T12:56:38Z", "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -40,6 +51,10 @@ class HumanReadableStreamRule extends React.Component {\n       return streamRule.field;\n     }\n \n+    if (String(streamRule.type) === String(this.MATCH_INPUT)) {", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTYwNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335604", "bodyText": "Is it possible to use shape here?", "author": "kyleknighted", "createdAt": "2020-07-14T12:56:52Z", "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -63,4 +78,14 @@ class HumanReadableStreamRule extends React.Component {\n   }\n }\n \n+HumanReadableStreamRule.propTypes = {\n+  streamRule: PropTypes.object.isRequired,", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTY4NA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335684", "bodyText": "Is it possible to use arrayOf here?", "author": "kyleknighted", "createdAt": "2020-07-14T12:57:01Z", "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -63,4 +78,14 @@ class HumanReadableStreamRule extends React.Component {\n   }\n }\n \n+HumanReadableStreamRule.propTypes = {\n+  streamRule: PropTypes.object.isRequired,\n+  streamRuleTypes: PropTypes.array.isRequired,", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNTgyNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454335826", "bodyText": "Is it possible to use arrayOf here?", "author": "kyleknighted", "createdAt": "2020-07-14T12:57:16Z", "path": "graylog2-web-interface/src/components/streamrules/HumanReadableStreamRule.jsx", "diffHunk": "@@ -63,4 +78,14 @@ class HumanReadableStreamRule extends React.Component {\n   }\n }\n \n+HumanReadableStreamRule.propTypes = {\n+  streamRule: PropTypes.object.isRequired,\n+  streamRuleTypes: PropTypes.array.isRequired,\n+  inputs: PropTypes.array,", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzNzMzNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454337335", "bodyText": "Is it possible for this to be arrayOf?", "author": "kyleknighted", "createdAt": "2020-07-14T12:59:40Z", "path": "graylog2-web-interface/src/components/streamrules/StreamRuleForm.jsx", "diffHunk": "@@ -129,10 +244,10 @@ StreamRuleForm.propTypes = {\n   streamRule: PropTypes.object,\n   streamRuleTypes: PropTypes.array.isRequired,\n   title: PropTypes.string.isRequired,\n+  inputs: PropTypes.array,", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMzODk0Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454338946", "bodyText": "I think constructor needs to pass props to super or else it could lead to bugs\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              constructor() {\n          \n          \n            \n                super();\n          \n          \n            \n              constructor(props) {\n          \n          \n            \n                super(props);", "author": "kyleknighted", "createdAt": "2020-07-14T13:02:29Z", "path": "graylog2-web-interface/src/components/streamrules/StreamRulesEditor.jsx", "diffHunk": "@@ -46,7 +46,13 @@ class StreamRulesEditor extends React.Component {\n     index: '',\n   }\n \n-  state = {};\n+  constructor() {\n+    super();", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0MDA0Mg==", "url": "https://github.com/Graylog2/graylog2-server/pull/8145#discussion_r454340042", "bodyText": "Could we use components/bootstrap/BootstrapModalConfirm.jsx instead of window.confirm?", "author": "kyleknighted", "createdAt": "2020-07-14T13:04:13Z", "path": "graylog2-web-interface/src/components/streams/Stream.jsx", "diffHunk": "@@ -78,10 +78,19 @@ class Stream extends React.Component {\n \n     this.state = {\n       loading: false,\n+      showStreamRuleForm: false,\n     };\n   }\n \n-  _onDelete = (stream) => {\n+  _closeStreamRuleForm = () => {\n+    this.setState({ showStreamRuleForm: false });\n+  };\n+\n+  _openStreamRuleForm = () => {\n+    this.setState({ showStreamRuleForm: true });\n+  };\n+\n+  _onDelete= (stream) => {\n     // eslint-disable-next-line no-alert\n     if (window.confirm('Do you really want to remove this stream?')) {", "originalCommit": "6288af01bcc2d3b0585116d3022f9de97c7e52ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7b759aa8c72efeea5a3411dce8f0f65a6fc2688c", "url": "https://github.com/Graylog2/graylog2-server/commit/7b759aa8c72efeea5a3411dce8f0f65a6fc2688c", "message": "Add backend logic to match streams based on an input", "committedDate": "2020-07-16T06:53:32Z", "type": "commit"}, {"oid": "ea068a22762629a3ec2e422ae057750e998758da", "url": "https://github.com/Graylog2/graylog2-server/commit/ea068a22762629a3ec2e422ae057750e998758da", "message": "Add frontend logic and add fixes to backend", "committedDate": "2020-07-16T06:53:32Z", "type": "commit"}, {"oid": "51fdb921e5060226ebfc4a0df32767533de4ba5d", "url": "https://github.com/Graylog2/graylog2-server/commit/51fdb921e5060226ebfc4a0df32767533de4ba5d", "message": "Add MatchInput tests", "committedDate": "2020-07-16T06:53:33Z", "type": "commit"}, {"oid": "f2fc1b2b5ada86ae5fe0b587368a15018329033b", "url": "https://github.com/Graylog2/graylog2-server/commit/f2fc1b2b5ada86ae5fe0b587368a15018329033b", "message": "Add flow annotation", "committedDate": "2020-07-16T06:53:33Z", "type": "commit"}, {"oid": "55508c61eb0ecaaf1b97d4b74d6e69bf8830cef5", "url": "https://github.com/Graylog2/graylog2-server/commit/55508c61eb0ecaaf1b97d4b74d6e69bf8830cef5", "message": "Add some basic test", "committedDate": "2020-07-16T06:53:33Z", "type": "commit"}, {"oid": "89a7d60a081b936d24b5d1336c8a8f3aec0f2626", "url": "https://github.com/Graylog2/graylog2-server/commit/89a7d60a081b936d24b5d1336c8a8f3aec0f2626", "message": "Add missing license headers", "committedDate": "2020-07-16T06:53:34Z", "type": "commit"}, {"oid": "7ffc170d71f9d040e8a104315ec3be22f22b362f", "url": "https://github.com/Graylog2/graylog2-server/commit/7ffc170d71f9d040e8a104315ec3be22f22b362f", "message": "Fix web linter", "committedDate": "2020-07-16T06:53:34Z", "type": "commit"}, {"oid": "b88f54388fe0de932e5246b783c7d64405383dfb", "url": "https://github.com/Graylog2/graylog2-server/commit/b88f54388fe0de932e5246b783c7d64405383dfb", "message": "Fix human readable stream rule", "committedDate": "2020-07-16T06:53:34Z", "type": "commit"}, {"oid": "7797f37e7dc1aeb01439e03491524fc613bd2619", "url": "https://github.com/Graylog2/graylog2-server/commit/7797f37e7dc1aeb01439e03491524fc613bd2619", "message": "Add validation for selected input", "committedDate": "2020-07-16T06:53:35Z", "type": "commit"}, {"oid": "7bc467c32e0731a32d824061edb84456a25358da", "url": "https://github.com/Graylog2/graylog2-server/commit/7bc467c32e0731a32d824061edb84456a25358da", "message": "Fix suggestions from @dennisoelkers", "committedDate": "2020-07-16T06:53:35Z", "type": "commit"}, {"oid": "a0110a880f7b9bf547717d1061e865a3fcc1ced8", "url": "https://github.com/Graylog2/graylog2-server/commit/a0110a880f7b9bf547717d1061e865a3fcc1ced8", "message": "Fix linter warnings", "committedDate": "2020-07-16T06:53:35Z", "type": "commit"}, {"oid": "a76a51e8acd1f1e9975aa87cb17a3d1f8a106972", "url": "https://github.com/Graylog2/graylog2-server/commit/a76a51e8acd1f1e9975aa87cb17a3d1f8a106972", "message": "Fix linter and build", "committedDate": "2020-07-16T06:53:36Z", "type": "commit"}, {"oid": "cacee30e33cb34ea1727f1c97f6c2f98bb48b7f1", "url": "https://github.com/Graylog2/graylog2-server/commit/cacee30e33cb34ea1727f1c97f6c2f98bb48b7f1", "message": "Fix linter warning", "committedDate": "2020-07-16T06:53:36Z", "type": "commit"}, {"oid": "459db861e4cc9a364c57b6fd61e8279e562a87b9", "url": "https://github.com/Graylog2/graylog2-server/commit/459db861e4cc9a364c57b6fd61e8279e562a87b9", "message": "Fix snapshot tests", "committedDate": "2020-07-16T06:53:36Z", "type": "commit"}, {"oid": "6d55b6558d98c1c9842d1d6bc900364830283194", "url": "https://github.com/Graylog2/graylog2-server/commit/6d55b6558d98c1c9842d1d6bc900364830283194", "message": "Fix really good annotations from @dennisoelkers", "committedDate": "2020-07-16T06:53:37Z", "type": "commit"}, {"oid": "6609946c340fa3cc9b1e985b61fd3ca1f6da7ce8", "url": "https://github.com/Graylog2/graylog2-server/commit/6609946c340fa3cc9b1e985b61fd3ca1f6da7ce8", "message": "Fix snapshot tests", "committedDate": "2020-07-16T06:53:37Z", "type": "commit"}, {"oid": "ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "url": "https://github.com/Graylog2/graylog2-server/commit/ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "message": "Fix annotations from @dennisoelkers", "committedDate": "2020-07-16T07:03:28Z", "type": "commit"}, {"oid": "ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "url": "https://github.com/Graylog2/graylog2-server/commit/ffd7f12ae9bb842f2e5d8bffb5edea869a4a2035", "message": "Fix annotations from @dennisoelkers", "committedDate": "2020-07-16T07:03:28Z", "type": "forcePushed"}, {"oid": "4b31bc4881b545aa707b98da596ebbf79df0abeb", "url": "https://github.com/Graylog2/graylog2-server/commit/4b31bc4881b545aa707b98da596ebbf79df0abeb", "message": "Update snapshots", "committedDate": "2020-07-16T07:44:39Z", "type": "commit"}, {"oid": "1201868e8b4aecb2e4e82fc402bdb2bc2886325c", "url": "https://github.com/Graylog2/graylog2-server/commit/1201868e8b4aecb2e4e82fc402bdb2bc2886325c", "message": "Update graylog2-web-interface/src/components/streamrules/StreamRulesEditor.jsx\n\nCo-authored-by: Kyle Knight <kyle@graylog.com>", "committedDate": "2020-07-16T07:47:52Z", "type": "commit"}]}