{"pr_number": 7177, "pr_title": "Synchronize timerange & query with URL on search page.", "pr_createdAt": "2020-01-14T13:13:09Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7177", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5OTI3Mg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7177#discussion_r366399272", "bodyText": "Out of interest, is there a reason you are checking for the first query here, but take it for granted in BindSearchParamsFromQuery.js?", "author": "linuspahl", "createdAt": "2020-01-14T15:20:53Z", "path": "graylog2-web-interface/src/views/hooks/SyncWithQueryParameters.js", "diffHunk": "@@ -0,0 +1,53 @@\n+// @flow strict\n+import { useEffect } from 'react';\n+import URI from 'urijs';\n+import history from 'util/History';\n+\n+import { ViewStore } from 'views/stores/ViewStore';\n+import View from 'views/logic/views/View';\n+import { QueriesActions } from 'views/actions/QueriesActions';\n+\n+const useActionListeners = (actions, callback, dependencies) => {\n+  useEffect(() => {\n+    const unsubscribes = actions.map(action => action.listen(callback));\n+    return () => unsubscribes.forEach(unsubscribe => unsubscribe());\n+  }, dependencies);\n+};\n+\n+const extractTimerangeParams = (timerange) => {\n+  const { type } = timerange;\n+  const result = { rangetype: type };\n+\n+  switch (type) {\n+    case 'relative': return Object.entries({ ...result, relative: timerange.range });\n+    case 'keyword': return Object.entries({ ...result, keyword: timerange.keyword });\n+    case 'absolute': return Object.entries({ ...result, from: timerange.from, to: timerange.to });\n+    default: return Object.entries(result);\n+  }\n+};\n+\n+export const syncWithQueryParameters = (query: string) => {\n+  const { view } = ViewStore.getInitialState() || {};\n+  if (view && view.type === View.Type.Search) {\n+    const firstQuery = view.search.queries.first();\n+    if (firstQuery) {", "originalCommit": "a1b3ca88006f5f4eed196ec07c808b71c5be4957", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyOTA2NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7177#discussion_r366929065", "bodyText": "Not really. Added the check to SyncWithQueryParameters too.", "author": "dennisoelkers", "createdAt": "2020-01-15T15:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5OTI3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyNzE3MQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7177#discussion_r366427171", "bodyText": "One thing I realised while testing these changes:\nChanging e.g. the relative time range, results in a new URL due to useSyncWithQueryParameters. because of the new URL, the query variable is different and bindSearchParamsFromQuery  gets called again.\nbindSearchParamsFromQuery will unnecessarily update the current query and also trigger another, but unnecessary search execution.", "author": "linuspahl", "createdAt": "2020-01-14T16:06:36Z", "path": "graylog2-web-interface/src/views/pages/ExtendedSearchPage.jsx", "diffHunk": "@@ -112,14 +122,30 @@ const DashboardSearchBarWithStatus = WithSearchStatus(DashboardSearchBar);\n \n const ViewAdditionalContextProvider = connect(AdditionalContext.Provider, { view: ViewStore }, ({ view }) => ({ value: { view: view.view } }));\n \n-const ExtendedSearchPage = ({ route, searchRefreshHooks }: Props) => {\n+const useStyle = () => {\n+  useEffect(() => {\n+    style.use();\n+    return () => style.unuse();\n+  }, []);\n+};\n+\n+const ExtendedSearchPage = ({ route, location = { query: {} }, router, searchRefreshHooks }: Props) => {\n+  const { pathname, search } = router.getCurrentLocation();\n+  const query = `${pathname}${search}`;\n   const refreshIfNotUndeclared = () => _refreshIfNotUndeclared(searchRefreshHooks, SearchExecutionStateStore.getInitialState());\n \n   useEffect(() => {\n-    style.use();\n+    const { view } = ViewStore.getInitialState();\n \n+    bindSearchParamsFromQuery({ view, query: location.query, retry: () => Promise.resolve() });\n+  }, [query]);", "originalCommit": "a1b3ca88006f5f4eed196ec07c808b71c5be4957", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "347092dd4c24dee29349fda41cb95071a8e697a6", "url": "https://github.com/Graylog2/graylog2-server/commit/347092dd4c24dee29349fda41cb95071a8e697a6", "message": "Passing router as default prop for tests.", "committedDate": "2020-01-15T09:19:39Z", "type": "forcePushed"}, {"oid": "b539a41705b1794206250f3d864291924cd31f57", "url": "https://github.com/Graylog2/graylog2-server/commit/b539a41705b1794206250f3d864291924cd31f57", "message": "Doing initial URI sync upon mount.", "committedDate": "2020-01-15T09:41:11Z", "type": "forcePushed"}, {"oid": "2711130007b91299f11a45c554605afa8fc9f7b9", "url": "https://github.com/Graylog2/graylog2-server/commit/2711130007b91299f11a45c554605afa8fc9f7b9", "message": "Synchronize timerange & query with URL on search page.\n\nThe current search has a feature, where the current time range and query\nstring is synchronized with the URL in the browser. This means that:\n\n  - current time range and query string are part of the URL and copying\nand replaying the URL allows restoring the state for these\n  - a change to time range or query string creates a new state in the\nhistory stack, allowing the user to go back and forward between\ndifferent states\n  - going back or forward in the browser history restores the time range\n& query string of this specific state\n\nThis PR is recreating this functionality for the new search.\n\nFixes #7144.", "committedDate": "2020-01-15T15:10:26Z", "type": "commit"}, {"oid": "345780d412cafb6c87dd571e3630cbcd23cc4058", "url": "https://github.com/Graylog2/graylog2-server/commit/345780d412cafb6c87dd571e3630cbcd23cc4058", "message": "Fixing linter hints.", "committedDate": "2020-01-15T15:10:27Z", "type": "commit"}, {"oid": "6e77b404bbd1988896948a183299b72f750bd2e7", "url": "https://github.com/Graylog2/graylog2-server/commit/6e77b404bbd1988896948a183299b72f750bd2e7", "message": "Do not fail if no view is loaded.", "committedDate": "2020-01-15T15:10:27Z", "type": "commit"}, {"oid": "a07d72ec58ba589adb10654f2978424c96a9f549", "url": "https://github.com/Graylog2/graylog2-server/commit/a07d72ec58ba589adb10654f2978424c96a9f549", "message": "Adding tests for `SyncWithQueryParameters`.", "committedDate": "2020-01-15T15:10:27Z", "type": "commit"}, {"oid": "7afa53659a001366bbf43414d19a1b4dc637e022", "url": "https://github.com/Graylog2/graylog2-server/commit/7afa53659a001366bbf43414d19a1b4dc637e022", "message": "Passing router as default prop for tests.", "committedDate": "2020-01-15T15:10:28Z", "type": "commit"}, {"oid": "715d1524d40962650f94cdefdcef024cbb223c14", "url": "https://github.com/Graylog2/graylog2-server/commit/715d1524d40962650f94cdefdcef024cbb223c14", "message": "Doing initial URI sync upon mount.", "committedDate": "2020-01-15T15:10:28Z", "type": "commit"}, {"oid": "3f7c7d2800868c13231214aa8e4b80666c94761c", "url": "https://github.com/Graylog2/graylog2-server/commit/3f7c7d2800868c13231214aa8e4b80666c94761c", "message": "Adding assertion that searches should only have a single query.", "committedDate": "2020-01-15T15:11:36Z", "type": "commit"}, {"oid": "3f7c7d2800868c13231214aa8e4b80666c94761c", "url": "https://github.com/Graylog2/graylog2-server/commit/3f7c7d2800868c13231214aa8e4b80666c94761c", "message": "Adding assertion that searches should only have a single query.", "committedDate": "2020-01-15T15:11:36Z", "type": "forcePushed"}, {"oid": "5a4ac10a3f250b2ff0cfad34e196cf648627d8cc", "url": "https://github.com/Graylog2/graylog2-server/commit/5a4ac10a3f250b2ff0cfad34e196cf648627d8cc", "message": "Only update timerange/query & reexecute search if it has actually changed.", "committedDate": "2020-01-15T15:47:36Z", "type": "commit"}, {"oid": "f4fc047fdb37343bca7a5e858191e08fce0b11d6", "url": "https://github.com/Graylog2/graylog2-server/commit/f4fc047fdb37343bca7a5e858191e08fce0b11d6", "message": "Considering string parsing in test.", "committedDate": "2020-01-16T09:04:31Z", "type": "commit"}, {"oid": "267caf4027bf2dccf988f7768f390113add7b3e0", "url": "https://github.com/Graylog2/graylog2-server/commit/267caf4027bf2dccf988f7768f390113add7b3e0", "message": "Actually returning promise from store method.", "committedDate": "2020-01-16T14:40:42Z", "type": "commit"}, {"oid": "846e83660515af147b1b8c407b90dc2e87ede8bc", "url": "https://github.com/Graylog2/graylog2-server/commit/846e83660515af147b1b8c407b90dc2e87ede8bc", "message": "Fixing faulty tests.", "committedDate": "2020-01-16T16:55:03Z", "type": "commit"}]}