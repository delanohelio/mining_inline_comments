{"pr_number": 9634, "pr_title": "Implement Highlighting Rule Form", "pr_createdAt": "2020-11-26T15:58:58Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/9634", "timeline": [{"oid": "fc36f229cc0683eeb9ce3cc602537aeb586e1bab", "url": "https://github.com/Graylog2/graylog2-server/commit/fc36f229cc0683eeb9ce3cc602537aeb586e1bab", "message": "Fix linter warning", "committedDate": "2020-12-04T09:06:34Z", "type": "forcePushed"}, {"oid": "813170491fbf91690cf29ee2fce749983065c4e0", "url": "https://github.com/Graylog2/graylog2-server/commit/813170491fbf91690cf29ee2fce749983065c4e0", "message": "Fix linter warning", "committedDate": "2020-12-09T15:04:04Z", "type": "forcePushed"}, {"oid": "a563b83efbeca7747db2a51cde516f4dba5d7b19", "url": "https://github.com/Graylog2/graylog2-server/commit/a563b83efbeca7747db2a51cde516f4dba5d7b19", "message": "Fix linter warning", "committedDate": "2020-12-17T09:31:38Z", "type": "forcePushed"}, {"oid": "784311e47c39d3223ae8836d60e67b9b061ac558", "url": "https://github.com/Graylog2/graylog2-server/commit/784311e47c39d3223ae8836d60e67b9b061ac558", "message": "Fix linter warning", "committedDate": "2020-12-21T15:06:18Z", "type": "forcePushed"}, {"oid": "797059900d40ab182330c232e33981295ea6c740", "url": "https://github.com/Graylog2/graylog2-server/commit/797059900d40ab182330c232e33981295ea6c740", "message": "Introduce a enum for the condition", "committedDate": "2021-02-03T09:43:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODU4NTkwOQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9634#discussion_r568585909", "bodyText": "We should match the arguments it is called with here.", "author": "dennisoelkers", "createdAt": "2021-02-02T13:06:12Z", "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightForm.test.tsx", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import React from 'react';\n+import { render, fireEvent, waitFor } from 'wrappedTestingLibrary';\n+\n+import HighlightForm from 'views/components/sidebar/highlighting/HighlightForm';\n+import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n+import { HighlightingRulesActions } from 'views/stores/HighlightingRulesStore';\n+\n+jest.mock('views/stores/HighlightingRulesStore', () => ({\n+  HighlightingRulesActions: {\n+    add: jest.fn(() => Promise.resolve()),\n+    remove: jest.fn(() => Promise.resolve()),\n+  },\n+}));\n+\n+const rule = HighlightingRule.builder()\n+  .color('#333333')\n+  .condition('!=')\n+  .field('foob')\n+  .value('noob')\n+  .build();\n+\n+describe('HighlightForm', () => {\n+  it('should render for edit', async () => {\n+    const { findByText } = render(<HighlightForm onClose={() => {}} rule={rule} />);\n+\n+    const elem = await findByText('Edit Highlighting Rule');\n+\n+    expect(elem).not.toBeEmptyDOMElement();\n+  });\n+\n+  it('should render for new', async () => {\n+    const { findByText } = render(<HighlightForm onClose={() => {}} />);\n+\n+    const elem = await findByText('New Highlighting Rule');\n+\n+    expect(elem).not.toBeEmptyDOMElement();\n+  });\n+\n+  it('should fire onClose on cancel', async () => {\n+    const onClose = jest.fn();\n+    const { findByText } = render(<HighlightForm onClose={onClose} />);\n+\n+    const elem = await findByText('Cancel');\n+\n+    fireEvent.click(elem);\n+\n+    expect(onClose).toBeCalledTimes(1);\n+  });\n+\n+  it('should fire remove action when saving a existing rule', async () => {\n+    const { findByText } = render(<HighlightForm onClose={() => {}} rule={rule} />);\n+\n+    const elem = await findByText('Save');\n+\n+    fireEvent.click(elem);\n+\n+    await waitFor(() => expect(HighlightingRulesActions.remove).toBeCalledTimes(1));", "originalCommit": "784311e47c39d3223ae8836d60e67b9b061ac558", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODU4NTk1Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/9634#discussion_r568585956", "bodyText": "We should match the arguments it is called with here.", "author": "dennisoelkers", "createdAt": "2021-02-02T13:06:19Z", "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightForm.test.tsx", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import React from 'react';\n+import { render, fireEvent, waitFor } from 'wrappedTestingLibrary';\n+\n+import HighlightForm from 'views/components/sidebar/highlighting/HighlightForm';\n+import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n+import { HighlightingRulesActions } from 'views/stores/HighlightingRulesStore';\n+\n+jest.mock('views/stores/HighlightingRulesStore', () => ({\n+  HighlightingRulesActions: {\n+    add: jest.fn(() => Promise.resolve()),\n+    remove: jest.fn(() => Promise.resolve()),\n+  },\n+}));\n+\n+const rule = HighlightingRule.builder()\n+  .color('#333333')\n+  .condition('!=')\n+  .field('foob')\n+  .value('noob')\n+  .build();\n+\n+describe('HighlightForm', () => {\n+  it('should render for edit', async () => {\n+    const { findByText } = render(<HighlightForm onClose={() => {}} rule={rule} />);\n+\n+    const elem = await findByText('Edit Highlighting Rule');\n+\n+    expect(elem).not.toBeEmptyDOMElement();\n+  });\n+\n+  it('should render for new', async () => {\n+    const { findByText } = render(<HighlightForm onClose={() => {}} />);\n+\n+    const elem = await findByText('New Highlighting Rule');\n+\n+    expect(elem).not.toBeEmptyDOMElement();\n+  });\n+\n+  it('should fire onClose on cancel', async () => {\n+    const onClose = jest.fn();\n+    const { findByText } = render(<HighlightForm onClose={onClose} />);\n+\n+    const elem = await findByText('Cancel');\n+\n+    fireEvent.click(elem);\n+\n+    expect(onClose).toBeCalledTimes(1);", "originalCommit": "784311e47c39d3223ae8836d60e67b9b061ac558", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODU4NjIyMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/9634#discussion_r568586222", "bodyText": "We should check if the form is populated with values here.", "author": "dennisoelkers", "createdAt": "2021-02-02T13:06:46Z", "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightForm.test.tsx", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import React from 'react';\n+import { render, fireEvent, waitFor } from 'wrappedTestingLibrary';\n+\n+import HighlightForm from 'views/components/sidebar/highlighting/HighlightForm';\n+import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n+import { HighlightingRulesActions } from 'views/stores/HighlightingRulesStore';\n+\n+jest.mock('views/stores/HighlightingRulesStore', () => ({\n+  HighlightingRulesActions: {\n+    add: jest.fn(() => Promise.resolve()),\n+    remove: jest.fn(() => Promise.resolve()),\n+  },\n+}));\n+\n+const rule = HighlightingRule.builder()\n+  .color('#333333')\n+  .condition('!=')\n+  .field('foob')\n+  .value('noob')\n+  .build();\n+\n+describe('HighlightForm', () => {\n+  it('should render for edit', async () => {\n+    const { findByText } = render(<HighlightForm onClose={() => {}} rule={rule} />);\n+\n+    const elem = await findByText('Edit Highlighting Rule');\n+\n+    expect(elem).not.toBeEmptyDOMElement();", "originalCommit": "784311e47c39d3223ae8836d60e67b9b061ac558", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODU4NzIxNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9634#discussion_r568587215", "bodyText": "This is too much logic in the component, imo. We could either:\n\ncreate a domain action wrapping these actions\ncreate an update store action that actually does the update in place", "author": "dennisoelkers", "createdAt": "2021-02-02T13:08:16Z", "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightForm.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import * as React from 'react';\n+import { useContext } from 'react';\n+import PropTypes from 'prop-types';\n+import * as Immutable from 'immutable';\n+import { Formik, Form, Field } from 'formik';\n+\n+import { Input, BootstrapModalWrapper } from 'components/bootstrap';\n+import { Button, Modal } from 'components/graylog';\n+import FieldTypesContext from 'views/components/contexts/FieldTypesContext';\n+import FieldTypeMapping from 'views/logic/fieldtypes/FieldTypeMapping';\n+import Select from 'components/common/Select';\n+import { ColorPickerPopover } from 'components/common';\n+import { DEFAULT_CUSTOM_HIGHLIGHT_RANGE } from 'views/Constants';\n+import ColorPreview from 'views/components/sidebar/highlighting/ColorPreview';\n+import { HighlightingRulesActions } from 'views/stores/HighlightingRulesStore';\n+import HighlightingRule from 'views/logic/views/formatting/highlighting/HighlightingRule';\n+\n+type Props = {\n+  onClose: () => void,\n+  rule: HighlightingRule | null | undefined,\n+};\n+\n+const _isRequired = (field) => (value) => {\n+  if (!value || value === '') {\n+    return `${field} is required`;\n+  }\n+\n+  return undefined;\n+};\n+\n+const numberConditionOptions = ['==', '!=', '<=', '>=', '<', '>'].map((cond) => ({ value: cond, label: cond }));\n+const otherConditionOptions = ['==', '!='].map((cond) => ({ value: cond, label: cond }));\n+\n+const HighlightForm = ({ onClose, rule }: Props) => {\n+  const fieldTypes = useContext(FieldTypesContext);\n+  const fields = fieldTypes?.all\n+    ? fieldTypes.all\n+    : Immutable.List<FieldTypeMapping>();\n+  const fieldOptions = fields.map(({ name }) => ({ value: name, label: name })).toArray();\n+\n+  const onSubmit = ({ field, value, color, condition }) => {\n+    if (rule) {\n+      HighlightingRulesActions.remove(rule).then(() => HighlightingRulesActions.add(", "originalCommit": "784311e47c39d3223ae8836d60e67b9b061ac558", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDIxOTE4Ng==", "url": "https://github.com/Graylog2/graylog2-server/pull/9634#discussion_r570219186", "bodyText": "We should sort the field names lexicographically using defaultCompare here.", "author": "dennisoelkers", "createdAt": "2021-02-04T13:24:16Z", "path": "graylog2-web-interface/src/views/components/sidebar/highlighting/HighlightForm.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright (C) 2020 Graylog, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the Server Side Public License, version 1,\n+ * as published by MongoDB, Inc.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * Server Side Public License for more details.\n+ *\n+ * You should have received a copy of the Server Side Public License\n+ * along with this program. If not, see\n+ * <http://www.mongodb.com/licensing/server-side-public-license>.\n+ */\n+import * as React from 'react';\n+import { useContext } from 'react';\n+import PropTypes from 'prop-types';\n+import * as Immutable from 'immutable';\n+import { Formik, Form, Field } from 'formik';\n+\n+import { Input, BootstrapModalWrapper } from 'components/bootstrap';\n+import { Button, Modal } from 'components/graylog';\n+import FieldTypesContext from 'views/components/contexts/FieldTypesContext';\n+import FieldTypeMapping from 'views/logic/fieldtypes/FieldTypeMapping';\n+import Select from 'components/common/Select';\n+import { ColorPickerPopover } from 'components/common';\n+import { DEFAULT_CUSTOM_HIGHLIGHT_RANGE } from 'views/Constants';\n+import ColorPreview from 'views/components/sidebar/highlighting/ColorPreview';\n+import { HighlightingRulesActions } from 'views/stores/HighlightingRulesStore';\n+import HighlightingRule, { ConditionLabelMap, StringConditionLabelMap } from 'views/logic/views/formatting/highlighting/HighlightingRule';\n+\n+type Props = {\n+  onClose: () => void,\n+  rule: HighlightingRule | null | undefined,\n+};\n+\n+const _isRequired = (field) => (value) => {\n+  if (!value || value === '') {\n+    return `${field} is required`;\n+  }\n+\n+  return undefined;\n+};\n+\n+const numberConditionOptions = Object.entries(ConditionLabelMap).map(([value, label]) => ({ value, label }));\n+const otherConditionOptions = Object.entries(StringConditionLabelMap).map(([value, label]) => ({ value, label }));\n+\n+const HighlightForm = ({ onClose, rule }: Props) => {\n+  const fieldTypes = useContext(FieldTypesContext);\n+  const fields = fieldTypes?.all\n+    ? fieldTypes.all\n+    : Immutable.List<FieldTypeMapping>();\n+  const fieldOptions = fields.map(({ name }) => ({ value: name, label: name })).toArray();", "originalCommit": "752d799ede09776fa8f08d91c6d3b2a4bb8e1865", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "761cf9dfb6949bee6c556e68f2d55436a7c1ce77", "url": "https://github.com/Graylog2/graylog2-server/commit/761cf9dfb6949bee6c556e68f2d55436a7c1ce77", "message": "Make the tests better than before\n\n- sort our fields\n- use update action from store\n- make update action usable", "committedDate": "2021-02-04T15:25:51Z", "type": "forcePushed"}, {"oid": "812fcfb2b3b2e37494d94fbaa9d956ad987a8d52", "url": "https://github.com/Graylog2/graylog2-server/commit/812fcfb2b3b2e37494d94fbaa9d956ad987a8d52", "message": "Use jest plugin for ESLint. (#10018)", "committedDate": "2021-02-04T19:05:33Z", "type": "commit"}, {"oid": "2b994b169c856152fabdfd981d73747a923c36c5", "url": "https://github.com/Graylog2/graylog2-server/commit/2b994b169c856152fabdfd981d73747a923c36c5", "message": "Improving typing of field type properties. (#10015)", "committedDate": "2021-02-05T08:39:28Z", "type": "commit"}, {"oid": "1a44cce49d74c59401eb5d2051810d64fda89f1d", "url": "https://github.com/Graylog2/graylog2-server/commit/1a44cce49d74c59401eb5d2051810d64fda89f1d", "message": "Update css-loader, less-loader, style-loader dependencies and configuration (#8875)\n\n* updated dependencies\r\n\r\n* fix import style\r\n\r\n* fix less and style loader options\r\n\r\n* remove icon font path\r\n\r\n* ability to load eot\r\n\r\n* add lazy loading capability\r\n\r\n* support leaflet lazy\r\n\r\n* use new style of importing lazy\r\n\r\n* fix insertAt definitions\r\n\r\n* add comment why\r\n\r\n* ignore lazy loading files for normal css\r\n\r\n* update how to import modules\r\n\r\n* update importstyle leaflet\r\n\r\n* update import style editwidget\r\n\r\n* updated lock file\r\n\r\n* fix webpack config for leaflet\r\n\r\n* fix lazy loading in jest\r\n\r\n* fix linting\r\n\r\n* add no-alert exception to ignore\r\n\r\n* fix flow module mapping\r\n\r\n* update style-loader to latest\r\n\r\n* update css-loader\r\n\r\n* fix lazy loading jest module\r\n\r\n* update requires to import\r\n\r\n* set css module class transformation to be global", "committedDate": "2021-02-05T09:33:14Z", "type": "commit"}, {"oid": "15cac75e5e666a87d2808b837242139b15d104dc", "url": "https://github.com/Graylog2/graylog2-server/commit/15cac75e5e666a87d2808b837242139b15d104dc", "message": "Fixing loading spinner gap between icon and text (#10025)", "committedDate": "2021-02-08T14:26:46Z", "type": "commit"}, {"oid": "497575cc525285d3245a8ad570fa8c79f6382a4a", "url": "https://github.com/Graylog2/graylog2-server/commit/497575cc525285d3245a8ad570fa8c79f6382a4a", "message": "Fixing linter hints related to importing `URLUtils`/`FormsUtils`. (#10021)\n\n* Import `URLUtils` properly.\r\n\r\n* Using correct ESLint rule to disable for TS.\r\n\r\n* Avoid calling hook conditionally.\r\n\r\n* Avoid calling hook conditionally.\r\n\r\n* Fixing linter hints.\r\n\r\n* Removing unused import.\r\n\r\n* Fixing default import of `FormsUtils`.\r\n\r\n* Making `no-unused-vars` consistent for TS.", "committedDate": "2021-02-08T14:32:58Z", "type": "commit"}, {"oid": "7b0232f9938ddef8b0c63d613d1bdc24f774f9c2", "url": "https://github.com/Graylog2/graylog2-server/commit/7b0232f9938ddef8b0c63d613d1bdc24f774f9c2", "message": "Import CSS modules as global to prevent rewriting classnames (#10026)\n\n* import css modules as global\r\n\r\n* revert to using css options generate", "committedDate": "2021-02-08T14:47:02Z", "type": "commit"}, {"oid": "a10f995622b017b2137fa4ccc17374d6c11e0ab4", "url": "https://github.com/Graylog2/graylog2-server/commit/a10f995622b017b2137fa4ccc17374d6c11e0ab4", "message": "Add highlight creation form", "committedDate": "2021-02-08T15:47:16Z", "type": "commit"}, {"oid": "6384ea3bc48ce89b1a40c05706966b105ce49ddd", "url": "https://github.com/Graylog2/graylog2-server/commit/6384ea3bc48ce89b1a40c05706966b105ce49ddd", "message": "Add highlighting condition", "committedDate": "2021-02-08T15:53:08Z", "type": "commit"}, {"oid": "3474e7fd2acdf1f779818412b4059b49d6e413bb", "url": "https://github.com/Graylog2/graylog2-server/commit/3474e7fd2acdf1f779818412b4059b49d6e413bb", "message": "Implement conditional highlighting rules", "committedDate": "2021-02-08T15:53:09Z", "type": "commit"}, {"oid": "8f6cc7d4faf7a281de7900c3f9b4d60bb845e480", "url": "https://github.com/Graylog2/graylog2-server/commit/8f6cc7d4faf7a281de7900c3f9b4d60bb845e480", "message": "Move Highlighting Form to a modal", "committedDate": "2021-02-08T15:53:09Z", "type": "commit"}, {"oid": "7a1819f6ce1e448fb3067549b653a597994b6f53", "url": "https://github.com/Graylog2/graylog2-server/commit/7a1819f6ce1e448fb3067549b653a597994b6f53", "message": "Add validation for required fields", "committedDate": "2021-02-08T15:53:10Z", "type": "commit"}, {"oid": "e3b788b45b459a67931c42688d07365a7467d672", "url": "https://github.com/Graylog2/graylog2-server/commit/e3b788b45b459a67931c42688d07365a7467d672", "message": "Add condition to the backend", "committedDate": "2021-02-08T15:53:10Z", "type": "commit"}, {"oid": "bc78fc795d771556313ecd008e26f094f4904108", "url": "https://github.com/Graylog2/graylog2-server/commit/bc78fc795d771556313ecd008e26f094f4904108", "message": "Make rule editiable and fix some styling issues", "committedDate": "2021-02-08T15:53:10Z", "type": "commit"}, {"oid": "1384ce2de4169af90b141cc94d71ce1644a54422", "url": "https://github.com/Graylog2/graylog2-server/commit/1384ce2de4169af90b141cc94d71ce1644a54422", "message": "Fix test and create a new one", "committedDate": "2021-02-08T15:53:10Z", "type": "commit"}, {"oid": "f4ce7ef8a50fce5532119bf68c2e23b7b597b16c", "url": "https://github.com/Graylog2/graylog2-server/commit/f4ce7ef8a50fce5532119bf68c2e23b7b597b16c", "message": "Add minimal tests for HighlightForm", "committedDate": "2021-02-08T15:53:10Z", "type": "commit"}, {"oid": "359152a769843c082ed1b1115fddda9facf9b899", "url": "https://github.com/Graylog2/graylog2-server/commit/359152a769843c082ed1b1115fddda9facf9b899", "message": "Fix linter warning", "committedDate": "2021-02-08T15:53:10Z", "type": "commit"}, {"oid": "41f1e6491b596fdb31623d6de2339aed1b771f48", "url": "https://github.com/Graylog2/graylog2-server/commit/41f1e6491b596fdb31623d6de2339aed1b771f48", "message": "Introduce a enum for the condition", "committedDate": "2021-02-08T15:53:11Z", "type": "commit"}, {"oid": "f959bbdcb73224554e2e2caa637c4d109c85c863", "url": "https://github.com/Graylog2/graylog2-server/commit/f959bbdcb73224554e2e2caa637c4d109c85c863", "message": "Add missing license", "committedDate": "2021-02-08T15:53:11Z", "type": "commit"}, {"oid": "0177482b532ffd50eb84ced17f0ed640692b721b", "url": "https://github.com/Graylog2/graylog2-server/commit/0177482b532ffd50eb84ced17f0ed640692b721b", "message": "Fix highlighting aggregation fields (count())", "committedDate": "2021-02-08T15:53:11Z", "type": "commit"}, {"oid": "bd384474c065f693b6c2798cb4c1faa4c6463fb2", "url": "https://github.com/Graylog2/graylog2-server/commit/bd384474c065f693b6c2798cb4c1faa4c6463fb2", "message": "Make the tests better than before\n\n- sort our fields\n- use update action from store\n- make update action usable", "committedDate": "2021-02-08T15:53:11Z", "type": "commit"}, {"oid": "335583747b6d68d8d75aef5e91568dd7b148abbb", "url": "https://github.com/Graylog2/graylog2-server/commit/335583747b6d68d8d75aef5e91568dd7b148abbb", "message": "Fix typescript and linter", "committedDate": "2021-02-08T15:53:11Z", "type": "commit"}, {"oid": "a34249baa870c17927e91f3a0e56b348b87b521c", "url": "https://github.com/Graylog2/graylog2-server/commit/a34249baa870c17927e91f3a0e56b348b87b521c", "message": "Fix test fallout after updateing update store function", "committedDate": "2021-02-08T15:53:12Z", "type": "commit"}, {"oid": "86dcf4626c329756d3e7f00b884a0cfa98987e63", "url": "https://github.com/Graylog2/graylog2-server/commit/86dcf4626c329756d3e7f00b884a0cfa98987e63", "message": "Add expect as expected from lint", "committedDate": "2021-02-08T15:53:12Z", "type": "commit"}, {"oid": "fa9a1ddb1c4f9e99a1df89fa4c366c587f1a1e60", "url": "https://github.com/Graylog2/graylog2-server/commit/fa9a1ddb1c4f9e99a1df89fa4c366c587f1a1e60", "message": "Add description about rule order", "committedDate": "2021-02-08T15:53:12Z", "type": "commit"}, {"oid": "e3be7e2fa8cf40d00c0a3813a050fce00a285298", "url": "https://github.com/Graylog2/graylog2-server/commit/e3be7e2fa8cf40d00c0a3813a050fce00a285298", "message": "Fix wrong initize value", "committedDate": "2021-02-08T15:53:12Z", "type": "commit"}, {"oid": "44b4b54e41dd77e0a381bcdad07aedcb99d23d8d", "url": "https://github.com/Graylog2/graylog2-server/commit/44b4b54e41dd77e0a381bcdad07aedcb99d23d8d", "message": "Choose random color when creating new HighlightingRule", "committedDate": "2021-02-08T15:53:13Z", "type": "commit"}]}