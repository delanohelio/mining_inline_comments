{"pr_number": 7141, "pr_title": "Remove widget position from view state, on widget delete", "pr_createdAt": "2020-01-10T10:41:34Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7141", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIzODU5NA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365238594", "bodyText": "I think we should use await or then here to make sure that the promise returned from ViewStatesActions.update and its handlers are resolved before checking anything. I think that is also the case in the other test cases in this file.", "author": "dennisoelkers", "createdAt": "2020-01-10T13:43:00Z", "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -103,4 +103,39 @@ describe('CurrentViewStateStore', () => {\n     CurrentViewStateStore.widgets(expectedWidgets);\n     expect(updateFn).toHaveBeenCalledTimes(1);\n   });\n+\n+  it('should remove widget positions for deleted widgets', () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);\n+    const widgetTwoPos = new WidgetPosition(1, 6, 5, 6);\n+    const widgetPositionsMap = { 'widget-one': widgetOnePos, 'widget-two': widgetTwoPos };\n+    const widgetOne = MessagesWidget.builder().id('widget-one').build();\n+    const widgetTwo = MessagesWidget.builder().id('widget-two').build();\n+    const existingWidgets = [widgetOne, widgetTwo];\n+    const existingViewState = viewState.toBuilder()\n+      .widgetPositions(widgetPositionsMap)\n+      .widgets(existingWidgets)\n+      .build();\n+\n+    viewStateMap[viewId] = existingViewState;\n+    const sMap = Immutable.Map(viewStateMap);\n+\n+    const expectedWidgets = [widgetOne];\n+    const expectedWidgetPosition = { 'widget-one': widgetOnePos };\n+    const expectedViewState = viewState.toBuilder()\n+      .widgetPositions(expectedWidgetPosition)\n+      .widgets(expectedWidgets)\n+      .build();\n+\n+    const updateFn = mockAction(jest.fn((id, newViewState) => {\n+      expect(id).toEqual(viewId);\n+      expect(newViewState).toEqual(expectedViewState);\n+      return Promise.resolve(expectedViewState);\n+    }));\n+\n+    ViewStatesActions.update = updateFn;\n+    CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: existingViewState });\n+    CurrentViewStateStore.onViewStatesStoreChange(sMap);\n+    CurrentViewStateStore.widgets(expectedWidgets);", "originalCommit": "ec368b7fe66881ca87c9a91d55396e406b40d6a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI1Mzg3Mw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365253873", "bodyText": "I get your point, but could not find a similar approach for the other test cases. I've implemented async/await for all cases.", "author": "linuspahl", "createdAt": "2020-01-10T14:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIzODU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNTU1MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365815550", "bodyText": "We can also change this to:\nexpect(updateFn).toHaveBeenCalledWith(viewId, expectedViewState);\n\nand just turn the definition of updateFn into:\nconst updateFn = jest.fn(() => Promise.resolve(expectedViewState));\n\nWhich makes the actual expectation easier to read because the test case is way more linear (not having to jump from the expect back to the definition of updateFn.", "author": "dennisoelkers", "createdAt": "2020-01-13T13:55:24Z", "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -100,7 +100,42 @@ describe('CurrentViewStateStore', () => {\n     ViewStatesActions.update = updateFn;\n     CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: oldViewState });\n     CurrentViewStateStore.onViewStatesStoreChange(sMap);\n-    CurrentViewStateStore.widgets(expectedWidgets);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n+    expect(updateFn).toHaveBeenCalledTimes(1);\n+  });\n+\n+  it('should remove widget positions for deleted widgets', async () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);\n+    const widgetTwoPos = new WidgetPosition(1, 6, 5, 6);\n+    const widgetPositionsMap = { 'widget-one': widgetOnePos, 'widget-two': widgetTwoPos };\n+    const widgetOne = MessagesWidget.builder().id('widget-one').build();\n+    const widgetTwo = MessagesWidget.builder().id('widget-two').build();\n+    const existingWidgets = [widgetOne, widgetTwo];\n+    const existingViewState = viewState.toBuilder()\n+      .widgetPositions(widgetPositionsMap)\n+      .widgets(existingWidgets)\n+      .build();\n+\n+    viewStateMap[viewId] = existingViewState;\n+    const sMap = Immutable.Map(viewStateMap);\n+\n+    const expectedWidgets = [widgetOne];\n+    const expectedWidgetPosition = { 'widget-one': widgetOnePos };\n+    const expectedViewState = viewState.toBuilder()\n+      .widgetPositions(expectedWidgetPosition)\n+      .widgets(expectedWidgets)\n+      .build();\n+\n+    const updateFn = mockAction(jest.fn((id, newViewState) => {\n+      expect(id).toEqual(viewId);\n+      expect(newViewState).toEqual(expectedViewState);\n+      return Promise.resolve(expectedViewState);\n+    }));\n+\n+    ViewStatesActions.update = updateFn;\n+    CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: existingViewState });\n+    CurrentViewStateStore.onViewStatesStoreChange(sMap);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n     expect(updateFn).toHaveBeenCalledTimes(1);", "originalCommit": "f9583b94c4f077238483273bbb722ac255482e5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNjY3MQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365816671", "bodyText": "Imo the following variable declarations could be changed into one big inline declaration of the view state. We do not reuse these values, so we do not really need to capture them into variables.", "author": "dennisoelkers", "createdAt": "2020-01-13T13:57:36Z", "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -100,7 +100,42 @@ describe('CurrentViewStateStore', () => {\n     ViewStatesActions.update = updateFn;\n     CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: oldViewState });\n     CurrentViewStateStore.onViewStatesStoreChange(sMap);\n-    CurrentViewStateStore.widgets(expectedWidgets);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n+    expect(updateFn).toHaveBeenCalledTimes(1);\n+  });\n+\n+  it('should remove widget positions for deleted widgets', async () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);", "originalCommit": "f9583b94c4f077238483273bbb722ac255482e5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkwODQ5MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365908490", "bodyText": "I have to reuse the widget and widget position for the expected view state. I still prefer the inline declaration and just used existingViewState.widgets[0] for the expected state. is this implementation okay or an anti pattern? I can imagine not reusing the \"initial state\" for the \"expected state\", to be a best practice.", "author": "linuspahl", "createdAt": "2020-01-13T16:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNjY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNzUyMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7141#discussion_r365817522", "bodyText": "Setup of the test case and the actual action(s) which are tested should be clearer, by adding new lines in between. Imo assigning ViewStatesActions.update is still part of the setup, I am not sure about this line. I think the actual action under test is CurrentViewStateStore.widgets, so it should be visually separated from the setup and checking the expectations afterwards.", "author": "dennisoelkers", "createdAt": "2020-01-13T13:59:27Z", "path": "graylog2-web-interface/src/views/stores/CurrentViewStateStore.test.js", "diffHunk": "@@ -100,7 +100,42 @@ describe('CurrentViewStateStore', () => {\n     ViewStatesActions.update = updateFn;\n     CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: oldViewState });\n     CurrentViewStateStore.onViewStatesStoreChange(sMap);\n-    CurrentViewStateStore.widgets(expectedWidgets);\n+    await CurrentViewStateStore.widgets(expectedWidgets);\n+    expect(updateFn).toHaveBeenCalledTimes(1);\n+  });\n+\n+  it('should remove widget positions for deleted widgets', async () => {\n+    const widgetOnePos = new WidgetPosition(1, 1, 5, 6);\n+    const widgetTwoPos = new WidgetPosition(1, 6, 5, 6);\n+    const widgetPositionsMap = { 'widget-one': widgetOnePos, 'widget-two': widgetTwoPos };\n+    const widgetOne = MessagesWidget.builder().id('widget-one').build();\n+    const widgetTwo = MessagesWidget.builder().id('widget-two').build();\n+    const existingWidgets = [widgetOne, widgetTwo];\n+    const existingViewState = viewState.toBuilder()\n+      .widgetPositions(widgetPositionsMap)\n+      .widgets(existingWidgets)\n+      .build();\n+\n+    viewStateMap[viewId] = existingViewState;\n+    const sMap = Immutable.Map(viewStateMap);\n+\n+    const expectedWidgets = [widgetOne];\n+    const expectedWidgetPosition = { 'widget-one': widgetOnePos };\n+    const expectedViewState = viewState.toBuilder()\n+      .widgetPositions(expectedWidgetPosition)\n+      .widgets(expectedWidgets)\n+      .build();\n+\n+    const updateFn = mockAction(jest.fn((id, newViewState) => {\n+      expect(id).toEqual(viewId);\n+      expect(newViewState).toEqual(expectedViewState);\n+      return Promise.resolve(expectedViewState);\n+    }));\n+\n+    ViewStatesActions.update = updateFn;\n+    CurrentViewStateStore.onViewStoreChange({ activeQuery: viewId, view: existingViewState });", "originalCommit": "f9583b94c4f077238483273bbb722ac255482e5f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eeac338577e1267776f036e9f6b3abecf70534b9", "url": "https://github.com/Graylog2/graylog2-server/commit/eeac338577e1267776f036e9f6b3abecf70534b9", "message": "Remove widget position from view state, on widget delete", "committedDate": "2020-01-15T07:55:35Z", "type": "commit"}, {"oid": "479f8e21b92d2340b7eceea7aeb37f56977e22c2", "url": "https://github.com/Graylog2/graylog2-server/commit/479f8e21b92d2340b7eceea7aeb37f56977e22c2", "message": "Refactor CurrentViewStateStore widgets method code style", "committedDate": "2020-01-15T07:55:35Z", "type": "commit"}, {"oid": "f2e716a97e2f51a22119ec0269395210a46aa1e2", "url": "https://github.com/Graylog2/graylog2-server/commit/f2e716a97e2f51a22119ec0269395210a46aa1e2", "message": "Implement async await for promises in CurrentViewStateStore tests", "committedDate": "2020-01-15T07:55:35Z", "type": "commit"}, {"oid": "a0ba4b0630ddcd5f4254cd7e2a7c55f52f29dd58", "url": "https://github.com/Graylog2/graylog2-server/commit/a0ba4b0630ddcd5f4254cd7e2a7c55f52f29dd58", "message": "Improve CurrenViewStateStore test code quality", "committedDate": "2020-01-15T07:55:35Z", "type": "commit"}, {"oid": "dd1b20a149c40240fa4fae9a5f807c686550ea0f", "url": "https://github.com/Graylog2/graylog2-server/commit/dd1b20a149c40240fa4fae9a5f807c686550ea0f", "message": "Separate fixtures from expected state for CurrentViewStateStore test", "committedDate": "2020-01-15T07:55:35Z", "type": "commit"}, {"oid": "dd1b20a149c40240fa4fae9a5f807c686550ea0f", "url": "https://github.com/Graylog2/graylog2-server/commit/dd1b20a149c40240fa4fae9a5f807c686550ea0f", "message": "Separate fixtures from expected state for CurrentViewStateStore test", "committedDate": "2020-01-15T07:55:35Z", "type": "forcePushed"}]}