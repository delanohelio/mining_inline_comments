{"pr_number": 8804, "pr_title": "Implement HasOwnership which checks for sharing", "pr_createdAt": "2020-08-14T13:41:52Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8804", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM4NDIzMA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8804#discussion_r471384230", "bodyText": "Do you mean something like user has ownership of entity? And let's remove the space before children.", "author": "linuspahl", "createdAt": "2020-08-17T10:23:13Z", "path": "graylog2-web-interface/src/components/common/HasOwnership.jsx", "diffHunk": "@@ -0,0 +1,42 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useContext } from 'react';\n+import PropTypes from 'prop-types';\n+\n+import CurrentUserContext from 'contexts/CurrentUserContext';\n+import { createGRN } from 'logic/permissions/GRN';\n+\n+type Props = {\n+  children: React.Node,\n+  id: string,\n+  type: string,\n+};\n+\n+const HasOwnership = ({ children, id, type }: Props) => {\n+  const currentUser = useContext(CurrentUserContext);\n+  const entity = createGRN(id, type);\n+  const ownership = `entity:own:${entity}`;\n+  const adminPermission = '*';\n+\n+  if (currentUser) {\n+    const { grn_permissions: grnPermissions = [], permissions } = currentUser;\n+    const isAdmin = permissions.includes(adminPermission);\n+\n+    if (grnPermissions.includes(ownership) || isAdmin) {\n+      return children;\n+    }\n+  }\n+\n+  return null;\n+};\n+\n+HasOwnership.propTypes = {\n+  /**  Children to render if user has entity of entity */", "originalCommit": "bc2ac192085d09e737b2f574d92714556c8616f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM4ODMxNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8804#discussion_r471388314", "bodyText": "I know we do it like this in other places as well, but could you extract this value to a separate file? It would be great if we get to a point where we can define in one place what the admin permissions look like. Even though it is not likely that this will change soon.", "author": "linuspahl", "createdAt": "2020-08-17T10:30:51Z", "path": "graylog2-web-interface/src/components/common/HasOwnership.jsx", "diffHunk": "@@ -0,0 +1,42 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useContext } from 'react';\n+import PropTypes from 'prop-types';\n+\n+import CurrentUserContext from 'contexts/CurrentUserContext';\n+import { createGRN } from 'logic/permissions/GRN';\n+\n+type Props = {\n+  children: React.Node,\n+  id: string,\n+  type: string,\n+};\n+\n+const HasOwnership = ({ children, id, type }: Props) => {\n+  const currentUser = useContext(CurrentUserContext);\n+  const entity = createGRN(id, type);\n+  const ownership = `entity:own:${entity}`;\n+  const adminPermission = '*';", "originalCommit": "bc2ac192085d09e737b2f574d92714556c8616f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ0NzcxMA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8804#discussion_r471447710", "bodyText": "I would rather have it all or nothing. Creating a file which only this file uses is worse then have it 10 times defined around the project. I would rather create an issue for that.", "author": "kmerz", "createdAt": "2020-08-17T12:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM4ODMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5MTQ5MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8804#discussion_r471391490", "bodyText": "You could move this logic to util/PermissionsMixin, so it can also be used as a function e.g. in cases where we need this information before the render part.", "author": "linuspahl", "createdAt": "2020-08-17T10:37:17Z", "path": "graylog2-web-interface/src/components/common/HasOwnership.jsx", "diffHunk": "@@ -0,0 +1,42 @@\n+// @flow strict\n+import * as React from 'react';\n+import { useContext } from 'react';\n+import PropTypes from 'prop-types';\n+\n+import CurrentUserContext from 'contexts/CurrentUserContext';\n+import { createGRN } from 'logic/permissions/GRN';\n+\n+type Props = {\n+  children: React.Node,\n+  id: string,\n+  type: string,\n+};\n+\n+const HasOwnership = ({ children, id, type }: Props) => {\n+  const currentUser = useContext(CurrentUserContext);\n+  const entity = createGRN(id, type);\n+  const ownership = `entity:own:${entity}`;\n+  const adminPermission = '*';\n+\n+  if (currentUser) {\n+    const { grn_permissions: grnPermissions = [], permissions } = currentUser;\n+    const isAdmin = permissions.includes(adminPermission);\n+\n+    if (grnPermissions.includes(ownership) || isAdmin) {\n+      return children;\n+    }\n+  }", "originalCommit": "bc2ac192085d09e737b2f574d92714556c8616f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ0OTQxOQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8804#discussion_r471449419", "bodyText": "It does not belong to PermissionsMixin. PermissionsMixin should go the way of the Dodo the long way. If we need it somewhere else we can move it into it's own library.", "author": "kmerz", "createdAt": "2020-08-17T12:38:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5MTQ5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM5NjI3NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8804#discussion_r471396275", "bodyText": "We are disabling the button, when the current user does not have the right permissions, but hide it when he is not an owner. Thinking about the rule you've taught me, regarding when to disable a button and when to hide it, I am wondering if it makes sense to just disable the button in this case (has no ownership) as well or if we should also hide it if the user is not allowed to edit.", "author": "linuspahl", "createdAt": "2020-08-17T10:46:25Z", "path": "graylog2-web-interface/src/views/components/ViewActionsMenu.jsx", "diffHunk": "@@ -67,9 +67,11 @@ const ViewActionsMenu = ({ view, isNewView, metadata, router }) => {\n         <MenuItem onSelect={() => setEditViewOpen(true)} disabled={isNewView || !allowedToEdit}>\n           <Icon name=\"edit\" /> Edit metadata\n         </MenuItem>\n-        <MenuItem onSelect={() => setShareViewOpen(true)} disabled={isNewView || !allowedToEdit}>\n-          <Icon name=\"share-alt\" /> Share\n-        </MenuItem>\n+        <HasOwnership id={view.id} type=\"dashboard\">\n+          <MenuItem onSelect={() => setShareViewOpen(true)} disabled={isNewView || !allowedToEdit}>\n+            <Icon name=\"share-alt\" /> Share\n+          </MenuItem>\n+        </HasOwnership>", "originalCommit": "bc2ac192085d09e737b2f574d92714556c8616f6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ec210b488b0db2c81d2b236d9ac54cf50d6a0c01", "url": "https://github.com/Graylog2/graylog2-server/commit/ec210b488b0db2c81d2b236d9ac54cf50d6a0c01", "message": "Implement HasOwnership which checks for sharing\n\n## Motivation\nPrior to this change, we always show the entity sharing modal button\neven if you were not allowed to see it which would lead into a error\nscreen.\n\n## Description\nThis change will implement a switching component which decides if a\nchild will be rendered depending on if the user has ownership over the\nentity passed on.", "committedDate": "2020-08-18T13:15:18Z", "type": "commit"}, {"oid": "9535885d33ab9237e6b55a553ace7b6cd1dea334", "url": "https://github.com/Graylog2/graylog2-server/commit/9535885d33ab9237e6b55a553ace7b6cd1dea334", "message": "Fix failing tests", "committedDate": "2020-08-18T13:15:19Z", "type": "commit"}, {"oid": "272539f0aa49f3d6d0d7b8333506af12f6da77d9", "url": "https://github.com/Graylog2/graylog2-server/commit/272539f0aa49f3d6d0d7b8333506af12f6da77d9", "message": "Fix flow and annotation from @linuspahl", "committedDate": "2020-08-18T13:15:19Z", "type": "commit"}, {"oid": "7a60e7ed34a102d2edc0a582b28d569cf4d82c6e", "url": "https://github.com/Graylog2/graylog2-server/commit/7a60e7ed34a102d2edc0a582b28d569cf4d82c6e", "message": "Make it possible to disable the child component", "committedDate": "2020-08-18T13:15:19Z", "type": "commit"}, {"oid": "d1de1927ddd4f243338cd081ba984dd676d2ac3a", "url": "https://github.com/Graylog2/graylog2-server/commit/d1de1927ddd4f243338cd081ba984dd676d2ac3a", "message": "Disable instead of hiding children", "committedDate": "2020-08-18T13:15:20Z", "type": "commit"}, {"oid": "d1de1927ddd4f243338cd081ba984dd676d2ac3a", "url": "https://github.com/Graylog2/graylog2-server/commit/d1de1927ddd4f243338cd081ba984dd676d2ac3a", "message": "Disable instead of hiding children", "committedDate": "2020-08-18T13:15:20Z", "type": "forcePushed"}, {"oid": "5d772421263b3cf2863eeba03445308f18d820f5", "url": "https://github.com/Graylog2/graylog2-server/commit/5d772421263b3cf2863eeba03445308f18d820f5", "message": "Fix tests", "committedDate": "2020-08-19T07:49:44Z", "type": "commit"}, {"oid": "dc78a21ea417cbc4aa4c71b137ccac7e8e020c84", "url": "https://github.com/Graylog2/graylog2-server/commit/dc78a21ea417cbc4aa4c71b137ccac7e8e020c84", "message": "Fix flow errors", "committedDate": "2020-08-19T08:07:38Z", "type": "commit"}]}