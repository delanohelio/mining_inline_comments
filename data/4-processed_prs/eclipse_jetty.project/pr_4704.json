{"pr_number": 4704, "pr_title": "Issue #4235 - communicate reason of OpenID auth failure to error page", "pr_createdAt": "2020-03-24T10:37:49Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4704", "timeline": [{"oid": "4bc32e314bd0a81f3f3be02bc71c1bd94258c619", "url": "https://github.com/eclipse/jetty.project/commit/4bc32e314bd0a81f3f3be02bc71c1bd94258c619", "message": "Issue #4235 - communicate reason of OpenID auth failure to error page\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-03-24T10:36:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0Njk1OQ==", "url": "https://github.com/eclipse/jetty.project/pull/4704#discussion_r408046959", "bodyText": "In 10.0.x I have added to URIUtil:\n    /** Add a path and a query string\n     * @param path The path which may already contain contain a query\n     * @param query The query string or null if no query to be added\n     * @return The path with any non null query added after a '?' or '&amp;' as appropriate.\n     */\n    public static String addPathQuery(String path, String query)\n    {\n        if (query == null)\n            return path;\n        if (path.indexOf('?') >= 0)\n            return path + '&' + query;\n        return path + '?' + query;\n    }\nback port and use here.", "author": "gregw", "createdAt": "2020-04-14T10:55:09Z", "path": "jetty-openid/src/main/java/org/eclipse/jetty/security/openid/OpenIdAuthenticator.java", "diffHunk": "@@ -415,6 +402,47 @@ public Authentication validateRequest(ServletRequest req, ServletResponse res, b\n         }\n     }\n \n+    /**\n+     * Report an error case either by redirecting to the error page if it is defined, otherwise sending a 403 response.\n+     * If the message parameter is not null, a query parameter with a key of {@link #ERROR_PARAMETER} and value of the error\n+     * message will be logged and added to the error redirect URI if the error page is defined.\n+     * @param request the request.\n+     * @param response the response.\n+     * @param message the reason for the error or null.\n+     * @throws IOException if sending the error fails for any reason.\n+     */\n+    private void sendError(HttpServletRequest request, HttpServletResponse response, String message) throws IOException\n+    {\n+        final Request baseRequest = Request.getBaseRequest(request);\n+        final Response baseResponse = Objects.requireNonNull(baseRequest).getResponse();\n+\n+        if (LOG.isDebugEnabled())\n+            LOG.debug(\"OpenId authentication FAILED: {}\", message);\n+\n+        if (_errorPage == null)\n+        {\n+            if (LOG.isDebugEnabled())\n+                LOG.debug(\"auth failed 403\");\n+            if (response != null)\n+                response.sendError(HttpServletResponse.SC_FORBIDDEN);\n+        }\n+        else\n+        {\n+            if (LOG.isDebugEnabled())\n+                LOG.debug(\"auth failed {}\", _errorPage);\n+\n+            String redirectUri = URIUtil.addPaths(request.getContextPath(), _errorPage);\n+            if (message != null)\n+            {\n+                String query = URIUtil.combineQueryParams(ERROR_PARAMETER + \"=\" + UrlEncoded.encodeString(message), _errorQuery);\n+                redirectUri = URIUtil.addPaths(request.getContextPath(), _errorPath) + \"?\" + query;", "originalCommit": "4bc32e314bd0a81f3f3be02bc71c1bd94258c619", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0OTE1NA==", "url": "https://github.com/eclipse/jetty.project/pull/4704#discussion_r408049154", "bodyText": "a better name is addQueries as that matches the addPaths we already have.\nTo make it more efficient it should do:\nif (StringUtil.isEmpty(query1))\n  return query2;\nif (StringUtil.isEmpty(query2))\n  return query1;\nreturn query1 + '&' + query2;", "author": "gregw", "createdAt": "2020-04-14T10:59:16Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/URIUtil.java", "diffHunk": "@@ -1305,6 +1305,28 @@ public static URI addPath(URI uri, String path)\n         return URI.create(buf.toString());\n     }\n \n+    /**\n+     * Combine two query strings into one. Each query string should not contain the beginning '?' character, but\n+     * may contain multiple parameters separated by the '{@literal &}' character.\n+     * @param query1 the first query string.\n+     * @param query2 the second query string.\n+     * @return the combination of the two query strings.\n+     */\n+    public static String combineQueryParams(String query1, String query2)", "originalCommit": "4bc32e314bd0a81f3f3be02bc71c1bd94258c619", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0de597665132733fd39587ea1870a5b6422a7712", "url": "https://github.com/eclipse/jetty.project/commit/0de597665132733fd39587ea1870a5b6422a7712", "message": "Issue 4235 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-04-14T11:34:26Z", "type": "commit"}]}