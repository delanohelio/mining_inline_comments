{"pr_number": 4915, "pr_title": "Issue #4885 do not allow cookies to be set from an include", "pr_createdAt": "2020-05-27T11:40:06Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4915", "timeline": [{"oid": "d1decd38ec182b6be14b825de4cd17fbeda3b522", "url": "https://github.com/eclipse/jetty.project/commit/d1decd38ec182b6be14b825de4cd17fbeda3b522", "message": "Issue #4885 do not allow cookies to be set from an include\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-05-27T11:35:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwMzI3NA==", "url": "https://github.com/eclipse/jetty.project/pull/4915#discussion_r431203274", "bodyText": "So it silently fails if an attempt is made to addCookie during an INCLUDE?", "author": "joakime", "createdAt": "2020-05-27T14:56:26Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Response.java", "diffHunk": "@@ -280,27 +280,31 @@ else if (!cookie.getPath().equals(oldCookie.getPath()))\n \n     @Override\n     public void addCookie(Cookie cookie)\n-    {\n-        if (StringUtil.isBlank(cookie.getName()))\n-            throw new IllegalArgumentException(\"Cookie.name cannot be blank/null\");\n-\n-        String comment = cookie.getComment();\n-        // HttpOnly was supported as a comment in cookie flags before the java.net.HttpCookie implementation so need to check that\n-        boolean httpOnly = cookie.isHttpOnly() || HttpCookie.isHttpOnlyInComment(comment);\n-        SameSite sameSite = HttpCookie.getSameSiteFromComment(comment);\n-        comment = HttpCookie.getCommentWithoutAttributes(comment);\n-\n-        addCookie(new HttpCookie(\n-            cookie.getName(),\n-            cookie.getValue(),\n-            cookie.getDomain(),\n-            cookie.getPath(),\n-            (long)cookie.getMaxAge(),\n-            httpOnly,\n-            cookie.getSecure(),\n-            comment,\n-            cookie.getVersion(),\n-            sameSite));\n+    { \n+        //Servlet Spec 9.3 Include method: cannot set a cookie if handling an include\n+        if (isMutable())\n+        {", "originalCommit": "d1decd38ec182b6be14b825de4cd17fbeda3b522", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNTE3NQ==", "url": "https://github.com/eclipse/jetty.project/pull/4915#discussion_r431205175", "bodyText": "Can we at least log at debug level this behavior?\nSuch as ...\nif (!isMutable())\n{\n    LOG.debug(\"Not able to add/set Cookie during INCLUDE dispatch: {}\", cookie);\n    return;\n}\n\nif (StringUtil.isBlank(cookie.getName()))\n    throw new IllegalArgumentException(\"Cookie.name cannot be blank/null\");\n\n...", "author": "joakime", "createdAt": "2020-05-27T14:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwMzI3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxMTAxNw==", "url": "https://github.com/eclipse/jetty.project/pull/4915#discussion_r431211017", "bodyText": "Yep, that's what the spec wants us to do, ignore it. All of the other api methods that add headers do the same isMutable() test and ignore if an include.", "author": "janbartel", "createdAt": "2020-05-27T15:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwMzI3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxMzEwMA==", "url": "https://github.com/eclipse/jetty.project/pull/4915#discussion_r431213100", "bodyText": "Yeah, typical strange spec behavior.\nCan we (jetty) at least offer debug messages for those that are attempting to troubleshoot why their application isn't behaving like they expect?", "author": "joakime", "createdAt": "2020-05-27T15:05:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwMzI3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDAxMQ==", "url": "https://github.com/eclipse/jetty.project/pull/4915#discussion_r431444011", "bodyText": "Don't worry about the debug thing on this PR.\nI've opened issue #4916 to address this in a more consistent way.", "author": "joakime", "createdAt": "2020-05-27T21:10:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwMzI3NA=="}], "type": "inlineReview"}]}