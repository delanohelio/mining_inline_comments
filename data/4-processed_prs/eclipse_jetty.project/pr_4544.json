{"pr_number": 4544, "pr_title": "Issue #4541 Large response header", "pr_createdAt": "2020-02-05T09:31:06Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4544", "timeline": [{"oid": "1b59e422940edfd194a273fd0c3740b84c78660b", "url": "https://github.com/eclipse/jetty.project/commit/1b59e422940edfd194a273fd0c3740b84c78660b", "message": "Issue #4541 Large response header\n\nFix #4541 by initially allocated a header buffer of `min(_config.getResponseHeaderSize(), _config.getOutputBufferSize())`\nOnly allocate a buffer of `getResponseHeaderSize` if an overflow results.\n\nThis should have no effect on the majority of responses where `getOutputBufferSize` is greater than `getResponseHeaderSize` other than the cost of a min operation.\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-02-05T09:29:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NTIyMw==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r375985223", "bodyText": "Shouldn't we be acquiring based on _header.capacity() or _config.getOutputBufferSize() instead here?\nThe issue that was filed is that we allocate a buffer based on _config.getResponseHeaderSize(), even if it's set to something massive (like 100MB)\nEven though the actual buffer that is required/used is much smaller.", "author": "joakime", "createdAt": "2020-02-06T17:45:23Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.java", "diffHunk": "@@ -754,8 +757,19 @@ public Action process() throws Exception\n \n                     case NEED_HEADER:\n                     {\n-                        _header = _bufferPool.acquire(_config.getResponseHeaderSize(), HEADER_BUFFER_DIRECT);\n-\n+                        int size;\n+                        if (_header == null)\n+                        {\n+                            size = Math.min(_config.getResponseHeaderSize(), _config.getOutputBufferSize());\n+                        }\n+                        else\n+                        {\n+                            if (_header.capacity() >= _config.getResponseHeaderSize())\n+                                throw new BadMessageException(INTERNAL_SERVER_ERROR_500, \"Response header too large\");\n+                            size = _config.getResponseHeaderSize();\n+                            _bufferPool.release(_header);\n+                        }\n+                        _header = _bufferPool.acquire(size, HEADER_BUFFER_DIRECT);", "originalCommit": "1b59e422940edfd194a273fd0c3740b84c78660b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MzA0NQ==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r375993045", "bodyText": "On the first attempt we allocate on the minimum of responseHeaderSize and outputBufferSize, which almost always will be responseHeaderSize, so if we do a second attempt the capacity test will be >= responseHeaderSize and we throw bad message.\nOnly if the responseHeaderSize is larger than the outputBufferSize do we first allocate the outputBufferSize and if we overflow we do a second attempt, which passes the capacity test and reallocates the buffer at responseHeaderSize (unless of course the buffer pool already gave us buffer that was big enough for that).", "author": "gregw", "createdAt": "2020-02-06T18:00:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NTIyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwNzY1OA==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r376007658", "bodyText": "See my comment above. If we introduce NEED_LARGER_BUFFER, this if/else can be split in 2 case blocks and be clearer.", "author": "sbordet", "createdAt": "2020-02-06T18:30:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NTIyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NzU1Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r375987556", "bodyText": "Do we have a test where we fail when we attempt to write a header that is too large?\nEg:\nconfig.setResponseHeaderSize(16 * 1024);\n... later ...\nresponse.setHeader(\"X-Foo\", a32kbString);", "author": "joakime", "createdAt": "2020-02-06T17:49:54Z", "path": "jetty-server/src/test/java/org/eclipse/jetty/server/HttpConnectionTest.java", "diffHunk": "@@ -1258,6 +1259,48 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n         }\n     }\n \n+    @Test\n+    public void testAllowedLargeResponse() throws Exception", "originalCommit": "1b59e422940edfd194a273fd0c3740b84c78660b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NDEwMA==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r375994100", "bodyText": "tes: testOversizedResponse", "author": "gregw", "createdAt": "2020-02-06T18:02:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4NzU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwNjU3Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r376006572", "bodyText": "I don't like this. A user of HttpGenerator will call generate(), receive back NEED_HEADER, allocate a small buffer, call generate() again, buffer overflow, receive back NEED_HEADER which break the minimum surprise (I just gave it a header buffer!), and potentially be a spin loop.\nI think we need to make this return value explicit, something like NEED_LARGER_BUFFER, so users of HttpGenerator can understand better what's going on and try again (which may lead again to NEED_LARGER_BUFFER, but eventually it will be enough).", "author": "sbordet", "createdAt": "2020-02-06T18:28:35Z", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpGenerator.java", "diffHunk": "@@ -445,7 +445,8 @@ else if (status == HttpStatus.NO_CONTENT_204 || status == HttpStatus.NOT_MODIFIE\n                 }\n                 catch (BufferOverflowException e)\n                 {\n-                    throw new BadMessageException(INTERNAL_SERVER_ERROR_500, \"Response header too large\", e);\n+                    LOG.ignore(e);\n+                    return Result.NEED_HEADER;", "originalCommit": "1b59e422940edfd194a273fd0c3740b84c78660b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzODM4OA==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r376038388", "bodyText": "I agree, but I was trying not to change the API.... but I guess I have changed the contract of the API.  I'll add the extra enum...", "author": "gregw", "createdAt": "2020-02-06T19:32:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwNjU3Mg=="}], "type": "inlineReview"}, {"oid": "f50c2654b91fda2a0dc5f19ab7b0d5f820738c67", "url": "https://github.com/eclipse/jetty.project/commit/f50c2654b91fda2a0dc5f19ab7b0d5f820738c67", "message": "Fixes #4541 Large Headers\n\nAdded a HEADER_OVERFLOW result as per review\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-02-06T20:17:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NzcyMg==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r376297722", "bodyText": "On the client INTERNAL_SERVER_ERROR_500 won't make much sense, so perhaps replace with IllegalArgumentException?\nAlso, headerBuffer should be released to the pool.", "author": "sbordet", "createdAt": "2020-02-07T09:41:01Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/http/HttpSenderOverHTTP.java", "diffHunk": "@@ -225,6 +228,10 @@ protected Action process() throws Exception\n                         headerBuffer = httpClient.getByteBufferPool().acquire(httpClient.getRequestBufferSize(), false);\n                         break;\n                     }\n+                    case HEADER_OVERFLOW:\n+                    {\n+                        throw new BadMessageException(INTERNAL_SERVER_ERROR_500, \"Request header too large\");", "originalCommit": "f50c2654b91fda2a0dc5f19ab7b0d5f820738c67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1Nzg1OQ==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r376357859", "bodyText": "The BadMessageException was thrown previously, even fit generating a request. Do we really want to change this in 9?", "author": "gregw", "createdAt": "2020-02-07T12:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NzcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2NDM3MA==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r381864370", "bodyText": "@gregw the header buffer should be released to the pool.\nI'm ok to not change this in 9, but remember to make the change when merging to 10.", "author": "sbordet", "createdAt": "2020-02-20T09:03:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NzcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4Mjg3NA==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r381882874", "bodyText": "Ooops missed this one. Fixed now.", "author": "gregw", "createdAt": "2020-02-20T09:36:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NzcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5ODkyNw==", "url": "https://github.com/eclipse/jetty.project/pull/4544#discussion_r376298927", "bodyText": "Before throwing, you want to release the _header buffer back to the pool.", "author": "sbordet", "createdAt": "2020-02-07T09:43:38Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.java", "diffHunk": "@@ -754,8 +757,16 @@ public Action process() throws Exception\n \n                     case NEED_HEADER:\n                     {\n-                        _header = _bufferPool.acquire(_config.getResponseHeaderSize(), HEADER_BUFFER_DIRECT);\n+                        _header = _bufferPool.acquire(Math.min(_config.getResponseHeaderSize(), _config.getOutputBufferSize()), HEADER_BUFFER_DIRECT);\n+                        continue;\n+                    }\n \n+                    case HEADER_OVERFLOW:\n+                    {\n+                        if (_header.capacity() >= _config.getResponseHeaderSize())\n+                            throw new BadMessageException(INTERNAL_SERVER_ERROR_500, \"Response header too large\");", "originalCommit": "f50c2654b91fda2a0dc5f19ab7b0d5f820738c67", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b46b25b450647311e5d4ad6f30c463ca05f84616", "url": "https://github.com/eclipse/jetty.project/commit/b46b25b450647311e5d4ad6f30c463ca05f84616", "message": "release buffer on overflow\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-02-19T21:38:58Z", "type": "commit"}, {"oid": "a855744aeb7d876f41aab4028b8b2299f8b1457f", "url": "https://github.com/eclipse/jetty.project/commit/a855744aeb7d876f41aab4028b8b2299f8b1457f", "message": "release buffer in client as well\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-02-20T09:25:57Z", "type": "commit"}]}