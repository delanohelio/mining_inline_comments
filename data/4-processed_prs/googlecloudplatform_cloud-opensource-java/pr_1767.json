{"pr_number": 1767, "pr_title": "JLBP: Declare all dependencies", "pr_createdAt": "2020-10-29T15:43:03Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767", "timeline": [{"oid": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/246b15d8d25eb8e4a073370661ae3037b9c0dd69", "message": "Declare all dependencies", "committedDate": "2020-10-29T15:42:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTYwMQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514391601", "bodyText": "Maybe there's something less judgmental to say instead of \"have an annoying habit\"? What about just \"can break unexpectedly\"?", "author": "netdpb", "createdAt": "2020-10-29T16:21:28Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded. ", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NTIxNg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514445216", "bodyText": "done", "author": "elharo", "createdAt": "2020-10-29T17:37:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTg4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514391884", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Google HTTP Java Client which\n          \n          \n            \n            Google HTTP Java Client, which", "author": "netdpb", "createdAt": "2020-10-29T16:21:52Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NjQ3MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514446471", "bodyText": "I think this is a restrictive clause, but it's arguable.", "author": "elharo", "createdAt": "2020-10-29T17:39:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ1MTQ3Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514451473", "bodyText": "If it were restrictive, that would mean that there are several Google HTTP Java Clients, only one of which depends on Apache HTTP Components. Is that the case?", "author": "netdpb", "createdAt": "2020-10-29T17:47:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3NTM3NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514475375", "bodyText": "That's one way of identifying restrictive subordinate clauses, but a little more generally, \"A restrictive adjective clause, on the other hand, is essential to a sentence and should not be set off by commas\" https://www.thoughtco.com/restrictive-and-nonrestrictive-adjective-clauses-1689689\nI think this clause is indeed essential to the sentence.\nA better reference than that will have to wait until I get back to the office to retrieve my Chicago Manual of Style. :-)", "author": "elharo", "createdAt": "2020-10-29T18:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwMjE1NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514502154", "bodyText": "The content of the clause is important to the meaning of the paragraph, but not essential to the sentence.\n\"For example, your project might declare a dependency on the Google HTTP Java Client.\"\nThat doesn't change the reader's understanding of what you mean by \"the Google HTTP Java Client\", although it leaves out an important detail about why you're talking about it.\nCompare to your sentence above: \"Projects that rely on indirect dependencies have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded.\" If you got rid of the restrictive clause and changed it to \"Projects have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded\", the reader wouldn't know which projects you were talking about.\nAnyway, it's your document.", "author": "netdpb", "createdAt": "2020-10-29T19:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwOTk4Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515109983", "bodyText": "I think it needs a comma for the reason David explained:\n\nIf it were restrictive, that would mean that there are several Google HTTP Java Clients, only one of which depends on Apache HTTP Components", "author": "suztomo", "createdAt": "2020-10-30T13:49:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNDQ3Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515134477", "bodyText": "The point is \"essential to a sentence,\" which clause this is. It is not whether it is essential to the meaning of the modified noun or noun phrase.", "author": "elharo", "createdAt": "2020-10-30T14:23:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MTg4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MjU0MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514392541", "bodyText": "URLEncodedUtils doesn't look like a method.", "author": "netdpb", "createdAt": "2020-10-29T16:22:47Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` method in your own project without", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NjY5MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514446691", "bodyText": "fixed", "author": "elharo", "createdAt": "2020-10-29T17:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MjU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MzAxMg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514393012", "bodyText": "Do you need both \"compile\" and \"work\" here?", "author": "netdpb", "createdAt": "2020-10-29T16:23:28Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` method in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on  Apache HTTP Components, your code will\n+still compile and work. Strict dependencies also help static analysis tools better understand a project.", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NzA1Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514447053", "bodyText": "no, removed", "author": "elharo", "createdAt": "2020-10-29T17:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MzAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5MzMzNA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514393334", "bodyText": "I think you could start a new paragraph with \"Strict dependencies....\" It's starting a new idea.", "author": "netdpb", "createdAt": "2020-10-29T16:23:53Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` method in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on  Apache HTTP Components, your code will\n+still compile and work. Strict dependencies also help static analysis tools better understand a project.", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NDU4NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514394585", "bodyText": "The varying line lengths make this hard to review. Can you run mdformat?", "author": "netdpb", "createdAt": "2020-10-29T16:25:28Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDA4MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514444080", "bodyText": "-bash: mdformat: command not found", "author": "elharo", "createdAt": "2020-10-29T17:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NDU4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NTgxNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514395815", "bodyText": "Maybe give examples of when dependency mediation might change versions other than when you change your declared dependency versions.", "author": "netdpb", "createdAt": "2020-10-29T16:27:10Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies have an annoying habit of breaking in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` method in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on  Apache HTTP Components, your code will\n+still compile and work. Strict dependencies also help static analysis tools better understand a project.\n+\n+This doesn't only happen when a project itself is upgraded. It can also\n+happen when dependency mediation selects a different version of a library's dependency ", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NzUyNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514447525", "bodyText": "I'm hesitant to have a single sentence paragraph.", "author": "elharo", "createdAt": "2020-10-29T17:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NTgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NjcwOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514396708", "bodyText": "Is there a formatting practice for referring to files? Should this be pom.xml or pom.xml?", "author": "netdpb", "createdAt": "2020-10-29T16:28:25Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDg5OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514444898", "bodyText": "I don't think we've chosen one yet. Might be worth checking general google style and general cleanup.", "author": "elharo", "createdAt": "2020-10-29T17:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NjcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NzI1OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514397258", "bodyText": "Should this refer explicitly to direct dependencies somehow?", "author": "netdpb", "createdAt": "2020-10-29T16:29:08Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all dependencies", "originalCommit": "246b15d8d25eb8e4a073370661ae3037b9c0dd69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDU5Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r514444593", "bodyText": "yes, done", "author": "elharo", "createdAt": "2020-10-29T17:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NzI1OA=="}], "type": "inlineReview"}, {"oid": "950379e68443cadef271ff94673b715f32c1e2da", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/950379e68443cadef271ff94673b715f32c1e2da", "message": "Merge branch 'master' into i1542", "committedDate": "2020-10-29T17:35:13Z", "type": "commit"}, {"oid": "af8178fdd871d74b6e4b3dd7b21e6753f917fc2c", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/af8178fdd871d74b6e4b3dd7b21e6753f917fc2c", "message": "code review", "committedDate": "2020-10-29T17:41:20Z", "type": "commit"}, {"oid": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/665e7d92a0351f9bb37d6fe2f4123de34356daf1", "message": "Merge branch 'master' into i1542", "committedDate": "2020-10-30T12:42:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwODYyMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515108623", "bodyText": "A hypothetical code that does not call methods, reference fields, or instantiate classes:\n// my code. ImmutableList is from Guava.\nImmutableList<String> list = someLibraryCall();\nSystem.out.println(\"list is \" + list);\n\nShould I declare dependency to Guava?", "author": "suztomo", "createdAt": "2020-10-30T13:46:52Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all direct dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies tend to break in unexpected ways when direct dependencies are upgraded. ", "originalCommit": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzMzYxOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515133619", "bodyText": "I think the point is clear.", "author": "elharo", "createdAt": "2020-10-30T14:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwODYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMDcxMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515110710", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            add the dependency anyway. This way if a future version of the\n          \n          \n            \n            add the dependency anyway. In this way, if a future version of the\n          \n      \n    \n    \n  \n\nNot sure \"In\" is needed. I don't often see \"This way if\"", "author": "suztomo", "createdAt": "2020-10-30T13:50:06Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all direct dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies tend to break in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` class in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the", "originalCommit": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNTEzNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515135137", "bodyText": "rewrote", "author": "elharo", "createdAt": "2020-10-30T14:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMDcxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMjY5Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515112692", "bodyText": "Would you add names of these static analysis tools you have in mind?", "author": "suztomo", "createdAt": "2020-10-30T13:52:35Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all direct dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies tend to break in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` class in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on Apache HTTP Components, your code\n+still compiles. Strict dependencies also help static analysis tools better understand a project.", "originalCommit": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNjM0NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515136344", "bodyText": "Not needed", "author": "elharo", "createdAt": "2020-10-30T14:25:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMjY5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0NDE0MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515144141", "bodyText": "If I'm asked from somebody about this static analysis tools, I cannot answer it. Would you help me in this regard?", "author": "suztomo", "createdAt": "2020-10-30T14:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMjY5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMzU3Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515113573", "bodyText": "\"Strict deps\" appears in a previous paragraph, but 'Strict dependencies\" does not. Would you pick one?", "author": "suztomo", "createdAt": "2020-10-30T13:53:31Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all direct dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies tend to break in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` class in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on Apache HTTP Components, your code\n+still compiles. Strict dependencies also help static analysis tools better understand a project.", "originalCommit": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNzI1NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515137255", "bodyText": "bazel does call it \"strict deps\" bit otherwise we try not to abbreviate", "author": "elharo", "createdAt": "2020-10-30T14:27:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMzU3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1MDM1NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515150355", "bodyText": "Bazel call it in that way, but this document does not name this practice.", "author": "suztomo", "createdAt": "2020-10-30T14:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMzU3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExNTUzNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515115535", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This doesn't only happen when a project itself is upgraded. It can also\n          \n          \n            \n            The problem doesn't only happen when a project itself is upgraded. It can also\n          \n      \n    \n    \n  \n\nI felt \"This\" is unclear.", "author": "suztomo", "createdAt": "2020-10-30T13:56:21Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all direct dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies tend to break in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` class in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on Apache HTTP Components, your code\n+still compiles. Strict dependencies also help static analysis tools better understand a project.\n+\n+This doesn't only happen when a project itself is upgraded. It can also", "originalCommit": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODM2NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515138364", "bodyText": "rewrote", "author": "elharo", "createdAt": "2020-10-30T14:28:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExNTUzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExODgzNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515118835", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            that does not include the necessary indirect dependency. Relying on indirect dependencies can cause problems for your customers that you don't see. \n          \n          \n            \n            that does not include the necessary indirect dependency. Relying on indirect dependencies can cause unexpected problems for your customers. \n          \n      \n    \n    \n  \n\n\"customers that you don't see.\" or \"problems that you don't see\"? I felt the latter and \"unexpected\" is more clear.", "author": "suztomo", "createdAt": "2020-10-30T14:00:47Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all direct dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies tend to break in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` class in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on Apache HTTP Components, your code\n+still compiles. Strict dependencies also help static analysis tools better understand a project.\n+\n+This doesn't only happen when a project itself is upgraded. It can also\n+happen when dependency mediation selects a different version of a library's dependency \n+that does not include the necessary indirect dependency. Relying on indirect dependencies can cause problems for your customers that you don't see. ", "originalCommit": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzOTQ5NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515139495", "bodyText": "rewrote", "author": "elharo", "createdAt": "2020-10-30T14:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExODgzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyMDU4Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515120587", "bodyText": "You want to reference JLBP-1", "author": "suztomo", "createdAt": "2020-10-30T14:03:02Z", "path": "docs/JLBP-0022.md", "diffHunk": "@@ -0,0 +1,56 @@\n+---\n+jlbp:\n+  id: JLBP-22\n+permalink: /JLBP-22\n+---\n+\n+# Declare all direct dependencies\n+\n+If your code references a class\u2014for example, by invoking a method in that class\u2014declare a dependency that includes that class in your pom.xml, build.gradle,\n+or equivalent. In Bazel this practice is called \"strict deps\".\n+\n+Code should not call methods, reference fields, or instantiate classes from _indirect_ dependencies. These are dependencies of the declared dependencies. Projects that rely on indirect dependencies tend to break in unexpected ways when direct dependencies are upgraded. \n+\n+For example, your project might declare a dependency on the \n+Google HTTP Java Client which\n+itself depends on the Apache HTTP Components. If so, it is possible to use the `org.apache.http.client.utils.URLEncodedUtils` class in your own project without\n+explicitly declaring a dependency on Apache HTTP Components. However, you should\n+add the dependency anyway. This way if a future version of the\n+Google HTTP Java Client no longer depends on Apache HTTP Components, your code\n+still compiles. Strict dependencies also help static analysis tools better understand a project.\n+\n+This doesn't only happen when a project itself is upgraded. It can also\n+happen when dependency mediation selects a different version of a library's dependency \n+that does not include the necessary indirect dependency. Relying on indirect dependencies can cause problems for your customers that you don't see. \n+\n+IDE autocomplete suggestions are a common way projects come to depend on \n+indirect dependencies. When importing a new class, most IDEs only look to see if it's present in the classpath, not whether it comes from a direct or indirect dependency.\n+\n+The `mvn dependency:analyze` command lists dependencies a Maven project uses \n+but hasn't declared:\n+\n+```\n+[WARNING] Used undeclared dependencies found:\n+[WARNING]    org.apache.maven.resolver:maven-resolver-impl:jar:1.4.1:compile\n+[WARNING]    org.apache.maven.resolver:maven-resolver-api:jar:1.6.1:compile\n+[WARNING]    org.apache.maven:maven-core:jar:3.6.3:compile\n+[WARNING]    org.apache.maven:maven-model-builder:jar:3.6.3:compile\n+```\n+\n+These should be added to your pom.xml file. \n+\n+The tool also lists dependencies the project declares but doesn't use:", "originalCommit": "665e7d92a0351f9bb37d6fe2f4123de34356daf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzOTc4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515139784", "bodyText": "No, that's something different", "author": "elharo", "createdAt": "2020-10-30T14:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyMDU4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1MTgwMg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1767#discussion_r515151802", "bodyText": "Never mind. I thought JLBP-1 mentions declared-but-unused dependencies.", "author": "suztomo", "createdAt": "2020-10-30T14:48:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyMDU4Nw=="}], "type": "inlineReview"}, {"oid": "6d9e34ec250a92ad484c56ce416ce572b54ebb2e", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/6d9e34ec250a92ad484c56ce416ce572b54ebb2e", "message": "code review", "committedDate": "2020-10-30T14:31:01Z", "type": "commit"}, {"oid": "a6b996945b75ad7acdd5e29fcbbcb09ec5277769", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a6b996945b75ad7acdd5e29fcbbcb09ec5277769", "message": "Merge branch 'master' into i1542", "committedDate": "2021-03-04T00:26:57Z", "type": "commit"}, {"oid": "4e19a5ab9abc0018dc72629a283682389056074f", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4e19a5ab9abc0018dc72629a283682389056074f", "message": "Merge branch 'master' into i1542", "committedDate": "2021-03-04T01:24:40Z", "type": "commit"}]}