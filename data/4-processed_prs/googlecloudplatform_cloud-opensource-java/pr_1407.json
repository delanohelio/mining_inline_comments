{"pr_number": 1407, "pr_title": "abstract equals and hashCode", "pr_createdAt": "2020-05-18T15:16:49Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407", "timeline": [{"oid": "db6753d4d445a2d3ffea244ef862c7bbdece71d6", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/db6753d4d445a2d3ffea244ef862c7bbdece71d6", "message": "abstract equals and hashCode", "committedDate": "2020-05-18T15:14:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczMzEzNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426733137", "bodyText": "Checking the equality of class name here is more clear than super.equals. Nice.", "author": "suztomo", "createdAt": "2020-05-18T16:00:11Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/MethodSymbol.java", "diffHunk": "@@ -65,18 +65,16 @@ public boolean equals(Object other) {\n     if (other == null || getClass() != other.getClass()) {\n       return false;\n     }\n-    if (!super.equals(other)) {\n-      return false;\n-    }\n     MethodSymbol that = (MethodSymbol) other;\n     return isInterfaceMethod == that.isInterfaceMethod\n         && name.equals(that.name)\n-        && descriptor.equals(that.descriptor);\n+        && descriptor.equals(that.descriptor)\n+        && this.getClassBinaryName().equals(that.getClassBinaryName());", "originalCommit": "db6753d4d445a2d3ffea244ef862c7bbdece71d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNTg0Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426735846", "bodyText": "two instances of different subclasses could theoretically compare equal.\n\nDoesn't this if statement prevent that?", "author": "suztomo", "createdAt": "2020-05-18T16:04:23Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/Symbol.java", "diffHunk": "@@ -47,21 +46,10 @@ String getClassBinaryName() {\n   }\n \n   @Override\n-  public boolean equals(Object other) {\n-    if (this == other) {\n-      return true;\n-    }\n-    if (other == null || getClass() != other.getClass()) {\n-      return false;\n-    }", "originalCommit": "db6753d4d445a2d3ffea244ef862c7bbdece71d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MzM3Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426743372", "bodyText": "You're right. It does.\nIt still means subclasses can be created with additional data that is not considered in an equality comparison. Mostly it's a little disconcerting to have an equals method that should always be overridden, especially in an abstract class.", "author": "elharo", "createdAt": "2020-05-18T16:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNTg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNzMxMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1407#discussion_r426817310", "bodyText": "It still means subclasses can be created with additional data that is not considered in an equality comparison.\n\nI'm not sure this change is an improvement on that. Even with this PR, a subclass can declare an additional data that's not considered in equality comparison.", "author": "suztomo", "createdAt": "2020-05-18T18:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjczNTg0Ng=="}], "type": "inlineReview"}, {"oid": "f82483065c1918a342cbc3ef196ca46878d2a0d4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f82483065c1918a342cbc3ef196ca46878d2a0d4", "message": "Merge branch 'master' into equals", "committedDate": "2020-05-18T20:05:17Z", "type": "commit"}, {"oid": "31e80a57d3fe1dffcccdba51c8244d1eeda56628", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/31e80a57d3fe1dffcccdba51c8244d1eeda56628", "message": "Merge branch 'master' into equals", "committedDate": "2020-05-18T21:03:50Z", "type": "commit"}]}