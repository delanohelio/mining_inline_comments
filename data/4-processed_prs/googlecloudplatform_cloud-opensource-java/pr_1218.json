{"pr_number": 1218, "pr_title": "Merging FULL_DEPENDENCY and FULL_DEPENDENCY_WITH_PROVIDED into FULL", "pr_createdAt": "2020-02-14T02:25:35Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218", "timeline": [{"oid": "f3a034d8174f0d366f4c2e2def8fcae487dda76e", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f3a034d8174f0d366f4c2e2def8fcae487dda76e", "message": "Merged FULL_DEPENDENCY and FULL_DEPENDENCY_WITH_PROVIDED", "committedDate": "2020-02-14T02:10:46Z", "type": "commit"}, {"oid": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/76e0349f83d637d54a26184550fa5a9b9c500cb3", "message": "Format", "committedDate": "2020-02-14T02:30:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDA2Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224067", "bodyText": "buildCompleteGraph and buildLinkageCheckDependencyGraph have been merged to buildFullDependencyGraph.", "author": "suztomo", "createdAt": "2020-02-14T02:31:53Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDE4Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224187", "bodyText": "Renamed to reflect \"dependency graph as seen by Maven\" as in Javadoc.", "author": "suztomo", "createdAt": "2020-02-14T02:32:23Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n    * and conflicting versions. That is, this resolves conflicting versions by picking the first\n    * version seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Dependency dependency) {", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDQ5OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224499", "bodyText": "Because now the graph includes provided dependencies, the number of updates increases. This will affect the dependency convergence column.", "author": "suztomo", "createdAt": "2020-02-14T02:33:47Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "diffHunk": "@@ -97,13 +106,15 @@ public void testJaxen() throws RepositoryException {\n     DefaultArtifact jaxen =\n         new DefaultArtifact(\"jaxen:jaxen:1.1.6\");\n     DependencyGraph graph =\n-        dependencyGraphBuilder.buildCompleteGraph(new Dependency(jaxen, \"compile\")).getDependencyGraph();\n+        dependencyGraphBuilder\n+            .buildFullDependencyGraph(ImmutableList.of(jaxen))\n+            .getDependencyGraph();\n \n     List<Update> updates = graph.findUpdates();\n-    Truth.assertThat(updates).hasSize(3);\n+    Truth.assertThat(updates).hasSize(6);", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNDU2Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379224563", "bodyText": "Because now the graph includes provided dependencies, the number of calculated conflicts increases. This will affect the dependency convergence column.", "author": "suztomo", "createdAt": "2020-02-14T02:34:01Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphIntegrationTest.java", "diffHunk": "@@ -97,13 +106,15 @@ public void testJaxen() throws RepositoryException {\n     DefaultArtifact jaxen =\n         new DefaultArtifact(\"jaxen:jaxen:1.1.6\");\n     DependencyGraph graph =\n-        dependencyGraphBuilder.buildCompleteGraph(new Dependency(jaxen, \"compile\")).getDependencyGraph();\n+        dependencyGraphBuilder\n+            .buildFullDependencyGraph(ImmutableList.of(jaxen))\n+            .getDependencyGraph();\n \n     List<Update> updates = graph.findUpdates();\n-    Truth.assertThat(updates).hasSize(3);\n+    Truth.assertThat(updates).hasSize(6);\n \n     List<DependencyPath> conflicts = graph.findConflicts();\n-    Truth.assertThat(conflicts).hasSize(5);\n+    Truth.assertThat(conflicts).hasSize(10);", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMjU1OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379412559", "bodyText": "delete \"complete\"", "author": "elharo", "createdAt": "2020-02-14T12:46:39Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +192,30 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n-  }\n-\n-  /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n-   */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY);\n   }\n \n   /**\n    * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3NzgxMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379477810", "bodyText": "Done.", "author": "suztomo", "createdAt": "2020-02-14T15:03:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMjU1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzYxNg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379413616", "bodyText": "\"Option for the default dependency graph by Maven.\" --> \"Normal Maven dependency graph.\"", "author": "elharo", "createdAt": "2020-02-14T12:49:28Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODI0Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478246", "bodyText": "Done.", "author": "suztomo", "createdAt": "2020-02-14T15:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzg3Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379413872", "bodyText": "perhaps NONE --> MAVEN or MAVEN_DEFAULT (though default would imply that Maven itself has another mode. Does it?)", "author": "elharo", "createdAt": "2020-02-14T12:50:11Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODI3Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478277", "bodyText": "Updated to MAVEN.", "author": "suztomo", "createdAt": "2020-02-14T15:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxMzg3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDAyMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414023", "bodyText": "delete \"Option for\"", "author": "elharo", "createdAt": "2020-02-14T12:50:33Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3ODU4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379478584", "bodyText": "Done.", "author": "suztomo", "createdAt": "2020-02-14T15:04:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDAyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDE0Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414142", "bodyText": "perhaps just FULL", "author": "elharo", "createdAt": "2020-02-14T12:50:47Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.\n+     * </ul>\n+     */\n+    FULL_DEPENDENCY;", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4MzA2MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379483060", "bodyText": "Updated.", "author": "suztomo", "createdAt": "2020-02-14T15:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDgxMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414813", "bodyText": "I see what you mean but \"may\" is a little unclear. I think it might be clearer to rephrase this like, \"It contains dependency nodes for each group:artifact:version\"", "author": "elharo", "createdAt": "2020-02-14T12:52:38Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjg5MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482890", "bodyText": "Updated as \"The same artifact, which have the same group:artifact:version, appears in different nodes in the graph\"", "author": "suztomo", "createdAt": "2020-02-14T15:12:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDgxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDg4OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414889", "bodyText": "It may contain --> It contains", "author": "elharo", "createdAt": "2020-02-14T12:52:51Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjk0MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482941", "bodyText": "Done", "author": "suztomo", "createdAt": "2020-02-14T15:12:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDk2OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379414968", "bodyText": "may contain --> contains", "author": "elharo", "createdAt": "2020-02-14T12:53:04Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -291,13 +277,28 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n   }\n \n   private enum GraphTraversalOption {\n+    /**\n+     * Option for the default dependency graph by Maven. This dependency graph has the following\n+     * attributes:\n+     *\n+     * <ul>\n+     *   <li>It contains at most one node for the same groupId and artifactId.\n+     *   <li>It does not contain transitive provided-scope dependencies.\n+     *   <li>It does not contain transitive optional dependencies.\n+     * </ul>\n+     */\n     NONE,\n-    FULL_DEPENDENCY,\n-    FULL_DEPENDENCY_WITH_PROVIDED;\n \n-    private boolean resolveFullDependencies() {\n-      return this == FULL_DEPENDENCY || this == FULL_DEPENDENCY_WITH_PROVIDED;\n-    }\n+    /**\n+     * Option for the full dependency graph. This dependency graph has the following attributes:\n+     *\n+     * <ul>\n+     *   <li>It may contain different dependency nodes for the same groupId and artifactId.\n+     *   <li>It may contain transitive provided-scope dependencies.\n+     *   <li>It may contain transitive optional dependencies.", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4Mjk3NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379482975", "bodyText": "Done.", "author": "suztomo", "createdAt": "2020-02-14T15:12:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNDk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNTU2Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379415562", "bodyText": "I think the sentence \"Each element...at the root\" can be deleted.", "author": "elharo", "createdAt": "2020-02-14T12:54:32Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyTreeFormatter.java", "diffHunk": "@@ -30,8 +30,8 @@\n    * Formats dependencies as a tree in a similar way to {@code mvn dependency:tree}.\n    *\n    * @param dependencyPaths dependency paths from @{@link\n-   *     DependencyGraphBuilder#buildCompleteGraph(Dependency)}. Each element must have its\n-   *     parent in the list, except the ones at the root.\n+   *     DependencyGraphBuilder#buildFullDependencyGraph(List)} (Dependency)}. Each element must\n+   *     have its parent in the list, except the ones at the root.", "originalCommit": "76e0349f83d637d54a26184550fa5a9b9c500cb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4NDIzOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379484239", "bodyText": "Deleted.", "author": "suztomo", "createdAt": "2020-02-14T15:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQxNTU2Mg=="}], "type": "inlineReview"}, {"oid": "5e1c883b54209b6180b78fd068d0accd0da69cd7", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5e1c883b54209b6180b78fd068d0accd0da69cd7", "message": "Applied review", "committedDate": "2020-02-14T15:15:54Z", "type": "commit"}, {"oid": "4e88251a753970f78e2962b02aed8237563f1f65", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4e88251a753970f78e2962b02aed8237563f1f65", "message": "DependencyGraphBuilder javadoc", "committedDate": "2020-02-14T15:39:09Z", "type": "commit"}, {"oid": "a83ee2f143a39bc86c417f8d84265970b7b08758", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a83ee2f143a39bc86c417f8d84265970b7b08758", "message": "format", "committedDate": "2020-02-14T15:39:58Z", "type": "commit"}, {"oid": "c51d0359521c22fc1f39c431fd7662d975314119", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c51d0359521c22fc1f39c431fd7662d975314119", "message": "buildMavenDependencyGraph to take Artifact", "committedDate": "2020-02-14T15:42:57Z", "type": "commit"}, {"oid": "5da8bd99ced5dc04c4cd070dd088e495dbc329cc", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/5da8bd99ced5dc04c4cd070dd088e495dbc329cc", "message": "format", "committedDate": "2020-02-14T15:46:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMDc4Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379500782", "bodyText": "This was implementation detail.", "author": "suztomo", "createdAt": "2020-02-14T15:44:03Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact", "originalCommit": "c51d0359521c22fc1f39c431fd7662d975314119", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379501206", "bodyText": "Changed the argument type to Artifact because all caller was wrapping the argument with new Dependency(artifact, \"compile\"). The caller should not care about the root dependency's scope.", "author": "suztomo", "createdAt": "2020-02-14T15:44:51Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -195,41 +217,31 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @param artifacts Maven artifacts to retrieve their dependencies\n    * @return dependency graph representing the tree of Maven artifacts\n    */\n-  public DependencyGraphResult buildLinkageCheckDependencyGraph(List<Artifact> artifacts) {\n+  public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts) {\n     ImmutableList<DependencyNode> dependencyNodes =\n         artifacts.stream().map(DefaultDependencyNode::new).collect(toImmutableList());\n-    return buildDependencyGraph(\n-        dependencyNodes, GraphTraversalOption.FULL_DEPENDENCY_WITH_PROVIDED);\n+    return buildDependencyGraph(dependencyNodes, GraphTraversalOption.FULL);\n   }\n \n   /**\n-   * Finds the full compile time, transitive dependency graph including duplicates and conflicting\n-   * versions.\n+   * Builds the transitive dependency graph as seen by Maven. It does not include duplicates and\n+   * conflicting versions. That is, this resolves conflicting versions by picking the first version\n+   * seen. This is how Maven normally operates.\n    */\n-  public DependencyGraphResult buildCompleteGraph(Dependency dependency) {\n-    DefaultDependencyNode root = new DefaultDependencyNode(dependency);\n-    return buildDependencyGraph(ImmutableList.of(root), GraphTraversalOption.FULL_DEPENDENCY);\n-  }\n-\n-  /**\n-   * Finds the complete transitive dependency graph as seen by Maven. It does not include duplicates\n-   * and conflicting versions. That is, this resolves conflicting versions by picking the first\n-   * version seen. This is how Maven normally operates.\n-   */\n-  public DependencyGraphResult buildGraph(Dependency dependency) {\n+  public DependencyGraphResult buildMavenDependencyGraph(Artifact artifact) {", "originalCommit": "c51d0359521c22fc1f39c431fd7662d975314119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MTQzMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379591433", "bodyText": "No, I think we do want dependency here. Conceptually graphs are built from dependencies, not form artifacts.", "author": "elharo", "createdAt": "2020-02-14T18:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNjAwOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379616009", "bodyText": "Reverted.", "author": "suztomo", "createdAt": "2020-02-14T19:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwMTIwNg=="}], "type": "inlineReview"}, {"oid": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "message": "Merge remote-tracking branch 'origin/master' into levelOrder", "committedDate": "2020-02-14T16:32:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379589791", "bodyText": "artifacts don't have dependencies. A dependency contains an artifact (usually) but is not an artifact.", "author": "elharo", "createdAt": "2020-02-14T18:52:05Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.", "originalCommit": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMzAwNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379603007", "bodyText": "In Maven's Dependency and Artifact classes, that's right. However, when drawing our graph we don't need to follow that. I felt it's natural to recognize artifacts as nodes and dependencies as edges.", "author": "suztomo", "createdAt": "2020-02-14T19:22:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxMzkwMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379613900", "bodyText": "As discussed, remove this node and edge definition for now.", "author": "suztomo", "createdAt": "2020-02-14T19:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTc5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDAyMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590023", "bodyText": "Rather than focusing on the methods, describe how Maven itself does this.", "author": "elharo", "createdAt": "2020-02-14T18:52:39Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This", "originalCommit": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDAwNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614005", "bodyText": "Updated. Does that look good?", "author": "suztomo", "createdAt": "2020-02-14T19:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDAyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDEzOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590138", "bodyText": "group ID and artifact ID since this isn't code", "author": "elharo", "createdAt": "2020-02-14T18:52:55Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a", "originalCommit": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDA5NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614095", "bodyText": "Updated", "author": "suztomo", "createdAt": "2020-02-14T19:48:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDEzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDQxNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590417", "bodyText": "A full dependency graph is...", "author": "elharo", "createdAt": "2020-02-14T18:53:34Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the", "originalCommit": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDE1MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614150", "bodyText": "Updated.", "author": "suztomo", "createdAt": "2020-02-14T19:48:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDUxOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590519", "bodyText": "which has", "author": "elharo", "createdAt": "2020-02-14T18:53:49Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes", "originalCommit": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNDM4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379614384", "bodyText": "Fixed.", "author": "suztomo", "createdAt": "2020-02-14T19:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDk1NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379590955", "bodyText": "Is it correct to say that provided and optional are not treated differently than any other dependency?", "author": "elharo", "createdAt": "2020-02-14T18:54:46Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -49,8 +49,33 @@\n import org.eclipse.aether.util.graph.visitor.PathRecordingDependencyVisitor;\n \n /**\n- * Based on the <a href=\"https://maven.apache.org/resolver/index.html\">Apache Maven Artifact\n- * Resolver</a> (formerly known as Eclipse Aether).\n+ * This class builds dependency graphs for Maven artifacts. The nodes in the graph are Maven\n+ * artifacts and its edges are dependencies from an artifact to another.\n+ *\n+ * <p>{@link #buildMavenDependencyGraph(Artifact)} builds a normal Maven dependency graph. This\n+ * graph has the following attributes:\n+ *\n+ * <ul>\n+ *   <li>It contains at most one node for the same groupId and artifactId. (<a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies\">dependency\n+ *       mediation</a>)\n+ *   <li>The scope of a dependency affects the scope of its children's dependencies as per <a\n+ *       href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\">Maven:\n+ *       Dependency Scope</a>\n+ *   <li>It does not contain transitive provided-scope dependencies.\n+ *   <li>It does not contain transitive optional dependencies.\n+ * </ul>\n+ *\n+ * <p>{@link #buildFullDependencyGraph(List)} builds a full dependency graph. This graph has the\n+ * following attributes:\n+ *\n+ * <ul>\n+ *   <li>The same artifact, which have the same group:artifact:version, appears in different nodes\n+ *       in the graph.\n+ *   <li>The scope of a dependency does not affect the scope of its children's dependencies.\n+ *   <li>It contains transitive provided-scope dependencies.", "originalCommit": "ff1eeff2ac4319c94f238fffc9c821c07b66b1a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxNTc3OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1218#discussion_r379615778", "bodyText": "Yes, that's simple. Updated.", "author": "suztomo", "createdAt": "2020-02-14T19:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MDk1NQ=="}], "type": "inlineReview"}, {"oid": "84b5ee12dab5dc37a3fff4596e1f75544ec4cf60", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/84b5ee12dab5dc37a3fff4596e1f75544ec4cf60", "message": "Applied review", "committedDate": "2020-02-14T20:07:17Z", "type": "commit"}, {"oid": "422ef7d67a73cfcec2b88c6a29fbb28c61c7436d", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/422ef7d67a73cfcec2b88c6a29fbb28c61c7436d", "message": "Merge branch 'master' into levelOrder", "committedDate": "2020-02-14T20:35:04Z", "type": "commit"}]}