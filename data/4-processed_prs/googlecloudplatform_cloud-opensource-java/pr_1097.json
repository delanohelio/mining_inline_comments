{"pr_number": 1097, "pr_title": "Make DependencyGraphBuilder nonstatic to hold repositories", "pr_createdAt": "2020-01-10T18:48:44Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097", "timeline": [{"oid": "b67d2ca850ad2f867927d85395afa006a468c113", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b67d2ca850ad2f867927d85395afa006a468c113", "message": "Non-static ClassPathBuilder and DependencyGraphBuilder", "committedDate": "2020-01-10T17:06:50Z", "type": "commit"}, {"oid": "d1b8c35e6c1ce23acb2032064763daf4856417ed", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d1b8c35e6c1ce23acb2032064763daf4856417ed", "message": "Nonstatic dependencygraphbuilder", "committedDate": "2020-01-10T18:32:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMTQ0Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365421443", "bodyText": "why would this method need to change?", "author": "elharo", "createdAt": "2020-01-10T20:40:06Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassPathBuilder.java", "diffHunk": "@@ -74,7 +77,7 @@\n    * @return an ordered map of absolute paths of jar files to one or more Maven dependency paths\n    * @throws RepositoryException when there is a problem retrieving jar files\n    */\n-  public static LinkedListMultimap<Path, DependencyPath> artifactsToDependencyPaths(\n+  public LinkedListMultimap<Path, DependencyPath> artifactsToDependencyPaths(", "originalCommit": "d1b8c35e6c1ce23acb2032064763daf4856417ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyOTMyOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365429328", "bodyText": "The levelOrder method needs to be non-static to touch non-static artifactProblems. Then all other methods that may call levelOrder becomes non-static.", "author": "suztomo", "createdAt": "2020-01-10T21:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMTQ0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMTY4MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365421680", "bodyText": "why not final?", "author": "elharo", "createdAt": "2020-01-10T20:40:48Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -57,13 +57,15 @@\n   private static final CharMatcher LOWER_ALPHA_NUMERIC =\n       CharMatcher.inRange('a', 'z').or(CharMatcher.inRange('0', '9'));\n \n+  private final List<UnresolvableArtifactProblem> artifactProblems = new ArrayList<>();\n+\n   static {\n     detectOsProperties().forEach(System::setProperty);\n   }\n \n   // caching cuts time by about a factor of 4. Dependency class's equality includes exclusions.\n-  private static final Map<Dependency, DependencyNode> cacheWithProvidedScope = new HashMap<>();\n-  private static final Map<Dependency, DependencyNode> cacheWithoutProvidedScope = new HashMap<>();\n+  private static Map<Dependency, DependencyNode> cacheWithProvidedScope = new HashMap<>();", "originalCommit": "d1b8c35e6c1ce23acb2032064763daf4856417ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyOTM4Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365429382", "bodyText": "This is typo.", "author": "suztomo", "createdAt": "2020-01-10T21:03:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMTY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA1MjIxMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366052210", "bodyText": "Fixed.", "author": "suztomo", "createdAt": "2020-01-13T22:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMTY4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMjA5NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365422094", "bodyText": "There's no configuration here, which suggests this should still be static.", "author": "elharo", "createdAt": "2020-01-10T20:42:08Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/UpdateReport.java", "diffHunk": "@@ -40,9 +39,9 @@ public static void main(String[] args) throws RepositoryException {\n     \n     try {\n       DefaultArtifact artifact = new DefaultArtifact(args[0]);\n-      \n-      DependencyGraph graph =\n-          DependencyGraphBuilder.getCompleteDependencies(artifact);\n+\n+      DependencyGraphBuilder dependencyGraphBuilder = new DependencyGraphBuilder();", "originalCommit": "d1b8c35e6c1ce23acb2032064763daf4856417ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyOTY1NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365429655", "bodyText": "The reason of making this non-static is to hold internal state artifactProblems.", "author": "suztomo", "createdAt": "2020-01-10T21:04:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMjA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxNjI0MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366316240", "bodyText": "Implementation detail. This should not change the public API.", "author": "elharo", "createdAt": "2020-01-14T12:42:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyMjA5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNTMxNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365425317", "bodyText": "@elharo This is the reason to make DependencyGraphBuilder non-static. Once DependencyGraphBuilder becomes non-static, then ClassPathBuilder also becomes non-static to hold the instance of DependencyGraphBuilder.", "author": "suztomo", "createdAt": "2020-01-10T20:51:36Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -57,13 +57,15 @@\n   private static final CharMatcher LOWER_ALPHA_NUMERIC =\n       CharMatcher.inRange('a', 'z').or(CharMatcher.inRange('0', '9'));\n \n+  private final List<UnresolvableArtifactProblem> artifactProblems = new ArrayList<>();", "originalCommit": "d1b8c35e6c1ce23acb2032064763daf4856417ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMDQ4NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365430484", "bodyText": "Having static artifactProblem (a global variable) would cause a problem when we call DependencyGraphBuilder to build a graph multiple times. We cannot distinguish which ArtfiactProblems correspond to which graph building invocation.", "author": "suztomo", "createdAt": "2020-01-10T21:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMjM5MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366312391", "bodyText": "I agree. That's a reason to not make it a field, static or instance. artifactProblems is invocation state, not object state. This can cause problems even in single threaded environments.", "author": "elharo", "createdAt": "2020-01-14T12:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU2NjAwMQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366566001", "bodyText": "Let's remove this field.", "author": "suztomo", "createdAt": "2020-01-14T20:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2Nzk1OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366667958", "bodyText": "This field has been removed", "author": "suztomo", "createdAt": "2020-01-15T02:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNTMxNw=="}], "type": "inlineReview"}, {"oid": "f587ab2392a7c15a156a89449285f6ed20d769c2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f587ab2392a7c15a156a89449285f6ed20d769c2", "message": "Merge remote-tracking branch 'origin/master' into dependency_error", "committedDate": "2020-01-10T21:08:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMTIxOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365431219", "bodyText": "LevelOrder touching artifactProblems requires the method to be non-static.", "author": "suztomo", "createdAt": "2020-01-10T21:09:39Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -336,17 +335,13 @@ private static DependencyGraph levelOrder(\n               DependencyNode failedDependencyNode = artifactResult.getRequest().getDependencyNode();\n               ExceptionAndPath failure =\n                   ExceptionAndPath.create(parentNodes, failedDependencyNode, resolutionException);\n-              if (requiredDependency(failure.getPath())) {\n-                resolutionFailures.add(failure);\n-              }\n+              artifactProblems.add(new UnresolvableArtifactProblem(failure.getPath()));", "originalCommit": "f587ab2392a7c15a156a89449285f6ed20d769c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d6dd0e5664d88ef78f55888c921f5f7aa66107c9", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d6dd0e5664d88ef78f55888c921f5f7aa66107c9", "message": "DependencyGraphBuilder to have repository URLs", "committedDate": "2020-01-13T04:16:15Z", "type": "commit"}, {"oid": "040d63f807ba4f9f1311a35310c1825933ea31bb", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/040d63f807ba4f9f1311a35310c1825933ea31bb", "message": "javadoc", "committedDate": "2020-01-13T04:19:02Z", "type": "commit"}, {"oid": "b2d3fd571acf98bd0a80235b162a3549744241ce", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b2d3fd571acf98bd0a80235b162a3549744241ce", "message": "Removed field", "committedDate": "2020-01-13T04:23:27Z", "type": "commit"}, {"oid": "ec6581b3f1f88a27513e8cd0676e9a35dcab0df8", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ec6581b3f1f88a27513e8cd0676e9a35dcab0df8", "message": "Deleted mavenRepositories field", "committedDate": "2020-01-13T04:24:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0MzI5OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365643298", "bodyText": "In this idea, DependencyGraphBuilder takes repository URL configuration.", "author": "suztomo", "createdAt": "2020-01-13T04:17:43Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -44,12 +46,21 @@ public static void main(String[] arguments)\n     LinkageCheckerArguments linkageCheckerArguments =\n         LinkageCheckerArguments.readCommandLine(arguments);\n \n-    RepositoryUtility.setRepositories(linkageCheckerArguments.getExtraMavenRepositoryUrls(),\n-        linkageCheckerArguments.getAddMavenCentral());\n+    DependencyGraphBuilder dependencyGraphBuilder =\n+        new DependencyGraphBuilder(\n+            linkageCheckerArguments.getExtraMavenRepositoryUrls(),\n+            linkageCheckerArguments.getAddMavenCentral());", "originalCommit": "d6dd0e5664d88ef78f55888c921f5f7aa66107c9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0Mzg1MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365643850", "bodyText": "DependencyGraphBuilder to take configuration of repository URLs. As of now, a static field of RepositoryUtility holds the repository URLs. I believe they should be an instance variable of DependencyGraphBuilder.\nFrom old comment on the static mutable field in by Elliotte:\n\nMutable static state suggests we're growing past the point where this class can plausibly be static. OK, for now but consider whether refactoring might help. Either to use more instance methods or to pass the repsositoryURLs as arguments to a method instead.\nhttps://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/349/files#r249024802", "author": "suztomo", "createdAt": "2020-01-13T04:22:17Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -108,20 +115,42 @@ private static String osDetectedArch() {\n     }\n   }\n \n-  private static DependencyNode resolveCompileTimeDependencies(\n-      DependencyNode rootDependencyArtifact)\n+  /**\n+   * @param mavenRepositoryUrls Maven repository URLs to search for dependencies\n+   * @param addMavenCentral if true, add Maven Central to the end of the repository list\n+   * @throws IllegalArgumentException if a URL is malformed or not having an allowed scheme\n+   */\n+  public DependencyGraphBuilder(Iterable<String> mavenRepositoryUrls, boolean addMavenCentral) {", "originalCommit": "040d63f807ba4f9f1311a35310c1825933ea31bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0Mzg5Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365643897", "bodyText": "Repository URLs are the configuration of DependencyGraphBuilder.", "author": "suztomo", "createdAt": "2020-01-13T04:22:50Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -57,13 +60,17 @@\n   private static final CharMatcher LOWER_ALPHA_NUMERIC =\n       CharMatcher.inRange('a', 'z').or(CharMatcher.inRange('0', '9'));\n \n+  private final List<UnresolvableArtifactProblem> artifactProblems = new ArrayList<>();\n+\n+  private final ImmutableList<RemoteRepository> repositories;", "originalCommit": "040d63f807ba4f9f1311a35310c1825933ea31bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMjc5OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366312799", "bodyText": "This one does make sense as a field.", "author": "elharo", "createdAt": "2020-01-14T12:34:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0Mzg5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NDE1OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r365644159", "bodyText": "It was a mutable static variable. A global variable I want to eliminate.", "author": "suztomo", "createdAt": "2020-01-13T04:25:40Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/RepositoryUtility.java", "diffHunk": "@@ -90,8 +90,6 @@\n   public static final RemoteRepository CENTRAL =\n       new RemoteRepository.Builder(\"central\", \"default\", \"http://repo1.maven.org/maven2/\").build();\n \n-  private static ImmutableList<RemoteRepository> mavenRepositories = ImmutableList.of(CENTRAL);", "originalCommit": "ec6581b3f1f88a27513e8cd0676e9a35dcab0df8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d7525d4a9b0cffd3c90bf00d2639412d8a5f8bf7", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d7525d4a9b0cffd3c90bf00d2639412d8a5f8bf7", "message": "Merge remote-tracking branch 'origin/master' into dependency_error", "committedDate": "2020-01-13T20:13:22Z", "type": "commit"}, {"oid": "9d4281ccba2b556638cf5c384b0d47aed4a75670", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/9d4281ccba2b556638cf5c384b0d47aed4a75670", "message": "ClassPathBuilder and DependencyGraphBuilder nonstatic", "committedDate": "2020-01-13T21:30:44Z", "type": "commit"}, {"oid": "bac195b1f7db098b6af7e82435c42b9c14cc3e8a", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/bac195b1f7db098b6af7e82435c42b9c14cc3e8a", "message": "Removing ignored test", "committedDate": "2020-01-13T21:42:21Z", "type": "commit"}, {"oid": "8e13cc24a32c1aa73d437cd551436e1159d5112d", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8e13cc24a32c1aa73d437cd551436e1159d5112d", "message": "final DependencyGraphBuilder", "committedDate": "2020-01-13T21:44:05Z", "type": "commit"}, {"oid": "7110ec3b0c8d01b02a3c1ecf39949c350f4e94f1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7110ec3b0c8d01b02a3c1ecf39949c350f4e94f1", "message": "Test message on fail", "committedDate": "2020-01-13T21:50:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0MTUzNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366041535", "bodyText": "Now we don't need to have these methods that use mavenRepositories, a mutable global variable.", "author": "suztomo", "createdAt": "2020-01-13T21:37:02Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/RepositoryUtility.java", "diffHunk": "@@ -289,34 +296,6 @@ public static boolean shouldSkipBomMember(Artifact artifact) {\n     return false;\n   }\n \n-  /**\n-   * Sets {@link #mavenRepositories} to search for dependencies.\n-   *\n-   * @param addMavenCentral if true, add Maven Central to the end of the repository list\n-   * @throws IllegalArgumentException if a URL is malformed or not having an allowed scheme\n-   */\n-  public static void setRepositories(\n-      Iterable<String> mavenRepositoryUrls, boolean addMavenCentral) {\n-    ImmutableList.Builder<RemoteRepository> repositoryListBuilder = ImmutableList.builder();\n-    for (String mavenRepositoryUrl : mavenRepositoryUrls) {\n-      RemoteRepository repository = mavenRepositoryFromUrl(mavenRepositoryUrl);\n-      repositoryListBuilder.add(repository);\n-    }\n-\n-    if (addMavenCentral) {\n-      repositoryListBuilder.add(CENTRAL);\n-    }\n-\n-    mavenRepositories = repositoryListBuilder.build();\n-  }\n-\n-  /** Adds {@link #mavenRepositories} to {@code collectRequest}. */\n-  public static void addRepositoriesToRequest(CollectRequest collectRequest) {\n-    for (RemoteRepository repository : mavenRepositories) {\n-      collectRequest.addRepository(repository);\n-    }\n-  }", "originalCommit": "9d4281ccba2b556638cf5c384b0d47aed4a75670", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0NjMyMg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366046322", "bodyText": "No need to cleanup the mutable global variable any more.", "author": "suztomo", "createdAt": "2020-01-13T21:48:12Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerArgumentsTest.java", "diffHunk": "@@ -16,29 +16,14 @@\n \n package com.google.cloud.tools.opensource.classpath;\n \n-import com.google.cloud.tools.opensource.dependencies.RepositoryUtility;\n-import com.google.common.collect.ImmutableList;\n import com.google.common.truth.Truth;\n-import java.nio.file.Path;\n-import java.util.List;\n import org.apache.commons.cli.ParseException;\n import org.eclipse.aether.RepositoryException;\n-import org.eclipse.aether.artifact.Artifact;\n-import org.eclipse.aether.artifact.DefaultArtifact;\n-import org.eclipse.aether.collection.CollectRequest;\n-import org.eclipse.aether.repository.RemoteRepository;\n-import org.junit.After;\n import org.junit.Assert;\n import org.junit.Test;\n \n public class LinkageCheckerArgumentsTest {\n \n-  @After\n-  public void cleanup() {\n-    // Resets the effect of setRepositories\n-    RepositoryUtility.setRepositories(ImmutableList.of(), true);", "originalCommit": "8e13cc24a32c1aa73d437cd551436e1159d5112d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0Njc0OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366046749", "bodyText": "These tests have moved to DependencyGraphBuilderTest.", "author": "suztomo", "createdAt": "2020-01-13T21:49:11Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerArgumentsTest.java", "diffHunk": "@@ -89,42 +74,6 @@ public void parseCommandLineArguments_invalidOption() {\n     }\n   }\n \n-  @Test\n-  public void testConfigureAdditionalMavenRepositories_addingGoogleAndroidRepository()\n-      throws ParseException, RepositoryException {\n-    // Previously this test was using https://repo.spring.io/milestone and artifact\n-    // org.springframework:spring-asm:3.1.0.RC2 but the repository was not stable.\n-    LinkageCheckerArguments parsedArguments =\n-        LinkageCheckerArguments.readCommandLine(\n-            \"-j\", \"dummy.jar\", \"-m\", \"https://dl.google.com/dl/android/maven2\");\n-    RepositoryUtility.setRepositories(\n-        parsedArguments.getExtraMavenRepositoryUrls(), parsedArguments.getAddMavenCentral());\n-\n-    // This artifact does not exist in Maven central, but it is in Spring's repository\n-    // Spring-asm is used here because it does not have complex dependencies\n-    Artifact artifact = new DefaultArtifact(\"androidx.lifecycle:lifecycle-common-java8:2.0.0\");\n-\n-    List<Path> paths = ClassPathBuilder.artifactsToClasspath(ImmutableList.of(artifact));\n-    Truth.assertThat(paths).isNotEmpty();\n-  }\n-\n-  @Test\n-  public void testConfigureAdditionalMavenRepositories_notToUseMavenCentral()\n-      throws ParseException {", "originalCommit": "8e13cc24a32c1aa73d437cd551436e1159d5112d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e834c2b5040703a946dc62d06ee4fcf4cc8891ab", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e834c2b5040703a946dc62d06ee4fcf4cc8891ab", "message": "Fixed typo", "committedDate": "2020-01-13T22:01:23Z", "type": "commit"}, {"oid": "bbbdb185badb64aaa98d23c802b15dd4c28c28e8", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/bbbdb185badb64aaa98d23c802b15dd4c28c28e8", "message": "Merge branch 'master' into dependency_error", "committedDate": "2020-01-13T23:57:47Z", "type": "commit"}, {"oid": "ef3fee84df2d58df0d77d1be0b5d3e7bd107f022", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ef3fee84df2d58df0d77d1be0b5d3e7bd107f022", "message": "Merge branch 'master' into dependency_error", "committedDate": "2020-01-14T01:44:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMzAzMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366313033", "bodyText": "not having --> does not have", "author": "elharo", "createdAt": "2020-01-14T12:34:45Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -108,20 +115,41 @@ private static String osDetectedArch() {\n     }\n   }\n \n-  private static DependencyNode resolveCompileTimeDependencies(\n-      DependencyNode rootDependencyArtifact)\n+  public DependencyGraphBuilder() {\n+    this(ImmutableList.of(CENTRAL.getUrl()));\n+  }\n+\n+  /**\n+   * @param mavenRepositoryUrls Maven repository URLs to search for dependencies\n+   * @throws IllegalArgumentException if a URL is malformed or not having an allowed scheme", "originalCommit": "ef3fee84df2d58df0d77d1be0b5d3e7bd107f022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2ODEyMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366668120", "bodyText": "Fixed.", "author": "suztomo", "createdAt": "2020-01-15T02:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMzAzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMzgzMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366313830", "bodyText": "during constructing a --> while constructing the", "author": "elharo", "createdAt": "2020-01-14T12:36:38Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -108,20 +115,41 @@ private static String osDetectedArch() {\n     }\n   }\n \n-  private static DependencyNode resolveCompileTimeDependencies(\n-      DependencyNode rootDependencyArtifact)\n+  public DependencyGraphBuilder() {\n+    this(ImmutableList.of(CENTRAL.getUrl()));\n+  }\n+\n+  /**\n+   * @param mavenRepositoryUrls Maven repository URLs to search for dependencies\n+   * @throws IllegalArgumentException if a URL is malformed or not having an allowed scheme\n+   */\n+  public DependencyGraphBuilder(Iterable<String> mavenRepositoryUrls) {\n+    ImmutableList.Builder<RemoteRepository> repositoryListBuilder = ImmutableList.builder();\n+    for (String mavenRepositoryUrl : mavenRepositoryUrls) {\n+      RemoteRepository repository = mavenRepositoryFromUrl(mavenRepositoryUrl);\n+      repositoryListBuilder.add(repository);\n+    }\n+    this.repositories = repositoryListBuilder.build();\n+  }\n+\n+  /** Returns unresolved artifact problems encountered during constructing a dependency graph. */", "originalCommit": "ef3fee84df2d58df0d77d1be0b5d3e7bd107f022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2ODIyNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366668225", "bodyText": "Fixed in DependencyGraphResult.getArtifactProblems.", "author": "suztomo", "createdAt": "2020-01-15T02:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMzgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxNTU5Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366315597", "bodyText": "This object can only be used once. The instance state makes it not reusable. I suspect what we really need here is a static method that uses private classes and objects to keep track of the invocation state. However none of that should be exposed in the published API.\nAnd in any case, that's just an implementation detail. Looking at this, what you have is a static method. Everything that's being stored in the fields could be passed along through method arguments from one method call to the next.", "author": "elharo", "createdAt": "2020-01-14T12:40:48Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyLister.java", "diffHunk": "@@ -33,10 +32,10 @@ public static void main(String[] args) throws RepositoryException {\n     \n     try {\n       DefaultArtifact artifact = new DefaultArtifact(args[0]);\n-    \n-      DependencyGraph graph =\n-          DependencyGraphBuilder.getCompleteDependencies(artifact);\n-      \n+\n+      DependencyGraphBuilder dependencyGraphBuilder = new DependencyGraphBuilder();", "originalCommit": "ef3fee84df2d58df0d77d1be0b5d3e7bd107f022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQyOTI1Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r367429256", "bodyText": "As discussed, I'll make DependencyGraphBuilder non-static.", "author": "suztomo", "createdAt": "2020-01-16T13:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxNTU5Nw=="}], "type": "inlineReview"}, {"oid": "e82a010b991b148ce395ccbd0db922aa2b99ca5f", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e82a010b991b148ce395ccbd0db922aa2b99ca5f", "message": "DependencyGraphResult", "committedDate": "2020-01-15T02:14:16Z", "type": "commit"}, {"oid": "c077e811f41b4f126589fab11c5cd3fdbd62ae4d", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c077e811f41b4f126589fab11c5cd3fdbd62ae4d", "message": "Format", "committedDate": "2020-01-15T02:15:19Z", "type": "commit"}, {"oid": "8c9c4bb3c1edb364d5df4ab18d33383c1fbbdb82", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8c9c4bb3c1edb364d5df4ab18d33383c1fbbdb82", "message": "javadoc", "committedDate": "2020-01-15T02:26:01Z", "type": "commit"}, {"oid": "24c68953a5df12034d8c5795116b157a4250bea9", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/24c68953a5df12034d8c5795116b157a4250bea9", "message": "Merge remote-tracking branch 'origin/master' into dependency_error", "committedDate": "2020-01-15T02:26:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2ODc3Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366668773", "bodyText": "LinkageCheckerMain configures DependencyGraphBuilder's repository URLs.", "author": "suztomo", "createdAt": "2020-01-15T02:22:42Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerMain.java", "diffHunk": "@@ -44,12 +47,20 @@ public static void main(String[] arguments)\n     LinkageCheckerArguments linkageCheckerArguments =\n         LinkageCheckerArguments.readCommandLine(arguments);\n \n-    RepositoryUtility.setRepositories(linkageCheckerArguments.getExtraMavenRepositoryUrls(),\n-        linkageCheckerArguments.getAddMavenCentral());\n+    DependencyGraphBuilder dependencyGraphBuilder =\n+        new DependencyGraphBuilder(linkageCheckerArguments.getMavenRepositoryUrls());", "originalCommit": "c077e811f41b4f126589fab11c5cd3fdbd62ae4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2OTA4NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r366669085", "bodyText": "New class to hold dependency graph and artifact problems.", "author": "suztomo", "createdAt": "2020-01-15T02:24:15Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphResult.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+/** Result of dependency graph building with {@link UnresolvableArtifactProblem}s if any. */\n+public final class DependencyGraphResult {", "originalCommit": "c077e811f41b4f126589fab11c5cd3fdbd62ae4d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "05fc4612f030233d3644c0dc2743f4efa7823dc8", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/05fc4612f030233d3644c0dc2743f4efa7823dc8", "message": "Merge branch 'master' into dependency_error", "committedDate": "2020-01-15T15:28:35Z", "type": "commit"}, {"oid": "29bd0ea1774ca1e355bead68acc7cac4054f52d6", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/29bd0ea1774ca1e355bead68acc7cac4054f52d6", "message": "Merge branch 'master' into dependency_error", "committedDate": "2020-01-15T16:17:55Z", "type": "commit"}, {"oid": "6c3d9882cfff9760f0d83a8266ebd5b790ea0dfe", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/6c3d9882cfff9760f0d83a8266ebd5b790ea0dfe", "message": "Merge branch 'master' into dependency_error", "committedDate": "2020-01-15T17:06:19Z", "type": "commit"}, {"oid": "4395837ad68c0b18f6012d67ebcaa40a184d4bb2", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4395837ad68c0b18f6012d67ebcaa40a184d4bb2", "message": "Fixed tests for HTTPS", "committedDate": "2020-01-15T17:12:12Z", "type": "commit"}, {"oid": "d11d750662dcf09c55b99be1e94546b24ca622ad", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/d11d750662dcf09c55b99be1e94546b24ca622ad", "message": "Merge branch 'dependency_error' of https://github.com/GoogleCloudPlatform/cloud-opensource-java into dependency_error", "committedDate": "2020-01-15T17:13:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5NjAwMQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r367396001", "bodyText": "in resolving or collecting dependency --> resolving or collecting dependencies", "author": "elharo", "createdAt": "2020-01-16T12:41:31Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -229,7 +220,7 @@ private DependencyNode resolveCompileTimeDependencies(\n    * @return dependency graph representing the tree of Maven artifacts\n    * @throws RepositoryException when there is a problem in resolving or collecting dependency", "originalCommit": "e82a010b991b148ce395ccbd0db922aa2b99ca5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQyNzY2Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r367427666", "bodyText": "Updated.", "author": "suztomo", "createdAt": "2020-01-16T13:52:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5NjAwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5NjY5NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r367396695", "bodyText": "public final (or just final if it doesn't need to be public)", "author": "elharo", "createdAt": "2020-01-16T12:43:22Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphResult.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+/** Result of dependency graph building with {@link UnresolvableArtifactProblem}s if any. */\n+final public class DependencyGraphResult {", "originalCommit": "e82a010b991b148ce395ccbd0db922aa2b99ca5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzMDI1NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r367430254", "bodyText": "Updated to public final. This is public because ClassPathBuilder in a different package touches this.", "author": "suztomo", "createdAt": "2020-01-16T13:57:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5NjY5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5Nzg3MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r367397871", "bodyText": "We don't seem to use this method except in tests. What am I missing?", "author": "elharo", "createdAt": "2020-01-16T12:46:19Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphResult.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.tools.opensource.dependencies;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+/** Result of dependency graph building with {@link UnresolvableArtifactProblem}s if any. */\n+final public class DependencyGraphResult {\n+\n+  private final DependencyGraph dependencyGraph;\n+  private final ImmutableList<UnresolvableArtifactProblem> artifactProblems;\n+\n+  DependencyGraphResult(\n+      DependencyGraph dependencyGraph, Iterable<UnresolvableArtifactProblem> artifactProblems) {\n+    this.dependencyGraph = checkNotNull(dependencyGraph);\n+    this.artifactProblems = ImmutableList.copyOf(artifactProblems);\n+  };\n+\n+  public DependencyGraph getDependencyGraph() {\n+    return dependencyGraph;\n+  }\n+\n+  /**\n+   * Returns problems encountered while constructing the dependency graph.\n+   */\n+  ImmutableList<UnresolvableArtifactProblem> getArtifactProblems() {", "originalCommit": "e82a010b991b148ce395ccbd0db922aa2b99ca5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQyODc2NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1097#discussion_r367428765", "bodyText": "Marked as @VisibleForTesting for now.\nThis PR is second step of the change to show unresolved artifact at the end, focusing on DependencyGraphBuilder non-static. I will create next PR to use getArtifactProblems in ClassPathBuilder and LinkageCheckerMain to show them.", "author": "suztomo", "createdAt": "2020-01-16T13:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5Nzg3MQ=="}], "type": "inlineReview"}, {"oid": "cfeef922b0430c51417d3ddacee3b6a726e1d56e", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/cfeef922b0430c51417d3ddacee3b6a726e1d56e", "message": "Merge remote-tracking branch 'origin/master' into dependency_error", "committedDate": "2020-01-16T13:49:32Z", "type": "commit"}, {"oid": "b95d9910f87bbaf7e7981bec202970fe17622a5e", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b95d9910f87bbaf7e7981bec202970fe17622a5e", "message": "Applied review", "committedDate": "2020-01-16T13:58:31Z", "type": "commit"}]}