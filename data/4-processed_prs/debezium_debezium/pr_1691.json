{"pr_number": 1691, "pr_title": "DBZ-2329 Fix for: Change events lost when connnector is restarted while processing transaction with PK update", "pr_createdAt": "2020-07-10T14:58:35Z", "pr_url": "https://github.com/debezium/debezium/pull/1691", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDA1Ng==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880056", "bodyText": "That's more for DEBUG level perhaps? Or is this a rare thing to happen?", "author": "gunnarmorling", "createdAt": "2020-07-21T07:03:15Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwNjMwOA==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457906308", "bodyText": "IIUC it should happen only once upon start then I'd keep it as info,", "author": "jpechane", "createdAt": "2020-07-21T07:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwOTg4Nw==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457909887", "bodyText": "Ok, makes sense.", "author": "gunnarmorling", "createdAt": "2020-07-21T08:00:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDA1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDEwMQ==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880101", "bodyText": "Same here.", "author": "gunnarmorling", "createdAt": "2020-07-21T07:03:21Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java", "diffHunk": "@@ -191,15 +193,28 @@ public void execute(ChangeEventSourceContext context) throws InterruptedExceptio\n                                 tableWithSmallestLsn.next();\n                                 continue;\n                             }\n+\n+                            if (tableWithSmallestLsn.isNewTransaction() && changesStoppedBeingMonotonic.get()) {\n+                                LOGGER.info(\"Resetting changesStoppedBeingMonotonic as transaction changes\");\n+                                changesStoppedBeingMonotonic.set(false);\n+                            }\n+\n+                            // After restart for changes that are not monotonic to avoid data loss\n+                            if (tableWithSmallestLsn.isCurrentPositionSmallerThanPreviousPosition()) {\n+                                LOGGER.info(\"Disabling skipping changes due to not monotonic order of changes\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwNjM4Mw==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457906383", "bodyText": "Same as above", "author": "jpechane", "createdAt": "2020-07-21T07:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQzMA==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457880430", "bodyText": "Could you add a JavaDoc comment describing the semantics; in particular, what's \"new\" in this context?", "author": "gunnarmorling", "createdAt": "2020-07-21T07:04:03Z", "path": "debezium-core/src/main/java/io/debezium/pipeline/source/spi/ChangeTableResultSet.java", "diffHunk": "@@ -100,4 +110,6 @@ public String toString() {\n     protected abstract int getOperation(ResultSet resultSet) throws SQLException;\n \n     protected abstract T getNextChangePosition(ResultSet resultSet) throws SQLException;\n+\n+    protected abstract boolean isNewTransaction() throws SQLException;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MDY5NA==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457950694", "bodyText": "Added.", "author": "korzenek", "createdAt": "2020-07-21T09:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkwMDg0OQ==", "url": "https://github.com/debezium/debezium/pull/1691#discussion_r457900849", "bodyText": "tableC -> tableB?", "author": "gunnarmorling", "createdAt": "2020-07-21T07:44:06Z", "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -605,6 +605,56 @@ public void updatePrimaryKeyWithRestartInMiddle() throws Exception {\n         stopConnector();\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-2329\")\n+    public void updatePrimaryKeyTwiceWithRestartInMiddleOfTx() throws Exception {\n+\n+        final Configuration config = TestHelper.defaultConfig()\n+                .with(SqlServerConnectorConfig.SNAPSHOT_MODE, SnapshotMode.INITIAL)\n+                .with(SqlServerConnectorConfig.MAX_QUEUE_SIZE, 2)\n+                .with(SqlServerConnectorConfig.MAX_BATCH_SIZE, 1)\n+                .with(SqlServerConnectorConfig.TOMBSTONES_ON_DELETE, false)\n+                .build();\n+\n+        // Testing.Print.enable();\n+        // Wait for snapshot completion\n+        start(SqlServerConnector.class, config, record -> {\n+            final Struct envelope = (Struct) record.value();\n+            boolean stop = envelope != null && \"d\".equals(envelope.get(\"op\")) && (envelope.getStruct(\"before\").getInt32(\"id\") == 305);\n+            return stop;\n+        });\n+        assertConnectorIsRunning();\n+\n+        consumeRecordsByTopic(1);\n+\n+        connection.setAutoCommit(false);\n+\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (1,'1')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (2,'2')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (3,'3')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (4,'4')\");\n+        connection.execute(\"INSERT INTO tableb (id, colb) values (5,'5')\");\n+        consumeRecordsByTopic(5);\n+\n+        connection.execute(\"UPDATE tableb set id = colb + 300\");\n+        connection.execute(\"UPDATE tableb set id = colb + 300\");\n+\n+        final SourceRecords records1 = consumeRecordsByTopic(14);\n+\n+        stopConnector();\n+\n+        start(SqlServerConnector.class, config);\n+        assertConnectorIsRunning();\n+        final SourceRecords records2 = consumeRecordsByTopic(6);\n+\n+        final List<SourceRecord> tableC = records1.recordsForTopic(\"server1.dbo.tableb\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "8031f1f8860a1cf034747f5d8cf9a83c960fb045", "url": "https://github.com/debezium/debezium/commit/8031f1f8860a1cf034747f5d8cf9a83c960fb045", "message": "DBZ-2329 Do not skip events after restart when stream is not monotonic", "committedDate": "2020-07-21T10:52:25Z", "type": "commit"}, {"oid": "8031f1f8860a1cf034747f5d8cf9a83c960fb045", "url": "https://github.com/debezium/debezium/commit/8031f1f8860a1cf034747f5d8cf9a83c960fb045", "message": "DBZ-2329 Do not skip events after restart when stream is not monotonic", "committedDate": "2020-07-21T10:52:25Z", "type": "forcePushed"}]}