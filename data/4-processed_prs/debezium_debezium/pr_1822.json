{"pr_number": 1822, "pr_title": "DBZ-2495 Updating to handle captured_column_list without specifying column.exclude.list", "pr_createdAt": "2020-09-21T10:01:03Z", "pr_url": "https://github.com/debezium/debezium/pull/1822", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "dd75ab9443de6e8e27d8cbb1bc7832bf58391a7c", "url": "https://github.com/debezium/debezium/commit/dd75ab9443de6e8e27d8cbb1bc7832bf58391a7c", "message": "DBZ-2495 Updating to handle captured_column_list without specify column.exclude.list", "committedDate": "2020-09-21T12:26:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM5ODY0Mw==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r493398643", "bodyText": "Can be final? Also simply capturedColumns would be preferred, no need to encode the type into the name (same for the getter exposing it).", "author": "gunnarmorling", "createdAt": "2020-09-23T10:01:18Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerChangeTable.java", "diffHunk": "@@ -31,19 +36,19 @@\n      */\n     private Lsn stopLsn;\n \n-    /**\n-     * The table from which the changes are captured\n-     */\n-    private Table sourceTable;\n+    private List<String> capturedColumnList;", "originalCommit": "4a69febadaabd4d86e34903580f20798a80a60b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNDE4Mg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r493434182", "bodyText": "Yeah, I can make that change. I had both the original string and a list at one point but with the string gone, you're right the \"list\" is unnecessary.", "author": "jgormley6", "createdAt": "2020-09-23T10:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM5ODY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQwNTI4Mw==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r493405283", "bodyText": "This will make the map not big enough due to the default load factor, triggering a re-size if all columns are added. I wouldn't bother and just call new HashMap<>().", "author": "gunnarmorling", "createdAt": "2020-09-23T10:08:37Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerChangeTablePointer.java", "diffHunk": "@@ -102,34 +101,26 @@ protected boolean isNewTransaction() throws SQLException {\n      * a subset of columns\n      */\n     private ResultSetMapper<Object[]> createResultSetMapper(Table table) throws SQLException {\n-        final List<String> sourceTableColumns = table.columns()\n-                .stream()\n-                .map(Column::name)\n-                .collect(Collectors.toList());\n+        Map<String, Column> sourceTableColumns = new HashMap<>(table.columns().size());", "originalCommit": "4a69febadaabd4d86e34903580f20798a80a60b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQxNTgyMQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r493415821", "bodyText": "Could you also update SqlServerConnectorIT#excludeColumnWhenCaptureInstanceExcludesColumns() and remove the filter? As discussed in the Jira issue, this should not be needed any longer with your fix.", "author": "gunnarmorling", "createdAt": "2020-09-23T10:20:16Z", "path": "debezium-connector-sqlserver/src/test/java/io/debezium/connector/sqlserver/SqlServerConnectorIT.java", "diffHunk": "@@ -8,6 +8,7 @@\n import static io.debezium.connector.sqlserver.util.TestHelper.TYPE_LENGTH_PARAMETER_KEY;", "originalCommit": "4a69febadaabd4d86e34903580f20798a80a60b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "53a15cf2a3fb3ffc72e1155711a55365f5f20484", "url": "https://github.com/debezium/debezium/commit/53a15cf2a3fb3ffc72e1155711a55365f5f20484", "message": "DBZ-2495 Updating tables to utilize Table.editor for creating new tables", "committedDate": "2020-09-24T13:45:35Z", "type": "forcePushed"}, {"oid": "b47210c939ae3d78ee059b3451300ebbe6b8cb5b", "url": "https://github.com/debezium/debezium/commit/b47210c939ae3d78ee059b3451300ebbe6b8cb5b", "message": "DBZ-2495 Updating to handle captured_column_list without specify column.exclude.list", "committedDate": "2020-09-24T13:45:34Z", "type": "commit"}, {"oid": "b634bf11bcb9cd22be7fca809e97d0a08f2f5e1e", "url": "https://github.com/debezium/debezium/commit/b634bf11bcb9cd22be7fca809e97d0a08f2f5e1e", "message": "DBZ-2495 Updating docs and comments", "committedDate": "2020-09-24T13:45:34Z", "type": "commit"}, {"oid": "630fd19d7367de457b03b9d506418f218b314692", "url": "https://github.com/debezium/debezium/commit/630fd19d7367de457b03b9d506418f218b314692", "message": "DBZ-2495 Updating per PR comments", "committedDate": "2020-09-24T13:45:35Z", "type": "commit"}, {"oid": "53a15cf2a3fb3ffc72e1155711a55365f5f20484", "url": "https://github.com/debezium/debezium/commit/53a15cf2a3fb3ffc72e1155711a55365f5f20484", "message": "DBZ-2495 Updating tables to utilize Table.editor for creating new tables", "committedDate": "2020-09-24T13:45:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDU0MQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494334541", "bodyText": "IMHO this should not be done in constructor but on the caller side. The string encoding is the stored procedure implementation detail and should not leak into logical representation of the capture table.", "author": "jpechane", "createdAt": "2020-09-24T13:49:04Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerChangeTable.java", "diffHunk": "@@ -32,18 +37,21 @@\n     private Lsn stopLsn;\n \n     /**\n-     * The table from which the changes are captured\n+     * List of columns captured by the cdc table.\n      */\n-    private Table sourceTable;\n+    private final List<String> capturedColumns;\n \n-    public SqlServerChangeTable(TableId sourceTableId, String captureInstance, int changeTableObjectId, Lsn startLsn, Lsn stopLsn) {\n+    public SqlServerChangeTable(TableId sourceTableId, String captureInstance, int changeTableObjectId, Lsn startLsn, Lsn stopLsn,\n+                                String capturedColumnListString) {\n         super(captureInstance, sourceTableId, resolveChangeTableId(sourceTableId, captureInstance), changeTableObjectId);\n         this.startLsn = startLsn;\n         this.stopLsn = stopLsn;\n+        this.capturedColumns = Arrays.asList(BRACKET_PATTERN.matcher(Optional.ofNullable(capturedColumnListString).orElse(\"\"))", "originalCommit": "53a15cf2a3fb3ffc72e1155711a55365f5f20484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM0MDk2Mg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494340962", "bodyText": "Agreed, updated it", "author": "jgormley6", "createdAt": "2020-09-24T13:56:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDU0MQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "5d5905dad58194d9e654f62ec23f2e91417165e9", "url": "https://github.com/debezium/debezium/commit/5d5905dad58194d9e654f62ec23f2e91417165e9", "message": "DBZ-2495 Moving string splitting logic out of constructor", "committedDate": "2020-09-24T15:41:32Z", "type": "forcePushed"}, {"oid": "5d5905dad58194d9e654f62ec23f2e91417165e9", "url": "https://github.com/debezium/debezium/commit/5d5905dad58194d9e654f62ec23f2e91417165e9", "message": "DBZ-2495 Moving string splitting logic out of constructor", "committedDate": "2020-09-24T15:41:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MDMxNg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494790316", "bodyText": "Can we still keep it in a separate method?", "author": "jpechane", "createdAt": "2020-09-25T07:08:29Z", "path": "debezium-core/src/main/java/io/debezium/relational/RelationalSnapshotChangeEventSource.java", "diffHunk": "@@ -318,8 +318,15 @@ private void createDataEventsForTable(ChangeEventSourceContext sourceContext, Re\n         try (Statement statement = readTableStatement();\n                 ResultSet rs = statement.executeQuery(selectStatement.get())) {\n \n-            Column[] columns = getColumnsForResultSet(table, rs);\n-            final int numColumns = table.columns().size();\n+            ResultSetMetaData metaData = rs.getMetaData();", "originalCommit": "5d5905dad58194d9e654f62ec23f2e91417165e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MjA1MQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494792051", "bodyText": "This is very similar to the code in https://github.com/debezium/debezium/pull/1822/files#diff-d9a5092f0eb1f68e8881b17b09f25827R106\nCan't it be extracted into a utility method shared?", "author": "jpechane", "createdAt": "2020-09-25T07:12:26Z", "path": "debezium-core/src/main/java/io/debezium/relational/RelationalSnapshotChangeEventSource.java", "diffHunk": "@@ -318,8 +318,15 @@ private void createDataEventsForTable(ChangeEventSourceContext sourceContext, Re\n         try (Statement statement = readTableStatement();\n                 ResultSet rs = statement.executeQuery(selectStatement.get())) {\n \n-            Column[] columns = getColumnsForResultSet(table, rs);\n-            final int numColumns = table.columns().size();\n+            ResultSetMetaData metaData = rs.getMetaData();\n+            Column[] columns = new Column[metaData.getColumnCount()];\n+            int greatestColumnPosition = 0;\n+            for (int i = 0; i < columns.length; i++) {", "originalCommit": "5d5905dad58194d9e654f62ec23f2e91417165e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NDg0NQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494884845", "bodyText": "There are slightly different in that one is going to a map and another an array, but I can extract them to the same utility class so that they live together at least.", "author": "jgormley6", "createdAt": "2020-09-25T10:04:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MjA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzQyNQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494793425", "bodyText": "This is just a technical method, I don't think this belongs to the interface. Is not this unnecessary code optimization?", "author": "jpechane", "createdAt": "2020-09-25T07:15:36Z", "path": "debezium-core/src/main/java/io/debezium/relational/TableImpl.java", "diffHunk": "@@ -96,7 +96,8 @@ public String toString() {\n         return sb.toString();\n     }\n \n-    protected void toString(StringBuilder sb, String prefix) {\n+    @Override\n+    public void toString(StringBuilder sb, String prefix) {", "originalCommit": "5d5905dad58194d9e654f62ec23f2e91417165e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg2MzYzNg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494863636", "bodyText": "Indeed, let's not expose it on the interface. toString() shouldn't be invoked at runtime anyways, so shouldn't make any difference.", "author": "gunnarmorling", "createdAt": "2020-09-25T09:26:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzQyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg2NjMyNg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494866326", "bodyText": "This was to allow Tables to utilize Table over TableImpl (it utilizes the method for it's toString()). I can rework the method to utilize the normal toString or throw in casting instead.", "author": "jgormley6", "createdAt": "2020-09-25T09:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzQyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg3MjA2NQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494872065", "bodyText": "The latter sounds good.", "author": "gunnarmorling", "createdAt": "2020-09-25T09:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg2NDQzMw==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494864433", "bodyText": "Nice, this was bothering me, too :)", "author": "gunnarmorling", "createdAt": "2020-09-25T09:27:55Z", "path": "debezium-core/src/main/java/io/debezium/relational/Tables.java", "diffHunk": "@@ -182,8 +182,14 @@ public int size() {\n     public Table overwriteTable(TableId tableId, List<Column> columnDefs, List<String> primaryKeyColumnNames,\n                                 String defaultCharsetName) {\n         return lock.write(() -> {\n-            TableImpl updated = new TableImpl(tableId, columnDefs, primaryKeyColumnNames, defaultCharsetName);", "originalCommit": "5d5905dad58194d9e654f62ec23f2e91417165e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg2NjkyNQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494866925", "bodyText": "It actually causes a bug with the rest of the implementation because the TableEditor shifts the positions of the columns (something I found unexpected).", "author": "jgormley6", "createdAt": "2020-09-25T09:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg2NDQzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg3MTcwMg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494871702", "bodyText": "Interesting; so are you reverting this one then?\nWhat's unclear to me is why we need that explicit position field in Column in the first place; I'd assume we'd always be able to derive that info from the list index. But seems rather risky to change right now and it's definitely a separate discussion.", "author": "gunnarmorling", "createdAt": "2020-09-25T09:40:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg2NDQzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NTg2OQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494885869", "bodyText": "Sorry, I meant that I needed to make that change to solve the bug.\nI prefer using the position as it seems to prevent issues around excluding columns (that's what my past three PRs have been about \ud83d\ude05 ). It just feels a little safer to me than the raw index.", "author": "jgormley6", "createdAt": "2020-09-25T10:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg2NDQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg3MzYzOQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494873639", "bodyText": "So in which case would greatestColumnPosition be different from the width of the result set (ignoring any +/-1 difference due to indexing based on 0 vs. 1)?", "author": "gunnarmorling", "createdAt": "2020-09-25T09:43:51Z", "path": "debezium-core/src/main/java/io/debezium/relational/RelationalSnapshotChangeEventSource.java", "diffHunk": "@@ -318,8 +318,15 @@ private void createDataEventsForTable(ChangeEventSourceContext sourceContext, Re\n         try (Statement statement = readTableStatement();\n                 ResultSet rs = statement.executeQuery(selectStatement.get())) {\n \n-            Column[] columns = getColumnsForResultSet(table, rs);\n-            final int numColumns = table.columns().size();\n+            ResultSetMetaData metaData = rs.getMetaData();\n+            Column[] columns = new Column[metaData.getColumnCount()];\n+            int greatestColumnPosition = 0;\n+            for (int i = 0; i < columns.length; i++) {\n+                columns[i] = table.columnWithName(metaData.getColumnName(i + 1));\n+                greatestColumnPosition = greatestColumnPosition < columns[i].position()", "originalCommit": "5d5905dad58194d9e654f62ec23f2e91417165e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NjIzNg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494886236", "bodyText": "They should be the same now, I mentioned in a previous comment:\n\nI can remove what I did with the column position indexing and go back to raw indexing now, but I think using position still is probably a safer approach, but I can revert that if desired.", "author": "jgormley6", "createdAt": "2020-09-25T10:06:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg3MzYzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4Njk4OA==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494886988", "bodyText": "I feel position is a safer way to go, as I've been implementing several changes around this area, and each time I ran into issues around these indexes. Using the position everywhere ensures we have a consistent column size and placement regardless of what happens (columns being excluded and what not).", "author": "jgormley6", "createdAt": "2020-09-25T10:08:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg3MzYzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4NzU4Mg==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494887582", "bodyText": "Actually, this might still be necessary now that I think about it.\nWith the snapshot now filtering items out of the select based on the include/exclude list, if you filter out a column in the middle of the row, it'll run into issues with the raw index...\nRaw index approach would result in [colA, colB, colD] while this would be [colA, colB, null, colD] if a third column, colC, was filtered client side only.", "author": "jgormley6", "createdAt": "2020-09-25T10:09:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg3MzYzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5NDAzOQ==", "url": "https://github.com/debezium/debezium/pull/1822#discussion_r494894039", "bodyText": "Ok, I suppose you're right. Overall I still have the feeling (or hope?) we could get rid of the position business altogether, but that'll have to wait for another time. This first loop is invoked only once per result set, so overhead is small.", "author": "gunnarmorling", "createdAt": "2020-09-25T10:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg3MzYzOQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "ea425390e31bca59e2238e1b817f5c27ecdcf220", "url": "https://github.com/debezium/debezium/commit/ea425390e31bca59e2238e1b817f5c27ecdcf220", "message": "DBZ-2495 Updating per PR comments", "committedDate": "2020-09-25T10:30:36Z", "type": "commit"}, {"oid": "ea425390e31bca59e2238e1b817f5c27ecdcf220", "url": "https://github.com/debezium/debezium/commit/ea425390e31bca59e2238e1b817f5c27ecdcf220", "message": "DBZ-2495 Updating per PR comments", "committedDate": "2020-09-25T10:30:36Z", "type": "forcePushed"}, {"oid": "9f55161930df96bc31881860e3bbe5036f64f5b9", "url": "https://github.com/debezium/debezium/commit/9f55161930df96bc31881860e3bbe5036f64f5b9", "message": "DBZ-2495 Misc. clean-up", "committedDate": "2020-09-29T07:13:59Z", "type": "commit"}, {"oid": "ad9f2422bbd87fafd94c51dd39c9fe312295639a", "url": "https://github.com/debezium/debezium/commit/ad9f2422bbd87fafd94c51dd39c9fe312295639a", "message": "DBZ-2495 Making test slightly more stable", "committedDate": "2020-09-29T13:04:54Z", "type": "commit"}, {"oid": "ad9f2422bbd87fafd94c51dd39c9fe312295639a", "url": "https://github.com/debezium/debezium/commit/ad9f2422bbd87fafd94c51dd39c9fe312295639a", "message": "DBZ-2495 Making test slightly more stable", "committedDate": "2020-09-29T13:04:54Z", "type": "forcePushed"}, {"oid": "709f88e1af614c9b78b6f0c0b538d74b5a4a3a5b", "url": "https://github.com/debezium/debezium/commit/709f88e1af614c9b78b6f0c0b538d74b5a4a3a5b", "message": "DBZ-2495 Misc. fixes", "committedDate": "2020-09-30T09:11:35Z", "type": "commit"}]}