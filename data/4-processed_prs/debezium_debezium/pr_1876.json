{"pr_number": 1876, "pr_title": "DBZ-2632: Force closing the JDBC connection if failed to close it gracefully.", "pr_createdAt": "2020-10-08T19:29:58Z", "pr_url": "https://github.com/debezium/debezium/pull/1876", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MDA0OA==", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r505150048", "bodyText": "This is potentially unsafe operation. If a RuntimeException or Error is thrown then this will emit CCE which would be difficult to diagnostic.", "author": "jpechane", "createdAt": "2020-10-15T03:58:13Z", "path": "debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java", "diffHunk": "@@ -910,14 +916,36 @@ public synchronized void close() throws SQLException {\n                 statementCache.values().forEach(this::cleanupPreparedStatement);\n                 statementCache.clear();\n                 LOGGER.trace(\"Closing database connection\");\n-                conn.close();\n+                doClose();\n             }\n             finally {\n                 conn = null;\n             }\n         }\n     }\n \n+    private void doClose() throws SQLException {\n+        ExecutorService executor = Executors.newSingleThreadExecutor();\n+        // attempting to close the connection gracefully\n+        Future<Object> futureClose = executor.submit(() -> {\n+            conn.close();\n+            return null;\n+        });\n+        try {\n+            futureClose.get(10, TimeUnit.SECONDS);\n+        }\n+        catch (ExecutionException e) {\n+            throw (SQLException) e.getCause();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3MDU5NQ==", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r506570595", "bodyText": "That's very true. I'll fix that.", "author": "okayrunner", "createdAt": "2020-10-16T15:59:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MDA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MDUzMQ==", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r505150531", "bodyText": "This should be more then INFO level, please make it WARN", "author": "jpechane", "createdAt": "2020-10-15T04:00:25Z", "path": "debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java", "diffHunk": "@@ -910,14 +916,36 @@ public synchronized void close() throws SQLException {\n                 statementCache.values().forEach(this::cleanupPreparedStatement);\n                 statementCache.clear();\n                 LOGGER.trace(\"Closing database connection\");\n-                conn.close();\n+                doClose();\n             }\n             finally {\n                 conn = null;\n             }\n         }\n     }\n \n+    private void doClose() throws SQLException {\n+        ExecutorService executor = Executors.newSingleThreadExecutor();\n+        // attempting to close the connection gracefully\n+        Future<Object> futureClose = executor.submit(() -> {\n+            conn.close();\n+            return null;\n+        });\n+        try {\n+            futureClose.get(10, TimeUnit.SECONDS);\n+        }\n+        catch (ExecutionException e) {\n+            throw (SQLException) e.getCause();\n+        }\n+        catch (TimeoutException | InterruptedException e) {\n+            LOGGER.info(\"Failed to close database connection by calling close(), attempting abort()\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3MDg1MA==", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r506570850", "bodyText": "Yea, that's fair.", "author": "okayrunner", "createdAt": "2020-10-16T15:59:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MDUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1NDQyMA==", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r505154420", "bodyText": "Would it be better to use shutdownNow()?", "author": "jpechane", "createdAt": "2020-10-15T04:18:39Z", "path": "debezium-core/src/main/java/io/debezium/jdbc/JdbcConnection.java", "diffHunk": "@@ -910,14 +916,36 @@ public synchronized void close() throws SQLException {\n                 statementCache.values().forEach(this::cleanupPreparedStatement);\n                 statementCache.clear();\n                 LOGGER.trace(\"Closing database connection\");\n-                conn.close();\n+                doClose();\n             }\n             finally {\n                 conn = null;\n             }\n         }\n     }\n \n+    private void doClose() throws SQLException {\n+        ExecutorService executor = Executors.newSingleThreadExecutor();\n+        // attempting to close the connection gracefully\n+        Future<Object> futureClose = executor.submit(() -> {\n+            conn.close();\n+            return null;\n+        });\n+        try {\n+            futureClose.get(10, TimeUnit.SECONDS);\n+        }\n+        catch (ExecutionException e) {\n+            throw (SQLException) e.getCause();\n+        }\n+        catch (TimeoutException | InterruptedException e) {\n+            LOGGER.info(\"Failed to close database connection by calling close(), attempting abort()\");\n+            conn.abort(Runnable::run);\n+        }\n+        finally {\n+            executor.shutdown();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMDMzNg==", "url": "https://github.com/debezium/debezium/pull/1876#discussion_r507820336", "bodyText": "Agreed", "author": "okayrunner", "createdAt": "2020-10-19T14:55:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1NDQyMA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "url": "https://github.com/debezium/debezium/commit/5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "message": "DBZ-2632: Forcibly abort the JDBC connection if failed to close it gracefully.", "committedDate": "2020-10-19T22:09:11Z", "type": "commit"}, {"oid": "5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "url": "https://github.com/debezium/debezium/commit/5d2311be4ff6778ae7e0701fdaa0961a752ce0d9", "message": "DBZ-2632: Forcibly abort the JDBC connection if failed to close it gracefully.", "committedDate": "2020-10-19T22:09:11Z", "type": "forcePushed"}, {"oid": "4d03b915cc7b5de01ec22cd294942e0fcc45eb0e", "url": "https://github.com/debezium/debezium/commit/4d03b915cc7b5de01ec22cd294942e0fcc45eb0e", "message": "DBZ-2632 Minor improvements", "committedDate": "2020-10-20T13:00:42Z", "type": "commit"}]}