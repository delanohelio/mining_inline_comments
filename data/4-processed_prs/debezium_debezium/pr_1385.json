{"pr_number": 1385, "pr_title": "[DBZ-1927] Add doc about Cassandra Connector", "pr_createdAt": "2020-04-01T23:17:59Z", "pr_url": "https://github.com/debezium/debezium/pull/1385", "timeline": [{"oid": "6acd3bb3b68fc1c6dcef71f2eeb33c2bb594fc02", "url": "https://github.com/debezium/debezium/commit/6acd3bb3b68fc1c6dcef71f2eeb33c2bb594fc02", "message": "DBZ-1927 Add doc about how to trigger resnapshot when cassandra table cdc is disabled and then enabled again.", "committedDate": "2020-04-01T23:06:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxMzIxNw==", "url": "https://github.com/debezium/debezium/pull/1385#discussion_r402213217", "bodyText": "Re offset.properties, so that's not something stored in Kafka (yet)?", "author": "gunnarmorling", "createdAt": "2020-04-02T10:32:41Z", "path": "documentation/modules/ROOT/pages/connectors/cassandra.adoc", "diffHunk": "@@ -773,6 +773,10 @@ As the connector generate change event, it will publish those events to Kafka us\n \n Depending on the write load of a table, when a Cassandra connector is stopped for a long time, it risks into hitting the cdc_total_space_in_mb capacity. Once this upper limit is reached, Cassandra will stop accepting writes for this table; which means it is important to monitor this space while running the Cassandra connector. In the worst case scenario when this happens, the best thing to do is to (1) turn off Cassandra connector (2) disable cdc for the table so it stops generating additional writes (although writes to other cdc-enabled tables on the same node could still affect the commitlog file generation given the commit logs are not filtered) (3) remove the recorded offset from the offset file (4) once the capacity is increased or the directory used space is under control, restart the connector so it will rebootstrap the table.\n \n+==== Cassandra Table CDC is Enabled, Then Temporarily Disabled, And Then Enabled Again\n+\n+If a Cassandra table temporarily disabled CDC and then re-enabled it again after some time, it must be re-bootstrapped. To re-bootstrap an individual table, you can remove the recorded offset line from offset.properties corresponding to that table.", "originalCommit": "6acd3bb3b68fc1c6dcef71f2eeb33c2bb594fc02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMDg4Mw==", "url": "https://github.com/debezium/debezium/pull/1385#discussion_r402510883", "bodyText": "Re offset.properties, so that's not something stored in Kafka (yet)?\n\nI don't think so, since what we store in kafka is about a single change event from cassandra, but this offset property is about the whole cassandra-connector. snaphsot_offset.properties is a property file created by cassandra-connector upon started, and it stores which tables have been snapshotted by cassandra-connector already.\nThe snaphsot_offset.properties file would look like below. For example, if we want cassandra-connector to re-snapshot the bar table in testcassandra01 keyspace in cassandra, we just need to manually remove the line of testcassandra01.bar=\\:-1 from this property file.\ntestcassandra01.bar=\\:-1\ntest_cdc.table_c_test=\\:-1\ntest_cdc.test_kafka=\\:-1\ntestcassandra01.foo=\\:-1\ntest_cdc.table_b_test=\\:-1\ntest_cdc.table_a=\\:-1\ntestcassandra01.test=\\:-1", "author": "bingqinzhou", "createdAt": "2020-04-02T18:04:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxMzIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI2Mzg2MA==", "url": "https://github.com/debezium/debezium/pull/1385#discussion_r403263860", "bodyText": "Ok, thanks for clarifying. We might consider storing this in a Kafka topic, akin to the offset topic of Kafka Connect (used by the other connectors in distributed mode). One bit of local state less on the nodes. But something for another time, if you like.", "author": "gunnarmorling", "createdAt": "2020-04-03T19:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxMzIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg4Njc4Mw==", "url": "https://github.com/debezium/debezium/pull/1385#discussion_r405886783", "bodyText": "Ok, thanks for clarifying. We might consider storing this in a Kafka topic, akin to the offset topic of Kafka Connect (used by the other connectors in distributed mode). One bit of local state less on the nodes. But something for another time, if you like.\n\n@gunnarmorling I see, a minor concern about storing this in kafka instead of local files would be that we don't seem to be able to modify the offset manually thus cannot trigger re-snapshot on tables arbitrarily.", "author": "bingqinzhou", "createdAt": "2020-04-09T00:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxMzIxNw=="}], "type": "inlineReview"}, {"oid": "33879524b1bd340c0e8b37b9a59145a429ecc64a", "url": "https://github.com/debezium/debezium/commit/33879524b1bd340c0e8b37b9a59145a429ecc64a", "message": "DBZ-1927 Modify and make the sentence clearer.", "committedDate": "2020-04-02T17:48:18Z", "type": "commit"}]}