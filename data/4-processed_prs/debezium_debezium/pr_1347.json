{"pr_number": 1347, "pr_title": "DBZ-1857 Support for autorestart for embedded engine", "pr_createdAt": "2020-03-17T14:01:21Z", "pr_url": "https://github.com/debezium/debezium/pull/1347", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5ODYwNg==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r395498606", "bodyText": "This test fails on CI.", "author": "gunnarmorling", "createdAt": "2020-03-20T08:43:15Z", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -695,6 +697,34 @@ public void shouldResumeSnapshotIfFailingMidstream() throws Exception {\n         TestHelper.dropDefaultReplicationSlot();\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-1857\")\n+    // The column used to kill connection is only supported since Postgres version 10\n+    @SkipWhenDatabaseVersionLessThan(POSTGRES_10)\n+    public void shouldRecoverFromRetriableException() throws Exception {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5OTAzMw==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r395499033", "bodyText": "I was using something slightly different:\nSELECT  pg_terminate_backend(pid) FROM pg_stat_activity WHERE pid = (SELECT * FROM pg_stat_activity where datname = 'postgres');\n\nCould work on PG 9, too, perhaps?", "author": "gunnarmorling", "createdAt": "2020-03-20T08:44:15Z", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -695,6 +697,34 @@ public void shouldResumeSnapshotIfFailingMidstream() throws Exception {\n         TestHelper.dropDefaultReplicationSlot();\n     }\n \n+    @Test\n+    @FixFor(\"DBZ-1857\")\n+    // The column used to kill connection is only supported since Postgres version 10\n+    @SkipWhenDatabaseVersionLessThan(POSTGRES_10)\n+    public void shouldRecoverFromRetriableException() throws Exception {\n+        // Testing.Print.enable();\n+        String setupStmt = SETUP_TABLES_STMT;\n+        TestHelper.execute(setupStmt);\n+        Configuration config = TestHelper.defaultConfig()\n+                .with(PostgresConnectorConfig.SNAPSHOT_MODE, SnapshotMode.INITIAL.getValue())\n+                .with(PostgresConnectorConfig.DROP_SLOT_ON_STOP, Boolean.FALSE)\n+                .build();\n+\n+        start(PostgresConnector.class, config);\n+        assertConnectorIsRunning();\n+        waitForStreamingRunning(\"postgres\", TestHelper.TEST_SERVER);\n+\n+        assertRecordsFromSnapshot(2, 1, 1);\n+\n+        // kill all opened connections to the database\n+        TestHelper.execute(\"SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE backend_type='walsender'\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI1NzQxNQ==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r396257415", "bodyText": "@gunnarmorling Thats for th tip, I'll modified it a little bit but I hope it will now for for all versions", "author": "jpechane", "createdAt": "2020-03-23T07:41:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5OTAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1NTM4Mg==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r396355382", "bodyText": "@gunnarmorling I have to reintroduce it back. There is not a reliable way how to choose the correct PID in case of multiple activities, so let's keep tests only for postgres 10+", "author": "jpechane", "createdAt": "2020-03-23T10:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5OTAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3NjIyMQ==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r396376221", "bodyText": "Ok.", "author": "gunnarmorling", "createdAt": "2020-03-23T11:16:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5OTAzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5OTM2MQ==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r395499361", "bodyText": "This doesn't do anything; some left-over?", "author": "gunnarmorling", "createdAt": "2020-03-20T08:45:05Z", "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -195,6 +195,7 @@ private void stop(boolean restart) {\n \n             if (restart && restartDelay == null) {\n                 restartDelay = ElapsedTimeStrategy.constant(Clock.system(), 10_000);\n+                restartDelay.hasElapsed();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyNjc3Ng==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r396226776", "bodyText": "@gunnarmorling Please take a look into the called method and try the behaviour before and after. The first hasElpased only sets the target timeot time and immediately returns.\nThus the log contained message will restart after 10 seconds but restarted without any delay. By introducing this call the first restart really happens after the delay.", "author": "jpechane", "createdAt": "2020-03-23T05:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5OTM2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM4MTUyOQ==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r396381529", "bodyText": "Uf, that sounds nasty. Shouldn't that initialization be done upon construction of the ElapsedTimeStrategy. More importantly, though, this might explain the log message flood reported in DBZ-1889. If calling  hasElapsed() resets the timer, it's not useful for the purpose I had in mind. I was expecting that the timer is independent of this method be called. I think this needs fixing before releasing.", "author": "gunnarmorling", "createdAt": "2020-03-23T11:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5OTM2MQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "ff1e0f1a24043aa15c22e3914ca6a426c8c711d2", "url": "https://github.com/debezium/debezium/commit/ff1e0f1a24043aa15c22e3914ca6a426c8c711d2", "message": "DBZ-1857 Support for autorestart for embedded engine", "committedDate": "2020-03-23T11:05:49Z", "type": "commit"}, {"oid": "ff1e0f1a24043aa15c22e3914ca6a426c8c711d2", "url": "https://github.com/debezium/debezium/commit/ff1e0f1a24043aa15c22e3914ca6a426c8c711d2", "message": "DBZ-1857 Support for autorestart for embedded engine", "committedDate": "2020-03-23T11:05:49Z", "type": "forcePushed"}, {"oid": "4aec59ac4c0ff4519fd7db2459d51c27ef523c43", "url": "https://github.com/debezium/debezium/commit/4aec59ac4c0ff4519fd7db2459d51c27ef523c43", "message": "DBZ-1889 Prevent Connect throttling while connection is down", "committedDate": "2020-03-23T11:40:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxNjAzMQ==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r396416031", "bodyText": "Should be Metronome#parker().", "author": "gunnarmorling", "createdAt": "2020-03-23T12:32:37Z", "path": "debezium-core/src/main/java/io/debezium/connector/common/BaseSourceTask.java", "diffHunk": "@@ -117,6 +119,10 @@ public final void start(Map<String, String> props) {\n \n         // in backoff period after a retriable exception\n         if (!started) {\n+            // WorkerSourceTask calls us immediately after we return the empty list.\n+            // This turns into a throttling so we need to make a pause before we return\n+            // the control back.\n+            Thread.sleep(PAUSE_WHEN_NOT_STARTED);", "originalCommit": "4aec59ac4c0ff4519fd7db2459d51c27ef523c43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxNjU3Nw==", "url": "https://github.com/debezium/debezium/pull/1347#discussion_r396416577", "bodyText": "Let's log the exception on info or debug.", "author": "gunnarmorling", "createdAt": "2020-03-23T12:33:38Z", "path": "debezium-embedded/src/main/java/io/debezium/embedded/EmbeddedEngine.java", "diffHunk": "@@ -753,6 +754,11 @@ public OffsetStorageReader offsetStorageReader() {\n                                 }\n                                 break;\n                             }\n+                            catch (RetriableException e) {", "originalCommit": "4aec59ac4c0ff4519fd7db2459d51c27ef523c43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ca6e5b98dacdcdf556562aeffa383f8d2af5bf0c", "url": "https://github.com/debezium/debezium/commit/ca6e5b98dacdcdf556562aeffa383f8d2af5bf0c", "message": "DBZ-1889 Use parker", "committedDate": "2020-03-23T12:43:36Z", "type": "commit"}]}