{"pr_number": 1452, "pr_title": "DBZ-2027 Upgrading Postgres JDBC driver to 42.2.12", "pr_createdAt": "2020-04-27T15:35:22Z", "pr_url": "https://github.com/debezium/debezium/pull/1452", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ==", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r416678659", "bodyText": "@jpechane, WDYT about this one? I think it's ok to include this change in a minor; I'd argue it makes more sense that way actually. But it also settles that we shouldn't add this in 1.1.x IMO.", "author": "gunnarmorling", "createdAt": "2020-04-28T14:51:56Z", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsSnapshotProducerIT.java", "diffHunk": "@@ -434,7 +435,7 @@ public void shouldGenerateSnapshotsForPartitionedTables() throws Exception {\n \n         // verify each topic contains exactly the number of input records\n         assertEquals(1, topicCounts.get(\"test_server.public.first_table\").intValue());\n-        assertEquals(30, topicCounts.get(\"test_server.public.partitioned\").intValue());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA5NDcxNQ==", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417094715", "bodyText": "@gunnarmorling That's definiteyl breaking compatibility change so no way adding it to 1.1.x. IIUC this now aligns Postres with MySQL and we must warn the user to use ByLogicalTableRouter to get the functionality back.", "author": "jpechane", "createdAt": "2020-04-29T06:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEwMjI4Nw==", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417102287", "bodyText": "Hum, hum. So is MySQL indeed creating one topic per partition? Wondering whether it'd not make more sense to write all partitions to a single topic actually; is the information on partitioning relevant for downstream consumers?", "author": "gunnarmorling", "createdAt": "2020-04-29T06:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzExMzgwOQ==", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417113809", "bodyText": "@gunnarmorling I stand corrected. MySQL partitioning is about spreading the table into different physical files. POstgresSQL partitioning is about spreading to different tables. MySQL equivalent is sharding.", "author": "jpechane", "createdAt": "2020-04-29T07:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyMDE1MA==", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417120150", "bodyText": "Ok, so what number of topics do we get for a partitioned table in MySQL? Is it the same as for Postgres with the driver update?", "author": "gunnarmorling", "createdAt": "2020-04-29T07:34:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMDE3Mg==", "url": "https://github.com/debezium/debezium/pull/1452#discussion_r417130172", "bodyText": "@gunnarmorling If I understand this change then for n paritions and one aggregate table we get\n\nn tables for PostgreSQL partitioned table\n1 table for MySQL partitioned table\nn table for MySQL sharded table\n\nAs PostgreSQL partitioning seems to be equivalent to MySQL sharding", "author": "jpechane", "createdAt": "2020-04-29T07:53:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3ODY1OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "ccac215630642353431bb69a612f71c9f7da3a6d", "url": "https://github.com/debezium/debezium/commit/ccac215630642353431bb69a612f71c9f7da3a6d", "message": "DBZ-2027 Upgrading Postgres JDBC driver to 42.2.12;\n\nThe driver upgrade mitigates some issues with using this connector with\nPostgres on Azure. It comes with some behavioural changes, though:\n\n* column metadata for DECIMAL without scale is returned differently by\nthe (see https://github.com/pgjdbc/pgjdbc/issues/1767): while it used\nto be returned as 0, it's now returned as null. This should be\ntransparent to DBZ consumers\n* snapshots for partitioned tables only export change events on the\npartition topics now due to https://github.com/pgjdbc/pgjdbc/pull/1708;\nthis has an impact on consumers, but I think it's more reasonable than\nexporting all change events twice, one partition table and main table\ntopics", "committedDate": "2020-04-29T06:49:30Z", "type": "commit"}, {"oid": "4d9a62bd502793b1fb38a97e691f400542dba0ea", "url": "https://github.com/debezium/debezium/commit/4d9a62bd502793b1fb38a97e691f400542dba0ea", "message": "DBZ-2027 Removing some unused code", "committedDate": "2020-04-29T06:49:30Z", "type": "commit"}, {"oid": "304aadb4b37809710e41d26f8d5ef5be696fb788", "url": "https://github.com/debezium/debezium/commit/304aadb4b37809710e41d26f8d5ef5be696fb788", "message": "DBZ-2027 Small speed-up of PG test execution;\n\n* Using Awaitility so we can use 100ms looping intervals; also it's more concise\n* Avoiding creation of one temporary connection", "committedDate": "2020-04-29T06:49:57Z", "type": "commit"}, {"oid": "304aadb4b37809710e41d26f8d5ef5be696fb788", "url": "https://github.com/debezium/debezium/commit/304aadb4b37809710e41d26f8d5ef5be696fb788", "message": "DBZ-2027 Small speed-up of PG test execution;\n\n* Using Awaitility so we can use 100ms looping intervals; also it's more concise\n* Avoiding creation of one temporary connection", "committedDate": "2020-04-29T06:49:57Z", "type": "forcePushed"}]}