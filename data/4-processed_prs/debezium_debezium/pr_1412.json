{"pr_number": 1412, "pr_title": "DBZ-1782 Allowing any JSR 223 implementation for filtering SMT", "pr_createdAt": "2020-04-15T09:45:17Z", "pr_url": "https://github.com/debezium/debezium/pull/1412", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyMTYxMQ==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408721611", "bodyText": "@gunnarmorling Maybe add a comment that this is only temporary restriction?", "author": "jpechane", "createdAt": "2020-04-15T09:54:40Z", "path": "debezium-core/src/main/java/io/debezium/transforms/Filter.java", "diffHunk": "@@ -178,31 +120,32 @@ public static NullHandling parse(String value, String defaultValue) {\n     private Engine engine;\n     private NullHandling nullHandling;\n \n-    public Filter() {\n-    }\n-\n     @Override\n     public void configure(Map<String, ?> configs) {\n         final Configuration config = Configuration.from(configs);\n-        final ExpressionLanguage language = ExpressionLanguage.parse(config.getString(LANGUAGE));\n-        final String expression = config.getString(EXPRESSION);\n-        if (language == null || expression == null) {\n-            throw new DebeziumException(\n-                    \"Options '\" + LANGUAGE + \"' and '\" + EXPRESSION + \"' must be present. Language must be one of (\" + Arrays.toString(ExpressionLanguage.values())\n-                            + \")\");\n-        }\n-        LOGGER.info(\"Using language '{}' to evaluate expression '{}'\", language.getValue(), expression);\n+        final String expression = config.getStringNonEmpty(EXPRESSION);\n+        String language = config.getStringNonEmpty(LANGUAGE);\n+\n+        LOGGER.info(\"Using language '{}' to evaluate expression '{}'\", language, expression);\n \n         nullHandling = NullHandling.parse(config.getString(NULL_HANDLING));\n \n-        try {\n-            engine = language.getEngine().newInstance();\n+        if (!language.startsWith(JAVAX_SCRIPT_ENGINE_PREFIX)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc0Njk0NQ==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408746945", "bodyText": "Pushed an update for that.", "author": "gunnarmorling", "createdAt": "2020-04-15T10:40:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyMTYxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNTc0Mg==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408725742", "bodyText": "As enum is no longer used would it it be better to switch to the withValidator on config definition?", "author": "jpechane", "createdAt": "2020-04-15T10:01:44Z", "path": "debezium-core/src/main/java/io/debezium/transforms/Filter.java", "diffHunk": "@@ -178,31 +120,32 @@ public static NullHandling parse(String value, String defaultValue) {\n     private Engine engine;\n     private NullHandling nullHandling;\n \n-    public Filter() {\n-    }\n-\n     @Override\n     public void configure(Map<String, ?> configs) {\n         final Configuration config = Configuration.from(configs);\n-        final ExpressionLanguage language = ExpressionLanguage.parse(config.getString(LANGUAGE));\n-        final String expression = config.getString(EXPRESSION);\n-        if (language == null || expression == null) {\n-            throw new DebeziumException(\n-                    \"Options '\" + LANGUAGE + \"' and '\" + EXPRESSION + \"' must be present. Language must be one of (\" + Arrays.toString(ExpressionLanguage.values())\n-                            + \")\");\n-        }\n-        LOGGER.info(\"Using language '{}' to evaluate expression '{}'\", language.getValue(), expression);\n+        final String expression = config.getStringNonEmpty(EXPRESSION);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc0NTkyNA==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408745924", "bodyText": "Good idea in general; just tried it, but it seems validation logic isn't invoked (expected DebeziumException isn't raised). Is this supported for SMT options actually?", "author": "gunnarmorling", "createdAt": "2020-04-15T10:38:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1OTQxMg==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408759412", "bodyText": "@gunnarmorling IMHO you need to call config.validate(), see ExtractNewRecord for example", "author": "jpechane", "createdAt": "2020-04-15T11:04:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgyNDgwMw==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408824803", "bodyText": "Gotcha, pushed an update for that.", "author": "gunnarmorling", "createdAt": "2020-04-15T13:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzMTU5Ng==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408831596", "bodyText": "@gunnarmorling Looks like there is a formatting issue", "author": "jpechane", "createdAt": "2020-04-15T13:15:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNTc0Mg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzMTMzOQ==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408831339", "bodyText": "@gunnarmorling No longer used", "author": "jpechane", "createdAt": "2020-04-15T13:14:47Z", "path": "debezium-core/src/main/java/io/debezium/config/Configuration.java", "diffHunk": "@@ -1019,6 +1020,28 @@ default String getString(String key, Supplier<String> defaultValueSupplier) {\n         return value != null ? value : (defaultValueSupplier != null ? defaultValueSupplier.get() : null);\n     }\n \n+    /**\n+     * Get the string value associated with the given field.\n+     *\n+     * @param field the field; may not be null\n+     * @return the configuration's value for the field, never {@code null} or empty.\n+     *\n+     * @throws DebeziumException If if the configuration doesn't have a non-empty value for the given field\n+     */\n+    default String getStringNonEmpty(Field field) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0NTg4OA==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408845888", "bodyText": "Removed.", "author": "gunnarmorling", "createdAt": "2020-04-15T13:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzMTMzOQ=="}], "type": "inlineReview"}, {"oid": "f7db6a537f451481b6a7869c74e779f7bf21f653", "url": "https://github.com/debezium/debezium/commit/f7db6a537f451481b6a7869c74e779f7bf21f653", "message": "DBZ-1782 Allowing any JSR 223 implementation for filtering SMT", "committedDate": "2020-04-15T13:34:47Z", "type": "commit"}, {"oid": "29e4e7275f348311b8695cd94d67574d73f401ff", "url": "https://github.com/debezium/debezium/commit/29e4e7275f348311b8695cd94d67574d73f401ff", "message": "DBZ-1782 Inverting filtering logic, so to be consistent with Stream#filter() and other similar APIs", "committedDate": "2020-04-15T13:34:47Z", "type": "commit"}, {"oid": "29e4e7275f348311b8695cd94d67574d73f401ff", "url": "https://github.com/debezium/debezium/commit/29e4e7275f348311b8695cd94d67574d73f401ff", "message": "DBZ-1782 Inverting filtering logic, so to be consistent with Stream#filter() and other similar APIs", "committedDate": "2020-04-15T13:34:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxNzA5Nw==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408917097", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Evaluates whether the record should be filtered out or not by executing the expression.\n          \n          \n            \n                 * Evaluates whether the record matches the predicate expression.", "author": "Naros", "createdAt": "2020-04-15T15:08:05Z", "path": "debezium-core/src/main/java/io/debezium/transforms/filter/Engine.java", "diffHunk": "@@ -26,7 +26,7 @@\n      * Evaluates whether the record should be filtered out or not by executing the expression.", "originalCommit": "29e4e7275f348311b8695cd94d67574d73f401ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxNzEzOA==", "url": "https://github.com/debezium/debezium/pull/1412#discussion_r408917138", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return true to keep the record, false to remove it\n          \n          \n            \n                 * @return true if the input argument matches the predicate expression, otherwise false", "author": "Naros", "createdAt": "2020-04-15T15:08:08Z", "path": "debezium-core/src/main/java/io/debezium/transforms/filter/Engine.java", "diffHunk": "@@ -26,7 +26,7 @@\n      * Evaluates whether the record should be filtered out or not by executing the expression.\n      *\n      * @param record to be evaluated\n-     * @return true to remove the record, false to keep it\n+     * @return true to keep the record, false to remove it", "originalCommit": "29e4e7275f348311b8695cd94d67574d73f401ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "52b7172c7513b873b35df9a1bf450196f605c7bb", "url": "https://github.com/debezium/debezium/commit/52b7172c7513b873b35df9a1bf450196f605c7bb", "message": "DBZ-1782 JavaDoc improvements;\r\n\r\nAs per Chris's suggestions.\n\nCo-Authored-By: Chris Cranford <ccranfor@redhat.com>", "committedDate": "2020-04-15T15:52:15Z", "type": "commit"}]}