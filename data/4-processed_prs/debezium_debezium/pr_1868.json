{"pr_number": 1868, "pr_title": "DBZ-2606: Map new name for the fields and headers", "pr_createdAt": "2020-10-05T07:34:54Z", "pr_url": "https://github.com/debezium/debezium/pull/1868", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3NzY1MQ==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500077651", "bodyText": "So when giving the name explicitly, does it make sense to keep the underscores? It's done by default so to reduce odds of conflicts with other field names. But once you take control over names explicitly, it seems fair to leave it up to the user whether to have those prefixes (by explicitly specifying them as part of the mapped name) or not. WDYT?", "author": "gunnarmorling", "createdAt": "2020-10-06T07:57:54Z", "path": "debezium-core/src/test/java/io/debezium/transforms/ExtractNewRecordStateTest.java", "diffHunk": "@@ -336,6 +336,36 @@ public void testAddFields() {\n         }\n     }\n \n+    @Test\n+    @FixFor({ \"DBZ-2606\" })\n+    public void testNewFieldAndHeaderMapping() {\n+        try (final ExtractNewRecordState<SourceRecord> transform = new ExtractNewRecordState<>()) {\n+            final Map<String, String> props = new HashMap<>();\n+            props.put(ADD_FIELDS, \"op:OP, lsn:LSN, id:ID, source.lsn, transaction.total_order:TOTAL_ORDER\");\n+            props.put(ADD_HEADERS, \"op:OP,source.lsn:SOURCE_LSN,transaction.id:TXN_ID,transaction.total_order:TOTAL_ORDER\");\n+            props.put(ADD_HEADERS_PREFIX, \"prefix.\");\n+            transform.configure(props);\n+\n+            final SourceRecord updateRecord = createUpdateRecord();\n+            final SourceRecord unwrapped = transform.apply(updateRecord);\n+            assertThat(((Struct) unwrapped.value()).get(\"__OP\")).isEqualTo(Envelope.Operation.UPDATE.code());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIzMjUzNg==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500232536", "bodyText": "The Kafka connect Struct is not aware of debezium field prefixes. I think we will have to hard-code here.", "author": "rgannu", "createdAt": "2020-10-06T12:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3NzY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NjgxNA==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r501156814", "bodyText": "Sorry, I'm not following. It's a convention by this Debezium SMT to prefix any additional field with \"__\". I.e. we can control to add or not add that prefix in case of renamed additional fields. My suggestion is to remove this, i.e. if a user wants to rename id to __ID, they'd have to put id:__ID into the config. Does that make sense?", "author": "gunnarmorling", "createdAt": "2020-10-07T16:40:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3NzY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2NDg1Mg==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r501164852", "bodyText": "Ok. I understand.\nThen I need to also document that add.headers.prefix and add.fields.prefix only when given will be taken into consideration for this new field name mapping. The default __ will not be taken into consideration. Is my understanding correct? I will fix that", "author": "rgannu", "createdAt": "2020-10-07T16:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3NzY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIyMjMxMw==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r501222313", "bodyText": "Ok, so I think I retract what I said, because I forgot that this prefix actually is configurable already via those options you mention. I thought the __ would be hard-coded, and there'd be no way to get rid of it, but there actually is: you can set it to ``; I think so, at least. In that light, it seems fair to apply any given prefix (either the default one, or any custom one) also in case the property is renamed. I.e. what you got here is reasonable. Sorry for the forth and back, needed to recap all the details at first.", "author": "gunnarmorling", "createdAt": "2020-10-07T18:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3NzY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MjMyMA==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r501652320", "bodyText": "Thanks. So, i will not do any changes.\nWhen the mapping is given and the add.headers.prefix  and add.fields.prefix is not set, then it will be defaulted to __ (double underscore).\nWhen the user want to set a different prefix (other than the default __ (double underscore)), he will explicitly do so.\nAdapted the test case for DBZ-2606 to illustrate this.\nCan you please accept this pull request? Thanks a lot.", "author": "rgannu", "createdAt": "2020-10-08T11:39:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3NzY1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3ODk5Mg==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500078992", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Optionally one can map with the new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP` +\n          \n          \n            \n            Optionally, you can override the field name via `<field name>:<new field name>`, e.g. like so: new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP` +\n          \n      \n    \n    \n  \n\nAlso I think it's a bit misleading that all mapped names are upper case, this might create the suggestion that it must be that way.", "author": "gunnarmorling", "createdAt": "2020-10-06T08:00:03Z", "path": "documentation/modules/ROOT/pages/configuration/event-flattening.adoc", "diffHunk": "@@ -265,6 +265,8 @@ If you are configuring the event flattening SMT on a sink connector, setting thi\n |\n |Set this option to a comma-separated list, with no spaces, of metadata fields to add to the simplified Kafka record's value. When there are duplicate field names, to add metadata for one of those fields, specify the struct as well as the field, for example `source.ts_ms`. +\n  +\n+Optionally one can map with the new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP` +", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIzNjgxNw==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500236817", "bodyText": "Agreed.\nI am adding\nOptionally, you can override the field name via <field name>:<new field name>, e.g. like so: new field name like version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP. Please note that the new field name is case-insensitive.", "author": "rgannu", "createdAt": "2020-10-06T12:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3ODk5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3OTc4Mw==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500079783", "bodyText": "How about returning an object here which encapsulates the renaming logic. I think FieldReference already is that type pretty much, just push the logic from map() above to there.", "author": "gunnarmorling", "createdAt": "2020-10-06T08:01:22Z", "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordState.java", "diffHunk": "@@ -365,13 +378,19 @@ else if (simpleFieldName.equals(TransactionMonitor.DEBEZIUM_TRANSACTION_ID_KEY)\n             else {\n                 return Arrays.stream(addHeadersConfig.split(\",\"))\n                         .map(String::trim)\n-                        .map(field -> new FieldReference(fieldPrefix, field))\n+                        .map(field -> {\n+                            String[] split = field.split(\":\");\n+                            if (split.length > 1) {\n+                                return new FieldReference(fieldPrefix, split[0].trim(), split[1].trim());\n+                            }\n+                            return new FieldReference(fieldPrefix, field);\n+                        })\n                         .collect(Collectors.toList());\n             }\n         }\n \n-        String getNewFieldName() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgyMTQyNg==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500821426", "bodyText": "I have refactored and now I don't think i can return object instead.\nNow the code looks quite concise.", "author": "rgannu", "createdAt": "2020-10-07T08:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3OTc4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5NTMxMg==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500095312", "bodyText": "Why is it here getnewField and not getFieldName? I think that method resolves the final (to be used) field name?", "author": "rk3rn3r", "createdAt": "2020-10-06T08:26:29Z", "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordState.java", "diffHunk": "@@ -267,11 +267,11 @@ private Schema makeUpdatedSchema(List<FieldReference> additionalFields, Schema s\n     }\n \n     private SchemaBuilder updateSchema(FieldReference fieldReference, SchemaBuilder builder, Schema originalRecordSchema) {\n-        return builder.field(fieldReference.getNewFieldName(), fieldReference.getSchema(originalRecordSchema));\n+        return builder.field(fieldReference.getNewField(), fieldReference.getSchema(originalRecordSchema));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNzYwOQ==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r500417609", "bodyText": "Earlier itself it was with the getNewField() name and when I tried to change it to getField() I get many errors while running the JUnit ExtractNewRecordStateTest", "author": "rgannu", "createdAt": "2020-10-06T16:02:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5NTMxMg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1NjYyNg==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r506256626", "bodyText": "@rgannu Hi, I think it is mostly correctly. I am certain doubts about this part of the code. While it works I'd prefer to do it more logically. IMHO first NEW_FIELD_SEPARATOR should be applied as it defines the main components to which the mapping splits. And only after that FIELD_SEPARATOR should be applied.\nThe reason is that the new field name applies to fully qualified field name in the first part not only to one of the compoenents.", "author": "jpechane", "createdAt": "2020-10-16T10:13:09Z", "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordState.java", "diffHunk": "@@ -312,29 +313,27 @@ public void close() {\n          * The prefix for the new field name.\n          */\n         private final String prefix;\n+\n         /**\n          * The name for the outgoing attribute/field, e.g. \"__op\" or \"__source_ts_ms\" when the prefix is \"__\"\n          */\n-        private final String newFieldName;\n+        private final String newField;\n \n         private FieldReference(String prefix, String field) {\n             this.prefix = prefix;\n             String[] parts = FIELD_SEPARATOR.split(field);\n \n             if (parts.length == 1) {\n-                this.struct = determineStruct(parts[0]);\n-                this.field = parts[0];\n-                this.newFieldName = prefix + field;\n+                String[] splits = NEW_FIELD_SEPARATOR.split(parts[0]);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjgwMTExNw==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r506801117", "bodyText": "Agreed and I will fix this in a separate branch and create a PR.\nAlso I will create a new ticket that the prefix configuration for header and property needs to be a list instead of a string. Then, we can apply different prefixes for different field when needed. When it is not defined the default prefix of double-underscore will continue.", "author": "rgannu", "createdAt": "2020-10-17T05:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1NjYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIzNTAxNA==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r509235014", "bodyText": "@rgannu May I ask if you know a timeframe for the last change? Thanks", "author": "jpechane", "createdAt": "2020-10-21T12:27:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1NjYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI0MjkyNw==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r509242927", "bodyText": "Sorry, i was quite busy with my office work.. Will do for sure by eod today...", "author": "rgannu", "createdAt": "2020-10-21T12:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1NjYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI0NjQ5MA==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r509246490", "bodyText": "No worries, take your time", "author": "jpechane", "createdAt": "2020-10-21T12:45:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1NjYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA3NjM0OA==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r511076348", "bodyText": "Fixed it .. Thanks @jpechane  ..\nThe code looks much clean..\nAlso raised a new enhancement DBZ-2695 for making the \"add.fields.prefix\" and \"add.headers.prefix\" as a list of strings instead of just a string.", "author": "rgannu", "createdAt": "2020-10-23T18:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1NjYyNg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEwNjExNA==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r517106114", "bodyText": "@rgannu Hi, I am going to merge this PR, just the last question. Is the new field name really case INsensitive? Same for the description in the field definition.", "author": "jpechane", "createdAt": "2020-11-04T05:33:02Z", "path": "documentation/modules/ROOT/pages/configuration/event-flattening.adoc", "diffHunk": "@@ -265,6 +265,8 @@ If you are configuring the event flattening SMT on a sink connector, setting thi\n |\n |Set this option to a comma-separated list, with no spaces, of metadata fields to add to the simplified Kafka record's value. When there are duplicate field names, to add metadata for one of those fields, specify the struct as well as the field, for example `source.ts_ms`. +\n  +\n+Optionally, you can override the field name via `<field name>:<new field name>`, e.g. like so: new field name like `version:VERSION, connector:CONNECTOR, source.ts_ms:EVENT_TIMESTAMP`. Please note that the `new field name` is case-insensitive. +", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExNDkwMg==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r517114902", "bodyText": "My bad. It must be case-sensitive.\nUpdated the documentation now..", "author": "rgannu", "createdAt": "2020-11-04T06:06:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEwNjExNA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExODQwMQ==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r517118401", "bodyText": "@rgannu As I pointed in the previous comment, here is the same problem", "author": "jpechane", "createdAt": "2020-11-04T06:19:39Z", "path": "debezium-core/src/main/java/io/debezium/transforms/ExtractNewRecordStateConfigDefinition.java", "diffHunk": "@@ -125,7 +127,9 @@ public static DeleteHandling parse(String value, String defaultValue) {\n             .withWidth(ConfigDef.Width.LONG)\n             .withImportance(ConfigDef.Importance.LOW)\n             .withDefault(\"\")\n-            .withDescription(\"Adds each field listed to the header,  __ (or __<struct>_ if the struct is specified) \"\n-                    + \"Example: 'version,connector,source.ts_ms' would add __version, __connector and __source_ts_ms fields\");\n+            .withDescription(\"Adds each field listed to the header,  __ (or __<struct>_ if the struct is specified). \"\n+                    + \"Example: 'version,connector,source.ts_ms' would add __version, __connector and __source_ts_ms fields. \"\n+                    + \"Optionally one can also map new field name like version:VERSION,connector:CONNECTOR,source.ts_ms:EVENT_TIMESTAMP.\"\n+                    + \"Please note that the new field name is case-insensitive.\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEyMDMzOQ==", "url": "https://github.com/debezium/debezium/pull/1868#discussion_r517120339", "bodyText": "Thanks.. Fixed it..", "author": "rgannu", "createdAt": "2020-11-04T06:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExODQwMQ=="}], "type": "inlineReview"}, {"oid": "7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "url": "https://github.com/debezium/debezium/commit/7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "message": "DBZ-2606: Map new name for the fields and headers\n\nAdded ability to map new name for the fields and headers.\nThe \"new name\" mapping is completely optional and we will not\nbe affecting the existing functionality.\n\nThe optional \"new name\" is case-sensitive.", "committedDate": "2020-11-04T06:24:56Z", "type": "commit"}, {"oid": "7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "url": "https://github.com/debezium/debezium/commit/7d6de14e970bd540cb3b3217a4282dd36cb32ac0", "message": "DBZ-2606: Map new name for the fields and headers\n\nAdded ability to map new name for the fields and headers.\nThe \"new name\" mapping is completely optional and we will not\nbe affecting the existing functionality.\n\nThe optional \"new name\" is case-sensitive.", "committedDate": "2020-11-04T06:24:56Z", "type": "forcePushed"}]}