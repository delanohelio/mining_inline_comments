{"pr_number": 1791, "pr_title": "DBZ-2456 selective snapshot implementation", "pr_createdAt": "2020-09-06T19:49:54Z", "pr_url": "https://github.com/debezium/debezium/pull/1791", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQyNg==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488479426", "bodyText": "This could need some streamlining with existing option names and structures. How about \"table.snapshot.include.list\" as a name? And making it a list of regexps, as is done for the other similar options?", "author": "gunnarmorling", "createdAt": "2020-09-15T08:22:40Z", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5MzE0Mg==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488793142", "bodyText": "Hi @gunnarmorling, apologies, if I have missed something, in order to make a Field a list of regexps, would the following suffice?\npublic static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.include.collection.list\")\n            .withDisplayName(\"Snapshot Mode include Data Collection\")\n            .withType(Type.LIST)\n            .withWidth(Width.LONG)\n            .withImportance(Importance.MEDIUM)\n            .withValidation(Field::isListOfRegex)\n            .withDescription(\n                    \"this setting must be set to specify a list of tables/collections \nwhose snapshot must be taken on creating or restarting the connector.\");", "author": "KaushikIyer16", "createdAt": "2020-09-15T16:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIzMjQ4Mw==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r494232483", "bodyText": "Yes, that's good for the definition. See other options (e.g. \"table.include.list\") for how this is handled then (splitting, evaluating this as regexp, etc.).", "author": "gunnarmorling", "createdAt": "2020-09-24T11:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ3OTQ3OQ==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488479479", "bodyText": "Needs updating", "author": "gunnarmorling", "createdAt": "2020-09-15T08:22:46Z", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")\n+            .withDisplayName(\"Snapshot Mode Custom Tables\")", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MDM5Mg==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488480392", "bodyText": "How about getTablesToBeSnapshotted()?", "author": "gunnarmorling", "createdAt": "2020-09-15T08:24:11Z", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -524,6 +535,12 @@ public boolean getSanitizeFieldNames() {\n         }\n     }\n \n+    public Set<String> getSnapshotAllowedTables() {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MDg5MQ==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488480891", "bodyText": "determineDataCollectionsToBeSnapshotted().", "author": "gunnarmorling", "createdAt": "2020-09-15T08:25:00Z", "path": "debezium-core/src/main/java/io/debezium/pipeline/source/AbstractSnapshotChangeEventSource.java", "diffHunk": "@@ -81,6 +84,18 @@ public SnapshotResult execute(ChangeEventSourceContext context) throws Interrupt\n         }\n     }\n \n+    protected <T extends DataCollectionId> Set<T> determineAllowedDataCollectionsForSnapshot(final Set<T> allDataCollections) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MTgxNA==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488481814", "bodyText": "Could you add the @FixFor annotation (here and elsewhere)?", "author": "gunnarmorling", "createdAt": "2020-09-15T08:26:18Z", "path": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java", "diffHunk": "@@ -1157,6 +1157,57 @@ public void shouldAllowForCustomSnapshot() throws InterruptedException {\n         VerifyRecord.isValidRead(s2recs.get(1), PK_FIELD, 2);\n     }\n \n+    @Test", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NTExNQ==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488795115", "bodyText": "Sure, Will add them across all tests.", "author": "KaushikIyer16", "createdAt": "2020-09-15T16:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MTgxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4MjkyMA==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488482920", "bodyText": "Wow, that's quite something. @jpechane, I think that's good, a bit hard to believe we locked indeed all tables before? Thinking of it, wasn't there even a report related to this?", "author": "gunnarmorling", "createdAt": "2020-09-15T08:27:57Z", "path": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresSnapshotChangeEventSource.java", "diffHunk": "@@ -94,7 +94,7 @@ protected void connectionCreated(RelationalSnapshotContext snapshotContext) thro\n     protected void lockTablesForSchemaSnapshot(ChangeEventSourceContext sourceContext, RelationalSnapshotContext snapshotContext)\n             throws SQLException, InterruptedException {\n         final Duration lockTimeout = connectorConfig.snapshotLockTimeout();\n-        final Optional<String> lockStatement = snapshotter.snapshotTableLockingStatement(lockTimeout, schema.tableIds());\n+        final Optional<String> lockStatement = snapshotter.snapshotTableLockingStatement(lockTimeout, snapshotContext.capturedTables);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4Mzc0Mg==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488483742", "bodyText": "Interesting style. Is there a reason for making this a predicate instead of simply a private method which takes the table id?", "author": "gunnarmorling", "createdAt": "2020-09-15T08:29:13Z", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -254,6 +255,9 @@ protected void execute() {\n         final List<TableId> tablesToSnapshotSchemaAfterUnlock = new ArrayList<>();\n         Set<TableId> lockedTables = Collections.emptySet();\n \n+        final Set<String> snapshotAllowedTables = context.getConnectorConfig().getSnapshotAllowedTables();\n+        final Predicate<TableId> isAllowedForSnapshot = tableId -> snapshotAllowedTables.size() == 0", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NzU4Ng==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488497586", "bodyText": "Please remove the empty comment", "author": "jpechane", "createdAt": "2020-09-15T08:50:51Z", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -404,7 +408,8 @@ protected void execute() {\n                                 else {\n                                     logger.info(\"\\t '{}' is not added among known tables\", id);\n                                 }\n-                                if (filters.tableFilter().test(id)) {\n+                                //", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NDcwOA==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488794708", "bodyText": "Sure, will re-check elsewhere for the same", "author": "KaushikIyer16", "createdAt": "2020-09-15T16:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NzU4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5ODk1OQ==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488498959", "bodyText": "Can't we use different name like snapshot.data.collection to encompass both tables and MongoDB collections?", "author": "jpechane", "createdAt": "2020-09-15T08:53:02Z", "path": "debezium-core/src/main/java/io/debezium/config/CommonConnectorConfig.java", "diffHunk": "@@ -308,6 +310,14 @@ public static BinaryHandlingMode parse(String value, String defaultValue) {\n             .withDescription(\"The maximum number of records that should be loaded into memory while performing a snapshot\")\n             .withValidation(Field::isNonNegativeInteger);\n \n+    public static final Field SNAPSHOT_MODE_TABLES = Field.create(\"snapshot.table\")", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMDE4Mw==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r489300183", "bodyText": "Ah yes, very good point!", "author": "gunnarmorling", "createdAt": "2020-09-16T09:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5ODk1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMDIwMg==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488500202", "bodyText": "Again, should use generic names like snapshotAllowedDataCollections", "author": "jpechane", "createdAt": "2020-09-15T08:54:51Z", "path": "debezium-core/src/main/java/io/debezium/pipeline/source/AbstractSnapshotChangeEventSource.java", "diffHunk": "@@ -81,6 +84,18 @@ public SnapshotResult execute(ChangeEventSourceContext context) throws Interrupt\n         }\n     }\n \n+    protected <T extends DataCollectionId> Set<T> determineAllowedDataCollectionsForSnapshot(final Set<T> allDataCollections) {\n+        final Set<String> snapshotAllowedTables = connectorConfig.getSnapshotAllowedTables();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488501603", "bodyText": "There is a planned Jira for snapshotting collections based on the include list order. Could we keep this as a List?", "author": "jpechane", "createdAt": "2020-09-15T08:56:59Z", "path": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbSnapshotChangeEventSource.java", "diffHunk": "@@ -342,7 +343,7 @@ private void createDataEventsForReplicaSet(ChangeEventSourceContext sourceContex\n \n         LOGGER.info(\"Beginning snapshot of '{}' at {}\", rsName, rsOffsetContext.getOffset());\n \n-        final List<CollectionId> collections = primaryClient.collections();\n+        final Set<CollectionId> collections = determineAllowedDataCollectionsForSnapshot(primaryClient.collections());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4OTgwNQ==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r488789805", "bodyText": "In methods like io.debezium.relational.RelationalSnapshotChangeEventSource#determineCapturedTables a Set is required. so i could one of two things:\n\n\nmake determineAllowedDataCollectionsForSnapshot to take a Collection and return a List<T> and in the above method i can wrap it again in a set by doing new HashSet<>(determineDataCollectionsToBeSnapshotted(getAllTableIds(ctx)))\n\n\nwhat do you feel if we used a LInkedHashSet as it would maintain insertion order.", "author": "KaushikIyer16", "createdAt": "2020-09-15T16:10:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5NzAyMg==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r491897022", "bodyText": "@KaushikIyer16, sorry, I'm not quite following: how is this change for MongoDB related to RelationalSnapshotChangeEventSource (which only is used by the relational Debezium connectors)?", "author": "gunnarmorling", "createdAt": "2020-09-21T09:17:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MTYyMg==", "url": "https://github.com/debezium/debezium/pull/1791#discussion_r494241622", "bodyText": "the same method is being used to filter out the collection names in both relational and non-relational cases. in one case it deals with sets and the other with lists. hence, I settled down to Set. I can return a Stream which can be collected on the caller end", "author": "KaushikIyer16", "createdAt": "2020-09-24T11:34:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwMTYwMw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "91ec934f1bffd4dbf5ab1d4498ac01f2197802e7", "url": "https://github.com/debezium/debezium/commit/91ec934f1bffd4dbf5ab1d4498ac01f2197802e7", "message": "DBZ-2456 selective snapshot implementation", "committedDate": "2020-10-11T06:45:50Z", "type": "commit"}, {"oid": "355f57bb945750cdb7bbfe98561d6b2a81fa2b80", "url": "https://github.com/debezium/debezium/commit/355f57bb945750cdb7bbfe98561d6b2a81fa2b80", "message": "DBZ-2456 style change fixes", "committedDate": "2020-10-11T06:45:50Z", "type": "commit"}, {"oid": "922ca872dca3f165364731893d8204652ac3aade", "url": "https://github.com/debezium/debezium/commit/922ca872dca3f165364731893d8204652ac3aade", "message": "DBZ-2456 updated common connector config with generalized naming", "committedDate": "2020-10-11T06:45:50Z", "type": "commit"}, {"oid": "b396d014ffe77030c36d6b69d501c5606276be46", "url": "https://github.com/debezium/debezium/commit/b396d014ffe77030c36d6b69d501c5606276be46", "message": "DBZ-2456 style change fixes", "committedDate": "2020-10-11T06:45:50Z", "type": "commit"}, {"oid": "0381bdd7fce502dbb31b0ec8836cf082bd7f455b", "url": "https://github.com/debezium/debezium/commit/0381bdd7fce502dbb31b0ec8836cf082bd7f455b", "message": "DBZ-2456 selective snapshot rebase fixes", "committedDate": "2020-10-11T06:45:57Z", "type": "commit"}, {"oid": "6b7594e6fc174471299c81bf4a901c43616903d8", "url": "https://github.com/debezium/debezium/commit/6b7594e6fc174471299c81bf4a901c43616903d8", "message": "DBZ-2456 fixes after rebase", "committedDate": "2020-10-11T06:46:32Z", "type": "commit"}, {"oid": "ef23701c757841b5dfdc27fac753553475c6b6ef", "url": "https://github.com/debezium/debezium/commit/ef23701c757841b5dfdc27fac753553475c6b6ef", "message": "DBZ-2456 rebase documentation fixes", "committedDate": "2020-10-11T06:49:05Z", "type": "commit"}, {"oid": "ef23701c757841b5dfdc27fac753553475c6b6ef", "url": "https://github.com/debezium/debezium/commit/ef23701c757841b5dfdc27fac753553475c6b6ef", "message": "DBZ-2456 rebase documentation fixes", "committedDate": "2020-10-11T06:49:05Z", "type": "forcePushed"}]}