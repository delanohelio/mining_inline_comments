{"pr_number": 1723, "pr_title": "DBZ-1939 Ignoring AWS built-in tables", "pr_createdAt": "2020-07-29T08:32:35Z", "pr_url": "https://github.com/debezium/debezium/pull/1723", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI5Nzg0MQ==", "url": "https://github.com/debezium/debezium/pull/1723#discussion_r462297841", "bodyText": "Maybe we should later make this a config property (might be in RelationalDatabaseConnectorConfig) that gets sane defaults by different connector implementations (mysql will set this default list, PG a different one)?\nOr one step ahead, what about configuring \"database.environment\" where users can select things like amazon_rds_mysql, amazon_rds_postgres, standard_mysql, standard_postgres_huge_transactions, etc and we pick \"the best defaults\" and correct builtin tables? might make some people's life easier?", "author": "rk3rn3r", "createdAt": "2020-07-29T13:28:31Z", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/Filters.java", "diffHunk": "@@ -30,49 +27,53 @@\n \n     protected static final Set<String> BUILT_IN_DB_NAMES = Collect.unmodifiableSet(\"mysql\", \"performance_schema\", \"sys\", \"information_schema\");\n \n+    /**\n+     * A list of tables that are always ignored. Useful for ignoring \"phantom\"\n+     * tables occasionally exposed by services such as Amazon RDS Aurora. See\n+     * DBZ-1939.\n+     */\n+    private static final Set<String> IGNORED_TABLE_NAMES = Collect.unmodifiableSet(\n+            \"mysql.rds_configuration\",\n+            \"mysql.rds_global_status_history\",\n+            \"mysql.rds_global_status_history_old\",\n+            \"mysql.rds_history\",\n+            \"mysql.rds_replication_status\",\n+            \"mysql.rds_sysinfo\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1NjUxMA==", "url": "https://github.com/debezium/debezium/pull/1723#discussion_r462756510", "bodyText": "Perhaps, but I don't think it's needed. Let's not overcomplicate things by adding too many knobs and options. Also keep in mind that the issue supposedly is fixed by AWS (in some cases?) already.", "author": "gunnarmorling", "createdAt": "2020-07-30T06:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI5Nzg0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NTM4MQ==", "url": "https://github.com/debezium/debezium/pull/1723#discussion_r462355381", "bodyText": "So this would solve the \"phantom\" tables issue but will unfortunately cause a regression:\nConfig:\ndatabase.history.store.only.monitored.tables.ddl=false\ntable.whitelist=mydb.table1\n\nInput:\nid: mydb.table2\n\nPredicate:\nif (!filters.tableFilter().test(id)) {\n   return false;\n}\n\nWill then return false which is not what we want for this configuration.", "author": "okayrunner", "createdAt": "2020-07-29T14:44:12Z", "path": "debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/SnapshotReader.java", "diffHunk": "@@ -866,8 +866,16 @@ private void readTableSchema(final AtomicReference<String> sql, final JdbcConnec\n         });\n     }\n \n-    private boolean shouldRecordTableSchema(final MySqlSchema schema, final Filters filters, TableId id) {\n-        return !schema.isStoreOnlyMonitoredTablesDdl() || filters.tableFilter().test(id);\n+    /**\n+     * Whether DDL for the given table should be recorded.\n+     */\n+    private boolean shouldRecordTableSchema(MySqlSchema schema, Filters filters, TableId id) {\n+        // filtered, built-in, or globally ignored table\n+        if (!filters.tableFilter().test(id)) {\n+            return false;\n+        }\n+\n+        return !schema.isStoreOnlyMonitoredTablesDdl();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc2NTQwMQ==", "url": "https://github.com/debezium/debezium/pull/1723#discussion_r462765401", "bodyText": "Yeah :( Seems there's indeed no way around querying the ignore predicate separately.", "author": "gunnarmorling", "createdAt": "2020-07-30T06:34:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NTM4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA5NDEyNQ==", "url": "https://github.com/debezium/debezium/pull/1723#discussion_r463094125", "bodyText": "Not unless we somehow refactor the database.history.store.only.monitored.tables.ddl to be visible in the Filters class in order to take it into account internally? But I'm not sure what's LOE there.", "author": "okayrunner", "createdAt": "2020-07-30T15:46:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NTM4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA5ODIyNw==", "url": "https://github.com/debezium/debezium/pull/1723#discussion_r463098227", "bodyText": "Yeah, in any case not worth the effort at this point. There's larger refactorings ahead for the MySQL connector in general and filter handling in particular.", "author": "gunnarmorling", "createdAt": "2020-07-30T15:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1NTM4MQ=="}], "type": "inlineReview"}, {"oid": "7afc2193cae9f0a7bc8eef3636a7447f34631264", "url": "https://github.com/debezium/debezium/commit/7afc2193cae9f0a7bc8eef3636a7447f34631264", "message": "DBZ-1939 graceful handling of \"phantom\" tables", "committedDate": "2020-07-30T06:28:41Z", "type": "commit"}, {"oid": "875f7641890de482e7d330d785482ef22886daf9", "url": "https://github.com/debezium/debezium/commit/875f7641890de482e7d330d785482ef22886daf9", "message": "DBZ-1939 Simplifying boolean logic", "committedDate": "2020-07-30T06:29:13Z", "type": "commit"}, {"oid": "8ae9d5c89fc7d1c59c0acb640ea2035108cd5bee", "url": "https://github.com/debezium/debezium/commit/8ae9d5c89fc7d1c59c0acb640ea2035108cd5bee", "message": "DBZ-1939 Removing unused methods; reducing visbility", "committedDate": "2020-07-30T06:30:02Z", "type": "commit"}, {"oid": "8ae9d5c89fc7d1c59c0acb640ea2035108cd5bee", "url": "https://github.com/debezium/debezium/commit/8ae9d5c89fc7d1c59c0acb640ea2035108cd5bee", "message": "DBZ-1939 Removing unused methods; reducing visbility", "committedDate": "2020-07-30T06:30:02Z", "type": "forcePushed"}]}