{"pr_number": 1560, "pr_title": "DBZ-2033 Making integration test more resilient", "pr_createdAt": "2020-06-04T10:34:55Z", "pr_url": "https://github.com/debezium/debezium/pull/1560", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2OTM0Nw==", "url": "https://github.com/debezium/debezium/pull/1560#discussion_r435169347", "bodyText": "@gunnarmorling I recommend to use org.awaitility.core.ConditionFactory.ignoreException(Class<? extends Throwable>)", "author": "jpechane", "createdAt": "2020-06-04T11:00:36Z", "path": "debezium-testing/debezium-testing-testcontainers/src/test/java/io/debezium/testing/testcontainers/DebeziumContainerTest.java", "diffHunk": "@@ -71,11 +73,26 @@ public static void startContainers() {\n     public void canRegisterConnector() throws Exception {\n         debeziumContainer.registerConnector(\"my-connector-1\", getConfiguration(1));\n \n-        String status = executeHttpRequest(debeziumContainer.getConnectorStatus(\"my-connector-1\"));\n-\n-        assertThat(JsonPath.<String> read(status, \"$.name\")).isEqualTo(\"my-connector-1\");\n-        assertThat(JsonPath.<String> read(status, \"$.connector.state\")).isEqualTo(\"RUNNING\");\n-        assertThat(JsonPath.<String> read(status, \"$.tasks[0].state\")).isEqualTo(\"RUNNING\");\n+        // task initialization happens asynchronously, so we might have to retry until the task is RUNNING\n+        Awaitility.await()\n+                .pollInterval(Duration.ofMillis(250))\n+                .atMost(Duration.ofSeconds(5))\n+                .until(\n+                        () -> {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5ODE5OA==", "url": "https://github.com/debezium/debezium/pull/1560#discussion_r435198198", "bodyText": "Good idea, updated.", "author": "gunnarmorling", "createdAt": "2020-06-04T11:58:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2OTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNjI0Mg==", "url": "https://github.com/debezium/debezium/pull/1560#discussion_r435206242", "bodyText": "Or use the correct wait method (see my other comment)  ;)", "author": "jcechace", "createdAt": "2020-06-04T12:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2OTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxMDcxOQ==", "url": "https://github.com/debezium/debezium/pull/1560#discussion_r435210719", "bodyText": "Nice one, didn't know that. Thanks!", "author": "gunnarmorling", "createdAt": "2020-06-04T12:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2OTM0Nw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTY4Mw==", "url": "https://github.com/debezium/debezium/pull/1560#discussion_r435205683", "bodyText": "If there is a chance the path will exist but contain incorrect/outdated value for a period of time, this will fail with the first failed assertion. The correct method here is untilAsserted which is specifically designed to wait for correct assertions...", "author": "jcechace", "createdAt": "2020-06-04T12:12:52Z", "path": "debezium-testing/debezium-testing-testcontainers/src/test/java/io/debezium/testing/testcontainers/DebeziumContainerTest.java", "diffHunk": "@@ -71,11 +73,21 @@ public static void startContainers() {\n     public void canRegisterConnector() throws Exception {\n         debeziumContainer.registerConnector(\"my-connector-1\", getConfiguration(1));\n \n-        String status = executeHttpRequest(debeziumContainer.getConnectorStatus(\"my-connector-1\"));\n-\n-        assertThat(JsonPath.<String> read(status, \"$.name\")).isEqualTo(\"my-connector-1\");\n-        assertThat(JsonPath.<String> read(status, \"$.connector.state\")).isEqualTo(\"RUNNING\");\n-        assertThat(JsonPath.<String> read(status, \"$.tasks[0].state\")).isEqualTo(\"RUNNING\");\n+        // task initialization happens asynchronously, so we might have to retry until the task is RUNNING\n+        Awaitility.await()\n+                .pollInterval(Duration.ofMillis(250))\n+                .atMost(Duration.ofSeconds(30))\n+                .ignoreException(PathNotFoundException.class)\n+                .until(", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxMTA3MA==", "url": "https://github.com/debezium/debezium/pull/1560#discussion_r435211070", "bodyText": "Adjusted accordingly.", "author": "gunnarmorling", "createdAt": "2020-06-04T12:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTY4Mw=="}], "type": "inlineReview"}, {"oid": "f6a63b09074a1700e78536f2ff6cf396ebde6e5a", "url": "https://github.com/debezium/debezium/commit/f6a63b09074a1700e78536f2ff6cf396ebde6e5a", "message": "DBZ-2033 Making integration test more resilient", "committedDate": "2020-06-04T12:22:04Z", "type": "commit"}, {"oid": "f6a63b09074a1700e78536f2ff6cf396ebde6e5a", "url": "https://github.com/debezium/debezium/commit/f6a63b09074a1700e78536f2ff6cf396ebde6e5a", "message": "DBZ-2033 Making integration test more resilient", "committedDate": "2020-06-04T12:22:04Z", "type": "forcePushed"}]}