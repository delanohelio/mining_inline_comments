{"pr_number": 3736, "pr_title": "fix(broker): merge variable on output mapping", "pr_createdAt": "2020-01-24T13:29:59Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/3736", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2MTcwMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373361700", "bodyText": "Why we haven't used that before ? \ud83e\udd14", "author": "Zelldon", "createdAt": "2020-01-31T08:24:44Z", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/deployment/model/element/ExecutableFlowNode.java", "diffHunk": "@@ -16,8 +16,8 @@\n   private final List<ExecutableSequenceFlow> incoming = new ArrayList<>();\n   private final List<ExecutableSequenceFlow> outgoing = new ArrayList<>();\n \n-  private Mapping[] inputMappings = new Mapping[0];\n-  private Mapping[] outputMappings = new Mapping[0];\n+  private Mappings inputMappings = new Mappings();", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2MjExOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373362119", "bodyText": "I like to have these kind of variables hasOutputMappings the ! are often overseen", "author": "Zelldon", "createdAt": "2020-01-31T08:26:05Z", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2Mjc3Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373362773", "bodyText": "this is the old index right ? \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-01-31T08:28:08Z", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {\n+      final DirectBuffer mergedVariables =\n+          mergeOutputVariables(variablesState, elementInstanceKey, outputMappings);\n \n       variablesState.setVariablesFromDocument(\n           getVariableScopeKey(context), workflowKey, mergedVariables);\n     }\n   }\n \n+  private DirectBuffer mergeOutputVariables(\n+      final VariablesState variablesState,\n+      final long elementInstanceKey,\n+      final Mappings outputMappings) {\n+\n+    mergeTool.reset();\n+\n+    // fetch the variables from the target mappings to allow merging with existing variables\n+    final DirectBuffer targetVariables =\n+        variablesState.getVariablesAsDocument(\n+            elementInstanceKey, outputMappings.getTargetVariableNames());\n+\n+    // copy variables to not override them with next variable state access\n+    buffer.putBytes(0, targetVariables, 0, targetVariables.capacity());\n+    bufferView.wrap(buffer, 0, targetVariables.capacity());\n+\n+    mergeTool.mergeDocument(bufferView);", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5MDMyOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373490328", "bodyText": "What do you mean with old index?\nBy calling mergeDocument(...) without any mapping, it passes all variables to the result document. Then merging the other variables on top.", "author": "saig0", "createdAt": "2020-01-31T13:56:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2Mjc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5MDc1NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373490755", "bodyText": "In the past the method was called index. For me it looks weird  that it is called merge but anyway.", "author": "Zelldon", "createdAt": "2020-01-31T13:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2Mjc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NTUwMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373495503", "bodyText": "Agree. A good topic for another day \ud83d\ude05", "author": "saig0", "createdAt": "2020-01-31T14:07:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2Mjc3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2MjkwMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373362901", "bodyText": "I'm wondering why we haven't found this issue before \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-01-31T08:28:26Z", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {\n+      final DirectBuffer mergedVariables =\n+          mergeOutputVariables(variablesState, elementInstanceKey, outputMappings);\n \n       variablesState.setVariablesFromDocument(\n           getVariableScopeKey(context), workflowKey, mergedVariables);\n     }\n   }\n \n+  private DirectBuffer mergeOutputVariables(", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5MTE3NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373491175", "bodyText": "Yeah \ud83d\ude48", "author": "saig0", "createdAt": "2020-01-31T13:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2MjkwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NDExNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373364115", "bodyText": "Do you remember why this is called strictly ? \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-01-31T08:32:08Z", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {\n+      final DirectBuffer mergedVariables =\n+          mergeOutputVariables(variablesState, elementInstanceKey, outputMappings);\n \n       variablesState.setVariablesFromDocument(\n           getVariableScopeKey(context), workflowKey, mergedVariables);\n     }\n   }\n \n+  private DirectBuffer mergeOutputVariables(\n+      final VariablesState variablesState,\n+      final long elementInstanceKey,\n+      final Mappings outputMappings) {\n+\n+    mergeTool.reset();\n+\n+    // fetch the variables from the target mappings to allow merging with existing variables\n+    final DirectBuffer targetVariables =\n+        variablesState.getVariablesAsDocument(\n+            elementInstanceKey, outputMappings.getTargetVariableNames());\n+\n+    // copy variables to not override them with next variable state access\n+    buffer.putBytes(0, targetVariables, 0, targetVariables.capacity());\n+    bufferView.wrap(buffer, 0, targetVariables.capacity());\n+\n+    mergeTool.mergeDocument(bufferView);\n+\n+    final DirectBuffer sourceVariables =\n+        variablesState.getVariablesAsDocument(\n+            elementInstanceKey, outputMappings.getSourceVariableNames());\n+\n+    mergeTool.mergeDocumentStrictly(sourceVariables, outputMappings.get());", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NDczMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373494733", "bodyText": "I checked it. Strictly means here that an exception is thrown when a mapping cannot be applied (i.e. no variable or nested property with the given name). The other method doesn't fail in this case. But it seems that we don't use the non-strict version of this anywhere \ud83e\udd14", "author": "saig0", "createdAt": "2020-01-31T14:05:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NDExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NTA3Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373495073", "bodyText": "Ah ok thanks. Maybe we can delete it in a separate issue?", "author": "Zelldon", "createdAt": "2020-01-31T14:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NDExNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NjQ2Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373496463", "bodyText": "Sure. I'll try to remove it \ud83d\uddd1\ufe0f", "author": "saig0", "createdAt": "2020-01-31T14:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NDExNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NTQ5Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373365496", "bodyText": "why \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-01-31T08:36:25Z", "path": "json-path/src/test/java/io/zeebe/msgpack/mapping/MappingMergeParameterizedTest.java", "diffHunk": "@@ -322,25 +322,6 @@\n             // expected result\n             \"{'obj':{'test':'value','newFoo':1},'int':1}\"\n           },\n-          // 37. Test zeebe-io/zeebe#297", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NzU5MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373497590", "bodyText": "I deleted the test case because it was outdated since a while \ud83d\ude04", "author": "saig0", "createdAt": "2020-01-31T14:11:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NTQ5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NzgzNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373497837", "bodyText": "ok \ud83d\ude04", "author": "Zelldon", "createdAt": "2020-01-31T14:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NTQ5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NTY5Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373365692", "bodyText": "I thought we had this utility before \ud83d\ude48 :D", "author": "Zelldon", "createdAt": "2020-01-31T08:36:57Z", "path": "json-path/src/main/java/io/zeebe/msgpack/mapping/Mappings.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.msgpack.mapping;\n+\n+import io.zeebe.msgpack.jsonpath.JsonPathQuery;\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.agrona.DirectBuffer;\n+\n+public class Mappings {", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3Mjc3OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373372779", "bodyText": "I like it \ud83d\udc4d", "author": "Zelldon", "createdAt": "2020-01-31T08:56:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NTY5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MTg4OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373371888", "bodyText": "This test is green without the fix \ud83e\udd14", "author": "Zelldon", "createdAt": "2020-01-31T08:53:59Z", "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/MessageOutputMappingTest.java", "diffHunk": "@@ -104,6 +104,12 @@\n         activityVariables(tuple(\"x\", \"{\\\"y\\\":2}\")),\n         scopeVariables(tuple(\"y\", \"2\"))\n       },\n+      {", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MTkyMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373371923", "bodyText": "This test is green without the fix \ud83e\udd14", "author": "Zelldon", "createdAt": "2020-01-31T08:54:04Z", "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/JobOutputMappingTest.java", "diffHunk": "@@ -100,6 +100,12 @@\n         activityVariables(tuple(\"x\", \"{\\\"y\\\":2}\")),\n         scopeVariables(tuple(\"y\", \"2\"))\n       },\n+      {", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MjEwNg==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373372106", "bodyText": "This test is green without the fix \ud83e\udd14", "author": "Zelldon", "createdAt": "2020-01-31T08:54:36Z", "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/ActivityOutputMappingTest.java", "diffHunk": "@@ -72,6 +72,16 @@\n         scopeVariables(tuple(\"z\", \"{\\\"y\\\":2}\"))\n       },\n       {\"{'x': {'y': 2}}\", mapping(b -> b.zeebeOutput(\"x.y\", \"z\")), scopeVariables(tuple(\"z\", \"2\"))},\n+      {\n+        \"{'z': {'x': 1}, 'y': 2}\",\n+        mapping(b -> b.zeebeOutput(\"y\", \"z.y\")),\n+        scopeVariables(tuple(\"z\", \"{\\\"x\\\":1,\\\"y\\\":2}\"))\n+      },\n+      {\n+        \"{'x': 1, 'y': 2}\",", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MjE4NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373372185", "bodyText": "This is the only one which failed without the fix \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-01-31T08:54:50Z", "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/ActivityOutputMappingTest.java", "diffHunk": "@@ -72,6 +72,16 @@\n         scopeVariables(tuple(\"z\", \"{\\\"y\\\":2}\"))\n       },\n       {\"{'x': {'y': 2}}\", mapping(b -> b.zeebeOutput(\"x.y\", \"z\")), scopeVariables(tuple(\"z\", \"2\"))},\n+      {\n+        \"{'z': {'x': 1}, 'y': 2}\",\n+        mapping(b -> b.zeebeOutput(\"y\", \"z.y\")),", "originalCommit": "3f5a4006663b3ee74952980ce2d83e01fddbc982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwMDE0Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373500146", "bodyText": "Correct. It would be more work to write a similar test for message and job. However, the other case (two variables into one document) was not tested yet. So, I think it is good to have one ;)", "author": "saig0", "createdAt": "2020-01-31T14:16:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MjE4NQ=="}], "type": "inlineReview"}, {"oid": "294ec40974f8b7204c3363694325c1dc0722ec8a", "url": "https://github.com/camunda-cloud/zeebe/commit/294ec40974f8b7204c3363694325c1dc0722ec8a", "message": "fix(broker): merge variable on output mapping\n\n* a document variable is merged using an output mapping that adds a new entry to the document, instead of replacing the document", "committedDate": "2020-01-31T15:04:36Z", "type": "commit"}, {"oid": "294ec40974f8b7204c3363694325c1dc0722ec8a", "url": "https://github.com/camunda-cloud/zeebe/commit/294ec40974f8b7204c3363694325c1dc0722ec8a", "message": "fix(broker): merge variable on output mapping\n\n* a document variable is merged using an output mapping that adds a new entry to the document, instead of replacing the document", "committedDate": "2020-01-31T15:04:36Z", "type": "forcePushed"}]}