{"pr_number": 4905, "pr_title": "feat(clients/go): add client info to user-agent", "pr_createdAt": "2020-07-07T18:22:36Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4905", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3ODQ1OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451078459", "bodyText": "It's still not possible to vendor tools with Go yet? \ud83d\ude1e", "author": "npepinpe", "createdAt": "2020-07-07T18:59:45Z", "path": ".ci/scripts/release/build-go.sh", "diffHunk": "@@ -3,9 +3,18 @@\n export CGO_ENABLED=0\n \n ORG_DIR=${GOPATH}/src/github.com/zeebe-io\n+GOBINDATA_VERSION=\"3.1.3\"\n \n mkdir -p ${ORG_DIR}\n ln -s ${PWD} ${ORG_DIR}/zeebe\n \n+curl -sL https://github.com/go-bindata/go-bindata/archive/v${GOBINDATA_VERSION}.tar.gz | tar xz ", "originalCommit": "9c2a86afd9ad177aa3ceb5815496debdad37dd03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzMzk4NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451333984", "bodyText": "Actually, I think it's possible. I can look into it in a follow up issue since it would simplify the CI scripts and make them less error-prone", "author": "MiguelPires", "createdAt": "2020-07-08T07:21:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3ODQ1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM0MzIzOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451343239", "bodyText": "I created an issue for it #4908 thanks for bringing it up", "author": "MiguelPires", "createdAt": "2020-07-08T07:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3ODQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3OTgzNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451079835", "bodyText": "Nit: maybe we can copy the commit message the maven plugin use? \"Prepare next development version\" or something", "author": "npepinpe", "createdAt": "2020-07-07T19:02:26Z", "path": ".ci/scripts/release/post-github.sh", "diffHunk": "@@ -0,0 +1,9 @@\n+#!/bin/bash\n+\n+cd ${GOPATH}/src/github.com/zeebe-io/zeebe/clients/go/internal/embedded\n+\n+echo ${DEVELOPMENT_VERSION} > data/VERSION\n+go-bindata -pkg embedded -o embedded.go -prefix data/\n+\n+git commit -am \"chore(project): update version in go client\"", "originalCommit": "9c2a86afd9ad177aa3ceb5815496debdad37dd03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzMjkyOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451332929", "bodyText": "Sure, something like \"chore(project): Prepare next development version (Go client)\"? Otherwise, it might seem weird to have the \"same\" commit twice", "author": "MiguelPires", "createdAt": "2020-07-08T07:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3OTgzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MDM1Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451080353", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            0.24.0-SNAPSHOT\n          \n          \n            \n            0.25.0-SNAPSHOT\n          \n      \n    \n    \n  \n\nRelease went through in the mean time ;)", "author": "npepinpe", "createdAt": "2020-07-07T19:03:28Z", "path": "clients/go/internal/embedded/data/VERSION", "diffHunk": "@@ -0,0 +1 @@\n+0.24.0-SNAPSHOT", "originalCommit": "9c2a86afd9ad177aa3ceb5815496debdad37dd03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MDkyMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451080920", "bodyText": "I guess this is left over debug stuff?", "author": "npepinpe", "createdAt": "2020-07-07T19:04:41Z", "path": "clients/go/pkg/zbc/oauthCredentialsProvider_test.go", "diffHunk": "@@ -556,10 +557,13 @@ func mockAuthorizationServerWithAudience(t *testing.T, token *mutableToken, audi\n \t\t\tpanic(err)\n \t\t}\n \n+\t\tfmt.Println(request.Header)", "originalCommit": "9c2a86afd9ad177aa3ceb5815496debdad37dd03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM2MDk1Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451360953", "bodyText": "It is, my bad", "author": "MiguelPires", "createdAt": "2020-07-08T08:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MDkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTQyNg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451081426", "bodyText": "Should we log errors? In Java I'd say let's log it at debug level, but is that a thing with the Go logger? \ud83d\ude05\nOn the other hand, I guess you could tell from the user agent if something goes wrong...still \ud83e\udd14", "author": "npepinpe", "createdAt": "2020-07-07T19:05:39Z", "path": "clients/go/pkg/zbc/client.go", "diffHunk": "@@ -255,3 +258,12 @@ func configureKeepAlive(config *ClientConfig) error {\n \n \treturn nil\n }\n+\n+func getVersion() string {\n+\tzbVersion := \"development\"\n+\tif readVersion, err := embedded.Asset(\"VERSION\"); err == nil {\n+\t\tzbVersion = strings.TrimSpace(string(readVersion))\n+\t}", "originalCommit": "9c2a86afd9ad177aa3ceb5815496debdad37dd03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM2MDkwNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r451360907", "bodyText": "It's not, no. I'm not sure what actionable thing we can log here. What do you have in mind? There's nothing for the user to do here, except maybe to contact the team or update. And also, it's not crucial since we have a fallback behavior", "author": "MiguelPires", "createdAt": "2020-07-08T08:09:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcyMTg4Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r452721886", "bodyText": "I guess I'm worried in case something goes wrong in the release process - we regenerate this for the release but don't really test it, right? We test before with a different file, correct? But I guess the chances are quite low...and worse comes to worst, we could add it as a post-release test (e.g. like the get started stuff).", "author": "npepinpe", "createdAt": "2020-07-10T09:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjczOTMyOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4905#discussion_r452739328", "bodyText": "True, I can test it in the next release to make sure everything is ok but, even if the version is corrupted somehow, it's also not a very severe bug. It won't break anything", "author": "MiguelPires", "createdAt": "2020-07-10T09:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTQyNg=="}], "type": "inlineReview"}, {"oid": "2e170c5eb9aec1c59576b007461261975d6a79e2", "url": "https://github.com/camunda-cloud/zeebe/commit/2e170c5eb9aec1c59576b007461261975d6a79e2", "message": "feat(clients/go): add client info to user-agent\n\n  * introduces `go-bindata` to embed static data into go code\n  * sets user-agent with version obtained from generated code\n  * automatically update version and generated files when releasing", "committedDate": "2020-07-10T15:27:11Z", "type": "commit"}, {"oid": "2e170c5eb9aec1c59576b007461261975d6a79e2", "url": "https://github.com/camunda-cloud/zeebe/commit/2e170c5eb9aec1c59576b007461261975d6a79e2", "message": "feat(clients/go): add client info to user-agent\n\n  * introduces `go-bindata` to embed static data into go code\n  * sets user-agent with version obtained from generated code\n  * automatically update version and generated files when releasing", "committedDate": "2020-07-10T15:27:11Z", "type": "forcePushed"}]}