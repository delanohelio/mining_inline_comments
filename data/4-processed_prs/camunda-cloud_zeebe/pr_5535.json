{"pr_number": 5535, "pr_title": "chore(broker): Add startup and close processes metrics", "pr_createdAt": "2020-10-08T09:27:43Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5535", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NjY5Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503686693", "bodyText": "A bit unsure with this name. Maybe we can change it to BrokerStepMetrics or BrokerMetrics? What do you think?", "author": "Zelldon", "createdAt": "2020-10-13T06:04:23Z", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMzQ4Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503723482", "bodyText": "Hm, I like BrokerStepMetrics. It is not too broad as BrokerMetrics :)", "author": "aivinog1", "createdAt": "2020-10-13T07:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NjY5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzY1MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503687650", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      .name(\"broker_process_startup_metric\")\n          \n          \n            \n                      .name(\"broker_start_step_latency\")", "author": "Zelldon", "createdAt": "2020-10-13T06:07:04Z", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzgwMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503687800", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      .name(\"broker_process_close_metric\")\n          \n          \n            \n                      .name(\"broker_close_step_latency\")", "author": "Zelldon", "createdAt": "2020-10-13T06:07:27Z", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()\n+          .register();\n+\n+  private static final Gauge CLOSE_METRICS =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_close_metric\")", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4ODE4MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503688180", "bodyText": "Please add an help to the metric, which describes what it actually contains. Like: \"Time for each broker start step to complete.\"", "author": "Zelldon", "createdAt": "2020-10-13T06:08:38Z", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4ODY1Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503688657", "bodyText": "Normally we use observe, could you change that please.", "author": "Zelldon", "createdAt": "2020-10-13T06:09:58Z", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()\n+          .register();\n+\n+  private static final Gauge CLOSE_METRICS =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_close_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()\n+          .register();\n+\n+  private final String processName;\n+\n+  public ProcessLifetimeMetrics(final String processName) {\n+    this.processName = processName;\n+  }\n+\n+  /**\n+   * Meter the time to start for a single step.\n+   *\n+   * @param stepName the name of the step\n+   * @param startupDuration the step start duration in ms\n+   */\n+  public void meterStartupTimeForStep(String stepName, long startupDuration) {", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTI0NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503689245", "bodyText": "Why is this necessary?", "author": "Zelldon", "createdAt": "2020-10-13T06:11:24Z", "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -90,7 +94,7 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n     return endTime - startTime;\n   }\n \n-  private static class StartStep {\n+  public static class StartStep {", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NDk4Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r504474987", "bodyText": "No, this is a useless change, I'll revert this", "author": "aivinog1", "createdAt": "2020-10-14T07:55:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTI0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTUzMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503689530", "bodyText": "Why is this necessary?", "author": "Zelldon", "createdAt": "2020-10-13T06:12:13Z", "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -100,11 +104,11 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n       this.startFunction = startFunction;\n     }\n \n-    String getName() {\n+    public String getName() {", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NTAzNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r504475035", "bodyText": "No, this is a useless change, I'll revert this", "author": "aivinog1", "createdAt": "2020-10-14T07:55:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTUzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTU1Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503689552", "bodyText": "Why is this necessary?", "author": "Zelldon", "createdAt": "2020-10-13T06:12:17Z", "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -100,11 +104,11 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n       this.startFunction = startFunction;\n     }\n \n-    String getName() {\n+    public String getName() {\n       return name;\n     }\n \n-    StartFunction getStartFunction() {\n+    public StartFunction getStartFunction() {", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NTE2OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r504475168", "bodyText": "No, this is a useless change, I'll revert this", "author": "aivinog1", "createdAt": "2020-10-14T07:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTU1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MzUwMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503693500", "bodyText": "I think we didn't need the \"process name\", this is automatically added by Prometheus on which pod this metric was scraped.", "author": "Zelldon", "createdAt": "2020-10-13T06:22:57Z", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NTA3NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503695074", "bodyText": "Register does already create, so this is not necessary.", "author": "Zelldon", "createdAt": "2020-10-13T06:26:50Z", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()", "originalCommit": "f0bc83db78d47e50239128f6a877618852b1938d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a0e2585f4a7c2711bb2036ae2a87b924b01ed732", "url": "https://github.com/camunda-cloud/zeebe/commit/a0e2585f4a7c2711bb2036ae2a87b924b01ed732", "message": "chore(broker): Add startup and close processes metrics", "committedDate": "2020-10-14T08:06:51Z", "type": "forcePushed"}, {"oid": "78f593eb6db5f5cf2a161e9c5d55fd790b4f97bb", "url": "https://github.com/camunda-cloud/zeebe/commit/78f593eb6db5f5cf2a161e9c5d55fd790b4f97bb", "message": "chore(broker): Add startup and close processes metrics", "committedDate": "2020-10-19T06:05:30Z", "type": "forcePushed"}, {"oid": "dc5913685ba694b45b05638ab54b266b1d328a9e", "url": "https://github.com/camunda-cloud/zeebe/commit/dc5913685ba694b45b05638ab54b266b1d328a9e", "message": "chore(broker): Add startup and close processes metrics", "committedDate": "2020-10-20T13:32:14Z", "type": "commit"}, {"oid": "dc5913685ba694b45b05638ab54b266b1d328a9e", "url": "https://github.com/camunda-cloud/zeebe/commit/dc5913685ba694b45b05638ab54b266b1d328a9e", "message": "chore(broker): Add startup and close processes metrics", "committedDate": "2020-10-20T13:32:14Z", "type": "forcePushed"}]}