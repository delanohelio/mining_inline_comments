{"pr_number": 4791, "pr_title": "chore(Dockerfile): remove chgrp/chown layer", "pr_createdAt": "2020-06-22T15:55:33Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4791", "timeline": [{"oid": "e73c180a382f6128b212df2c1f598599828c05e9", "url": "https://github.com/camunda-cloud/zeebe/commit/e73c180a382f6128b212df2c1f598599828c05e9", "message": "chore(Dockerfile): remove chgrp/chown layer\n\n- slims down the resulting image by copying files over with the correct\n  permissions already\n- sets the container's user to zeebe\n- corrects permissions for logs folder", "committedDate": "2020-06-22T15:57:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNTA1NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r443935055", "bodyText": "Isn't 0 == root? Why do you need to set the grp to root? And chmod -R should be recursive I would expect \ud83e\udd14", "author": "Zelldon", "createdAt": "2020-06-23T03:03:58Z", "path": "Dockerfile", "diffHunk": "@@ -12,9 +12,14 @@ RUN mkdir -p ${TMP_DIR} && \\\n     # already create volume dir to later have correct rights\n     mkdir ${TMP_DIR}/data\n \n+RUN groupadd -g 1000 zeebe && \\\n+    adduser -u 1000 zeebe --system --ingroup zeebe\n+\n ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini ${TMP_DIR}/bin/tini\n COPY docker/utils/startup.sh ${TMP_DIR}/bin/startup.sh\n RUN chmod +x -R ${TMP_DIR}/bin/\n+RUN chgrp 0 ${TMP_DIR}/bin/startup.sh && chmod 0775 ${TMP_DIR}/bin/startup.sh", "originalCommit": "e73c180a382f6128b212df2c1f598599828c05e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAxMTAyMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444011020", "bodyText": "I essentially moved this line, so I didn't think too much about it and trusted whoever added it knew why - but you're right, 0 is root so no idea why we're changing the group to root \ud83e\udd14 We're anyway later changing it again to 1000, so yeah, not sure. I guess I should test this stuff on OpenShift since this is where the requirement came from", "author": "npepinpe", "createdAt": "2020-06-23T07:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNTA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNjMyOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r443936329", "bodyText": "Maybe we can add comments for some lines like these what was the reason to add this and what it is supposed to do.", "author": "Zelldon", "createdAt": "2020-06-23T03:09:31Z", "path": "Dockerfile", "diffHunk": "@@ -24,21 +29,22 @@ ENV ZB_HOME=/usr/local/zeebe \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \"${ZB_HOME}/bin:${PATH}\"\n \n-RUN groupadd -g 1000 zeebe && \\\n-    adduser -u 1000 zeebe --system --ingroup zeebe\n-\n WORKDIR ${ZB_HOME}\n EXPOSE 26500 26501 26502\n VOLUME ${ZB_HOME}/data\n \n+RUN groupadd -g 1000 zeebe && \\\n+    adduser -u 1000 zeebe --system --ingroup zeebe\n+RUN chmod g=u /etc/passwd", "originalCommit": "e73c180a382f6128b212df2c1f598599828c05e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3NjI2MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r443976261", "bodyText": "I'm not a docker expert. I think earlier it was told that RUN should be merged together, but it seems that this is in the newest versions no longer the case, is this right? Related https://stackoverflow.com/questions/39223249/multiple-run-vs-single-chained-run-in-dockerfile-what-is-better", "author": "Zelldon", "createdAt": "2020-06-23T05:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNjMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAwNDk0NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444004944", "bodyText": "You're right that it's usually better to merge them, in this case since those layers tend to be tiny and not updated often I didn't, but we could stay consistent. The line about it being less important in newer versions refers to the multi stage - since you don't care how many layers the non-target stages have, and having multiple run statements is usually more readable \ud83e\udd37\u200d\u2642\ufe0f", "author": "npepinpe", "createdAt": "2020-06-23T07:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNjMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNzM1MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r443937351", "bodyText": "Do you know why we not copying the startup script from the builder?", "author": "Zelldon", "createdAt": "2020-06-23T03:14:01Z", "path": "Dockerfile", "diffHunk": "@@ -24,21 +29,22 @@ ENV ZB_HOME=/usr/local/zeebe \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \"${ZB_HOME}/bin:${PATH}\"\n \n-RUN groupadd -g 1000 zeebe && \\\n-    adduser -u 1000 zeebe --system --ingroup zeebe\n-\n WORKDIR ${ZB_HOME}\n EXPOSE 26500 26501 26502\n VOLUME ${ZB_HOME}/data\n \n+RUN groupadd -g 1000 zeebe && \\\n+    adduser -u 1000 zeebe --system --ingroup zeebe\n+RUN chmod g=u /etc/passwd\n+RUN chown 1000:0 ${ZB_HOME} ${ZB_HOME}/data\n+\n+USER zeebe\n COPY --chown=1000:0 docker/utils/startup.sh /usr/local/bin", "originalCommit": "e73c180a382f6128b212df2c1f598599828c05e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAwNTA3Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444005077", "bodyText": "No, we probably should, good catch \ud83d\udc4d", "author": "npepinpe", "createdAt": "2020-06-23T07:04:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNzM1MQ=="}], "type": "inlineReview"}, {"oid": "e07c64f0a6539ff6b48af643911c8f60c79daa71", "url": "https://github.com/camunda-cloud/zeebe/commit/e07c64f0a6539ff6b48af643911c8f60c79daa71", "message": "chore(Dockerfile): simplify dockerfile", "committedDate": "2020-06-23T07:14:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA1NDczMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444054731", "bodyText": "Why do we need this in the builder image?", "author": "menski", "createdAt": "2020-06-23T08:32:47Z", "path": "Dockerfile", "diffHunk": "@@ -16,9 +15,13 @@ RUN mkdir -p ${TMP_DIR} && \\\n     # already create volume dir to later have correct rights\n     mkdir ${TMP_DIR}/data\n \n+RUN groupadd -g 1000 zeebe && \\\n+    adduser -u 1000 zeebe --system --ingroup zeebe", "originalCommit": "e07c64f0a6539ff6b48af643911c8f60c79daa71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MjI2Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444062262", "bodyText": "To preserve permissions when copying over", "author": "npepinpe", "createdAt": "2020-06-23T08:45:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA1NDczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MzIyNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444063224", "bodyText": "I don't think you need the user and groups, you can chown to whatever you want as far as I know", "author": "menski", "createdAt": "2020-06-23T08:46:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA1NDczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2Mzk3OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444063979", "bodyText": "I can try that \ud83d\udc4d", "author": "npepinpe", "createdAt": "2020-06-23T08:47:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA1NDczMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA1NjUzNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444056534", "bodyText": "I don't think we need to set the owner in the builder image as we set them on copy to the final image", "author": "menski", "createdAt": "2020-06-23T08:35:43Z", "path": "Dockerfile", "diffHunk": "@@ -16,9 +15,13 @@ RUN mkdir -p ${TMP_DIR} && \\\n     # already create volume dir to later have correct rights\n     mkdir ${TMP_DIR}/data\n \n+RUN groupadd -g 1000 zeebe && \\\n+    adduser -u 1000 zeebe --system --ingroup zeebe\n+\n ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini ${TMP_DIR}/bin/tini\n COPY docker/utils/startup.sh ${TMP_DIR}/bin/startup.sh\n RUN chmod +x -R ${TMP_DIR}/bin/\n+RUN chown 1000:1000 -R ${TMP_DIR}/ && chmod -R 0775 ${TMP_DIR}/ ${TMP_DIR}/data", "originalCommit": "e07c64f0a6539ff6b48af643911c8f60c79daa71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA1ODY2Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444058667", "bodyText": "The group has to be 0 for the non-root to work correctly, and I think we should set it after we copied the content, or maybe it's is even not needed, not sure how copy --chown works in docker out of my head.", "author": "menski", "createdAt": "2020-06-23T08:39:10Z", "path": "Dockerfile", "diffHunk": "@@ -39,21 +42,17 @@ ENV ZB_HOME=/usr/local/zeebe \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \"${ZB_HOME}/bin:${PATH}\"\n \n-RUN groupadd -g 1000 zeebe && \\\n-    adduser -u 1000 zeebe --system --ingroup zeebe\n-\n WORKDIR ${ZB_HOME}\n EXPOSE 26500 26501 26502\n VOLUME ${ZB_HOME}/data\n \n-COPY --chown=1000:0 docker/utils/startup.sh /usr/local/bin\n-RUN chgrp 0 /usr/local/bin/startup.sh && chmod g=u /etc/passwd && chmod 0775 /usr/local/bin/startup.sh\n-COPY --from=builder --chown=1000:0 /tmp/zeebe ${ZB_HOME}\n-RUN chown 1000:0 -R ${ZB_HOME}/ && chmod 0775 ${ZB_HOME}/ ${ZB_HOME}/data\n+RUN groupadd -g 1000 zeebe && \\\n+    adduser -u 1000 zeebe --system --ingroup zeebe\n+RUN chmod g=u /etc/passwd\n+RUN chown -R 1000:1000 ${ZB_HOME}", "originalCommit": "e07c64f0a6539ff6b48af643911c8f60c79daa71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MDYwMg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444060602", "bodyText": "again group has to be 0, and maybe we can just keep the startup.sh in the ${ZB_HOME}/bin dir instead of copying it around as we also do it tini. we can adjust the ENTRYPOINT instead.", "author": "menski", "createdAt": "2020-06-23T08:42:22Z", "path": "Dockerfile", "diffHunk": "@@ -39,21 +42,17 @@ ENV ZB_HOME=/usr/local/zeebe \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \"${ZB_HOME}/bin:${PATH}\"\n \n-RUN groupadd -g 1000 zeebe && \\\n-    adduser -u 1000 zeebe --system --ingroup zeebe\n-\n WORKDIR ${ZB_HOME}\n EXPOSE 26500 26501 26502\n VOLUME ${ZB_HOME}/data\n \n-COPY --chown=1000:0 docker/utils/startup.sh /usr/local/bin\n-RUN chgrp 0 /usr/local/bin/startup.sh && chmod g=u /etc/passwd && chmod 0775 /usr/local/bin/startup.sh\n-COPY --from=builder --chown=1000:0 /tmp/zeebe ${ZB_HOME}\n-RUN chown 1000:0 -R ${ZB_HOME}/ && chmod 0775 ${ZB_HOME}/ ${ZB_HOME}/data\n+RUN groupadd -g 1000 zeebe && \\\n+    adduser -u 1000 zeebe --system --ingroup zeebe\n+RUN chmod g=u /etc/passwd\n+RUN chown -R 1000:1000 ${ZB_HOME}\n \n-# Set execution flag (otherwise, if image is built in a Windows environment, the start scripts\n-# won't be executable)\n-RUN chmod +x ${ZB_HOME}/bin/broker\n-RUN chmod +x ${ZB_HOME}/bin/gateway\n+USER zeebe\n+COPY --from=builder --chown=1000:1000 /tmp/zeebe/bin/startup.sh /usr/local/bin\n+COPY --from=builder --chown=1000:1000 /tmp/zeebe ${ZB_HOME}", "originalCommit": "e07c64f0a6539ff6b48af643911c8f60c79daa71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2Mjk2MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r444062960", "bodyText": "Can you explain why the group has to be 0? How did you test this? The image runs fine without the 0 group, should I be testing something else?", "author": "npepinpe", "createdAt": "2020-06-23T08:46:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MDYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2MjI2OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4791#discussion_r445362269", "bodyText": "The group 0 or root group is recommended by the OpenShift documentation, see section https://access.redhat.com/documentation/en-us/openshift_container_platform/4.4/html/images/creating-images#images-create-guide-openshift_create-images paragraph \"Support arbitrary user ids\"\n\nFor an image to support running as an arbitrary user, directories and files that may be written to by processes in the image should be owned by the root group and be read/writable by that group. Files to be executed should also have group execute permissions.\n\n\nAdding the following to your Dockerfile sets the directory and file permissions to allow users in the root group to access them in the built image:\n\nRUN chgrp -R 0 /some/directory && \\\n    chmod -R g=u /some/directory\n\n\nBecause the container user is always a member of the root group, the container user can read and write these files.", "author": "menski", "createdAt": "2020-06-25T07:33:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2MDYwMg=="}], "type": "inlineReview"}, {"oid": "535957913e74c82761af73613752cebe768a783f", "url": "https://github.com/camunda-cloud/zeebe/commit/535957913e74c82761af73613752cebe768a783f", "message": "chore(Dockerfile): remove chgrp/chown layer\n\n- slims down the resulting image by copying files over with the correct\n  permissions already", "committedDate": "2020-06-25T11:00:25Z", "type": "commit"}, {"oid": "535957913e74c82761af73613752cebe768a783f", "url": "https://github.com/camunda-cloud/zeebe/commit/535957913e74c82761af73613752cebe768a783f", "message": "chore(Dockerfile): remove chgrp/chown layer\n\n- slims down the resulting image by copying files over with the correct\n  permissions already", "committedDate": "2020-06-25T11:00:25Z", "type": "forcePushed"}]}