{"pr_number": 5389, "pr_title": "Prepare 0.24 for rolling upgrade to 0.25", "pr_createdAt": "2020-09-21T14:12:31Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5389", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwNDkxMg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5389#discussion_r492504912", "bodyText": "Name fallback is a bit misleading as it uses fallback as default for serializing. Can we give more meaningful names?", "author": "deepthidevaki", "createdAt": "2020-09-22T06:43:42Z", "path": "atomix/utils/src/main/java/io/atomix/utils/serializer/FallbackNamespace.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright \u00a9 2020 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.atomix.utils.serializer;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.atomix.utils.serializer.NamespaceImpl.Builder;\n+import io.atomix.utils.serializer.NamespaceImpl.RegistrationBlock;\n+import java.nio.ByteBuffer;\n+import org.slf4j.Logger;\n+\n+public class FallbackNamespace implements Namespace {\n+\n+  private static final Logger LOG = getLogger(FallbackNamespace.class);\n+  private static final String DESERIALIZE_ERROR =\n+      \"Serialized bytes contained header with version but deserialization failed (will fallback to FieldSerializer):\\n\";\n+  private static final String UNKNOWN_VERSION_ERROR =\n+      \"Magic byte was encountered, signalling newer version of serializer, but version {} is unrecognized. Using FieldSerializer as fallback\";\n+  private static final byte MAGIC_BYTE = (byte) 0xFF;\n+  private static final byte VERSION_BYTE = 0x01;\n+  private final NamespaceImpl fallback;\n+  private final NamespaceImpl namespace;\n+\n+  FallbackNamespace(final NamespaceImpl fallback, final NamespaceImpl namespace) {\n+    this.fallback = fallback;", "originalCommit": "28a96aa3533ebb62fea199c13341127c3b60e9f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU0MjU3MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5389#discussion_r492542570", "bodyText": "These names were requested by the reviewer in the last review #5042 (comment). The initial names were legacy and compatible. Can you suggest alternatives that are more meaningful?", "author": "MiguelPires", "createdAt": "2020-09-22T08:00:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwNDkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4ODk5OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5389#discussion_r492588998", "bodyText": "I think it make sense to use \"fallback\" in 0.25 because it is actually using it as a fallback. But here fallback is the default. legacy and compatible sounds good to me. Or just switch the places - current namespace is the new fallback.", "author": "deepthidevaki", "createdAt": "2020-09-22T09:16:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwNDkxMg=="}], "type": "inlineReview"}, {"oid": "5815ca13b7e8cb3cd21372f4f1790f6b4271c266", "url": "https://github.com/camunda-cloud/zeebe/commit/5815ca13b7e8cb3cd21372f4f1790f6b4271c266", "message": "chore(atomix): prepare 0.24 for rolling upgrade", "committedDate": "2020-09-23T07:21:35Z", "type": "commit"}, {"oid": "3f1317724488749b8dcb849181c08f38e5c6091c", "url": "https://github.com/camunda-cloud/zeebe/commit/3f1317724488749b8dcb849181c08f38e5c6091c", "message": "chore(atomix): disable Kryo logs", "committedDate": "2020-09-23T07:21:40Z", "type": "commit"}, {"oid": "3f1317724488749b8dcb849181c08f38e5c6091c", "url": "https://github.com/camunda-cloud/zeebe/commit/3f1317724488749b8dcb849181c08f38e5c6091c", "message": "chore(atomix): disable Kryo logs", "committedDate": "2020-09-23T07:21:40Z", "type": "forcePushed"}]}