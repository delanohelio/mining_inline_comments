{"pr_number": 4925, "pr_title": "fix(broker): fix OOM on restart", "pr_createdAt": "2020-07-09T13:39:44Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4925", "timeline": [{"oid": "79d3a97bf6d968c269098212bd291f60dd6fc55e", "url": "https://github.com/camunda-cloud/zeebe/commit/79d3a97bf6d968c269098212bd291f60dd6fc55e", "message": "fix(broker): fix OOM on restart", "committedDate": "2020-07-08T12:09:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452237946", "bodyText": "Now when I think about it more, it is not necessary to schedule a task for this here. setLastApplied is called from the same thread context. So we can immediately execute it and no need to schedule it as a separate task.", "author": "deepthidevaki", "createdAt": "2020-07-09T13:58:09Z", "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/RaftContext.java", "diffHunk": "@@ -371,7 +371,7 @@ public long setCommitIndex(final long commitIndex) {\n   public void setLastApplied(final long lastApplied, final long lastAppliedTerm) {\n     this.lastApplied = Math.max(this.lastApplied, lastApplied);\n     this.lastAppliedTerm = Math.max(this.lastAppliedTerm, lastAppliedTerm);\n-    if (state == State.ACTIVE) {\n+    if (state == State.ACTIVE && this.lastApplied >= firstCommitIndex) {", "originalCommit": "79d3a97bf6d968c269098212bd291f60dd6fc55e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0MzUzNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452243537", "bodyText": "I can change it, if you want. My only caution is that this is a public method. And yes, currently it is only called from one place, but I wouldn't want to guarantee that for the future. Or maybe we can guarantee it, because it is such a narrow function.\nPlease advise whether I should change it or keep it as it is.", "author": "pihme", "createdAt": "2020-07-09T14:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0NzU3Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452247576", "bodyText": "That's a valid argument. Then to make it safe may be:\nif (threadContext.isCurrentContext()) {\n  // execute\n} else {\n// schedule\n}", "author": "deepthidevaki", "createdAt": "2020-07-09T14:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0ODYwNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452248604", "bodyText": "I am ok with current way also.", "author": "deepthidevaki", "createdAt": "2020-07-09T14:13:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MzAxMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452263011", "bodyText": "In that case, I would leave it as it is.\nIn the past I have been burned by code like\nif (threadContext.isCurrentContext()) {\n  // execute\n} else {\n// schedule\n}\n\nMostly, because it is hard to reason about code that sometimes gets executed synchronously and immediately, and sometimes gets executed asynchronously and at a deferred point in time.\nI do like the idea, though. Maybe we can guarantee which thread we are on in the future.", "author": "pihme", "createdAt": "2020-07-09T14:32:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}], "type": "inlineReview"}]}