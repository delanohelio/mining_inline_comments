{"pr_number": 5937, "pr_title": "Decrease parallelism in CI tests", "pr_createdAt": "2020-11-27T18:02:57Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5937", "timeline": [{"oid": "65802ccbb7035fed00bf4ecab536368fac99ebec", "url": "https://github.com/camunda-cloud/zeebe/commit/65802ccbb7035fed00bf4ecab536368fac99ebec", "message": "chore(ci): allow overriding fork count via env var", "committedDate": "2020-11-28T08:51:46Z", "type": "forcePushed"}, {"oid": "9ae1b927a61bb0eff38ad8eca3a27255dd22ba94", "url": "https://github.com/camunda-cloud/zeebe/commit/9ae1b927a61bb0eff38ad8eca3a27255dd22ba94", "message": "chore(ci): allow overriding fork count via env var", "committedDate": "2020-11-28T09:10:20Z", "type": "forcePushed"}, {"oid": "d4fad77038837cefdf8fbeef5bfeab9740b9fc04", "url": "https://github.com/camunda-cloud/zeebe/commit/d4fad77038837cefdf8fbeef5bfeab9740b9fc04", "message": "chore(ci): allow overriding fork count via env var", "committedDate": "2020-11-28T09:35:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMTQxMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532511413", "bodyText": "Can you explain this statement a bit? AFAIK it reads like:\nLIMITS_CPU is whatever you define or defaults to getconf _NPROCESSORS_ONLN\nbut what is this config?", "author": "korthout", "createdAt": "2020-11-30T10:59:21Z", "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -1,13 +1,19 @@\n #!/bin/bash -eux\n \n-\n-export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n-\n+LIMITS_CPU=${LIMITS_CPU:-$(getconf _NPROCESSORS_ONLN)}", "originalCommit": "d4fad77038837cefdf8fbeef5bfeab9740b9fc04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUyMTE4Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532521186", "bodyText": "$(getconf _NPROCESSORS_ONLN) returns the number of processors available in a POSIX compliant way. If LIMITS_CPU isn't set, then this is the value we assign. I'm happy to omit it, which keeps the behaviour as before - it breaks if undefined :)", "author": "npepinpe", "createdAt": "2020-11-30T11:16:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMTQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1MzY4MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532553681", "bodyText": "Just leave it as is, I'm just unfamiliar with this config property.", "author": "korthout", "createdAt": "2020-11-30T12:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMTQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1NTA5Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532555093", "bodyText": "Yeah it looks weird, but it's the only POSIX way I know of getting the cpu count (which also works on MacOS ;))", "author": "npepinpe", "createdAt": "2020-11-30T12:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMTQxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMjMyNg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532512326", "bodyText": "Perhaps we should just default this explicitly to 1", "author": "korthout", "createdAt": "2020-11-30T11:00:43Z", "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -1,13 +1,19 @@\n #!/bin/bash -eux\n \n-\n-export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n-\n+LIMITS_CPU=${LIMITS_CPU:-$(getconf _NPROCESSORS_ONLN)}\n+FORK_COUNT=${FORK_COUNT:-}", "originalCommit": "d4fad77038837cefdf8fbeef5bfeab9740b9fc04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUyMTcyOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532521729", "bodyText": "That's different behaviour though. Right now, this is set up so you can override whatever's defined in the POM - if we explicitly set to 1, then we always override it, which I don't know if we really want to do. I think ignoring it if unset is a little more intuitive in my opinion.", "author": "npepinpe", "createdAt": "2020-11-30T11:17:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMjMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMzc3NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532513774", "bodyText": "Let's also set FORK_COUNT = 2  or so, currently this PR seems to slow down the IT by a lot.", "author": "korthout", "createdAt": "2020-11-30T11:03:21Z", "path": "Jenkinsfile", "diffHunk": "@@ -215,6 +216,7 @@ pipeline {\n                         stage('Test') {\n                             environment {\n                                 SUREFIRE_REPORT_NAME_SUFFIX = 'it-testrun'\n+                                LIMITS_CPU = 2", "originalCommit": "d4fad77038837cefdf8fbeef5bfeab9740b9fc04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUyMjIzNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532522234", "bodyText": "I'm confused how it could affect it at all - there's only two modules, so lowering the limits here shouldn't matter - it can still only process two modules in parallel \ud83e\udd14", "author": "npepinpe", "createdAt": "2020-11-30T11:18:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMzc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUyMjUxNg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532522516", "bodyText": "It takes 20 minutes to process the IT stage because the update tests take 20 minutes. This is independent of this PR \ud83d\ude42", "author": "npepinpe", "createdAt": "2020-11-30T11:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMzc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1NDcwNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r532554705", "bodyText": "Ah, I missed that. But that's totally fine then. I didn't consider that the default fork count from the pom would be used. Let's leave it like this.", "author": "korthout", "createdAt": "2020-11-30T12:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxMzc3NA=="}], "type": "inlineReview"}, {"oid": "8f81be61eec5ef7d1909068975dfdaaad5694e19", "url": "https://github.com/camunda-cloud/zeebe/commit/8f81be61eec5ef7d1909068975dfdaaad5694e19", "message": "chore(ci): fix merge conflicts", "committedDate": "2020-11-30T13:26:47Z", "type": "forcePushed"}, {"oid": "861e1db03c1861ea5e46c22074bdc998f73ce8c0", "url": "https://github.com/camunda-cloud/zeebe/commit/861e1db03c1861ea5e46c22074bdc998f73ce8c0", "message": "chore(ci): decrease parallelism in verification stage\n\n- allow overriding LIMITS_CPU and FORK_COUNT\n- hardcode LIMITS_CPU and FORK_COUNT to 2 and 6 for unit and integration\n  tests\n- limit the max heap percentage to 100 / (LIMITS_CPU * FORK_COUNT) to\n  ensure each JVM uses a safe amount of the RAM\n- remove ununsed shared directory\n- use template for IT", "committedDate": "2020-11-30T13:55:47Z", "type": "forcePushed"}, {"oid": "b44e47a50ae664b52b93cf73e2dc03776d815195", "url": "https://github.com/camunda-cloud/zeebe/commit/b44e47a50ae664b52b93cf73e2dc03776d815195", "message": "chore(project): apply parallel-test profile to failsafe", "committedDate": "2020-12-02T12:04:22Z", "type": "forcePushed"}, {"oid": "ebd7d60f1c2c2d53a4ed06e0c1f8c2348262cdfa", "url": "https://github.com/camunda-cloud/zeebe/commit/ebd7d60f1c2c2d53a4ed06e0c1f8c2348262cdfa", "message": "chore(project): apply parallel-test profile to failsafe", "committedDate": "2020-12-02T13:29:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2ODI2NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r534168264", "bodyText": "@npepinpe don't forget this change then for the other scripts.", "author": "korthout", "createdAt": "2020-12-02T13:32:12Z", "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -17,7 +29,7 @@ if grep -q \"\\[WARNING\\] Flakes:\" ${tmpfile}; then\n \n   awk '/^\\[WARNING\\] Flakes:.*$/{flag=1}/^\\[ERROR\\] Tests run:.*Flakes: [0-9]*$/{print;flag=0}flag' ${tmpfile} > ${tmpfile2}\n \n-  grep \"\\[ERROR\\]   Run 1: \" ${tmpfile} | awk '{print $4}' >> ./target/FlakyTests.txt\n+  grep \"\\[ERROR\\]   Run 1: \" ${tmpfile2} | awk '{print $4}' >> FlakyTests.txt", "originalCommit": "ebd7d60f1c2c2d53a4ed06e0c1f8c2348262cdfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2OTQwNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r534169404", "bodyText": "I think on the main agent it doesn't fail because we build the root project, whereas on the IT we only build specific modules, but I can gladly change it.", "author": "npepinpe", "createdAt": "2020-12-02T13:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2ODI2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2OTg0NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5937#discussion_r534169844", "bodyText": "You can confirm this by removing your ./target folder from your build and running verify for specific modules, it won't build it. But if you run for the project it will appear. Why it was however sometimes appearing for IT as well is a mystery to me.", "author": "npepinpe", "createdAt": "2020-12-02T13:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE2ODI2NA=="}], "type": "inlineReview"}, {"oid": "8d4c7b98f6a7eca30847c5ff05a22dddd82e20c7", "url": "https://github.com/camunda-cloud/zeebe/commit/8d4c7b98f6a7eca30847c5ff05a22dddd82e20c7", "message": "chore(ci): decrease parallelism in verification stage\n\n- allow overriding LIMITS_CPU and FORK_COUNT\n- hardcode LIMITS_CPU and FORK_COUNT to 2 and 6 for unit and integration\n  tests\n- limit the max heap percentage to 100 / (LIMITS_CPU * FORK_COUNT) to\n  ensure each JVM uses a safe amount of the RAM\n- remove ununsed shared directory\n- use template for IT", "committedDate": "2020-12-02T13:35:39Z", "type": "commit"}, {"oid": "216ab34b191534c50ddb890deae33f3aca52fe93", "url": "https://github.com/camunda-cloud/zeebe/commit/216ab34b191534c50ddb890deae33f3aca52fe93", "message": "chore(project): apply parallel-test profile to failsafe", "committedDate": "2020-12-02T13:35:40Z", "type": "commit"}, {"oid": "216ab34b191534c50ddb890deae33f3aca52fe93", "url": "https://github.com/camunda-cloud/zeebe/commit/216ab34b191534c50ddb890deae33f3aca52fe93", "message": "chore(project): apply parallel-test profile to failsafe", "committedDate": "2020-12-02T13:35:40Z", "type": "forcePushed"}]}