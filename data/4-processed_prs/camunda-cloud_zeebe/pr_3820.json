{"pr_number": 3820, "pr_title": "feat(clients/java): new response objects for java client API", "pr_createdAt": "2020-02-10T15:33:10Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/3820", "timeline": [{"oid": "614310e1fb19b59d377471b0ea6a4631330b0033", "url": "https://github.com/camunda-cloud/zeebe/commit/614310e1fb19b59d377471b0ea6a4631330b0033", "message": "feat(clients/java): New response objects for java client API\n\n+ Renaming of existing response objects for consistency", "committedDate": "2020-02-10T15:36:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2MTYyOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377461629", "bodyText": "Why do we need to declare changes in the impl package?\nI think the compatibility checker should look only at the api package, right?", "author": "saig0", "createdAt": "2020-02-11T06:28:28Z", "path": "clients/java/ignored-changes.xml", "diffHunk": "@@ -0,0 +1,34 @@\n+<differences>\n+  <difference>\n+    <className>io/zeebe/client/api/response/DeploymentEvent</className>\n+    <differenceType>8001</differenceType>\n+  </difference>\n+  <difference>\n+    <className>io/zeebe/client/api/response/JobEvent</className>\n+    <differenceType>8001</differenceType>\n+  </difference>\n+  <difference>\n+    <className>io/zeebe/client/api/response/WorkflowInstanceEvent</className>\n+    <differenceType>8001</differenceType>\n+  </difference>\n+  <difference>\n+    <className>io/zeebe/client/api/response/WorkflowInstanceResult</className>\n+    <differenceType>8001</differenceType>\n+  </difference>\n+  <difference>\n+    <className>io/zeebe/client/impl/response/DeploymentEventImpl</className>", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NDE2Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377464163", "bodyText": "We should think about the renaming of the return types again. This change will break the Java client API for some users and they need to adjust their code.\nIMO: CreateWorkflowInstanceResponse is not a better name as WorkflowInstanceEvent because the response is the resulting event of the command. If the command is rejected then an exception will be thrown.", "author": "saig0", "createdAt": "2020-02-11T06:41:16Z", "path": "clients/java/src/main/java/io/zeebe/client/api/command/CreateWorkflowInstanceCommandStep1.java", "diffHunk": "@@ -64,7 +64,8 @@\n     CreateWorkflowInstanceCommandStep3 latestVersion();\n   }\n \n-  interface CreateWorkflowInstanceCommandStep3 extends FinalCommandStep<WorkflowInstanceEvent> {\n+  interface CreateWorkflowInstanceCommandStep3\n+      extends FinalCommandStep<CreateWorkflowInstanceResponse> {", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxMjAyMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377512021", "bodyText": "I will roll this back", "author": "pihme", "createdAt": "2020-02-11T09:12:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NDE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NTgxMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377465811", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        io.zeebe.gateway.protocol.GatewayOuterClass.CreateWorkflowInstanceWithResultResponse>\n          \n          \n            \n                       GatewayOuterClass.CreateWorkflowInstanceWithResultResponse>", "author": "saig0", "createdAt": "2020-02-11T06:49:23Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/command/CreateWorkflowInstanceWithResultCommandImpl.java", "diffHunk": "@@ -60,22 +59,24 @@ public CreateWorkflowInstanceWithResultCommandImpl(\n   }\n \n   @Override\n-  public FinalCommandStep<WorkflowInstanceResult> requestTimeout(final Duration requestTimeout) {\n+  public FinalCommandStep<CreateWorkflowInstanceWithResultResponse> requestTimeout(\n+      final Duration requestTimeout) {\n     this.requestTimeout = requestTimeout;\n     this.builder.setRequestTimeout(requestTimeout.toMillis());\n     return this;\n   }\n \n   @Override\n-  public ZeebeFuture<WorkflowInstanceResult> send() {\n+  public ZeebeFuture<CreateWorkflowInstanceWithResultResponse> send() {\n     final CreateWorkflowInstanceWithResultRequest request =\n         builder\n             .setRequest(createWorkflowInstanceRequestBuilder)\n             .setRequestTimeout(requestTimeout.toMillis())\n             .build();\n \n     final RetriableClientFutureImpl<\n-            WorkflowInstanceResult, CreateWorkflowInstanceWithResultResponse>\n+            CreateWorkflowInstanceWithResultResponse,\n+            io.zeebe.gateway.protocol.GatewayOuterClass.CreateWorkflowInstanceWithResultResponse>", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NTkyNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377465924", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        io.zeebe.gateway.protocol.GatewayOuterClass.DeployWorkflowResponse>\n          \n          \n            \n                       GatewayOuterClass.DeployWorkflowResponse>", "author": "saig0", "createdAt": "2020-02-11T06:49:55Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/command/DeployWorkflowCommandImpl.java", "diffHunk": "@@ -147,20 +146,23 @@ public DeployWorkflowCommandBuilderStep2 addWorkflowModel(\n   }\n \n   @Override\n-  public FinalCommandStep<DeploymentEvent> requestTimeout(final Duration requestTimeout) {\n+  public FinalCommandStep<DeployWorkflowResponse> requestTimeout(final Duration requestTimeout) {\n     this.requestTimeout = requestTimeout;\n     return this;\n   }\n \n   @Override\n-  public ZeebeFuture<DeploymentEvent> send() {\n+  public ZeebeFuture<DeployWorkflowResponse> send() {\n     final DeployWorkflowRequest request = requestBuilder.build();\n \n-    final RetriableClientFutureImpl<DeploymentEvent, DeployWorkflowResponse> future =\n-        new RetriableClientFutureImpl<>(\n-            DeploymentEventImpl::new,\n-            retryPredicate,\n-            streamObserver -> send(request, streamObserver));\n+    final RetriableClientFutureImpl<\n+            DeployWorkflowResponse,\n+            io.zeebe.gateway.protocol.GatewayOuterClass.DeployWorkflowResponse>", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NjI3Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377466276", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final io.zeebe.gateway.protocol.GatewayOuterClass.DeployWorkflowResponse response) {\n          \n          \n            \n                  final GatewayOuterClass.DeployWorkflowResponse response) {", "author": "saig0", "createdAt": "2020-02-11T06:51:41Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/response/DeployWorkflowResponseImpl.java", "diffHunk": "@@ -15,18 +15,18 @@\n  */\n package io.zeebe.client.impl.response;\n \n-import io.zeebe.client.api.response.DeploymentEvent;\n+import io.zeebe.client.api.response.DeployWorkflowResponse;\n import io.zeebe.client.api.response.Workflow;\n-import io.zeebe.gateway.protocol.GatewayOuterClass.DeployWorkflowResponse;\n import java.util.List;\n import java.util.stream.Collectors;\n \n-public final class DeploymentEventImpl implements DeploymentEvent {\n+public final class DeployWorkflowResponseImpl implements DeployWorkflowResponse {\n \n   private final long key;\n   private final List<Workflow> workflows;\n \n-  public DeploymentEventImpl(final DeployWorkflowResponse response) {\n+  public DeployWorkflowResponseImpl(\n+      final io.zeebe.gateway.protocol.GatewayOuterClass.DeployWorkflowResponse response) {", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NjgyMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377466823", "bodyText": "You changed the import but not the class name in the code where it is used.", "author": "saig0", "createdAt": "2020-02-11T06:54:24Z", "path": "docs/src/clients/java-client/get-started.md", "diffHunk": "@@ -200,7 +200,7 @@ Add the following create command to the main class:\n ```java\n package io.zeebe;\n \n-import io.zeebe.client.api.response.WorkflowInstanceEvent;\n+import io.zeebe.client.api.response.CreateWorkflowInstanceResponse;", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxMzgyOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377513828", "bodyText": "will look into it", "author": "pihme", "createdAt": "2020-02-11T09:16:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NjgyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2Njk3Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377466977", "bodyText": "The class name is not changed in code where it is used.", "author": "saig0", "createdAt": "2020-02-11T06:55:07Z", "path": "docs/src/clients/java-client/testing.md", "diffHunk": "@@ -20,7 +20,7 @@ Use the `ZeebeTestRule` in your test case to start an embedded broker. It contai\n \n ```java\n import io.zeebe.client.ZeebeClient;\n-import io.zeebe.client.api.response.WorkflowInstanceEvent;\n+import io.zeebe.client.api.response.CreateWorkflowInstanceResponse;", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxMzk0Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377513946", "bodyText": "will look into it", "author": "pihme", "createdAt": "2020-02-11T09:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2Njk3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2ODE0MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377468140", "bodyText": "This is a long name and feels kind of clunky \ud83d\ude05", "author": "saig0", "createdAt": "2020-02-11T07:00:08Z", "path": "clients/java/src/main/java/io/zeebe/client/api/response/CreateWorkflowInstanceWithResultResponse.java", "diffHunk": "@@ -17,7 +17,7 @@\n \n import java.util.Map;\n \n-public interface WorkflowInstanceResult {\n+public interface CreateWorkflowInstanceWithResultResponse {", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyNzExMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377527113", "bodyText": "will roll it back", "author": "pihme", "createdAt": "2020-02-11T09:44:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2ODE0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2OTA1Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377469053", "bodyText": "The name DeployWorkflowResponse does not feel right for me. The deployment command can contain multiple resources and the command does not contain the term workflow.\nDeployWorkflowResponse deployWorkflowResponse =\n          client.newDeployCommand().addResourceFromClasspath(\"demoProcess.bpmn\").send().join();\n\nWhat do you think about DeploymentResponse or DeployResponse?", "author": "saig0", "createdAt": "2020-02-11T07:04:25Z", "path": "clients/java/src/main/java/io/zeebe/client/api/response/DeployWorkflowResponse.java", "diffHunk": "@@ -17,7 +17,7 @@\n \n import java.util.List;\n \n-public interface DeploymentEvent {\n+public interface DeployWorkflowResponse {", "originalCommit": "614310e1fb19b59d377471b0ea6a4631330b0033", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxNDIzMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3820#discussion_r377514233", "bodyText": "Will roll it back", "author": "pihme", "createdAt": "2020-02-11T09:17:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2OTA1Mw=="}], "type": "inlineReview"}, {"oid": "e4d61d01fc929cae30dd36ec6bf19c9e342e1aa5", "url": "https://github.com/camunda-cloud/zeebe/commit/e4d61d01fc929cae30dd36ec6bf19c9e342e1aa5", "message": "feat(clients/java): New response objects for java client API", "committedDate": "2020-02-11T10:21:13Z", "type": "forcePushed"}, {"oid": "7d7449cf13fbc4fbec75d59127a7a134bf8ac203", "url": "https://github.com/camunda-cloud/zeebe/commit/7d7449cf13fbc4fbec75d59127a7a134bf8ac203", "message": "feat(clients/java): New response objects for java client API", "committedDate": "2020-02-11T10:37:00Z", "type": "forcePushed"}, {"oid": "3fc04db95a37fb0c144f6793cd0916f0a8b45cdf", "url": "https://github.com/camunda-cloud/zeebe/commit/3fc04db95a37fb0c144f6793cd0916f0a8b45cdf", "message": "feat(clients/java): New response objects for java client API", "committedDate": "2020-02-11T10:38:17Z", "type": "forcePushed"}, {"oid": "14b3027048c76e9fc60e48c6924b8643538b708d", "url": "https://github.com/camunda-cloud/zeebe/commit/14b3027048c76e9fc60e48c6924b8643538b708d", "message": "feat(clients/java): New response objects for java client API", "committedDate": "2020-02-11T10:58:15Z", "type": "commit"}, {"oid": "14b3027048c76e9fc60e48c6924b8643538b708d", "url": "https://github.com/camunda-cloud/zeebe/commit/14b3027048c76e9fc60e48c6924b8643538b708d", "message": "feat(clients/java): New response objects for java client API", "committedDate": "2020-02-11T10:58:15Z", "type": "forcePushed"}]}