{"pr_number": 3616, "pr_title": "add a java sample code for create workflow with await result", "pr_createdAt": "2020-01-08T12:55:42Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/3616", "timeline": [{"oid": "923f85fb03ce59b970d09c4cd758493016560290", "url": "https://github.com/camunda-cloud/zeebe/commit/923f85fb03ce59b970d09c4cd758493016560290", "message": "docs(java-client-examples): add sample code for create workflow with await result", "committedDate": "2020-01-08T13:04:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE5NzM1Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/3616#discussion_r365197352", "bodyText": "Should we also link to the bpmn?", "author": "Zelldon", "createdAt": "2020-01-10T11:45:40Z", "path": "docs/src/java-client-examples/workflow-instance-create-with-result.md", "diffHunk": "@@ -0,0 +1,14 @@\n+# Create a Workflow Instance and Await Result\n+\n+## Prerequisites\n+\n+1. Running Zeebe broker with endpoint `localhost:26500` (default)\n+1. Run the [Deploy a Workflow example](/java-client-examples/workflow-deploy.html). Deploy `demoProcessSingleTask.bpmn` instead of `demoProcess.bpmn`\n+\n+## WorkflowInstanceWithResultCreator.java\n+\n+[Source on github](https://github.com/zeebe-io/zeebe/tree/{{commit}}/samples/src/main/java/io/zeebe/example/workflow/WorkflowInstanceWithResultCreator.java)", "originalCommit": "923f85fb03ce59b970d09c4cd758493016560290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIxMzg5OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3616#discussion_r365213898", "bodyText": "\ud83d\udc4d", "author": "deepthidevaki", "createdAt": "2020-01-10T12:35:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE5NzM1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNDYxOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/3616#discussion_r365204618", "bodyText": "Should we mark this line somehow ? with a comment that this is the interesting part", "author": "Zelldon", "createdAt": "2020-01-10T12:07:28Z", "path": "samples/src/main/java/io/zeebe/example/workflow/WorkflowInstanceWithResultCreator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.example.workflow;\n+\n+import io.zeebe.client.ZeebeClient;\n+import io.zeebe.client.ZeebeClientBuilder;\n+import io.zeebe.client.api.response.WorkflowInstanceResult;\n+import java.time.Duration;\n+import java.util.Map;\n+\n+public class WorkflowInstanceWithResultCreator {\n+  public static void main(final String[] args) {\n+    final String broker = \"127.0.0.1:26500\";\n+\n+    final String bpmnProcessId = \"demoProcessSingleTask\";\n+\n+    final ZeebeClientBuilder builder =\n+        ZeebeClient.newClientBuilder().brokerContactPoint(broker).usePlaintext();\n+\n+    try (final ZeebeClient client = builder.build()) {\n+\n+      openJobWorker(client); // open job workers so that task are executed and workflow is completed\n+      System.out.println(\"Creating workflow instance\");\n+\n+      final WorkflowInstanceResult workflowInstanceResult =\n+          client\n+              .newCreateInstanceCommand()\n+              .bpmnProcessId(bpmnProcessId)\n+              .latestVersion()\n+              .withResult()", "originalCommit": "923f85fb03ce59b970d09c4cd758493016560290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIxNDExMg==", "url": "https://github.com/camunda-cloud/zeebe/pull/3616#discussion_r365214112", "bodyText": "Yes.", "author": "deepthidevaki", "createdAt": "2020-01-10T12:35:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNDYxOA=="}], "type": "inlineReview"}, {"oid": "4d2f42a6744cf33a23f86ec5e9173ad5e0b2099c", "url": "https://github.com/camunda-cloud/zeebe/commit/4d2f42a6744cf33a23f86ec5e9173ad5e0b2099c", "message": "docs(java-client-examples): add sample code for create workflow with await result", "committedDate": "2020-01-10T14:35:40Z", "type": "commit"}, {"oid": "4d2f42a6744cf33a23f86ec5e9173ad5e0b2099c", "url": "https://github.com/camunda-cloud/zeebe/commit/4d2f42a6744cf33a23f86ec5e9173ad5e0b2099c", "message": "docs(java-client-examples): add sample code for create workflow with await result", "committedDate": "2020-01-10T14:35:40Z", "type": "forcePushed"}]}