{"pr_number": 4384, "pr_title": "AutomaticRecovery from RabbitMQ Connection Factory doesn't recover from everything", "pr_createdAt": "2020-10-07T13:23:20Z", "pr_url": "https://github.com/apache/camel/pull/4384", "timeline": [{"oid": "c5b5d6294ec33485c6db660596356b483e2c68c2", "url": "https://github.com/apache/camel/commit/c5b5d6294ec33485c6db660596356b483e2c68c2", "message": "AutomaticRecovery from RabbitMQ Connection Factory doesn't recover from everything and we could just return the same closed connection over and over ...", "committedDate": "2020-10-07T13:17:09Z", "type": "commit"}, {"oid": "f7bbd0b65be772449ad41095ca94275c1396d7a2", "url": "https://github.com/apache/camel/commit/f7bbd0b65be772449ad41095ca94275c1396d7a2", "message": "If the consumer is still started, it won't do anything to call start() again, my solution would be to stop it before", "committedDate": "2020-10-07T13:26:31Z", "type": "commit"}, {"oid": "6ee64eb9421df1b913cb051228253124da102825", "url": "https://github.com/apache/camel/commit/6ee64eb9421df1b913cb051228253124da102825", "message": "In RPC calls, if we received a message for which the channel goes down, we have to reconnect to it before publishing our response to it, since the current Reconnection mechanism is made only in Producer, not in Publisher", "committedDate": "2020-10-07T13:39:06Z", "type": "commit"}, {"oid": "c7bbe8244ffc2d0af51d070e933efc0ae5537036", "url": "https://github.com/apache/camel/commit/c7bbe8244ffc2d0af51d070e933efc0ae5537036", "message": "To ensure a retry for failed reply works, we can't remove the headers from the messages during the conversion to AMQP properties. Thus, I use a temporar Map to keep the logic as close as it is, but without touching the Message Headers", "committedDate": "2020-10-07T14:02:31Z", "type": "commit"}, {"oid": "dd2a73decfcfb58b107f8f79ce2b17f8a58c4ff6", "url": "https://github.com/apache/camel/commit/dd2a73decfcfb58b107f8f79ce2b17f8a58c4ff6", "message": "Revert back to normal the format", "committedDate": "2020-10-08T08:16:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjQyNA==", "url": "https://github.com/apache/camel/pull/4384#discussion_r501562424", "bodyText": "Just wonder what to do if stop throw an exception, should we silently ignore this?", "author": "davsclaus", "createdAt": "2020-10-08T09:05:15Z", "path": "components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitConsumer.java", "diffHunk": "@@ -326,9 +340,13 @@ public void reconnect() throws Exception {\n         } else if (channel == null || !isAutomaticRecoveryEnabled()) {\n             LOG.info(\"Attempting to open a new rabbitMQ channel\");\n             Connection conn = consumer.getConnection();\n-            channel = openChannel(conn);\n-            // Register the channel to the tag\n-            start();\n+            try {\n+                stop();", "originalCommit": "dd2a73decfcfb58b107f8f79ce2b17f8a58c4ff6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5NjU0MA==", "url": "https://github.com/apache/camel/pull/4384#discussion_r501596540", "bodyText": "The case I had during my integration test was that in the stop(), there is a call to \"basicCancel\", which throws an unhandled exception  (AlreadyClosedException if I recall correctly) if the channel or the connection was already closed (in my case due to the fact I called this.channel.getConnection().close() with the debugger during the handling of the message), which lead to \"start()\" never called, and thus the consumers never handled new message afterward.\nMaybe the exception handling could be more specific to the basicCancel and not on all the \"stop()\", but I thought that start should always be called no matter how stop finishes.\nI'm open to other way of handling that.", "author": "JSchoreels", "createdAt": "2020-10-08T09:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjQyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg2NDYwNw==", "url": "https://github.com/apache/camel/pull/4384#discussion_r501864607", "bodyText": "Yeah that sounds okay lets go with this - its better than whats before", "author": "davsclaus", "createdAt": "2020-10-08T16:45:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjQyNA=="}], "type": "inlineReview"}]}