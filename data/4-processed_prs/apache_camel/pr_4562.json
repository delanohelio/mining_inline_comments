{"pr_number": 4562, "pr_title": "[CAMEL-15725] setting up basic OSGi-CDI metadata in the manifest", "pr_createdAt": "2020-11-04T09:17:00Z", "pr_url": "https://github.com/apache/camel/pull/4562", "timeline": [{"oid": "bf81c9ffb87c306bd60f86feaa4690fabb0f77dc", "url": "https://github.com/apache/camel/commit/bf81c9ffb87c306bd60f86feaa4690fabb0f77dc", "message": "setting up basic OSGi-CDI metadata in the manifest", "committedDate": "2020-11-04T09:16:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwNzAwOQ==", "url": "https://github.com/apache/camel/pull/4562#discussion_r517207009", "bodyText": "IIRC, we did not used the @Vetoed annotation to maintain compatibility with CDI 1.0.\nIt works because the default profile weld-3.0 uses CDI 2.0, but other profiles may fail.\nThat being said, we may want to consider dropping CDI 1.0 support.", "author": "astefanutti", "createdAt": "2020-11-04T09:30:39Z", "path": "components/camel-cdi/src/main/java/org/apache/camel/cdi/AnnotatedDelegate.java", "diffHunk": "@@ -21,11 +21,13 @@\n import java.util.HashSet;\n import java.util.Set;\n \n+import javax.enterprise.inject.Vetoed;", "originalCommit": "bf81c9ffb87c306bd60f86feaa4690fabb0f77dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5NDM5Ng==", "url": "https://github.com/apache/camel/pull/4562#discussion_r517294396", "bodyText": "It does not break CDI 1.0 compatibility since it does not add more beans. Will just enable aries-cdi to drop the beans early and does not affect OWB/Weld/Arc.", "author": "rmannibucau", "createdAt": "2020-11-04T12:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwNzAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxMjgxMA==", "url": "https://github.com/apache/camel/pull/4562#discussion_r520512810", "bodyText": "@astefanutti can you provide your review?", "author": "oscerd", "createdAt": "2020-11-10T12:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwNzAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5NDA4OQ==", "url": "https://github.com/apache/camel/pull/4562#discussion_r520594089", "bodyText": "@rmannibucau can you confirm mvn test -Powb-1.0 passes?", "author": "astefanutti", "createdAt": "2020-11-10T14:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwNzAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwNzc4Nw==", "url": "https://github.com/apache/camel/pull/4562#discussion_r520607787", "bodyText": "Indeed it does not but not because of @Vetoed, because it was compiled with cdi 2.0 API (bean attributes) so binary is not CDI 1.0 compatible. See org.apache.camel.cdi.CdiCamelBeanRepository#findByTypeWithName which uses javax.enterprise.inject.spi.BeanAttributes#getName for a single example.\nside note for that: pom setup breaks multiimpl setup for java > 8 (java 9 profile forces weld).", "author": "rmannibucau", "createdAt": "2020-11-10T14:33:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwNzAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYyMzA2Mg==", "url": "https://github.com/apache/camel/pull/4562#discussion_r520623062", "bodyText": "Wow, I see. It's aeecbc4 that changed the compilation from using CDI 1.0 to CDI 2.0, and broke binary compatibility as the Bean interface changed its hierarchy to use the new BeanAttributes interface. So CDI 1.0 compatibility got broken starting Camel 3.0. AFAIK, nobody has ever complained so it may be a good empirical test to considered dropping support safe.", "author": "astefanutti", "createdAt": "2020-11-10T14:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwNzAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzMjQwNA==", "url": "https://github.com/apache/camel/pull/4562#discussion_r521132404", "bodyText": "Is this correct, it seems to be cdi 1.x only? We are CDI 2.0 onwards only for Camel 3.x.", "author": "davsclaus", "createdAt": "2020-11-11T06:07:17Z", "path": "components/camel-cdi/pom.xml", "diffHunk": "@@ -37,10 +37,37 @@\n         <label>java</label>\n         <title>CDI</title>\n \n+        <camel.osgi.provide.capability>\n+            osgi.cdi.extension;osgi.cdi.extension=\"org.apache.camel.cdi\";\n+                version:Version=\"${camel.osgi.version}\";\n+                aries.cdi.extension.bean.classes:List&lt;String&gt;=\"org.apache.camel.cdi.CdiCamelFactory,org.apache.camel.cdi.CdiEventComponent\";\n+                    uses:=\"javax.annotation,javax.enterprise.event,javax.enterprise.inject.spi\",\n+            osgi.service;objectClass:List&lt;String&gt;=\"javax.enterprise.inject.spi.Extension\",\n+                osgi.service;objectClass:List&lt;String&gt;=\"javax.enterprise.inject.spi.Extension\";\n+                    uses:=\"javax.enterprise.inject.spi\";\n+                    osgi.cdi.extension=\"org.apache.camel.cdi\";\n+                service.scope=prototype;service.vendor=\"Apache Software Foundation\";\n+                version:Version=\"${camel.osgi.version}\";\n+                effective:=active,\n+            osgi.serviceloader;osgi.serviceloader=\"javax.enterprise.inject.spi.Extension\";\n+                register:=\"org.apache.camel.cdi.CdiCamelExtension\";\n+                    uses:=\"javax.enterprise.inject.spi\";\n+                    osgi.cdi.extension=\"org.apache.camel.cdi\";\n+                    service.scope=prototype;\n+                    service.vendor=\"Apache Software Foundation\";\n+                version:Version=\"${camel.osgi.version}\"\n+        </camel.osgi.provide.capability>\n+        <camel.osgi.require.capability>\n+            osgi.extender;filter:=\"(&amp;(osgi.extender=osgi.cdi)(version>=1.0.0)(!(version>=2.0.0)))\",", "originalCommit": "bf81c9ffb87c306bd60f86feaa4690fabb0f77dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NzAzMQ==", "url": "https://github.com/apache/camel/pull/4562#discussion_r521197031", "bodyText": "Yes, osgi.cdi v1 (= cdi 2)", "author": "rmannibucau", "createdAt": "2020-11-11T08:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzMjQwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NjMyNw==", "url": "https://github.com/apache/camel/pull/4562#discussion_r521256327", "bodyText": "OSGi is lovely ;)\nAll that osgi metadata above is written by hand and can get out of cruft as its woodo for most people what has to be there.", "author": "davsclaus", "createdAt": "2020-11-11T10:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzMjQwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwNzk5OA==", "url": "https://github.com/apache/camel/pull/4562#discussion_r521307998", "bodyText": "You can make it generated with bnd 5 using osgi.annotations (which is fine for camel since scope would be provided) but not sure it is better ;).\nAt the end I don't care much how but I'd like to be able to use camel-cdi with osgi-cdi :).", "author": "rmannibucau", "createdAt": "2020-11-11T11:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzMjQwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM5NDUzOA==", "url": "https://github.com/apache/camel/pull/4562#discussion_r522394538", "bodyText": "Yeah sure I would assume you have tried it so its safe to merge", "author": "davsclaus", "createdAt": "2020-11-12T20:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzMjQwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQyMTkyOA==", "url": "https://github.com/apache/camel/pull/4562#discussion_r522421928", "bodyText": "Tried in a fake osgi container (winegrower) but happy to get some real osgi container test.\nThat said it cant be worse than today evennif broken ;)", "author": "rmannibucau", "createdAt": "2020-11-12T20:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzMjQwNA=="}], "type": "inlineReview"}]}