{"pr_number": 3877, "pr_title": "Camel 14935 kafka exception", "pr_createdAt": "2020-05-31T04:01:47Z", "pr_url": "https://github.com/apache/camel/pull/3877", "timeline": [{"oid": "9df63769d4ed9ffcc0f2d7aa6bd04955ccf15e2f", "url": "https://github.com/apache/camel/commit/9df63769d4ed9ffcc0f2d7aa6bd04955ccf15e2f", "message": "CAMEL-14935: Fix issue with failing commits on rebalance", "committedDate": "2020-05-29T16:08:42Z", "type": "commit"}, {"oid": "2b8d7464360a2c9598225e5d3f85508c082eff6b", "url": "https://github.com/apache/camel/commit/2b8d7464360a2c9598225e5d3f85508c082eff6b", "message": "Log the exception on partion revoked, and rethrow", "committedDate": "2020-05-31T03:44:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTM3MQ==", "url": "https://github.com/apache/camel/pull/3877#discussion_r432911371", "bodyText": "This finally block code is always exectued also for success. Is this really intended?", "author": "davsclaus", "createdAt": "2020-05-31T05:30:04Z", "path": "components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConsumer.java", "diffHunk": "@@ -460,7 +460,14 @@ public void onPartitionsRevoked(Collection<TopicPartition> partitions) {\n                     offset = -1L;\n                 }\n                 LOG.debug(\"Saving offset repository state {} from offsetKey {} with offset: {}\", threadId, offsetKey, offset);\n-                commitOffset(offsetRepository, partition, offset, true);\n+                try {\n+                    commitOffset(offsetRepository, partition, offset, true);\n+                } catch (java.lang.Exception e) {\n+                    LOG.error(\"Error saving offset repository state {} from offsetKey {} with offset: {}\", threadId, offsetKey, offset);\n+                    throw e;\n+                } finally {\n+                    lastProcessedOffset.clear();", "originalCommit": "2b8d7464360a2c9598225e5d3f85508c082eff6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MDQ2MQ==", "url": "https://github.com/apache/camel/pull/3877#discussion_r432950461", "bodyText": "Thank you for pointing that out. I was going by the comments in the JIRA.\nSince the partition is being revoked, I think it is fine to clear it out always, not just on the exception.\nhttps://issues.apache.org/jira/browse/CAMEL-14935\nBut, I will double-check with the reporter of the JIRA too.", "author": "DariusX", "createdAt": "2020-05-31T14:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5MTAyOQ==", "url": "https://github.com/apache/camel/pull/3877#discussion_r432991029", "bodyText": "Yes removal is required on success as previously.  Having the removal in the finally block fixes an issue where an exception on commit prevents the map entry being removed - leading to a risk of old offsets being committed in a future rebalance scenario.", "author": "ceejay66", "createdAt": "2020-05-31T22:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5NjAwMg==", "url": "https://github.com/apache/camel/pull/3877#discussion_r432996002", "bodyText": "Thank you.\n@davsclaus Yes, doing it in the finally is correct.", "author": "DariusX", "createdAt": "2020-05-31T23:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTM3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY2ODAzNQ==", "url": "https://github.com/apache/camel/pull/3877#discussion_r433668035", "bodyText": "What if you move the clear up here, and remove it from finally. Then its only cleared when there is an exception. And on success then the code below will only remove the current offset key, which seems correct to me.", "author": "davsclaus", "createdAt": "2020-06-02T07:16:30Z", "path": "components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConsumer.java", "diffHunk": "@@ -460,7 +460,14 @@ public void onPartitionsRevoked(Collection<TopicPartition> partitions) {\n                     offset = -1L;\n                 }\n                 LOG.debug(\"Saving offset repository state {} from offsetKey {} with offset: {}\", threadId, offsetKey, offset);\n-                commitOffset(offsetRepository, partition, offset, true);\n+                try {\n+                    commitOffset(offsetRepository, partition, offset, true);\n+                } catch (java.lang.Exception e) {\n+                    LOG.error(\"Error saving offset repository state {} from offsetKey {} with offset: {}\", threadId, offsetKey, offset);", "originalCommit": "2b8d7464360a2c9598225e5d3f85508c082eff6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MTYzNw==", "url": "https://github.com/apache/camel/pull/3877#discussion_r434241637", "bodyText": "We don't want to clear the map as it is used by multiple consumers and we will lose their state of last processed offset that may not be committed yet.  We just want to remove the entry from the map as it did originally but ensure we do this in the exception case as well as the non exception case. Moving the remove to the finally block gives us that behavior", "author": "ceejay66", "createdAt": "2020-06-03T00:14:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY2ODAzNQ=="}], "type": "inlineReview"}, {"oid": "3cf1efe5e11d3160cd7ef8bbe0b74a03d9adbe62", "url": "https://github.com/apache/camel/commit/3cf1efe5e11d3160cd7ef8bbe0b74a03d9adbe62", "message": "Fixed, based on pull request feedback", "committedDate": "2020-06-03T00:29:25Z", "type": "commit"}]}