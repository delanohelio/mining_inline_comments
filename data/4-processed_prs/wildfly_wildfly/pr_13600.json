{"pr_number": 13600, "pr_title": "[WFLY-13807] EE: Add component class info to interface based proxy to preserve validation metadata", "pr_createdAt": "2020-09-23T17:34:46Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13600", "timeline": [{"oid": "86d4d1e83205d731a0ae9decff0d1d32f639c3c0", "url": "https://github.com/wildfly/wildfly/commit/86d4d1e83205d731a0ae9decff0d1d32f639c3c0", "message": "[WFLY-13807] EE: Add component class info to interface based proxy to preserve validation metadata", "committedDate": "2020-09-23T14:18:46Z", "type": "commit"}, {"oid": "9055bcef847df36666c819fe36623abdb76a1022", "url": "https://github.com/wildfly/wildfly/commit/9055bcef847df36666c819fe36623abdb76a1022", "message": "WFLY-13807 use Object as proxy super class if the component class has no default constructor; remove empty web.xml from EjbBeanValidationTestCase", "committedDate": "2020-09-23T17:25:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4OTc4OA==", "url": "https://github.com/wildfly/wildfly/pull/13600#discussion_r493989788", "bodyText": "This is on the request path and should be optimized to a single map lookup.", "author": "bstansberry", "createdAt": "2020-09-24T01:39:05Z", "path": "ee/src/main/java/org/jboss/as/ee/component/ViewService.java", "diffHunk": "@@ -193,11 +195,24 @@ public Object invoke(InterceptorContext interceptorContext) throws Exception {\n             if(component instanceof BasicComponent) {\n                 ((BasicComponent) component).waitForComponentStart();\n             }\n-            final Method method = interceptorContext.getMethod();\n+            final Method method = matchMethod(interceptorContext.getMethod());\n             final Interceptor interceptor = viewInterceptors.get(method);\n             return interceptor.processInvocation(interceptorContext);\n         }\n \n+        private Method matchMethod(Method invokedMethod) {\n+            if (invokedMethod.getDeclaringClass().isInterface()) {\n+                for (Method beanMethod : proxyFactory.getCachedMethods()) {\n+                    if (MethodIdentifier.getIdentifierForMethod(beanMethod).equals(MethodIdentifier.getIdentifierForMethod(invokedMethod))) {\n+                        return beanMethod;\n+                    }\n+                }", "originalCommit": "9055bcef847df36666c819fe36623abdb76a1022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5MDExMw==", "url": "https://github.com/wildfly/wildfly/pull/13600#discussion_r493990113", "bodyText": "I was referring to the entire for loop.", "author": "bstansberry", "createdAt": "2020-09-24T01:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4OTc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1OTgzNw==", "url": "https://github.com/wildfly/wildfly/pull/13600#discussion_r495159837", "bodyText": "This path is only executed when invokedMethod.getDeclaringClass().isInterface() is true, i.e., when the bean is 2.x ejb, or the ejb bean class has no default constructor. So for the majority of ejb use case, this part is not touched. So I updated this part to populate a map on-demand to save the mapping.", "author": "chengfang", "createdAt": "2020-09-25T18:25:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4OTc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyMTE2MQ==", "url": "https://github.com/wildfly/wildfly/pull/13600#discussion_r495221161", "bodyText": "Nice; I like that approach.", "author": "bstansberry", "createdAt": "2020-09-25T20:42:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4OTc4OA=="}], "type": "inlineReview"}, {"oid": "a7340ad1a5b25be7638ef5d4c7eae43d49c20064", "url": "https://github.com/wildfly/wildfly/commit/a7340ad1a5b25be7638ef5d4c7eae43d49c20064", "message": "Use a map to match ejb invoked method to its view method in ViewService; catch generic Exception instead of NoSuchMethodException when calling getConstructor in DefaultComponentViewConfigurator", "committedDate": "2020-09-25T18:12:51Z", "type": "commit"}]}