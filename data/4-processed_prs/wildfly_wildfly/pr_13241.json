{"pr_number": 13241, "pr_title": " Test Case for the issue WFLY-13375, if connection factory or JMS destination is configured for third party resource adapter", "pr_createdAt": "2020-04-27T08:05:38Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13241", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYxOTQ0NQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r415619445", "bodyText": "s/2010/2020", "author": "yersan", "createdAt": "2020-04-27T08:35:22Z", "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/jca/deployment/JndiViewOperationJMSTestCase.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2010, Red Hat, Inc., and individual contributors", "originalCommit": "9fb01b2f9506501d962f86d59b4a6e4378f97f46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYyODI4NA==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r415628284", "bodyText": "Could you correct the formatting?", "author": "yersan", "createdAt": "2020-04-27T08:48:02Z", "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/jca/deployment/JndiViewOperationJMSTestCase.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2010, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.test.integration.jca.deployment;\n+\n+\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUBSYSTEM;\n+\n+import org.jboss.arquillian.container.test.api.Deployment;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.as.test.integration.jca.JcaMgmtBase;\n+import org.jboss.as.test.integration.jca.rar.MultipleAdminObject1;\n+import org.jboss.as.test.integration.management.util.MgmtOperationException;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.shrinkwrap.api.Archive;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ * Test the situation when connection factory or JMS destination is configured for resource adapter\n+ *\n+ * @author <a href=\"parsharma@redhat.com\">Parul Sharma</a>\n+ */\n+\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class JndiViewOperationJMSTestCase extends JcaMgmtBase {\n+\n+    static final String rarDeploymentName = \"eis.rar\";\n+\n+    @Deployment(name = \"rar\", order = 1)\n+    public static Archive<?> deploytRar() {\n+        ResourceAdapterArchive raa = ShrinkWrap.create(ResourceAdapterArchive.class, rarDeploymentName);\n+\n+        JavaArchive ja = ShrinkWrap.create(JavaArchive.class, \"lib.jar\");\n+        ja.addPackage(MultipleAdminObject1.class.getPackage());\n+        raa.addAsLibrary(ja);\n+\n+        raa.addAsManifestResource(JndiViewOperationJMSTestCase.class.getPackage(), \"ra.xml\", \"ra.xml\");\n+        return raa;\n+    }\n+\n+\n+     @Test\n+     public void testValueOfJms() throws Exception{\n+        ModelNode address = getAddress();\n+        ModelNode operation = getOperation(address);\n+          try{\n+             ModelNode result=executeOperation(operation);\n+             ModelNode value = result.get(\"java: contexts\", \"java:\", \"JmsXA\",\"value\");", "originalCommit": "9fb01b2f9506501d962f86d59b4a6e4378f97f46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY1MzA3MA==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r415653070", "bodyText": "I suggest some changes here:\n\nIf result is undefined, then val will be true and the test will pass, getting a false negative.\nvalue.equals(null) never will be true, because in that case you will get a NPE.\nBoolean val, you can use a primitive and avoid auto-boxing/unboxing.", "author": "yersan", "createdAt": "2020-04-27T09:23:30Z", "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/jca/deployment/JndiViewOperationJMSTestCase.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2010, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.test.integration.jca.deployment;\n+\n+\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUBSYSTEM;\n+\n+import org.jboss.arquillian.container.test.api.Deployment;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.as.test.integration.jca.JcaMgmtBase;\n+import org.jboss.as.test.integration.jca.rar.MultipleAdminObject1;\n+import org.jboss.as.test.integration.management.util.MgmtOperationException;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.shrinkwrap.api.Archive;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ * Test the situation when connection factory or JMS destination is configured for resource adapter\n+ *\n+ * @author <a href=\"parsharma@redhat.com\">Parul Sharma</a>\n+ */\n+\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class JndiViewOperationJMSTestCase extends JcaMgmtBase {\n+\n+    static final String rarDeploymentName = \"eis.rar\";\n+\n+    @Deployment(name = \"rar\", order = 1)\n+    public static Archive<?> deploytRar() {\n+        ResourceAdapterArchive raa = ShrinkWrap.create(ResourceAdapterArchive.class, rarDeploymentName);\n+\n+        JavaArchive ja = ShrinkWrap.create(JavaArchive.class, \"lib.jar\");\n+        ja.addPackage(MultipleAdminObject1.class.getPackage());\n+        raa.addAsLibrary(ja);\n+\n+        raa.addAsManifestResource(JndiViewOperationJMSTestCase.class.getPackage(), \"ra.xml\", \"ra.xml\");\n+        return raa;\n+    }\n+\n+\n+     @Test\n+     public void testValueOfJms() throws Exception{\n+        ModelNode address = getAddress();\n+        ModelNode operation = getOperation(address);\n+          try{\n+             ModelNode result=executeOperation(operation);\n+             ModelNode value = result.get(\"java: contexts\", \"java:\", \"JmsXA\",\"value\");\n+             Boolean val = !(value.equals(null));\n+             Assert.assertTrue(val);", "originalCommit": "9fb01b2f9506501d962f86d59b4a6e4378f97f46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "868704b2bc588d5c4a74c046e7145875f6961ee2", "url": "https://github.com/wildfly/wildfly/commit/868704b2bc588d5c4a74c046e7145875f6961ee2", "message": " Test Case for the issue WFLY-13375, if Connection Factory or JMS destination is configured for third party resource adapter", "committedDate": "2020-04-27T11:03:46Z", "type": "forcePushed"}, {"oid": "5c75e394c742cfd25849b9ec170bacf3b1e191e5", "url": "https://github.com/wildfly/wildfly/commit/5c75e394c742cfd25849b9ec170bacf3b1e191e5", "message": " Test Case for the issue WFLY-13375, if Connection Factory or JMS destination is configured for third party resource adapter", "committedDate": "2020-04-27T11:42:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NDI3MQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r417154271", "bodyText": "This connection definition seems it is unused on your test, is so, you can remove it", "author": "yersan", "createdAt": "2020-04-29T08:38:24Z", "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/jca/deployment/ironjacamar.xml", "diffHunk": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ironjacamar>\n+    <connection-definitions>\n+        <connection-definition\n+                class-name=\"org.jboss.as.test.integration.jca.rar.MultipleManagedConnectionFactory1\"\n+                jndi-name=\"java:jboss/name1\" pool-name=\"ij_Pool1\">\n+        </connection-definition>\n+    </connection-definitions>", "originalCommit": "5c75e394c742cfd25849b9ec170bacf3b1e191e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIxNTMxMQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r417215311", "bodyText": "IMO there should be no relationship between the 2 test cases, because the deployment will be undeployed anyway before starting the next one, right? And updating the jndi bindings to something else does not work either.", "author": "gaol", "createdAt": "2020-04-29T10:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NDI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI1NzkyMA==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r417257920", "bodyText": "because the deployment will be undeployed anyway before starting the next one, right?\n\nYes it is undeployed and that was my initial thought but even upon an undeployment IronJacamarDeploymentTestCase fails after being affected by the deployment of ironjacamar.xml on JndiViewOperationJMSTestCase. I haven't got into the details, but seems it is due to the admin-objects defined there.", "author": "yersan", "createdAt": "2020-04-29T11:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NDI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2MDU5Mw==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r417260593", "bodyText": "@yersan yes, it is failing because of admin object.", "author": "parsharma", "createdAt": "2020-04-29T11:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NDI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMzI4Ng==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r417323286", "bodyText": "@parsharma For now, please use resource adapter's CLI like:\n/subsystem=resource-adapters/resource-adapter=eis.rar:add(archive=eis.rar)\n/subsystem=resource-adapters/resource-adapter=eis.rar/admin-objects=ij_Pool:add(jndi-name=\"java:jboss/Name3\", class-name=\"org.jboss.as.test.integration.jca.rar.MultipleAdminObject1Impl\")\n/subsystem=resource-adapters/resource-adapter=eis.rar:activate()\n\nto activate the resource adapter instead of using ironjacamar.xml, there maybe a hidden bug in resource-adapter subsystem or ironjacamar when it is activted using ironjacamar.xml as @yersan pointed. :)\nYou can refer to this test case on how to do it. HTH", "author": "gaol", "createdAt": "2020-04-29T13:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NDI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxOTMwOQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r419319309", "bodyText": "@gaol  Thanks, your above suggestion works.", "author": "parsharma", "createdAt": "2020-05-04T09:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NDI3MQ=="}], "type": "inlineReview"}, {"oid": "3b0513177d8bb9b384d3cae73ab0cb75742e0160", "url": "https://github.com/wildfly/wildfly/commit/3b0513177d8bb9b384d3cae73ab0cb75742e0160", "message": " Test Case for the issue WFLY-13375, if Connection Factory or JMS destination is configured for third party resource adapter", "committedDate": "2020-05-04T09:37:16Z", "type": "forcePushed"}, {"oid": "7b3d264dd71b97a393af4e6664d006bb1777c449", "url": "https://github.com/wildfly/wildfly/commit/7b3d264dd71b97a393af4e6664d006bb1777c449", "message": " Test Case for the issue WFLY-13375, if Connection Factory or JMS destination is configured for third party resource adapter", "committedDate": "2020-05-04T10:02:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MjcwOQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r419362709", "bodyText": "Could you correct the indentation?", "author": "yersan", "createdAt": "2020-05-04T11:12:41Z", "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/jca/deployment/JndiViewOperationJMSTestCase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.test.integration.jca.deployment;\n+\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUBSYSTEM;\n+\n+import org.jboss.arquillian.container.test.api.Deployment;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.as.test.integration.jca.JcaMgmtBase;\n+import org.jboss.as.test.integration.jca.rar.MultipleAdminObject1;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.shrinkwrap.api.Archive;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ * Test the situation when connection factory or JMS destination is configured for resource adapter\n+ *\n+ * @author <a href=\"parsharma@redhat.com\">Parul Sharma</a>\n+ */\n+\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class JndiViewOperationJMSTestCase extends JcaMgmtBase {\n+\n+    static final String rarDeploymentName = \"eis.rar\";\n+    private static ModelNode address;\n+\n+    @Deployment(name = \"rar\", order = 1)\n+    public static Archive<?> deploytRar() {\n+        ResourceAdapterArchive raa = ShrinkWrap.create(ResourceAdapterArchive.class, rarDeploymentName);\n+\n+        JavaArchive ja = ShrinkWrap.create(JavaArchive.class, \"lib.jar\");\n+        ja.addPackage(MultipleAdminObject1.class.getPackage());\n+        raa.addAsLibrary(ja);\n+\n+        raa.addAsManifestResource(JndiViewOperationJMSTestCase.class.getPackage(), \"ra.xml\", \"ra.xml\");\n+        return raa;\n+    }\n+\n+    @Test\n+    public void testValueOfJms() throws Exception {\n+        setup();\n+        ModelNode address = getAddress();\n+        ModelNode operation = getOperation(address);\n+        ModelNode result = executeOperation(operation);\n+\n+         ModelNode value = result.get(\"java: contexts\", \"java:jboss\", \"Name3\", \"class-name\");\n+         Assert.assertEquals(\"org.jboss.as.test.integration.jca.rar.MultipleAdminObject1Impl\", value.asString());", "originalCommit": "7b3d264dd71b97a393af4e6664d006bb1777c449", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0Mjk5Mw==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r419542993", "bodyText": "You still need to rollback the changes done on setup() to clean up the configuration. Notice the same server configuration file is re-used by other tests. You should ensure the configuration backs to its initial state when the test finish, even if the test assertion fails.", "author": "yersan", "createdAt": "2020-05-04T15:57:34Z", "path": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/jca/deployment/JndiViewOperationJMSTestCase.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.test.integration.jca.deployment;\n+\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUBSYSTEM;\n+\n+import org.jboss.arquillian.container.test.api.Deployment;\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.as.test.integration.jca.JcaMgmtBase;\n+import org.jboss.as.test.integration.jca.rar.MultipleAdminObject1;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.shrinkwrap.api.Archive;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+/**\n+ * Test the situation when connection factory or JMS destination is configured for resource adapter\n+ *\n+ * @author <a href=\"parsharma@redhat.com\">Parul Sharma</a>\n+ */\n+\n+@RunWith(Arquillian.class)\n+@RunAsClient\n+public class JndiViewOperationJMSTestCase extends JcaMgmtBase {\n+\n+    static final String rarDeploymentName = \"eis.rar\";\n+    private static ModelNode address;\n+\n+    @Deployment(name = \"rar\", order = 1)\n+    public static Archive<?> deploytRar() {\n+        ResourceAdapterArchive raa = ShrinkWrap.create(ResourceAdapterArchive.class, rarDeploymentName);\n+\n+        JavaArchive ja = ShrinkWrap.create(JavaArchive.class, \"lib.jar\");\n+        ja.addPackage(MultipleAdminObject1.class.getPackage());\n+        raa.addAsLibrary(ja);\n+\n+        raa.addAsManifestResource(JndiViewOperationJMSTestCase.class.getPackage(), \"ra.xml\", \"ra.xml\");\n+        return raa;\n+    }\n+\n+    @Test\n+    public void testValueOfJms() throws Exception {\n+        setup();\n+        ModelNode address = getAddress();\n+        ModelNode operation = getOperation(address);\n+        ModelNode result = executeOperation(operation);\n+\n+         ModelNode value = result.get(\"java: contexts\", \"java:jboss\", \"Name3\", \"class-name\");\n+         Assert.assertEquals(\"org.jboss.as.test.integration.jca.rar.MultipleAdminObject1Impl\", value.asString());\n+\n+    }\n+\n+    private ModelNode getAddress() {\n+        return new ModelNode().add(SUBSYSTEM, \"naming\");\n+    }\n+\n+    private ModelNode getOperation(ModelNode address) {\n+        ModelNode operation = new ModelNode();\n+        operation.get(OP).set(\"jndi-view\");\n+        operation.get(OP_ADDR).set(address);\n+        return operation;\n+    }\n+\n+    private void setup() throws Exception {", "originalCommit": "7b3d264dd71b97a393af4e6664d006bb1777c449", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2MTQ5MQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r420061491", "bodyText": "I think deployment, undeployment and clean up is done by arquillian.", "author": "parsharma", "createdAt": "2020-05-05T12:13:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0Mjk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE4OTY4MQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r421189681", "bodyText": "@parsharma The configuration done in @Test method won't be clean up by Arquillian. The deployment archive with @Deployment will be undeployed by Arquillian. So it should be cleaned. It can be done either by cleaning it within your @Test method, or you can use SnapshotRestoreSetupTask for the configuration, you can refer to TracerEnableTestCase#TracerEnableSetup on the 2nd option.", "author": "gaol", "createdAt": "2020-05-07T01:40:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0Mjk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI0MTc3MQ==", "url": "https://github.com/wildfly/wildfly/pull/13241#discussion_r421241771", "bodyText": "@gaol yes, yesterday I discussed with @yersan, he also suggested same by rolling back changes in the @test method itself. I referred to the same class you have suggested RarInsideEarReDeploymentTestCase. They are also removing address in finally, incase test class fails it will rollback all the changes.", "author": "parsharma", "createdAt": "2020-05-07T05:06:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0Mjk5Mw=="}], "type": "inlineReview"}, {"oid": "5898539c1ceef4816ca10b807d92e2ffd0dd5079", "url": "https://github.com/wildfly/wildfly/commit/5898539c1ceef4816ca10b807d92e2ffd0dd5079", "message": " Test Case for the issue WFLY-13375, if Connection Factory or JMS destination is configured for third party resource adapter", "committedDate": "2020-05-07T07:21:56Z", "type": "commit"}, {"oid": "5898539c1ceef4816ca10b807d92e2ffd0dd5079", "url": "https://github.com/wildfly/wildfly/commit/5898539c1ceef4816ca10b807d92e2ffd0dd5079", "message": " Test Case for the issue WFLY-13375, if Connection Factory or JMS destination is configured for third party resource adapter", "committedDate": "2020-05-07T07:21:56Z", "type": "forcePushed"}]}