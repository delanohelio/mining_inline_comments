{"pr_number": 13397, "pr_title": "[WFLY-12342] Add server probes for readiness health check", "pr_createdAt": "2020-07-06T15:07:23Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13397", "timeline": [{"oid": "561daac5de34fc672f955a70c37b91e822437bd5", "url": "https://github.com/wildfly/wildfly/commit/561daac5de34fc672f955a70c37b91e822437bd5", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Add special handling of the MicroProfile Health TCK by disabling the\n  server readiness checks when the TCK is run as it assumes that there\n  will be only checks installed by the TCK itself.\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-07-07T11:23:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2MjAyMA==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r482962020", "bodyText": "Why is it important to disable it? Was new output breaking MP TCK?", "author": "mchoma", "createdAt": "2020-09-03T13:05:52Z", "path": "testsuite/integration/microprofile-tck/health/src/test/resources/arquillian.xml", "diffHunk": "@@ -5,7 +5,7 @@\n     <container qualifier=\"jboss\" default=\"true\" >\n         <configuration>\n             <property name=\"jbossHome\">${jboss.home}</property>\n-            <property name=\"javaVmArguments\">${microprofile.jvm.args}</property>\n+            <property name=\"javaVmArguments\">${microprofile.jvm.args} -D__MP_HEALTH_TCK_DISABLE_SERVER_CHECKS=true</property>", "originalCommit": "561daac5de34fc672f955a70c37b91e822437bd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5NTcwMQ==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r482995701", "bodyText": "The TCK must be run with any vendor probes disabled: https://github.com/eclipse/microprofile-health/blob/master/tck/running_the_tck.asciidoc#disabling-default-vendor-procedures", "author": "jmesnil", "createdAt": "2020-09-03T13:54:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2MjAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3MTY4NQ==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r483071685", "bodyText": "fixed", "author": "jmesnil", "createdAt": "2020-09-03T15:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2MjAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2NTYyNg==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r482965626", "bodyText": "So it basically disable all three checks. Can we remove _TCK_part so it does not look like some workaround flag. Then we can also advertise that as feature compatibility flag. If for some reason new behaviour  make problem to someone.", "author": "mchoma", "createdAt": "2020-09-03T13:11:25Z", "path": "microprofile/health-smallrye/src/main/java/org/wildfly/extension/microprofile/health/HealthReporterService.java", "diffHunk": "@@ -40,30 +51,52 @@\n public class HealthReporterService implements Service<HealthReporter> {\n \n     private static HealthReporter healthReporter;\n+    private final Supplier<ModelControllerClientFactory> modelControllerClientFactory;\n+    private final Supplier<Executor> managementExecutor;\n     private String emptyLivenessChecksStatus;\n     private String emptyReadinessChecksStatus;\n+    private LocalModelControllerClient modelControllerClient;\n \n     static void install(OperationContext context, String emptyLivenessChecksStatus, String emptyReadinessChecksStatus) {\n-        context.getCapabilityServiceTarget()\n-                .addCapability(RuntimeCapability.Builder.of(HEALTH_REPORTER_CAPABILITY, SmallRyeHealthReporter.class).build())\n-                .setInstance(new HealthReporterService(emptyLivenessChecksStatus, emptyReadinessChecksStatus))\n+\n+        CapabilityServiceBuilder<?> serviceBuilder = context.getCapabilityServiceTarget()\n+                .addCapability(RuntimeCapability.Builder.of(HEALTH_REPORTER_CAPABILITY, SmallRyeHealthReporter.class).build());\n+\n+        Supplier<ModelControllerClientFactory> modelControllerClientFactory = serviceBuilder.requires(context.getCapabilityServiceName(CLIENT_FACTORY_CAPABILITY, ModelControllerClientFactory.class));\n+        Supplier<Executor> managementExecutor = serviceBuilder.requires(context.getCapabilityServiceName(MANAGEMENT_EXECUTOR, Executor.class));\n+\n+        serviceBuilder.setInstance(new HealthReporterService(modelControllerClientFactory, managementExecutor, emptyLivenessChecksStatus, emptyReadinessChecksStatus))\n                 .install();\n     }\n \n-    private HealthReporterService(String emptyLivenessChecksStatus, String emptyReadinessChecksStatus) {\n+    private HealthReporterService(Supplier<ModelControllerClientFactory> modelControllerClientFactory,\n+                                  Supplier<Executor> managementExecutor,\n+                                  String emptyLivenessChecksStatus, String emptyReadinessChecksStatus) {\n+        this.modelControllerClientFactory = modelControllerClientFactory;\n+        this.managementExecutor = managementExecutor;\n         this.emptyLivenessChecksStatus = emptyLivenessChecksStatus;\n         this.emptyReadinessChecksStatus = emptyReadinessChecksStatus;\n     }\n \n     @Override\n     public void start(StartContext context) {\n         healthReporter = new HealthReporter(emptyLivenessChecksStatus, emptyReadinessChecksStatus);\n+\n+        modelControllerClient = modelControllerClientFactory.get().createClient(managementExecutor.get());\n+\n+        if (System.getProperty(\"__MP_HEALTH_TCK_DISABLE_SERVER_CHECKS\") == null) {", "originalCommit": "561daac5de34fc672f955a70c37b91e822437bd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5NjY3MA==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r482996670", "bodyText": "that's a good point, I should replace that code by a proper call to MP Config and check the mp.health.disable-default-procedures config property instead", "author": "jmesnil", "createdAt": "2020-09-03T13:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2NTYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3MTc0OQ==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r483071749", "bodyText": "fixed", "author": "jmesnil", "createdAt": "2020-09-03T15:35:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2NTYyNg=="}], "type": "inlineReview"}, {"oid": "3aecb5c1bfb1d71483d91653992b8c794588d7c7", "url": "https://github.com/wildfly/wildfly/commit/3aecb5c1bfb1d71483d91653992b8c794588d7c7", "message": "[WFLY-12342] Add server probes for readiness health check\n\nAdd 3 healthcheck probes to determine the readiness of the server:\n\n* server-state returns UP when the server is \"running\"\n* boot-errors returns UP if there were no boot-errors\n* deployments-status returns UP if all deployments status are OK\n\nJIRA: https://issues.jboss.org/browse/WFLY-12342", "committedDate": "2020-09-03T14:55:07Z", "type": "commit"}, {"oid": "20f575e0969cf888c6b1344ada198afdc234fedd", "url": "https://github.com/wildfly/wildfly/commit/20f575e0969cf888c6b1344ada198afdc234fedd", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Support the `mp.health.disable-default-procedures` config property to\n  disable any vendor procedures. When the TCK is run as it assumes that\n  there will be only checks installed by the TCK itself.\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-09-03T15:31:57Z", "type": "forcePushed"}, {"oid": "4ffd63d58cc2679ffdfe18b0a7d33dc56316edf1", "url": "https://github.com/wildfly/wildfly/commit/4ffd63d58cc2679ffdfe18b0a7d33dc56316edf1", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Support the `mp.health.disable-default-procedures` config property to\n  disable any vendor procedures. When the TCK is run as it assumes that\n  there will be only checks installed by the TCK itself.\n* Updated subsystem documentation\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-09-09T15:50:42Z", "type": "forcePushed"}, {"oid": "bb25e9aa793f2c19658af1444872bcf313fab057", "url": "https://github.com/wildfly/wildfly/commit/bb25e9aa793f2c19658af1444872bcf313fab057", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Support the `mp.health.disable-default-procedures` config property to\n  disable any vendor procedures. When the TCK is run as it assumes that\n  there will be only checks installed by the TCK itself.\n* Updated subsystem documentation\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-09-09T15:53:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNDc1Ng==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r485724756", "bodyText": "is this sentence true for management operation after changes of this RFE? /health/ready can return DOWN e.g. in case of failed deployment", "author": "mchoma", "createdAt": "2020-09-09T15:59:04Z", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Health.adoc", "diffHunk": "@@ -79,29 +99,36 @@ created by the `add-user` script. For example:\n $ curl -v --digest -u myadminuser:myadminpassword http://localhost:9990/health\n < HTTP/1.1 200 OK\n ...\n-{\"outcome\":\"UP\",\"checks\":[]}\n+{\"status\":\"UP\",\"checks\":[{\"name\":\"boot-errors\",\"status\":\"UP\"},{\"name\":\"deployments-status\",\"status\":\"UP\"},{\"name\":\"server-state\",\"status\":\"UP\",\"data\":{\"value\":\"running\"}}]}\n ----\n \n If the authentication fails, the  server will reply with a `401 NOT AUTHORIZED` response.\n \n+=== Default Server Readiness Procedures\n+\n+WildFly provides some readiness procedures to test if the application server is ready to serve requests:\n+\n+* `boot-errors` checks that there were no errors during the server boot sequence\n+* `deployments-status` checks that all deployments were deployed without errors\n+* `server-state` checks that the server state is `running`\n+\n+The server is ready when all these procedures are `UP`.\n+\n+It is possible to disable them by using the MicroProfile Config property `mp.health.disable-default-procedures`.\n+\n === Global Status when probes are not defined\n \n-By default, the HTTP endpoints will return `UP` if there are no health check probes defined by the application.\n+By default, the HTTP endpoints and management operations will return `UP` if there are no health check procedures defined by the applications deployed on WildFly.", "originalCommit": "bb25e9aa793f2c19658af1444872bcf313fab057", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNDgzOQ==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r485724839", "bodyText": "How do the 'Default Server Readiness Procedures' relate to this? If not disabled by the MP Config property do they count as \"procedures defined by the applications deployed on WildFly\"?", "author": "bstansberry", "createdAt": "2020-09-09T15:59:12Z", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Health.adoc", "diffHunk": "@@ -79,29 +99,36 @@ created by the `add-user` script. For example:\n $ curl -v --digest -u myadminuser:myadminpassword http://localhost:9990/health\n < HTTP/1.1 200 OK\n ...\n-{\"outcome\":\"UP\",\"checks\":[]}\n+{\"status\":\"UP\",\"checks\":[{\"name\":\"boot-errors\",\"status\":\"UP\"},{\"name\":\"deployments-status\",\"status\":\"UP\"},{\"name\":\"server-state\",\"status\":\"UP\",\"data\":{\"value\":\"running\"}}]}\n ----\n \n If the authentication fails, the  server will reply with a `401 NOT AUTHORIZED` response.\n \n+=== Default Server Readiness Procedures\n+\n+WildFly provides some readiness procedures to test if the application server is ready to serve requests:\n+\n+* `boot-errors` checks that there were no errors during the server boot sequence\n+* `deployments-status` checks that all deployments were deployed without errors\n+* `server-state` checks that the server state is `running`\n+\n+The server is ready when all these procedures are `UP`.\n+\n+It is possible to disable them by using the MicroProfile Config property `mp.health.disable-default-procedures`.\n+\n === Global Status when probes are not defined\n \n-By default, the HTTP endpoints will return `UP` if there are no health check probes defined by the application.\n+By default, the HTTP endpoints and management operations will return `UP` if there are no health check procedures defined by the applications deployed on WildFly.", "originalCommit": "bb25e9aa793f2c19658af1444872bcf313fab057", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNTcxNg==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r485725716", "bodyText": "Do the 'Default Server Readiness Procedures' count as \"procedures in the deployments\"? If they were not disabled with the MP Config property, would setting this attribute to DOWN result in DOWN or UP?", "author": "bstansberry", "createdAt": "2020-09-09T16:00:22Z", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Health.adoc", "diffHunk": "@@ -79,29 +99,36 @@ created by the `add-user` script. For example:\n $ curl -v --digest -u myadminuser:myadminpassword http://localhost:9990/health\n < HTTP/1.1 200 OK\n ...\n-{\"outcome\":\"UP\",\"checks\":[]}\n+{\"status\":\"UP\",\"checks\":[{\"name\":\"boot-errors\",\"status\":\"UP\"},{\"name\":\"deployments-status\",\"status\":\"UP\"},{\"name\":\"server-state\",\"status\":\"UP\",\"data\":{\"value\":\"running\"}}]}\n ----\n \n If the authentication fails, the  server will reply with a `401 NOT AUTHORIZED` response.\n \n+=== Default Server Readiness Procedures\n+\n+WildFly provides some readiness procedures to test if the application server is ready to serve requests:\n+\n+* `boot-errors` checks that there were no errors during the server boot sequence\n+* `deployments-status` checks that all deployments were deployed without errors\n+* `server-state` checks that the server state is `running`\n+\n+The server is ready when all these procedures are `UP`.\n+\n+It is possible to disable them by using the MicroProfile Config property `mp.health.disable-default-procedures`.\n+\n === Global Status when probes are not defined\n \n-By default, the HTTP endpoints will return `UP` if there are no health check probes defined by the application.\n+By default, the HTTP endpoints and management operations will return `UP` if there are no health check procedures defined by the applications deployed on WildFly.\n \n However, it is possible to change this behaviour.\n-The `/health/live` HTTP endpoint (as well as the `check-live` management operation) can return `DOWN` when there are no liveness check probes by setting the `empty-liveness-checks-status` attribute\n+The `/health/live` HTTP endpoint (as well as the `check-live` management operation) can return `DOWN` when there are no liveness check procedures in the deployments by setting the `empty-liveness-checks-status` attribute\n on the `subsystem` resource to `DOWN`.\n-Similarly, the `/health/ready` HTTP endpoint (as well as the `check-ready` management operation) can return `DOWN` when there are no readiness check probes by setting the `empty-readiness-checks-status` attribute\n+Similarly, the `/health/ready` HTTP endpoint (as well as the `check-ready` management operation) can return `DOWN` when there are no readiness check procedures in the deployments by setting the `empty-readiness-checks-status` attribute", "originalCommit": "bb25e9aa793f2c19658af1444872bcf313fab057", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f5bd3daebce865c3215a65454cc2f6dde9cca124", "url": "https://github.com/wildfly/wildfly/commit/f5bd3daebce865c3215a65454cc2f6dde9cca124", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Support the `mp.health.disable-default-procedures` config property to\n  disable any vendor procedures. When the TCK is run as it assumes that\n  there will be only checks installed by the TCK itself.\n* Updated subsystem documentation\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-09-09T19:54:11Z", "type": "forcePushed"}, {"oid": "a58f01471c133475305deb23e37885776a573d29", "url": "https://github.com/wildfly/wildfly/commit/a58f01471c133475305deb23e37885776a573d29", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Support the `mp.health.disable-default-procedures` config property to\n  disable any vendor procedures. When the TCK is run as it assumes that\n  there will be only checks installed by the TCK itself.\n* Updated subsystem documentation\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-09-10T07:33:30Z", "type": "forcePushed"}, {"oid": "e43b08aae6d1d68cb4ce50fd7a7e7402e0632075", "url": "https://github.com/wildfly/wildfly/commit/e43b08aae6d1d68cb4ce50fd7a7e7402e0632075", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Support the `mp.health.disable-default-procedures` config property to\n  disable any vendor procedures. When the TCK is run as it assumes that\n  there will be only checks installed by the TCK itself.\n* Updated subsystem documentation\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-09-10T08:58:55Z", "type": "commit"}, {"oid": "e43b08aae6d1d68cb4ce50fd7a7e7402e0632075", "url": "https://github.com/wildfly/wildfly/commit/e43b08aae6d1d68cb4ce50fd7a7e7402e0632075", "message": "[WFLY-12342] Add server probes for readiness health check\n\n* Separate handling of the server readiness checks from the deployment\n  checks to ensure that the server should not report UP until readiness\n  checks from the deployment have been installed and called.\n* Change the semantic of empty-readiness-check-status and\n  empty-readiness-checks-status so that they only deal with empty\n  *deployment* checks.\n* Support the `mp.health.disable-default-procedures` config property to\n  disable any vendor procedures. When the TCK is run as it assumes that\n  there will be only checks installed by the TCK itself.\n* Updated subsystem documentation\n\n JIRA: https://issues.jboss.org/browse/WFLY-12342\n\nSigned-off-by: Jeff Mesnil <jmesnil@redhat.com>", "committedDate": "2020-09-10T08:58:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0MzU3NA==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r486843574", "bodyText": "So why does this show up in WF21. In previous version it did not show?", "author": "mchoma", "createdAt": "2020-09-11T08:01:50Z", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Health.adoc", "diffHunk": "@@ -19,18 +19,45 @@ element to the xml or by using the following CLI operation:\n [standalone@localhost:9990 /]/extension=org.wildfly.extension.microprofile.health-smallrye:add\n ----\n \n-== Management Operation\n+== Management Operations\n+\n+The healthiness of the application server can be queried by calling 3 different operations:\n+\n+* `check` to check both the liveness and readiness of the runtime\n+* `check-live` to check only the liveness of the runtime\n+* `check-ready` to check only the readiness of the runtime\n \n-The healthiness of the application server can be queried by calling the `check`:\n \n [source,options=\"nowrap\"]\n ----\n [standalone@localhost:9990 /] /subsystem=microprofile-health-smallrye:check\n {\n-    \"outcome\" => \"success\", <1>\n+    \"outcome\" => \"success\",\n     \"result\" => {\n-        \"outcome\" => \"UP\", <2>\n-        \"checks\" => []\n+        \"status\" => \"UP\",\n+        \"checks\" => [\n+            {\n+                \"name\" => \"empty-liveness-checks\",\n+                \"status\" => \"UP\"\n+            },\n+            {\n+                \"name\" => \"server-state\",\n+                \"status\" => \"UP\",\n+                \"data\" => {\"value\" => \"running\"}\n+            },\n+            {\n+                \"name\" => \"boot-errors\",\n+                \"status\" => \"UP\"\n+            },\n+            {\n+                \"name\" => \"deployments-status\",\n+                \"status\" => \"UP\"\n+            },\n+            {\n+                \"name\" => \"empty-readiness-checks\",", "originalCommit": "e43b08aae6d1d68cb4ce50fd7a7e7402e0632075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2OTQzOA==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r486869438", "bodyText": "There was a bug in the code that I fixed in this PR", "author": "jmesnil", "createdAt": "2020-09-11T08:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0MzU3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkxMTUzMQ==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r486911531", "bodyText": "Thanks that explain some changes in tests, which I wasn't expecting.", "author": "mchoma", "createdAt": "2020-09-11T09:32:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0MzU3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0NzUzOA==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r486847538", "bodyText": "@jmesnil Is ready-<deployment name> subset of deployments-status ? Can we get rid of that? ready-<deployment name> always returns UP means it does not reflect deployment errors?\n\nThey serve different purpose.\nready-<deployment name> is added by WildFly for each deployment if the deployment does not contain any readiness check.\n\nAnd my point is if we can't use deployments-status for this purpose?\n\nIt only returns UP for this deployment. However if the deployment provides a readiness check, this one will be used to determine if the deployment is ready or not.\ndeployments-status checks that all deployments have been deployed without error.\n\nfew notes:\nMP should serve one deployment.\nI do have detailed info in deployments-status about deployments so I am not loosing this information per deployment anyway.\n            {\n                \"name\" => \"deployments-status\",\n                \"status\" => \"UP\",\n                \"data\" => {\"microprofile-config.war\" => \"OK\"}\n            },\n\nCan it happen  ready-<deployment name> is UP but deployments-status is DOWN (with one deployment)? Can it happen  ready-<deployment name> is DOWN but deployments-status is UP (with one deployment)? In other words do they have still same result?\n\n\nIs it possible empty-readiness-checks-status make work with deployments-status ?\nThis is somehow backward incompatible change, but would IMO simplify whole logic of health check.\n\nI'm not sure it's a good idea. The goal of this RFE is to provides the same checks that the EAP probes provide using the health subsystem instead of external scripts.\nAny change of behaviour would have to be in a way that the semantics of the \"healthiness\" of the app server are preserved regardless of the way they are checked (external scripts and health subsystem).\n\nI am not sure if this should be added under this RFE (mainly because of backward compatibility questions), but thinking about it with fresh context. Just it was hard to me to understand all combinations. And I am thinking how to simplify this unnecessary complexity.\nAlso about empty-readiness-checks-status. Cant problem which is empty-readiness-checks-status fixing happen to deployments-status ,boot-errors, server-state? I mean that :check is reporting at beginning UP, but after some of this check finished it becomes DOWN? Don't we need to force that somehow globally? To report DOWN, until all checks finished? (I don't know if that is feasible)", "author": "mchoma", "createdAt": "2020-09-11T08:09:27Z", "path": "docs/src/main/asciidoc/_admin-guide/subsystem-configuration/MicroProfile_Health.adoc", "diffHunk": "@@ -79,28 +107,44 @@ created by the `add-user` script. For example:\n $ curl -v --digest -u myadminuser:myadminpassword http://localhost:9990/health\n < HTTP/1.1 200 OK\n ...\n-{\"outcome\":\"UP\",\"checks\":[]}\n+{\"status\":\"UP\",\"checks\":[{\"name\":\"empty-liveness-checks\",\"status\":\"UP\"},{\"name\":\"server-state\",\"status\":\"UP\",\"data\":{\"value\":\"running\"}},{\"name\":\"boot-errors\",\"status\":\"UP\"},{\"name\":\"deployments-status\",\"status\":\"UP\"},{\"name\":\"empty-readiness-checks\",\"status\":\"UP\"}]}\n ----\n \n If the authentication fails, the  server will reply with a `401 NOT AUTHORIZED` response.\n \n-=== Global Status when probes are not defined\n+=== Default Server Procedures\n+\n+WildFly provides some readiness procedures that are checked to determine if the application server is ready to serve requests:\n+\n+* `boot-errors` checks that there were no errors during the server boot sequence\n+* `deployments-status` checks that all deployments were deployed without errors\n+* `server-state` checks that the server state is `running`\n+* `empty-readiness-checks` determines the status when there are no readiness check procedures deployed to the server. The outcome of this procedure is determined by the `empty-readiness-checks-status` attribute. If the attribute is\n+   `UP` (by default), the server can be ready when there are no readiness checks in the deployments. Setting the `empty-readiness-checks-status` attribute to `DOWN` will make this procedure fail when there are no readiness checks in the deployments.\n+\n+If a deployment does not provide any readiness checks, WildFly will automatically add one for each deployment (named `ready-<deployment name>`) which always returns `UP`.", "originalCommit": "e43b08aae6d1d68cb4ce50fd7a7e7402e0632075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg1OTI3Mw==", "url": "https://github.com/wildfly/wildfly/pull/13397#discussion_r486859273", "bodyText": "WildFly supports multiple deployments. We should strive to take that into account when providing MP features if that does not conflict with the spec.\n\nIf the deployment has no readiness checks*, ready-<deployment name> and deployments-status (assuming there is a single deployment) will have the same outcome\nIf the deployment has readiness checks, the outcome will be determined by them.\n\n\nCant problem which is empty-readiness-checks-status fixing happen to deployments-status ,boot-errors, server-state?\n\nThere is a short window where it is true: when server-state is UP (the server is running) and the deployment are not finished (deployments-status will not report any errors as the deployments are processed.\nThis windows can be alleviated by setting empty-readiness-checks-status to DOWN so that the whole server readiness will be DOWN until deployments have been successfully deployed.", "author": "jmesnil", "createdAt": "2020-09-11T08:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0NzUzOA=="}], "type": "inlineReview"}]}