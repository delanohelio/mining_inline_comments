{"pr_number": 13684, "pr_title": "WFLY-13056 Add missing permission to access internal jaxp packages fo\u2026", "pr_createdAt": "2020-11-02T02:03:00Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13684", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzNDU0NQ==", "url": "https://github.com/wildfly/wildfly/pull/13684#discussion_r518434545", "bodyText": "@jimma @soul2zimate Is the second part of this comment (\"is not supposed ... to be called from deployments\") correct?\nIf so it would be good to clarify that and expand the comment to explain that the accessClassInPackage permission is also needed for that call. That's assuming that is the case.\nIf tests need weird permissions its good to be very clear on how it's the deployment that needs the perms and not the server code.", "author": "bstansberry", "createdAt": "2020-11-05T23:34:12Z", "path": "testsuite/integration/ws/src/test/java/org/jboss/as/test/integration/ws/basic/EJBEndpointTestCase.java", "diffHunk": "@@ -52,7 +52,12 @@\n         JavaArchive jar = ShrinkWrap.create(JavaArchive.class, \"jaxws-basic-ejb.jar\")\n                 .addClasses(EndpointIface.class, EJBEndpoint.class, HelloObject.class);\n         // EJBEndpoint#helloError needs getClassLoader permission for SOAPFactory.newInstance() invocation which is not supposed(??? at least it seems so) to be called from deployments", "originalCommit": "2eb83e26ee6174b660f683d8e1ffc6763202a9af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg4MjU5OQ==", "url": "https://github.com/wildfly/wildfly/pull/13684#discussion_r521882599", "bodyText": "The getClassLoader RuntimePermission seems unnecessary. Test in Linux SM - JDK 8 passed without it. I removed it from this PR.\nThe weird accessClassInPackage permission is only needed for the deployment by IBM JDK with security manager enabled. So I added an extra Java vendor check beforehand.", "author": "soul2zimate", "createdAt": "2020-11-12T07:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzNDU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDMyNA==", "url": "https://github.com/wildfly/wildfly/pull/13684#discussion_r521900324", "bodyText": "@bstansberry  I think @soul2zimate already found the root cause.   @soul2zimate  Just curious, what does the stack trace look like without this permission?", "author": "jimma", "createdAt": "2020-11-12T07:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzNDU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMTU5MA==", "url": "https://github.com/wildfly/wildfly/pull/13684#discussion_r521901590", "bodyText": "Caused by: javax.xml.parsers.FactoryConfigurationError: Provider com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl could not be instantiated: java.security.AccessControlException: WFSM000001: Permission check failed (permission \"(\"java.lang.RuntimePermission\" \"accessClassInPackage.com.sun.org.apache.xerces.internal.jaxp\")\" in code source \"(vfs:/content/jaxws-basic-ejb.jar <no signer certificates>)\" of \"ModuleClassLoader for Module \"deployment.jaxws-basic-ejb.jar\" from Service Module Loader\")\n\tat javax.xml.parsers.DocumentBuilderFactory.newInstance(Unknown Source)\n\tat com.sun.xml.messaging.saaj.soap.SOAPDocumentImpl.createDocument(SOAPDocumentImpl.java:105)\n\tat com.sun.xml.messaging.saaj.soap.SOAPDocumentImpl.<init>(SOAPDocumentImpl.java:99)\n\tat com.sun.xml.messaging.saaj.soap.SOAPPartImpl.<init>(SOAPPartImpl.java:134)\n\tat com.sun.xml.messaging.saaj.soap.SOAPPartImpl.<init>(SOAPPartImpl.java:130)\n\tat com.sun.xml.messaging.saaj.soap.ver1_2.SOAPFactory1_2Impl.createDocument(SOAPFactory1_2Impl.java:59)\n\tat com.sun.xml.messaging.saaj.soap.ver1_2.SOAPFactory1_2Impl.createFault(SOAPFactory1_2Impl.java:76)\n\tat org.jboss.as.test.integration.ws.basic.EJBEndpoint.helloError(EJBEndpoint.java:72)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)\n\tat java.lang.reflect.Method.invoke(Method.java:508)\n\tat org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:509)\n\tat org.jboss.as.weld.interceptors.Jsr299BindingsInterceptor.delegateInterception(Jsr299BindingsInterceptor.java:79)\n\tat org.jboss.as.weld.interceptors.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:89)\n\tat org.jboss.as.weld.interceptors.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:102)\n\tat org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:40)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:53)\n\tat org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)\n\tat org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:422)\n\tat org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:252)", "author": "soul2zimate", "createdAt": "2020-11-12T07:57:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzNDU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwMzc0MA==", "url": "https://github.com/wildfly/wildfly/pull/13684#discussion_r525203740", "bodyText": "Thank you @soul2zimate. The comment addresses my concerns. \ud83d\udc4d\n@jimma I'll leave approving this PR to you. Please @ ping me when you do to decrease the chances it sits unmerged. Thanks!", "author": "bstansberry", "createdAt": "2020-11-17T14:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzNDU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTcxMTU0NA==", "url": "https://github.com/wildfly/wildfly/pull/13684#discussion_r525711544", "bodyText": "@bstansberry  This looks good to me. +1 to merge this .  Thanks @soul2zimate", "author": "jimma", "createdAt": "2020-11-18T03:12:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzNDU0NQ=="}], "type": "inlineReview"}, {"oid": "ac1a7deb259caa4a27338f109ec03f35747bc972", "url": "https://github.com/wildfly/wildfly/commit/ac1a7deb259caa4a27338f109ec03f35747bc972", "message": "WFLY-13056 Add missing permission to access internal jaxp packages for IBM JDK", "committedDate": "2020-11-12T04:09:43Z", "type": "forcePushed"}, {"oid": "aee988e5e16e942c2c0e5c284680266268703c8e", "url": "https://github.com/wildfly/wildfly/commit/aee988e5e16e942c2c0e5c284680266268703c8e", "message": "WFLY-13056 Add missing permission to access internal jaxp packages for IBM JDK", "committedDate": "2020-11-12T07:06:15Z", "type": "commit"}, {"oid": "aee988e5e16e942c2c0e5c284680266268703c8e", "url": "https://github.com/wildfly/wildfly/commit/aee988e5e16e942c2c0e5c284680266268703c8e", "message": "WFLY-13056 Add missing permission to access internal jaxp packages for IBM JDK", "committedDate": "2020-11-12T07:06:15Z", "type": "forcePushed"}]}