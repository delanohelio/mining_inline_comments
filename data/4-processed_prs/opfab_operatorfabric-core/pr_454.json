{"pr_number": 454, "pr_title": "[OC-968] Front : Add UI alert", "pr_createdAt": "2020-08-27T08:23:18Z", "pr_url": "https://github.com/opfab/operatorfabric-core/pull/454", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDU2Nw==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478340567", "bodyText": "rename it  : \"startCountDown()\"", "author": "freddidierRTE", "createdAt": "2020-08-27T11:17:09Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDIwMg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374202", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:21:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDkwMg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478340902", "bodyText": "console.log to remove", "author": "freddidierRTE", "createdAt": "2020-08-27T11:17:51Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDI2OQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374269", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDkwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTAxNQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341015", "bodyText": "console.log to remove", "author": "freddidierRTE", "createdAt": "2020-08-27T11:18:05Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDMxMQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374311", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTAxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTM0Mw==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341343", "bodyText": "console.log to remove", "author": "freddidierRTE", "createdAt": "2020-08-27T11:18:46Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDM0MA==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374340", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTM0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTQxNw==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341417", "bodyText": "console.log to remove", "author": "freddidierRTE", "createdAt": "2020-08-27T11:18:56Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3OTE2MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479379161", "bodyText": "ok", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:30:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTkzMw==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341933", "bodyText": "console.log to remove", "author": "freddidierRTE", "createdAt": "2020-08-27T11:19:58Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDM3MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374371", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTkzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0Mjk5NQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478342995", "bodyText": "REname : \"startCountdownWhenNecessary()\"", "author": "freddidierRTE", "createdAt": "2020-08-27T11:22:07Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDQzNg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374436", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0Mjk5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MzYxOQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478343619", "bodyText": "rename : getSecondsBeforeLttd()", "author": "freddidierRTE", "createdAt": "2020-08-27T11:23:24Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0NzIwMg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478347202", "bodyText": "I do not understand what this code is doing ?\nWhy not just make : leftTimeSeconds = new Date(this.calculateDiff()).getSeconds() ;", "author": "freddidierRTE", "createdAt": "2020-08-27T11:30:29Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDUyNg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374526", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0NzIwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyOTU2MA==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479429560", "bodyText": "yes in fact it is enough just to call the method without getSeconds (), because the method getSecondsBeforeLttd (), already returns the time second.\n    const leftTimeSeconds = this.getSecondsBeforeLttd() ;", "author": "taoufikbermaki", "createdAt": "2020-08-28T17:04:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0NzIwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0ODk4OQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478348989", "bodyText": "Why make a calculateDiff  , is it not sufficient to have CountdownStatus.done ?", "author": "freddidierRTE", "createdAt": "2020-08-27T11:34:10Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);\n+                this.stopCountDown();\n+            } else {\n+\n+                this.interval = setInterval(() => {\n+                    if (this.isTimeToStartCountDown()) {\n+                        this.startCountdownConfig();\n+                        clearInterval(this.interval);\n+                        return;\n+                    }\n+                }, 1000);\n+            }\n+        }\n+    }\n+\n+    stopCountDown() {\n+        this.stopTime = true;\n+        this.enableLastTimeToAct = true;\n+        this.disabledActionButton();\n+        this.countdown.stop();\n+    }\n+\n+    disabledActionButton() {\n+        console.log(`disabledActionButton >>>>> for process card ${this.lightCard.processInstanceId}`);\n+        this.store.dispatch(new UpdateLttd({ card: this.lightCard }));\n+    }\n+\n+\n+    handleEvent(e: CountdownEvent) {\n+\n+        if (this.calculateDiff() <= 0 && e.status === CountdownStatus.done) {", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyODQyMA==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479428420", "bodyText": "No, that's enough, because the CountdownComponent component starts with a letTime at 0 and automatically sends an event down at the start.", "author": "taoufikbermaki", "createdAt": "2020-08-28T17:02:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0ODk4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDA1MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478354051", "bodyText": "Variables not used", "author": "freddidierRTE", "createdAt": "2020-08-27T11:43:42Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -1,51 +1,82 @@\n /* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n- * See AUTHORS.txt\n- * This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this\n- * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n- * SPDX-License-Identifier: MPL-2.0\n- * This file is part of the OperatorFabric project.\n- */\n-\n-\n-\n-import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n-import {LightCard} from '@ofModel/light-card.model';\n-import {Router} from '@angular/router';\n-import {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n-import {Store} from '@ngrx/store';\n-import {AppState} from '@ofStore/index';\n-import {takeUntil} from 'rxjs/operators';\n-import {TimeService} from '@ofServices/time.service';\n-import {Subject} from 'rxjs';\n-import { ConfigService} from \"@ofServices/config.service\";\n+* See AUTHORS.txt\n+* This Source Code Form is subject to the terms of the Mozilla Public\n+* License, v. 2.0. If a copy of the MPL was not distributed with this\n+* file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+* SPDX-License-Identifier: MPL-2.0\n+* This file is part of the OperatorFabric project.\n+*/\n+\n+\n+\n+import { Component, Input, ViewChild, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\n+import { LightCard } from '@ofModel/light-card.model';\n+import { Router } from '@angular/router';\n+import { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { TimeService } from '@ofServices/time.service';\n+import { Subject } from 'rxjs';\n+import { ConfigService } from '@ofServices/config.service';\n import { AppService, PageType } from '@ofServices/app.service';\n+import { CountdownComponent, CountdownConfig, CountdownEvent, CountdownStatus } from 'ngx-countdown';\n+import { UpdateLttd } from '../../../../store/actions/card.actions';\n+import { User } from '@ofModel/user.model';\n+import { Card } from '@ofModel/card.model';\n+import { UserService } from '@ofServices/user.service';\n+import { takeUntil } from 'rxjs/operators';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+\n+\n \n @Component({\n     selector: 'of-card',\n     templateUrl: './card.component.html',\n     styleUrls: ['./card.component.scss']\n })\n export class CardComponent implements OnInit, OnDestroy {\n+    private counter: CountdownComponent;\n+    @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n+\n \n-    @Input() public open: boolean = false;\n+    @Input() public open = false;\n     @Input() public lightCard: LightCard;\n+    @Input() public userWithPerimeters: UserWithPerimeters;\n+\n+    card: Card;\n+    childCards: Card[];", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDU2MA==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374560", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:22:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDI5NQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478354295", "bodyText": "Variable endTime not used", "author": "freddidierRTE", "createdAt": "2020-08-27T11:44:10Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -1,51 +1,82 @@\n /* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n- * See AUTHORS.txt\n- * This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this\n- * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n- * SPDX-License-Identifier: MPL-2.0\n- * This file is part of the OperatorFabric project.\n- */\n-\n-\n-\n-import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n-import {LightCard} from '@ofModel/light-card.model';\n-import {Router} from '@angular/router';\n-import {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n-import {Store} from '@ngrx/store';\n-import {AppState} from '@ofStore/index';\n-import {takeUntil} from 'rxjs/operators';\n-import {TimeService} from '@ofServices/time.service';\n-import {Subject} from 'rxjs';\n-import { ConfigService} from \"@ofServices/config.service\";\n+* See AUTHORS.txt\n+* This Source Code Form is subject to the terms of the Mozilla Public\n+* License, v. 2.0. If a copy of the MPL was not distributed with this\n+* file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+* SPDX-License-Identifier: MPL-2.0\n+* This file is part of the OperatorFabric project.\n+*/\n+\n+\n+\n+import { Component, Input, ViewChild, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\n+import { LightCard } from '@ofModel/light-card.model';\n+import { Router } from '@angular/router';\n+import { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { TimeService } from '@ofServices/time.service';\n+import { Subject } from 'rxjs';\n+import { ConfigService } from '@ofServices/config.service';\n import { AppService, PageType } from '@ofServices/app.service';\n+import { CountdownComponent, CountdownConfig, CountdownEvent, CountdownStatus } from 'ngx-countdown';\n+import { UpdateLttd } from '../../../../store/actions/card.actions';\n+import { User } from '@ofModel/user.model';\n+import { Card } from '@ofModel/card.model';\n+import { UserService } from '@ofServices/user.service';\n+import { takeUntil } from 'rxjs/operators';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+\n+\n \n @Component({\n     selector: 'of-card',\n     templateUrl: './card.component.html',\n     styleUrls: ['./card.component.scss']\n })\n export class CardComponent implements OnInit, OnDestroy {\n+    private counter: CountdownComponent;\n+    @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n+\n \n-    @Input() public open: boolean = false;\n+    @Input() public open = false;\n     @Input() public lightCard: LightCard;\n+    @Input() public userWithPerimeters: UserWithPerimeters;\n+\n+    card: Card;\n+    childCards: Card[];\n     currentPath: any;\n+    user: User;\n+\n     protected _i18nPrefix: string;\n     dateToDisplay: string;\n \n+    entityUser: string;\n+    prettyConfig: CountdownConfig;\n+    enableLastTimeToAct = false;\n+    stopTime = false;\n+    endTime: number;", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NjkxMQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478356911", "bodyText": "Why using this global variable userWithPerimeters as it is only used in this method ?", "author": "freddidierRTE", "createdAt": "2020-08-27T11:48:50Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDYyMQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374621", "bodyText": "OK", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NjkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2MzYyNg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478363626", "bodyText": "Variable open never used", "author": "freddidierRTE", "createdAt": "2020-08-27T12:00:27Z", "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -75,6 +76,12 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n     @Input() user: User;\n     @Input() userWithPerimeters: UserWithPerimeters;\n     @Input() currentPath: string;\n+    @Input() public open = false;", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NTA0MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479375041", "bodyText": "it's not my code", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:22:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2MzYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzU1NQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478367555", "bodyText": "To get the lttd, you do not need to access light card , you can find the value in the current card :\ncard.lttd\nso the code for this method will be just :\nreturn this.lttdExpiredIsTrue || Math.floor((card.lttd - new Date().getTime()) / 1000) <= 0", "author": "freddidierRTE", "createdAt": "2020-08-27T12:07:00Z", "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -168,6 +181,16 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n         this.markAsRead();\n     }\n \n+    get lttdExpired(): boolean {\n+        this.store.select(fetchLightCard(this.card.id)).pipe(take(1))\n+        .subscribe((lightCard: LightCard) => {\n+            this.lttd = lightCard.lttd;\n+        });\n+\n+        return this.lttdExpiredIsTrue || Math.floor((this.lttd - new Date().getTime()) / 1000) <= 0;", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NTg1MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479375851", "bodyText": "ok", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzU1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDYwNg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479424606", "bodyText": "I agree to recover lttd from the card but must add the nullity test on lttd", "author": "taoufikbermaki", "createdAt": "2020-08-28T16:54:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2OTMwNw==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478369307", "bodyText": "Add unsubscribe when destroying the object", "author": "freddidierRTE", "createdAt": "2020-08-27T12:10:01Z", "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -131,7 +138,13 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n \n     ngOnInit() {\n \n-        if (this._appService.pageType === PageType.FEED) {\n+        this.lttdExpired$ = this.store.select(selectLttdExpired);\n+        this.subscription1$ = this.lttdExpired$.subscribe((result) => {", "originalCommit": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3ODYyMg==", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479378622", "bodyText": "I factor the code, I don't need this.lttdExpired$  anymore.", "author": "taoufikbermaki", "createdAt": "2020-08-28T15:29:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2OTMwNw=="}], "type": "inlineReview"}, {"oid": "783c22ee480678d20b8a81637de66343111e56f4", "url": "https://github.com/opfab/operatorfabric-core/commit/783c22ee480678d20b8a81637de66343111e56f4", "message": "[OC-968] Front : Add UI alert", "committedDate": "2020-08-28T00:14:09Z", "type": "forcePushed"}, {"oid": "176959d59a83b5142e3aeb16e1bb1b107b9e60d3", "url": "https://github.com/opfab/operatorfabric-core/commit/176959d59a83b5142e3aeb16e1bb1b107b9e60d3", "message": "[OC-968] Front : Add UI alert", "committedDate": "2020-08-28T17:05:30Z", "type": "forcePushed"}, {"oid": "b256e3411746f9364f2205625c7247ef9bdfa9bc", "url": "https://github.com/opfab/operatorfabric-core/commit/b256e3411746f9364f2205625c7247ef9bdfa9bc", "message": "[OC-968] Front : Add UI alert", "committedDate": "2020-09-03T17:00:04Z", "type": "forcePushed"}, {"oid": "5752ef7533b44e848663cebca38826fff047c1a2", "url": "https://github.com/opfab/operatorfabric-core/commit/5752ef7533b44e848663cebca38826fff047c1a2", "message": "[ OC-968 ] Front : Add UI alert last", "committedDate": "2020-09-07T02:51:17Z", "type": "forcePushed"}, {"oid": "0de164edf6b8eb80032b1e226779c69fcbea22d6", "url": "https://github.com/opfab/operatorfabric-core/commit/0de164edf6b8eb80032b1e226779c69fcbea22d6", "message": "[ OC-968 ] Front : Add UI alert last", "committedDate": "2020-09-07T10:00:34Z", "type": "commit"}, {"oid": "0de164edf6b8eb80032b1e226779c69fcbea22d6", "url": "https://github.com/opfab/operatorfabric-core/commit/0de164edf6b8eb80032b1e226779c69fcbea22d6", "message": "[ OC-968 ] Front : Add UI alert last", "committedDate": "2020-09-07T10:00:34Z", "type": "forcePushed"}, {"oid": "3ff1c11b03e0243693a1ffbbee0ddd372df3ee2f", "url": "https://github.com/opfab/operatorfabric-core/commit/3ff1c11b03e0243693a1ffbbee0ddd372df3ee2f", "message": "[OC-968] Minor correction\nand add lttd in karate test", "committedDate": "2020-09-07T15:52:30Z", "type": "commit"}]}