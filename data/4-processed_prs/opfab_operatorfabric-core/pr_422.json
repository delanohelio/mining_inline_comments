{"pr_number": 422, "pr_title": "[OC-1038] New card information", "pr_createdAt": "2020-07-20T13:26:47Z", "pr_url": "https://github.com/opfab/operatorfabric-core/pull/422", "timeline": [{"oid": "3efb1b038f8c89e25b743e746697f54634a647f6", "url": "https://github.com/opfab/operatorfabric-core/commit/3efb1b038f8c89e25b743e746697f54634a647f6", "message": "[OC-1038] New card information", "committedDate": "2020-07-21T13:15:42Z", "type": "forcePushed"}, {"oid": "01072205083c97fd0efdc65eb88d9538507b9f41", "url": "https://github.com/opfab/operatorfabric-core/commit/01072205083c97fd0efdc65eb88d9538507b9f41", "message": "[OC-1038] New card information", "committedDate": "2020-07-22T13:58:24Z", "type": "commit"}, {"oid": "01072205083c97fd0efdc65eb88d9538507b9f41", "url": "https://github.com/opfab/operatorfabric-core/commit/01072205083c97fd0efdc65eb88d9538507b9f41", "message": "[OC-1038] New card information", "committedDate": "2020-07-22T13:58:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTAxOA==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r460971018", "bodyText": "The new description seems to match what the code is actually doing, but this code hasn't changed in the PR, so I just wanted to make sure that it's normal?", "author": "AlexGuironnetRTE", "createdAt": "2020-07-27T15:21:59Z", "path": "services/core/cards-publication/src/main/modeling/swagger.yaml", "diffHunk": "@@ -388,7 +388,10 @@ definitions:\n         description: Business data\n       hasBeenAcknowledged:\n         type: boolean\n-        description: Is true if the card was acknowledged at least by one user\n+        description: Is true if the card was acknowledged by current user", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5MTY5Mg==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461391692", "bodyText": "The initial description comes from a misunderstanding(at that time) of ack working. When i submitted the related PR i just forgot to fix that description.", "author": "vitorz", "createdAt": "2020-07-28T07:59:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTAxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1ODIwMw==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461458203", "bodyText": "Thanks!", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T09:47:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTMxMQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r460971311", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    description: Is true if the card was acknoledged by current user\n          \n          \n            \n                    description: Is true if the card was acknowledged by current user\n          \n      \n    \n    \n  \n\nThe new description seems to match what the code is actually doing, but this code hasn't changed in the PR, so I just wanted to make sure that it's normal?", "author": "AlexGuironnetRTE", "createdAt": "2020-07-27T15:22:23Z", "path": "services/core/cards-publication/src/main/modeling/swagger.yaml", "diffHunk": "@@ -537,7 +540,10 @@ definitions:\n           $ref: '#/definitions/TimeSpan'\n       hasBeenAcknowledged:\n         type: boolean\n-        description: Is true if the card was acknoledged at least by one user\n+        description: Is true if the card was acknoledged by current user", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5MjkzMw==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461392933", "bodyText": "It's related to the previous issue you remarked (the one of ack), it's the typical blind \"copy and paste\".", "author": "vitorz", "createdAt": "2020-07-28T08:01:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTMxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MjY1Nw==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r460972657", "bodyText": "It does make more sense for it to be uid, but userAcknowledgement was not normally in the scope of this PR, has the code been updated too ?", "author": "AlexGuironnetRTE", "createdAt": "2020-07-27T15:24:15Z", "path": "services/core/cards-publication/src/main/modeling/swagger.yaml", "diffHunk": "@@ -908,13 +914,13 @@ paths:\n           description: Authentication required\n         '403':\n           description: Forbidden - User doesn't have any group\n-  '/cards/userAcknowledgement/{id}':\n+  '/cards/userAcknowledgement/{uid}':", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5NjMzOA==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461396338", "bodyText": "yes the code is ok(there was a change request), because for the controller we don't use generated swagger interface, this modification has no impact in the code, and it's just to have everything consistent with the real working of the service.", "author": "vitorz", "createdAt": "2020-07-28T08:07:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MjY1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2ODc3OQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461368779", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #get card with user tso1-operator and check not containing userAcks items\n          \n          \n            \n            #get card with user tso1-operator and check it hasn't been read yet", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:17:28Z", "path": "src/test/api/karate/cards/cardsUserRead.feature", "diffHunk": "@@ -0,0 +1,97 @@\n+Feature: CardsUserRead\r\n+\r\n+\r\n+  Background:\r\n+\r\n+    * def signIn = callonce read('../common/getToken.feature') { username: 'tso1-operator'}\r\n+    * def authToken = signIn.authToken\r\n+    * def signIn2 = callonce read('../common/./getToken.feature') { username: 'tso2-operator'}\r\n+    * def authToken2 = signIn2.authToken\r\n+\r\n+    Scenario: CardsUserAcknowledgement\r\n+\r\n+    * def card =\r\n+\"\"\"\r\n+{\r\n+\t\"publisher\" : \"api_test\",\r\n+\t\"processVersion\" : \"1\",\r\n+\t\"process\"  :\"api_test\",\r\n+\t\"processInstanceId\" : \"process1\",\r\n+\t\"state\": \"messageState\",\r\n+\t\"recipient\" : {\r\n+\t\t\t\t\"type\" : \"GROUP\",\r\n+\t\t\t\t\"identity\" : \"TRANS\"\r\n+\t\t\t},\r\n+\t\"severity\" : \"INFORMATION\",\r\n+\t\"startDate\" : 1553186770681,\r\n+\t\"summary\" : {\"key\" : \"defaultProcess.summary\"},\r\n+\t\"title\" : {\"key\" : \"defaultProcess.title\"},\r\n+\t\"data\" : {\"message\":\"a message\"}\r\n+}\r\n+\"\"\"\r\n+\r\n+    \r\n+\r\n+# Push card\r\n+    Given url opfabPublishCardUrl + 'cards'\r\n+    #And header Authorization = 'Bearer ' + authToken\r\n+    And request card\r\n+    When method post\r\n+    Then status 201\r\n+    And match response.count == 1\r\n+    \r\n+#get card with user tso1-operator and check not containing userAcks items\r", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2OTAwMQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461369001", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #make an acknoledgement to the card with tso1\n          \n          \n            \n            #Signal that card has been read card by tso1-operator", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:17:55Z", "path": "src/test/api/karate/cards/cardsUserRead.feature", "diffHunk": "@@ -0,0 +1,97 @@\n+Feature: CardsUserRead\r\n+\r\n+\r\n+  Background:\r\n+\r\n+    * def signIn = callonce read('../common/getToken.feature') { username: 'tso1-operator'}\r\n+    * def authToken = signIn.authToken\r\n+    * def signIn2 = callonce read('../common/./getToken.feature') { username: 'tso2-operator'}\r\n+    * def authToken2 = signIn2.authToken\r\n+\r\n+    Scenario: CardsUserAcknowledgement\r\n+\r\n+    * def card =\r\n+\"\"\"\r\n+{\r\n+\t\"publisher\" : \"api_test\",\r\n+\t\"processVersion\" : \"1\",\r\n+\t\"process\"  :\"api_test\",\r\n+\t\"processInstanceId\" : \"process1\",\r\n+\t\"state\": \"messageState\",\r\n+\t\"recipient\" : {\r\n+\t\t\t\t\"type\" : \"GROUP\",\r\n+\t\t\t\t\"identity\" : \"TRANS\"\r\n+\t\t\t},\r\n+\t\"severity\" : \"INFORMATION\",\r\n+\t\"startDate\" : 1553186770681,\r\n+\t\"summary\" : {\"key\" : \"defaultProcess.summary\"},\r\n+\t\"title\" : {\"key\" : \"defaultProcess.title\"},\r\n+\t\"data\" : {\"message\":\"a message\"}\r\n+}\r\n+\"\"\"\r\n+\r\n+    \r\n+\r\n+# Push card\r\n+    Given url opfabPublishCardUrl + 'cards'\r\n+    #And header Authorization = 'Bearer ' + authToken\r\n+    And request card\r\n+    When method post\r\n+    Then status 201\r\n+    And match response.count == 1\r\n+    \r\n+#get card with user tso1-operator and check not containing userAcks items\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == false\r\n+    And def uid = response.card.uid\r\n+\r\n+\r\n+#make an acknoledgement to the card with tso1\r", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2OTE1OA==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461369158", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #get card with user tso1-operator and check containing his ack\n          \n          \n            \n            #get card with user tso1-operator and check hasBeenRead is set to true", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:18:16Z", "path": "src/test/api/karate/cards/cardsUserRead.feature", "diffHunk": "@@ -0,0 +1,97 @@\n+Feature: CardsUserRead\r\n+\r\n+\r\n+  Background:\r\n+\r\n+    * def signIn = callonce read('../common/getToken.feature') { username: 'tso1-operator'}\r\n+    * def authToken = signIn.authToken\r\n+    * def signIn2 = callonce read('../common/./getToken.feature') { username: 'tso2-operator'}\r\n+    * def authToken2 = signIn2.authToken\r\n+\r\n+    Scenario: CardsUserAcknowledgement\r\n+\r\n+    * def card =\r\n+\"\"\"\r\n+{\r\n+\t\"publisher\" : \"api_test\",\r\n+\t\"processVersion\" : \"1\",\r\n+\t\"process\"  :\"api_test\",\r\n+\t\"processInstanceId\" : \"process1\",\r\n+\t\"state\": \"messageState\",\r\n+\t\"recipient\" : {\r\n+\t\t\t\t\"type\" : \"GROUP\",\r\n+\t\t\t\t\"identity\" : \"TRANS\"\r\n+\t\t\t},\r\n+\t\"severity\" : \"INFORMATION\",\r\n+\t\"startDate\" : 1553186770681,\r\n+\t\"summary\" : {\"key\" : \"defaultProcess.summary\"},\r\n+\t\"title\" : {\"key\" : \"defaultProcess.title\"},\r\n+\t\"data\" : {\"message\":\"a message\"}\r\n+}\r\n+\"\"\"\r\n+\r\n+    \r\n+\r\n+# Push card\r\n+    Given url opfabPublishCardUrl + 'cards'\r\n+    #And header Authorization = 'Bearer ' + authToken\r\n+    And request card\r\n+    When method post\r\n+    Then status 201\r\n+    And match response.count == 1\r\n+    \r\n+#get card with user tso1-operator and check not containing userAcks items\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == false\r\n+    And def uid = response.card.uid\r\n+\r\n+\r\n+#make an acknoledgement to the card with tso1\r\n+    Given url opfabUrl + 'cardspub/cards/userCardRead/' + uid\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    And request ''\r\n+    When method post\r\n+    Then status 201\r\n+\r\n+#get card with user tso1-operator and check containing his ack\r", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2OTMwNQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461369305", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #get card with user tso2-operator and check containing no ack for him\n          \n          \n            \n            #get card with user tso2-operator and check hasBeenRead is set to false", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:18:34Z", "path": "src/test/api/karate/cards/cardsUserRead.feature", "diffHunk": "@@ -0,0 +1,97 @@\n+Feature: CardsUserRead\r\n+\r\n+\r\n+  Background:\r\n+\r\n+    * def signIn = callonce read('../common/getToken.feature') { username: 'tso1-operator'}\r\n+    * def authToken = signIn.authToken\r\n+    * def signIn2 = callonce read('../common/./getToken.feature') { username: 'tso2-operator'}\r\n+    * def authToken2 = signIn2.authToken\r\n+\r\n+    Scenario: CardsUserAcknowledgement\r\n+\r\n+    * def card =\r\n+\"\"\"\r\n+{\r\n+\t\"publisher\" : \"api_test\",\r\n+\t\"processVersion\" : \"1\",\r\n+\t\"process\"  :\"api_test\",\r\n+\t\"processInstanceId\" : \"process1\",\r\n+\t\"state\": \"messageState\",\r\n+\t\"recipient\" : {\r\n+\t\t\t\t\"type\" : \"GROUP\",\r\n+\t\t\t\t\"identity\" : \"TRANS\"\r\n+\t\t\t},\r\n+\t\"severity\" : \"INFORMATION\",\r\n+\t\"startDate\" : 1553186770681,\r\n+\t\"summary\" : {\"key\" : \"defaultProcess.summary\"},\r\n+\t\"title\" : {\"key\" : \"defaultProcess.title\"},\r\n+\t\"data\" : {\"message\":\"a message\"}\r\n+}\r\n+\"\"\"\r\n+\r\n+    \r\n+\r\n+# Push card\r\n+    Given url opfabPublishCardUrl + 'cards'\r\n+    #And header Authorization = 'Bearer ' + authToken\r\n+    And request card\r\n+    When method post\r\n+    Then status 201\r\n+    And match response.count == 1\r\n+    \r\n+#get card with user tso1-operator and check not containing userAcks items\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == false\r\n+    And def uid = response.card.uid\r\n+\r\n+\r\n+#make an acknoledgement to the card with tso1\r\n+    Given url opfabUrl + 'cardspub/cards/userCardRead/' + uid\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    And request ''\r\n+    When method post\r\n+    Then status 201\r\n+\r\n+#get card with user tso1-operator and check containing his ack\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == true\r\n+    And match response.card.uid == uid\r\n+\r\n+#get card with user tso2-operator and check containing no ack for him\r", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2OTQ0OQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461369449", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #make a second acknoledgement to the card with tso2\n          \n          \n            \n            #Signal that card has been read card by tso2-operator", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:18:55Z", "path": "src/test/api/karate/cards/cardsUserRead.feature", "diffHunk": "@@ -0,0 +1,97 @@\n+Feature: CardsUserRead\r\n+\r\n+\r\n+  Background:\r\n+\r\n+    * def signIn = callonce read('../common/getToken.feature') { username: 'tso1-operator'}\r\n+    * def authToken = signIn.authToken\r\n+    * def signIn2 = callonce read('../common/./getToken.feature') { username: 'tso2-operator'}\r\n+    * def authToken2 = signIn2.authToken\r\n+\r\n+    Scenario: CardsUserAcknowledgement\r\n+\r\n+    * def card =\r\n+\"\"\"\r\n+{\r\n+\t\"publisher\" : \"api_test\",\r\n+\t\"processVersion\" : \"1\",\r\n+\t\"process\"  :\"api_test\",\r\n+\t\"processInstanceId\" : \"process1\",\r\n+\t\"state\": \"messageState\",\r\n+\t\"recipient\" : {\r\n+\t\t\t\t\"type\" : \"GROUP\",\r\n+\t\t\t\t\"identity\" : \"TRANS\"\r\n+\t\t\t},\r\n+\t\"severity\" : \"INFORMATION\",\r\n+\t\"startDate\" : 1553186770681,\r\n+\t\"summary\" : {\"key\" : \"defaultProcess.summary\"},\r\n+\t\"title\" : {\"key\" : \"defaultProcess.title\"},\r\n+\t\"data\" : {\"message\":\"a message\"}\r\n+}\r\n+\"\"\"\r\n+\r\n+    \r\n+\r\n+# Push card\r\n+    Given url opfabPublishCardUrl + 'cards'\r\n+    #And header Authorization = 'Bearer ' + authToken\r\n+    And request card\r\n+    When method post\r\n+    Then status 201\r\n+    And match response.count == 1\r\n+    \r\n+#get card with user tso1-operator and check not containing userAcks items\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == false\r\n+    And def uid = response.card.uid\r\n+\r\n+\r\n+#make an acknoledgement to the card with tso1\r\n+    Given url opfabUrl + 'cardspub/cards/userCardRead/' + uid\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    And request ''\r\n+    When method post\r\n+    Then status 201\r\n+\r\n+#get card with user tso1-operator and check containing his ack\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == true\r\n+    And match response.card.uid == uid\r\n+\r\n+#get card with user tso2-operator and check containing no ack for him\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken2\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == false\r\n+    And match response.card.uid == uid\r\n+\r\n+\r\n+#make a second acknoledgement to the card with tso2\r", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2OTc1NA==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461369754", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #get card with user tso1-operator and check containing his ack\n          \n          \n            \n            #get card with user tso1-operator and check hasBeenRead is still set to true", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:19:27Z", "path": "src/test/api/karate/cards/cardsUserRead.feature", "diffHunk": "@@ -0,0 +1,97 @@\n+Feature: CardsUserRead\r\n+\r\n+\r\n+  Background:\r\n+\r\n+    * def signIn = callonce read('../common/getToken.feature') { username: 'tso1-operator'}\r\n+    * def authToken = signIn.authToken\r\n+    * def signIn2 = callonce read('../common/./getToken.feature') { username: 'tso2-operator'}\r\n+    * def authToken2 = signIn2.authToken\r\n+\r\n+    Scenario: CardsUserAcknowledgement\r\n+\r\n+    * def card =\r\n+\"\"\"\r\n+{\r\n+\t\"publisher\" : \"api_test\",\r\n+\t\"processVersion\" : \"1\",\r\n+\t\"process\"  :\"api_test\",\r\n+\t\"processInstanceId\" : \"process1\",\r\n+\t\"state\": \"messageState\",\r\n+\t\"recipient\" : {\r\n+\t\t\t\t\"type\" : \"GROUP\",\r\n+\t\t\t\t\"identity\" : \"TRANS\"\r\n+\t\t\t},\r\n+\t\"severity\" : \"INFORMATION\",\r\n+\t\"startDate\" : 1553186770681,\r\n+\t\"summary\" : {\"key\" : \"defaultProcess.summary\"},\r\n+\t\"title\" : {\"key\" : \"defaultProcess.title\"},\r\n+\t\"data\" : {\"message\":\"a message\"}\r\n+}\r\n+\"\"\"\r\n+\r\n+    \r\n+\r\n+# Push card\r\n+    Given url opfabPublishCardUrl + 'cards'\r\n+    #And header Authorization = 'Bearer ' + authToken\r\n+    And request card\r\n+    When method post\r\n+    Then status 201\r\n+    And match response.count == 1\r\n+    \r\n+#get card with user tso1-operator and check not containing userAcks items\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == false\r\n+    And def uid = response.card.uid\r\n+\r\n+\r\n+#make an acknoledgement to the card with tso1\r\n+    Given url opfabUrl + 'cardspub/cards/userCardRead/' + uid\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    And request ''\r\n+    When method post\r\n+    Then status 201\r\n+\r\n+#get card with user tso1-operator and check containing his ack\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == true\r\n+    And match response.card.uid == uid\r\n+\r\n+#get card with user tso2-operator and check containing no ack for him\r\n+    Given url opfabUrl + 'cards/cards/api_test.process1'\r\n+    And header Authorization = 'Bearer ' + authToken2\r\n+    When method get\r\n+    Then status 200\r\n+    And match response.card.hasBeenRead == false\r\n+    And match response.card.uid == uid\r\n+\r\n+\r\n+#make a second acknoledgement to the card with tso2\r\n+    Given url opfabUrl + 'cardspub/cards/userCardRead/' + uid\r\n+    And header Authorization = 'Bearer ' + authToken2\r\n+    And request ''\r\n+    When method post\r\n+    Then status 201\r\n+\r\n+#get card with user tso1-operator and check containing his ack\r", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4MTYxOA==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461381618", "bodyText": "I discussed it with @rlg-rte, he said that was an good way to go around the test issue, he just said that maybe we could add the routerState property directly on the routerSpy object so no copy is needed.", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:41:42Z", "path": "ui/main/src/app/modules/cards/components/card/card.component.spec.ts", "diffHunk": "@@ -40,6 +40,8 @@ describe('CardComponent', () => {\n \n     beforeEach(async(() => {\n         const routerSpy = createSpyObj('Router', ['navigate']);\n+        let myrout = {... routerSpy};", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4NDc4OA==", "url": "https://github.com/opfab/operatorfabric-core/pull/422#discussion_r461384788", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * POST userAcknowledgement for a card updating the card\n          \n          \n            \n                 * @param card Id to create publisher\n          \n          \n            \n                 * POST userCardRead for a card\n          \n          \n            \n                 * @param cardUid of the card that has been read", "author": "AlexGuironnetRTE", "createdAt": "2020-07-28T07:47:19Z", "path": "services/core/cards-publication/src/main/java/org/lfenergy/operatorfabric/cards/publication/controllers/CardController.java", "diffHunk": "@@ -83,6 +83,23 @@ public void deleteCards(@PathVariable String processInstanceId){\n     \t\t}\n \t\t}).then();\n     }\n+    \n+    /**\n+     * POST userAcknowledgement for a card updating the card\n+     * @param card Id to create publisher", "originalCommit": "01072205083c97fd0efdc65eb88d9538507b9f41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f7f2e940a724a187ba503a0d588d2d6ff932b32a", "url": "https://github.com/opfab/operatorfabric-core/commit/f7f2e940a724a187ba503a0d588d2d6ff932b32a", "message": "Update services/core/cards-publication/src/main/java/org/lfenergy/operatorfabric/cards/publication/controllers/CardController.java\n\nCo-authored-by: AlexGuironnetRTE <45459065+AlexGuironnetRTE@users.noreply.github.com>", "committedDate": "2020-07-28T08:45:20Z", "type": "commit"}, {"oid": "626f7fd7bdf48c55f35ffa38b457e27df5d2a846", "url": "https://github.com/opfab/operatorfabric-core/commit/626f7fd7bdf48c55f35ffa38b457e27df5d2a846", "message": "Update src/test/api/karate/cards/cardsUserRead.feature\n\nCo-authored-by: AlexGuironnetRTE <45459065+AlexGuironnetRTE@users.noreply.github.com>", "committedDate": "2020-07-28T08:47:24Z", "type": "commit"}, {"oid": "fa10aae9ff62d4698e04b73a9ddd8638b6fdc611", "url": "https://github.com/opfab/operatorfabric-core/commit/fa10aae9ff62d4698e04b73a9ddd8638b6fdc611", "message": "Update src/test/api/karate/cards/cardsUserRead.feature\n\nCo-authored-by: AlexGuironnetRTE <45459065+AlexGuironnetRTE@users.noreply.github.com>", "committedDate": "2020-07-28T08:49:56Z", "type": "commit"}, {"oid": "ea7b7e70c2afba0f5afe458b139553e2057ec653", "url": "https://github.com/opfab/operatorfabric-core/commit/ea7b7e70c2afba0f5afe458b139553e2057ec653", "message": "Update src/test/api/karate/cards/cardsUserRead.feature\n\nCo-authored-by: AlexGuironnetRTE <45459065+AlexGuironnetRTE@users.noreply.github.com>", "committedDate": "2020-07-28T08:53:17Z", "type": "commit"}, {"oid": "c3bc5ffc97af47f8ba05d2d7d815071bb21144dc", "url": "https://github.com/opfab/operatorfabric-core/commit/c3bc5ffc97af47f8ba05d2d7d815071bb21144dc", "message": "Update src/test/api/karate/cards/cardsUserRead.feature\n\nCo-authored-by: AlexGuironnetRTE <45459065+AlexGuironnetRTE@users.noreply.github.com>", "committedDate": "2020-07-28T08:53:50Z", "type": "commit"}, {"oid": "ede9a87b760040d81dc918b2b3bcc856782f945f", "url": "https://github.com/opfab/operatorfabric-core/commit/ede9a87b760040d81dc918b2b3bcc856782f945f", "message": "Update src/test/api/karate/cards/cardsUserRead.feature\n\nCo-authored-by: AlexGuironnetRTE <45459065+AlexGuironnetRTE@users.noreply.github.com>", "committedDate": "2020-07-28T08:54:48Z", "type": "commit"}, {"oid": "559b145db4dbaf05578c777cff9c7d33ac24cee4", "url": "https://github.com/opfab/operatorfabric-core/commit/559b145db4dbaf05578c777cff9c7d33ac24cee4", "message": "Update src/test/api/karate/cards/cardsUserRead.feature\n\nCo-authored-by: AlexGuironnetRTE <45459065+AlexGuironnetRTE@users.noreply.github.com>", "committedDate": "2020-07-28T08:55:17Z", "type": "commit"}, {"oid": "21bdd31a02c98ac3c0ab6a7cdd7b310b73f4ae01", "url": "https://github.com/opfab/operatorfabric-core/commit/21bdd31a02c98ac3c0ab6a7cdd7b310b73f4ae01", "message": "Update cardsUserRead.feature\n\nfix scenario name", "committedDate": "2020-07-28T08:58:20Z", "type": "commit"}]}