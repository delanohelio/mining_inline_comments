{"pr_number": 521, "pr_title": "[OC-1088] : complete administration module groups+entites", "pr_createdAt": "2020-10-12T14:36:47Z", "pr_url": "https://github.com/opfab/operatorfabric-core/pull/521", "timeline": [{"oid": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "url": "https://github.com/opfab/operatorfabric-core/commit/e14841ab65afd2489646ec48c6065c7b23d4a8f2", "message": "[OC-1088] : complete administration module groups+entites", "committedDate": "2020-10-12T15:31:23Z", "type": "forcePushed"}, {"oid": "3720e728d94a6103b39d604eb0fa710e736974d4", "url": "https://github.com/opfab/operatorfabric-core/commit/3720e728d94a6103b39d604eb0fa710e736974d4", "message": "[OC-1088] : complete administration module groups+entites", "committedDate": "2020-10-12T16:27:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3Njk2NA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503376964", "bodyText": "Put it in comment #", "author": "freddidierRTE", "createdAt": "2020-10-12T15:35:46Z", "path": "config/dev/users-dev.yml", "diffHunk": "@@ -66,3 +66,6 @@ operatorfabric.users.default:\n   user-settings:\n     - login: rte-operator\n       description: Da Operator Rulez\n+logging:\n+  level:\n+    ROOT: DEBUG", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkyOTI4MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503929281", "bodyText": "done", "author": "bendaoudmba", "createdAt": "2020-10-13T12:59:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3Njk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3NzM2NA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503377364", "bodyText": "Remove console.log", "author": "freddidierRTE", "createdAt": "2020-10-12T15:36:31Z", "path": "ui/main/src/app/modules/admin/admin.component.ts", "diffHunk": "@@ -11,15 +12,15 @@ import { Observable } from 'rxjs';\n })\n export class AdminComponent implements OnInit {\n \n-  activeTab = 'users';\n+  activeTab: string;\n   usersLabel: string;\n   entitiesLabel: string;\n   groupsLabel: string;\n \n-  constructor( protected store: Store<AppState>, protected translate: TranslateService) {\n+  constructor( private route: ActivatedRoute, protected store: Store<AppState>, protected translate: TranslateService) {\n      this.getLocale().subscribe(locale => {\n-      console.log(locale);\n       this.translate.use(locale);\n+      console.log(translate.currentLang);", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkzMDEwNg==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503930106", "bodyText": "done", "author": "bendaoudmba", "createdAt": "2020-10-13T13:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3NzM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3OTgxNQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503379815", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:40:42Z", "path": "ui/main/src/app/modules/admin/components/ngtable/entities/of-entities-table.component.ts", "diffHunk": "@@ -0,0 +1,105 @@\n+import { Component, OnInit } from '@angular/core';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { Store } from '@ngrx/store';\n+import { TranslateService } from '@ngx-translate/core';\n+import { EntitiesService } from '@ofServices/entities.service';\n+import { AppState } from '@ofStore/index';", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4MDM3Mw==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503380373", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:41:41Z", "path": "ui/main/src/app/modules/admin/admin.component.ts", "diffHunk": "@@ -1,4 +1,5 @@\n import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n import { Store } from '@ngrx/store';", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4MDY4Mw==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503380683", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:42:13Z", "path": "ui/main/src/app/modules/admin/components/editmodal/groups-entities/edit-entity-group-modal.component.ts", "diffHunk": "@@ -0,0 +1,92 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n+import { EntitiesService } from '@ofServices/entities.service';\n+import { GroupsService } from '@ofServices/groups.service';\n+import { DataTableShareService } from 'app/modules/admin/services/data.service';\n+import { IdValidatorService } from 'app/modules/admin/services/id-validator.service';", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4MDg0NA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503380844", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:42:31Z", "path": "ui/main/src/app/modules/admin/components/editmodal/groups-entities/edit-group-modal.component.html", "diffHunk": "@@ -0,0 +1,55 @@\n+<!-- Modal-content -->\n+<div class=\"modal-header bg-dark\">\n+  <h5 class=\"modal-title\" *ngIf=\"row\">{{row.id}}</h5>\n+  <h5 class=\"modal-title\" *ngIf=\"!row && type==='group'\" translate>admin.input.group.add</h5>\n+  <h5 class=\"modal-title\" *ngIf=\"!row && type==='entity'\" translate>admin.input.entity.add</h5>\n+  <button (click)=\"activeModal.dismiss('Cross click')\" type=\"button\" class=\"close\" data-dismiss=\"modal\"", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4MDk5OA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503380998", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:42:48Z", "path": "ui/main/src/app/modules/admin/components/editmodal/users/edit-user-modal.component.html", "diffHunk": "@@ -1,7 +1,7 @@\n <!-- Modal-content -->\n <div class=\"modal-header bg-dark\">\n-  <h5 class=\"modal-title\" *ngIf=\"user\">{{user.login}}</h5>\n-  <h5 class=\"modal-title\" *ngIf=\"!user\" translate>admin.input.user.add</h5>\n+  <h5 class=\"modal-title\" *ngIf=\"row\">{{row.login}}</h5>\n+  <h5 class=\"modal-title\" *ngIf=\"!row\" translate>admin.input.user.add</h5>", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4MTQwOA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503381408", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:43:27Z", "path": "ui/main/src/app/modules/admin/components/ngtable/groups/of-groups-table.component.ts", "diffHunk": "@@ -0,0 +1,104 @@\n+import { Component, OnInit } from '@angular/core';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { Store } from '@ngrx/store';\n+import { TranslateService } from '@ngx-translate/core';\n+import { GroupsService } from '@ofServices/groups.service';\n+import { AppState } from '@ofStore/index';\n+import { AppError } from 'app/common/error/app-error';", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4MTYwOA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503381608", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:43:51Z", "path": "ui/main/src/app/modules/admin/components/ngtable/oftable/oftable.component.html", "diffHunk": "@@ -0,0 +1,48 @@\n+<div class=\"row\">\n+  <div class=\"col-md-4\">\n+    <input *ngIf=\"config.filtering\" placeholder={{filterAll}}\n+           [ngTableFiltering]=\"config.filtering\"\n+           class=\"form-control\"\n+           (tableChanged)=\"onChangeTable(config)\"/>\n+  </div>\n+  <div><a class=\"btn btn-primary\" (click)=\"createNewItem()\" id =\"addUser\">", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4NjkyNA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503386924", "bodyText": "Close the subscription when closing component .\nFor an example see file operatorfabric-core/ui/main/src/app/components/share/datetime-filter/datetime-filter.component.ts :\n this.datetimeForm.valueChanges.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(fn);", "author": "freddidierRTE", "createdAt": "2020-10-12T15:53:03Z", "path": "ui/main/src/app/modules/admin/components/ngtable/oftable/oftable.component.ts", "diffHunk": "@@ -86,11 +107,38 @@ export class OfTableComponent implements OnInit {\n     this.length = sortedData.length;\n   }\n \n-  deleteItem(row: any) {\n-    this.crudService.deleteById(row.login).subscribe(() => {\n-      const itemIndex = this.data.findIndex((item) => item.login === row.login);\n+  deleteItem(id: string, key: string): Subscription {\n+    return this.crudService.deleteById(id).subscribe(() => {\n+      const itemIndex = this.data.findIndex((item) => item[key] === id);\n       this.data.splice(itemIndex, 1);\n       this.onChangeTable(this.config);\n+      this.dataService.changeUsers(true);\n+\n+    });\n+  }\n+\n+  getObservableRow(): Observable<any> {\n+    return null;\n+  }\n+\n+  protected subscribeTable(): void {\n+    //refresh edited row event\n+    this.getObservableRow().subscribe((row) => {\n+      if (row) {\n+        let itemIndex = -1;", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk4NTk1OQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503985959", "bodyText": "done", "author": "bendaoudmba", "createdAt": "2020-10-13T14:12:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4NjkyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4NzIxOQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503387219", "bodyText": "Add copyright header", "author": "freddidierRTE", "createdAt": "2020-10-12T15:53:33Z", "path": "ui/main/src/app/modules/admin/components/ngtable/oftable/oftable.component.ts", "diffHunk": "@@ -2,14 +2,14 @@ import { Component, OnInit } from '@angular/core';\n import {\n   NgbModalOptions,\n   ModalDismissReasons,", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzEyNA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503397124", "bodyText": "This regular call to the service is really heavy on back , we shoud find a way of caching the information . each time we press a key the back is called", "author": "freddidierRTE", "createdAt": "2020-10-12T16:10:44Z", "path": "ui/main/src/app/modules/admin/services/id-validator.service.ts", "diffHunk": "@@ -0,0 +1,28 @@\n+import { AbstractControl, ValidationErrors } from '@angular/forms';\n+import { CrudService } from '@ofServices/crud-service';\n+\n+\n+export class IdValidatorService {\n+\n+  constructor(\n+    private crudService: CrudService) {\n+  }\n+\n+  isIdAvailable(control: AbstractControl): Promise<ValidationErrors> | null {\n+    return new Promise((resolve, reject) => {\n+      this.crudService.getAll().subscribe((response) => {\n+        if (response.filter(\n+          row => {\n+            let id: string;\n+            if (row.login) id = row.login;\n+            else id = row.id;\n+            return id.toLowerCase().trim() === (control.value as string).toLowerCase().trim();\n+          }).length > 0) {\n+          resolve({ shouldbeUnique: true });\n+        } else {\n+          resolve(null);\n+        }\n+      });", "originalCommit": "e14841ab65afd2489646ec48c6065c7b23d4a8f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5MzI2Mg==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503993262", "bodyText": "==>this is an asyn validator, so no frontend impact\n==>better to not use any caching, it can be source of problem when simultaneous admin operator  are working,\nbut we can improive this by adding a new more appropriate endpoint on backend to check if an id is available and returning a boolean, it would be more lightweight,", "author": "bendaoudmba", "createdAt": "2020-10-13T14:21:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzEyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwNjQ1OA==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r503706458", "bodyText": "Duplication of code with other classes .\nSee how to set stuff in the parent class  and create a method instead of repeating  this blocks :\n title: translations['admin.input.description'], name: 'description', filtering: { filterString: '', placeholder: translations['admin.input.user.filter'] + translations['admin.input.description'] }", "author": "freddidierRTE", "createdAt": "2020-10-13T06:52:56Z", "path": "ui/main/src/app/modules/admin/components/ngtable/groups/of-groups-table.component.ts", "diffHunk": "@@ -0,0 +1,104 @@\n+import { Component, OnInit } from '@angular/core';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { Store } from '@ngrx/store';\n+import { TranslateService } from '@ngx-translate/core';\n+import { GroupsService } from '@ofServices/groups.service';\n+import { AppState } from '@ofStore/index';\n+import { AppError } from 'app/common/error/app-error';\n+import { ConfirmationDialogService } from 'app/modules/admin/services/confirmation-dialog.service';\n+import { DataTableShareService } from 'app/modules/admin/services/data.service';\n+import { Observable, throwError } from 'rxjs';\n+import { EditEntityGroupModalComponent } from '../../editmodal/groups-entities/edit-entity-group-modal.component';\n+import { OfTableComponent } from '../oftable/oftable.component';\n+\n+@Component({\n+  selector: 'of-groups-table',\n+  templateUrl: '../oftable/oftable.component.html'\n+})\n+export class OfGroupsTableComponent extends OfTableComponent implements OnInit {\n+\n+  modalComponent = EditEntityGroupModalComponent;\n+  typeModal = 'group';\n+  constructor(\n+    protected crudService: GroupsService,\n+    protected modalService: NgbModal,\n+    protected dataService: DataTableShareService,\n+    protected translate: TranslateService,\n+    private confirmationDialogService: ConfirmationDialogService,\n+    protected store: Store<AppState>\n+  ) {\n+    super(modalService, dataService, store);\n+    this.crudService = crudService;\n+    this.config.sorting = { columns: this.columns };\n+    this.getLocale().subscribe(locale => {\n+      this.translate.use(locale);\n+      this.translate.get(['admin.input.id.label', 'admin.input.name.label', 'admin.input.description',\n+        'admin.input.user.edit', 'admin.input.user.delete', 'admin.input.user.filter', 'admin.input.user.filter',\n+        'admin.pagination.firstText', 'admin.pagination.lastText', 'admin.pagination.nextText', 'admin.pagination.prevText'\n+        , 'admin.input.group.add', 'admin.input.lines', 'admin.input.user.filter', 'admin.input.user.filterAll'])\n+        .subscribe(translations => {\n+          this.columns = [\n+            {\n+              title: translations['admin.input.id.label'],\n+              name: 'id',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.id.label']\n+              },\n+            },\n+            {\n+              title: translations['admin.input.name.label'],\n+              name: 'name',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.name.label']\n+              },\n+            },\n+            {\n+              title: translations['admin.input.description'],\n+              name: 'description',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.description']\n+              }\n+            },\n+            {\n+              title: translations['admin.input.user.edit'],\n+              name: 'edit'\n+            },\n+            {\n+              title: translations['admin.input.user.delete'],\n+              name: 'delete'\n+            }\n+          ];\n+          this.firstText = translations['admin.pagination.firstText'];\n+          this.lastText = translations['admin.pagination.lastText'];\n+          this.nextText = translations['admin.pagination.nextText'];\n+          this.prevText = translations['admin.pagination.prevText'];\n+          this.addLabel = translations['admin.input.group.add'];\n+          this.lineLabel = translations['admin.input.lines'];\n+          this.filterAll = translations['admin.input.user.filterAll'];\n+", "originalCommit": "3720e728d94a6103b39d604eb0fa710e736974d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MzA1Mw==", "url": "https://github.com/opfab/operatorfabric-core/pull/521#discussion_r504043053", "bodyText": "this is not a real duplication , keys label and colomns  are different in each table (users , groups and entities) and besides, better to separate this code because the tables might evolve separatly in the future", "author": "bendaoudmba", "createdAt": "2020-10-13T15:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwNjQ1OA=="}], "type": "inlineReview"}, {"oid": "3a89bfe7e50284f7b44a1e25216cc006d51f267c", "url": "https://github.com/opfab/operatorfabric-core/commit/3a89bfe7e50284f7b44a1e25216cc006d51f267c", "message": "[OC-1088] : complete administration module groups+entites", "committedDate": "2020-10-13T15:47:32Z", "type": "commit"}, {"oid": "3a89bfe7e50284f7b44a1e25216cc006d51f267c", "url": "https://github.com/opfab/operatorfabric-core/commit/3a89bfe7e50284f7b44a1e25216cc006d51f267c", "message": "[OC-1088] : complete administration module groups+entites", "committedDate": "2020-10-13T15:47:32Z", "type": "forcePushed"}]}