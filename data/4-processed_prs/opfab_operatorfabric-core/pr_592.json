{"pr_number": 592, "pr_title": "[OC-1218] Frontend : Create UI which allows the user to create their \u2026", "pr_createdAt": "2020-11-23T13:26:00Z", "pr_url": "https://github.com/opfab/operatorfabric-core/pull/592", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc0MjUxMg==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528742512", "bodyText": "Need to skip(5) instead of skip(4) as there is one more step", "author": "freddidierRTE", "createdAt": "2020-11-23T14:29:53Z", "path": "ui/main/src/app/app.component.ts", "diffHunk": "@@ -119,6 +119,7 @@ export class AppComponent implements OnInit {\n             this.userService.loadUserWithPerimetersData(),\n             this.entitiesService.loadAllEntitiesData(),\n             this.processesService.loadAllProcesses(),\n+            this.processesService.loadProcessGroups(),\n             this.processesService.areTranslationsLoaded(),\n             this.cardService.initSubscription)\n             .pipe(skip(4)) // Need to wait for all initialization to complete before loading main components of the application", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1MjQ0Ng==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528852446", "bodyText": "Done", "author": "vlo-rte", "createdAt": "2020-11-23T16:53:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc0MjUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MTIxNA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528771214", "bodyText": "Add a parameter in web-ui.json to hide/show the menu", "author": "freddidierRTE", "createdAt": "2020-11-23T15:08:27Z", "path": "ui/main/src/app/components/navbar/navbar.component.html", "diffHunk": "@@ -102,6 +102,16 @@\n                     translate\n             >menu.settings</a>\n           </div>\n+\n+          <div class=\"dropdown-item\" [class.active]=\"currentPath && 'feedconfiguration' === currentPath[1]\">\n+            <a\n+                    class=\"nav-link opfab-menu-link text-decoration-none\"\n+                    routerLink=\"/feedconfiguration\"\n+                    routerLinkActive #rla=\"routerLinkActive\"\n+                    translate\n+            >menu.feedConfiguration</a>\n+          </div>\n+", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUxNTAwNA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r529515004", "bodyText": "Done", "author": "vlo-rte", "createdAt": "2020-11-24T12:40:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3MTIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NDc3MA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528774770", "bodyText": "In log , 'An error occurred when loading processGroup'", "author": "freddidierRTE", "createdAt": "2020-11-23T15:13:10Z", "path": "ui/main/src/app/services/processes.service.ts", "diffHunk": "@@ -88,6 +91,22 @@ export class ProcessesService {\n                 ));\n     }\n \n+    public loadProcessGroups(): Observable<any> {\n+        return this.queryProcessGroups()\n+            .pipe(\n+                map(processGroupsFile => {\n+                        if (!!processGroupsFile) {\n+                            this.processGroups = processGroupsFile.groups;\n+\n+                            for (const language in processGroupsFile.locale)\n+                                 this.translateService.setTranslation(language, processGroupsFile.locale[language], true);\n+\n+                            console.log(new Date().toISOString(), 'List of process groups loaded');\n+                        }\n+                    }, (error) => console.error(new Date().toISOString(), 'an error occurred', error)\n+                ));", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1MzU1Ng==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528853556", "bodyText": "Done", "author": "vlo-rte", "createdAt": "2020-11-23T16:54:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NDc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4MDg5Ng==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528780896", "bodyText": "Why adding this export ? it seems not used in the new dev", "author": "freddidierRTE", "createdAt": "2020-11-23T15:21:26Z", "path": "ui/main/src/app/modules/settings/settings.module.ts", "diffHunk": "@@ -31,6 +31,9 @@ import { CheckboxSettingComponent } from './components/settings/checkbox-setting\n         , MultiSettingsComponent\n         , TypeAheadSettingsComponent\n         , CheckboxSettingComponent],\n+    exports: [\n+        CheckboxSettingComponent\n+    ],", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1NDg5MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528854891", "bodyText": "Done. Export deleted.", "author": "vlo-rte", "createdAt": "2020-11-23T16:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4MDg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4NDYyNw==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528784627", "bodyText": "Not used --> to remove", "author": "freddidierRTE", "createdAt": "2020-11-23T15:26:21Z", "path": "ui/main/src/app/modules/feedconfiguration/feedconfiguration.component.ts", "diffHunk": "@@ -0,0 +1,216 @@\n+/* Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+import {Component, OnDestroy, OnInit} from '@angular/core';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { UserService } from '@ofServices/user.service';\n+import { Process } from '@ofModel/processes.model';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+import { ProcessesService } from '@ofServices/processes.service';\n+import { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\n+import { TranslateService } from '@ngx-translate/core';\n+import {SettingsService} from '@ofServices/settings.service';\n+import {Subject} from 'rxjs';\n+\n+\n+class Message {\n+    text: string;\n+    display: boolean;\n+}\n+\n+function getI18nPrefixFromProcess(process: Process): string {\n+    return process.id + '.' + process.version + '.';\n+}\n+\n+@Component({\n+    selector: 'of-feedconfiguration',\n+    templateUrl: './feedconfiguration.component.html',\n+    styleUrls: ['./feedconfiguration.component.scss']\n+})\n+\n+export class FeedconfigurationComponent implements OnInit, OnDestroy {\n+    feedConfigurationForm: FormGroup;\n+\n+    processesDefinition: Process[];\n+    processGroups: {idGroup: string, processes: string[]}[];\n+    processesWithoutGroup: string[];\n+    currentUserWithPerimeters: UserWithPerimeters;\n+    processesStatesLabels: Map<string, { processLabel: string,\n+                                           states:\n+                                               { stateLabel: string,\n+                                                 stateControlIndex: number\n+                                               }[]\n+                                         }>;\n+    preparedListOfProcessesStates: { processId: string,\n+                                     stateId: string }[];\n+\n+    modalRef: NgbModalRef;\n+\n+    public displaySendResultOk = false;\n+    public displaySendResultError = false;\n+    messageAfterSavingSettings: string;\n+\n+    unsubscribe$: Subject<void> = new Subject<void>();\n+\n+    constructor(private formBuilder: FormBuilder,\n+                private store: Store<AppState>,\n+                private userService: UserService,\n+                private processesService: ProcessesService,\n+                private modalService: NgbModal,\n+                private translateService: TranslateService,\n+                private settingsService: SettingsService,\n+    ) {\n+        this.processesDefinition = this.processesService.getAllProcesses();\n+        this.processGroups = this.processesService.getProcessGroups();\n+        this.currentUserWithPerimeters = this.userService.getCurrentUserWithPerimeters();\n+        this.feedConfigurationForm = this.formBuilder.group({\n+            processesStates: new FormArray([])\n+        });\n+        this.processesStatesLabels = new Map<string, {processLabel: string,\n+                                                        states:\n+                                                            { stateLabel: string,\n+                                                              stateControlIndex: number\n+                                                            }[]\n+                                                       }> ();\n+        this.preparedListOfProcessesStates = [];\n+        this.processesWithoutGroup = [];\n+\n+        this.computePreparedListOfProcessesStatesAndProcessesStatesLabels();\n+        this.makeProcessesWithoutGroup();\n+        this.addCheckboxesInFormArray();\n+    }\n+\n+    get processesStatesFormArray() {\n+        return this.feedConfigurationForm.controls.processesStates as FormArray;\n+    }\n+\n+    private findInProcessGroups(processIdToFind: string): boolean {\n+        for (const processGroup of this.processGroups.values()) {\n+            if (processGroup.processes.includes(processIdToFind))\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    private makeProcessesWithoutGroup() {\n+        this.processesDefinition.forEach(process => {\n+            if (! this.findInProcessGroups(process.id))\n+                this.processesWithoutGroup.push(process.id);\n+        });\n+    }\n+\n+    private addCheckboxesInFormArray() {\n+\n+        const processesStatesNotNotified = ((!! this.currentUserWithPerimeters.processesStatesNotNotified) ?\n+                                               this.currentUserWithPerimeters.processesStatesNotNotified :\n+                                               null);\n+\n+        this.processesDefinition.forEach(process => {\n+            for (const key in process.states) {\n+                const notNotifiedStatesForThisProcess = ((!! processesStatesNotNotified) ? processesStatesNotNotified[process.id] : null);\n+\n+                let isChecked = true;\n+                if ((!! notNotifiedStatesForThisProcess) && (notNotifiedStatesForThisProcess.includes(key)))\n+                    isChecked = false;\n+                this.processesStatesFormArray.push(new FormControl(isChecked));\n+            }\n+        });\n+    }\n+\n+    private computePreparedListOfProcessesStatesAndProcessesStatesLabels() {\n+        if (this.processesDefinition) {\n+            let stateControlIndex = 0;\n+\n+            for (const process of this.processesDefinition) {\n+\n+                const statesArray: { stateLabel: string, stateControlIndex: number }[]\n+                    = new Array<{stateLabel: string, stateControlIndex: number}>();\n+\n+                let processLabel = process.id;\n+                if (!!process.name)\n+                    this.translateService.get(getI18nPrefixFromProcess(process) + process.name)\n+                        .subscribe(result => processLabel = result);\n+\n+                for (const key in process.states) {\n+                    const value = process.states[key];\n+\n+                    let stateLabel = key;\n+                    if (!!value.name)\n+                        this.translateService.get(getI18nPrefixFromProcess(process) + value.name)\n+                            .subscribe(result => stateLabel = result);\n+\n+                    statesArray.push({stateLabel: stateLabel, stateControlIndex: stateControlIndex});\n+                    this.preparedListOfProcessesStates.push({\n+                        processId: process.id,\n+                        stateId: key});\n+                    stateControlIndex++;\n+                }\n+                this.processesStatesLabels.set(process.id, {processLabel: processLabel,\n+                                                              states: statesArray});\n+            }\n+        }\n+    }\n+\n+    ngOnInit() {\n+    }\n+\n+    ngOnDestroy() {\n+        this.unsubscribe$.next();\n+        this.unsubscribe$.complete();\n+    }", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1Njg3NA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528856874", "bodyText": "Done. Removed.", "author": "vlo-rte", "createdAt": "2020-11-23T16:59:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4NDYyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc5OTkyMA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528799920", "bodyText": ".modal-body{\nbackground-color: var(--opfab-bgcolor);\ncolor: var(--opfab-textcolor);\n}\n.modal-header{\nbackground-color: var(--opfab-bgcolor);\ncolor: var(--opfab-textcolor);\n}", "author": "freddidierRTE", "createdAt": "2020-11-23T15:45:47Z", "path": "ui/main/src/app/modules/feedconfiguration/feedconfiguration.component.scss", "diffHunk": "@@ -0,0 +1,19 @@\n+/* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+.modal-body{\n+  background-color: var(--opfab-lightcard-detail-bgcolor);\n+  color: var(--opfab-lightcard-detail-textcolor);\n+}\n+\n+\n+.modal-header{\n+  background-color: var(--opfab-lightcard-detail-bgcolor);\n+  color: var(--opfab-lightcard-detail-textcolor);\n+}", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1ODE1NA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528858154", "bodyText": "Done.", "author": "vlo-rte", "createdAt": "2020-11-23T17:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc5OTkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwNzMyMw==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528807323", "bodyText": "This import seems not usefull", "author": "freddidierRTE", "createdAt": "2020-11-23T15:55:41Z", "path": "ui/main/src/app/modules/feedconfiguration/feedconfiguration.module.ts", "diffHunk": "@@ -0,0 +1,31 @@\n+/* Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+import {NgModule} from '@angular/core';\n+import {CommonModule} from '@angular/common';\n+import {FeedconfigurationRoutingModule} from './feedconfiguration-routing.module';\n+import {FeedconfigurationComponent} from './feedconfiguration.component';\n+import {FormsModule, ReactiveFormsModule} from '@angular/forms';\n+import {TranslateModule} from '@ngx-translate/core';\n+import {SettingsModule} from '../settings/settings.module';\n+\n+\n+@NgModule({\n+    declarations: [FeedconfigurationComponent],\n+    imports: [\n+        CommonModule,\n+        FormsModule,\n+        ReactiveFormsModule,\n+        TranslateModule,\n+        FeedconfigurationRoutingModule,\n+        SettingsModule\n+    ]", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg1ODk1MQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528858951", "bodyText": "Done. Import removed.", "author": "vlo-rte", "createdAt": "2020-11-23T17:02:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwNzMyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMDg4OA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528820888", "bodyText": "this.addCheckboxesInFormArray() should be call i guess in the ngOnInit method . There is actually a bug when you change screen and return after to this screen , the checkbox selected and saved are not checked anymore", "author": "freddidierRTE", "createdAt": "2020-11-23T16:09:16Z", "path": "ui/main/src/app/modules/feedconfiguration/feedconfiguration.component.ts", "diffHunk": "@@ -0,0 +1,216 @@\n+/* Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+import {Component, OnDestroy, OnInit} from '@angular/core';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { UserService } from '@ofServices/user.service';\n+import { Process } from '@ofModel/processes.model';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+import { ProcessesService } from '@ofServices/processes.service';\n+import { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\n+import { TranslateService } from '@ngx-translate/core';\n+import {SettingsService} from '@ofServices/settings.service';\n+import {Subject} from 'rxjs';\n+\n+\n+class Message {\n+    text: string;\n+    display: boolean;\n+}\n+\n+function getI18nPrefixFromProcess(process: Process): string {\n+    return process.id + '.' + process.version + '.';\n+}\n+\n+@Component({\n+    selector: 'of-feedconfiguration',\n+    templateUrl: './feedconfiguration.component.html',\n+    styleUrls: ['./feedconfiguration.component.scss']\n+})\n+\n+export class FeedconfigurationComponent implements OnInit, OnDestroy {\n+    feedConfigurationForm: FormGroup;\n+\n+    processesDefinition: Process[];\n+    processGroups: {idGroup: string, processes: string[]}[];\n+    processesWithoutGroup: string[];\n+    currentUserWithPerimeters: UserWithPerimeters;\n+    processesStatesLabels: Map<string, { processLabel: string,\n+                                           states:\n+                                               { stateLabel: string,\n+                                                 stateControlIndex: number\n+                                               }[]\n+                                         }>;\n+    preparedListOfProcessesStates: { processId: string,\n+                                     stateId: string }[];\n+\n+    modalRef: NgbModalRef;\n+\n+    public displaySendResultOk = false;\n+    public displaySendResultError = false;\n+    messageAfterSavingSettings: string;\n+\n+    unsubscribe$: Subject<void> = new Subject<void>();\n+\n+    constructor(private formBuilder: FormBuilder,\n+                private store: Store<AppState>,\n+                private userService: UserService,\n+                private processesService: ProcessesService,\n+                private modalService: NgbModal,\n+                private translateService: TranslateService,\n+                private settingsService: SettingsService,\n+    ) {\n+        this.processesDefinition = this.processesService.getAllProcesses();\n+        this.processGroups = this.processesService.getProcessGroups();\n+        this.currentUserWithPerimeters = this.userService.getCurrentUserWithPerimeters();\n+        this.feedConfigurationForm = this.formBuilder.group({\n+            processesStates: new FormArray([])\n+        });\n+        this.processesStatesLabels = new Map<string, {processLabel: string,\n+                                                        states:\n+                                                            { stateLabel: string,\n+                                                              stateControlIndex: number\n+                                                            }[]\n+                                                       }> ();\n+        this.preparedListOfProcessesStates = [];\n+        this.processesWithoutGroup = [];\n+\n+        this.computePreparedListOfProcessesStatesAndProcessesStatesLabels();\n+        this.makeProcessesWithoutGroup();\n+        this.addCheckboxesInFormArray();", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3MTEwMQ==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r529471101", "bodyText": "Done.", "author": "vlo-rte", "createdAt": "2020-11-24T11:23:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMDg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyOTY1Ng==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528829656", "bodyText": "Put inside the FeedconfigurationComponent", "author": "freddidierRTE", "createdAt": "2020-11-23T16:21:09Z", "path": "ui/main/src/app/modules/feedconfiguration/feedconfiguration.component.ts", "diffHunk": "@@ -0,0 +1,216 @@\n+/* Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+import {Component, OnDestroy, OnInit} from '@angular/core';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { UserService } from '@ofServices/user.service';\n+import { Process } from '@ofModel/processes.model';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+import { ProcessesService } from '@ofServices/processes.service';\n+import { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\n+import { TranslateService } from '@ngx-translate/core';\n+import {SettingsService} from '@ofServices/settings.service';\n+import {Subject} from 'rxjs';\n+\n+\n+class Message {\n+    text: string;\n+    display: boolean;\n+}\n+\n+function getI18nPrefixFromProcess(process: Process): string {\n+    return process.id + '.' + process.version + '.';\n+}", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg2MTkxNg==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528861916", "bodyText": "Done.", "author": "vlo-rte", "createdAt": "2020-11-23T17:06:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyOTY1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyOTk5MA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528829990", "bodyText": "Not used --> to remove", "author": "freddidierRTE", "createdAt": "2020-11-23T16:21:33Z", "path": "ui/main/src/app/modules/feedconfiguration/feedconfiguration.component.ts", "diffHunk": "@@ -0,0 +1,216 @@\n+/* Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+import {Component, OnDestroy, OnInit} from '@angular/core';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { UserService } from '@ofServices/user.service';\n+import { Process } from '@ofModel/processes.model';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+import { ProcessesService } from '@ofServices/processes.service';\n+import { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\n+import { TranslateService } from '@ngx-translate/core';\n+import {SettingsService} from '@ofServices/settings.service';\n+import {Subject} from 'rxjs';\n+\n+\n+class Message {\n+    text: string;\n+    display: boolean;\n+}\n+\n+function getI18nPrefixFromProcess(process: Process): string {\n+    return process.id + '.' + process.version + '.';\n+}\n+\n+@Component({\n+    selector: 'of-feedconfiguration',\n+    templateUrl: './feedconfiguration.component.html',\n+    styleUrls: ['./feedconfiguration.component.scss']\n+})\n+\n+export class FeedconfigurationComponent implements OnInit, OnDestroy {\n+    feedConfigurationForm: FormGroup;\n+\n+    processesDefinition: Process[];\n+    processGroups: {idGroup: string, processes: string[]}[];\n+    processesWithoutGroup: string[];\n+    currentUserWithPerimeters: UserWithPerimeters;\n+    processesStatesLabels: Map<string, { processLabel: string,\n+                                           states:\n+                                               { stateLabel: string,\n+                                                 stateControlIndex: number\n+                                               }[]\n+                                         }>;\n+    preparedListOfProcessesStates: { processId: string,\n+                                     stateId: string }[];\n+\n+    modalRef: NgbModalRef;\n+\n+    public displaySendResultOk = false;\n+    public displaySendResultError = false;\n+    messageAfterSavingSettings: string;\n+\n+    unsubscribe$: Subject<void> = new Subject<void>();\n+", "originalCommit": "cce70ebcd28a26f0758718b0f0afa17daefa0155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg2MjY3NA==", "url": "https://github.com/opfab/operatorfabric-core/pull/592#discussion_r528862674", "bodyText": "Done.", "author": "vlo-rte", "createdAt": "2020-11-23T17:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyOTk5MA=="}], "type": "inlineReview"}, {"oid": "bb18b06c269761ba0cce0b8e952f5c867d7eb9ea", "url": "https://github.com/opfab/operatorfabric-core/commit/bb18b06c269761ba0cce0b8e952f5c867d7eb9ea", "message": "[OC-1218] update following code revew", "committedDate": "2020-11-24T13:10:52Z", "type": "forcePushed"}, {"oid": "aca738ee7d0f134aa5b31de4f256a626738d1a1b", "url": "https://github.com/opfab/operatorfabric-core/commit/aca738ee7d0f134aa5b31de4f256a626738d1a1b", "message": "[OC-1218] update following code revew", "committedDate": "2020-11-25T14:14:23Z", "type": "forcePushed"}, {"oid": "aca58369f53568b4a9b1abe8aadc886d20d2d139", "url": "https://github.com/opfab/operatorfabric-core/commit/aca58369f53568b4a9b1abe8aadc886d20d2d139", "message": "[OC-1218] update following code revew", "committedDate": "2020-11-26T12:31:58Z", "type": "forcePushed"}, {"oid": "aed8c2879dfe30159ed68e0c7bd98b0cb855a693", "url": "https://github.com/opfab/operatorfabric-core/commit/aed8c2879dfe30159ed68e0c7bd98b0cb855a693", "message": "[OC-1218] Frontend : Create UI which allows the user to create their filters", "committedDate": "2020-11-30T07:25:01Z", "type": "commit"}, {"oid": "ba06309bcfce65e762d86a860084701881731f93", "url": "https://github.com/opfab/operatorfabric-core/commit/ba06309bcfce65e762d86a860084701881731f93", "message": "[OC-1218] update following code revew", "committedDate": "2020-11-30T07:25:02Z", "type": "commit"}, {"oid": "ba06309bcfce65e762d86a860084701881731f93", "url": "https://github.com/opfab/operatorfabric-core/commit/ba06309bcfce65e762d86a860084701881731f93", "message": "[OC-1218] update following code revew", "committedDate": "2020-11-30T07:25:02Z", "type": "forcePushed"}]}