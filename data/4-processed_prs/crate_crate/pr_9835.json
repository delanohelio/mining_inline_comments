{"pr_number": 9835, "pr_title": "Use BlockBasedRamAccounting for projections", "pr_createdAt": "2020-03-31T14:09:44Z", "pr_url": "https://github.com/crate/crate/pull/9835", "timeline": [{"oid": "ae8f5fb673b31e058337cc8ea18f5e11dd0eb3d7", "url": "https://github.com/crate/crate/commit/ae8f5fb673b31e058337cc8ea18f5e11dd0eb3d7", "message": "Move ramAccounting/memory release closer to acquire", "committedDate": "2020-03-31T14:57:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk4NTQ0MQ==", "url": "https://github.com/crate/crate/pull/9835#discussion_r400985441", "bodyText": "I think this is worth a comment something like \"A non-thread-safe ram accounting instance may be used here, so we must ensure thread-safety.\"", "author": "seut", "createdAt": "2020-03-31T15:02:04Z", "path": "sql/src/main/java/io/crate/execution/engine/fetch/TransportFetchOperation.java", "diffHunk": "@@ -84,6 +84,13 @@ static RamAccounting ramAccountingForIncomingResponse(RamAccounting ramAccountin\n             return RamAccounting.NO_ACCOUNTING;\n         }\n         // Each response may run in a different thread and thus should use its own ram accounting instance\n-        return new BlockBasedRamAccounting(ramAccounting::addBytes, MAX_BLOCK_SIZE_IN_BYTES);\n+        return new BlockBasedRamAccounting(\n+            usedBytes -> {\n+                synchronized (ramAccounting) {", "originalCommit": "61261a93a27733a9f914068ce8610f9b7321d0b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5282041367c4559531d47572ea8b07a9a28eb8a2", "url": "https://github.com/crate/crate/commit/5282041367c4559531d47572ea8b07a9a28eb8a2", "message": "Move ramAccounting/memory release closer to acquire", "committedDate": "2020-03-31T15:11:25Z", "type": "forcePushed"}, {"oid": "d81f3215265c00a883c13c8fedd21f65e80a34b9", "url": "https://github.com/crate/crate/commit/d81f3215265c00a883c13c8fedd21f65e80a34b9", "message": "Split calculateBlockSizeInBytes for the non-sharded case", "committedDate": "2020-03-31T15:35:49Z", "type": "commit"}, {"oid": "d6d84bf9092364bc4a3db5e387a28c81e1a03b6a", "url": "https://github.com/crate/crate/commit/d6d84bf9092364bc4a3db5e387a28c81e1a03b6a", "message": "Use BlockBasedRamAccounting for projections\n\nUsing `ConcurrentRamAccounting` directly has a large performance\noverhead. See https://github.com/crate/crate/pull/9830", "committedDate": "2020-03-31T15:35:49Z", "type": "commit"}, {"oid": "c222ecdeb8336e0312785f6c3eb39b0645cddf22", "url": "https://github.com/crate/crate/commit/c222ecdeb8336e0312785f6c3eb39b0645cddf22", "message": "Move ramAccounting/memory release closer to acquire", "committedDate": "2020-03-31T15:35:49Z", "type": "commit"}, {"oid": "c222ecdeb8336e0312785f6c3eb39b0645cddf22", "url": "https://github.com/crate/crate/commit/c222ecdeb8336e0312785f6c3eb39b0645cddf22", "message": "Move ramAccounting/memory release closer to acquire", "committedDate": "2020-03-31T15:35:49Z", "type": "forcePushed"}]}