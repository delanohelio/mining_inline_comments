{"pr_number": 9707, "pr_title": "Remove QuerySpec, HavingClause and move WhereClause", "pr_createdAt": "2020-02-26T16:18:41Z", "pr_url": "https://github.com/crate/crate/pull/9707", "timeline": [{"oid": "2cc81140ba6bfbfc558daae1143b395c183a3085", "url": "https://github.com/crate/crate/commit/2cc81140ba6bfbfc558daae1143b395c183a3085", "message": "Inline QuerySpec into QueriedSelectRelation\n\nNo need anymore for the indirection", "committedDate": "2020-02-26T16:07:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk1NTcwMQ==", "url": "https://github.com/crate/crate/pull/9707#discussion_r384955701", "bodyText": "minor: we could store this into a local var to avoid checking for NULL twice", "author": "seut", "createdAt": "2020-02-27T07:39:59Z", "path": "sql/src/main/java/io/crate/analyze/relations/RelationAnalyzer.java", "diffHunk": "@@ -333,14 +332,13 @@ protected AnalyzedRelation visitQuerySpecification(QuerySpecification node, Stat\n \n         boolean isDistinct = node.getSelect().isDistinct();\n         Symbol querySymbol = expressionAnalyzer.generateQuerySymbol(node.getWhere(), expressionAnalysisContext);\n-        WhereClause whereClause = new WhereClause(querySymbol);\n-        WhereClauseValidator.validate(whereClause.queryOrFallback());\n+        WhereClauseValidator.validate(querySymbol == null ? Literal.BOOLEAN_TRUE : querySymbol);\n         QueriedSelectRelation relation = new QueriedSelectRelation(\n             isDistinct,\n             List.copyOf(context.sources().values()),\n             context.joinPairs(),\n             selectAnalysis.outputSymbols(),\n-            whereClause,\n+            querySymbol == null ? Literal.BOOLEAN_TRUE : querySymbol,", "originalCommit": "79bb29358d446b7051b95625735845f309f57912", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2MTU2MQ==", "url": "https://github.com/crate/crate/pull/9707#discussion_r384961561", "bodyText": "@seut pushed a fixup to make generateQuerySymbol not return null in the first place.", "author": "mfussenegger", "createdAt": "2020-02-27T07:55:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk1NTcwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2Mzc5Mg==", "url": "https://github.com/crate/crate/pull/9707#discussion_r384963792", "bodyText": "\ud83d\udc4d even better!", "author": "seut", "createdAt": "2020-02-27T08:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk1NTcwMQ=="}], "type": "inlineReview"}, {"oid": "91493a626143de691f6a47320848df39ef7e0422", "url": "https://github.com/crate/crate/commit/91493a626143de691f6a47320848df39ef7e0422", "message": "Replace WhereClause on QueriedSelectRelation with a Symbol\n\nTo make it clear that it is just a query expression, not a further\nanalyzed `WhereClause` with `partitions` or `clusteredBy`.", "committedDate": "2020-02-27T08:05:56Z", "type": "commit"}, {"oid": "568c37d7a98456e370104f654d62f3d61d17d021", "url": "https://github.com/crate/crate/commit/568c37d7a98456e370104f654d62f3d61d17d021", "message": "Remove HavingClause\n\nHaving a dedicated HavingClause is no longer necessary. We're not doing\npartition selection or `clusteredBy` extraction on a `HavingClause`.\n\nSuch an optimization would only apply if the query can be pushed down\nall the way into the `Collect` operator.", "committedDate": "2020-02-27T08:09:21Z", "type": "commit"}, {"oid": "568c37d7a98456e370104f654d62f3d61d17d021", "url": "https://github.com/crate/crate/commit/568c37d7a98456e370104f654d62f3d61d17d021", "message": "Remove HavingClause\n\nHaving a dedicated HavingClause is no longer necessary. We're not doing\npartition selection or `clusteredBy` extraction on a `HavingClause`.\n\nSuch an optimization would only apply if the query can be pushed down\nall the way into the `Collect` operator.", "committedDate": "2020-02-27T08:09:21Z", "type": "forcePushed"}]}