{"pr_number": 10512, "pr_title": "Clarify indexing/tokenization schemes with dynamic object columns", "pr_createdAt": "2020-09-09T12:42:27Z", "pr_url": "https://github.com/crate/crate/pull/10512", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2NTA4Mw==", "url": "https://github.com/crate/crate/pull/10512#discussion_r485665083", "bodyText": "Technically this is correct.", "author": "mkleen", "createdAt": "2020-09-09T14:38:58Z", "path": "docs/general/ddl/data-types.rst", "diffHunk": "@@ -917,9 +917,9 @@ Note that adding new columns to an object with a ``dynamic`` policy will affect\n the schema of the table. Once a column is added, it shows up in the\n ``information_schema.columns`` table and its type and attributes are fixed.\n They will have the type that was guessed by their inserted/updated value and\n-they will always be ``not_indexed`` which means they are analyzed with the\n-:ref:`plain <plain-analyzer>`, which means as-is.\n-\n+they will always be analyzed as-is with the :ref:`plain <plain-analyzer>`,\n+which means the column will be indexed but not tokenized in the case of\n+``text`` columns.", "originalCommit": "070002508d0132522cd4893288e198b3bad1816d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7f006f8ea874910b7f5e3d31678086ae1d4e9a76", "url": "https://github.com/crate/crate/commit/7f006f8ea874910b7f5e3d31678086ae1d4e9a76", "message": "Clarify indexing/tokenization schemes with dynamic object columns\n\nThis should address #10153", "committedDate": "2020-09-10T09:16:43Z", "type": "commit"}, {"oid": "7f006f8ea874910b7f5e3d31678086ae1d4e9a76", "url": "https://github.com/crate/crate/commit/7f006f8ea874910b7f5e3d31678086ae1d4e9a76", "message": "Clarify indexing/tokenization schemes with dynamic object columns\n\nThis should address #10153", "committedDate": "2020-09-10T09:16:43Z", "type": "forcePushed"}]}