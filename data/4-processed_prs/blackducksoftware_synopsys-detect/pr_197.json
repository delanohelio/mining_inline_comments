{"pr_number": 197, "pr_title": "Detect properties java", "pr_createdAt": "2020-06-26T16:49:23Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/197", "timeline": [{"oid": "c0a04809ce8dfac3dbbe33b9939a4d732956ee42", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/c0a04809ce8dfac3dbbe33b9939a4d732956ee42", "message": "feat: Created builder class for java properties", "committedDate": "2020-06-23T18:10:10Z", "type": "commit"}, {"oid": "b914d877e6bc04981ed341252f2919c990937f27", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b914d877e6bc04981ed341252f2919c990937f27", "message": "feat: Created functional interface PropertySetter", "committedDate": "2020-06-24T20:53:54Z", "type": "commit"}, {"oid": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "message": "feat: Created test to verify all properties accounted for in new file", "committedDate": "2020-06-26T16:46:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTk0Nw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446365947", "bodyText": "We are only using the Jetbrains annotations.", "author": "JakeMathews", "createdAt": "2020-06-26T19:17:32Z", "path": "configuration/src/main/java/com/synopsys/integration/configuration/property/PropertyBuilder.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.synopsys.integration.configuration.property;\n+\n+import java.util.List;\n+\n+import org.antlr.v4.runtime.misc.NotNull;\n+import org.jetbrains.annotations.Nullable;", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4NjE0Mw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446386143", "bodyText": "Also are you using any of these imports in this class?", "author": "JakeMathews", "createdAt": "2020-06-26T20:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2Nzc0MQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446367741", "bodyText": "I would look into using reflection or something to get all of the properties. How can we be sure it has all the properties?", "author": "JakeMathews", "createdAt": "2020-06-26T19:21:34Z", "path": "src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package com.synopsys.integration.detect.configuration;\n+\n+import static org.codehaus.groovy.runtime.DefaultGroovyMethods.collect;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Assert;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import com.synopsys.integration.configuration.property.Property;\n+\n+public class PropertyVerificationTest {\n+\n+    @Test\n+    public void verifyProperties() {\n+        Set<String> missing = new HashSet<>();\n+        List<String> kotlinNames = DetectProperties.Companion.getProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        List<String> javaNames = collectJavaProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        for (String propertyName : kotlinNames) {\n+            if (!javaNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+        for (String propertyName : javaNames) {\n+            if (!kotlinNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+\n+        Assertions.assertTrue(missing.isEmpty());\n+    }\n+\n+    private List<Property> collectJavaProperties() {\n+        List<Property> properties2 = new ArrayList<>();\n+        \n+            properties2.add(DetectPropertiesJava.BLACKDUCK_API_TOKEN);\n+            properties2.add(DetectPropertiesJava.BLACKDUCK_OFFLINE_MODE);\n+            properties2.add(DetectPropertiesJava.BLACKDUCK_PASSWORD);", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2ODE5NA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446368194", "bodyText": "We need a lot more verifications then just property names. Everything attached to the property should be checked.", "author": "JakeMathews", "createdAt": "2020-06-26T19:22:33Z", "path": "src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package com.synopsys.integration.detect.configuration;\n+\n+import static org.codehaus.groovy.runtime.DefaultGroovyMethods.collect;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Assert;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import com.synopsys.integration.configuration.property.Property;\n+\n+public class PropertyVerificationTest {\n+\n+    @Test\n+    public void verifyProperties() {\n+        Set<String> missing = new HashSet<>();\n+        List<String> kotlinNames = DetectProperties.Companion.getProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        List<String> javaNames = collectJavaProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        for (String propertyName : kotlinNames) {\n+            if (!javaNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+        for (String propertyName : javaNames) {\n+            if (!kotlinNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+\n+        Assertions.assertTrue(missing.isEmpty());", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4ODUxMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446388511", "bodyText": "I recommend you get all the properties through reflection, and iterate over them, then check against the values method in DetectProperties.kt. You will have to make it public for testing.", "author": "JakeMathews", "createdAt": "2020-06-26T20:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2ODE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2OTczMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446369731", "bodyText": "These should have the public final modifier on them as well.\npublic so we can access them through reflection (https://stackoverflow.com/a/14078769). This will help with the tests as well.\nfinal so the variables cannot be overridden.", "author": "JakeMathews", "createdAt": "2020-06-26T19:26:16Z", "path": "src/main/java/com/synopsys/integration/detect/configuration/DetectPropertiesJava.java", "diffHunk": "@@ -0,0 +1,1570 @@\n+package com.synopsys.integration.detect.configuration;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.singletonList;\n+\n+import java.util.Arrays;\n+\n+import com.synopsys.integration.blackduck.api.generated.enumeration.LicenseFamilyLicenseFamilyRiskRulesReleaseDistributionType;\n+import com.synopsys.integration.blackduck.api.generated.enumeration.PolicyRuleSeverityType;\n+import com.synopsys.integration.blackduck.api.generated.enumeration.ProjectCloneCategoriesType;\n+import com.synopsys.integration.blackduck.api.manual.throwaway.generated.enumeration.ProjectVersionPhaseType;\n+import com.synopsys.integration.blackduck.codelocation.signaturescanner.command.IndividualFileMatching;\n+import com.synopsys.integration.blackduck.codelocation.signaturescanner.command.SnippetMatching;\n+import com.synopsys.integration.configuration.property.Property;\n+import com.synopsys.integration.configuration.property.PropertyBuilder;\n+import com.synopsys.integration.configuration.property.base.PassthroughProperty;\n+import com.synopsys.integration.configuration.property.types.bool.BooleanProperty;\n+import com.synopsys.integration.configuration.property.types.enumextended.ExtendedEnumProperty;\n+import com.synopsys.integration.configuration.property.types.enumextended.ExtendedEnumValue;\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumListProperty;\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumUtils;\n+import com.synopsys.integration.configuration.property.types.enums.EnumListProperty;\n+import com.synopsys.integration.configuration.property.types.enums.EnumProperty;\n+import com.synopsys.integration.configuration.property.types.integer.IntegerProperty;\n+import com.synopsys.integration.configuration.property.types.integer.NullableIntegerProperty;\n+import com.synopsys.integration.configuration.property.types.longs.LongProperty;\n+import com.synopsys.integration.configuration.property.types.path.NullablePathProperty;\n+import com.synopsys.integration.configuration.property.types.path.PathListProperty;\n+import com.synopsys.integration.configuration.property.types.path.PathProperty;\n+import com.synopsys.integration.configuration.property.types.string.NullableStringProperty;\n+import com.synopsys.integration.configuration.property.types.string.StringListProperty;\n+import com.synopsys.integration.configuration.property.types.string.StringProperty;\n+import com.synopsys.integration.detect.DetectMajorVersion;\n+import com.synopsys.integration.detect.DetectTool;\n+import com.synopsys.integration.detect.configuration.enums.DefaultVersionNameScheme;\n+import com.synopsys.integration.detect.tool.signaturescanner.enums.ExtendedIndividualFileMatchingMode;\n+import com.synopsys.integration.detect.tool.signaturescanner.enums.ExtendedSnippetMode;\n+import com.synopsys.integration.detect.workflow.bdio.AggregateMode;\n+import com.synopsys.integration.detectable.detectables.bazel.WorkspaceRule;\n+import com.synopsys.integration.detector.base.DetectorType;\n+import com.synopsys.integration.configuration.property.types.path.PathValue;\n+import com.synopsys.integration.log.LogLevel;\n+\n+import java.lang.Deprecated;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class DetectPropertiesJava {\n+\n+   static NullableStringProperty BLACKDUCK_API_TOKEN = new PropertyBuilder<>(new NullableStringProperty(\"blackduck.api.token\")).build(property -> {", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "message": "feat: Altered test to collect properties from DetectPropertiesJava using reflection", "committedDate": "2020-06-29T20:01:20Z", "type": "commit"}, {"oid": "7d4cee647b376a9c9134d3748bbdcb775145d396", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/7d4cee647b376a9c9134d3748bbdcb775145d396", "message": "feat: Commented out category check", "committedDate": "2020-07-01T16:43:58Z", "type": "commit"}, {"oid": "e6cf84f95d8bef8eeaa5737ac9634b84b2854658", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/e6cf84f95d8bef8eeaa5737ac9634b84b2854658", "message": "feat: Replaced usages of DetectProperties.kt with java equivalent", "committedDate": "2020-07-13T15:29:47Z", "type": "commit"}, {"oid": "707fbf5ca848447b0ac57a18e75409d7979fa93d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/707fbf5ca848447b0ac57a18e75409d7979fa93d", "message": "Merge branch 'master' into detectPropertiesJava", "committedDate": "2020-07-14T17:57:26Z", "type": "commit"}, {"oid": "eae61c93cc5338b263084ab1869d14cdf8689f11", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/eae61c93cc5338b263084ab1869d14cdf8689f11", "message": "feat: Replaced usages of kotlin detect properties with Java equivalent", "committedDate": "2020-07-20T15:56:10Z", "type": "commit"}, {"oid": "8f363fc998be557cb51cfaf5fa651dc4b7cece1c", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/8f363fc998be557cb51cfaf5fa651dc4b7cece1c", "message": "feat: Resolved syntax to support new java properties", "committedDate": "2020-07-20T17:52:35Z", "type": "commit"}, {"oid": "797ee3c8cd440ab1516e6e66bc17e33f461e357d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/797ee3c8cd440ab1516e6e66bc17e33f461e357d", "message": "refactor: Refactored property value retrieval", "committedDate": "2020-07-21T16:03:56Z", "type": "commit"}, {"oid": "0025eef467c5a73fd84f05ed4b5a32ebb1ff6dec", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0025eef467c5a73fd84f05ed4b5a32ebb1ff6dec", "message": "refactor(properties): Cleaned up code smells. Suppressed warnings we don't care about. Applied formatting.", "committedDate": "2020-07-21T16:50:55Z", "type": "commit"}, {"oid": "037023060642fbc8d7c8584ab2bf984361b13606", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/037023060642fbc8d7c8584ab2bf984361b13606", "message": "feat: Merged master.", "committedDate": "2020-09-08T18:51:44Z", "type": "commit"}, {"oid": "6e30dd25ca43839313237a471c58eab3d6560c22", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6e30dd25ca43839313237a471c58eab3d6560c22", "message": "feat: Merge master.", "committedDate": "2020-09-08T19:06:15Z", "type": "commit"}, {"oid": "82880b88e24085bd7d4655e0d837038e3afd651a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/82880b88e24085bd7d4655e0d837038e3afd651a", "message": "fix: Updated property reference.", "committedDate": "2020-09-08T19:12:21Z", "type": "commit"}, {"oid": "7d98311a494c197e8cec838b77f8843057a18db7", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/7d98311a494c197e8cec838b77f8843057a18db7", "message": "fix: Updated GoBattery test.", "committedDate": "2020-09-08T19:22:24Z", "type": "commit"}, {"oid": "264c058aee1f6ee926ddef14f0328cc8246db74c", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/264c058aee1f6ee926ddef14f0328cc8246db74c", "message": "fix: Fixed errant property fields, added category check in PropertyVerificationTest.", "committedDate": "2020-09-09T21:53:49Z", "type": "commit"}, {"oid": "747f6975164b6b0b6fd0db77f89adfd5bc56d29d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/747f6975164b6b0b6fd0db77f89adfd5bc56d29d", "message": "fix: Removed debug statement.", "committedDate": "2020-09-09T21:54:26Z", "type": "commit"}]}