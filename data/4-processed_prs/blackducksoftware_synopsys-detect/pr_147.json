{"pr_number": 147, "pr_title": "Git parse", "pr_createdAt": "2020-04-08T18:46:10Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/147", "timeline": [{"oid": "ace5b241feefc7b3b5e352e8274213e1ca86632d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ace5b241feefc7b3b5e352e8274213e1ca86632d", "message": "fix(git-parse): The GitFileTransformer now supports parsing git repositories with a detached head. (Fixes IDETECT-1883)", "committedDate": "2020-04-08T16:28:43Z", "type": "commit"}, {"oid": "13d86f275fff325d4bbbdbf1b1f82a41993316a0", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/13d86f275fff325d4bbbdbf1b1f82a41993316a0", "message": "refactor(git-parse): Heavy refactoring of Git parsing classes for maintainability.", "committedDate": "2020-04-08T18:23:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczOTAwNg==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/147#discussion_r405739006", "bodyText": "Should this go in it's own class? It's only 22 lines and it only relevant to GitConfig which is why I added it here.", "author": "JakeMathews", "createdAt": "2020-04-08T18:46:50Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/git/parsing/model/GitConfig.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.synopsys.integration.detectable.detectables.git.parsing.model;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+// A List<GitConfigNode> is a rough parsing result. This class provides a better API.\n+public class GitConfig {\n+    // Only including remote and branch nodes since the core node is not being used.\n+    private final List<GitConfigRemote> gitConfigRemotes;\n+    private final List<GitConfigBranch> gitConfigBranches;\n+\n+    public static GitConfig fromGitConfigNodes(final List<GitConfigNode> gitConfigNodes) {\n+        final List<GitConfigRemote> gitConfigRemotes = gitConfigNodes.stream()\n+                                                           .filter(node -> node.getType().equals(\"remote\"))\n+                                                           .map(node -> {\n+                                                               String remoteNodeName = node.getName().orElseThrow(() -> new IllegalArgumentException(\"Expected remote node to have a name.\"));\n+                                                               String remoteNodeUrl = node.getProperty(\"url\").orElseThrow(() -> new IllegalArgumentException(\"Expected remote node to have a url field.\"));\n+                                                               String remoteNodeFetch = node.getProperty(\"fetch\").orElseThrow(() -> new IllegalArgumentException(\"Expected remote node to have a fetch field.\"));\n+                                                               return new GitConfigRemote(remoteNodeName, remoteNodeUrl, remoteNodeFetch);\n+                                                           })\n+                                                           .collect(Collectors.toList());\n+\n+        final List<GitConfigBranch> gitConfigBranches = gitConfigNodes.stream()\n+                                                            .filter(node -> node.getType().equals(\"branch\"))\n+                                                            .map(node -> {\n+                                                                String remoteNodeName = node.getName().orElseThrow(() -> new IllegalArgumentException(\"Expected branch node to have a name.\"));\n+                                                                String remoteNodeRemote = node.getProperty(\"remote\").orElseThrow(() -> new IllegalArgumentException(\"Expected branch node to have a remote field.\"));\n+                                                                String remoteNodeMerge = node.getProperty(\"merge\").orElseThrow(() -> new IllegalArgumentException(\"Expected branch node to have a fetch field.\"));\n+                                                                return new GitConfigBranch(remoteNodeName, remoteNodeRemote, remoteNodeMerge);\n+                                                            })\n+                                                            .collect(Collectors.toList());\n+\n+        return new GitConfig(gitConfigRemotes, gitConfigBranches);\n+    }", "originalCommit": "13d86f275fff325d4bbbdbf1b1f82a41993316a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3MTk2MA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/147#discussion_r405771960", "bodyText": "I think I'd lean toward leaving it in that class as you have it since there's no other complexity in that class, but I could see arguments either way. Could the constructor become private if it stays?", "author": "stevebillings", "createdAt": "2020-04-08T19:47:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczOTAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3NDU5Mw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/147#discussion_r405774593", "bodyText": "Having the constructor public allows for easier testing. Which isn't a great reason to affect source, but I think the impact is small here.", "author": "JakeMathews", "createdAt": "2020-04-08T19:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczOTAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3NTYxNg==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/147#discussion_r405775616", "bodyText": "ah, right.", "author": "stevebillings", "createdAt": "2020-04-08T19:54:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczOTAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4MTQ1Nw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/147#discussion_r405781457", "bodyText": "I'd very much prefer a GitConfigParser and a GitConfig data object.", "author": "taikuukaits", "createdAt": "2020-04-08T20:04:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczOTAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgwMzcwMg==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/147#discussion_r405803702", "bodyText": "TheGitFileParser already exists. It converts the file into List. The GitConfig model is meant to wrap the GitConfig nodes with a better API.", "author": "JakeMathews", "createdAt": "2020-04-08T20:45:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczOTAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgwNjI1Ng==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/147#discussion_r405806256", "bodyText": "I'd still prefer the operation of transforming some data be separate from the result of the transformation.", "author": "taikuukaits", "createdAt": "2020-04-08T20:50:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczOTAwNg=="}], "type": "inlineReview"}, {"oid": "c77d050c0835dc07078e35ecdfbe6b5c1f10f59f", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/c77d050c0835dc07078e35ecdfbe6b5c1f10f59f", "message": "Merge branch 'master' into git-parse", "committedDate": "2020-04-08T19:04:11Z", "type": "commit"}, {"oid": "9a95b488f3777d7520811201c3da65d6fa80aea0", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/9a95b488f3777d7520811201c3da65d6fa80aea0", "message": "Merge branch 'master' into git-parse\n\n# Conflicts:\n#\tdocs/templates/content/90-releasenotes.ftl", "committedDate": "2020-04-09T16:22:01Z", "type": "commit"}, {"oid": "56e38b3c082d78a4fb1e34aef9014ee5afe7f8f0", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/56e38b3c082d78a4fb1e34aef9014ee5afe7f8f0", "message": "refactor(git-parse): Moved GitConfigNode transformation to GitConfig to GitConfigNodeTransformer. Added license headers.", "committedDate": "2020-04-09T16:57:26Z", "type": "commit"}, {"oid": "4746805e7c79519edefeb12590aeaa48f4ad6e2b", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4746805e7c79519edefeb12590aeaa48f4ad6e2b", "message": "refactor(git-parse): Renamed GitConfigExtractor -> GitConfigNameVersionTransformer.", "committedDate": "2020-04-09T17:18:13Z", "type": "commit"}]}