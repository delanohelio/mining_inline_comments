{"pr_number": 719, "pr_title": "Display environment info on developer menu", "pr_createdAt": "2020-08-11T22:29:35Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/719", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MDU1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469360555", "bodyText": "Can you use Amplify.CATEGORIES instead of enumerating each category one by one?  That way we won't have to update this file when we add new categories.", "author": "richardmcclellan", "createdAt": "2020-08-12T15:46:38Z", "path": "core/src/main/java/com/amplifyframework/devmenu/EnvironmentInfo.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.devmenu;\n+\n+import android.content.Context;\n+import android.content.res.Resources;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.core.category.Category;\n+import com.amplifyframework.core.plugin.Plugin;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Scanner;\n+\n+/**\n+ * Contains information about the plugin versions added to the application\n+ * and the developer's environment.\n+ */\n+public final class EnvironmentInfo {\n+    // Name of the file that contains the developer environment information.\n+    private static final String DEV_ENV_INFO_FILE_NAME = \"localenvinfo\";\n+    // A map from developer environment information items to the formatted name of that item.\n+    private final Map<String, String> devEnvironmentItems;\n+\n+    /**\n+     * Constructs a new EnvironmentInfo instance.\n+     */\n+    public EnvironmentInfo() {\n+        devEnvironmentItems = new HashMap<>();\n+        devEnvironmentItems.put(\"nodejsVersion\", \"Node.js Version\");\n+        devEnvironmentItems.put(\"npmVersion\", \"NPM Version\");\n+        devEnvironmentItems.put(\"amplifyCliVersion\", \"Amplify CLI Version\");\n+        devEnvironmentItems.put(\"androidStudioVersion\", \"Android Studio Version\");\n+        devEnvironmentItems.put(\"osName\", \"OS\");\n+        devEnvironmentItems.put(\"osVersion\", \"OS Version\");\n+    }\n+\n+    /**\n+     * Returns a String representation of the version of each plugin added, or\n+     * \"No plugins added.\" if no plugins were added.\n+     * @return version information for each plugin added\n+     */\n+    public String getPluginVersions() {\n+        String pluginVersions = getCategoryPluginVersions(Amplify.Analytics) +", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNTg5Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469435892", "bodyText": "I was originally hoping to use Amplify.CATEGORIES, but I cannot access it since it's a private field.", "author": "eeatonaws", "createdAt": "2020-08-12T17:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MDU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469362729", "bodyText": "Hmm, is this a new file?  I haven't seen it before.  How is it generated?", "author": "richardmcclellan", "createdAt": "2020-08-12T15:49:43Z", "path": "core/src/main/java/com/amplifyframework/devmenu/EnvironmentInfo.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.devmenu;\n+\n+import android.content.Context;\n+import android.content.res.Resources;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.core.category.Category;\n+import com.amplifyframework.core.plugin.Plugin;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Scanner;\n+\n+/**\n+ * Contains information about the plugin versions added to the application\n+ * and the developer's environment.\n+ */\n+public final class EnvironmentInfo {\n+    // Name of the file that contains the developer environment information.\n+    private static final String DEV_ENV_INFO_FILE_NAME = \"localenvinfo\";", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzODc3OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469438779", "bodyText": "The file local-env-info.json currently resides in the amplify/.config directory in a customer's app project. Developer environment information will eventually be stored in this file and a copy of the file (named localenvinfo.json due to Android resource file naming restrictions) will be added to the app/src/main/res/raw directory in order to retrieve the information for the developer menu.", "author": "eeatonaws", "createdAt": "2020-08-12T17:54:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4MTE3Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469581176", "bodyText": "^ I think it would be preferable to just make a new config block inside of our existing amplifyconfiguration.json. We can't read the host-side file, and we probably won't benefit from having two separate .json files littered about the src/main/res/raw. This one should get design reviewed, ultimately. lizeyu@ is actively working on this so let's loop him in for review.", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk5OTkwMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469999902", "bodyText": "@jamesonwilliams: Erica, Daniel, Abhash, and I already did a design review with Jake Litwicki where it was decided the local env info file the CLI team is already generating is the correct one for this purpose and this is what iOS has implemented and has the user importing as part of the setup process. The problem with using amplifyconfiguration.json is that it would lead to conflicts when developers make commits from different machines with different environment info.", "author": "TrekSoft", "createdAt": "2020-08-13T14:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1MDk5MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r470750991", "bodyText": "The problem with using amplifyconfiguration.json is that it would lead to conflicts when developers make commits from different machines with different environment info.\n\nVery good point.\nIs there a design doc available to understand this a little more?    I'm curious to know how localenvinfo.json is generated.  Is it at compile time?", "author": "richardmcclellan", "createdAt": "2020-08-14T17:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1NDkxOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r470754918", "bodyText": "There is a design doc, I just shared it with you.", "author": "eeatonaws", "createdAt": "2020-08-14T17:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg3NjMzNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r470876337", "bodyText": "From the design doc, I can see that local-env-info.json already exists, and is generated on amplify configure.    However, there's still several questions that don't seem to be addressed in the doc.\n\nHow/when is local-env-info.json copied to localenvinfo.json in the res/raw folder?\nHow is it kept up to date when node version or amplify-cli version on my machine changes?  I would say that incorrect environment info is probably worse than no info at all.\nSincelocal-env-info.json is not intended to be under source control, how it is added to .gitignore?  Or is this something developers need to do manually?", "author": "richardmcclellan", "createdAt": "2020-08-14T21:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU1NDIyNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r471554227", "bodyText": "Questions answered via Chime:\n\n\nHow/when is local-env-info.json copied to localenvinfo.json in the res/raw folder?\n\n\nThe CLI will be updated to copy this file.  TBD on which command will trigger this.  Possibly amplify push.\n\n\nHow is it kept up to date when node version or amplify-cli version on my machine changes? I would say that incorrect environment info is probably worse than no info at all.\n\n\nThe goal is not to keep it up to date, but to make it match the environment info that was used to generate the Amplify project, since that is most useful for debugging.\n\n\nSince local-env-info.json is not intended to be under source control, how it is added to .gitignore? Or is this something developers need to do manually?\n\n\nThe CLI will be updated to add it to .gitignore when it is copied to the res/raw folder.", "author": "richardmcclellan", "createdAt": "2020-08-17T15:22:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MjcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5MzY4Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469393682", "bodyText": "This looks like the same method as AmplifyConfiguration.readInputJson.  Is there any way to use a common implementation for both use cases?    Maybe you could create a Resources.java in com.amplifyframework.core, for use by AmplifyConfiguration and EnvironmentInfo.   There is already a Resources.java in the testutils package, but I would not try to use that one.  Duplication in test code is generally acceptable.", "author": "richardmcclellan", "createdAt": "2020-08-12T16:38:36Z", "path": "core/src/main/java/com/amplifyframework/devmenu/EnvironmentInfo.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.devmenu;\n+\n+import android.content.Context;\n+import android.content.res.Resources;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.core.category.Category;\n+import com.amplifyframework.core.plugin.Plugin;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Scanner;\n+\n+/**\n+ * Contains information about the plugin versions added to the application\n+ * and the developer's environment.\n+ */\n+public final class EnvironmentInfo {\n+    // Name of the file that contains the developer environment information.\n+    private static final String DEV_ENV_INFO_FILE_NAME = \"localenvinfo\";\n+    // A map from developer environment information items to the formatted name of that item.\n+    private final Map<String, String> devEnvironmentItems;\n+\n+    /**\n+     * Constructs a new EnvironmentInfo instance.\n+     */\n+    public EnvironmentInfo() {\n+        devEnvironmentItems = new HashMap<>();\n+        devEnvironmentItems.put(\"nodejsVersion\", \"Node.js Version\");\n+        devEnvironmentItems.put(\"npmVersion\", \"NPM Version\");\n+        devEnvironmentItems.put(\"amplifyCliVersion\", \"Amplify CLI Version\");\n+        devEnvironmentItems.put(\"androidStudioVersion\", \"Android Studio Version\");\n+        devEnvironmentItems.put(\"osName\", \"OS\");\n+        devEnvironmentItems.put(\"osVersion\", \"OS Version\");\n+    }\n+\n+    /**\n+     * Returns a String representation of the version of each plugin added, or\n+     * \"No plugins added.\" if no plugins were added.\n+     * @return version information for each plugin added\n+     */\n+    public String getPluginVersions() {\n+        String pluginVersions = getCategoryPluginVersions(Amplify.Analytics) +\n+                getCategoryPluginVersions(Amplify.API) +\n+                getCategoryPluginVersions(Amplify.Auth) +\n+                getCategoryPluginVersions(Amplify.Logging) +\n+                getCategoryPluginVersions(Amplify.Storage) +\n+                getCategoryPluginVersions(Amplify.Hub) +\n+                getCategoryPluginVersions(Amplify.DataStore) +\n+                getCategoryPluginVersions(Amplify.Predictions);\n+        return pluginVersions.isEmpty() ? \"No plugins added.\" : pluginVersions;\n+    }\n+\n+    /**\n+     * Returns a String representation of information about the developer's environment, or\n+     * an empty string if the developer environment information could not be found.\n+     * @param context an Android Context\n+     * @return developer environment information\n+     * @throws JSONException if the developer environment information could not be read\n+     */\n+    public String getDeveloperEnvironmentInfo(@NonNull Context context) throws JSONException {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5ODc0OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469398748", "bodyText": "I'd suggest defining a static LOG at the top of the class like (this is how it is used elsewhere in Amplify):\nprivate static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:devmenu\");\n\nThen reference it like this:\nLOG.warn(\"Error reading...\");\n\nwarn is probably more appropriate than error since there is no RuntimeException being thrown.", "author": "richardmcclellan", "createdAt": "2020-08-12T16:47:02Z", "path": "core/src/main/java/com/amplifyframework/devmenu/DeveloperMenu.java", "diffHunk": "@@ -137,8 +139,18 @@ public String getLogs() {\n      * @return the issue body\n      */\n     public String createIssueBody(String description, boolean includeLogs) {\n-        // TODO: add environment information to issue body\n-        String envInfo = \"\";\n+        EnvironmentInfo environmentInfo = new EnvironmentInfo();\n+        String envInfo = \"Amplify Plugins Information:\\n\" + environmentInfo.getPluginVersions();\n+        String devEnvInfo = \"\";\n+        try {\n+            devEnvInfo = environmentInfo.getDeveloperEnvironmentInfo(context);\n+        } catch (JSONException jsonError) {\n+            Amplify.Logging.forNamespace(\"amplify\").error(\"Error reading developer environment information.\",", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwMjQ3NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469402475", "bodyText": "It's generally better practice to throw an exception (probably AmplifyException) rather than return an empty value or null.  Then, the caller has a reliable way to tell whether the returned value is valid.\nThis method also throws a JsonException, which is caught by the caller.  I'd suggest instead catching the JSONException inside getDeveloperEnvironmentInfo, and re-throwing it as an AmplifyException.\nThen, in createIssueBody, you can just catch AmplifyException instead of JSONException, and log a warning saying something went wrong reading the environment info.", "author": "richardmcclellan", "createdAt": "2020-08-12T16:53:23Z", "path": "core/src/main/java/com/amplifyframework/devmenu/EnvironmentInfo.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.devmenu;\n+\n+import android.content.Context;\n+import android.content.res.Resources;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.core.category.Category;\n+import com.amplifyframework.core.plugin.Plugin;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Scanner;\n+\n+/**\n+ * Contains information about the plugin versions added to the application\n+ * and the developer's environment.\n+ */\n+public final class EnvironmentInfo {\n+    // Name of the file that contains the developer environment information.\n+    private static final String DEV_ENV_INFO_FILE_NAME = \"localenvinfo\";\n+    // A map from developer environment information items to the formatted name of that item.\n+    private final Map<String, String> devEnvironmentItems;\n+\n+    /**\n+     * Constructs a new EnvironmentInfo instance.\n+     */\n+    public EnvironmentInfo() {\n+        devEnvironmentItems = new HashMap<>();\n+        devEnvironmentItems.put(\"nodejsVersion\", \"Node.js Version\");\n+        devEnvironmentItems.put(\"npmVersion\", \"NPM Version\");\n+        devEnvironmentItems.put(\"amplifyCliVersion\", \"Amplify CLI Version\");\n+        devEnvironmentItems.put(\"androidStudioVersion\", \"Android Studio Version\");\n+        devEnvironmentItems.put(\"osName\", \"OS\");\n+        devEnvironmentItems.put(\"osVersion\", \"OS Version\");\n+    }\n+\n+    /**\n+     * Returns a String representation of the version of each plugin added, or\n+     * \"No plugins added.\" if no plugins were added.\n+     * @return version information for each plugin added\n+     */\n+    public String getPluginVersions() {\n+        String pluginVersions = getCategoryPluginVersions(Amplify.Analytics) +\n+                getCategoryPluginVersions(Amplify.API) +\n+                getCategoryPluginVersions(Amplify.Auth) +\n+                getCategoryPluginVersions(Amplify.Logging) +\n+                getCategoryPluginVersions(Amplify.Storage) +\n+                getCategoryPluginVersions(Amplify.Hub) +\n+                getCategoryPluginVersions(Amplify.DataStore) +\n+                getCategoryPluginVersions(Amplify.Predictions);\n+        return pluginVersions.isEmpty() ? \"No plugins added.\" : pluginVersions;\n+    }\n+\n+    /**\n+     * Returns a String representation of information about the developer's environment, or\n+     * an empty string if the developer environment information could not be found.\n+     * @param context an Android Context\n+     * @return developer environment information\n+     * @throws JSONException if the developer environment information could not be read\n+     */\n+    public String getDeveloperEnvironmentInfo(@NonNull Context context) throws JSONException {\n+        Context appContext = Objects.requireNonNull(context).getApplicationContext();\n+        Resources resources = appContext.getApplicationContext().getResources();\n+        int resourceId = resources.getIdentifier(DEV_ENV_INFO_FILE_NAME, \"raw\", appContext.getPackageName());\n+        if (resourceId == 0) {\n+            return \"\";", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3OTM4Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469579387", "bodyText": "Oh, huh. Nice cleanup of the AmplifyConfiguration, with this change!", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:21:40Z", "path": "core/src/main/java/com/amplifyframework/core/Resources.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import android.content.Context;\n+import androidx.annotation.RawRes;\n+\n+import com.amplifyframework.AmplifyException;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.InputStream;\n+import java.util.Scanner;\n+\n+/**\n+ * A utility to read resource files.\n+ */\n+public final class Resources {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3OTYwMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469579601", "bodyText": "@ResId annotation on this one?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static JSONObject readJsonResourceFromId(Context context, int resourceId) throws AmplifyException {\n          \n          \n            \n                public static JSONObject readJsonResourceFromId(Context context, @ResId int resourceId) throws AmplifyException {", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:22:14Z", "path": "core/src/main/java/com/amplifyframework/core/Resources.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import android.content.Context;\n+import androidx.annotation.RawRes;\n+\n+import com.amplifyframework.AmplifyException;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.InputStream;\n+import java.util.Scanner;\n+\n+/**\n+ * A utility to read resource files.\n+ */\n+public final class Resources {\n+\n+    private Resources() { }\n+\n+    /**\n+     * Obtains the raw resource ID for the given resource identifier.\n+     * @param context An Android Context\n+     * @param identifier Name of a raw resource\n+     * @return ID of the raw resource\n+     * @throws AmplifyException if the specified raw resource does not exist\n+     */\n+    @RawRes\n+    public static int getRawResourceId(Context context, String identifier) throws AmplifyException {\n+        try {\n+            return context.getResources().getIdentifier(identifier, \"raw\", context.getPackageName());\n+        } catch (Exception exception) {\n+            throw new AmplifyException(\n+                    \"Failed to find \" + identifier + \".\",\n+                    exception, \"Please check that it exists.\"\n+            );\n+        }\n+    }\n+\n+    /**\n+     * Reads the content of the resource with the given identifier, as a {@link JSONObject}.\n+     * @param context An Android Context\n+     * @param identifier Name of a raw resource\n+     * @return JSON Object equivalent of the raw resource\n+     * @throws AmplifyException If resource with given ID does not exist or cannot be read\n+     */\n+    public static JSONObject readJsonResource(Context context, String identifier) throws AmplifyException {\n+        return readJsonResourceFromId(context, getRawResourceId(context, identifier));\n+    }\n+\n+    /**\n+     * Reads the content of the resource with the given ID, as a {@link JSONObject}.\n+     * @param context An Android Context\n+     * @param resourceId ID of a raw resource\n+     * @return JSON Object equivalent of the raw resource\n+     * @throws AmplifyException If resource with given ID does not exist or cannot be read\n+     */\n+    public static JSONObject readJsonResourceFromId(Context context, int resourceId) throws AmplifyException {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3OTk4MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469579980", "bodyText": "Can it be just private (and thus, not need documentation?)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Logger for the developer menu.\n          \n          \n            \n                 */\n          \n          \n            \n                protected static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:devmenu\");\n          \n          \n            \n                private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:devmenu\");", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:23:11Z", "path": "core/src/main/java/com/amplifyframework/devmenu/DeveloperMenu.java", "diffHunk": "@@ -33,6 +34,10 @@\n  * developer menu.\n  */\n public final class DeveloperMenu implements ShakeDetector.Listener {\n+    /**\n+     * Logger for the developer menu.\n+     */\n+    protected static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:devmenu\");", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NzYzNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469587635", "bodyText": "I made the Logger protected in order to access it in DevMenuEnvironmentFragment. I was thinking it would be helpful to have a single logger instance for the developer menu that can be shared across the developer menu code.", "author": "eeatonaws", "createdAt": "2020-08-12T22:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3OTk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4ODU2NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469588564", "bodyText": "@eeatonaws That is probably a more efficient way to do it, yes. The rest of the code base right now uses multiple logger impls, even for the same tag, though. It would be sticking with consistency, anyway, to do the same.", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:46:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3OTk4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4MTkxMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469581913", "bodyText": "In situations like this, it's best to separate out a collection, and then use control flow. e.g.,\n// TODO: can we centralize these, somewhere? We want ~1 file in the code base that lists all the categories.\nList<Category<?>> categories = Arrays.asList(Amplify.Whatever, ...);\nfor (Category<?> c : categories) {\n    getCategoryPluginVersions(c);\n}", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:28:07Z", "path": "core/src/main/java/com/amplifyframework/devmenu/EnvironmentInfo.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.devmenu;\n+\n+import android.content.Context;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.core.Resources;\n+import com.amplifyframework.core.category.Category;\n+import com.amplifyframework.core.plugin.Plugin;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Contains information about the plugin versions added to the application\n+ * and the developer's environment.\n+ */\n+public final class EnvironmentInfo {\n+    // Name of the file that contains the developer environment information.\n+    private static final String DEV_ENV_INFO_FILE_NAME = \"localenvinfo\";\n+    // A map from developer environment information items to the formatted name of that item.\n+    private final Map<String, String> devEnvironmentItems;\n+\n+    /**\n+     * Constructs a new EnvironmentInfo instance.\n+     */\n+    public EnvironmentInfo() {\n+        devEnvironmentItems = new HashMap<>();\n+        devEnvironmentItems.put(\"nodejsVersion\", \"Node.js Version\");\n+        devEnvironmentItems.put(\"npmVersion\", \"NPM Version\");\n+        devEnvironmentItems.put(\"amplifyCliVersion\", \"Amplify CLI Version\");\n+        devEnvironmentItems.put(\"androidStudioVersion\", \"Android Studio Version\");\n+        devEnvironmentItems.put(\"osName\", \"OS\");\n+        devEnvironmentItems.put(\"osVersion\", \"OS Version\");\n+    }\n+\n+    /**\n+     * Returns a String representation of the version of each plugin added, or\n+     * \"No plugins added.\" if no plugins were added.\n+     * @return version information for each plugin added\n+     */\n+    public String getPluginVersions() {\n+        String pluginVersions = getCategoryPluginVersions(Amplify.Analytics) +\n+                getCategoryPluginVersions(Amplify.API) +\n+                getCategoryPluginVersions(Amplify.Auth) +\n+                getCategoryPluginVersions(Amplify.Logging) +\n+                getCategoryPluginVersions(Amplify.Storage) +\n+                getCategoryPluginVersions(Amplify.Hub) +\n+                getCategoryPluginVersions(Amplify.DataStore) +\n+                getCategoryPluginVersions(Amplify.Predictions);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4MjQ2Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469582462", "bodyText": "Let's assume this info will be in amplifyconfiguraiton.json, pending some support from the CLI team. If that's so, you can write this in a forward-compatible way by checking:\nif (amplifyConfigJson.has(\"keyName\")) {\n    // use it!\n} else {\n    // env info not available\n}", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:29:34Z", "path": "core/src/main/java/com/amplifyframework/devmenu/EnvironmentInfo.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.devmenu;\n+\n+import android.content.Context;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.core.Resources;\n+import com.amplifyframework.core.category.Category;\n+import com.amplifyframework.core.plugin.Plugin;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Contains information about the plugin versions added to the application\n+ * and the developer's environment.\n+ */\n+public final class EnvironmentInfo {\n+    // Name of the file that contains the developer environment information.\n+    private static final String DEV_ENV_INFO_FILE_NAME = \"localenvinfo\";\n+    // A map from developer environment information items to the formatted name of that item.\n+    private final Map<String, String> devEnvironmentItems;\n+\n+    /**\n+     * Constructs a new EnvironmentInfo instance.\n+     */\n+    public EnvironmentInfo() {\n+        devEnvironmentItems = new HashMap<>();\n+        devEnvironmentItems.put(\"nodejsVersion\", \"Node.js Version\");\n+        devEnvironmentItems.put(\"npmVersion\", \"NPM Version\");\n+        devEnvironmentItems.put(\"amplifyCliVersion\", \"Amplify CLI Version\");\n+        devEnvironmentItems.put(\"androidStudioVersion\", \"Android Studio Version\");\n+        devEnvironmentItems.put(\"osName\", \"OS\");\n+        devEnvironmentItems.put(\"osVersion\", \"OS Version\");\n+    }\n+\n+    /**\n+     * Returns a String representation of the version of each plugin added, or\n+     * \"No plugins added.\" if no plugins were added.\n+     * @return version information for each plugin added\n+     */\n+    public String getPluginVersions() {\n+        String pluginVersions = getCategoryPluginVersions(Amplify.Analytics) +\n+                getCategoryPluginVersions(Amplify.API) +\n+                getCategoryPluginVersions(Amplify.Auth) +\n+                getCategoryPluginVersions(Amplify.Logging) +\n+                getCategoryPluginVersions(Amplify.Storage) +\n+                getCategoryPluginVersions(Amplify.Hub) +\n+                getCategoryPluginVersions(Amplify.DataStore) +\n+                getCategoryPluginVersions(Amplify.Predictions);\n+        return pluginVersions.isEmpty() ? \"No plugins added.\" : pluginVersions;\n+    }\n+\n+    /**\n+     * Returns a String representation of information about the developer's environment.\n+     * @param context an Android Context\n+     * @return developer environment information\n+     * @throws AmplifyException if the developer environment information could not be read\n+     */\n+    public String getDeveloperEnvironmentInfo(@NonNull Context context) throws AmplifyException {\n+        Context appContext = Objects.requireNonNull(context).getApplicationContext();\n+        JSONObject envInfo = Resources.readJsonResource(appContext, DEV_ENV_INFO_FILE_NAME);\n+        StringBuilder formattedEnvInfo = new StringBuilder();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NjA1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469596055", "bodyText": "I'm trying to think: what would be the harm of making this CATEGORIES public? If it were, then you could just do Amplify.CATEGORIES.values(), here. We'd want to change this one to Immutable.of(...), so that nobody could inject/modify categories or play games like that, I guess.", "author": "jamesonwilliams", "createdAt": "2020-08-12T23:08:18Z", "path": "core/src/main/java/com/amplifyframework/devmenu/EnvironmentInfo.java", "diffHunk": "@@ -60,14 +62,14 @@ public EnvironmentInfo() {\n      * @return version information for each plugin added\n      */\n     public String getPluginVersions() {\n-        String pluginVersions = getCategoryPluginVersions(Amplify.Analytics) +\n-                getCategoryPluginVersions(Amplify.API) +\n-                getCategoryPluginVersions(Amplify.Auth) +\n-                getCategoryPluginVersions(Amplify.Logging) +\n-                getCategoryPluginVersions(Amplify.Storage) +\n-                getCategoryPluginVersions(Amplify.Hub) +\n-                getCategoryPluginVersions(Amplify.DataStore) +\n-                getCategoryPluginVersions(Amplify.Predictions);\n+        // TODO: can we centralize these somewhere? We want ~1 file in the code base that lists all the categories.\n+        List<Category<?>> categories = Arrays.asList(Amplify.Analytics, Amplify.API, Amplify.Auth, Amplify.Logging,", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NDE2MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469684161", "bodyText": "I'm trying to think: what would be the harm of making this CATEGORIES public?\n\nOne downside is that CATEGORIES would then show up in autocomplete after typing Amplify., even though there's really no utility for it, which could cause confusion for customers.   Not a huge deal, but something to consider.\n\nWe'd want to change this one to Immutable.of(...)\n\nWhen doing this, you'd want to make sure the Immutable utility class can handle a LinkedHashMap.  It would need to maintain the order, and I'm not sure if it would or not.", "author": "richardmcclellan", "createdAt": "2020-08-13T04:06:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NjA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NTk1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r469685955", "bodyText": "Can you import this class instead of using the fully qualified form inline?", "author": "richardmcclellan", "createdAt": "2020-08-13T04:13:23Z", "path": "core/src/main/java/com/amplifyframework/core/Resources.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import android.content.Context;\n+import androidx.annotation.RawRes;\n+\n+import com.amplifyframework.AmplifyException;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.InputStream;\n+import java.util.Scanner;\n+\n+/**\n+ * A utility to read resource files.\n+ */\n+public final class Resources {\n+\n+    private Resources() { }\n+\n+    /**\n+     * Obtains the raw resource ID for the given resource identifier.\n+     * @param context An Android Context\n+     * @param identifier Name of a raw resource\n+     * @return ID of the raw resource\n+     * @throws AmplifyException if the specified raw resource does not exist\n+     */\n+    @RawRes\n+    public static int getRawResourceId(Context context, String identifier) throws AmplifyException {\n+        try {\n+            return context.getResources().getIdentifier(identifier, \"raw\", context.getPackageName());\n+        } catch (Exception exception) {\n+            throw new AmplifyException(\n+                    \"Failed to find \" + identifier + \".\",\n+                    exception, \"Please check that it exists.\"\n+            );\n+        }\n+    }\n+\n+    /**\n+     * Reads the content of the resource with the given identifier, as a {@link JSONObject}.\n+     * @param context An Android Context\n+     * @param identifier Name of a raw resource\n+     * @return JSON Object equivalent of the raw resource\n+     * @throws AmplifyException If resource with given ID does not exist or cannot be read\n+     */\n+    public static JSONObject readJsonResource(Context context, String identifier) throws AmplifyException {\n+        return readJsonResourceFromId(context, getRawResourceId(context, identifier));\n+    }\n+\n+    /**\n+     * Reads the content of the resource with the given ID, as a {@link JSONObject}.\n+     * @param context An Android Context\n+     * @param resourceId ID of a raw resource\n+     * @return JSON Object equivalent of the raw resource\n+     * @throws AmplifyException If resource with given ID does not exist or cannot be read\n+     */\n+    public static JSONObject readJsonResourceFromId(Context context, @RawRes int resourceId) throws AmplifyException {\n+        InputStream inputStream;\n+\n+        try {\n+            inputStream = context.getResources().openRawResource(resourceId);\n+        } catch (android.content.res.Resources.NotFoundException exception) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzMjMzNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r470932335", "bodyText": "I think its important to keep the type as LinkedHashMap here, because the order of the keys is important. Returning a Map makes it look like \"any old map will do,\" but that isn't so. There is a dependency order here, for setup.", "author": "jamesonwilliams", "createdAt": "2020-08-15T03:37:44Z", "path": "core/src/main/java/com/amplifyframework/core/Amplify.java", "diffHunk": "@@ -84,9 +89,9 @@ private Amplify() {\n         throw new UnsupportedOperationException(\"No instances allowed.\");\n     }\n \n-    // The fact that this is a LinkedHashMap, and not a Map, is important.\n+    // The fact that this is a LinkedHashMap is important.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4Nzk4Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r471587982", "bodyText": "Agreed!  How about this:\n\nKeep CATEGORIES as a private LinkedHashMap, and the Amplify class can continue using it as is.\nCreate a public getter method getCategoriesMap(), which returns an immutable, unordered categories Map, which is used by the DevMenu.", "author": "richardmcclellan", "createdAt": "2020-08-17T16:14:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzMjMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzMjYxNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/719#discussion_r470932616", "bodyText": "Ah crap.\nhttps://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#unmodifiableMap(java.util.Map)\nNot sure how you'll actually return a unmodifiable LinkedHashMap, though. You probably don't want to implement your own, that sounds like overkill.\nHmmm.", "author": "jamesonwilliams", "createdAt": "2020-08-15T03:41:17Z", "path": "core/src/main/java/com/amplifyframework/core/Amplify.java", "diffHunk": "@@ -96,7 +101,7 @@ private Amplify() {\n         categories.put(CategoryType.HUB, Hub);\n         categories.put(CategoryType.DATASTORE, DataStore);\n         categories.put(CategoryType.PREDICTIONS, Predictions);\n-        return categories;\n+        return Immutable.of(categories);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5fd08b362573f5ff5fb70ff1cf28ef0b7fb2e555", "url": "https://github.com/aws-amplify/amplify-android/commit/5fd08b362573f5ff5fb70ff1cf28ef0b7fb2e555", "message": "display environment info on dev menu", "committedDate": "2020-08-18T15:47:47Z", "type": "commit"}, {"oid": "502072412a55db75c49d82cfdb610ad20037e70d", "url": "https://github.com/aws-amplify/amplify-android/commit/502072412a55db75c49d82cfdb610ad20037e70d", "message": "made environment info section titles italic when filing an issue", "committedDate": "2020-08-18T15:47:47Z", "type": "commit"}, {"oid": "1f795bb990aae25c29dc616ecbe0f3e4492257cc", "url": "https://github.com/aws-amplify/amplify-android/commit/1f795bb990aae25c29dc616ecbe0f3e4492257cc", "message": "removed unnecessary casts inside file issue fragment", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "4c04f9ef7de006210f5449010405ae039c1d83f1", "url": "https://github.com/aws-amplify/amplify-android/commit/4c04f9ef7de006210f5449010405ae039c1d83f1", "message": "changed JSONException to AmplifyException", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "2855c06ce9f407beda5a3b6ad9bcf7c32c4e6b6b", "url": "https://github.com/aws-amplify/amplify-android/commit/2855c06ce9f407beda5a3b6ad9bcf7c32c4e6b6b", "message": "factored out logic to read JSON resource into Resources class", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "e672cb1879f28a6e48442c25106d6e1ce12b1bf3", "url": "https://github.com/aws-amplify/amplify-android/commit/e672cb1879f28a6e48442c25106d6e1ce12b1bf3", "message": "update comment for method to get developer environment info", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "23ceb2c2fea8a0f90754bfe13e214b868dab8d05", "url": "https://github.com/aws-amplify/amplify-android/commit/23ceb2c2fea8a0f90754bfe13e214b868dab8d05", "message": "added RawRes annotation to resource ID and loop through categories to get plugin versions", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "c86b7eed7d39788a12f03c66c87f6a37644a9bd5", "url": "https://github.com/aws-amplify/amplify-android/commit/c86b7eed7d39788a12f03c66c87f6a37644a9bd5", "message": "added import statement for NotFoundException to Resources", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "aaedacf389b3e08e8d3959da8390da4df7e5feb7", "url": "https://github.com/aws-amplify/amplify-android/commit/aaedacf389b3e08e8d3959da8390da4df7e5feb7", "message": "made Amplify.CATEGORIES public and immutable", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "cd583afe9effcedbada0ce002ab29e28f5605096", "url": "https://github.com/aws-amplify/amplify-android/commit/cd583afe9effcedbada0ce002ab29e28f5605096", "message": "iterate through Amplify.CATEGORIES to get plugin versions", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "5aea687d801e495cfa134df506788a66acbf1eee", "url": "https://github.com/aws-amplify/amplify-android/commit/5aea687d801e495cfa134df506788a66acbf1eee", "message": "made CATEGORIES field private and added getCategoriesMap method", "committedDate": "2020-08-18T15:54:30Z", "type": "commit"}, {"oid": "5aea687d801e495cfa134df506788a66acbf1eee", "url": "https://github.com/aws-amplify/amplify-android/commit/5aea687d801e495cfa134df506788a66acbf1eee", "message": "made CATEGORIES field private and added getCategoriesMap method", "committedDate": "2020-08-18T15:54:30Z", "type": "forcePushed"}]}