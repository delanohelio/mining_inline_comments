{"pr_number": 1014, "pr_title": "fix(aws-datastore): idempotent deletions from merger", "pr_createdAt": "2020-12-01T02:18:23Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/1014", "timeline": [{"oid": "d1bacae287843e48a5eea922185fab8214a22109", "url": "https://github.com/aws-amplify/amplify-android/commit/d1bacae287843e48a5eea922185fab8214a22109", "message": "fix(aws-datastore): idempotent deletions from merger\n\nWhen deletions are merged to the local store, the storage adapter might\nthrow an error, if there's nothing left to delete.\n\nThe existing code tries to work around this by first checking if there\nis a matching instance before attempting to delete it.\n\nInstead, we will swallow deletion failures and log a verbose message.\n\nResolves: https://github.com/aws-amplify/amplify-android/issues/1011", "committedDate": "2020-12-01T02:14:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ5NTQ1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/1014#discussion_r533495455", "bodyText": "This PR has two main changes:\n\nRemove the ifPresent(...) check;\nOnly log this failure, instead of calling emitter.onError(...).", "author": "jamesonwilliams", "createdAt": "2020-12-01T15:20:46Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Merger.java", "diffHunk": "@@ -128,63 +126,35 @@\n     }\n \n     // Delete a model.\n-    private <T extends Model> Completable delete(T model, Consumer<StorageItemChange<T>> onStorageItemChange) {\n-        return Completable.defer(() -> Completable.create(emitter -> {\n-            // First, check if the thing exists.\n-            // If we don't, we'll get an exception saying basically,\n-            // \"failed to delete a non-existing thing.\"\n-            ifPresent(model,\n-                () -> localStorageAdapter.delete(\n-                    model,\n-                    StorageItemChange.Initiator.SYNC_ENGINE,\n-                    QueryPredicates.all(),\n-                    storageItemChange -> {\n-                        onStorageItemChange.accept(storageItemChange);\n-                        emitter.onComplete();\n-                    },\n-                    emitter::onError\n-                ),\n-                emitter::onComplete\n-            );\n-        }));\n+    private <T extends Model> Completable delete(T model, Consumer<StorageItemChange.Type> changeTypeConsumer) {\n+        return Completable.create(emitter ->\n+            localStorageAdapter.delete(model, StorageItemChange.Initiator.SYNC_ENGINE, QueryPredicates.all(),\n+                storageItemChange -> {\n+                    changeTypeConsumer.accept(storageItemChange.type());\n+                    emitter.onComplete();\n+                },\n+                failure -> {\n+                    LOG.verbose(", "originalCommit": "d1bacae287843e48a5eea922185fab8214a22109", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}