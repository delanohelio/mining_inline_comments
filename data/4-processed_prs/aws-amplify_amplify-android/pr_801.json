{"pr_number": 801, "pr_title": "Revert \"Revert \"fix(aws-datastore): selection set for nested custom types (#730)\" (#777)\"", "pr_createdAt": "2020-09-04T18:30:34Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/801", "timeline": [{"oid": "748ae601b757255f267a62b0bcbaa3bb49716ad7", "url": "https://github.com/aws-amplify/amplify-android/commit/748ae601b757255f267a62b0bcbaa3bb49716ad7", "message": "Revert \"Revert \"fix(aws-datastore): selection set for nested custom types (#730)\" (#777)\"\n\nThis reverts commit fbef1e8f9ccfb25e140bbb5199d018b016499958.", "committedDate": "2020-09-04T17:48:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc4ODgyNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/801#discussion_r483788826", "bodyText": "@saltonmassally, @richardmcclellan, @jamesonwilliams I know this wasn't flagged on the original PR but just wanted to double check we're good changing this public method name since it would be a breaking change if anyone was currently using it?", "author": "TrekSoft", "createdAt": "2020-09-04T18:35:37Z", "path": "core/src/main/java/com/amplifyframework/util/FieldFinder.java", "diffHunk": "@@ -45,21 +46,40 @@ private FieldFinder() {\n      * @return set of fields\n      */\n     @NonNull\n-    public static List<Field> findFieldsIn(@NonNull Class<?> clazz) {\n+    public static List<Field> findModelFieldsIn(@NonNull Class<?> clazz) {", "originalCommit": "748ae601b757255f267a62b0bcbaa3bb49716ad7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgxNzM4OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/801#discussion_r483817389", "bodyText": "No one should be using our FieldFinder; it's an internal utility in the context of the project.", "author": "jamesonwilliams", "createdAt": "2020-09-04T19:49:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc4ODgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyMzE2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/801#discussion_r483823166", "bodyText": "@jamesonwilliams makes sense.  I just removed my commit entirely for now.", "author": "richardmcclellan", "createdAt": "2020-09-04T20:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc4ODgyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgxNzU4Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/801#discussion_r483817583", "bodyText": "Are these different?", "author": "jamesonwilliams", "createdAt": "2020-09-04T19:49:58Z", "path": "core/src/main/java/com/amplifyframework/util/FieldFinder.java", "diffHunk": "@@ -39,44 +40,52 @@ private FieldFinder() {\n     }\n \n     /**\n-     * Get a set of all the fields of a class that are\n-     * annotated with {@link ModelField} annotation.\n+     * Get a set of all the fields of a class that are annotated with {@link ModelField} annotation.\n+     *\n+     * @deprecated Use {@link #findModelFieldsIn} instead.\n+     * @param clazz the Class object.\n+     * @return set of fields.\n+     */\n+    @NonNull\n+    @Deprecated\n+    public static List<Field> findFieldsIn(@NonNull Class<?> clazz) {\n+        return findModelFieldsIn(clazz);\n+    }\n+\n+    /**\n+     * Get a set of all the fields of a class that are annotated with {@link ModelField} annotation.\n      *\n      * @param clazz the Class object.\n      * @return set of fields\n      */\n     @NonNull\n     public static List<Field> findModelFieldsIn(@NonNull Class<?> clazz) {\n-        final List<Field> fields = new ArrayList<>();\n-        Class<?> fieldContainerClazz = clazz;\n-        while (fieldContainerClazz != null) {\n-            for (Field field : fieldContainerClazz.getDeclaredFields()) {\n-                if (field.isAnnotationPresent(ModelField.class)) {\n-                    fields.add(field);\n-                }\n-            }\n-            fieldContainerClazz = fieldContainerClazz.getSuperclass();\n-        }\n-        Collections.sort(fields, (o1, o2) -> o1.getName().compareTo(o2.getName()));\n-        return Immutable.of(fields);\n+        return findFieldsIn(clazz, field -> field.isAnnotationPresent(ModelField.class));\n     }\n \n     /**\n-     * Helper for finding all fields in a class without limiting limiting to {@link ModelField}.\n+     * Helper for finding all fields in a class without limiting to {@link ModelField}.\n      * @param clazz clazz the Class object.\n      * @return set of fields\n      */\n     @NonNull\n     public static List<Field> findAllFieldsIn(@NonNull Class<?> clazz) {\n+        return findFieldsIn(clazz, field -> true);\n+    }\n+\n+    @NonNull\n+    private static List<Field> findFieldsIn(@NonNull Class<?> clazz, Predicate<Field> predicate) {\n         final List<Field> fields = new ArrayList<>();\n         Class<?> fieldContainerClazz = clazz;\n         while (fieldContainerClazz != null) {\n             for (Field field : fieldContainerClazz.getDeclaredFields()) {\n-                fields.add(field);\n+                if(predicate.test(field)) {\n+                    fields.add(field);\n+                }\n             }\n             fieldContainerClazz = fieldContainerClazz.getSuperclass();\n         }\n-        Collections.sort(fields, Comparator.comparing(Field::getName));\n+        Collections.sort(fields, (o1, o2) -> o1.getName().compareTo(o2.getName()));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgxNzY1Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/801#discussion_r483817656", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(predicate.test(field)) {\n          \n          \n            \n                            if (predicate.test(field)) {", "author": "jamesonwilliams", "createdAt": "2020-09-04T19:50:07Z", "path": "core/src/main/java/com/amplifyframework/util/FieldFinder.java", "diffHunk": "@@ -39,44 +40,52 @@ private FieldFinder() {\n     }\n \n     /**\n-     * Get a set of all the fields of a class that are\n-     * annotated with {@link ModelField} annotation.\n+     * Get a set of all the fields of a class that are annotated with {@link ModelField} annotation.\n+     *\n+     * @deprecated Use {@link #findModelFieldsIn} instead.\n+     * @param clazz the Class object.\n+     * @return set of fields.\n+     */\n+    @NonNull\n+    @Deprecated\n+    public static List<Field> findFieldsIn(@NonNull Class<?> clazz) {\n+        return findModelFieldsIn(clazz);\n+    }\n+\n+    /**\n+     * Get a set of all the fields of a class that are annotated with {@link ModelField} annotation.\n      *\n      * @param clazz the Class object.\n      * @return set of fields\n      */\n     @NonNull\n     public static List<Field> findModelFieldsIn(@NonNull Class<?> clazz) {\n-        final List<Field> fields = new ArrayList<>();\n-        Class<?> fieldContainerClazz = clazz;\n-        while (fieldContainerClazz != null) {\n-            for (Field field : fieldContainerClazz.getDeclaredFields()) {\n-                if (field.isAnnotationPresent(ModelField.class)) {\n-                    fields.add(field);\n-                }\n-            }\n-            fieldContainerClazz = fieldContainerClazz.getSuperclass();\n-        }\n-        Collections.sort(fields, (o1, o2) -> o1.getName().compareTo(o2.getName()));\n-        return Immutable.of(fields);\n+        return findFieldsIn(clazz, field -> field.isAnnotationPresent(ModelField.class));\n     }\n \n     /**\n-     * Helper for finding all fields in a class without limiting limiting to {@link ModelField}.\n+     * Helper for finding all fields in a class without limiting to {@link ModelField}.\n      * @param clazz clazz the Class object.\n      * @return set of fields\n      */\n     @NonNull\n     public static List<Field> findAllFieldsIn(@NonNull Class<?> clazz) {\n+        return findFieldsIn(clazz, field -> true);\n+    }\n+\n+    @NonNull\n+    private static List<Field> findFieldsIn(@NonNull Class<?> clazz, Predicate<Field> predicate) {\n         final List<Field> fields = new ArrayList<>();\n         Class<?> fieldContainerClazz = clazz;\n         while (fieldContainerClazz != null) {\n             for (Field field : fieldContainerClazz.getDeclaredFields()) {\n-                fields.add(field);\n+                if(predicate.test(field)) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgxNzc4Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/801#discussion_r483817787", "bodyText": "Suggested change", "author": "jamesonwilliams", "createdAt": "2020-09-04T19:50:30Z", "path": "core/src/main/java/com/amplifyframework/util/FieldFinder.java", "diffHunk": "@@ -17,15 +17,16 @@\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.core.util.Predicate;\n \n import com.amplifyframework.core.model.annotations.ModelField;\n \n import java.lang.reflect.Field;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.List;\n \n+", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgxNzkzMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/801#discussion_r483817931", "bodyText": "We have various functional interfaces like this defined in our own library, I think. Should we use AndroidX's? Or one of ours?", "author": "jamesonwilliams", "createdAt": "2020-09-04T19:50:53Z", "path": "core/src/main/java/com/amplifyframework/util/FieldFinder.java", "diffHunk": "@@ -17,15 +17,16 @@\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.core.util.Predicate;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "748ae601b757255f267a62b0bcbaa3bb49716ad7", "url": "https://github.com/aws-amplify/amplify-android/commit/748ae601b757255f267a62b0bcbaa3bb49716ad7", "message": "Revert \"Revert \"fix(aws-datastore): selection set for nested custom types (#730)\" (#777)\"\n\nThis reverts commit fbef1e8f9ccfb25e140bbb5199d018b016499958.", "committedDate": "2020-09-04T17:48:37Z", "type": "forcePushed"}]}