{"pr_number": 716, "pr_title": "feature(datastore) Trigger network-related hub events", "pr_createdAt": "2020-08-11T16:41:10Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/716", "timeline": [{"oid": "9fb49de8d970be9046bc6be62f58c965c8672b39", "url": "https://github.com/aws-amplify/amplify-android/commit/9fb49de8d970be9046bc6be62f58c965c8672b39", "message": "DataStore ready and subscriptionsEstablished events", "committedDate": "2020-08-10T21:06:23Z", "type": "commit"}, {"oid": "b076c8159941dbe59ecde01ade7c78e5063a785d", "url": "https://github.com/aws-amplify/amplify-android/commit/b076c8159941dbe59ecde01ade7c78e5063a785d", "message": "Merge branch 'main' into rjuliano/ds-net-hub-events", "committedDate": "2020-08-11T01:27:42Z", "type": "commit"}, {"oid": "3a20c2e049bb37378fdca950e0722becd44303cd", "url": "https://github.com/aws-amplify/amplify-android/commit/3a20c2e049bb37378fdca950e0722becd44303cd", "message": "Added networkStatus event", "committedDate": "2020-08-11T16:25:46Z", "type": "commit"}, {"oid": "59da7325267e20ce9d091e2423c3a5828ab716d1", "url": "https://github.com/aws-amplify/amplify-android/commit/59da7325267e20ce9d091e2423c3a5828ab716d1", "message": "Adding basic tests for event objects", "committedDate": "2020-08-11T17:33:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MTIwMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469051202", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final class ApiConnectionEventListener extends EventListener {\n          \n          \n            \n                private static final class ApiConnectionEventListener extends EventListener {", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:11:24Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -732,4 +748,43 @@ public int hashCode() {\n             return result;\n         }\n     }\n+\n+    /**\n+     * This class implements OkHttp's {@link EventListener}. Its main purpose\n+     * is to listen to network-related events reported by the http client and trigger\n+     * a Hub event if necessary.\n+     */\n+    private final class ApiConnectionEventListener extends EventListener {", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MTI4Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469051283", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private AtomicReference<ApiEndpointStatus> currentNetworkStatus;\n          \n          \n            \n                    private final AtomicReference<ApiEndpointStatus> currentNetworkStatus;", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:11:34Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -732,4 +748,43 @@ public int hashCode() {\n             return result;\n         }\n     }\n+\n+    /**\n+     * This class implements OkHttp's {@link EventListener}. Its main purpose\n+     * is to listen to network-related events reported by the http client and trigger\n+     * a Hub event if necessary.\n+     */\n+    private final class ApiConnectionEventListener extends EventListener {\n+        private AtomicReference<ApiEndpointStatus> currentNetworkStatus;", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MTk4OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469051988", "bodyText": "You call currentNetworkStatus.get() twice here, without any synchronization guards, it appears. What happens if the value changes between the two calls?\n\nDo you need to add syncrhonization primitives?\nYou can defend by making one .get(), caching the result, and then using the cached result in both locations.", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:13:00Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -732,4 +748,43 @@ public int hashCode() {\n             return result;\n         }\n     }\n+\n+    /**\n+     * This class implements OkHttp's {@link EventListener}. Its main purpose\n+     * is to listen to network-related events reported by the http client and trigger\n+     * a Hub event if necessary.\n+     */\n+    private final class ApiConnectionEventListener extends EventListener {\n+        private AtomicReference<ApiEndpointStatus> currentNetworkStatus;\n+\n+        ApiConnectionEventListener() {\n+            currentNetworkStatus = new AtomicReference<>(ApiEndpointStatus.UNKOWN);\n+        }\n+\n+        @Override\n+        public void connectFailed(@NotNull Call call,\n+                                  @NotNull InetSocketAddress inetSocketAddress,\n+                                  @NotNull Proxy proxy,\n+                                  @Nullable Protocol protocol,\n+                                  @NotNull IOException ioe) {\n+            super.connectFailed(call, inetSocketAddress, proxy, protocol, ioe);\n+            triggerEventIfStatusChanged(currentNetworkStatus.getAndSet(ApiEndpointStatus.NOT_REACHABLE));\n+        }\n+\n+        @Override\n+        public void connectionAcquired(@NotNull Call call, @NotNull Connection connection) {\n+            super.connectionAcquired(call, connection);\n+            triggerEventIfStatusChanged(currentNetworkStatus.getAndSet(ApiEndpointStatus.REACHABLE));\n+        }\n+\n+        private void triggerEventIfStatusChanged(@NonNull ApiEndpointStatus previousStatus) {\n+            if (!previousStatus.equals(currentNetworkStatus.get())) {\n+                ApiEndpointStatusChangeEvent eventData =\n+                    new ApiEndpointStatusChangeEvent(currentNetworkStatus.get(), previousStatus);", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0NzgzMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469247832", "bodyText": "Good call. I'm going to implement the latter.", "author": "rjuliano", "createdAt": "2020-08-12T13:11:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MTk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3MzIwMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469373203", "bodyText": "Actually, by moving the logic that publish the message, this becomes a non-issue.", "author": "rjuliano", "createdAt": "2020-08-12T16:05:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MTk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MzA4NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469053085", "bodyText": "In a microservice I did a couple years back, I found a pattern where you can add behaviors to an enum. In that case, I would do like Metrics.SOME_SERVICE_CRAP_HAPPENED.report().\nBut, you could use a similar mechanism here, potentially. Maybe something like:\nApiEndpointStatus.UNKNOWN.announce();\nAnd then have the hub broadcast logic contained inside the enum itself.", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:15:10Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -732,4 +748,43 @@ public int hashCode() {\n             return result;\n         }\n     }\n+\n+    /**", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2OTY5OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469369699", "bodyText": "I went with a variation of this approach. The event payload needs to have the previous status. So I created a function called announceTransitionFrom(previousStatus). Let me know what you think.", "author": "rjuliano", "createdAt": "2020-08-12T15:59:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MzA4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NDU4MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469054580", "bodyText": "I used to have a convenient method on the HubAccumulator that allowed you to just get the first one. like takeOne(), it was called. Should we include an awaitFirst() to simplify the List return type? Maybe not. Just sayin'.", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:18:09Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/AWSApiPluginTest.java", "diffHunk": "@@ -246,6 +255,13 @@ public void graphQlMutationGetsResponse() throws JSONException, ApiException {\n \n         // Assert that the expected response was received\n         assertEquals(expectedName, actualResponse.getData().getName());\n+\n+        // Verify that the expected hub event fired.\n+        List<HubEvent<?>> events = networkStatusObserver.await();", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ4NDE5Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469484197", "bodyText": "That's a good idea. Just added a commit with that change.", "author": "rjuliano", "createdAt": "2020-08-12T19:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NDU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1Njc0NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469056745", "bodyText": "Aha!\nWe have this unfortunate situation with Hub right now, where we have to cast the data type.\nI wonder if instead we can include a factory on the event structure, like:\nApiEndpointStatusChangedEvent event = ApiEndpointStatusChangedEvent.fromEvent(events.get(0));\nOr, very similar:\nApiEndpointStatuChangedEvent event = ApiEndpointStatusChangedEvent.from(events.get(0).getData());\nThis would at least pull the cast into our own code where we can do it safely, without the customer needing to worry about it.\nImpl might start off looking like an equals(....) almost:\npublic static ApiEndpointStatusChangedEvent from(Object someBlob) {\n    if (!(someBlob instanceof ApiEndpointStatuChangedEvent)) {\n        throw BadNewsBearsError(\"Shucks!\");\n    }\n    ... etc. validate fields,\n    return new ApiEndpointStatusChangeEvent(..., ...);\n}", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:22:21Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/AWSApiPluginTest.java", "diffHunk": "@@ -246,6 +255,13 @@ public void graphQlMutationGetsResponse() throws JSONException, ApiException {\n \n         // Assert that the expected response was received\n         assertEquals(expectedName, actualResponse.getData().getName());\n+\n+        // Verify that the expected hub event fired.\n+        List<HubEvent<?>> events = networkStatusObserver.await();\n+        assertTrue(events.size() > 0);\n+        assertTrue(events.get(0).getData() instanceof ApiEndpointStatusChangeEvent);\n+        ApiEndpointStatusChangeEvent eventData = (ApiEndpointStatusChangeEvent) events.get(0).getData();", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5MTAxOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470191019", "bodyText": "I created a couple of factory methods in each of the classes used as payloads for hub events. There's definitely some work to do in the Hub in general to make the approach cleaner. As it stands, the subscribe method definition takes a HubSubscriber instance which is currently just taking HubEvent<?> as a parameter which kind of prevents a cleaner approach to the problem.\nTLDR: a cleaner approach would probably require changes to the Hub category definition.", "author": "rjuliano", "createdAt": "2020-08-13T19:19:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1Njc0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc3OTg5Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470779892", "bodyText": "I did some refactoring for this to make the calling code a bit cleaner by adding a factory method to HubSubscriber. Calling code then looks like this:\nHubSubscriber subscriber = HubSubscriber.<ApiEndpointStatusChangeEvent>create(eventData -> {\n\tNetworkStatusEvent.from(eventData).toHubEvent().publish(HubChannel.DATASTORE, Amplify.Hub);\n};\n\nHubFilter filter = hubEvent -> {\n\treturn ApiChannelEventName.API_ENDPOINT_STATUS_CHANGED.name().equals(hubEvent.getName());\n};\n\nAmplify.Hub.subscribe(HubChannel.API, filter, subscriber);", "author": "rjuliano", "createdAt": "2020-08-14T18:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1Njc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NzkyNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469057924", "bodyText": "Can you shuffle this off to a helper class, and then do a thin integration to the plugin with like\nNetworkStatusMonitor.enable();\n\nOr something like that?\nAlso, does this need to be int the constructor? Or could it go down into the configure(...) or initialize(...) hooks? Which is the most appropriate lifecycle hook for this?", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:24:40Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -98,6 +103,20 @@ private AWSDataStorePlugin(\n             () -> api.getPlugins().isEmpty() ? Orchestrator.Mode.LOCAL_ONLY : Orchestrator.Mode.SYNC_VIA_API\n         );\n         this.userProvidedConfiguration = userProvidedConfiguration;\n+\n+        // Listen for API_ENDPOINT_STATUS_CHANGED to be emitted by the API and trigger\n+        // the DataStore NETWORK_STATUS event accordingly.\n+        Amplify.Hub.subscribe(HubChannel.API, hubEvent -> {\n+            return ApiChannelEventName.API_ENDPOINT_STATUS_CHANGED.name().equals(hubEvent.getName());\n+        }, hubEvent -> {\n+                if (hubEvent.getData() instanceof ApiEndpointStatusChangeEvent) {\n+                    ApiEndpointStatusChangeEvent eventData = (ApiEndpointStatusChangeEvent) hubEvent.getData();\n+                    boolean isActive = ApiEndpointStatus.REACHABLE.equals(eventData.getCurrentStatus());\n+                    Amplify.Hub.publish(HubChannel.DATASTORE,\n+                        HubEvent.create(DataStoreChannelEventName.NETWORK_STATUS, new NetworkStatusEvent(isActive))\n+                    );\n+                }\n+            });", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5NDA2Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470194067", "bodyText": "I tried to clean up a bit, by moving the casting logic into the event types. That being said, those methods throw exceptions so I ended up with an ugly try/catch here :(\nMaybe I'll just encapsulate the whole subscribe block somewhere.\nI think I can probably move this out of the constructor. It just has to happen before we trigger the sync.", "author": "rjuliano", "createdAt": "2020-08-13T19:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NzkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5OTYyMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470199623", "bodyText": "Ok...I moved it out to configure and did a variation of what you suggested with regards to encapsulating that block of code to listen and trigger events. Let me know what you think. I feel like I could do a whole separate PR refactoring some of this stuff \ud83e\udd23", "author": "rjuliano", "createdAt": "2020-08-13T19:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NzkyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2MzAzOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469063038", "bodyText": "You've got a mechanism repeated four times -- it's a signal to make it a data problem, instead:\nList<DataStoreChannelEventName> expectedEventNames = Arrays.asList(\n    DataStoreChannelEventName.REMOTE_SYNC_STARTED,\n    DataStoreChannelEventName.READY,\n    DataStoreChannelEventName.SUBSCRIPTIONS_ESTABLISHED,\n    DataStoreChannelEventName.NETWORK_STATUS\n);\nMap<DataStoreChannelEventName, HubAccumulator> accums = new HashMap<>();\nfor (DataStoreChannelEventName eventName : eventNames) {\n    HubAccumulator accum = HubAccumulator.create(HubChannel.STORAGE, eventName, 1);\n    accums.add(accum);\n    accum.start();\n}\nOr actually -- for extra credit, we could make a MultipleHubAccumulator utility, to get some of this boilerplate out of the test class itself.\nIt could accept a  LinkedHashMap (to mandate and ordering in which to call await(). And have a usage pattenr like this:\n// It's like a list of events, in order. Allows duplicates by Integer value > 1\n// HubEvent1 --> 1 time\n// HubEvent2 --> 1 time\n// HubEvent1 --> 5 times\n// etc.\nLinkedHashMap<HubEvent<?>, Integer> tape = new LinkedHashMap<>();\nMultiHubAccumulator accum = MultiHubAccumulator.create(tape);\n\naccum.start();\n\naccum.await(); // Waits for the entire \"tape\" to play.", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:34:28Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -132,14 +139,27 @@ public void configureAndInitializeInApiMode() throws JSONException, AmplifyExcep\n         HubAccumulator orchestratorInitObserver =\n             HubAccumulator.create(HubChannel.DATASTORE, DataStoreChannelEventName.REMOTE_SYNC_STARTED, 1)\n                 .start();\n+        HubAccumulator dataStoreReadyObserver =\n+            HubAccumulator.create(HubChannel.DATASTORE, DataStoreChannelEventName.READY, 1)\n+                .start();\n+        HubAccumulator subscriptionsEstablishedObserver =\n+            HubAccumulator.create(HubChannel.DATASTORE, DataStoreChannelEventName.SUBSCRIPTIONS_ESTABLISHED, 1)\n+                .start();\n+        HubAccumulator networkStatusObserver =\n+            HubAccumulator.create(HubChannel.DATASTORE, DataStoreChannelEventName.NETWORK_STATUS, 1)\n+                .start();", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc4MTI1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470781251", "bodyText": "I'll handle this in a separate PR :)", "author": "rjuliano", "createdAt": "2020-08-14T18:15:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2MzAzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NDEwMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469064101", "bodyText": "You could play a game here like:\nApiEndpointStatuChangeEvent eventData =\n    ApiEndpointStatus.REACHABLE.changeTo(ApiEndpiontStatus.UNKNOWN);\nBasically, add afactory method to the enum, that has the ability to generate the change events. It knows the \"from\" based on what is being invoked, and it knows the \"to\", if we pass that as an argument.", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:36:28Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -306,8 +326,16 @@ private ApiCategory mockApiCategoryWithGraphQlApi() throws AmplifyException {\n         when(mockApiPlugin.getPluginKey()).thenReturn(MOCK_API_PLUGIN_NAME);\n         when(mockApiPlugin.getCategoryType()).thenReturn(CategoryType.API);\n \n+        ApiEndpointStatusChangeEvent eventData =\n+            new ApiEndpointStatusChangeEvent(ApiEndpointStatusChangeEvent.ApiEndpointStatus.REACHABLE,", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg0MjM5NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470842395", "bodyText": "I think this one ended up getting addressed by some of the refactoring I did.", "author": "rjuliano", "createdAt": "2020-08-14T20:07:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NDEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NDQ2NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469064464", "bodyText": "What kinds of status changes are these? Like, we are able to reach it or not?", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:37:11Z", "path": "core/src/main/java/com/amplifyframework/api/ApiChannelEventName.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api;\n+\n+import com.amplifyframework.hub.HubCategory;\n+import com.amplifyframework.hub.HubChannel;\n+import com.amplifyframework.hub.HubEvent;\n+\n+/**\n+ * An enumeration of the names of events relating the the {@link ApiCategory},\n+ * that are published via {@link HubCategory#publish(HubChannel, HubEvent)} on the\n+ * {@link HubChannel#API} channel.\n+ */\n+public enum ApiChannelEventName {\n+    /**\n+     * The status of the remote API endpoint has changed.", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxOTQxMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469519410", "bodyText": "I did a little word smithing there. Let me know if it looks OK.", "author": "rjuliano", "createdAt": "2020-08-12T20:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NDQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NDgxMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469064813", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Notifies if the network is active or not.\n          \n          \n            \n                 * Indicates that the network is active or not.", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:37:52Z", "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreChannelEventName.java", "diffHunk": "@@ -52,7 +52,23 @@\n     /**\n      * The remote synchonization processes stopped.\n      */\n-    REMOTE_SYNC_STOPPED(\"remote_sync_stopped\");\n+    REMOTE_SYNC_STOPPED(\"remote_sync_stopped\"),\n+\n+    /**\n+     * Notifies if the network is active or not.", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NTE3Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469065173", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int result = Boolean.valueOf(active).hashCode();\n          \n          \n            \n                    return result;\n          \n          \n            \n                    return Boolean.valueOf(active).hashCode();", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:38:34Z", "path": "core/src/main/java/com/amplifyframework/datastore/events/NetworkStatusEvent.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.events;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+/**\n+ * Event payload for the {@link com.amplifyframework.datastore.DataStoreChannelEventName#NETWORK_STATUS} event.\n+ */\n+public final class NetworkStatusEvent {\n+    private final boolean active;\n+\n+    /**\n+     * Constructs a {@link NetworkStatusEvent} object.\n+     * @param isActive True if connection is active, false otherwise.\n+     */\n+    public NetworkStatusEvent(boolean isActive) {\n+        this.active = isActive;\n+    }\n+\n+    /**\n+     * Getter for the active field.\n+     * @return The value of the active field.\n+     */\n+    public boolean getActive() {\n+        return active;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = Boolean.valueOf(active).hashCode();\n+        return result;", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NjgwOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469066809", "bodyText": "Personally I agree with you that these are useful types of tests. However, I recently changed how I do this test, of the hashCode(). Rarely will anyone ever call hashCode(). Perhaps they will if they are writing their own, higher level hashCode(), and include one of these types in it. But more often, they'll probably try to use it in a collection. So like:\nPossibleSaneHashObject one = new PossiblySaneHashObject();\nPossibleSaneHashObject two = new PossiblySaneHashObject();\nSet<PossiblySaneHashObject> set = new HashSet<>();\nset.add(one);\nset.add(two);\nassertEquals(1, set.size());\nThis is straight-up pedantry at this point, feel free to ignore \ud83d\ude06", "author": "jamesonwilliams", "createdAt": "2020-08-12T07:41:39Z", "path": "core/src/test/java/com/amplifyframework/hub/HubEventDataObjectsTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.hub;\n+\n+import com.amplifyframework.api.events.ApiEndpointStatusChangeEvent;\n+import com.amplifyframework.api.events.ApiEndpointStatusChangeEvent.ApiEndpointStatus;\n+import com.amplifyframework.datastore.events.NetworkStatusEvent;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+\n+/**\n+ * Test basic operations of objects used as Hub event payloads.\n+ */\n+@RunWith(RobolectricTestRunner.class)\n+public class HubEventDataObjectsTest {\n+\n+    /**\n+     * Verify {@link NetworkStatusEvent} behavior.\n+     */\n+    @Test\n+    public void verifyNetworkStatus() {\n+        NetworkStatusEvent status1 = new NetworkStatusEvent(true);\n+        NetworkStatusEvent status2 = new NetworkStatusEvent(false);\n+        NetworkStatusEvent status3 = new NetworkStatusEvent(true);\n+\n+        assertNotEquals(status1, status2);\n+        assertEquals(status1, status3);\n+\n+        assertNotEquals(status1.hashCode(), status2.hashCode());\n+        assertEquals(status1.hashCode(), status3.hashCode());\n+        assertFalse(status1 == status3);\n+\n+        assertNotEquals(status1.toString(), status2.toString());\n+        assertEquals(status1.toString(), status3.toString());", "originalCommit": "59da7325267e20ce9d091e2423c3a5828ab716d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxMjE5Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469512193", "bodyText": "It makes sense...especially as we start adding more events down the road. That being said, the test itself seems pretty generic, so I created a class under tesutils called ObjectValidatorUtils. Right now it has one method that takes 3 objects: object1, object2, object3. The objects must be constructed such that:\nobject1.equals(object3), but not ==.\nobject2 is different from object1 and object3.\nLet me know if this makes sense. Naming stuff is definitely not my superpower \ud83e\udd23", "author": "rjuliano", "createdAt": "2020-08-12T20:11:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NjgwOQ=="}], "type": "inlineReview"}, {"oid": "88b1384d7a5db652c58ec4fdba1766d4bce0b5ff", "url": "https://github.com/aws-amplify/amplify-android/commit/88b1384d7a5db652c58ec4fdba1766d4bce0b5ff", "message": "Merge remote-tracking branch 'origin/main' into rjuliano/ds-net-hub-events", "committedDate": "2020-08-12T12:05:47Z", "type": "commit"}, {"oid": "72b83176061c43e9a168f1f7081206a490c9e4b3", "url": "https://github.com/aws-amplify/amplify-android/commit/72b83176061c43e9a168f1f7081206a490c9e4b3", "message": "Apply suggestions from code review\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-08-12T13:17:13Z", "type": "commit"}, {"oid": "ce4b1bee8a0978224bfeb8a40c7e5f2be9da0408", "url": "https://github.com/aws-amplify/amplify-android/commit/ce4b1bee8a0978224bfeb8a40c7e5f2be9da0408", "message": "Add method to publish msg from ApiEndpointStatus", "committedDate": "2020-08-12T15:58:02Z", "type": "commit"}, {"oid": "8d9042c52441f6ecbf8df8619731246ac86738b0", "url": "https://github.com/aws-amplify/amplify-android/commit/8d9042c52441f6ecbf8df8619731246ac86738b0", "message": "Added awaitFirst API to accumulator", "committedDate": "2020-08-12T19:17:34Z", "type": "commit"}, {"oid": "37438d4083eea977fc62805b1b2d72fc4e476fac", "url": "https://github.com/aws-amplify/amplify-android/commit/37438d4083eea977fc62805b1b2d72fc4e476fac", "message": "Cleaned up event object tests", "committedDate": "2020-08-12T19:55:46Z", "type": "commit"}, {"oid": "abbd32ebb3150e09c4c0388133252cd1ab9096c5", "url": "https://github.com/aws-amplify/amplify-android/commit/abbd32ebb3150e09c4c0388133252cd1ab9096c5", "message": "Created ObjectValidatorUtils", "committedDate": "2020-08-12T20:07:19Z", "type": "commit"}, {"oid": "ff58aa28345f7addc94ce508df79a6d214d3ae91", "url": "https://github.com/aws-amplify/amplify-android/commit/ff58aa28345f7addc94ce508df79a6d214d3ae91", "message": "Update javadoc for API_ENDPOINT_STATUS_CHANGED", "committedDate": "2020-08-12T20:24:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MDUzMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469590531", "bodyText": "Oops, we want the androidx one here, I believe.\nOkHttp uses the JetBrains annotations on its APIs, and so this probably got added when you implemented an OkHttp interface, right?\nFor better or worse, I have been swapping such annotations, as I encounter them, into the AndroidX ones.\nOkHttp is itself a vanilla Java library, so they can't depend on the AndroidX annotations.\nI feel emotionally that these annotations ought to have better support for Android Studio / Android Lint / Kotlin interop. However, I don't know it any scientifically backed objective way. \ud83d\ude06", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:51:50Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -44,8 +45,12 @@\n import com.amplifyframework.core.model.ModelOperation;\n import com.amplifyframework.util.UserAgent;\n \n+import org.jetbrains.annotations.NotNull;", "originalCommit": "ff58aa28345f7addc94ce508df79a6d214d3ae91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwNzU0NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470207544", "bodyText": "Fixed.", "author": "rjuliano", "createdAt": "2020-08-13T19:49:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MDUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MTcyNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469591725", "bodyText": "I was hoping we could just reuse the latch -- is it possible? I don't think it makes sense to have multiple ones.", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:55:11Z", "path": "testutils/src/main/java/com/amplifyframework/testutils/HubAccumulator.java", "diffHunk": "@@ -44,12 +44,14 @@\n     private final long quantity;\n     private final CopyOnWriteArrayList<HubEvent<?>> events;\n     private final AtomicReference<SubscriptionToken> token;\n+    private final CountDownLatch firstItemLatch;\n \n     private HubAccumulator(\n             @NonNull HubChannel channel, @NonNull HubEventFilter filter, int quantity) {\n         this.channel = channel;\n         this.filter = filter;\n         this.latch = new CountDownLatch(quantity);\n+        this.firstItemLatch = new CountDownLatch(1);", "originalCommit": "ff58aa28345f7addc94ce508df79a6d214d3ae91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5Njg1Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469596852", "bodyText": "Oh...you know what? We don't need that. Just need to check if latch.getCount() < quantity. I'll change that.", "author": "rjuliano", "createdAt": "2020-08-12T23:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MTcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwNTk0Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470205942", "bodyText": "This is done.", "author": "rjuliano", "createdAt": "2020-08-13T19:46:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MTcyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MjkxMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469592912", "bodyText": "Okay, cool. This looks like a good general purpose testutil.\nGripes about naming (classic jhwill@):\n\nLet's drop the Utils\nFrom the method it contains, maybe EqualsToStringHashValidator is a reasonable name? It's kinda long, but it's very clear and narrow in its utility:", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:58:47Z", "path": "testutils/src/main/java/com/amplifyframework/testutils/ObjectValidatorUtils.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.testutils;\n+\n+import org.junit.Assert;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * Utility class that can be used to test core\n+ * Object behavior of a class that implements its own\n+ * equals, hashCode and toString methods.\n+ */\n+public final class ObjectValidatorUtils {", "originalCommit": "ff58aa28345f7addc94ce508df79a6d214d3ae91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NzgxMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469597810", "bodyText": "Hahaha...I knew \"Utils\" was going to get some attention. I'm good with that and the method name as well. LIke I said before, I would have never made it as a marketing person.", "author": "rjuliano", "createdAt": "2020-08-12T23:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MjkxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MzI1Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r469593257", "bodyText": "Assuming this is contained EqualsToStringHashValidator, then maybe:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static <T> void assertCoreObjectBehavior(T subject1, T suject2, T subject3ThatEqualsSubject1) {\n          \n          \n            \n                public static <T> void validate(T reference, T equalsReference, T notEqualsReference) {", "author": "jamesonwilliams", "createdAt": "2020-08-12T22:59:52Z", "path": "testutils/src/main/java/com/amplifyframework/testutils/ObjectValidatorUtils.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.testutils;\n+\n+import org.junit.Assert;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * Utility class that can be used to test core\n+ * Object behavior of a class that implements its own\n+ * equals, hashCode and toString methods.\n+ */\n+public final class ObjectValidatorUtils {\n+\n+    /**\n+     * Hidding default constructor of utility class.\n+     */\n+    private ObjectValidatorUtils() {}\n+\n+    /**\n+     * Function to make some basic assertions as it related to the\n+     * proper implementation of equals, hashCode and toString.\n+     * @param subject1 An instance of T\n+     * @param suject2 An instance of T that is not equal to subject1.\n+     * @param subject3ThatEqualsSubject1 An instance of T such that when passed as\n+     *                                   a parameter to subject1.equals, will return true.\n+     * @param <T> The type being tested.\n+     */\n+    public static <T> void assertCoreObjectBehavior(T subject1, T suject2, T subject3ThatEqualsSubject1) {", "originalCommit": "ff58aa28345f7addc94ce508df79a6d214d3ae91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwMDkxNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470200917", "bodyText": "Refactored this logic into its own class in testutils.", "author": "rjuliano", "createdAt": "2020-08-13T19:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MzI1Nw=="}], "type": "inlineReview"}, {"oid": "f9a451b13a0b30496eb455feb0c322edb94fd518", "url": "https://github.com/aws-amplify/amplify-android/commit/f9a451b13a0b30496eb455feb0c322edb94fd518", "message": "Renamed util class", "committedDate": "2020-08-12T23:42:57Z", "type": "commit"}, {"oid": "3fd8eba32c304c532e46827b2d7a33aedfa3d0d1", "url": "https://github.com/aws-amplify/amplify-android/commit/3fd8eba32c304c532e46827b2d7a33aedfa3d0d1", "message": "Refactored event types", "committedDate": "2020-08-13T19:13:28Z", "type": "commit"}, {"oid": "173dafabcad5c45b4ab73fe577707eb4941bfa7f", "url": "https://github.com/aws-amplify/amplify-android/commit/173dafabcad5c45b4ab73fe577707eb4941bfa7f", "message": "Moved monitoring logic into a method", "committedDate": "2020-08-13T19:32:50Z", "type": "commit"}, {"oid": "82225bf6b859996783e9dd41c7344f12c1c22ad2", "url": "https://github.com/aws-amplify/amplify-android/commit/82225bf6b859996783e9dd41c7344f12c1c22ad2", "message": "Remove separate latch for awaitFirst", "committedDate": "2020-08-13T19:46:02Z", "type": "commit"}, {"oid": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "url": "https://github.com/aws-amplify/amplify-android/commit/e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "message": "Remove references to NotNull annotation", "committedDate": "2020-08-13T19:49:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2Njk1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470366955", "bodyText": "We have full liberty to add a new publish(...) method, if you would like to, as well!\nMaybe like:\n<E extends Enum<E>> void publish(HubChannel channel, Enum<E> eventName) {\n    publish(channel, HubEvent.create(eventName));\n}\nA small optimization to reduce some boiler plate. I've already baked in some Enum<E> type mumbo-jumbo elsewhere around the Hub APIs.", "author": "jamesonwilliams", "createdAt": "2020-08-14T01:49:38Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -119,6 +122,8 @@ synchronized void startSubscriptions() {\n             return;\n         }\n         if (subscriptionsStarted) {\n+            Amplify.Hub.publish(HubChannel.DATASTORE,", "originalCommit": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NjgyOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470586829", "bodyText": "Oh...I will do that then. I think that will go a long way in cleaning some of this stuff up.", "author": "rjuliano", "createdAt": "2020-08-14T12:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2Njk1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc4NjE5Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470786196", "bodyText": "Well, turns out it's not as much on the publishing side as it is on the subscriber side. The HubSubscriber interface currently doesn't have a method that takes in a generic type. Modifying the existing one would probably make this a breaking change. Adding a new method to that interface would then force us to change every calling site from lambda-style to an anonymous object declaration. Neither of those sounded like a good plan.\nInstead, I went with adding a factory method in HubSubscriber which makes the calling code a little cleaner.", "author": "rjuliano", "createdAt": "2020-08-14T18:21:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2Njk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2NzExOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470367118", "bodyText": "Should this go into api.events?", "author": "jamesonwilliams", "createdAt": "2020-08-14T01:50:20Z", "path": "core/src/main/java/com/amplifyframework/api/ApiChannelEventName.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api;", "originalCommit": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NzQ4MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470587481", "bodyText": "Good call. Moved it. Was going to do the same for DataStore, but it affects too many files so I'll do it as a follow up PR.", "author": "rjuliano", "createdAt": "2020-08-14T12:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2NzExOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2NzIzNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470367236", "bodyText": "Ooooooh :-D", "author": "jamesonwilliams", "createdAt": "2020-08-14T01:50:50Z", "path": "core/src/main/java/com/amplifyframework/api/events/ApiEndpointStatusChangeEvent.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.events;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiChannelEventName;\n+import com.amplifyframework.hub.HubChannel;\n+import com.amplifyframework.hub.HubEvent;\n+\n+/**\n+ * This class represents the hub event payload for\n+ * {@link com.amplifyframework.api.ApiChannelEventName#API_ENDPOINT_STATUS_CHANGED}.\n+ */\n+public final class ApiEndpointStatusChangeEvent implements HubEvent.Data<ApiEndpointStatusChangeEvent> {\n+    private final ApiEndpointStatus currentStatus;\n+    private final ApiEndpointStatus previousStatus;\n+\n+    /**\n+     * Constructs a new {@link ApiEndpointStatusChangeEvent} object.\n+     * @param currentStatus The current status of the endpoint.\n+     * @param previousStatus the previous status of the endpoint.\n+     */\n+    public ApiEndpointStatusChangeEvent(ApiEndpointStatus currentStatus, ApiEndpointStatus previousStatus) {\n+        this.currentStatus = currentStatus;\n+        this.previousStatus = previousStatus;\n+    }\n+\n+    /**\n+     * Getter that returns the value of the {@link ApiEndpointStatusChangeEvent#currentStatus} field.\n+     * @return The value of {@link ApiEndpointStatusChangeEvent#currentStatus} field.\n+     */\n+    public ApiEndpointStatus getCurrentStatus() {\n+        return currentStatus;\n+    }\n+\n+    /**\n+     * Getter that returns the value of the {@link ApiEndpointStatusChangeEvent#previousStatus} field.\n+     * @return The value of {@link ApiEndpointStatusChangeEvent#previousStatus} field.\n+     */\n+    public ApiEndpointStatus getPreviousStatus() {\n+        return previousStatus;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = currentStatus != null ? currentStatus.hashCode() : 0;\n+        result = 31 * result + (previousStatus != null ? previousStatus.hashCode() : 0);\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(@Nullable Object thatObject) {\n+        if (this == thatObject) {\n+            return true;\n+        }\n+        if (thatObject == null || getClass() != thatObject.getClass()) {\n+            return false;\n+        }\n+\n+        ApiEndpointStatusChangeEvent that = (ApiEndpointStatusChangeEvent) thatObject;\n+\n+        if (!ObjectsCompat.equals(currentStatus, that.currentStatus)) {\n+            return false;\n+        }\n+        return ObjectsCompat.equals(previousStatus, that.previousStatus);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public String toString() {\n+        return \"ApiEndpointStatusChangeEvent{\" +\n+            \"currentStatus=\" + currentStatus +\n+            \", previousStatus=\" + previousStatus +\n+            \"}\";\n+    }\n+\n+    @Override\n+    public HubEvent<ApiEndpointStatusChangeEvent> toHubEvent() {", "originalCommit": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2NzM0Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470367347", "bodyText": "To keep the noise down for the reader, maybe:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String expectedClassName = ApiEndpointStatusChangeEvent.class.getName();\n          \n          \n            \n                    String expectedClassName = ApiEndpointStatusChangeEvent.class.getSimpleName();\n          \n      \n    \n    \n  \n\n?", "author": "jamesonwilliams", "createdAt": "2020-08-14T01:51:24Z", "path": "core/src/main/java/com/amplifyframework/api/events/ApiEndpointStatusChangeEvent.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.events;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiChannelEventName;\n+import com.amplifyframework.hub.HubChannel;\n+import com.amplifyframework.hub.HubEvent;\n+\n+/**\n+ * This class represents the hub event payload for\n+ * {@link com.amplifyframework.api.ApiChannelEventName#API_ENDPOINT_STATUS_CHANGED}.\n+ */\n+public final class ApiEndpointStatusChangeEvent implements HubEvent.Data<ApiEndpointStatusChangeEvent> {\n+    private final ApiEndpointStatus currentStatus;\n+    private final ApiEndpointStatus previousStatus;\n+\n+    /**\n+     * Constructs a new {@link ApiEndpointStatusChangeEvent} object.\n+     * @param currentStatus The current status of the endpoint.\n+     * @param previousStatus the previous status of the endpoint.\n+     */\n+    public ApiEndpointStatusChangeEvent(ApiEndpointStatus currentStatus, ApiEndpointStatus previousStatus) {\n+        this.currentStatus = currentStatus;\n+        this.previousStatus = previousStatus;\n+    }\n+\n+    /**\n+     * Getter that returns the value of the {@link ApiEndpointStatusChangeEvent#currentStatus} field.\n+     * @return The value of {@link ApiEndpointStatusChangeEvent#currentStatus} field.\n+     */\n+    public ApiEndpointStatus getCurrentStatus() {\n+        return currentStatus;\n+    }\n+\n+    /**\n+     * Getter that returns the value of the {@link ApiEndpointStatusChangeEvent#previousStatus} field.\n+     * @return The value of {@link ApiEndpointStatusChangeEvent#previousStatus} field.\n+     */\n+    public ApiEndpointStatus getPreviousStatus() {\n+        return previousStatus;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = currentStatus != null ? currentStatus.hashCode() : 0;\n+        result = 31 * result + (previousStatus != null ? previousStatus.hashCode() : 0);\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(@Nullable Object thatObject) {\n+        if (this == thatObject) {\n+            return true;\n+        }\n+        if (thatObject == null || getClass() != thatObject.getClass()) {\n+            return false;\n+        }\n+\n+        ApiEndpointStatusChangeEvent that = (ApiEndpointStatusChangeEvent) thatObject;\n+\n+        if (!ObjectsCompat.equals(currentStatus, that.currentStatus)) {\n+            return false;\n+        }\n+        return ObjectsCompat.equals(previousStatus, that.previousStatus);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public String toString() {\n+        return \"ApiEndpointStatusChangeEvent{\" +\n+            \"currentStatus=\" + currentStatus +\n+            \", previousStatus=\" + previousStatus +\n+            \"}\";\n+    }\n+\n+    @Override\n+    public HubEvent<ApiEndpointStatusChangeEvent> toHubEvent() {\n+        return HubEvent.create(ApiChannelEventName.API_ENDPOINT_STATUS_CHANGED, this);\n+    }\n+\n+    /**\n+     * Factory method that attempts to cast the data field of the\n+     * {@link HubEvent} object as an instance of {@link ApiEndpointStatusChangeEvent}.\n+     * @param hubEvent An instance of {@link HubEvent}\n+     * @return An instance of {@link ApiEndpointStatusChangeEvent}.\n+     * @throws AmplifyException If unable to cast to the target type.\n+     */\n+    public static ApiEndpointStatusChangeEvent from(HubEvent<?> hubEvent) throws AmplifyException {\n+        if (hubEvent.getData() instanceof ApiEndpointStatusChangeEvent) {\n+            return (ApiEndpointStatusChangeEvent) hubEvent.getData();\n+        }\n+        String expectedClassName = ApiEndpointStatusChangeEvent.class.getName();", "originalCommit": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2NzQ1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470367451", "bodyText": "ooooh :-D", "author": "jamesonwilliams", "createdAt": "2020-08-14T01:51:49Z", "path": "core/src/main/java/com/amplifyframework/datastore/events/NetworkStatusEvent.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.events;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiChannelEventName;\n+import com.amplifyframework.api.events.ApiEndpointStatusChangeEvent;\n+import com.amplifyframework.api.events.ApiEndpointStatusChangeEvent.ApiEndpointStatus;\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.datastore.DataStoreChannelEventName;\n+import com.amplifyframework.hub.HubChannel;\n+import com.amplifyframework.hub.HubEvent;\n+import com.amplifyframework.logging.Logger;\n+\n+/**\n+ * Event payload for the {@link com.amplifyframework.datastore.DataStoreChannelEventName#NETWORK_STATUS} event.\n+ */\n+public final class NetworkStatusEvent implements HubEvent.Data<NetworkStatusEvent> {", "originalCommit": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2Nzc3OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470367779", "bodyText": "Does this belong in the NetworkStatusEvent, or in some external NetworkStatusMontior.start() utility class? I don't feel strongly either way I guess. If push came to shove I think I probably would have written it the second way, but this is also cool, and it is well coupled.", "author": "jamesonwilliams", "createdAt": "2020-08-14T01:53:09Z", "path": "core/src/main/java/com/amplifyframework/datastore/events/NetworkStatusEvent.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.events;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.api.ApiChannelEventName;\n+import com.amplifyframework.api.events.ApiEndpointStatusChangeEvent;\n+import com.amplifyframework.api.events.ApiEndpointStatusChangeEvent.ApiEndpointStatus;\n+import com.amplifyframework.core.Amplify;\n+import com.amplifyframework.datastore.DataStoreChannelEventName;\n+import com.amplifyframework.hub.HubChannel;\n+import com.amplifyframework.hub.HubEvent;\n+import com.amplifyframework.logging.Logger;\n+\n+/**\n+ * Event payload for the {@link com.amplifyframework.datastore.DataStoreChannelEventName#NETWORK_STATUS} event.\n+ */\n+public final class NetworkStatusEvent implements HubEvent.Data<NetworkStatusEvent> {\n+    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-datastore\");\n+    private final boolean active;\n+\n+    /**\n+     * Constructs a {@link NetworkStatusEvent} object.\n+     * @param isActive True if connection is active, false otherwise.\n+     */\n+    public NetworkStatusEvent(boolean isActive) {\n+        this.active = isActive;\n+    }\n+\n+    /**\n+     * Getter for the active field.\n+     * @return The value of the active field.\n+     */\n+    public boolean getActive() {\n+        return active;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Boolean.valueOf(active).hashCode();\n+    }\n+\n+    @Override\n+    public boolean equals(@Nullable Object thatObject) {\n+        if (this == thatObject) {\n+            return true;\n+        }\n+        if (thatObject == null || getClass() != thatObject.getClass()) {\n+            return false;\n+        }\n+\n+        NetworkStatusEvent that = (NetworkStatusEvent) thatObject;\n+        return ObjectsCompat.equals(active, that.active);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public String toString() {\n+        return \"NetworkStatus{active=\" + active + \"}\";\n+    }\n+\n+    @Override\n+    public HubEvent<NetworkStatusEvent> toHubEvent() {\n+        return HubEvent.create(DataStoreChannelEventName.NETWORK_STATUS, this);\n+    }\n+\n+    /**\n+     * Factory method that attempts to cast the data field of the\n+     * {@link HubEvent} object as an instance of {@link NetworkStatusEvent}.\n+     * @param hubEvent An instance of {@link HubEvent}\n+     * @return An instance of {@link NetworkStatusEvent}.\n+     * @throws AmplifyException If unable to cast to the target type.\n+     */\n+    public static NetworkStatusEvent from(HubEvent<?> hubEvent) throws AmplifyException {\n+        if (!(hubEvent.getData() instanceof NetworkStatusEvent)) {\n+            return (NetworkStatusEvent) hubEvent.getData();\n+        }\n+        String expectedClassName = NetworkStatusEvent.class.getName();\n+        throw new AmplifyException(\"Unable to cast event data from \" + expectedClassName,\n+                                   \"Ensure that the event payload is of type \" + expectedClassName);\n+    }\n+\n+    /**\n+     * Factory method that transforms an instance of\n+     * {@link ApiEndpointStatusChangeEvent} into an instance of {@link NetworkStatusEvent}.\n+     * @param apiEvent An instance of {@link ApiEndpointStatusChangeEvent}\n+     * @return An instance of {@link NetworkStatusEvent}.\n+     */\n+    public static NetworkStatusEvent from(ApiEndpointStatusChangeEvent apiEvent) {\n+        boolean isActive = ApiEndpointStatus.REACHABLE.equals(apiEvent.getCurrentStatus());\n+        return new NetworkStatusEvent(isActive);\n+    }\n+\n+    /**\n+     * Start listening for API_ENDPOINT_STATUS_CHANGED to be emitted by the API and trigger\n+     * the DataStore NETWORK_STATUS event accordingly.\n+     */\n+    public static void monitor() {", "originalCommit": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU5MjQxNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470592414", "bodyText": "Yeah...you're right. Triggering the event from core seems weird. I'm going to move it to its own utility class in the datastore module.", "author": "rjuliano", "createdAt": "2020-08-14T12:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2Nzc3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2ODE2OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470368168", "bodyText": "Eh, I feel iffy about binding Amplifly, here. I like the intention of this utility method though. Could you instead have it like:\npublic void publish(@NonNull HubChannel toChannel, @NonNull HubCategoryBehavior usignHubInstance) {\n    usingHubInstance.publish(channel, this);\n}\n?", "author": "jamesonwilliams", "createdAt": "2020-08-14T01:54:50Z", "path": "core/src/main/java/com/amplifyframework/hub/HubEvent.java", "diffHunk": "@@ -125,6 +127,14 @@ public UUID getId() {\n         return uuid;\n     }\n \n+    /**\n+     * Publish the instance of the {@link HubEvent} to Amplify Hub.\n+     * @param channel The channel to publish the event to.\n+     */\n+    public void publish(@NonNull HubChannel channel) {\n+        Amplify.Hub.publish(channel, this);", "originalCommit": "e15206e7b4e498fd100a2cd001f1d9d8cfec718c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4ODcwNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/716#discussion_r470588706", "bodyText": "That does feel kind of out of place here. I'm going to move this.", "author": "rjuliano", "createdAt": "2020-08-14T12:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2ODE2OA=="}], "type": "inlineReview"}, {"oid": "be348c2f5d7b645643fa394714a4bbfd8ecf488e", "url": "https://github.com/aws-amplify/amplify-android/commit/be348c2f5d7b645643fa394714a4bbfd8ecf488e", "message": "Replace *transitionFrom with transitionTo", "committedDate": "2020-08-14T12:12:12Z", "type": "commit"}, {"oid": "1ccfdf842a4b3c1b70116ce9e3a65bdacbc3ba8f", "url": "https://github.com/aws-amplify/amplify-android/commit/1ccfdf842a4b3c1b70116ce9e3a65bdacbc3ba8f", "message": "Update core/src/main/java/com/amplifyframework/api/events/ApiEndpointStatusChangeEvent.java\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-08-14T12:15:20Z", "type": "commit"}, {"oid": "8ea89317cf2284267cb430ccf56d0d55d6d07a3c", "url": "https://github.com/aws-amplify/amplify-android/commit/8ea89317cf2284267cb430ccf56d0d55d6d07a3c", "message": "Moved network monitoring into datastore", "committedDate": "2020-08-14T12:30:31Z", "type": "commit"}, {"oid": "2648257cd699319e7b413a947088408396f8e58d", "url": "https://github.com/aws-amplify/amplify-android/commit/2648257cd699319e7b413a947088408396f8e58d", "message": "Merge branch 'rjuliano/ds-net-hub-events' of github.com:aws-amplify/amplify-android into rjuliano/ds-net-hub-events", "committedDate": "2020-08-14T12:31:06Z", "type": "commit"}, {"oid": "49fa70967cef859c02599060bb2ea003281aef4a", "url": "https://github.com/aws-amplify/amplify-android/commit/49fa70967cef859c02599060bb2ea003281aef4a", "message": "Add factory method for strongly-typed subscribers", "committedDate": "2020-08-14T18:05:05Z", "type": "commit"}]}