{"pr_number": 369, "pr_title": "Implement online translate using AWS Translate", "pr_createdAt": "2020-04-09T02:19:56Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/369", "timeline": [{"oid": "81a0cef04bfe9450eff3ab4bb9a6a4913c9b67b5", "url": "https://github.com/aws-amplify/amplify-android/commit/81a0cef04bfe9450eff3ab4bb9a6a4913c9b67b5", "message": "Implement online translate", "committedDate": "2020-04-09T02:08:15Z", "type": "commit"}, {"oid": "f9558a87e0c21b63a5aa8dfd0a8bace51e0d5338", "url": "https://github.com/aws-amplify/amplify-android/commit/f9558a87e0c21b63a5aa8dfd0a8bace51e0d5338", "message": "Checkstyle error", "committedDate": "2020-04-09T02:13:20Z", "type": "commit"}, {"oid": "33ad35ad3d80fcb6699935ea34974e786f452ab8", "url": "https://github.com/aws-amplify/amplify-android/commit/33ad35ad3d80fcb6699935ea34974e786f452ab8", "message": "Merge branch 'master' of https://github.com/aws-amplify/amplify-android into translate-aws", "committedDate": "2020-04-09T02:13:28Z", "type": "commit"}, {"oid": "058387a15e287e53a3fb1d21361a0f43e96706f9", "url": "https://github.com/aws-amplify/amplify-android/commit/058387a15e287e53a3fb1d21361a0f43e96706f9", "message": "More checkstyle", "committedDate": "2020-04-09T02:19:44Z", "type": "commit"}, {"oid": "2827812d296616a25a1f388d424c1ff4ed2358a2", "url": "https://github.com/aws-amplify/amplify-android/commit/2827812d296616a25a1f388d424c1ff4ed2358a2", "message": "Add no-op operation for offline translate", "committedDate": "2020-04-09T04:45:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExNDg0Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406114846", "bodyText": "I think you can put this in @Before, right? It'll re-initialize a bunch more often, but that's sort of desirable to baseline state before each test.", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:38:36Z", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsTranslateTest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import android.content.Context;\n+\n+import com.amplifyframework.predictions.PredictionsCategory;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.test.R;\n+import com.amplifyframework.predictions.models.LanguageType;\n+import com.amplifyframework.predictions.options.TranslateTextOptions;\n+import com.amplifyframework.predictions.result.TranslateTextResult;\n+import com.amplifyframework.testutils.sync.SynchronousMobileClient;\n+import com.amplifyframework.testutils.sync.SynchronousPredictions;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Tests that Predictions translate delivers a non-null result\n+ * for valid input.\n+ */\n+public final class AWSPredictionsTranslateTest {\n+\n+    private SynchronousPredictions predictions;\n+\n+    /**\n+     * Initialize mobile client singleton.\n+     * @throws Exception if mobile client initialization fails\n+     */\n+    @BeforeClass\n+    public static void setUpOnce() throws Exception {\n+        SynchronousMobileClient.instance().initialize();", "originalCommit": "2827812d296616a25a1f388d424c1ff4ed2358a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2NzUxNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406367517", "bodyText": "So technically, AWSMobileClient#initialize() is a no-op once it is already initialized, which means that doing it in @Before would be the same as doing it once per class.\nHowever, I do want to put it separately mostly as a reminder to us that AWSMobileClient is a singleton, and its resources will NOT be reconfigured per test case. While we do want to strive to be able to reset our test resources per test case and do everything in @Before, I think putting AWSMobileClient#initialize() there would basically just be creating an illusion that we are reconfiguring it per test when we are actually not. I don't feel comfortable deceiving ourselves that we are testing it exactly how we want it.", "author": "raphkim", "createdAt": "2020-04-09T17:38:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExNDg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg3NTA5Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406875096", "bodyText": "Honestly my main thing is that this second setup method takes ~10 lines and the reader has to find both of them, instead of just 1 line in the setup. But, I hear what you're saying.", "author": "jamesonwilliams", "createdAt": "2020-04-10T18:05:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExNDg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1ODY1Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406958656", "bodyText": "I will actually do it the way you suggested, because this reminder isn't really helpful considering that it is not immediately fixable. Even with Amplify Auth category implementation, we will still be relying on AWS Mobile Client for some time.", "author": "raphkim", "createdAt": "2020-04-10T21:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExNDg0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExNTk2NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406115964", "bodyText": "I'd inline this, just return translateText(text, TranslateTextOptions.defaults(), onSuccess, onError);", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:40:48Z", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/AWSPredictionsPlugin.java", "diffHunk": "@@ -64,10 +69,87 @@ public void configure(JSONObject pluginConfiguration, @NonNull Context context)\n         this.predictionsService = new AWSPredictionsService(configuration);\n     }\n \n-    @Nullable\n+    @NonNull\n     @Override\n     public AWSPredictionsEscapeHatch getEscapeHatch() {\n-        return new AWSPredictionsEscapeHatch(predictionsService.getComprehendClient());\n+        return new AWSPredictionsEscapeHatch(\n+                predictionsService.getTranslateClient(),\n+                predictionsService.getComprehendClient()\n+        );\n+    }\n+\n+    @NonNull\n+    @Override\n+    public TranslateTextOperation<?> translateText(\n+            @NonNull String text,\n+            @NonNull Consumer<TranslateTextResult> onSuccess,\n+            @NonNull Consumer<PredictionsException> onError\n+    ) {\n+        final TranslateTextOptions options = TranslateTextOptions.defaults();", "originalCommit": "2827812d296616a25a1f388d424c1ff4ed2358a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExODA1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406118055", "bodyText": "Is there anyway for a consumer to know if this will return or throw, in advance?\nYou could either return a default configuration, if one was not provided,\nOr, you could provide some kind of lookup method, like hasTranslateTextConfiguration().\nAlso, as an idea -- you could make this a little extensible with like\ngetConfiguration(PredictionType predictionType) {\n....\n}\n\nand\nenum PredictionType {\n    TRNASLATE_TEXT,\n     INTERPRET;\n}\n\nwhich would be re-usable in\nboolean hasConfiguration(PredictionType predictionType);", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:44:55Z", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/AWSPredictionsPluginConfiguration.java", "diffHunk": "@@ -100,13 +120,57 @@ public NetworkPolicy getDefaultNetworkPolicy() {\n         return defaultNetworkPolicy;\n     }\n \n+    /**\n+     * Gets the configuration for text translation.\n+     * Null if not configured.\n+     * @return the configuration for text translation\n+     * @throws PredictionsException if not configured\n+     */\n+    @NonNull\n+    public TranslateTextConfiguration getTranslateTextConfiguration() throws PredictionsException {", "originalCommit": "2827812d296616a25a1f388d424c1ff4ed2358a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1Mzc4Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406353783", "bodyText": "I decided against default configuration for now. Adding each resource via CLI is required to add the appropriate IAM policies, so not having configuration for it would give access denied error down the line anyways.", "author": "raphkim", "createdAt": "2020-04-09T17:14:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExODA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1NTU1Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406355556", "bodyText": "hasConfiguration or isConfigured sounds useful. I'll add them in. I would rather not categorize them with enum though, because then the return type would have to be same.", "author": "raphkim", "createdAt": "2020-04-09T17:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExODA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MjE1Nw==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406362157", "bodyText": "Oops sorry I think we already discussed this in an earlier PR, my b.", "author": "jamesonwilliams", "createdAt": "2020-04-09T17:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjExODA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMDYwMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406120602", "bodyText": "In the DataStore configuraiton reader, I recently changed it so that the logic is like:\n\nIterate over they JSON keys\nLookup the key in ConfigKey.fromString(...), which will throw if there's no match.\nIf the key is enumerated, go on to process it, in a switch.\n\nEven if you allow fromString(...) to return an UNKNOWN or something, you could use the same structure, and just ignore the UNKNOWN keys.\nMy argument against doing that is that a user might have like:\n{\n    \"keyName\": \"OOPS!\"\n}\n\nInstead of\n{\n    \"keyname\": \"Actually, it was supposed to be a lower 'n' but we didn't tell you, user. Pound dirt.\"\n}", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:50:13Z", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/AWSPredictionsPluginConfiguration.java", "diffHunk": "@@ -51,35 +55,51 @@ private AWSPredictionsPluginConfiguration(\n      * @throws PredictionsException if configuration is missing or malformed\n      */\n     @NonNull\n-    public static AWSPredictionsPluginConfiguration fromJson(JSONObject configurationJson) throws PredictionsException {\n+    static AWSPredictionsPluginConfiguration fromJson(JSONObject configurationJson) throws PredictionsException {\n         if (configurationJson == null) {\n             throw new PredictionsException(\n-                    \"Could not locate predictions configuration for AWS Predictions Plugin.\",\n-                    \"Verify that amplifyconfiguration.json contains a section for \\\"awsPredictionsPlugin\\\".\"\n+                \"Could not locate predictions configuration for AWS Predictions Plugin.\",\n+                \"Verify that amplifyconfiguration.json contains a section for \\\"awsPredictionsPlugin\\\".\"\n             );\n         }\n \n         final Region defaultRegion;\n-        final AWSInterpretConfiguration interpretConfiguration;\n+        final InterpretTextConfiguration interpretConfiguration;\n+        final TranslateTextConfiguration translateTextConfiguration;\n+\n+        // Required sections\n         try {", "originalCommit": "2827812d296616a25a1f388d424c1ff4ed2358a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1ODgzMg==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406358832", "bodyText": "I think that pattern would be good if manually editing the configuration file was common-place. However, I believe that what we should be doing is to encourage them to rely more on CLI and NOT have to worry about the configuration at all if possible.\nBesides, throwing on no-match sounds like it would make things difficult to leave comments on the configuration like this:\n{\n  \"__description\": \"NOT part of configuration, but helps me better identify what this section is about\",\n  \"keyname1\": \"this is real key-value pair\",\n  \"keyname2\": \"this is real key-value pair\"\n}", "author": "raphkim", "createdAt": "2020-04-09T17:23:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMDYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3MjU5OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406372598", "bodyText": "I'm not sure what is an appropriate expectation regarding manual config vs. CLI. Definitely, the 90% happy path will be from folks doing an initial CLI setup.\nThe \"__description\" thing is more of a hack - a syntax abuse - that I added into our config files. I have seen this technique used in other places (I didn't come up with it). But it is not really common practice in JSON.\nAnyway, I don't think this is a major issue and I see your perspective on it, so I'm cool to let this one stay like it is!", "author": "jamesonwilliams", "createdAt": "2020-04-09T17:47:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMDYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMjgxMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406122810", "bodyText": "Hm, do you have a LanguageType.UNKNOWN or something like that? I'm usually against having enum values like that. But in this case, there might be a bonafide reason to include it.\nSuppose I obtain some random text, from a user. I don't know what it includes! No idea. So, I can't provide a language type into Amplify. For me, as a developer, that language type is not known. However, I know that I want a result in english, so that type is known. In this scenario, I might like to provide a request that looked like this(text, LanguageType.UNKNOWN, LanguageType.ENGLISH).\nAs a mechanical matter, this would make your source and target language non-null, which would be nice, too.\nThe enum could be named like UNDETECTED, UNKNOWN, UNINTERPRETED .... meh, I like UNKNOWN the best.", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:54:53Z", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/request/AWSTranslateRequest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.request;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.predictions.models.LanguageType;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Simple request instance for text translation operation.\n+ */\n+public final class AWSTranslateRequest {\n+    private final String text;\n+    private final LanguageType sourceLanguage;\n+    private final LanguageType targetLanguage;\n+\n+    /**\n+     * Constructs an instance of {@link AWSTranslateRequest}\n+     * without specifying source and target language overrides.\n+     * @param text the text to translate\n+     */\n+    public AWSTranslateRequest(@NonNull String text) {\n+        this(text, null, null);", "originalCommit": "2827812d296616a25a1f388d424c1ff4ed2358a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE1NTI3OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406155278", "bodyText": "Amazon Translate does support auto in the SourceLanguageCode field:\n $ aws translate translate-text \\\n            --source-language-code \"auto\" \\\n            --target-language-code \"es\" \\\n            --text \"hello world\\!\" \n{\n    \"TranslatedText\": \"hola mundo!\",\n    \"SourceLanguageCode\": \"en\",\n    \"TargetLanguageCode\": \"es\"\n}", "author": "jpignata", "createdAt": "2020-04-09T12:03:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MTMwMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406361300", "bodyText": "@jamesonwilliams we DO have an UNKNOWN actually haha. I can use that instead I guess.\n@jpignata that's actually really cool that it supports that! I think sourceLanguage would also be a good thing to display in TranslateTextResult for cases like these, no? iOS seems to only return translated text and target language hmm.\nWe can also totally ignore the fact that Amazon Translate supports \"auto\" language detection since we currently require the user to provide a default input language anyways in the configuration, so it may be confusing to them like \"Wait if I don't specify source language, does that mean it will use my configuration default or automatically detect my input text language?\"", "author": "raphkim", "createdAt": "2020-04-09T17:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2OTYxOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406369618", "bodyText": "I think we should have the auto-detection as P0. I can see that it would be easier to always specify an input language in the config. In this case, the language could be \"unknown,\" or \"auto,\" or whatever. The front-end code shouldn't actually need any special branching for this case, we can just pass the value through to the backend and get back a reasonable result as though \"auto\" were a real language.\nActually, the default value in the config file, as created by the CLI, should really be \"auto\". A user might override it by using one of the overloaded methods that accepts a sourceLanguage.", "author": "jamesonwilliams", "createdAt": "2020-04-09T17:42:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM4NDMyNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406384324", "bodyText": "I can definitely see the auto language detection feature being useful, but:\n\nCLI doesn't provide the AUTO option as source language\nIt can cause confusion that I described above\n\ncustomer sets \"sourceLang\": \"es\"\ncalls translateText(inputText, targetLanguage)\ndoes it try to translate from language of input text? or Spanish?\n\n\njs and iOS doesn't currently have that behavior, so we would need an API review", "author": "raphkim", "createdAt": "2020-04-09T18:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQwMzQ3MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406403470", "bodyText": "IMO this was just a requirements miss. I didn't know about this feature, but it feels like a P0 for a text translation service. Google Translate certainly has this feature. (1) is a blocker, (3) is something we should schedule and be aware of, but not block on. For (2), if you have a \"sourceLang\" config, I think it needs to be respected for that version of translateText(inputText, targetLanguage), which doesn't specify one itself. If \"sourceLang\" is \"auto\", then the language is derived from the inputText. If source language is \"es\", then inputText is considered as Spanish.", "author": "jamesonwilliams", "createdAt": "2020-04-09T18:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzMjA2Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406532062", "bodyText": "Addressed null -> LanguageType.UNKNOWN\nWill have a separate discussion on adding auto language detection support. Doc", "author": "raphkim", "createdAt": "2020-04-09T23:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMjgxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMzU5Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406123593", "bodyText": "This method looks like it queries internal state and returns a boolean. However, the boolean value is not used here. So, is this line serving any purpose? Or does isResourceConfigured have some additional ramifications - like it modifies system state in some way?", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:56:32Z", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSComprehendService.java", "diffHunk": "@@ -110,6 +110,7 @@ void comprehend(\n     private Language fetchPredominantLanguage(String text) throws PredictionsException {\n         // Language is a required field for other detections.\n         // Always fetch language regardless of what configuration says.\n+        isResourceConfigured(InterpretTextConfiguration.InterpretType.LANGUAGE);", "originalCommit": "2827812d296616a25a1f388d424c1ff4ed2358a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MTkyMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406361920", "bodyText": "Yes! It calls configuration.getInterpretTextConfiguration() method, which would throw if it is not configured. This is my check to make sure that interpret is configured haha", "author": "raphkim", "createdAt": "2020-04-09T17:28:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMzU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3MDMzNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406370334", "bodyText": "Ah alright. Hm, yea this is a place where that hasWhateverConfiguration() might come in handy. It'd be more readable here to have like:\nif (!configuration.hasWhateverConfigurationType()) {\n    // throw !!\n}", "author": "jamesonwilliams", "createdAt": "2020-04-09T17:43:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMzU5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ3MzIzOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406473239", "bodyText": "keeping current implementation as per our discussion", "author": "raphkim", "createdAt": "2020-04-09T20:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyMzU5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyNDQ4Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406124482", "bodyText": "Do you only need the pluginConfiguration.getTranslateTextConfiguration(), and not the entire pluginConfiguration?", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:58:25Z", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSTranslateService.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.models.LanguageType;\n+import com.amplifyframework.predictions.result.TranslateTextResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.translate.AmazonTranslateClient;\n+import com.amazonaws.services.translate.model.TranslateTextRequest;\n+\n+/**\n+ * Predictions service for performing text translation.\n+ */\n+public final class AWSTranslateService {\n+    private final AmazonTranslateClient translate;\n+    private final AWSPredictionsPluginConfiguration pluginConfiguration;\n+\n+    AWSTranslateService(@NonNull AWSPredictionsPluginConfiguration pluginConfiguration) {\n+        this.translate = createTranslateClient();\n+        this.pluginConfiguration = pluginConfiguration;", "originalCommit": "2827812d296616a25a1f388d424c1ff4ed2358a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2NDA2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406364066", "bodyText": "Basically, we want each service to be \"configured\" successfully when plugin gets configured (even if that specific service was technically not configured). My current solution to that is to successfully generate AWSPredictionsPluginConfiguration during plugin configuration regardless of what is configured or not, and then call AWSPredictionsPluginConfiguration#get<SpecificService>Configuration() at runtime to determine if that service should throw or not.\nSo... yea. getTranslateTextConfiguration() and other getter methods should not be used during construction, but only when the service invocation is attempted", "author": "raphkim", "createdAt": "2020-04-09T17:32:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyNDQ4Mg=="}], "type": "inlineReview"}, {"oid": "e07c2edfbd52d0e5cd92c29cce8d52d0dd18ce6d", "url": "https://github.com/aws-amplify/amplify-android/commit/e07c2edfbd52d0e5cd92c29cce8d52d0dd18ce6d", "message": "Make optional language non-null", "committedDate": "2020-04-09T20:17:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg3NTI4NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406875285", "bodyText": "Naming should be testTranslateFailsForBlankInput", "author": "jamesonwilliams", "createdAt": "2020-04-10T18:05:36Z", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsTranslateTest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import android.content.Context;\n+\n+import com.amplifyframework.predictions.PredictionsCategory;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.test.R;\n+import com.amplifyframework.predictions.models.LanguageType;\n+import com.amplifyframework.predictions.options.TranslateTextOptions;\n+import com.amplifyframework.predictions.result.TranslateTextResult;\n+import com.amplifyframework.testutils.sync.SynchronousMobileClient;\n+import com.amplifyframework.testutils.sync.SynchronousPredictions;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Tests that Predictions translate delivers a non-null result\n+ * for valid input.\n+ */\n+public final class AWSPredictionsTranslateTest {\n+\n+    private SynchronousPredictions predictions;\n+\n+    /**\n+     * Initialize mobile client singleton.\n+     * @throws Exception if mobile client initialization fails\n+     */\n+    @BeforeClass\n+    public static void setUpOnce() throws Exception {\n+        SynchronousMobileClient.instance().initialize();\n+    }\n+\n+    /**\n+     * Configure Predictions category before each test.\n+     */\n+    @Before\n+    public void setUp() {\n+        Context context = getApplicationContext();\n+\n+        // Delegate to Predictions category\n+        PredictionsCategory asyncDelegate =\n+                TestPredictionsCategory.create(context, R.raw.amplifyconfiguration);\n+        predictions = SynchronousPredictions.delegatingTo(asyncDelegate);\n+    }\n+\n+    /**\n+     * Assert that translate fails for blank input.\n+     * AWS Translate will not accept a blank input, so\n+     * an exception is thrown.\n+     * @throws Exception if prediction fails\n+     */\n+    @Test(expected = PredictionsException.class)\n+    public void testTranslateFailsForNullInput() throws Exception {", "originalCommit": "e07c2edfbd52d0e5cd92c29cce8d52d0dd18ce6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NzIzOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/369#discussion_r406957239", "bodyText": "oops good catch", "author": "raphkim", "createdAt": "2020-04-10T21:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg3NTI4NQ=="}], "type": "inlineReview"}, {"oid": "c5b8a95357339ab0f31b271a1c2ab8d54dcc78d2", "url": "https://github.com/aws-amplify/amplify-android/commit/c5b8a95357339ab0f31b271a1c2ab8d54dcc78d2", "message": "Minor fixup", "committedDate": "2020-04-10T21:53:23Z", "type": "commit"}, {"oid": "c5b8a95357339ab0f31b271a1c2ab8d54dcc78d2", "url": "https://github.com/aws-amplify/amplify-android/commit/c5b8a95357339ab0f31b271a1c2ab8d54dcc78d2", "message": "Minor fixup", "committedDate": "2020-04-10T21:53:23Z", "type": "forcePushed"}]}