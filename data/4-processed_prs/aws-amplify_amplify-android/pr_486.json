{"pr_number": 486, "pr_title": "Adds signInWithWebUI and signInWithSocialWebUI", "pr_createdAt": "2020-05-19T00:41:46Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/486", "timeline": [{"oid": "a1138f9ff4d406a6d4768dcab0564e18857ba192", "url": "https://github.com/aws-amplify/amplify-android/commit/a1138f9ff4d406a6d4768dcab0564e18857ba192", "message": "Adds Options Object", "committedDate": "2020-05-15T21:00:07Z", "type": "commit"}, {"oid": "92260c39c69746cf9af8b2a5efcf1f39d927ee45", "url": "https://github.com/aws-amplify/amplify-android/commit/92260c39c69746cf9af8b2a5efcf1f39d927ee45", "message": "Adds signInWithWebUI and signInWithSocialWebUI", "committedDate": "2020-05-19T00:22:15Z", "type": "commit"}, {"oid": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "url": "https://github.com/aws-amplify/amplify-android/commit/a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "message": "Merge remote-tracking branch 'origin/master' into ddaudeli/HostedUI", "committedDate": "2020-05-19T00:38:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4ODMxMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427488311", "bodyText": "all these public methods should have javadoc", "author": "raphkim", "createdAt": "2020-05-19T17:49:11Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -376,35 +382,74 @@ public void onError(Exception error) {\n     }\n ", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MTc0MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427581741", "bodyText": "Not when they are overrides - they inherit their JavaDocs from the interface", "author": "TrekSoft", "createdAt": "2020-05-19T20:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4ODMxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5MTYzMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427491631", "bodyText": "What is the reason for renaming this? I don't think we have used this pattern anywhere else in the code so far.", "author": "raphkim", "createdAt": "2020-05-19T17:54:21Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -527,7 +572,7 @@ public void updatePassword(\n             @NonNull String oldPassword,\n             @NonNull String newPassword,\n             @Nullable Action onSuccess,\n-            @Nullable Consumer<AuthException> onError\n+            @Nullable Consumer<AuthException> onException", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3ODYxMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427578610", "bodyText": "All of them in this file are using onException to avoid conflicting with AWSMobileClient's onError methods so this was making it consistent with the rest of the file.", "author": "TrekSoft", "createdAt": "2020-05-19T20:26:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5MTYzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5Mjg3MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427492871", "bodyText": "It's a fair point, but I don't think there's any need to be all that strict with @NonNull vs @Nullable for internal private methods haha. The annotation exists mostly to be helpful to the customers directly using the method.", "author": "raphkim", "createdAt": "2020-05-19T17:56:08Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -376,35 +382,74 @@ public void onError(Exception error) {\n     }\n \n     @Override\n-    public void signInWithUI(\n+    public void signInWithSocialWebUI(\n+            @NonNull AuthProvider provider,\n             @NonNull Activity callingActivity,\n-            @NonNull final Consumer<String> onSuccess,\n-            @NonNull final Consumer<AmplifyException> onException\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onException\n     ) {\n-        HostedUIOptions hostedUIOptions = HostedUIOptions.builder()\n-                .scopes(\"openid\", \"email\")\n-                .build();\n-        SignInUIOptions signInUIOptions = SignInUIOptions.builder()\n-                .hostedUIOptions(hostedUIOptions)\n-                .build();\n+        signInWithSocialWebUI(\n+                Objects.requireNonNull(provider),\n+                Objects.requireNonNull(callingActivity),\n+                AuthWebUISignInOptions.builder().build(),\n+                Objects.requireNonNull(onSuccess),\n+                Objects.requireNonNull(onException)\n+        );\n+    }\n \n-        awsMobileClient.showSignIn(callingActivity, signInUIOptions, new Callback<UserStateDetails>() {\n-            @Override\n-            public void onResult(UserStateDetails details) {\n-                fetchAndSetUserId(() -> onSuccess.accept(details.getUserState().toString()));\n-            }\n+    @Override\n+    public void signInWithSocialWebUI(\n+            @NonNull AuthProvider provider,\n+            @NonNull Activity callingActivity,\n+            @NonNull AuthWebUISignInOptions options,\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onException\n+    ) {\n+        signInWithWebUIHelper(\n+                Objects.requireNonNull(provider),\n+                Objects.requireNonNull(callingActivity),\n+                Objects.requireNonNull(options),\n+                Objects.requireNonNull(onSuccess),\n+                Objects.requireNonNull(onException)\n+        );\n+    }\n \n-            @Override\n-            public void onError(Exception error) {\n-                onException.accept(\n-                    new AmplifyException(\"Sign in with UI failed\", error, \"See attached exception for more details\")\n-                );\n-            }\n-        });\n+    @Override\n+    public void signInWithWebUI(\n+            @NonNull Activity callingActivity,\n+            @NonNull final Consumer<AuthSignInResult> onSuccess,\n+            @NonNull final Consumer<AuthException> onException\n+    ) {\n+        signInWithWebUI(\n+                Objects.requireNonNull(callingActivity),\n+                AuthWebUISignInOptions.builder().build(),\n+                Objects.requireNonNull(onSuccess),\n+                Objects.requireNonNull(onException)\n+        );\n     }\n \n     @Override\n-    public void handleSignInWithUIResponse(@NonNull Intent intent) {\n+    public void signInWithWebUI(\n+            @NonNull Activity callingActivity,\n+            @NonNull AuthWebUISignInOptions options,\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onException\n+    ) {\n+        // Note that passing a null value for AuthProvider to the private helper method here is intentional.\n+        // AuthProvider is a public enum used by customers, and I intentionally don't want to be confusing by adding\n+        // a value which would represent no specific AuthProvider since that would make the signWithWithSocialWebUI\n+        // method a duplicate of this method (and not make sense in the context of that method) if chosen.", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5NjQyNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427496426", "bodyText": "nit: \"OAuth\"", "author": "raphkim", "createdAt": "2020-05-19T18:01:39Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/options/AWSCognitoAuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.cognito.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.options.AuthWebUISignInOptions;\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Cognito extension of web ui sign in options to add the platform specific fields.\n+ */\n+public final class AWSCognitoAuthWebUISignInOptions extends AuthWebUISignInOptions {\n+    private final String idpIdentifier;\n+    private final String federationProviderName;\n+\n+    /**\n+     * Advanced options for signing in via a hosted web ui.\n+     * @param scopes specify OAUTH scopes", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3ODkwNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427578907", "bodyText": "Alright I'll update all these in my next PR", "author": "TrekSoft", "createdAt": "2020-05-19T20:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5NjQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5NjYzMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427496630", "bodyText": "nit: \"UI\"", "author": "raphkim", "createdAt": "2020-05-19T18:02:01Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/options/AWSCognitoAuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.cognito.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.options.AuthWebUISignInOptions;\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Cognito extension of web ui sign in options to add the platform specific fields.", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5ODIzOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427498239", "bodyText": "would it make sense to have HostedUIOptions#fromAuthWebUISignInOptions() method to copy over values?", "author": "raphkim", "createdAt": "2020-05-19T18:04:39Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -587,6 +632,75 @@ public AWSMobileClient getEscapeHatch() {\n         return awsMobileClient;\n     }\n \n+    private void signInWithWebUIHelper(\n+        @Nullable AuthProvider authProvider,\n+        @NonNull Activity callingActivity,\n+        @NonNull AuthWebUISignInOptions options,\n+        @NonNull Consumer<AuthSignInResult> onSuccess,\n+        @NonNull Consumer<AuthException> onException\n+    ) {\n+        HostedUIOptions.Builder optionsBuilder = HostedUIOptions.builder();\n+\n+        if (options != null) {\n+            if (options.getScopes() != null) {\n+                optionsBuilder.scopes(options.getScopes().toArray(new String[options.getScopes().size()]));\n+            }\n+\n+            if (!options.getSignInQueryParameters().isEmpty()) {\n+                optionsBuilder.signInQueryParameters(options.getSignInQueryParameters());\n+            }\n+\n+            if (!options.getSignOutQueryParameters().isEmpty()) {\n+                optionsBuilder.signOutQueryParameters(options.getSignOutQueryParameters());\n+            }\n+\n+            if (!options.getTokenQueryParameters().isEmpty()) {\n+                optionsBuilder.tokenQueryParameters(options.getTokenQueryParameters());\n+            }\n+\n+            if (options instanceof AWSCognitoAuthWebUISignInOptions) {\n+                AWSCognitoAuthWebUISignInOptions cognitoOptions = (AWSCognitoAuthWebUISignInOptions) options;\n+                optionsBuilder.idpIdentifier(cognitoOptions.getIdpIdentifier())", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3OTYyNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427579627", "bodyText": "HostedUIOptions is a class in AWSMobileClient so I can't modify it and this is the only place this functionality is needed so I don't think it's an instance where we should separate it out into a helper method either.", "author": "TrekSoft", "createdAt": "2020-05-19T20:28:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5ODIzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMDg0Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427500842", "bodyText": "\"lik\" -> \"like\"\nI think this sentence feels a bit off. Maybe\n\nIf federating with Cognito Identity and using a provider like Auth0, then specify the provider name (e.g. auth0.com)", "author": "raphkim", "createdAt": "2020-05-19T18:09:02Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/options/AWSCognitoAuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.cognito.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.options.AuthWebUISignInOptions;\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Cognito extension of web ui sign in options to add the platform specific fields.\n+ */\n+public final class AWSCognitoAuthWebUISignInOptions extends AuthWebUISignInOptions {\n+    private final String idpIdentifier;\n+    private final String federationProviderName;\n+\n+    /**\n+     * Advanced options for signing in via a hosted web ui.\n+     * @param scopes specify OAUTH scopes\n+     * @param signInQueryParameters map of custom parameters to send associated with sign in process\n+     * @param signOutQueryParameters map of custom parameters to send associated with sign out process\n+     * @param tokenQueryParameters map of custom parameters to send associated with token\n+     * @param idpIdentifier The IdentityProvider identifier if using multiple instances of same identity provider.\n+     * @param federationProviderName If federating with Cognito Identity and using a provider lik Auth0 specify the\n+     *                               provider name, e.g. .auth0.com", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMTEzOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427501139", "bodyText": "same as above", "author": "raphkim", "createdAt": "2020-05-19T18:09:30Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/options/AWSCognitoAuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.cognito.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.options.AuthWebUISignInOptions;\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Cognito extension of web ui sign in options to add the platform specific fields.\n+ */\n+public final class AWSCognitoAuthWebUISignInOptions extends AuthWebUISignInOptions {\n+    private final String idpIdentifier;\n+    private final String federationProviderName;\n+\n+    /**\n+     * Advanced options for signing in via a hosted web ui.\n+     * @param scopes specify OAUTH scopes\n+     * @param signInQueryParameters map of custom parameters to send associated with sign in process\n+     * @param signOutQueryParameters map of custom parameters to send associated with sign out process\n+     * @param tokenQueryParameters map of custom parameters to send associated with token\n+     * @param idpIdentifier The IdentityProvider identifier if using multiple instances of same identity provider.\n+     * @param federationProviderName If federating with Cognito Identity and using a provider lik Auth0 specify the\n+     *                               provider name, e.g. .auth0.com\n+     */\n+    protected AWSCognitoAuthWebUISignInOptions(\n+            List<String> scopes,\n+            Map<String, String> signInQueryParameters,\n+            Map<String, String> signOutQueryParameters,\n+            Map<String, String> tokenQueryParameters,\n+            String idpIdentifier,\n+            String federationProviderName\n+    ) {\n+        super(scopes, signInQueryParameters, signOutQueryParameters, tokenQueryParameters);\n+        this.idpIdentifier = idpIdentifier;\n+        this.federationProviderName = federationProviderName;\n+    }\n+\n+    /**\n+     * The IdentityProvider identifier if using multiple instances of same identity provider.\n+     * @return the IdentityProvider identifier\n+     */\n+    @Nullable\n+    public String getIdpIdentifier() {\n+        return idpIdentifier;\n+    }\n+\n+    /**\n+     * If federating with Cognito Identity and using a provider lik Auth0 specify the provider name, e.g. .auth0.com", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMjEwOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427502108", "bodyText": "^", "author": "raphkim", "createdAt": "2020-05-19T18:11:02Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/options/AWSCognitoAuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.cognito.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.auth.options.AuthWebUISignInOptions;\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Cognito extension of web ui sign in options to add the platform specific fields.\n+ */\n+public final class AWSCognitoAuthWebUISignInOptions extends AuthWebUISignInOptions {\n+    private final String idpIdentifier;\n+    private final String federationProviderName;\n+\n+    /**\n+     * Advanced options for signing in via a hosted web ui.\n+     * @param scopes specify OAUTH scopes\n+     * @param signInQueryParameters map of custom parameters to send associated with sign in process\n+     * @param signOutQueryParameters map of custom parameters to send associated with sign out process\n+     * @param tokenQueryParameters map of custom parameters to send associated with token\n+     * @param idpIdentifier The IdentityProvider identifier if using multiple instances of same identity provider.\n+     * @param federationProviderName If federating with Cognito Identity and using a provider lik Auth0 specify the\n+     *                               provider name, e.g. .auth0.com\n+     */\n+    protected AWSCognitoAuthWebUISignInOptions(\n+            List<String> scopes,\n+            Map<String, String> signInQueryParameters,\n+            Map<String, String> signOutQueryParameters,\n+            Map<String, String> tokenQueryParameters,\n+            String idpIdentifier,\n+            String federationProviderName\n+    ) {\n+        super(scopes, signInQueryParameters, signOutQueryParameters, tokenQueryParameters);\n+        this.idpIdentifier = idpIdentifier;\n+        this.federationProviderName = federationProviderName;\n+    }\n+\n+    /**\n+     * The IdentityProvider identifier if using multiple instances of same identity provider.\n+     * @return the IdentityProvider identifier\n+     */\n+    @Nullable\n+    public String getIdpIdentifier() {\n+        return idpIdentifier;\n+    }\n+\n+    /**\n+     * If federating with Cognito Identity and using a provider lik Auth0 specify the provider name, e.g. .auth0.com\n+     * @return the provider name\n+     */\n+    @Nullable\n+    public String getFederationProviderName() {\n+        return federationProviderName;\n+    }\n+\n+    /**\n+     * Returns a builder for this object.\n+     * @return a builder for this object.\n+     */\n+    @NonNull\n+    public static CognitoBuilder builder() {\n+        return new CognitoBuilder();\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return ObjectsCompat.hash(\n+                getScopes(),\n+                getSignInQueryParameters(),\n+                getSignOutQueryParameters(),\n+                getTokenQueryParameters(),\n+                getIdpIdentifier(),\n+                getFederationProviderName()\n+        );\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        } else if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        } else {\n+            AWSCognitoAuthWebUISignInOptions webUISignInOptions = (AWSCognitoAuthWebUISignInOptions) obj;\n+            return ObjectsCompat.equals(getScopes(), webUISignInOptions.getScopes()) &&\n+                    ObjectsCompat.equals(getSignInQueryParameters(), webUISignInOptions.getSignInQueryParameters()) &&\n+                    ObjectsCompat.equals(getSignOutQueryParameters(), webUISignInOptions.getSignOutQueryParameters()) &&\n+                    ObjectsCompat.equals(getTokenQueryParameters(), webUISignInOptions.getTokenQueryParameters()) &&\n+                    ObjectsCompat.equals(getIdpIdentifier(), webUISignInOptions.getIdpIdentifier()) &&\n+                    ObjectsCompat.equals(getFederationProviderName(), webUISignInOptions.getFederationProviderName());\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AWSCognitoAuthWebUISignInOptions{\" +\n+                \"scopes=\" + getScopes() +\n+                \", signInQueryParameters=\" + getSignInQueryParameters() +\n+                \", signOutQueryParameters=\" + getSignOutQueryParameters() +\n+                \", tokenQueryParameters=\" + getTokenQueryParameters() +\n+                \", idpIdentifier=\" + getIdpIdentifier() +\n+                \", federationProviderName=\" + getFederationProviderName() +\n+                '}';\n+    }\n+\n+    /**\n+     * The builder for this class.\n+     */\n+    public static final class CognitoBuilder extends Builder<CognitoBuilder> {\n+        private String idpIdentifier;\n+        private String federationProviderName;\n+\n+        /**\n+         * Constructs the builder.\n+         */\n+        public CognitoBuilder() {\n+            super();\n+        }\n+\n+        /**\n+         * Gets the type of builder to support proper flow with this being an extended class.\n+         * @return the type of builder to support proper flow with this being an extended class.\n+         */\n+        @Override\n+        public CognitoBuilder getThis() {\n+            return this;\n+        }\n+\n+        /**\n+         * The IdentityProvider identifier if using multiple instances of same identity provider.\n+         * @param idpIdentifier The IdentityProvider identifier if using multiple instances of same identity provider.\n+         * @return the instance of the builder.\n+         */\n+        @NonNull\n+        public CognitoBuilder idpIdentifier(@NonNull String idpIdentifier) {\n+            this.idpIdentifier = idpIdentifier;\n+            return getThis();\n+        }\n+\n+        /**\n+         * If federating with Cognito Identity and using a provider lik Auth0 specify the provider name.\n+         * @param federationProviderName If federating with Cognito Identity and using a provider lik Auth0 specify the\n+         *                               provider name, e.g. .auth0.com", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMjg3Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427502873", "bodyText": "Javadoc is unnecessary :)\nAlso, we no longer throw an error for instantiating with\nprivate AuthProviderConverter() {}\n\nwhere there's no space between curly brackets", "author": "raphkim", "createdAt": "2020-05-19T18:12:24Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/util/AuthProviderConverter.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.cognito.util;\n+\n+import com.amplifyframework.auth.AuthProvider;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Helpful util class to convert AuthProvider values to Cognito Identity Provider values.\n+ */\n+public final class AuthProviderConverter {\n+    private static final Map<AuthProvider, String> CONVERT_AUTH_PROVIDER;\n+\n+    /**\n+     * Dis-allows instantiation of this class.\n+     */\n+    private AuthProviderConverter() { }", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUxNjkxOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427516919", "bodyText": "nit: \"UI\"", "author": "raphkim", "createdAt": "2020-05-19T18:35:45Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java", "diffHunk": "@@ -118,22 +118,68 @@ void confirmSignIn(\n             @NonNull Consumer<AuthException> onError);\n \n     /**\n-     * Launch a pre-built sign in UI flow. You should also put the {@link #handleSignInWithUIResponse(Intent)} method in\n-     * your activity's onResume method to capture the response which comes back from the UI flow.\n+     * Launch the specified auth provider's web UI sign in experience. You should also put the\n+     * {@link #handleWebUISignInResponse(Intent)} method in your activity's onNewIntent method to\n+     * capture the response which comes back from the UI flow.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUxOTExOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427519119", "bodyText": "nit: \"UI\" x2", "author": "raphkim", "createdAt": "2020-05-19T18:39:35Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java", "diffHunk": "@@ -118,22 +118,68 @@ void confirmSignIn(\n             @NonNull Consumer<AuthException> onError);\n \n     /**\n-     * Launch a pre-built sign in UI flow. You should also put the {@link #handleSignInWithUIResponse(Intent)} method in\n-     * your activity's onResume method to capture the response which comes back from the UI flow.\n+     * Launch the specified auth provider's web UI sign in experience. You should also put the\n+     * {@link #handleWebUISignInResponse(Intent)} method in your activity's onNewIntent method to\n+     * capture the response which comes back from the UI flow.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)\n      * @param callingActivity The activity in your app you are calling this from\n      * @param onSuccess Success callback\n      * @param onError Error callback\n      */\n-    void signInWithUI(\n+    void signInWithSocialWebUI(\n+            @NonNull AuthProvider provider,\n             @NonNull Activity callingActivity,\n-            @NonNull Consumer<String> onSuccess,\n-            @NonNull Consumer<AmplifyException> onError);\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Launch the specified auth provider's web UI sign in experience. You should also put the\n+     * {@link #handleWebUISignInResponse(Intent)} method in your activity's onNewIntent method to\n+     * capture the response which comes back from the UI flow.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)\n+     * @param callingActivity The activity in your app you are calling this from\n+     * @param options Advanced options for signing in with an auth provider's hosted web ui.", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUxOTM5OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427519398", "bodyText": "\"UI\"", "author": "raphkim", "createdAt": "2020-05-19T18:40:01Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java", "diffHunk": "@@ -118,22 +118,68 @@ void confirmSignIn(\n             @NonNull Consumer<AuthException> onError);\n \n     /**\n-     * Launch a pre-built sign in UI flow. You should also put the {@link #handleSignInWithUIResponse(Intent)} method in\n-     * your activity's onResume method to capture the response which comes back from the UI flow.\n+     * Launch the specified auth provider's web UI sign in experience. You should also put the\n+     * {@link #handleWebUISignInResponse(Intent)} method in your activity's onNewIntent method to\n+     * capture the response which comes back from the UI flow.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)\n      * @param callingActivity The activity in your app you are calling this from\n      * @param onSuccess Success callback\n      * @param onError Error callback\n      */\n-    void signInWithUI(\n+    void signInWithSocialWebUI(\n+            @NonNull AuthProvider provider,\n             @NonNull Activity callingActivity,\n-            @NonNull Consumer<String> onSuccess,\n-            @NonNull Consumer<AmplifyException> onError);\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Launch the specified auth provider's web UI sign in experience. You should also put the\n+     * {@link #handleWebUISignInResponse(Intent)} method in your activity's onNewIntent method to\n+     * capture the response which comes back from the UI flow.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)\n+     * @param callingActivity The activity in your app you are calling this from\n+     * @param options Advanced options for signing in with an auth provider's hosted web ui.\n+     * @param onSuccess Success callback\n+     * @param onError Error callback\n+     */\n+    void signInWithSocialWebUI(\n+            @NonNull AuthProvider provider,\n+            @NonNull Activity callingActivity,\n+            @NonNull AuthWebUISignInOptions options,\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Launch a hosted web sign in UI flow. You should also put the {@link #handleWebUISignInResponse(Intent)} method in\n+     * your activity's onNewIntent method to capture the response which comes back from the UI flow.\n+     * @param callingActivity The activity in your app you are calling this from\n+     * @param onSuccess Success callback\n+     * @param onError Error callback\n+     */\n+    void signInWithWebUI(\n+            @NonNull Activity callingActivity,\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Launch a hosted web sign in UI flow. You should also put the {@link #handleWebUISignInResponse(Intent)}\n+     * method in your activity's onNewIntent method to capture the response which comes back from the UI flow.\n+     * @param callingActivity The activity in your app you are calling this from\n+     * @param options Advanced options for signing in with a hosted web ui.", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMDk2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427520966", "bodyText": "why are we deviating from SignInWith<> pattern here? Can't this method just be handleSignInWithWebUIResponse?", "author": "raphkim", "createdAt": "2020-05-19T18:42:35Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthCategoryBehavior.java", "diffHunk": "@@ -118,22 +118,68 @@ void confirmSignIn(\n             @NonNull Consumer<AuthException> onError);\n \n     /**\n-     * Launch a pre-built sign in UI flow. You should also put the {@link #handleSignInWithUIResponse(Intent)} method in\n-     * your activity's onResume method to capture the response which comes back from the UI flow.\n+     * Launch the specified auth provider's web UI sign in experience. You should also put the\n+     * {@link #handleWebUISignInResponse(Intent)} method in your activity's onNewIntent method to\n+     * capture the response which comes back from the UI flow.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)\n      * @param callingActivity The activity in your app you are calling this from\n      * @param onSuccess Success callback\n      * @param onError Error callback\n      */\n-    void signInWithUI(\n+    void signInWithSocialWebUI(\n+            @NonNull AuthProvider provider,\n             @NonNull Activity callingActivity,\n-            @NonNull Consumer<String> onSuccess,\n-            @NonNull Consumer<AmplifyException> onError);\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Launch the specified auth provider's web UI sign in experience. You should also put the\n+     * {@link #handleWebUISignInResponse(Intent)} method in your activity's onNewIntent method to\n+     * capture the response which comes back from the UI flow.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)\n+     * @param callingActivity The activity in your app you are calling this from\n+     * @param options Advanced options for signing in with an auth provider's hosted web ui.\n+     * @param onSuccess Success callback\n+     * @param onError Error callback\n+     */\n+    void signInWithSocialWebUI(\n+            @NonNull AuthProvider provider,\n+            @NonNull Activity callingActivity,\n+            @NonNull AuthWebUISignInOptions options,\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Launch a hosted web sign in UI flow. You should also put the {@link #handleWebUISignInResponse(Intent)} method in\n+     * your activity's onNewIntent method to capture the response which comes back from the UI flow.\n+     * @param callingActivity The activity in your app you are calling this from\n+     * @param onSuccess Success callback\n+     * @param onError Error callback\n+     */\n+    void signInWithWebUI(\n+            @NonNull Activity callingActivity,\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n+\n+    /**\n+     * Launch a hosted web sign in UI flow. You should also put the {@link #handleWebUISignInResponse(Intent)}\n+     * method in your activity's onNewIntent method to capture the response which comes back from the UI flow.\n+     * @param callingActivity The activity in your app you are calling this from\n+     * @param options Advanced options for signing in with a hosted web ui.\n+     * @param onSuccess Success callback\n+     * @param onError Error callback\n+     */\n+    void signInWithWebUI(\n+            @NonNull Activity callingActivity,\n+            @NonNull AuthWebUISignInOptions options,\n+            @NonNull Consumer<AuthSignInResult> onSuccess,\n+            @NonNull Consumer<AuthException> onError);\n \n     /**\n-     * Handles the response which comes back from {@link #signInWithUI(Activity, Consumer, Consumer)}.\n+     * Handles the response which comes back from {@link #signInWithWebUI(Activity, Consumer, Consumer)}.\n      * @param intent The app activity's intent\n      */\n-    void handleSignInWithUIResponse(Intent intent);\n+    void handleWebUISignInResponse(Intent intent);", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDIxNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427580217", "bodyText": "This was the decision made in the naming meeting so just rolling with it", "author": "TrekSoft", "createdAt": "2020-05-19T20:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMDk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMTIwOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427521209", "bodyText": "nit: \"OAuth\"", "author": "raphkim", "createdAt": "2020-05-19T18:43:00Z", "path": "core/src/main/java/com/amplifyframework/auth/options/AuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,287 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Advanced options for signing in with a hosted web UI.\n+ */\n+public class AuthWebUISignInOptions {\n+    private final List<String> scopes;\n+    private final Map<String, String> signInQueryParameters;\n+    private final Map<String, String> signOutQueryParameters;\n+    private final Map<String, String> tokenQueryParameters;\n+\n+    /**\n+     * Advanced options for signing in with a hosted web UI.\n+     * @param scopes specify OAUTH scopes", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMTM4OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427521388", "bodyText": "\"OAuth\"", "author": "raphkim", "createdAt": "2020-05-19T18:43:19Z", "path": "core/src/main/java/com/amplifyframework/auth/options/AuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,287 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Advanced options for signing in with a hosted web UI.\n+ */\n+public class AuthWebUISignInOptions {\n+    private final List<String> scopes;\n+    private final Map<String, String> signInQueryParameters;\n+    private final Map<String, String> signOutQueryParameters;\n+    private final Map<String, String> tokenQueryParameters;\n+\n+    /**\n+     * Advanced options for signing in with a hosted web UI.\n+     * @param scopes specify OAUTH scopes\n+     * @param signInQueryParameters map of custom parameters to send associated with sign in process\n+     * @param signOutQueryParameters map of custom parameters to send associated with sign out process\n+     * @param tokenQueryParameters map of custom parameters to send associated with token\n+     */\n+    protected AuthWebUISignInOptions(\n+            List<String> scopes,\n+            Map<String, String> signInQueryParameters,\n+            Map<String, String> signOutQueryParameters,\n+            Map<String, String> tokenQueryParameters\n+    ) {\n+        this.scopes = scopes;\n+        this.signInQueryParameters = signInQueryParameters;\n+        this.signOutQueryParameters = signOutQueryParameters;\n+        this.tokenQueryParameters = tokenQueryParameters;\n+    }\n+\n+    /**\n+     * Get the specified OAUTH scopes.\n+     * @return the specified OAUTH scopes.", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMTg1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427521851", "bodyText": "OAuth", "author": "raphkim", "createdAt": "2020-05-19T18:44:11Z", "path": "core/src/main/java/com/amplifyframework/auth/options/AuthWebUISignInOptions.java", "diffHunk": "@@ -0,0 +1,287 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Advanced options for signing in with a hosted web UI.\n+ */\n+public class AuthWebUISignInOptions {\n+    private final List<String> scopes;\n+    private final Map<String, String> signInQueryParameters;\n+    private final Map<String, String> signOutQueryParameters;\n+    private final Map<String, String> tokenQueryParameters;\n+\n+    /**\n+     * Advanced options for signing in with a hosted web UI.\n+     * @param scopes specify OAUTH scopes\n+     * @param signInQueryParameters map of custom parameters to send associated with sign in process\n+     * @param signOutQueryParameters map of custom parameters to send associated with sign out process\n+     * @param tokenQueryParameters map of custom parameters to send associated with token\n+     */\n+    protected AuthWebUISignInOptions(\n+            List<String> scopes,\n+            Map<String, String> signInQueryParameters,\n+            Map<String, String> signOutQueryParameters,\n+            Map<String, String> tokenQueryParameters\n+    ) {\n+        this.scopes = scopes;\n+        this.signInQueryParameters = signInQueryParameters;\n+        this.signOutQueryParameters = signOutQueryParameters;\n+        this.tokenQueryParameters = tokenQueryParameters;\n+    }\n+\n+    /**\n+     * Get the specified OAUTH scopes.\n+     * @return the specified OAUTH scopes.\n+     */\n+    @NonNull\n+    public List<String> getScopes() {\n+        return scopes;\n+    }\n+\n+    /**\n+     * Get map of custom parameters to send associated with sign in process.\n+     * @return map of custom parameters to send associated with sign in process.\n+     */\n+    @NonNull\n+    public Map<String, String> getSignInQueryParameters() {\n+        return signInQueryParameters;\n+    }\n+\n+    /**\n+     * Get map of custom parameters to send associated with sign out process.\n+     * @return map of custom parameters to send associated with sign out process\n+     */\n+    @NonNull\n+    public Map<String, String> getSignOutQueryParameters() {\n+        return signOutQueryParameters;\n+    }\n+\n+    /**\n+     * Get map of custom parameters to send associated with token.\n+     * @return map of custom parameters to send associated with token\n+     */\n+    @NonNull\n+    public Map<String, String> getTokenQueryParameters() {\n+        return tokenQueryParameters;\n+    }\n+\n+    /**\n+     * Get a builder to construct an instance of this object.\n+     * @return a builder to construct an instance of this object.\n+     */\n+    @NonNull\n+    public static Builder<?> builder() {\n+        return new CoreBuilder();\n+    }\n+\n+    /**\n+     * When overriding, be sure to include scopes, signInQueryParameters, signOutQueryParameters, and\n+     * tokenQueryParameters in the hash.\n+     * @return Hash code of this object\n+     */\n+    @Override\n+    public int hashCode() {\n+        return ObjectsCompat.hash(\n+                getScopes(),\n+                getSignInQueryParameters(),\n+                getSignOutQueryParameters(),\n+                getTokenQueryParameters()\n+        );\n+    }\n+\n+    /**\n+     * When overriding, be sure to include scopes, signInQueryParameters, signOutQueryParameters, and\n+     * tokenQueryParameters in the comparison.\n+     * @return True if the two objects are equal, false otherwise\n+     */\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        } else if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        } else {\n+            AuthWebUISignInOptions authWebUISignInOptions = (AuthWebUISignInOptions) obj;\n+            return ObjectsCompat.equals(getScopes(), authWebUISignInOptions.getScopes()) &&\n+                ObjectsCompat.equals(getSignInQueryParameters(), authWebUISignInOptions.getSignInQueryParameters()) &&\n+                ObjectsCompat.equals(getSignOutQueryParameters(), authWebUISignInOptions.getSignOutQueryParameters()) &&\n+                ObjectsCompat.equals(getTokenQueryParameters(), authWebUISignInOptions.getTokenQueryParameters());\n+        }\n+    }\n+\n+    /**\n+     * When overriding, be sure to include scopes, signInQueryParameters, signOutQueryParameters, and\n+     * tokenQueryParameters in the output string.\n+     * @return A string representation of the object\n+     */\n+    @Override\n+    public String toString() {\n+        return \"AuthWebUISignInOptions{\" +\n+                \"scopes=\" + getScopes() +\n+                \", signInQueryParameters=\" + getSignInQueryParameters() +\n+                \", signOutQueryParameters=\" + getSignOutQueryParameters() +\n+                \", tokenQueryParameters=\" + getTokenQueryParameters() +\n+                '}';\n+    }\n+\n+    /**\n+     * The builder for this class.\n+     * @param <T> The type of builder - used to support plugin extensions of this.\n+     */\n+    public abstract static class Builder<T extends Builder<T>> {\n+        private List<String> scopes;\n+        private Map<String, String> signInQueryParameters;\n+        private Map<String, String> signOutQueryParameters;\n+        private Map<String, String> tokenQueryParameters;\n+\n+        /**\n+         * Initialize the builder object with fields initialized with empty collection objects.\n+         */\n+        public Builder() {\n+            this.scopes = new ArrayList<>();\n+            this.signInQueryParameters = new HashMap<>();\n+            this.signOutQueryParameters = new HashMap<>();\n+            this.tokenQueryParameters = new HashMap<>();\n+        }\n+\n+        /**\n+         * Return the type of builder this is so that chaining can work correctly without implicit casting.\n+         * @return the type of builder this is\n+         */\n+        public abstract T getThis();\n+\n+        /**\n+         * Specified OAUTH scopes.\n+         * @return specified OAUTH scopes", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMjE3NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427522174", "bodyText": "UI", "author": "raphkim", "createdAt": "2020-05-19T18:44:45Z", "path": "testutils/src/main/java/com/amplifyframework/testutils/sync/SynchronousAuth.java", "diffHunk": "@@ -171,6 +174,40 @@ public AuthSignInResult confirmSignIn(\n         );\n     }\n \n+    /**\n+     * Social web UI sign in synchronously.\n+     * @param provider The auth provider you want to launch the web ui for (e.g. Facebook, Google, etc.)", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNDQ3NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427524475", "bodyText": "Does Android SDK currently support sign-in with apple?", "author": "raphkim", "createdAt": "2020-05-19T18:48:25Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthProvider.java", "diffHunk": "@@ -22,10 +22,10 @@\n  * A factory for some preset third party auth providers and the ability to create a new, custom one.\n  */\n public class AuthProvider {\n-    private static final String AMAZON = \"www.amazon.com\";\n-    private static final String FACEBOOK = \"graph.facebook.com\";\n-    private static final String GOOGLE = \"accounts.google.com\";\n-    private static final String TWITTER = \"api.twitter.com\";\n+    private static final String AMAZON = \"amazon\";\n+    private static final String FACEBOOK = \"facebook\";\n+    private static final String GOOGLE = \"google\";\n+    private static final String APPLE = \"apple\";", "originalCommit": "a374cd97a4853d96f06aca4862e9ce5ec65fbff0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDkxMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/486#discussion_r427580913", "bodyText": "This is for passing to HostedUI which based on the Cognito documentation I read does seem to support it.", "author": "TrekSoft", "createdAt": "2020-05-19T20:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNDQ3NQ=="}], "type": "inlineReview"}]}