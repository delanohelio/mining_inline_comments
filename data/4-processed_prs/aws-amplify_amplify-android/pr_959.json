{"pr_number": 959, "pr_title": "feat(datastore) selective sync", "pr_createdAt": "2020-11-13T21:09:50Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/959", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTg3Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523235876", "bodyText": "Perhaps:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a QueryPredicate that should be used to filter the data that is synced.\n          \n          \n            \n                 * @param modelClass Class of the {@link Model}.\n          \n          \n            \n                 * @return a QueryPredicate that should be used to filter the data that is synced.\n          \n          \n            \n                 * Returns a QueryPredicate that should be used to filter data received from AppSync,\n          \n          \n            \n                 * either during a base sync or over the real-time subscription.\n          \n          \n            \n                 * @param modelClass Class of the {@link Model}.\n          \n          \n            \n                 * @return a QueryPredicate that should be used to filter the data received from AppSync", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:15:00Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/DataStoreConfiguration.java", "diffHunk": "@@ -175,6 +176,29 @@ public Integer getSyncPageSize() {\n         return this.syncPageSize;\n     }\n \n+    /**\n+     * Returns a QueryPredicate that should be used to filter the data that is synced.\n+     * @param modelClass Class of the {@link Model}.\n+     * @return a QueryPredicate that should be used to filter the data that is synced.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjM2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523236366", "bodyText": "If you have the one above, do you need this Map-returning one, as well?", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:16:05Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/DataStoreConfiguration.java", "diffHunk": "@@ -175,6 +176,29 @@ public Integer getSyncPageSize() {\n         return this.syncPageSize;\n     }\n \n+    /**\n+     * Returns a QueryPredicate that should be used to filter the data that is synced.\n+     * @param modelClass Class of the {@link Model}.\n+     * @return a QueryPredicate that should be used to filter the data that is synced.\n+     */\n+    @NonNull\n+    public QueryPredicate getSyncQueryPredicate(Class<? extends Model> modelClass) {\n+        DataStoreSyncExpression expression = syncExpressions.get(modelClass);\n+        if (expression != null) {\n+            return expression.resolvePredicate();\n+        }\n+        return QueryPredicates.all();\n+    }\n+\n+    /**\n+     * Returns the Map of all {@link DataStoreSyncExpression}s used for filtering the data that is synced.\n+     * @return the Map of all {@link DataStoreSyncExpression}s used for filtering the data that is synced.\n+     */\n+    @NonNull\n+    public Map<Class<? extends Model>, DataStoreSyncExpression> getSyncExpressions() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0Mjk2OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523242968", "bodyText": "I considered the same question.  The main reason I need this though is for obtaining the Map from a user-provided DataStoreConfiguration, while merging with the default configuration.", "author": "richardmcclellan", "createdAt": "2020-11-13T21:31:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NTgyMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523245820", "bodyText": "Ah yes, that makes sense. \ud83d\udc4d", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNzA1NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523237055", "bodyText": "From the PR description:\n\nRuntime Modification: Clients can force a re-evaluation of their DataStoreSyncExpression at runtime by calling DataStore.stop(), DataStore.start(), if they wish to modify the filter to obtain a different set of data.\n\nHowever, if I need to provide the sync expressions before calling Amplify.configure(...), how could I change the expressions later? (Perhaps the sync expression itself has to be dynamic?)", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:17:39Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/DataStoreConfiguration.java", "diffHunk": "@@ -305,6 +339,23 @@ public Builder syncPageSize(@IntRange(from = 0) Integer syncPageSize) {\n             return Builder.this;\n         }\n \n+        /**\n+         * Sets a sync expression for a particular model to filter which data is synced locally.  The expression\n+         * is evaluated each time DataStore is started.  The QueryPredicate is applied on both sync and subscriptions.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NDc5OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523244798", "bodyText": "Here's how I'm doing it in my sample app:\nAmplifyFactory.setBlogQueryPredicate(Blog.NAME.contains(\"a\"));\nAmplify.DataStore.stop(...);\nAmplify.DataStore.start(...);\n\npublic class AmplifyFactory {\n    private static QueryPredicate blogQueryPredicate = QueryPredicates.all();\n\n    public static void setBlogQueryPredicate(QueryPredicate queryPredicate) {\n        blogQueryPredicate = queryPredicate;\n    }\n\n    public static void configure(Context context) {\n        try {\n            Amplify.addPlugin(new AWSDataStorePlugin(DataStoreConfiguration.builder()\n                    .syncExpression(Blog.class, () -> blogQueryPredicate)\n                    .build()));\n            Amplify.configure(context);\n        } catch (AmplifyException exception){\n            LOG.error(exception.getMessage(), exception);\n        }\n    }\n}", "author": "richardmcclellan", "createdAt": "2020-11-13T21:35:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNzA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NzUwNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523247506", "bodyText": "Seems ~reasonable. Or if someone really wanted, they could make like a:\nfinal class MutableSyncExpression implements DataStoreSyncExpression {\n    private QueryPredicate queryPredicate;\n\n    MutableSyncExpression() {\n        this.queryPredicate = QueryPredicates.all();\n    }\n\n    @Override public QueryPredicate resolvePredicate() {\n        return queryPredicate;\n    }\n\n    void updatePredicate(QueryPredicate queryPredicate) {\n        this.queryPredicate = queryPredicate;\n    }\n    // equals/hashCode/toString ...\n}", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:42:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNzA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNzM3MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523237371", "bodyText": "Arguably, it could live under .syncengine? It's sort of both a sync-thing, and a top-level-user-provided-thing.", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:18:30Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/DataStoreSyncExpression.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQyODY4MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r524428680", "bodyText": "Hmm, I think you could make an argument for either one (.datastore, or .datastore.syncengine).  I think it makes a little more sense in .datastore though, so that it's in the same place as DatastoreConflictHandler, DataStoreConfiguration, etc.", "author": "richardmcclellan", "createdAt": "2020-11-16T17:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNzM3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzODMxNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523238314", "bodyText": "If you're able to get it from the ModelSchemaRegistry, instead, that would prevent another reflection over the model class. Alternately, modelClass.getSimpleName() probably does the trick, too.", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:20:30Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncRequestFactory.java", "diffHunk": "@@ -97,7 +98,11 @@ private AppSyncRequestFactory() {}\n             if (limit != null) {\n                 builder.variable(\"limit\", \"Int\", limit);\n             }\n-\n+            if (!QueryPredicates.all().equals(predicate)) {\n+                String modelName = ModelSchema.fromModelClass(modelClass).getName();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzMTg1Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r524431852", "bodyText": "\ud83d\udc4d I'll go with modelClass.getSimpleName()", "author": "richardmcclellan", "createdAt": "2020-11-16T17:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzODMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTAzMQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523239031", "bodyText": "As sort of a philosophical point, I'd argue the non-null checks should be in the build(), not in the private constructor. It is to say \"We won't even attempt construction of the object, if user-provided options foo, bar, are null.\"", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:22:10Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -66,23 +68,20 @@\n     private final AppSync appSync;\n     private final ModelProvider modelProvider;\n     private final Merger merger;\n+    private final DataStoreConfigurationProvider dataStoreConfigurationProvider;\n     private final CompositeDisposable ongoingOperationsDisposable;\n     private final long adjustedTimeoutSeconds;\n     private ReplaySubject<SubscriptionEvent<? extends Model>> buffer;\n \n     /**\n      * Constructs a new SubscriptionProcessor.\n-     * @param appSync An App Sync endpoint from which to receive subscription events\n-     * @param modelProvider The processor will subscribe to changes for these types of models\n-     * @param merger A merger, to apply data back into local storage\n+     * @param builder A SubscriptionProcessor Builder.\n      */\n-    SubscriptionProcessor(\n-            @NonNull AppSync appSync,\n-            @NonNull ModelProvider modelProvider,\n-            @NonNull Merger merger) {\n-        this.appSync = Objects.requireNonNull(appSync);\n-        this.modelProvider = Objects.requireNonNull(modelProvider);\n-        this.merger = Objects.requireNonNull(merger);\n+    private SubscriptionProcessor(Builder builder) {\n+        this.appSync = Objects.requireNonNull(builder.appSync);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQyNTc2MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r524425761", "bodyText": "That philosophy makes sense!    I'll remove these here in the constructor.  I actually don't think I need to add them to build(), because the step methods call Objects.requireNonNull(...) already, and the step builder makes all arguments required.", "author": "richardmcclellan", "createdAt": "2020-11-16T17:03:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTAzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTMyMw==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523239323", "bodyText": "Suggested change", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:22:52Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -299,4 +310,75 @@ static SubscriptionMethod subscriptionMethodFor(\n                 @NonNull Action onComplete\n         );\n     }\n+\n+    /**\n+     * Builds instances of {@link SubscriptionProcessor}s.\n+     */\n+    public static final class Builder implements AppSyncStep, ModelProviderStep, MergerStep,\n+            DataStoreConfigurationProviderStep, BuildStep {\n+        private AppSync appSync;\n+        private ModelProvider modelProvider;\n+        private Merger merger;\n+        private DataStoreConfigurationProvider dataStoreConfigurationProvider;\n+\n+        @NonNull\n+        @Override\n+        public ModelProviderStep appSync(@NonNull AppSync appSync) {\n+            this.appSync = Objects.requireNonNull(appSync);\n+            return Builder.this;\n+        }\n+\n+        @NonNull\n+        @Override\n+        public MergerStep modelProvider(@NonNull ModelProvider modelProvider) {\n+            this.modelProvider = Objects.requireNonNull(modelProvider);\n+            return Builder.this;\n+        }\n+\n+        @NonNull\n+        @Override\n+        public DataStoreConfigurationProviderStep merger(@NonNull Merger merger) {\n+            this.merger = Objects.requireNonNull(merger);\n+            return Builder.this;\n+        }\n+\n+        @NonNull\n+        @Override\n+        public BuildStep dataStoreConfigurationProvider(DataStoreConfigurationProvider dataStoreConfigurationProvider) {\n+            this.dataStoreConfigurationProvider = dataStoreConfigurationProvider;\n+            return Builder.this;\n+        }\n+\n+        @NonNull\n+        @Override\n+        public SubscriptionProcessor build() {\n+            return new SubscriptionProcessor(this);\n+        }\n+    }\n+\n+    interface AppSyncStep {\n+        @NonNull\n+        ModelProviderStep appSync(@NonNull AppSync appSync);\n+    }\n+\n+    interface ModelProviderStep {\n+        @NonNull\n+        MergerStep modelProvider(@NonNull ModelProvider modelProvider);\n+    }\n+\n+    interface MergerStep {\n+        @NonNull\n+        DataStoreConfigurationProviderStep merger(@NonNull Merger merger);\n+    }\n+\n+    interface DataStoreConfigurationProviderStep {\n+        @NonNull\n+        BuildStep dataStoreConfigurationProvider(DataStoreConfigurationProvider dataStoreConfiguration);\n+    }\n+\n+    interface BuildStep {\n+        @NonNull\n+        SubscriptionProcessor build();\n+    }\n+", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTg3NQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523239875", "bodyText": "The RandomString.string() would have the same behavior here, but it reads like \"oh, the value of the ID isn't important for the test, so long as it's there.\"", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:24:00Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/DataStoreConfigurationTest.java", "diffHunk": "@@ -96,11 +100,13 @@ public void testDefaultOverriddenFromConfigurationAndObject() throws JSONExcepti\n         DummyConflictHandler dummyConflictHandler = new DummyConflictHandler();\n         DataStoreErrorHandler errorHandler = DefaultDataStoreErrorHandler.instance();\n \n+        DataStoreSyncExpression syncExpression = () -> BlogOwner.ID.beginsWith(\"a\");", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0MDI1Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r523240253", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.subscriptionProcessor = SubscriptionProcessor.builder().appSync(appSync)\n          \n          \n            \n                            .modelProvider(modelProvider)\n          \n          \n            \n                    this.subscriptionProcessor = SubscriptionProcessor.builder()\n          \n          \n            \n                            .appSync(appSync)\n          \n          \n            \n                            .modelProvider(modelProvider)", "author": "jamesonwilliams", "createdAt": "2020-11-13T21:24:48Z", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessorTest.java", "diffHunk": "@@ -84,7 +86,13 @@ public void setup() throws AmplifyException {\n         this.models = sortedModels(modelProvider);\n         this.appSync = mock(AppSync.class);\n         this.merger = mock(Merger.class);\n-        this.subscriptionProcessor = new SubscriptionProcessor(appSync, modelProvider, merger);\n+        this.subscriptionProcessor = SubscriptionProcessor.builder().appSync(appSync)\n+                .modelProvider(modelProvider)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7b54ee44b526e1fb55f45079482644ed87889559", "url": "https://github.com/aws-amplify/amplify-android/commit/7b54ee44b526e1fb55f45079482644ed87889559", "message": "feat(datastore) selective sync", "committedDate": "2020-11-16T17:50:39Z", "type": "commit"}, {"oid": "091940f85c361bb338252269caf6b257365b0bba", "url": "https://github.com/aws-amplify/amplify-android/commit/091940f85c361bb338252269caf6b257365b0bba", "message": "Update aws-datastore/src/main/java/com/amplifyframework/datastore/DataStoreConfiguration.java\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-11-16T17:50:39Z", "type": "commit"}, {"oid": "556f46b825212a0b5a0eb0747809561b6a6378a0", "url": "https://github.com/aws-amplify/amplify-android/commit/556f46b825212a0b5a0eb0747809561b6a6378a0", "message": "Update aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-11-16T17:50:40Z", "type": "commit"}, {"oid": "933765a3d0819d08cdc0863cf96a33fbbd2165ff", "url": "https://github.com/aws-amplify/amplify-android/commit/933765a3d0819d08cdc0863cf96a33fbbd2165ff", "message": "Update aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessorTest.java\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-11-16T17:50:40Z", "type": "commit"}, {"oid": "680f10fb995e5ed15a15d864c250eda975e5ac7e", "url": "https://github.com/aws-amplify/amplify-android/commit/680f10fb995e5ed15a15d864c250eda975e5ac7e", "message": "Address PR feedback", "committedDate": "2020-11-16T17:50:40Z", "type": "commit"}, {"oid": "680f10fb995e5ed15a15d864c250eda975e5ac7e", "url": "https://github.com/aws-amplify/amplify-android/commit/680f10fb995e5ed15a15d864c250eda975e5ac7e", "message": "Address PR feedback", "committedDate": "2020-11-16T17:50:40Z", "type": "forcePushed"}, {"oid": "7ec0f5ac27ec396168887283a5bd15fe23449e1b", "url": "https://github.com/aws-amplify/amplify-android/commit/7ec0f5ac27ec396168887283a5bd15fe23449e1b", "message": "Fix merge conflict", "committedDate": "2020-11-16T20:09:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYxNTI5NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r524615294", "bodyText": "Can you make this a map from model name to sync expression, Map<String, DataStoreSyncExpression>? This would be more likely to work for Flutter, if/when that gets implemented in amplify-flutter.", "author": "jamesonwilliams", "createdAt": "2020-11-16T21:37:48Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/DataStoreConfiguration.java", "diffHunk": "@@ -44,21 +50,16 @@\n     private final DataStoreConflictHandler conflictHandler;\n     private final Integer syncMaxRecords;\n     private final Integer syncPageSize;\n-    private Long syncIntervalInMinutes;\n-\n-    private DataStoreConfiguration(\n-            DataStoreErrorHandler errorHandler,\n-            DataStoreConflictHandler conflictHandler,\n-            Long syncIntervalInMinutes,\n-            Integer syncMaxRecords,\n-            Integer syncPageSize) {\n-        this.errorHandler = errorHandler;\n-        this.conflictHandler = conflictHandler;\n-        this.syncMaxRecords = syncMaxRecords;\n-        this.syncPageSize = syncPageSize;\n-        if (syncIntervalInMinutes != null) {\n-            this.syncIntervalInMinutes = syncIntervalInMinutes;\n-        }\n+    private final Map<Class<? extends Model>, DataStoreSyncExpression> syncExpressions;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYxNzc4MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r524617781", "bodyText": "If you do the String modelName instead of the Class<? extends Model> modelClass, could be just modelSchema.getName()", "author": "jamesonwilliams", "createdAt": "2020-11-16T21:40:02Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -206,6 +213,11 @@ private boolean isUnauthorizedException(DataStoreException exception) {\n         .subscribeOn(Schedulers.io())\n         .observeOn(Schedulers.io())\n         .map(SubscriptionProcessor::unwrapResponse)\n+        .filter(modelWithMetadata -> {\n+            Class<? extends Model> clazz = modelSchema.getModelClass();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ec0f5ac27ec396168887283a5bd15fe23449e1b", "url": "https://github.com/aws-amplify/amplify-android/commit/7ec0f5ac27ec396168887283a5bd15fe23449e1b", "message": "Fix merge conflict", "committedDate": "2020-11-16T20:09:49Z", "type": "forcePushed"}, {"oid": "b165be7ee0a90b020e76d517b8a63a8837f57d5a", "url": "https://github.com/aws-amplify/amplify-android/commit/b165be7ee0a90b020e76d517b8a63a8837f57d5a", "message": "Change modelClass to modelName to more easily support hybrid platforms", "committedDate": "2020-11-16T23:30:16Z", "type": "commit"}, {"oid": "721048fccf04ccb3c5c908c40806223d4cff0a06", "url": "https://github.com/aws-amplify/amplify-android/commit/721048fccf04ccb3c5c908c40806223d4cff0a06", "message": "Only evaluate DataStoreSyncExpressions on DataStore.start", "committedDate": "2020-11-17T20:17:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMzk5NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r526403994", "bodyText": "Not that this matters or is worth changing but is there a reason you switched from passing in params to passing in the Builder instance? We do the opposite elsewhere in the code.", "author": "TrekSoft", "createdAt": "2020-11-18T20:36:20Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SyncProcessor.java", "diffHunk": "@@ -69,20 +69,16 @@\n     private final Merger merger;\n     private final DataStoreConfigurationProvider dataStoreConfigurationProvider;\n     private final String[] modelNames;\n-\n-    private SyncProcessor(\n-            ModelProvider modelProvider,\n-            ModelSchemaRegistry modelSchemaRegistry,\n-            SyncTimeRegistry syncTimeRegistry,\n-            AppSync appSync,\n-            Merger merger,\n-            DataStoreConfigurationProvider dataStoreConfigurationProvider) {\n-        this.modelProvider = Objects.requireNonNull(modelProvider);\n-        this.modelSchemaRegistry = Objects.requireNonNull(modelSchemaRegistry);\n-        this.syncTimeRegistry = Objects.requireNonNull(syncTimeRegistry);\n-        this.appSync = Objects.requireNonNull(appSync);\n-        this.merger = Objects.requireNonNull(merger);\n-        this.dataStoreConfigurationProvider = dataStoreConfigurationProvider;\n+    private final QueryPredicateProvider queryPredicateProvider;\n+\n+    private SyncProcessor(Builder builder) {", "originalCommit": "721048fccf04ccb3c5c908c40806223d4cff0a06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNzc5NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r526407794", "bodyText": "I've seen both patterns in our code base.  I like the single Builder parameter approach a little better, because then we don't end up with a constructor that takes a ton of parameters, and one of the main reasons for using the Builder pattern is to avoid constructors with lots of parameters :).   I'm open to other thoughts on why the other pattern might be better though.", "author": "richardmcclellan", "createdAt": "2020-11-18T20:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMzk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ3MTkyMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/959#discussion_r528471920", "bodyText": "My argument for all-args constructor is that the constructor should not know any detail about the builder, or how it is being constructed. However, if the constructor is going to be private anyway, then it really doesn't matter. @richardmcclellan's point about not having to maintain the constructor argument list makes sense to me.", "author": "jamesonwilliams", "createdAt": "2020-11-23T04:56:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMzk5NA=="}], "type": "inlineReview"}]}