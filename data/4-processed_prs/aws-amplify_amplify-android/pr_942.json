{"pr_number": 942, "pr_title": "feat(datastore) swallow unauthorized errors for subscriptions", "pr_createdAt": "2020-10-30T05:40:45Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/942", "timeline": [{"oid": "c81c904beabc0b2e82c823c40be175b72121ad32", "url": "https://github.com/aws-amplify/amplify-android/commit/c81c904beabc0b2e82c823c40be175b72121ad32", "message": "feat(datastore) subscription processor should not fail due to an Unauthorized error", "committedDate": "2020-10-30T05:35:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NjY3OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/942#discussion_r515276679", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return errors;\n          \n          \n            \n                        return Immutable.of(errors);", "author": "jamesonwilliams", "createdAt": "2020-10-30T17:48:12Z", "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreException.java", "diffHunk": "@@ -51,4 +56,61 @@ public DataStoreException(\n     ) {\n         super(message, recoverySuggestion);\n     }\n+\n+    /**\n+     * Exception thrown by DataStore category plugins used to represent a GraphQLResponse containing errors.\n+     */\n+    public static final class GraphQLResponseException extends DataStoreException {\n+        private static final long serialVersionUID = 1L;\n+\n+        private final List<GraphQLResponse.Error> errors;\n+\n+        /**\n+         * Constructs a new exception using the provided message and list of errors.\n+         * @param message Explains the reason for the exception\n+         * @param errors List of errors from GraphQLResponse\n+         */\n+        public GraphQLResponseException(String message, @NonNull List<GraphQLResponse.Error> errors) {\n+            super(message, \"See attached list of GraphQLResponse.Error objects.\");\n+            this.errors = Objects.requireNonNull(errors);\n+        }\n+\n+        /**\n+         * Returns the errors.\n+         * @return the errors.\n+         */\n+        @NonNull\n+        public List<GraphQLResponse.Error> getErrors() {\n+            return errors;", "originalCommit": "c81c904beabc0b2e82c823c40be175b72121ad32", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3ODQ0Mg==", "url": "https://github.com/aws-amplify/amplify-android/pull/942#discussion_r515278442", "bodyText": "If we consume the InterruptedException will we leave the thread in an indeterminate state? Will the thread hang?", "author": "jamesonwilliams", "createdAt": "2020-10-30T17:51:11Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -317,27 +325,35 @@ private String buildConnectionRequestUrl() throws ApiException {\n             this.responseType = responseType;\n             this.subscriptionReadyAcknowledgment = new CountDownLatch(1);\n             this.subscriptionCompletionAcknowledgement = new CountDownLatch(1);\n+            this.failed = false;\n         }\n \n         void acknowledgeSubscriptionReady() {\n             subscriptionReadyAcknowledgment.countDown();\n         }\n \n+        void acknowledgeSubscriptionFailure() {\n+            failed = true;\n+            subscriptionReadyAcknowledgment.countDown();\n+        }\n+\n         boolean awaitSubscriptionReady() {\n             try {\n                 if (!subscriptionReadyAcknowledgment.await(ACKNOWLEDGEMENT_TIMEOUT, TimeUnit.SECONDS)) {\n                     dispatchError(new ApiException(\n-                        \"Subscription not acknowledged.\",\n+                        \"Timed out waiting for subscription start_ack.\",\n                         AmplifyException.TODO_RECOVERY_SUGGESTION\n                     ));\n                     return false;\n+                } else if (failed) {\n+                    // An error was already dispatched at the time of failure, so don't dispatch a second one.\n+                    return false;\n                 }\n             } catch (InterruptedException interruptedException) {\n-                dispatchError(new ApiException(\n-                    \"Failure awaiting subscription acknowledgement.\",\n-                    interruptedException,\n-                    AmplifyException.TODO_RECOVERY_SUGGESTION\n-                ));\n+                // Triggered when the Future created in SubscriptionOperation is cancelled, which happens when the\n+                // subscription Observable is disposed, which happens when a SUBSCRIPTION_ERROR occurs.  Don't dispatch\n+                // any error because the caller has likely already been disposed.\n+                LOG.warn(\"Thread interrupted awaiting subscription acknowledgement.\", interruptedException);", "originalCommit": "c81c904beabc0b2e82c823c40be175b72121ad32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5ODI2OA==", "url": "https://github.com/aws-amplify/amplify-android/pull/942#discussion_r515298268", "bodyText": "For the scenario where I observed this error happening, no.  The InterruptedException is thrown because cancel was called on the SubscriptionOperation, which then tries to cancel the Future.\nThere may be other scenarios that could cause an InterruptedException, but I think they should probably be handled similarly - stop, do any cleanup that you can, and return immediately.  Dispatching an error to the observer fails because the observer has already been disposed.\nNote though that this particular change is not needed for \"swallowing unauthorized errors for subscriptions\" since the errors are swallowed, and an interruption is prevented.   This change just improves handling of other errors that are not swallowed.", "author": "richardmcclellan", "createdAt": "2020-10-30T18:24:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3ODQ0Mg=="}], "type": "inlineReview"}, {"oid": "3a5302f3eba1366634af7bd8bf5f6c3c5a5f5dc0", "url": "https://github.com/aws-amplify/amplify-android/commit/3a5302f3eba1366634af7bd8bf5f6c3c5a5f5dc0", "message": "Update core/src/main/java/com/amplifyframework/datastore/DataStoreException.java\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-10-30T18:46:34Z", "type": "commit"}, {"oid": "3a5302f3eba1366634af7bd8bf5f6c3c5a5f5dc0", "url": "https://github.com/aws-amplify/amplify-android/commit/3a5302f3eba1366634af7bd8bf5f6c3c5a5f5dc0", "message": "Update core/src/main/java/com/amplifyframework/datastore/DataStoreException.java\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>", "committedDate": "2020-10-30T18:46:34Z", "type": "forcePushed"}]}