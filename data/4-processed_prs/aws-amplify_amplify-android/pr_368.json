{"pr_number": 368, "pr_title": "Sign In and Fetch Session", "pr_createdAt": "2020-04-08T18:39:06Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/368", "timeline": [{"oid": "4b5ddbd311a8b646b06e0e05ea675cc54bdfce56", "url": "https://github.com/aws-amplify/amplify-android/commit/4b5ddbd311a8b646b06e0e05ea675cc54bdfce56", "message": "Adds readme for user acceptance", "committedDate": "2020-04-02T17:48:01Z", "type": "commit"}, {"oid": "5053e26ce733db213b4f50491dadf450baebb2cc", "url": "https://github.com/aws-amplify/amplify-android/commit/5053e26ce733db213b4f50491dadf450baebb2cc", "message": "Updates readme", "committedDate": "2020-04-02T18:38:58Z", "type": "commit"}, {"oid": "41424d51255edda48db6b2f9a4464cc1c024be9e", "url": "https://github.com/aws-amplify/amplify-android/commit/41424d51255edda48db6b2f9a4464cc1c024be9e", "message": "Sign In and Fetch Session", "committedDate": "2020-04-08T18:25:38Z", "type": "commit"}, {"oid": "771160f4fba06615c4c64f72149472152b5973fd", "url": "https://github.com/aws-amplify/amplify-android/commit/771160f4fba06615c4c64f72149472152b5973fd", "message": "Merge remote-tracking branch 'origin/master' into ddaudeli/AuthCategory", "committedDate": "2020-04-08T18:26:26Z", "type": "commit"}, {"oid": "a88d5deeea1bcec87f381cb2f6a38f51c3d2e1f7", "url": "https://github.com/aws-amplify/amplify-android/commit/a88d5deeea1bcec87f381cb2f6a38f51c3d2e1f7", "message": "Merge branch 'AuthCategory' into ddaudeli/AuthCategory", "committedDate": "2020-04-08T18:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNTExNg==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r405735116", "bodyText": "Note that in the future, depending on the API naming meeting, I may need to write a map to convert Cognito sign in state values to match ours but for now, per the team's agreement, we're starting with the same values.", "author": "TrekSoft", "createdAt": "2020-04-08T18:40:25Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -230,13 +230,9 @@ public void onResult(SignInResult result) {\n                         )\n                         : null;\n \n-                if (result.getSignInState().equals(SignInState.DONE)) {\n-                    state = AuthSignedInStatus.SIGNED_IN;\n-                } else {\n-                    state = AuthSignedInStatus.SIGNED_OUT;\n-                }\n-\n-                onSuccess.accept(new AuthSignInResult(state, newDetails));\n+                onSuccess.accept(\n+                        new AuthSignInResult(AuthSignInState.getEnum(result.getSignInState().toString()), newDetails)", "originalCommit": "a88d5deeea1bcec87f381cb2f6a38f51c3d2e1f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNDIxNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406104214", "bodyText": "Naming for this method, I like any of these better:\n\nfromValue(String possibleValue) (to match getValue(), which returns one.\nfromString(String possibleValue)\nlookup(String possibleValue);\nfrom(String possibleValue)\n\n(getEnum is Hungarian notation, technically - and folks say not to use that, these days.)", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:18:05Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthSignInState.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+// TODO: These values are currently coming from the ChallengeName values in AWS Cognito InitiateAuth call.\n+//       The team decided to start with these since they are not Cognito specific but consider whether they\n+//       should be renamed / supplemented. As future plugins need other states, they would be added here as well.\n+public enum AuthSignInState {\n+    /**\n+     * Next challenge is to supply an SMS_MFA_CODE, delivered via SMS.\n+     */\n+    SMS_MFA(\"SMS_MFA\"),\n+\n+    /**\n+     *  Next challenge is to supply a SOFTWARE_TOKEN_MFA, delivered via software token.\n+     */\n+    SOFTWARE_TOKEN_MFA(\"SOFTWARE_TOKEN_MFA\"),\n+\n+    /**\n+     * If MFA is required, users who do not have at least one of the MFA methods set up are presented with this\n+     * challenge. The user must set up at least one MFA type to continue to authenticate.\n+     */\n+    MFA_SETUP(\"MFA_SETUP\"),\n+\n+    /**\n+     * Must select an MFA type. Valid MFA options are SMS_MFA for text SMS MFA, and SOFTWARE_TOKEN_MFA for TOTP\n+     * software token MFA.\n+     */\n+    SELECT_MFA_TYPE(\"SELECT_MFA_TYPE\"),\n+\n+    /**\n+     * Next challenge is to supply PASSWORD_CLAIM_SIGNATURE, PASSWORD_CLAIM_SECRET_BLOCK, and TIMESTAMP\n+     * after the client-side SRP calculations.\n+     */\n+    PASSWORD_VERIFIER(\"PASSWORD_VERIFIER\"),\n+\n+    /**\n+     * This is returned if your custom authentication flow determines that the user should pass another challenge\n+     * before tokens are issued.\n+     */\n+    CUSTOM_CHALLENGE(\"CUSTOM_CHALLENGE\"),\n+\n+    /**\n+     * If device tracking was enabled on your user pool and the previous challenges were passed, this challenge is\n+     * returned so that Amazon Cognito can start tracking this device.\n+     */\n+    DEVICE_SRP_AUTH(\"DEVICE_SRP_AUTH\"),\n+\n+    /**\n+     * Similar to PASSWORD_VERIFIER, but for devices only.\n+     */\n+    DEVICE_PASSWORD_VERIFIER(\"DEVICE_PASSWORD_VERIFIER\"),\n+\n+    /**\n+     * This is returned if you need to authenticate with USERNAME and PASSWORD directly.\n+     * An app client must be enabled to use this flow.\n+     */\n+    ADMIN_NO_SRP_AUTH(\"ADMIN_NO_SRP_AUTH\"),\n+\n+    /**\n+     * For users which are required to change their passwords after successful first login.\n+     * This challenge should be passed with NEW_PASSWORD and any other required attributes.\n+     */\n+    NEW_PASSWORD_REQUIRED(\"NEW_PASSWORD_REQUIRED\"),\n+\n+    /**\n+     * The flow is completed and no further steps are needed.\n+     */\n+    DONE(\"DONE\"),\n+\n+    /**\n+     * Unknown sign-in state, potentially unsupported state.\n+     */\n+    UNKNOWN(\"UNKNOWN\");\n+\n+    private final String value;\n+\n+    AuthSignInState(@NonNull String value) {\n+        this.value = Objects.requireNonNull(value);\n+    }\n+\n+    @NonNull\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    @NonNull\n+    public static AuthSignInState getEnum(String value) {", "originalCommit": "a88d5deeea1bcec87f381cb2f6a38f51c3d2e1f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNzE5Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406217193", "bodyText": "I see we're using fromString elsewhere so I'll update to that", "author": "TrekSoft", "createdAt": "2020-04-09T13:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNDIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNTczOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406105738", "bodyText": "Since the names of your enum identifiers are the same as the contents of their bound values, the default toString() (which calls name()) works, as is.\nHowever, should any enumerated value to added/changed here, this could break in a hard-to-trace way.\nI recommend adding a toString() impl which emits the getValue(), instead of the enum name() (the default behavior).\n\nActually, your enum values are currently the same as all of your enum identifiers. So you could just skip the inner value field, and use name() for everything. The fromString(...) would even still work, you'd just match against name(), instead of against getValue(). I guess you could keep getValue(), and just have that return name(), as well. Or, axe getValue() and call into the enum via the name().", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:20:57Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthSignInState.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+// TODO: These values are currently coming from the ChallengeName values in AWS Cognito InitiateAuth call.\n+//       The team decided to start with these since they are not Cognito specific but consider whether they\n+//       should be renamed / supplemented. As future plugins need other states, they would be added here as well.\n+public enum AuthSignInState {\n+    /**\n+     * Next challenge is to supply an SMS_MFA_CODE, delivered via SMS.\n+     */\n+    SMS_MFA(\"SMS_MFA\"),\n+\n+    /**\n+     *  Next challenge is to supply a SOFTWARE_TOKEN_MFA, delivered via software token.\n+     */\n+    SOFTWARE_TOKEN_MFA(\"SOFTWARE_TOKEN_MFA\"),\n+\n+    /**\n+     * If MFA is required, users who do not have at least one of the MFA methods set up are presented with this\n+     * challenge. The user must set up at least one MFA type to continue to authenticate.\n+     */\n+    MFA_SETUP(\"MFA_SETUP\"),\n+\n+    /**\n+     * Must select an MFA type. Valid MFA options are SMS_MFA for text SMS MFA, and SOFTWARE_TOKEN_MFA for TOTP\n+     * software token MFA.\n+     */\n+    SELECT_MFA_TYPE(\"SELECT_MFA_TYPE\"),\n+\n+    /**\n+     * Next challenge is to supply PASSWORD_CLAIM_SIGNATURE, PASSWORD_CLAIM_SECRET_BLOCK, and TIMESTAMP\n+     * after the client-side SRP calculations.\n+     */\n+    PASSWORD_VERIFIER(\"PASSWORD_VERIFIER\"),\n+\n+    /**\n+     * This is returned if your custom authentication flow determines that the user should pass another challenge\n+     * before tokens are issued.\n+     */\n+    CUSTOM_CHALLENGE(\"CUSTOM_CHALLENGE\"),\n+\n+    /**\n+     * If device tracking was enabled on your user pool and the previous challenges were passed, this challenge is\n+     * returned so that Amazon Cognito can start tracking this device.\n+     */\n+    DEVICE_SRP_AUTH(\"DEVICE_SRP_AUTH\"),\n+\n+    /**\n+     * Similar to PASSWORD_VERIFIER, but for devices only.\n+     */\n+    DEVICE_PASSWORD_VERIFIER(\"DEVICE_PASSWORD_VERIFIER\"),\n+\n+    /**\n+     * This is returned if you need to authenticate with USERNAME and PASSWORD directly.\n+     * An app client must be enabled to use this flow.\n+     */\n+    ADMIN_NO_SRP_AUTH(\"ADMIN_NO_SRP_AUTH\"),\n+\n+    /**\n+     * For users which are required to change their passwords after successful first login.\n+     * This challenge should be passed with NEW_PASSWORD and any other required attributes.\n+     */\n+    NEW_PASSWORD_REQUIRED(\"NEW_PASSWORD_REQUIRED\"),\n+\n+    /**\n+     * The flow is completed and no further steps are needed.\n+     */\n+    DONE(\"DONE\"),\n+\n+    /**\n+     * Unknown sign-in state, potentially unsupported state.\n+     */\n+    UNKNOWN(\"UNKNOWN\");\n+\n+    private final String value;\n+\n+    AuthSignInState(@NonNull String value) {\n+        this.value = Objects.requireNonNull(value);\n+    }\n+\n+    @NonNull\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    @NonNull\n+    public static AuthSignInState getEnum(String value) {\n+        for (AuthSignInState v : values()) {\n+            if (v.getValue().equalsIgnoreCase(value)) {\n+                return v;\n+            }\n+        }\n+\n+        return AuthSignInState.UNKNOWN;\n+    }\n+}", "originalCommit": "a88d5deeea1bcec87f381cb2f6a38f51c3d2e1f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwMjI2Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406202266", "bodyText": "Yeah so I was debating this while writing it and was thinking the flexibility of having a different value than the ENUM name might be worthwhile but I guess that could also just make things more confusing so I'll go ahead and drop it.", "author": "TrekSoft", "createdAt": "2020-04-09T13:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNTczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzMDIzNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406330237", "bodyText": "I could go either way as well!", "author": "jamesonwilliams", "createdAt": "2020-04-09T16:33:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwNTczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwODI1MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406108251", "bodyText": "For me, Android Studio generates a Lint about these StringBuilder  in toString(); it prefers just \"foo\" + \"bar\" style, as gets IDE-generated by default for toString().", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:25:50Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthSession.java", "diffHunk": "@@ -110,8 +120,12 @@ public boolean equals(Object obj) {\n     public String toString() {\n         return new StringBuilder()", "originalCommit": "a88d5deeea1bcec87f381cb2f6a38f51c3d2e1f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwMjY4MQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406202681", "bodyText": "Hmmm... that's weird since StringBuilder is more performant from what I understand. Maybe they don't think it's worth the extra dependency..? Anyway I'll update.", "author": "TrekSoft", "createdAt": "2020-04-09T13:27:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwODI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNDQ1OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406334459", "bodyText": "I thought it was weird, too. To be fair, I didn't actually look deep enough into it, to tell if the IDE was being reasonable.", "author": "jamesonwilliams", "createdAt": "2020-04-09T16:40:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwODI1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwOTUxNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406109515", "bodyText": "What happens to the content of this error? It looks ignored. How does it get back to the consumer, for auditing/reporting?", "author": "jamesonwilliams", "createdAt": "2020-04-09T10:28:12Z", "path": "aws-auth-cognito/src/main/java/com/amplifyframework/auth/cognito/AWSCognitoAuthPlugin.java", "diffHunk": "@@ -426,6 +418,19 @@ public void onError(Exception exception) {\n             }\n         });\n \n+        AWSMobileClient.getInstance().getUserAttributes(new Callback<Map<String, String>>() {\n+            @Override\n+            public void onResult(Map<String, String> result) {\n+                sessionBuilder.userSub(result.get(\"sub\"));\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(Exception exception) {", "originalCommit": "a88d5deeea1bcec87f381cb2f6a38f51c3d2e1f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjUwOA==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406206508", "bodyText": "Currently, we are ignoring it because the most common scenario for a failure is that the user attributes aren't available for the given user type but we still want to return the rest of the information for this session object which is available. However, it would be nice to also return errors for optional inspection so I'll be talking with JIthin and the Architecture team about how to do this as an enhancement in a follow-up PR.", "author": "TrekSoft", "createdAt": "2020-04-09T13:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwOTUxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzMzI4Mw==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406333283", "bodyText": "Can you add this whole thing into an /** Why we're ignoring this error ... */ comment?", "author": "jamesonwilliams", "createdAt": "2020-04-09T16:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEwOTUxNQ=="}], "type": "inlineReview"}, {"oid": "733c552d8aa80863817c869a6a8c818a0e38aa5c", "url": "https://github.com/aws-amplify/amplify-android/commit/733c552d8aa80863817c869a6a8c818a0e38aa5c", "message": "Addresses PR comments", "committedDate": "2020-04-09T15:42:25Z", "type": "commit"}, {"oid": "66f45f40f1b7c99310e72ef71db95aab4df0c1c1", "url": "https://github.com/aws-amplify/amplify-android/commit/66f45f40f1b7c99310e72ef71db95aab4df0c1c1", "message": "One more fix", "committedDate": "2020-04-09T15:43:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzMjYwNQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/368#discussion_r406332605", "bodyText": "Better to avoid single letter variable names -- value, instead? I think our checkstyle only checks for user-exposed fields like parameter names, though. This isn't a major issue, internal to the method, here.", "author": "jamesonwilliams", "createdAt": "2020-04-09T16:37:34Z", "path": "core/src/main/java/com/amplifyframework/auth/AuthSignInState.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.auth;\n+\n+import androidx.annotation.NonNull;\n+\n+// TODO: These values are currently coming from the ChallengeName values in AWS Cognito InitiateAuth call.\n+//       The team decided to start with these since they are not Cognito specific but consider whether they\n+//       should be renamed / supplemented. As future plugins need other states, they would be added here as well.\n+public enum AuthSignInState {\n+    /**\n+     * Next challenge is to supply an SMS_MFA_CODE, delivered via SMS.\n+     */\n+    SMS_MFA,\n+\n+    /**\n+     *  Next challenge is to supply a SOFTWARE_TOKEN_MFA, delivered via software token.\n+     */\n+    SOFTWARE_TOKEN_MFA,\n+\n+    /**\n+     * If MFA is required, users who do not have at least one of the MFA methods set up are presented with this\n+     * challenge. The user must set up at least one MFA type to continue to authenticate.\n+     */\n+    MFA_SETUP,\n+\n+    /**\n+     * Must select an MFA type. Valid MFA options are SMS_MFA for text SMS MFA, and SOFTWARE_TOKEN_MFA for TOTP\n+     * software token MFA.\n+     */\n+    SELECT_MFA_TYPE,\n+\n+    /**\n+     * Next challenge is to supply PASSWORD_CLAIM_SIGNATURE, PASSWORD_CLAIM_SECRET_BLOCK, and TIMESTAMP\n+     * after the client-side SRP calculations.\n+     */\n+    PASSWORD_VERIFIER,\n+\n+    /**\n+     * This is returned if your custom authentication flow determines that the user should pass another challenge\n+     * before tokens are issued.\n+     */\n+    CUSTOM_CHALLENGE,\n+\n+    /**\n+     * If device tracking was enabled on your user pool and the previous challenges were passed, this challenge is\n+     * returned so that Amazon Cognito can start tracking this device.\n+     */\n+    DEVICE_SRP_AUTH,\n+\n+    /**\n+     * Similar to PASSWORD_VERIFIER, but for devices only.\n+     */\n+    DEVICE_PASSWORD_VERIFIER,\n+\n+    /**\n+     * This is returned if you need to authenticate with USERNAME and PASSWORD directly.\n+     * An app client must be enabled to use this flow.\n+     */\n+    ADMIN_NO_SRP_AUTH,\n+\n+    /**\n+     * For users which are required to change their passwords after successful first login.\n+     * This challenge should be passed with NEW_PASSWORD and any other required attributes.\n+     */\n+    NEW_PASSWORD_REQUIRED,\n+\n+    /**\n+     * The flow is completed and no further steps are needed.\n+     */\n+    DONE,\n+\n+    /**\n+     * Unknown sign-in state, potentially unsupported state.\n+     */\n+    UNKNOWN;\n+\n+    @NonNull\n+    public static AuthSignInState fromString(String value) {\n+        for (AuthSignInState v : values()) {", "originalCommit": "66f45f40f1b7c99310e72ef71db95aab4df0c1c1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}