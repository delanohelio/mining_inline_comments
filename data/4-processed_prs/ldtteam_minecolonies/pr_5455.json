{"pr_number": 5455, "pr_title": "Smeltercrafter/reliability", "pr_createdAt": "2020-07-25T15:29:10Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/5455", "timeline": [{"oid": "5b56f6b20d1a729f95ce249e764aa6deca7a363e", "url": "https://github.com/ldtteam/minecolonies/commit/5b56f6b20d1a729f95ce249e764aa6deca7a363e", "message": "Track smelting much better and improve reliabiltiy", "committedDate": "2020-07-25T14:54:43Z", "type": "commit"}, {"oid": "d817b596141203d482993367abf3d07ac52dc181", "url": "https://github.com/ldtteam/minecolonies/commit/d817b596141203d482993367abf3d07ac52dc181", "message": "Set up for skill based behavior", "committedDate": "2020-07-25T15:26:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNTc4MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5455#discussion_r460415780", "bodyText": "Why would we store all allowed fuel as already kept?", "author": "Raycoms", "createdAt": "2020-07-25T15:32:29Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingSmelterCrafter.java", "diffHunk": "@@ -106,6 +106,13 @@ public int getMaxBuildingLevel()\n         return builder.build();\n     }\n \n+    @Override\n+    public int buildingRequiresCertainAmountOfItem(final ItemStack stack, final List<ItemStorage> localAlreadyKept, final boolean inventory)\n+    {\n+        localAlreadyKept.addAll(getAllowedFuel().stream().map(is -> new ItemStorage(is)).filter(i -> i.getItemStack().equals(stack)).collect(Collectors.toCollection(ArrayList::new)));\n+        return super.buildingRequiresCertainAmountOfItem(stack, localAlreadyKept, inventory);\n+    }", "originalCommit": "d817b596141203d482993367abf3d07ac52dc181", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNjA4Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5455#discussion_r460416082", "bodyText": "besides being an expensive stream, I don't think this is doing what you think it is. You put in the localAlreadyKept the blocks you did not dump. This way it will dump them. What you want to do is to check if stack is part of allowed fuel and then if localAlreadyKept contains 64 of allowed fuel. If not, then you return the quantity yu want to dump (to make sure at least 64 stay in the workers inv), else you'll return stack.size and if not allowed fuel you return super", "author": "Raycoms", "createdAt": "2020-07-25T15:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNTc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQzNjk1NA==", "url": "https://github.com/ldtteam/minecolonies/pull/5455#discussion_r460436954", "bodyText": "As you are filtering only on the ItemStack and not on the ItemStorage it would make sense to swap the order of operations to prevent creating unneeded ItemStorage instances:\nlocalAlreadyKept.addAll(getAllowedFuel().stream().filter(i -> i.equals(stack)).map(ItemStorage::new).collect(Collectors.toCollection(ArrayList::new)));", "author": "MatthiasMann", "createdAt": "2020-07-25T19:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNTc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0MjM0MQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5455#discussion_r460442341", "bodyText": "This code is gone.", "author": "Mekle001", "createdAt": "2020-07-25T20:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNTc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNTgyMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5455#discussion_r460415821", "bodyText": "@OverRide", "author": "Raycoms", "createdAt": "2020-07-25T15:33:03Z", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -61,13 +63,28 @@ public AbstractEntityAIRequestSmelter(@NotNull final J smelteryJob)\n           new AITarget(RETRIEVING_END_PRODUCT_FROM_FURNACE, this::retrieveSmeltableFromFurnace, 1));\n     }\n \n+    @Override\n+    protected int getActionsDoneUntilDumping()\n+    {\n+        return 32;\n+    }\n+\n     @NotNull\n     @Override\n     protected List<ItemStack> itemsNiceToHave()\n     {\n         return getOwnBuilding().getAllowedFuel();\n     }\n \n+    protected int getExtendedOutputCount(final ItemStack primaryOutput)", "originalCommit": "d817b596141203d482993367abf3d07ac52dc181", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2e377fb537dd4d21cce5236b5355e5235d9d7ac4", "url": "https://github.com/ldtteam/minecolonies/commit/2e377fb537dd4d21cce5236b5355e5235d9d7ac4", "message": "Incorrect keep-back of fuel", "committedDate": "2020-07-25T15:50:51Z", "type": "commit"}, {"oid": "3ecf40f1c5b8db7f35b8543e3d48bbdd0b6bacc2", "url": "https://github.com/ldtteam/minecolonies/commit/3ecf40f1c5b8db7f35b8543e3d48bbdd0b6bacc2", "message": "Review Feedback", "committedDate": "2020-07-25T22:18:20Z", "type": "commit"}, {"oid": "bb1f1fa64c0a50aea2dcc659eaa4905362f00d94", "url": "https://github.com/ldtteam/minecolonies/commit/bb1f1fa64c0a50aea2dcc659eaa4905362f00d94", "message": "A few more tweaks for job completion reliability", "committedDate": "2020-07-26T01:54:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MjA1OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5455#discussion_r460742059", "bodyText": "for the scalable Delays you can either use setDelay(ticks) which pauses the AI for X ticks, or add some local counter var.", "author": "someaddons", "createdAt": "2020-07-27T08:52:19Z", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -272,6 +302,10 @@ private IAIState checkIfAbleToSmelt(final int amountOfFuel, final boolean checkS\n             }\n         }\n \n+        if(furnaceBurning)\n+        {\n+            //Todo: Scalable Delay ", "originalCommit": "bb1f1fa64c0a50aea2dcc659eaa4905362f00d94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3NTE4NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5455#discussion_r460975185", "bodyText": "Yeah, I actually had some in there, but removed them and put the todos in to mark where I wanted them in the next phase. That's phase is where I work the primary and secondary stats into the behavior. Better parallelization on primary, and more responsive on secondary (thus the scalable delays)", "author": "Mekle001", "createdAt": "2020-07-27T15:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MjA1OQ=="}], "type": "inlineReview"}]}