{"pr_number": 5984, "pr_title": "fix #5920", "pr_createdAt": "2020-10-24T08:48:01Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/5984", "timeline": [{"oid": "c0fd62bd2585ea521926c630d158fbcff5851002", "url": "https://github.com/ldtteam/minecolonies/commit/c0fd62bd2585ea521926c630d158fbcff5851002", "message": "fix #5920", "committedDate": "2020-10-24T08:43:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM2Mzc5Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5984#discussion_r511363796", "bodyText": "Nope, figure out a better way todo this.\nNeighbor update or what ever.\nBut this is not a good reason to make this TileEntity ticking, it will cause a massive performance regression and that is not acceptable for something like this, since this adds no functionality what so ever to our tile.", "author": "OrionDevelopment", "createdAt": "2020-10-24T09:34:02Z", "path": "src/api/java/com/minecolonies/api/tileentities/TileEntityRack.java", "diffHunk": "@@ -95,6 +95,12 @@ public int getFreeSlots()\n         return freeSlots;\n     }\n \n+    @Override\n+    public void tick()\n+    {\n+        combinedHandler = null;", "originalCommit": "c0fd62bd2585ea521926c630d158fbcff5851002", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "80d8afdc59f241bcf52ab04d63bc88db4c719413", "url": "https://github.com/ldtteam/minecolonies/commit/80d8afdc59f241bcf52ab04d63bc88db4c719413", "message": "Fix setup", "committedDate": "2020-10-24T18:26:04Z", "type": "commit"}, {"oid": "4235617b5d470ca4fbf9c5582a7bc7ea63add89a", "url": "https://github.com/ldtteam/minecolonies/commit/4235617b5d470ca4fbf9c5582a7bc7ea63add89a", "message": "adjust rack", "committedDate": "2020-10-25T09:20:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU3MTUwMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5984#discussion_r511571503", "bodyText": "Nope.\nThe idea of lazy optionals is that they should only be created when needed.\nMeaning that these optionals should be effectively final as long as they are valid (aka as long as the block persists and his \"neighbor\"-state did not change.\nOnce any of these above properties change, you invalidate the old lazy optional and save a new one in a field which you then return in the getCapabilities method.\nTHis ensures that mods like AE etc can hold on to the itemhandler for as long as he is valid and only query for a new one once we invalidate the old one.", "author": "OrionDevelopment", "createdAt": "2020-10-25T09:32:49Z", "path": "src/api/java/com/minecolonies/api/tileentities/TileEntityRack.java", "diffHunk": "@@ -438,11 +428,7 @@ else if (getOtherChest() != null)\n             {\n                 if (isMain())\n                 {\n-                    if (combinedHandler == null)\n-                    {\n-                        combinedHandler = new CombinedInvWrapper(inventory, getOtherChest().getInventory());\n-                    }\n-                    return LazyOptional.of(() -> (T) combinedHandler);\n+                    return LazyOptional.of(() -> (T) new CombinedItemHandler(RACK, inventory, getOtherChest().getInventory()));", "originalCommit": "4235617b5d470ca4fbf9c5582a7bc7ea63add89a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "97550a9b6f55aa284b6ef4b3ec6f9087f12d6dd6", "url": "https://github.com/ldtteam/minecolonies/commit/97550a9b6f55aa284b6ef4b3ec6f9087f12d6dd6", "message": "invalidate properly", "committedDate": "2020-10-25T10:00:41Z", "type": "commit"}]}