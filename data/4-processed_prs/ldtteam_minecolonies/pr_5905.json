{"pr_number": 5905, "pr_title": "Multi-Output recipes, and reliable secondary outputs", "pr_createdAt": "2020-10-11T15:21:09Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/5905", "timeline": [{"oid": "60772a4d0482c29fb9f8e4036bd7c57ff98f4801", "url": "https://github.com/ldtteam/minecolonies/commit/60772a4d0482c29fb9f8e4036bd7c57ff98f4801", "message": "Use factory for recipe creation", "committedDate": "2020-10-11T15:00:38Z", "type": "commit"}, {"oid": "fbdf29752f56bd9184dbfc94ace62fd51272e7ac", "url": "https://github.com/ldtteam/minecolonies/commit/fbdf29752f56bd9184dbfc94ace62fd51272e7ac", "message": "Add type, source and multioutput to recipestorage", "committedDate": "2020-10-11T15:00:38Z", "type": "commit"}, {"oid": "2eba760908cab795b5c2df74a1763522fd2ec0cd", "url": "https://github.com/ldtteam/minecolonies/commit/2eba760908cab795b5c2df74a1763522fd2ec0cd", "message": "Mark recipe with source for custom recipes", "committedDate": "2020-10-11T15:00:38Z", "type": "commit"}, {"oid": "f44789a5581e7e09b1f3f2d68bd5b814990fa057", "url": "https://github.com/ldtteam/minecolonies/commit/f44789a5581e7e09b1f3f2d68bd5b814990fa057", "message": "Tweak building counting to handle hut block", "committedDate": "2020-10-11T15:00:39Z", "type": "commit"}, {"oid": "87592135f58ff47fbf06a44a647d7afb6663619c", "url": "https://github.com/ldtteam/minecolonies/commit/87592135f58ff47fbf06a44a647d7afb6663619c", "message": "enhance display of requests", "committedDate": "2020-10-11T15:00:39Z", "type": "commit"}, {"oid": "867ea2ec0ff02d498cffafce3178a8bc986a615a", "url": "https://github.com/ldtteam/minecolonies/commit/867ea2ec0ff02d498cffafce3178a8bc986a615a", "message": "core supportfor multi output and secondary output", "committedDate": "2020-10-11T15:04:08Z", "type": "commit"}, {"oid": "2e2081747a6852ee5667db9761dedf4affebeeb1", "url": "https://github.com/ldtteam/minecolonies/commit/2e2081747a6852ee5667db9761dedf4affebeeb1", "message": "full multi-output and secondary output support", "committedDate": "2020-10-11T15:05:45Z", "type": "commit"}, {"oid": "1ed3f2eaccbd7365b423b3f0f566bdf6a36bff9c", "url": "https://github.com/ldtteam/minecolonies/commit/1ed3f2eaccbd7365b423b3f0f566bdf6a36bff9c", "message": "Multi-output decorative block recipes", "committedDate": "2020-10-11T15:05:49Z", "type": "commit"}, {"oid": "6837e06dfce3b47fa6aed12bdb187bbace35aadd", "url": "https://github.com/ldtteam/minecolonies/commit/6837e06dfce3b47fa6aed12bdb187bbace35aadd", "message": "Don't create build tools out of thin air", "committedDate": "2020-10-11T15:05:50Z", "type": "commit"}, {"oid": "063b2f1d7ed475f768c821cea88e2684de401a8c", "url": "https://github.com/ldtteam/minecolonies/commit/063b2f1d7ed475f768c821cea88e2684de401a8c", "message": "clean up Furnace teaching a bit", "committedDate": "2020-10-11T19:14:01Z", "type": "commit"}, {"oid": "0f3083583d7f05967a499e1129dde2cfc507bb81", "url": "https://github.com/ldtteam/minecolonies/commit/0f3083583d7f05967a499e1129dde2cfc507bb81", "message": "Minor recipe fixes", "committedDate": "2020-10-11T19:28:21Z", "type": "commit"}, {"oid": "051b7f1ddb3934dbd25d3f0cb5f312bd450e89b7", "url": "https://github.com/ldtteam/minecolonies/commit/051b7f1ddb3934dbd25d3f0cb5f312bd450e89b7", "message": "Make sure beds are available in training facility", "committedDate": "2020-10-12T00:11:42Z", "type": "commit"}, {"oid": "ac9290c209903698ff96ac2870522ff2667ad572", "url": "https://github.com/ldtteam/minecolonies/commit/ac9290c209903698ff96ac2870522ff2667ad572", "message": "Make Training facility job names localizable", "committedDate": "2020-10-12T00:12:14Z", "type": "commit"}, {"oid": "bbf752a61110c87b9ae4ae85dd1a8e1625b92155", "url": "https://github.com/ldtteam/minecolonies/commit/bbf752a61110c87b9ae4ae85dd1a8e1625b92155", "message": "Minor cleanup around item pickup for crafters", "committedDate": "2020-10-12T00:12:42Z", "type": "commit"}, {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f", "url": "https://github.com/ldtteam/minecolonies/commit/963f76978e4724fcb8052b85d225f4a0a12ea26f", "message": "Fix bad recipe", "committedDate": "2020-10-12T04:45:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTQ5OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503101499", "bodyText": "java.util.List?", "author": "Raycoms", "createdAt": "2020-10-12T07:50:00Z", "path": "src/api/java/com/minecolonies/api/inventory/container/ContainerCrafting.java", "diffHunk": "@@ -46,6 +48,11 @@\n      */\n     private final Slot craftResultSlot;\n \n+    /**\n+     * The secondary outputs\n+     */\n+    private final java.util.List<ItemStack> remainingItems;", "originalCommit": "963f76978e4724fcb8052b85d225f4a0a12ea26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI4OTEyOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503289129", "bodyText": "Yes, just List resolves to something else here.", "author": "Mekle001", "createdAt": "2020-10-12T13:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTQ5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5MjMwNQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503292305", "bodyText": "Ok, I know what happened, and I have a fix.", "author": "Mekle001", "createdAt": "2020-10-12T13:22:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTQ5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTk3OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503101979", "bodyText": "this class might not load because it has the ClientRecipeBook in SMP. have you tested this in smp?", "author": "Raycoms", "createdAt": "2020-10-12T07:50:49Z", "path": "src/api/java/com/minecolonies/api/inventory/container/ContainerCrafting.java", "diffHunk": "@@ -365,4 +375,38 @@ public BlockPos getPos()\n     {\n         return pos;\n     }\n+\n+    /**\n+     * Get for the remaining items. \n+     * @return\n+     */\n+    public java.util.List<ItemStack> getRemainingItems()\n+    {\n+        final Optional<ICraftingRecipe> iRecipe = this.world.getRecipeManager().getRecipe(IRecipeType.CRAFTING, craftMatrix, world);\n+        RecipeBook r;\n+        if(world.isRemote)\n+        {\n+            r = new ClientRecipeBook(this.world.getRecipeManager());", "originalCommit": "963f76978e4724fcb8052b85d225f4a0a12ea26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMjkzMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503102931", "bodyText": "what do we need it for? Just do check if its unlocked? I don't think we should care about that", "author": "Raycoms", "createdAt": "2020-10-12T07:52:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTk3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5MjU0OA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503292548", "bodyText": "That's all it's used for. We probably don't need most of the checks there.", "author": "Mekle001", "createdAt": "2020-10-12T13:22:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTk3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5NjkyMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503296922", "bodyText": "yeah, remove it then. too error prone having this here.", "author": "Raycoms", "createdAt": "2020-10-12T13:29:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTk3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ1OTY2NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503459665", "bodyText": "Gone", "author": "Mekle001", "createdAt": "2020-10-12T18:14:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTk3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMzM1OA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503103358", "bodyText": "why not an empty list?", "author": "Raycoms", "createdAt": "2020-10-12T07:53:10Z", "path": "src/main/java/com/minecolonies/coremod/client/gui/containers/WindowFurnaceCrafting.java", "diffHunk": "@@ -100,7 +101,7 @@ public void onPress(final Button button)\n \n                 if (!ItemStackUtils.isEmpty(primaryOutput))\n                 {\n-                    Network.getNetwork().sendToServer(new AddRemoveRecipeMessage(building, input, 1, primaryOutput, false));\n+                    Network.getNetwork().sendToServer(new AddRemoveRecipeMessage(building, input, 1, primaryOutput, null, false));\n                 }", "originalCommit": "963f76978e4724fcb8052b85d225f4a0a12ea26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI4OTc0Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503289747", "bodyText": "We could, but it will become an empty list either way due to the recipestorage constructor.", "author": "Mekle001", "createdAt": "2020-10-12T13:18:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMzM1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2NTY4MQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503465681", "bodyText": "Went ahead and did an empty list.", "author": "Mekle001", "createdAt": "2020-10-12T18:28:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMzM1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNTQ0OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503105449", "bodyText": "Either we should \"break;\" at first found, or do something else, because we override firstfound with each iteration.", "author": "Raycoms", "createdAt": "2020-10-12T07:56:47Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -215,7 +215,12 @@ public IRecipeStorage getFirstRecipe(final Predicate<ItemStack> stackPredicate)\n                 final ItemStorage checkItem = foo.getKey().getCleanedInput().stream().max(Comparator.comparingInt(ItemStorage::getAmount)).get();\n                 candidates.put(foo.getKey(), getWarehouseCount(checkItem));\n             }\n-            return candidates.entrySet().stream().min(Map.Entry.comparingByValue(Comparator.reverseOrder())).get().getKey();\n+            firstFound = candidates.entrySet().stream().min(Map.Entry.comparingByValue(Comparator.reverseOrder())).get().getKey();", "originalCommit": "963f76978e4724fcb8052b85d225f4a0a12ea26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5NjIzMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503296232", "bodyText": "In the scan loop, we check against null before setting it, This highlighted one is in an \"If\", after populating counts, so we're only overriding it once in case we're adjusting for warehouse inventory.\nThis is followed by another if, where we check for a multi-output, and convert it to a simple if so.\nThat's a total of 3 sets maximum.", "author": "Mekle001", "createdAt": "2020-10-12T13:28:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNTQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5NzU2NA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503297564", "bodyText": "But then \"firstFound\" is not exactly the right name, right?", "author": "Raycoms", "createdAt": "2020-10-12T13:30:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNTQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5OTI2MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503299260", "bodyText": "Fair point", "author": "Mekle001", "createdAt": "2020-10-12T13:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNTQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczNDYyOA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504734628", "bodyText": "I should note that this has been renamed.", "author": "Mekle001", "createdAt": "2020-10-14T14:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNTQ0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNzc2NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503107765", "bodyText": "isMustExist seems weird", "author": "Raycoms", "createdAt": "2020-10-12T08:00:39Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -851,16 +857,34 @@ public void checkForWorkerSpecificRecipes()\n                         }\n                         if(allMatch)\n                         {\n-                            duplicateFound = true;\n+                            duplicateFound = token;\n                             break;\n                         }\n                     }\n                 }\n-                if(!duplicateFound)\n+                if(duplicateFound == null)\n                 {\n                     addRecipeToList(recipeToken);    \n                     colony.getRequestManager().onColonyUpdate(request -> request.getRequest() instanceof IDeliverable && ((IDeliverable) request.getRequest()).matches(recipeStorage.getPrimaryOutput()));\n                 }\n+                else if(newRecipe.isMustExist() && duplicateFound != recipeToken)", "originalCommit": "963f76978e4724fcb8052b85d225f4a0a12ea26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5MDExNA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503290114", "bodyText": "The name? or the functionality?", "author": "Mekle001", "createdAt": "2020-10-12T13:18:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNzc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5MDc5NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503290795", "bodyText": "the name", "author": "Raycoms", "createdAt": "2020-10-12T13:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNzc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5Nzc1Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503297752", "bodyText": "Got it. Happy to 'break the standard' here of 'is' for boolean and switch to 'get'", "author": "Mekle001", "createdAt": "2020-10-12T13:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNzc2NQ=="}], "type": "inlineReview"}, {"oid": "74db0235fc0df991a0817724ce9d9d864f64ba98", "url": "https://github.com/ldtteam/minecolonies/commit/74db0235fc0df991a0817724ce9d9d864f64ba98", "message": "PR feedback", "committedDate": "2020-10-12T13:31:43Z", "type": "commit"}, {"oid": "2261c4cda93641630d8074e14f83f2433257a79b", "url": "https://github.com/ldtteam/minecolonies/commit/2261c4cda93641630d8074e14f83f2433257a79b", "message": "rename firstFound", "committedDate": "2020-10-12T13:33:24Z", "type": "commit"}, {"oid": "2695f3bbbafb2165c6734f1c0ab1b67654450daf", "url": "https://github.com/ldtteam/minecolonies/commit/2695f3bbbafb2165c6734f1c0ab1b67654450daf", "message": "More PR feedback", "committedDate": "2020-10-12T13:39:24Z", "type": "commit"}, {"oid": "739701b7d3fa086d09591e92db63f470249f2832", "url": "https://github.com/ldtteam/minecolonies/commit/739701b7d3fa086d09591e92db63f470249f2832", "message": "Merge branch 'version/1.15' into feature/multirecipe", "committedDate": "2020-10-12T16:44:06Z", "type": "commit"}, {"oid": "f0941b20d25f3eeea6af177e4977b16daf87e46a", "url": "https://github.com/ldtteam/minecolonies/commit/f0941b20d25f3eeea6af177e4977b16daf87e46a", "message": "Merge branch 'version/1.15' into feature/multirecipe", "committedDate": "2020-10-12T20:23:17Z", "type": "commit"}, {"oid": "54247e2eac45da2a9698d0b4067ef97d61eb216d", "url": "https://github.com/ldtteam/minecolonies/commit/54247e2eac45da2a9698d0b4067ef97d61eb216d", "message": "Merge branch 'version/1.15' into feature/multirecipe", "committedDate": "2020-10-13T01:53:44Z", "type": "commit"}, {"oid": "9c617f688c339422c65011b485e121cdc0d8a59b", "url": "https://github.com/ldtteam/minecolonies/commit/9c617f688c339422c65011b485e121cdc0d8a59b", "message": "Let recipe changes get picked up.", "committedDate": "2020-10-13T23:41:49Z", "type": "commit"}, {"oid": "44700e4d7bdb091d651999e8cf1ec8ac5aceb886", "url": "https://github.com/ldtteam/minecolonies/commit/44700e4d7bdb091d651999e8cf1ec8ac5aceb886", "message": "rework the Lumberjack recipes to multi-output", "committedDate": "2020-10-13T23:43:16Z", "type": "commit"}, {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "url": "https://github.com/ldtteam/minecolonies/commit/cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "message": "Make logic consistent for counting required", "committedDate": "2020-10-14T04:11:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTIxMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504435213", "bodyText": "Why this change? Documentation is missing here. The original code makes more sense....", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:38:20Z", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingProductionResolver.java", "diffHunk": "@@ -148,13 +148,13 @@ protected boolean canBuildingCraftStack(@NotNull final IRequestManager manager,\n                 {\n                     materialRequests.add(createNewRequestForStack(manager, craftingHelperStack, ingredient.getAmount(), ingredient.getAmount()));\n                 }\n-                else if (!ItemStackUtils.isEmpty(container) && ItemStackUtils.compareItemStacksIgnoreStackSize(container, craftingHelperStack, false, true))\n+                else if (ItemStackUtils.isEmpty(container) || ItemStackUtils.compareItemStacksIgnoreStackSize(container, craftingHelperStack, false, true))", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5OTk2Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504699966", "bodyText": "reverted", "author": "Mekle001", "createdAt": "2020-10-14T13:57:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTIxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTQ4OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504435489", "bodyText": "Again this change. These kind of suttle changes need to be documented if it is not a hotfix.\nWhy? This logic does not seem to make sense to me.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:38:57Z", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "diffHunk": "@@ -173,13 +175,13 @@ protected IAIState getRecipe()\n             {\n                 remaining = inputStorage.getAmount();\n             }\n-            else if (!ItemStackUtils.isEmpty(container) && ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))\n+            else if (ItemStackUtils.isEmpty(container) || !ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMDA3MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504700070", "bodyText": "reverted", "author": "Mekle001", "createdAt": "2020-10-14T13:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTg2Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504435867", "bodyText": "and again! Here it is even worse, Since here the second part of the OR-Clause has a negation but in the previous cases where you patches this it did not. Why was this changed?", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:39:45Z", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "diffHunk": "@@ -251,13 +253,13 @@ protected IAIState checkForItems(@NotNull final IRecipeStorage storage)\n             {\n                 remaining = inputStorage.getAmount();\n             }\n-            else if(!ItemStackUtils.isEmpty(container) && ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))\n+            else if(ItemStackUtils.isEmpty(container) || !ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMDEzNg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504700136", "bodyText": "reverted", "author": "Mekle001", "createdAt": "2020-10-14T13:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTg2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjE1MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504436150", "bodyText": "Not expandable!\nThis is part of the API. ENUMS are basically a nogo here.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:40:25Z", "path": "src/api/java/com/minecolonies/api/crafting/IRecipeStorage.java", "diffHunk": "@@ -8,12 +8,22 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import java.util.function.Predicate;\n \n /**\n  * Interface which describes the RecipeStorage.\n  */\n public interface IRecipeStorage\n {\n+    /**\n+     * Enum of the different types of storage\n+     */\n+    public enum RecipeStorageType", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MzEyOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r506793129", "bodyText": "Switched to Registry", "author": "Mekle001", "createdAt": "2020-10-17T04:36:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjE1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjUzNg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504436536", "bodyText": "Documentation is not updated. What is source?", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:41:23Z", "path": "src/api/java/com/minecolonies/api/crafting/IRecipeStorageFactory.java", "diffHunk": "@@ -70,6 +83,11 @@ RecipeStorage getNewInstance(\n       @NotNull final List<ItemStack> input,\n       final int gridSize,\n       @NotNull final ItemStack primaryOutput,\n-      @Nullable final Block intermediate);\n+      @Nullable final Block intermediate,\n+      @Nullable final String source,", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxMDQ2OA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504710468", "bodyText": "documentation updated", "author": "Mekle001", "createdAt": "2020-10-14T14:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjUzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjkwMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504436901", "bodyText": "If this is supposed to be a registry name, or reference one, Make it return a ResourceLocation instead,\nIf the return value is optional, mark it with @Nullable or return an optional and make the use of it like a functional invocation.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:42:13Z", "path": "src/api/java/com/minecolonies/api/crafting/IRecipeStorage.java", "diffHunk": "@@ -72,6 +82,45 @@ default boolean fullFillRecipe(@NotNull final IItemHandler... inventories)\n      */\n     boolean fullfillRecipe(final List<IItemHandler> handlers);\n \n+    /**\n+     * Get which type this recipe is\n+     * CLASSIC or MULTI-OUTPUT are the only valid ones currently\n+     * @return The recipe type\n+     */\n+    public RecipeStorageType getRecipeType();\n+\n+    /**\n+     * Get a list of alternates to getPrimaryOutput\n+     * @return a list if Itemstacks that this recipe can produce instead of getPrimaryOutput\n+     */\n+    public List<ItemStack> getAlternateOutputs();\n+\n+    /**\n+     * Get the classic version of this recipe with GetPrimaryOutput targetted correctly from the chosen alternate\n+     * @param requiredOutput Which output wanted\n+     * @return the RecipeStorage that is \"right\" for that output\n+     */\n+    public RecipeStorage getClassicForMultiOutput(ItemStack requiredOutput);\n+\n+    /**\n+     * Get the classic version of this recipe with GetPrimaryOutput targetted correctly from the chosen alternate\n+     * @param stackPredicate Predicate to select the right stack\n+     * @return the RecipeStorage that is \"right\" for that output\n+     */\n+    public RecipeStorage getClassicForMultiOutput(final Predicate<ItemStack> stackPredicate);\n+\n+    /**\n+     * Source of the recipe, ie registry name.\n+     * @return\n+     */\n+    public String getRecipeSource();", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4NjA1Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504686057", "bodyText": "I thought about that, I'd intended to support a variety of sources, including possibly player name. None of that is done yet though.", "author": "Mekle001", "createdAt": "2020-10-14T13:41:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczODU4Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504738587", "bodyText": "Then document it as such.", "author": "OrionDevelopment", "createdAt": "2020-10-14T14:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2Mzg2Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504863862", "bodyText": "I'll go ahead and convert to ResourceLocation, since there are difficulties in overloading it the way I planned with the way I ended up using it.", "author": "Mekle001", "createdAt": "2020-10-14T17:51:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjkwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNzA3Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504437076", "bodyText": "See comments on the interface for this.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:42:36Z", "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -2,24 +2,40 @@\n \n import com.google.common.collect.ImmutableList;\n import com.ldtteam.structurize.items.ModItems;\n+import com.minecolonies.api.colony.requestsystem.StandardFactoryController;\n import com.minecolonies.api.colony.requestsystem.token.IToken;\n import com.minecolonies.api.util.CraftingUtils;\n import com.minecolonies.api.util.InventoryUtils;\n import com.minecolonies.api.util.ItemStackUtils;\n+import com.minecolonies.api.util.constant.TypeConstants;\n import net.minecraft.block.Block;\n import net.minecraft.item.ItemStack;\n import net.minecraftforge.items.IItemHandler;\n import org.jetbrains.annotations.NotNull;\n-\n+import org.jetbrains.annotations.Nullable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n \n /**\n  * Class used to represent a recipe in minecolonies.\n  */\n public class RecipeStorage implements IRecipeStorage\n {\n+", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNzgxMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504437812", "bodyText": "I am not sure, but this does not look like it was autogenerated by IDEA!", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:44:20Z", "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -216,6 +312,22 @@ public int hashCode()\n         result = 31 * result + primaryOutput.hashCode();\n         result = 31 * result + (intermediate != null ? intermediate.hashCode() : 0);\n         result = 31 * result + gridSize;\n+        if(recipeSource != null && !recipeSource.isEmpty())", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwMzE5Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504703197", "bodyText": "I don't use IDEA, so I was trying to keep in line.", "author": "Mekle001", "createdAt": "2020-10-14T14:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNzgxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODMzOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504438339", "bodyText": "This does not work........\nThe API clearly states that the container Item is returned when the stack is consumed! You are not allowed to modify this stack willy nilly since that violates that contract. There might be mods out there which consume an entire stack and only return 1 container item!", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:45:32Z", "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -228,13 +340,20 @@ public int hashCode()\n     private boolean checkForFreeSpace(final List<IItemHandler> handlers)\n     {\n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n+        {\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n         {\n-            final ItemStack container = stack.getItem().getContainerItem(stack);\n-            if (!ItemStackUtils.isEmpty(container))\n+            for (final ItemStack stack : input)\n             {\n-                container.setCount(stack.getCount());\n-                secondaryStacks.add(container);\n+                final ItemStack container = stack.getItem().getContainerItem(stack);\n+                if (!ItemStackUtils.isEmpty(container))\n+                {\n+                    container.setCount(stack.getCount());", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MzE5MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504693190", "bodyText": "Either way this does not work, since we operate off of cleaned inputs. In the case of cake, the stack is 2 milk buckets, and getContainerItem returns one bucket, but vanilla crafting returns 2. The good news is that this code is legacy/compat. With the secondary items list, we return what the recipe says gets returned.", "author": "Mekle001", "createdAt": "2020-10-14T13:49:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODMzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczOTIxMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504739212", "bodyText": "If this is legacy code. Why was it added in your PR?", "author": "OrionDevelopment", "createdAt": "2020-10-14T14:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODMzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NDYxNQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504864615", "bodyText": "The container case becomes legacy code with this PR, there was a bug reported around producing too few buckets while I was working on it, so I included it to avoid more merge conflicts.", "author": "Mekle001", "createdAt": "2020-10-14T17:52:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODMzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODUxOA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504438518", "bodyText": "Again see above this is not a legal use of the API as far as I am concerned.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:46:00Z", "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -329,29 +448,36 @@ public boolean fullfillRecipe(final List<IItemHandler> handlers)\n      *\n      * @param handlers the handlers.\n      */\n-    private void insertCraftedItems(final List<IItemHandler> handlers)\n+    private void insertCraftedItems(final List<IItemHandler> handlers, ItemStack outputStack)\n     {\n         for (final IItemHandler handler : handlers)\n         {\n-            if (InventoryUtils.addItemStackToItemHandler(handler, getPrimaryOutput().copy()))\n+            if (InventoryUtils.addItemStackToItemHandler(handler, outputStack.copy()))\n             {\n                 break;\n             }\n         }\n \n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n         {\n-            if (stack.getItem() == ModItems.buildTool)\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n+        {\n+            for (final ItemStack stack : input)\n             {\n-                continue;\n-            }\n+                if (stack.getItem() == ModItems.buildTool)\n+                {\n+                    continue;\n+                }\n \n-            final ItemStack container = stack.getItem().getContainerItem(stack);\n-            if (!ItemStackUtils.isEmpty(container))\n-            {\n-                container.setCount(stack.getCount());\n-                secondaryStacks.add(container);\n+                final ItemStack container = stack.getItem().getContainerItem(stack);\n+                if (!ItemStackUtils.isEmpty(container))\n+                {\n+                    container.setCount(stack.getCount());", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODk3MQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504438971", "bodyText": "You are in the API, no special casing of Minecolonies specific stuff.\nCreate a new Interface if you want to and smag that on the buildtool then do an instance of.\nOr create a behaviour registry.\nRegardless either refactor this class so that it is not part of the API or refactor it so that it does not do any special casing.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:47:08Z", "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -329,29 +448,36 @@ public boolean fullfillRecipe(final List<IItemHandler> handlers)\n      *\n      * @param handlers the handlers.\n      */\n-    private void insertCraftedItems(final List<IItemHandler> handlers)\n+    private void insertCraftedItems(final List<IItemHandler> handlers, ItemStack outputStack)\n     {\n         for (final IItemHandler handler : handlers)\n         {\n-            if (InventoryUtils.addItemStackToItemHandler(handler, getPrimaryOutput().copy()))\n+            if (InventoryUtils.addItemStackToItemHandler(handler, outputStack.copy()))\n             {\n                 break;\n             }\n         }\n \n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n         {\n-            if (stack.getItem() == ModItems.buildTool)\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n+        {\n+            for (final ItemStack stack : input)\n             {\n-                continue;\n-            }\n+                if (stack.getItem() == ModItems.buildTool)", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2Njc4Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504866782", "bodyText": "Ok, the buildTool exception is pre-existing. We make this exception in 3 places in this file.  Changing this item is a Structurize change.", "author": "Mekle001", "createdAt": "2020-10-14T17:55:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzOTMwNA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504439304", "bodyText": "You are in the concrete implementation, you do not need to use the factory controller......\nYou can invoke yourself just fine,", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:47:53Z", "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -365,4 +491,65 @@ private void insertCraftedItems(final List<IItemHandler> handlers)\n             }\n         }\n     }\n+\n+    @Override\n+    public RecipeStorage getClassicForMultiOutput(final ItemStack requiredOutput)\n+    {\n+        return StandardFactoryController.getInstance().getNewInstance(", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NzEyMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504867123", "bodyText": "Yeah, cleaning this up", "author": "Mekle001", "createdAt": "2020-10-14T17:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzOTMwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzOTY0Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504439642", "bodyText": "Import of Client side only stuff.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:48:42Z", "path": "src/api/java/com/minecolonies/api/inventory/container/ContainerCrafting.java", "diffHunk": "@@ -2,6 +2,7 @@\n \n import com.ldtteam.structurize.api.util.ItemStackUtils;\n import com.minecolonies.api.inventory.ModContainers;\n+import net.minecraft.client.util.ClientRecipeBook;", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5NTIyNA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504695224", "bodyText": "Missed cleanup from earlier versions.", "author": "Mekle001", "createdAt": "2020-10-14T13:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzOTY0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDA3MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504440070", "bodyText": "This comes with the teritory of writing Enums in the API.\nRefactor this so that the recipe type can handle it itself.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:49:42Z", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowListRecipes.java", "diffHunk": "@@ -111,7 +119,23 @@ public void updateElement(final int index, @NotNull final Pane rowPane)\n             {\n                 @NotNull final IRecipeStorage recipe = recipes.get(index);\n                 final ItemIcon icon = rowPane.findPaneOfTypeByID(OUTPUT_ICON, ItemIcon.class);\n-                icon.setItem(recipe.getPrimaryOutput());\n+                if(recipe.getRecipeType() == RecipeStorageType.MULTI_OUTPUT)", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MzE0NA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r506793144", "bodyText": "See switch to registry", "author": "Mekle001", "createdAt": "2020-10-17T04:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDA3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDczMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504440733", "bodyText": "Is this not supposed to be default behaviour?\nWhy was this added here?", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:51:04Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingArchery.java", "diffHunk": "@@ -284,6 +284,30 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.archery;\n     }\n \n+    @Override\n+    public void onWakeUp()\n+    {\n+        super.onWakeUp();\n+        \n+        final World world = getColony().getWorld();\n+        if (world == null)\n+        {\n+            return;\n+        }\n+\n+        for (final BlockPos pos : bedList)\n+        {\n+            BlockState state = world.getBlockState(pos);\n+            state = state.getBlock().getExtendedState(state, world, pos);\n+            if (state.getBlock() instanceof BedBlock\n+                  && state.get(BedBlock.OCCUPIED)\n+                  && state.get(BedBlock.PART).equals(BedPart.HEAD))\n+            {\n+                world.setBlockState(pos, state.with(BedBlock.OCCUPIED, false), 0x03);\n+            }\n+        }\n+    }    ", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5Njg3Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504696872", "bodyText": "All of our buildings where citizens sleep have this code. I missed porting it when I enabled sleeping in the Archery and the Combat Academy, which meant that the citizens would sleep one night, and go about there business the next day with the beds still marked occupied. The next night, they couldn't find a bed, so would stand around the hut sleeping.", "author": "Mekle001", "createdAt": "2020-10-14T13:54:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5ODY1Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504698652", "bodyText": "This will be solved in the future when we modularize this", "author": "Raycoms", "createdAt": "2020-10-14T13:56:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc0MDMyMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504740322", "bodyText": "Okey....\nThen create an interface with a default set of methods that handle this? ANd smag that on all buildings?+\nI see no reason this can not be cleaned up.", "author": "OrionDevelopment", "createdAt": "2020-10-14T14:48:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc0MzA2Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504743067", "bodyText": "I got a PR going atm that will clean that up. Might need another week to be mature though", "author": "Raycoms", "createdAt": "2020-10-14T14:52:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDczMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTAyOA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504441028", "bodyText": "Again this is supposed to be default behaviour for the entity.\nWhy was this not handled there.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:51:38Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCombatAcademy.java", "diffHunk": "@@ -378,6 +378,30 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.combatAcademy;\n     }\n \n+    @Override\n+    public void onWakeUp()\n+    {\n+        super.onWakeUp();\n+        \n+        final World world = getColony().getWorld();\n+        if (world == null)\n+        {\n+            return;\n+        }\n+\n+        for (final BlockPos pos : bedList)\n+        {\n+            BlockState state = world.getBlockState(pos);\n+            state = state.getBlock().getExtendedState(state, world, pos);\n+            if (state.getBlock() instanceof BedBlock\n+                  && state.get(BedBlock.OCCUPIED)\n+                  && state.get(BedBlock.PART).equals(BedPart.HEAD))\n+            {\n+                world.setBlockState(pos, state.with(BedBlock.OCCUPIED, false), 0x03);\n+            }\n+        }\n+    }    ", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5NzA2OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504697069", "bodyText": "The entities do not handle this for any of our buildings.", "author": "Mekle001", "createdAt": "2020-10-14T13:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTMyNw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504441327", "bodyText": "e instanceof JsonElement is always true.", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:52:15Z", "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -234,6 +268,27 @@ public static CustomRecipe parse(@NotNull final JsonObject recipeJson)\n             recipe.result = idToItemStack(recipeJson.get(RECIPE_RESULT_PROP).getAsString());\n         }\n \n+        if (recipeJson.has(RECIPE_ALTERNATE_PROP))\n+        {\n+            for (JsonElement e : recipeJson.get(RECIPE_ALTERNATE_PROP).getAsJsonArray())\n+            {\n+                if (e instanceof JsonElement && e.isJsonObject())", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4OTQ3Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r506789476", "bodyText": "Yeah. got it.", "author": "Mekle001", "createdAt": "2020-10-17T03:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTMyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTkwMA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504441900", "bodyText": "This makes no sense.\nWhat are you trying to achieve here?", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:53:36Z", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/requests/StandardRequests.java", "diffHunk": "@@ -343,11 +343,9 @@ protected AbstractCraftingRequest(\n         public final ITextComponent getShortDisplayString()\n         {\n             final ITextComponent result = new NonSiblingFormattingTextComponent();\n-            final ITextComponent preType = new TranslationTextComponent(getTranslationKey());\n \n-            result.appendSibling(preType);\n-\n-            preType.appendSibling(getRequest().getStack().getTextComponent());\n+            result.appendSibling(new StringTextComponent(getRequest().getMinCount() + \" * Recipe:\"));\n+            result.appendSibling(getRequest().getStack().getTextComponent());", "originalCommit": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MjAwOA==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504442008", "bodyText": "Also not localizable!", "author": "OrionDevelopment", "createdAt": "2020-10-14T06:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MDY4MQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r506790681", "bodyText": "Updated to be localizable, this now produces a string like \"8 * Recipe: [Plain Oak Timber Frame]\" for the crafting job entry in the request tree.", "author": "Mekle001", "createdAt": "2020-10-17T04:04:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTkwMA=="}], "type": "inlineReview"}, {"oid": "25d11247215082eaa0f55c1a34ed143766317081", "url": "https://github.com/ldtteam/minecolonies/commit/25d11247215082eaa0f55c1a34ed143766317081", "message": "Some PR feedback", "committedDate": "2020-10-14T13:56:06Z", "type": "commit"}, {"oid": "8553a8d3f8f19955053f1fc4b849bdfa623840ef", "url": "https://github.com/ldtteam/minecolonies/commit/8553a8d3f8f19955053f1fc4b849bdfa623840ef", "message": "Convert to ResourceLocation", "committedDate": "2020-10-16T14:40:25Z", "type": "commit"}, {"oid": "3e90e70e0655aa7ad3667dcf977386f451dd2b82", "url": "https://github.com/ldtteam/minecolonies/commit/3e90e70e0655aa7ad3667dcf977386f451dd2b82", "message": "Convert to using a registry instead of an enum", "committedDate": "2020-10-17T03:24:00Z", "type": "commit"}, {"oid": "6eb740b5e1b1ec734a2c07b7195418dd36765d77", "url": "https://github.com/ldtteam/minecolonies/commit/6eb740b5e1b1ec734a2c07b7195418dd36765d77", "message": "Finish up review feedback", "committedDate": "2020-10-17T04:35:44Z", "type": "commit"}, {"oid": "8a51e3b6a57f5884da7d37f2b532380785411b39", "url": "https://github.com/ldtteam/minecolonies/commit/8a51e3b6a57f5884da7d37f2b532380785411b39", "message": "Merge branch 'version/1.15' into feature/multirecipe", "committedDate": "2020-10-17T05:03:21Z", "type": "commit"}, {"oid": "aae21bbffb816b5a359006708417e970612f3c6d", "url": "https://github.com/ldtteam/minecolonies/commit/aae21bbffb816b5a359006708417e970612f3c6d", "message": "minor fixes to RecipeStorage.equals", "committedDate": "2020-10-17T17:44:38Z", "type": "commit"}, {"oid": "b89d4f386759f0ba31d4bbe9a4ea4bb87ad1aceb", "url": "https://github.com/ldtteam/minecolonies/commit/b89d4f386759f0ba31d4bbe9a4ea4bb87ad1aceb", "message": "remove extra check", "committedDate": "2020-10-18T04:14:57Z", "type": "commit"}, {"oid": "596003a00b71c3ab6622a0c58e3dae49add1f2d8", "url": "https://github.com/ldtteam/minecolonies/commit/596003a00b71c3ab6622a0c58e3dae49add1f2d8", "message": "Merge branch 'version/1.15' into feature/multirecipe", "committedDate": "2020-10-18T04:26:42Z", "type": "commit"}, {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06", "url": "https://github.com/ldtteam/minecolonies/commit/db9eda9ebfc06d082db43e945c68ab8af8924f06", "message": "Merge branch 'version/1.15' into feature/multirecipe", "committedDate": "2020-10-18T14:17:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1NTc4Mw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507655783", "bodyText": "Missing override indicators in this class.", "author": "OrionDevelopment", "createdAt": "2020-10-19T10:57:30Z", "path": "src/api/java/com/minecolonies/api/crafting/AbstractRecipeType.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.minecolonies.api.crafting;\n+\n+import java.util.List;\n+import com.google.common.collect.ImmutableList;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+\n+public abstract class AbstractRecipeType<R extends IRecipeStorage>", "originalCommit": "db9eda9ebfc06d082db43e945c68ab8af8924f06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4NTU5Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507685592", "bodyText": "and class jdoc", "author": "someaddons", "createdAt": "2020-10-19T11:53:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1NTc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY5MzIwMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507693201", "bodyText": "Also that yes.", "author": "OrionDevelopment", "createdAt": "2020-10-19T12:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1NTc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5MDY3OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507790679", "bodyText": "Happy to add the jdoc, but there are no override indicators in this class because it doesn't extend or implement anything.", "author": "Mekle001", "createdAt": "2020-10-19T14:23:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1NTc4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4ODU5MQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507688591", "bodyText": "class desc", "author": "someaddons", "createdAt": "2020-10-19T11:59:14Z", "path": "src/api/java/com/minecolonies/api/crafting/MultiOutputRecipe.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.minecolonies.api.crafting;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+\n+public class MultiOutputRecipe extends AbstractRecipeType<IRecipeStorage>", "originalCommit": "db9eda9ebfc06d082db43e945c68ab8af8924f06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwMjkxNQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507802915", "bodyText": "Done", "author": "Mekle001", "createdAt": "2020-10-19T14:34:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4ODU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMTUwNQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507701505", "bodyText": "if you're doing modifications in a simple checkForSpace() function you at least have to properly document/comment why that is there/whatfor it is. Or maybe even better rename the function", "author": "someaddons", "createdAt": "2020-10-19T12:21:52Z", "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -228,13 +353,20 @@ public int hashCode()\n     private boolean checkForFreeSpace(final List<IItemHandler> handlers)\n     {\n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n+        {\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n         {\n-            final ItemStack container = stack.getItem().getContainerItem(stack);\n-            if (!ItemStackUtils.isEmpty(container))\n+            for (final ItemStack stack : input)\n             {\n-                container.setCount(stack.getCount());\n-                secondaryStacks.add(container);\n+                final ItemStack container = stack.getItem().getContainerItem(stack);\n+                if (!ItemStackUtils.isEmpty(container))\n+                {\n+                    container.setCount(stack.getCount());", "originalCommit": "db9eda9ebfc06d082db43e945c68ab8af8924f06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwMjA1Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507802052", "bodyText": "Adding a few comments, renaming a variable, but not the function. It should be more clear now.", "author": "Mekle001", "createdAt": "2020-10-19T14:33:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMTUwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxMDYxMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507710613", "bodyText": "while you're at it, can you change the above warehouse search to use the building managers saved warehouse list?", "author": "someaddons", "createdAt": "2020-10-19T12:36:28Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -238,7 +244,7 @@ protected int getWarehouseCount(ItemStorage item)\n ", "originalCommit": "db9eda9ebfc06d082db43e945c68ab8af8924f06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwMjE3Mw==", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507802173", "bodyText": "done", "author": "Mekle001", "createdAt": "2020-10-19T14:33:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxMDYxMw=="}], "type": "inlineReview"}, {"oid": "d5ab80963312c3f8366db4d93c2228b66275c24b", "url": "https://github.com/ldtteam/minecolonies/commit/d5ab80963312c3f8366db4d93c2228b66275c24b", "message": "Merge branch 'version/1.15' into feature/multirecipe", "committedDate": "2020-10-19T14:15:42Z", "type": "commit"}, {"oid": "43ccdbdfc742f70213b7d61268a654f83dfa998d", "url": "https://github.com/ldtteam/minecolonies/commit/43ccdbdfc742f70213b7d61268a654f83dfa998d", "message": "Track recipe usage by token in the recipe  manager", "committedDate": "2020-10-19T14:19:23Z", "type": "commit"}, {"oid": "4d32989580106e32c00642bea3df99370af35c99", "url": "https://github.com/ldtteam/minecolonies/commit/4d32989580106e32c00642bea3df99370af35c99", "message": "remove contains checks", "committedDate": "2020-10-19T14:19:28Z", "type": "commit"}, {"oid": "6ececa6fc01ce9e1aa1471ff8537e15c7c99f52b", "url": "https://github.com/ldtteam/minecolonies/commit/6ececa6fc01ce9e1aa1471ff8537e15c7c99f52b", "message": "PR Feedback", "committedDate": "2020-10-19T14:33:31Z", "type": "commit"}, {"oid": "0438c64d468b5f36c85244ee4ae923d5cbc2917b", "url": "https://github.com/ldtteam/minecolonies/commit/0438c64d468b5f36c85244ee4ae923d5cbc2917b", "message": "Simplify the transfer", "committedDate": "2020-10-19T21:52:52Z", "type": "commit"}]}