{"pr_number": 3701, "pr_title": "[3.2.1] bug-fix: Trip-animation", "pr_createdAt": "2020-11-11T11:33:18Z", "pr_url": "https://github.com/thingsboard/thingsboard/pull/3701", "timeline": [{"oid": "643563ec6a8cdce5df02b1e4adfc8d7a8d9c00ae", "url": "https://github.com/thingsboard/thingsboard/commit/643563ec6a8cdce5df02b1e4adfc8d7a8d9c00ae", "message": "bug-fix: trip animation for multiple devices", "committedDate": "2020-11-11T11:24:10Z", "type": "commit"}, {"oid": "33b1cee2d018a277d7179e3d6fcd4600f0dd99dc", "url": "https://github.com/thingsboard/thingsboard/commit/33b1cee2d018a277d7179e3d6fcd4600f0dd99dc", "message": "bug-fix: trip animation for multiple devices", "committedDate": "2020-11-11T11:27:18Z", "type": "commit"}, {"oid": "2e624994da5da91f42b127f02bb6777432cba433", "url": "https://github.com/thingsboard/thingsboard/commit/2e624994da5da91f42b127f02bb6777432cba433", "message": "additional fix to component html", "committedDate": "2020-11-11T12:38:24Z", "type": "commit"}, {"oid": "749fbd68a5694510c37848f5994d3afbdf678dbd", "url": "https://github.com/thingsboard/thingsboard/commit/749fbd68a5694510c37848f5994d3afbdf678dbd", "message": "Merge branch 'master' of https://github.com/thingsboard/thingsboard", "committedDate": "2020-12-10T15:52:44Z", "type": "commit"}, {"oid": "0d9f36ead79ccaad8fa20528c130004bdb4574a7", "url": "https://github.com/thingsboard/thingsboard/commit/0d9f36ead79ccaad8fa20528c130004bdb4574a7", "message": "Addition to ServicesMap", "committedDate": "2020-12-10T16:08:12Z", "type": "commit"}, {"oid": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "url": "https://github.com/thingsboard/thingsboard/commit/235946691bfcb96fa0c10b689d6fc69b0c61bce5", "message": "Revert \"Addition to ServicesMap\"\n\nThis reverts commit 0d9f36ead79ccaad8fa20528c130004bdb4574a7.", "committedDate": "2020-12-10T16:20:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM2MTc0NQ==", "url": "https://github.com/thingsboard/thingsboard/pull/3701#discussion_r540361745", "bodyText": "Cleared before calculation will create blink label text", "author": "vvlladd28", "createdAt": "2020-12-10T17:33:05Z", "path": "ui-ngx/src/app/modules/home/components/widget/trip-animation/trip-animation.component.ts", "diffHunk": "@@ -194,23 +221,34 @@ export class TripAnimationComponent implements OnInit, AfterViewInit, OnDestroy\n     }\n   }\n \n-  calcTooltip = (point?: FormattedData): string => {\n-    const data = point ? point : this.activeTrip;\n-    const tooltipPattern: string = this.settings.useTooltipFunction ?\n-      safeExecute(this.settings.tooltipFunction, [data, this.historicalData, point.dsIndex]) : this.settings.tooltipPattern;\n-    const tooltipText = parseWithTranslation.parseTemplate(tooltipPattern, data, true);\n-    this.mainTooltip = this.sanitizer.sanitize(\n-      SecurityContext.HTML, tooltipText);\n-    this.cd.detectChanges();\n-    this.activeTrip = point;\n+  calcTooltip = (points?: FormattedData[], isMainTooltip: boolean = false): string => {\n+    let tooltipText;\n+    if(isMainTooltip) {\n+      this.mainTooltips = []\n+    }\n+    for (let point of points) {\n+      const data = point ? point : this.activeTrip;\n+      const tooltipPattern: string = this.settings.useTooltipFunction ?\n+        safeExecute(this.settings.tooltipFunction, [data, this.historicalData, point.dsIndex]) : this.settings.tooltipPattern;\n+      tooltipText = parseWithTranslation.parseTemplate(tooltipPattern, data, true);\n+      if(isMainTooltip) {\n+        this.mainTooltips.push(this.sanitizer.sanitize(SecurityContext.HTML, tooltipText));\n+      }\n+      this.cd.detectChanges();\n+      this.activeTrip = point;\n+    }\n     return tooltipText;\n   }\n \n-  calcLabel() {\n-    const data = this.activeTrip;\n-    const labelText: string = this.settings.useLabelFunction ?\n-      safeExecute(this.settings.labelFunction, [data, this.historicalData, data.dsIndex]) : this.settings.label;\n-    this.label = (parseWithTranslation.parseTemplate(labelText, data, true));\n+  calcLabel(formattedDataArr: FormattedData[]) {\n+    this.label = '';", "originalCommit": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM2MTg5OQ==", "url": "https://github.com/thingsboard/thingsboard/pull/3701#discussion_r540361899", "bodyText": "Duplicate value", "author": "vvlladd28", "createdAt": "2020-12-10T17:33:17Z", "path": "ui-ngx/src/app/modules/home/components/widget/trip-animation/trip-animation.component.ts", "diffHunk": "@@ -194,23 +221,34 @@ export class TripAnimationComponent implements OnInit, AfterViewInit, OnDestroy\n     }\n   }\n \n-  calcTooltip = (point?: FormattedData): string => {\n-    const data = point ? point : this.activeTrip;\n-    const tooltipPattern: string = this.settings.useTooltipFunction ?\n-      safeExecute(this.settings.tooltipFunction, [data, this.historicalData, point.dsIndex]) : this.settings.tooltipPattern;\n-    const tooltipText = parseWithTranslation.parseTemplate(tooltipPattern, data, true);\n-    this.mainTooltip = this.sanitizer.sanitize(\n-      SecurityContext.HTML, tooltipText);\n-    this.cd.detectChanges();\n-    this.activeTrip = point;\n+  calcTooltip = (points?: FormattedData[], isMainTooltip: boolean = false): string => {\n+    let tooltipText;\n+    if(isMainTooltip) {\n+      this.mainTooltips = []\n+    }\n+    for (let point of points) {\n+      const data = point ? point : this.activeTrip;\n+      const tooltipPattern: string = this.settings.useTooltipFunction ?\n+        safeExecute(this.settings.tooltipFunction, [data, this.historicalData, point.dsIndex]) : this.settings.tooltipPattern;\n+      tooltipText = parseWithTranslation.parseTemplate(tooltipPattern, data, true);\n+      if(isMainTooltip) {\n+        this.mainTooltips.push(this.sanitizer.sanitize(SecurityContext.HTML, tooltipText));\n+      }\n+      this.cd.detectChanges();\n+      this.activeTrip = point;\n+    }\n     return tooltipText;\n   }\n \n-  calcLabel() {\n-    const data = this.activeTrip;\n-    const labelText: string = this.settings.useLabelFunction ?\n-      safeExecute(this.settings.labelFunction, [data, this.historicalData, data.dsIndex]) : this.settings.label;\n-    this.label = (parseWithTranslation.parseTemplate(labelText, data, true));\n+  calcLabel(formattedDataArr: FormattedData[]) {\n+    this.label = '';\n+    for (let formattedData of formattedDataArr) {\n+      const data = formattedData;", "originalCommit": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjQzNw==", "url": "https://github.com/thingsboard/thingsboard/pull/3701#discussion_r540876437", "bodyText": "Didn't dynamic style", "author": "vvlladd28", "createdAt": "2020-12-11T11:19:38Z", "path": "ui-ngx/src/app/modules/home/components/widget/trip-animation/trip-animation.component.html", "diffHunk": "@@ -28,8 +28,12 @@\n             </button>\n         </div>\n         <div class=\"trip-animation-tooltip md-whiteframe-z4\" fxLayout=\"column\"\n-            [ngClass]=\"{'trip-animation-tooltip-hidden':!visibleTooltip}\" [innerHTML]=\"mainTooltip\"\n-            [ngStyle]=\"{'background-color': settings.tooltipColor, 'opacity': settings.tooltipOpacity, 'color': settings.tooltipFontColor}\">\n+             [ngClass]=\"{'trip-animation-tooltip-hidden':!visibleTooltip}\"\n+             [ngStyle]=\"{'background-color': settings.tooltipColor, 'opacity': settings.tooltipOpacity, 'color': settings.tooltipFontColor}\">\n+          <div *ngFor=\"let mainTooltip of mainTooltips\"\n+               [innerHTML]=\"mainTooltip\"\n+               [ngStyle]=\"{'padding': '10px 0'}\">", "originalCommit": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg4MzAwMg==", "url": "https://github.com/thingsboard/thingsboard/pull/3701#discussion_r540883002", "bodyText": "Need to add after all modification FeatureGroup", "author": "vvlladd28", "createdAt": "2020-12-11T11:32:03Z", "path": "ui-ngx/src/app/modules/home/components/widget/lib/maps/leaflet-map.ts", "diffHunk": "@@ -608,26 +608,32 @@ export default abstract class LeafletMap {\n       return polygon;\n     }\n \n-    updatePoints(pointsData: FormattedData[], getTooltip: (point: FormattedData, setTooltip?: boolean) => string) {\n-      if (this.points) {\n+  updatePoints(pointsData: FormattedData[][], getTooltip: (point: FormattedData[], setTooltip?: boolean) => string) {\n+    for(let i = 0; i < pointsData.length; i++) {\n+      let pointsList = pointsData[i];\n+      if(i === 0) {\n+        if (this.points) {\n           this.map.removeLayer(this.points);\n+        }\n+        this.points = new FeatureGroup();\n       }\n-      this.points = new FeatureGroup();\n-      pointsData.filter(pdata => !!this.convertPosition(pdata)).forEach(data => {\n-          const point = L.circleMarker(this.convertPosition(data), {\n-              color: this.options.pointColor,\n-              radius: this.options.pointSize\n-          });\n-          if (!this.options.pointTooltipOnRightPanel) {\n-              point.on('click', () => getTooltip(data));\n-          }\n-          else {\n-              createTooltip(point, this.options, data.$datasource, getTooltip(data, false));\n-          }\n-          this.points.addLayer(point);\n+      pointsList.filter(pdata => !!this.convertPosition(pdata)).forEach(data => {\n+        const point = L.circleMarker(this.convertPosition(data), {\n+          color: this.options.pointColor,\n+          radius: this.options.pointSize\n+        });\n+        if (!this.options.pointTooltipOnRightPanel) {\n+          point.on('click', () => getTooltip([data]));\n+        } else {\n+          createTooltip(point, this.options, data.$datasource, getTooltip([data], false));\n+        }\n+        this.points.addLayer(point);\n       });\n-      this.map.addLayer(this.points);\n+      if(i === 0) {\n+        this.map.addLayer(this.points);\n+      }", "originalCommit": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkyMzExNg==", "url": "https://github.com/thingsboard/thingsboard/pull/3701#discussion_r540923116", "bodyText": "Why change the type of a variable?", "author": "vvlladd28", "createdAt": "2020-12-11T12:47:51Z", "path": "ui-ngx/src/app/modules/home/components/widget/trip-animation/trip-animation.component.ts", "diffHunk": "@@ -138,34 +141,41 @@ export class TripAnimationComponent implements OnInit, AfterViewInit, OnDestroy\n \n   timeUpdated(time: number) {\n     this.currentTime = time;\n-    const currentPosition = this.interpolatedTimeData\n+    let currentPosition = this.interpolatedTimeData", "originalCommit": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0NDk4NQ==", "url": "https://github.com/thingsboard/thingsboard/pull/3701#discussion_r540944985", "bodyText": "Overwrite variable", "author": "vvlladd28", "createdAt": "2020-12-11T13:26:14Z", "path": "ui-ngx/src/app/modules/home/components/widget/trip-animation/trip-animation.component.ts", "diffHunk": "@@ -194,23 +221,34 @@ export class TripAnimationComponent implements OnInit, AfterViewInit, OnDestroy\n     }\n   }\n \n-  calcTooltip = (point?: FormattedData): string => {\n-    const data = point ? point : this.activeTrip;\n-    const tooltipPattern: string = this.settings.useTooltipFunction ?\n-      safeExecute(this.settings.tooltipFunction, [data, this.historicalData, point.dsIndex]) : this.settings.tooltipPattern;\n-    const tooltipText = parseWithTranslation.parseTemplate(tooltipPattern, data, true);\n-    this.mainTooltip = this.sanitizer.sanitize(\n-      SecurityContext.HTML, tooltipText);\n-    this.cd.detectChanges();\n-    this.activeTrip = point;\n+  calcTooltip = (points?: FormattedData[], isMainTooltip: boolean = false): string => {\n+    let tooltipText;\n+    if(isMainTooltip) {\n+      this.mainTooltips = []\n+    }\n+    for (let point of points) {\n+      const data = point ? point : this.activeTrip;\n+      const tooltipPattern: string = this.settings.useTooltipFunction ?\n+        safeExecute(this.settings.tooltipFunction, [data, this.historicalData, point.dsIndex]) : this.settings.tooltipPattern;\n+      tooltipText = parseWithTranslation.parseTemplate(tooltipPattern, data, true);\n+      if(isMainTooltip) {\n+        this.mainTooltips.push(this.sanitizer.sanitize(SecurityContext.HTML, tooltipText));\n+      }\n+      this.cd.detectChanges();\n+      this.activeTrip = point;", "originalCommit": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0NzEwNQ==", "url": "https://github.com/thingsboard/thingsboard/pull/3701#discussion_r540947105", "bodyText": "Missing _.union call", "author": "vvlladd28", "createdAt": "2020-12-11T13:29:44Z", "path": "ui-ngx/src/app/modules/home/components/widget/trip-animation/trip-animation.component.ts", "diffHunk": "@@ -138,34 +141,41 @@ export class TripAnimationComponent implements OnInit, AfterViewInit, OnDestroy\n \n   timeUpdated(time: number) {\n     this.currentTime = time;\n-    const currentPosition = this.interpolatedTimeData\n+    let currentPosition = this.interpolatedTimeData\n       .map(dataSource => dataSource[time])\n-      .filter(ds => ds);\n-    if (isUndefined(currentPosition[0])) {\n-      const timePoints = Object.keys(this.interpolatedTimeData[0]).map(item => parseInt(item, 10));\n-      for (let i = 1; i < timePoints.length; i++) {\n-        if (timePoints[i - 1] < time && timePoints[i] > time) {\n-          const beforePosition = this.interpolatedTimeData[0][timePoints[i - 1]];\n-          const afterPosition = this.interpolatedTimeData[0][timePoints[i]];\n-          const ratio = getRatio(timePoints[i - 1], timePoints[i], time);\n-          currentPosition[0] = {\n-            ...beforePosition,\n-            time,\n-            ...interpolateOnLineSegment(beforePosition, afterPosition, this.settings.latKeyName, this.settings.lngKeyName, ratio)\n+    for(let j = 0; j < this.interpolatedTimeData.length; j++) {\n+      if (isUndefined(currentPosition[j])) {\n+        const timePoints = Object.keys(this.interpolatedTimeData[j]).map(item => parseInt(item, 10));\n+        for (let i = 1; i < timePoints.length; i++) {\n+          if (timePoints[i - 1] < time && timePoints[i] > time) {\n+            const beforePosition = this.interpolatedTimeData[j][timePoints[i - 1]];\n+            const afterPosition = this.interpolatedTimeData[j][timePoints[i]];\n+            const ratio = getRatio(timePoints[i - 1], timePoints[i], time);\n+            currentPosition[j] = {\n+              ...beforePosition,\n+              time,\n+              ...interpolateOnLineSegment(beforePosition, afterPosition, this.settings.latKeyName, this.settings.lngKeyName, ratio)\n+            }\n+            break;\n           }\n-          break;\n         }\n       }\n     }\n-    this.calcLabel();\n-    this.calcTooltip(currentPosition.find(position => position.entityName === this.activeTrip.entityName));\n+    for(let j = 0; j < this.interpolatedTimeData.length; j++) {\n+      if (isUndefined(currentPosition[j])) {\n+        currentPosition[j] = this.calculateLastPoints(this.interpolatedTimeData[j], time);\n+      }\n+    }\n+    this.calcLabel(currentPosition);\n+    this.calcTooltip(currentPosition, true);\n     if (this.mapWidget && this.mapWidget.map && this.mapWidget.map.map) {\n-      this.mapWidget.map.updatePolylines(this.interpolatedTimeData.map(ds => _.values(ds)), true, this.activeTrip);\n+      const formattedInterpolatedTimeData = this.interpolatedTimeData.map(ds => _.values(ds));\n+      this.mapWidget.map.updatePolylines(formattedInterpolatedTimeData, true);\n       if (this.settings.showPolygon) {\n         this.mapWidget.map.updatePolygons(this.interpolatedTimeData);\n       }\n       if (this.settings.showPoints) {\n-        this.mapWidget.map.updatePoints(_.values(_.union(this.interpolatedTimeData)[0]), this.calcTooltip);\n+        this.mapWidget.map.updatePoints(formattedInterpolatedTimeData, this.calcTooltip);", "originalCommit": "235946691bfcb96fa0c10b689d6fc69b0c61bce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "96ff9ddeddaa37273b2065906ca0373b66d2109f", "url": "https://github.com/thingsboard/thingsboard/commit/96ff9ddeddaa37273b2065906ca0373b66d2109f", "message": "Fixes after review", "committedDate": "2020-12-16T15:36:08Z", "type": "commit"}, {"oid": "65027b9c17f13ebcb9d11d317013bacf28bfdda1", "url": "https://github.com/thingsboard/thingsboard/commit/65027b9c17f13ebcb9d11d317013bacf28bfdda1", "message": "Additions to fixes after review", "committedDate": "2020-12-16T16:42:55Z", "type": "commit"}, {"oid": "fd3208cf827e22c185542abdc0dc7208b9089c5b", "url": "https://github.com/thingsboard/thingsboard/commit/fd3208cf827e22c185542abdc0dc7208b9089c5b", "message": "2nd part of additions to fix after review", "committedDate": "2020-12-23T15:14:19Z", "type": "commit"}]}