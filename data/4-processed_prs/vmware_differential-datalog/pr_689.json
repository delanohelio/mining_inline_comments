{"pr_number": 689, "pr_title": "Update debugging hooks function and format of inputs/outputs", "pr_createdAt": "2020-06-25T22:59:53Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/689", "timeline": [{"oid": "6f8ab35265e45fd4fc01c489d0835b45669b950d", "url": "https://github.com/vmware/differential-datalog/commit/6f8ab35265e45fd4fc01c489d0835b45669b950d", "message": "Use record format when outputting input and output of debug event", "committedDate": "2020-06-25T23:26:56Z", "type": "commit"}, {"oid": "1485dc63e67f1664e36ba3c512bd54e882d064bd", "url": "https://github.com/vmware/differential-datalog/commit/1485dc63e67f1664e36ba3c512bd54e882d064bd", "message": "Include operator type in the events generated by the debug hooks\n\nThis will make it easier for the debugger tool to parse the event.", "committedDate": "2020-06-25T23:26:56Z", "type": "commit"}, {"oid": "cf2d197a5473c324bb15abb7a7e35958486c6955", "url": "https://github.com/vmware/differential-datalog/commit/cf2d197a5473c324bb15abb7a7e35958486c6955", "message": "Update expected transformed test program files\n\nThe debug function has been updated to also include the operator\ntype. Update the test expectation accordingly.", "committedDate": "2020-06-25T23:26:56Z", "type": "commit"}, {"oid": "cf2d197a5473c324bb15abb7a7e35958486c6955", "url": "https://github.com/vmware/differential-datalog/commit/cf2d197a5473c324bb15abb7a7e35958486c6955", "message": "Update expected transformed test program files\n\nThe debug function has been updated to also include the operator\ntype. Update the test expectation accordingly.", "committedDate": "2020-06-25T23:26:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzNjM2MA==", "url": "https://github.com/vmware/differential-datalog/pull/689#discussion_r445936360", "bodyText": "Let's do\nrhs -> error $ \"generateInspectDebug \" ++ show rhs\n\nto catch potential compiler bugs that violate this.", "author": "ryzhyk", "createdAt": "2020-06-26T02:30:07Z", "path": "src/Language/DifferentialDatalog/Debug.hs", "diffHunk": "@@ -123,11 +123,20 @@ generateInspectDebug d ruleIdx rule index =\n     input1 = if index == 0\n                 then eVar $ exprVar $ enode $ atomVal $ rhsAtom $ head $ ruleRHS rule\n                 else head $ Compile.recordAfterPrefix d rule (index - 1)\n+    opType = if index == 0\n+                then \"Map\"\n+                else case (ruleRHS rule) !! index of\n+                     RHSLiteral{rhsPolarity=False} -> \"Antijoin\"\n+                     RHSInspect{} -> \"Inspect\"\n+                     RHSFlatMap{} -> \"Flatmap\"\n+                     RHSCondition{} -> \"Condition\"\n+                     _ -> \"Undefined\" -- Should not reach this case", "originalCommit": "cf2d197a5473c324bb15abb7a7e35958486c6955", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzNzQ1MQ==", "url": "https://github.com/vmware/differential-datalog/pull/689#discussion_r445937451", "bodyText": "In one of future commits, can we add a typedef to debug.dl, e.g.,\ntypedef DDlogOpId = DDlogOpId {\n  rel: u32,\n  rule: u32,\n  op: u32\n}", "author": "ryzhyk", "createdAt": "2020-06-26T02:34:58Z", "path": "lib/debug.dl", "diffHunk": "@@ -2,7 +2,9 @@\n  * an external debugger tool.\n  */\n \n-extern function debug_event(operator_id: (u32, u32, u32), w: DDWeight, ts: 'T1, input1: 'A1, out: 'A2): ()\n-extern function debug_event_join(operator_id: (u32, u32, u32), w: DDWeight, ts: 'T1, input1: 'A1, input2: 'A2, out: 'A3): ()\n+extern function debug_event(operator_id: (u32, u32, u32), w: DDWeight, ts: 'T1,", "originalCommit": "cf2d197a5473c324bb15abb7a7e35958486c6955", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzOTQzNA==", "url": "https://github.com/vmware/differential-datalog/pull/689#discussion_r445939434", "bodyText": "On a second thought, since this will be serialized into every debugger message, maybe we should keep it as a tuple for more concise output:\ntypedef DDlogOpId = (u32, u32, u32)", "author": "ryzhyk", "createdAt": "2020-06-26T02:43:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzNzQ1MQ=="}], "type": "inlineReview"}]}