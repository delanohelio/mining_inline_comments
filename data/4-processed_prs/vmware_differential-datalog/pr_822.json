{"pr_number": 822, "pr_title": "Add checked conversions to DDValue", "pr_createdAt": "2020-11-21T22:07:25Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/822", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0ODYyMA==", "url": "https://github.com/vmware/differential-datalog/pull/822#discussion_r528248620", "bodyText": "I couldn't figure out how to totally remove the ($+$ \"\"), so help there would be appreciated", "author": "Kixiron", "createdAt": "2020-11-21T22:09:49Z", "path": "src/Language/DifferentialDatalog/Compile.hs", "diffHunk": "@@ -610,7 +612,7 @@ compileLib d specname modules rs_code = (typeLib, mainLib)\n     -- Add 'DDValConvert' impls to 'types' crate.\n     -- Since multiple DDlog types can map to the same Rust type, we convert\n     -- types to Rust and fold over the resulting set.\n-    typeLib = S.foldl (\\libs t -> M.adjust ($+$ \"::differential_datalog::decl_ddval_convert!{\" <> pp t <> \"}\") mainModuleName libs) typeLibAllFuncs\n+    typeLib = S.foldl (\\libs _ -> M.adjust ($+$ \"\") mainModuleName libs) typeLibAllFuncs\n                       $ S.map (render . mkType d True) $ S.filter (typeNeedsDDValConvert d) $ cTypes cstate", "originalCommit": "59497282e0b6d381a463df6224af6fe1f2346a54", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fcb1e38594ca9f9633922f859ea21d018d16c009", "url": "https://github.com/vmware/differential-datalog/commit/fcb1e38594ca9f9633922f859ea21d018d16c009", "message": "Broke ddval.rs into modules", "committedDate": "2020-11-26T16:14:31Z", "type": "commit"}, {"oid": "f0c60c6421800539833375328d2f9b9c12b403c6", "url": "https://github.com/vmware/differential-datalog/commit/f0c60c6421800539833375328d2f9b9c12b403c6", "message": "Refactored the decl_ddval_convert! macro", "committedDate": "2020-11-26T16:14:31Z", "type": "commit"}, {"oid": "8c4ccfb5c20ac1a8acbf4485a736ca38adf915df", "url": "https://github.com/vmware/differential-datalog/commit/8c4ccfb5c20ac1a8acbf4485a736ca38adf915df", "message": "Added the type_id function to the DDValue vtable and added checks to methods", "committedDate": "2020-11-26T16:14:31Z", "type": "commit"}, {"oid": "d2797d1e4077b1c08182b3462af26f712f994504", "url": "https://github.com/vmware/differential-datalog/commit/d2797d1e4077b1c08182b3462af26f712f994504", "message": "Added tests for DDValue conversions", "committedDate": "2020-11-26T16:14:31Z", "type": "commit"}, {"oid": "17ba42d44b0ec35e1a1ecb5228e5fbb0dff5f4da", "url": "https://github.com/vmware/differential-datalog/commit/17ba42d44b0ec35e1a1ecb5228e5fbb0dff5f4da", "message": "Fixed some safety stuff", "committedDate": "2020-11-26T16:14:31Z", "type": "commit"}, {"oid": "b62a96e1092948bee5f70a7d2d88982b225a19d9", "url": "https://github.com/vmware/differential-datalog/commit/b62a96e1092948bee5f70a7d2d88982b225a19d9", "message": "Generate Relations->TypeId match and check updates are the correct type", "committedDate": "2020-11-26T16:14:31Z", "type": "commit"}, {"oid": "2d6f26e4e5387af4c1b46efe7abff6947bbd0d0d", "url": "https://github.com/vmware/differential-datalog/commit/2d6f26e4e5387af4c1b46efe7abff6947bbd0d0d", "message": "Blanket implementation of DDValConvert and removed ddval convert macro", "committedDate": "2020-11-26T16:14:31Z", "type": "commit"}, {"oid": "5fa87289acd36f7fa0645394505399fb36ce3ba9", "url": "https://github.com/vmware/differential-datalog/commit/5fa87289acd36f7fa0645394505399fb36ce3ba9", "message": "Use HDDlog method in OVSDB API.\n\n`ovsdb_api.rs` used to call the low-level differential_datalog API directly\ninstead of going through high-level `trait DDlog` API.", "committedDate": "2020-11-26T18:47:22Z", "type": "commit"}, {"oid": "44eaf05b5606510280d374e66746b8aa7f4a013a", "url": "https://github.com/vmware/differential-datalog/commit/44eaf05b5606510280d374e66746b8aa7f4a013a", "message": "Make Closure and Group implement `Send + Sync`.\n\nThe blanket impl of DDValConvert requires the type to implement `Send`\nand `Sync`.  Make sure that `Closure` and `Group` types satisfy these\ntype bounds.", "committedDate": "2020-11-26T21:29:44Z", "type": "commit"}, {"oid": "fb281731323411761bff285e8f9b6c33877e76cb", "url": "https://github.com/vmware/differential-datalog/commit/fb281731323411761bff285e8f9b6c33877e76cb", "message": "Improved error messages in `HDDlog::apply_updates`.", "committedDate": "2020-11-27T00:30:35Z", "type": "commit"}, {"oid": "b0e7948aba6f0275851ba239fa89143015949c0d", "url": "https://github.com/vmware/differential-datalog/commit/b0e7948aba6f0275851ba239fa89143015949c0d", "message": "ddvalue.rs: Comment out safety checks.\n\nI haven't done thorough evaluation, but the safety checks `partial_cmp`,\n`eq`, and `cmp` appear to add small but non-trivial overhead, e.g., on\nthe redist_opt benchmarks.  Disabling these checks, as they should\nanyway be redundant: assuming the compiler is correct and the\ningest-time type checking is working properly, types are guaranteed to\nmatch.", "committedDate": "2020-11-27T18:08:53Z", "type": "commit"}, {"oid": "b0e7948aba6f0275851ba239fa89143015949c0d", "url": "https://github.com/vmware/differential-datalog/commit/b0e7948aba6f0275851ba239fa89143015949c0d", "message": "ddvalue.rs: Comment out safety checks.\n\nI haven't done thorough evaluation, but the safety checks `partial_cmp`,\n`eq`, and `cmp` appear to add small but non-trivial overhead, e.g., on\nthe redist_opt benchmarks.  Disabling these checks, as they should\nanyway be redundant: assuming the compiler is correct and the\ningest-time type checking is working properly, types are guaranteed to\nmatch.", "committedDate": "2020-11-27T18:08:53Z", "type": "forcePushed"}]}