{"pr_number": 638, "pr_title": "Improved error messages", "pr_createdAt": "2020-04-21T03:26:31Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/638", "timeline": [{"oid": "14b47a6841c39c6b67423737b90fc49888aebafb", "url": "https://github.com/vmware/differential-datalog/commit/14b47a6841c39c6b67423737b90fc49888aebafb", "message": "Improved error messages", "committedDate": "2020-04-21T03:18:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA0NTQzOQ==", "url": "https://github.com/vmware/differential-datalog/pull/638#discussion_r414045439", "bodyText": "I feel like DatalogProgram should be the first argument.\nI can see that threading it everywhere is annoying.  A common solution is to pass it around as an implicit arg. We have to be careful with this, as implicit args should only be used for things that never change, and we do rewrite DatalogProgram several times. Perhaps, we could have two functions, one that expects DatalogProgram as explicit argument and one that takes it as an implicit parameter.", "author": "ryzhyk", "createdAt": "2020-04-23T18:56:43Z", "path": "src/Language/DifferentialDatalog/Error.hs", "diffHunk": "@@ -0,0 +1,58 @@\n+{-\n+Copyright (c) 2020 VMware, Inc.\n+SPDX-License-Identifier: MIT\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n+-}\n+\n+{-# LANGUAGE FlexibleContexts, TupleSections #-}\n+\n+module Language.DifferentialDatalog.Error where\n+\n+import Control.Monad.Except\n+import Data.List\n+import Language.DifferentialDatalog.Pos\n+import Language.DifferentialDatalog.Name\n+import Language.DifferentialDatalog.Syntax\n+\n+errBrief :: (MonadError String me) => Pos -> String -> me a\n+errBrief p e = throwError $ spos p ++ \": \" ++ e\n+\n+err :: (MonadError String me) => Pos -> DatalogProgram -> String -> me a", "originalCommit": "14b47a6841c39c6b67423737b90fc49888aebafb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA0OTk5NQ==", "url": "https://github.com/vmware/differential-datalog/pull/638#discussion_r414049995", "bodyText": "I guess the plan is to have versions of check and uniq that take DatalogProgram too?", "author": "ryzhyk", "createdAt": "2020-04-23T19:03:45Z", "path": "src/Language/DifferentialDatalog/Error.hs", "diffHunk": "@@ -0,0 +1,58 @@\n+{-\n+Copyright (c) 2020 VMware, Inc.\n+SPDX-License-Identifier: MIT\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n+-}\n+\n+{-# LANGUAGE FlexibleContexts, TupleSections #-}\n+\n+module Language.DifferentialDatalog.Error where\n+\n+import Control.Monad.Except\n+import Data.List\n+import Language.DifferentialDatalog.Pos\n+import Language.DifferentialDatalog.Name\n+import Language.DifferentialDatalog.Syntax\n+\n+errBrief :: (MonadError String me) => Pos -> String -> me a\n+errBrief p e = throwError $ spos p ++ \": \" ++ e\n+\n+err :: (MonadError String me) => Pos -> DatalogProgram -> String -> me a\n+err p d e = throwError $ sposFragment p (progSources d) e\n+\n+check :: (MonadError String me) => Bool -> Pos -> String -> me ()", "originalCommit": "14b47a6841c39c6b67423737b90fc49888aebafb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1NDY1Mg==", "url": "https://github.com/vmware/differential-datalog/pull/638#discussion_r414054652", "bodyText": "A comment here would be good, perhaps even including an example output produced by this function.", "author": "ryzhyk", "createdAt": "2020-04-23T19:11:10Z", "path": "src/Language/DifferentialDatalog/Pos.hs", "diffHunk": "@@ -50,7 +52,24 @@ spos x = let (s,e) = pos x\n          in sourceName s ++ \":\" ++ (show $ sourceLine s) ++ \":\" ++ (show $ sourceColumn s) ++ \"-\"\n                                 ++ (show $ sourceLine e) ++ \":\" ++ (show $ sourceColumn e)\n \n-nopos::Pos \n+sposFragment :: (WithPos a) => a -> M.Map String String -> String -> String", "originalCommit": "14b47a6841c39c6b67423737b90fc49888aebafb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1ODI3NQ==", "url": "https://github.com/vmware/differential-datalog/pull/638#discussion_r414058275", "bodyText": "This will crash if the start line is not valid, which is very much possible if there is a bug in parser or if we use artificially manufactured pos (which we do in some places). Ideally this should not happen, but the program should not crash if it does.\nAlso, there is a special case when position  ==nopos, which means that we have an object whose real position is unknown or undefined (e.g., it was injected during program transformation). We should not theoretically have errors in those, but we should not crash if this happens.", "author": "ryzhyk", "createdAt": "2020-04-23T19:16:58Z", "path": "src/Language/DifferentialDatalog/Pos.hs", "diffHunk": "@@ -50,7 +52,24 @@ spos x = let (s,e) = pos x\n          in sourceName s ++ \":\" ++ (show $ sourceLine s) ++ \":\" ++ (show $ sourceColumn s) ++ \"-\"\n                                 ++ (show $ sourceLine e) ++ \":\" ++ (show $ sourceColumn e)\n \n-nopos::Pos \n+sposFragment :: (WithPos a) => a -> M.Map String String -> String -> String\n+sposFragment element sources message =\n+   let (s,e)      = pos element\n+       sourceFile = sourceName s\n+       lineStart  = sourceLine s\n+       colStart   = sourceColumn s\n+       lineEnd    = sourceLine e\n+       colEnd     = sourceColumn e\n+       sameLine   = lineStart == lineEnd\n+       width      = if sameLine then colEnd - colStart else 1\n+       line       = (lines $ (sources M.! sourceFile)) !! (lineStart - 1)", "originalCommit": "14b47a6841c39c6b67423737b90fc49888aebafb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "04171c9529c09dfbeb5639012d99299eac024737", "url": "https://github.com/vmware/differential-datalog/commit/04171c9529c09dfbeb5639012d99299eac024737", "message": "Converted most error messages", "committedDate": "2020-04-24T20:08:41Z", "type": "commit"}]}