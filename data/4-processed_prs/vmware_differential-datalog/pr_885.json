{"pr_number": 885, "pr_title": "Several small improvements", "pr_createdAt": "2020-12-30T00:09:17Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/885", "timeline": [{"oid": "439fdfcf19ac3f4632e4fbe5cb1138d1f5fe7649", "url": "https://github.com/vmware/differential-datalog/commit/439fdfcf19ac3f4632e4fbe5cb1138d1f5fe7649", "message": "Remove `unsafe impl Send for HDDlog`.\n\nThis unsafe `impl` was a workaround for older DD not implementing `Send`\nfor `WorkerGuard`s.  This is no longer necessary with the latest timely/DD.", "committedDate": "2020-12-28T18:27:41Z", "type": "commit"}, {"oid": "e000d168c831456de2127d5b8be6054739087ec7", "url": "https://github.com/vmware/differential-datalog/commit/e000d168c831456de2127d5b8be6054739087ec7", "message": "arrange.rs: Remove `concatenate_collections`.\n\nThe function was introduced a while ago as an efficient method of\nmerging many collections.  DD has since exposed the same functionality\nthrough its `Collection` API.", "committedDate": "2020-12-28T22:22:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkwNzAzMw==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549907033", "bodyText": "why not just delete this?", "author": "mbudiu-vmw", "createdAt": "2020-12-30T01:37:00Z", "path": "java/test1/RedistTest.java", "diffHunk": "@@ -286,7 +277,7 @@ void onCommitChange(DDlogCommand<DDlogRecord> command) {\n                 printSpan = false;\n                 System.out.println(\"Span:\");\n             }\n-            this.onCommit(command);  // process change\n+            //this.onCommit(command);  // process change", "originalCommit": "b63b20867c7260f6f5ce53253c5fff1b223968db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkwNzQ3Ng==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549907476", "bodyText": "this one was right.", "author": "mbudiu-vmw", "createdAt": "2020-12-30T01:39:39Z", "path": "rust/template/distributed_datalog/src/accumulate/accumulator.rs", "diffHunk": "@@ -33,7 +33,7 @@ use crate::accumulate::AccumulatingObserver;\n use crate::accumulate::TxnDistributor;\n \n /// A trait object that acts as a proxy between an observable and observer.\n-/// It accumulates the updates to maintain the current state of the data.\n+/// It accumulates the updates to maintains the current state of the data.", "originalCommit": "b63b20867c7260f6f5ce53253c5fff1b223968db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkwNzc4NQ==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549907785", "bodyText": "delete \"use\"", "author": "mbudiu-vmw", "createdAt": "2020-12-30T01:41:29Z", "path": "test/datalog_tests/rust_api_test/src/main.rs", "diffHunk": "@@ -37,17 +37,15 @@ use differential_datalog::record::UpdCmd; // Dynamically typed representation of\n \n fn main() -> Result<(), String> {\n \n-    fn cb(_rel: usize, _rec: &Record, _w: isize) {}\n-\n     // Instantiate a DDlog program.\n     // Returns a handle to the program and initial contents of output relations.\n     // Arguments\n     // - number of worker threads (you typically want 1 or 2).\n     // - Boolean flag that indicates whether DDlog will track the complete snapshot\n-    //   of output relations.  Should only be used if you plan to dump `dump_table`\n-    //   their contents using `HDDlog::dump_table()`.\n-    // - Callback - obsolete and will disappear in future releases.\n-    let (mut hddlog, init_state) = HDDlog::run(1, false, cb)?;\n+    //   of output relations.  Should only be used for debugging in order to dump\n+    //   the contents of output tables using `HDDlog::dump_table()`.  Otherwise,\n+    //   use indexes are the preferred way to achieve this.", "originalCommit": "b63b20867c7260f6f5ce53253c5fff1b223968db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyODQxMQ==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549928411", "bodyText": "Removing the update callback from the external api should allow removing Relation.change_cb if I'm not mistaken", "author": "Kixiron", "createdAt": "2020-12-30T04:05:47Z", "path": "CHANGELOG.md", "diffHunk": "@@ -3,6 +3,15 @@ All notable changes to this project will be documented in this file.\n \n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n \n+## [Unreleased]\n+\n+### API changes\n+\n+- Removed callback argument from `HDDlog::run`, `ddlog_run`, and Go/Java language\n+  bindings based on `ddlog_run`.  This optional callback, invoked by DD workers on\n+  each update to an output collection complicated the API and was tricky to use\n+  correctly.  Most importantly, it is superseded by the `commit_dump_changes` API.", "originalCommit": "5b456af54677ea7ab5a3d5002b63a0bebe471188", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyODk3OQ==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549928979", "bodyText": "That callback's still used internally to implement commit_dump_change.", "author": "ryzhyk", "createdAt": "2020-12-30T04:09:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyODQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyOTI2Mw==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549929263", "bodyText": "Darn, I would like to do a rework of that sometime then since I think it's a source of contention that isn't good for perf. If the callback is properly synchronized, we should just be able to store an Arc<dyn Callback> directly, which would eliminate the need for a mutex entirely", "author": "Kixiron", "createdAt": "2020-12-30T04:11:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyODQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODQxNg==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549948416", "bodyText": "Good point, that's stupid and needs to be fixed.", "author": "ryzhyk", "createdAt": "2020-12-30T06:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyODQxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODc2MQ==", "url": "https://github.com/vmware/differential-datalog/pull/885#discussion_r549948761", "bodyText": "PS. (but not necessarily by you, I should probably clean my own mess)", "author": "ryzhyk", "createdAt": "2020-12-30T06:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyODQxMQ=="}], "type": "inlineReview"}, {"oid": "f76a52e5f596f2e740e35c836f3621dc629de95a", "url": "https://github.com/vmware/differential-datalog/commit/f76a52e5f596f2e740e35c836f3621dc629de95a", "message": "Remove callback argument.\n\nRemoved the callback argument from `HDDlog::run`, `ddlog_run`, and\nlanguage bindings based on `ddlog_run`.  This callback is confusing\nand difficult to use: it can be invoked from multiple threads and can\ndelete and remove the same record multiple times, and in arbitrary\norder. The the `commit_dump_changes` API provides a better\nway to track changes to output collections (at the cost of buffering\nthem).", "committedDate": "2020-12-30T08:43:58Z", "type": "commit"}, {"oid": "ef36431a98c7bcd2fb67639a0d98754af52b9b0e", "url": "https://github.com/vmware/differential-datalog/commit/ef36431a98c7bcd2fb67639a0d98754af52b9b0e", "message": "Fix lints in `distributed_ddlog::accumulate`.\n\nThe `accumulate` module is now public, which triggered a bunch of\nnew lints.", "committedDate": "2020-12-30T08:43:58Z", "type": "commit"}, {"oid": "ef36431a98c7bcd2fb67639a0d98754af52b9b0e", "url": "https://github.com/vmware/differential-datalog/commit/ef36431a98c7bcd2fb67639a0d98754af52b9b0e", "message": "Fix lints in `distributed_ddlog::accumulate`.\n\nThe `accumulate` module is now public, which triggered a bunch of\nnew lints.", "committedDate": "2020-12-30T08:43:58Z", "type": "forcePushed"}]}