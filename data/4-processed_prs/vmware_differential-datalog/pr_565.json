{"pr_number": 565, "pr_title": "Fixed bigint to signed<N> conversion.", "pr_createdAt": "2020-03-19T06:58:24Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/565", "timeline": [{"oid": "84aff4905600e124616993e9695e4b16b18566e9", "url": "https://github.com/vmware/differential-datalog/commit/84aff4905600e124616993e9695e4b16b18566e9", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`.", "committedDate": "2020-03-19T14:51:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MTMzOA==", "url": "https://github.com/vmware/differential-datalog/pull/565#discussion_r395171338", "bodyText": "you could also uncomment this in the souffle_lib.dl file", "author": "mbudiu-vmw", "createdAt": "2020-03-19T16:48:19Z", "path": "test/datalog_tests/simple2.dl", "diffHunk": "@@ -42,3 +45,18 @@ output relation TArrng1Arrng2(x: bigint)\n TArrng1Arrng2(x.f2.f2) :-\n     TArrng1[t],\n     TArrng2[(x, t.0.f2.f2)].\n+\n+\n+function ftoi_(l: double): signed<32> = {", "originalCommit": "84aff4905600e124616993e9695e4b16b18566e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4MDMwNw==", "url": "https://github.com/vmware/differential-datalog/pull/565#discussion_r395180307", "bodyText": "Do we have/need tests for that?", "author": "ryzhyk", "createdAt": "2020-03-19T17:01:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MTMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4MTc0Ng==", "url": "https://github.com/vmware/differential-datalog/pull/565#discussion_r395181746", "bodyText": "Previously it wouldn't even compile (the generated Rust). So that's one test.\nSecond, if that works I may be able to enable at least one Souffle test that is using it (if everything else works too).", "author": "mbudiu-vmw", "createdAt": "2020-03-19T17:03:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MTMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5ODY4MQ==", "url": "https://github.com/vmware/differential-datalog/pull/565#discussion_r395198681", "bodyText": "Ok, uncommented ftoi, ftou. Will merge once tests pass.", "author": "ryzhyk", "createdAt": "2020-03-19T17:28:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MTMzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MTY4Mw==", "url": "https://github.com/vmware/differential-datalog/pull/565#discussion_r395171683", "bodyText": "this is very obscure", "author": "mbudiu-vmw", "createdAt": "2020-03-19T16:48:46Z", "path": ".gitlab-ci.yml", "diffHunk": "@@ -71,7 +71,7 @@ test-simple:\n     tags:\n         - ddlog-ci-1\n     script:\n-    - stack --no-terminal test --ta \"-p simple\"\n+    - stack --no-terminal test --ta '-p \"$(NF) == \\\"generate simple\\\" || ($(NF-1) == \\\"compiler tests\\\" && $(NF) == \\\"simple\\\")\"'", "originalCommit": "84aff4905600e124616993e9695e4b16b18566e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6fd15e3f5f490789056aa2f3b900a54a2804eacd", "url": "https://github.com/vmware/differential-datalog/commit/6fd15e3f5f490789056aa2f3b900a54a2804eacd", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`.", "committedDate": "2020-03-19T17:27:58Z", "type": "commit"}, {"oid": "6fd15e3f5f490789056aa2f3b900a54a2804eacd", "url": "https://github.com/vmware/differential-datalog/commit/6fd15e3f5f490789056aa2f3b900a54a2804eacd", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`.", "committedDate": "2020-03-19T17:27:58Z", "type": "forcePushed"}]}