{"pr_number": 548, "pr_title": "Support DDlog u128 records in the Go library", "pr_createdAt": "2020-03-07T02:33:06Z", "pr_url": "https://github.com/vmware/differential-datalog/pull/548", "timeline": [{"oid": "5a98d3da30dbfbebc6fe99e152a5c6fda36797fe", "url": "https://github.com/vmware/differential-datalog/commit/5a98d3da30dbfbebc6fe99e152a5c6fda36797fe", "message": "Support DDlog u128 records in the Go library\n\nNote that we only support unsigned 128-bit numbers for now.", "committedDate": "2020-03-07T02:30:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyMzA2NA==", "url": "https://github.com/vmware/differential-datalog/pull/548#discussion_r389223064", "bodyText": "One thing I love about Rust is the u128 built-in type  ;)", "author": "ryzhyk", "createdAt": "2020-03-07T03:21:19Z", "path": "go/pkg/uint128/uint128.go", "diffHunk": "@@ -0,0 +1,71 @@\n+package uint128\n+\n+import (\n+\t\"encoding/binary\"\n+\t\"encoding/hex\"\n+\n+\t\"github.com/google/uuid\"\n+)\n+\n+// Uint128 stores a 128-bit unsigned integer as two 64-bit words. Two Uint128 values can be compared\n+// with ==.\n+type Uint128 struct {", "originalCommit": "5a98d3da30dbfbebc6fe99e152a5c6fda36797fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyNTA2NQ==", "url": "https://github.com/vmware/differential-datalog/pull/548#discussion_r389225065", "bodyText": "Maybe it will come to Go eventually: golang/go#9455...", "author": "antoninbas", "createdAt": "2020-03-07T03:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyMzA2NA=="}], "type": "inlineReview"}]}