{"pr_number": 300, "pr_title": "Redesign: Fix View Recovery Phrase Flow and other security related flows [NMA-299]", "pr_createdAt": "2020-01-10T00:08:36Z", "pr_url": "https://github.com/dashevo/dash-wallet/pull/300", "timeline": [{"oid": "e94f9970d6831f5f08525933cac34d20b1e4515b", "url": "https://github.com/dashevo/dash-wallet/commit/e94f9970d6831f5f08525933cac34d20b1e4515b", "message": "First Attempt", "committedDate": "2020-01-08T06:45:46Z", "type": "commit"}, {"oid": "5516658aabe13222984c309dfa031e518b031ecb", "url": "https://github.com/dashevo/dash-wallet/commit/5516658aabe13222984c309dfa031e518b031ecb", "message": "Open up CheckPinDialog and its view model classes to be extended", "committedDate": "2020-01-09T05:21:59Z", "type": "commit"}, {"oid": "d7c98dde802356ef7ae9467137e023fb2c2136d6", "url": "https://github.com/dashevo/dash-wallet/commit/d7c98dde802356ef7ae9467137e023fb2c2136d6", "message": "Add DecryptSeedWithPinDialog and its view model classes", "committedDate": "2020-01-09T05:28:06Z", "type": "commit"}, {"oid": "c79c99e5f6af695a9cf0c051c281ebead6a6e851", "url": "https://github.com/dashevo/dash-wallet/commit/c79c99e5f6af695a9cf0c051c281ebead6a6e851", "message": "Add ViewSeedActivity (view recovery phrase)", "committedDate": "2020-01-09T06:02:05Z", "type": "commit"}, {"oid": "55e6b946a08b299c433707e6d0975c0d31423d01", "url": "https://github.com/dashevo/dash-wallet/commit/55e6b946a08b299c433707e6d0975c0d31423d01", "message": "Connect Security -> View Recovery Phrase to the new flow", "committedDate": "2020-01-09T06:04:08Z", "type": "commit"}, {"oid": "82d599e93069ea3c5155efc57437d76e49bbaf98", "url": "https://github.com/dashevo/dash-wallet/commit/82d599e93069ea3c5155efc57437d76e49bbaf98", "message": "Undo changes to VerifySeedActivity since ViewSeedActivity will be used", "committedDate": "2020-01-09T06:06:36Z", "type": "commit"}, {"oid": "86279682c92f55eda4166ecdd91bfa57c0b503e5", "url": "https://github.com/dashevo/dash-wallet/commit/86279682c92f55eda4166ecdd91bfa57c0b503e5", "message": "Use new DecryptSeedWithPinDialog to start Secure Now flow", "committedDate": "2020-01-09T06:08:54Z", "type": "commit"}, {"oid": "d43568333b4ffee1008525a3e399b2bfca8f4118", "url": "https://github.com/dashevo/dash-wallet/commit/d43568333b4ffee1008525a3e399b2bfca8f4118", "message": "Allow for the fingerprint to be used to decrypt a seed\n\nopen up a few more items in CheckPinDialog as protected", "committedDate": "2020-01-09T23:05:38Z", "type": "commit"}, {"oid": "17347c4a2752aa80fe2814f60465736e9f971bc7", "url": "https://github.com/dashevo/dash-wallet/commit/17347c4a2752aa80fe2814f60465736e9f971bc7", "message": "Fix Backup Wallet to File on first time\n\nIf the app is newly installed, the Back up Wallet to File command\nwill ask for the permissions and then require the user to press the\nBackup Wallet to File button again.", "committedDate": "2020-01-09T23:22:03Z", "type": "commit"}, {"oid": "f90c720bc62a4b9f634a32f85c712540a15de5ee", "url": "https://github.com/dashevo/dash-wallet/commit/f90c720bc62a4b9f634a32f85c712540a15de5ee", "message": "Put the advanced security setting being a CheckPinDialog", "committedDate": "2020-01-09T23:23:06Z", "type": "commit"}, {"oid": "e07da0de94210d12ff7a7aa8a3d7026dfca99b10", "url": "https://github.com/dashevo/dash-wallet/commit/e07da0de94210d12ff7a7aa8a3d7026dfca99b10", "message": "Correct grammar: Backup vs Back Up", "committedDate": "2020-01-09T23:59:27Z", "type": "commit"}, {"oid": "e56eb24c3d4d3a235c7d1fa78213554127d72cb6", "url": "https://github.com/dashevo/dash-wallet/commit/e56eb24c3d4d3a235c7d1fa78213554127d72cb6", "message": "Remove unused variable", "committedDate": "2020-01-10T01:00:13Z", "type": "commit"}, {"oid": "c252f3fd4e99de0e3348177fb214b6ec0fd474e7", "url": "https://github.com/dashevo/dash-wallet/commit/c252f3fd4e99de0e3348177fb214b6ec0fd474e7", "message": "Require PIN only for security menu items", "committedDate": "2020-01-10T13:26:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTYxMw==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366429613", "bodyText": "@HashEngineering ,\nin order to condense the code even more and avoid duplicates, instead of overriding the whole startFingerprintListener() method, you can \"override\" just the onSuccess(savedPass: String) by extracting its content into a separate method.\nTo be more clear. In the CheckPinDialog add the method like onSuccessFingerprint(savedPass: String) and call it instead of dismiss(savedPass). The base version of this method (in CheckPinDialog) will then call dismiss(savedPass) whereas the overridden version (in DecryptSeedWithPinDialog) (viewModel as DecryptSeedViewModel).checkPin(savedPass)", "author": "tomasz-ludek", "createdAt": "2020-01-14T16:10:54Z", "path": "wallet/src/de/schildbach/wallet/ui/DecryptSeedWithPinDialog.kt", "diffHunk": "@@ -0,0 +1,114 @@\n+package de.schildbach.wallet.ui\n+\n+import android.os.Build\n+import android.os.Bundle\n+import androidx.annotation.RequiresApi\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.core.os.CancellationSignal\n+import androidx.lifecycle.Observer\n+import androidx.lifecycle.ViewModelProviders\n+import de.schildbach.wallet.livedata.Status\n+import de.schildbach.wallet.ui.preference.PinRetryController\n+import de.schildbach.wallet.util.FingerprintHelper\n+import kotlinx.android.synthetic.main.fragment_enter_pin.*\n+import org.bitcoinj.wallet.DeterministicSeed\n+\n+/**\n+ * @author:  Eric Britten\n+ *\n+ * DecryptSeedWithPinDialog uses DecryptSeedSharedModel which is derived\n+ * from CheckPinShared model but does not call the onCorrectPinCallback\n+ * event\n+ */\n+\n+class DecryptSeedWithPinDialog : CheckPinDialog() {\n+\n+    companion object {\n+\n+        private val FRAGMENT_TAG = DecryptSeedWithPinDialog::class.java.simpleName\n+\n+        private const val ARG_REQUEST_CODE = \"arg_request_code\"\n+        private const val ARG_PIN_ONLY = \"arg_pin_only\"\n+\n+        @JvmStatic\n+        fun show(activity: AppCompatActivity, requestCode: Int = 0, pinOnly: Boolean = false) {\n+            val checkPinDialog = DecryptSeedWithPinDialog()\n+            if (PinRetryController.getInstance().isLocked) {\n+                checkPinDialog.showLockedAlert(activity)\n+            } else {\n+                val args = Bundle()\n+                args.putInt(ARG_REQUEST_CODE, requestCode)\n+                args.putBoolean(ARG_PIN_ONLY, pinOnly)\n+                checkPinDialog.arguments = args\n+                checkPinDialog.show(activity.supportFragmentManager, FRAGMENT_TAG)\n+            }\n+        }\n+\n+        @JvmStatic\n+        fun show(activity: AppCompatActivity, requestCode: Int = 0) {\n+            show(activity, requestCode, false)\n+        }\n+\n+    }\n+\n+    override fun initViewModel() {\n+        viewModel = ViewModelProviders.of(this).get(DecryptSeedViewModel::class.java)\n+        (viewModel as DecryptSeedViewModel).decryptSeedLiveData.observe(viewLifecycleOwner, Observer {\n+            when (it.status) {\n+                Status.ERROR -> {\n+                    pinRetryController.failedAttempt(it.data!!.second!!)\n+                    if (pinRetryController.isLocked) {\n+                        showLockedAlert(context!!)\n+                        dismiss()\n+                        return@Observer\n+                    }\n+                    setState(State.INVALID_PIN)\n+                }\n+                Status.LOADING -> {\n+                    setState(State.DECRYPTING)\n+                }\n+                Status.SUCCESS -> {\n+                    dismiss(it.data!!.first!!, it.data!!.second!!)\n+                }\n+            }\n+        })\n+    }\n+\n+    private fun dismiss(seed : DeterministicSeed, pin: String) {\n+        if (pinRetryController.isLocked) {\n+            return\n+        }\n+        val requestCode = arguments!!.getInt(ARG_REQUEST_CODE)\n+        (sharedModel as DecryptSeedSharedModel).onDecryptSeedCallback.value = Pair(requestCode, seed)\n+        pinRetryController.clearPinFailPrefs()\n+        dismiss()\n+    }\n+\n+    override fun onActivityCreated(savedInstanceState: Bundle?) {\n+        super.onActivityCreated(savedInstanceState)\n+        activity?.run {\n+            sharedModel = ViewModelProviders.of(this)[DecryptSeedSharedModel::class.java]\n+        } ?: throw IllegalStateException(\"Invalid Activity\")\n+    }\n+\n+    @RequiresApi(api = Build.VERSION_CODES.M)\n+    override fun startFingerprintListener() {\n+        fingerprintCancellationSignal = CancellationSignal()\n+        fingerprintHelper!!.getPassword(fingerprintCancellationSignal, object : FingerprintHelper.Callback {\n+            override fun onSuccess(savedPass: String) {\n+                //dismiss(savedPass)\n+                (viewModel as DecryptSeedViewModel).checkPin(savedPass)\n+            }\n+\n+            override fun onFailure(message: String, canceled: Boolean, exceededMaxAttempts: Boolean) {\n+                if (!canceled) {\n+                    fingerprint_view.showError(exceededMaxAttempts)\n+                }\n+            }\n+\n+            override fun onHelp(helpCode: Int, helpString: String) {\n+                fingerprint_view.showError(false)\n+            }\n+        })\n+    }", "originalCommit": "c252f3fd4e99de0e3348177fb214b6ec0fd474e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0NTIzMw==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366445233", "bodyText": "Excellent idea.", "author": "HashEngineering", "createdAt": "2020-01-14T16:36:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ1MjU5Mg==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366452592", "bodyText": "I think we can do this in a few more places also.", "author": "HashEngineering", "createdAt": "2020-01-14T16:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2MjAwMA==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366462000", "bodyText": "be53292", "author": "HashEngineering", "createdAt": "2020-01-14T17:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyOTYxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQzMzY1Mg==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366433652", "bodyText": "This can be replaced by simple seed.joinToString(\"  \")", "author": "tomasz-ludek", "createdAt": "2020-01-14T16:17:36Z", "path": "wallet/src/de/schildbach/wallet/ui/ViewSeedActivity.kt", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2019 Dash Core Group\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package de.schildbach.wallet.ui\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.os.Bundle\n+import de.schildbach.wallet.WalletApplication\n+import de.schildbach.wallet_test.R\n+import kotlinx.android.synthetic.main.activity_view_seed.*\n+\n+/**\n+ * @author Eric Britten\n+ */\n+class ViewSeedActivity : BaseMenuActivity() {\n+\n+    companion object {\n+\n+        private const val EXTRA_SEED = \"extra_seed\"\n+\n+        fun createIntent(context: Context, seed: Array<String>): Intent {\n+            val intent = Intent(context, ViewSeedActivity::class.java)\n+            intent.putExtra(EXTRA_SEED, seed)\n+            return intent\n+        }\n+    }\n+\n+    override fun getLayoutId(): Int {\n+        return R.layout.activity_view_seed\n+    }\n+\n+    private var seed: Array<String> = arrayOf()\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        //setContentView(R.layout.activity_verify_seed)\n+\n+        seed = if (intent.extras?.containsKey(EXTRA_SEED)!!) {\n+            intent.extras!!.getStringArray(EXTRA_SEED)!!\n+        } else {\n+            throw IllegalStateException(\"This activity needs to receive a String[] Intent Extra \" +\n+                    \"containing the recovery seed.\")\n+        }\n+\n+        val sb = StringBuilder(12)\n+        seed.forEach {\n+            sb.append(\"$it  \")\n+        }", "originalCommit": "c252f3fd4e99de0e3348177fb214b6ec0fd474e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0Nzg2MA==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366447860", "bodyText": "Excellent.", "author": "HashEngineering", "createdAt": "2020-01-14T16:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQzMzY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2MTg2MQ==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366461861", "bodyText": "e556361", "author": "HashEngineering", "createdAt": "2020-01-14T17:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQzMzY1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQzNjI3MQ==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366436271", "bodyText": "You can add the @JvmStatic annotation to createIntent(context: Context, seed: Array<String>) method definition in VerifySeedActivity class in order to be able to simply call VerifySeedActivity.createIntent(this, seedArray) without Companion.", "author": "tomasz-ludek", "createdAt": "2020-01-14T16:21:48Z", "path": "wallet/src/de/schildbach/wallet/ui/WalletActivity.java", "diffHunk": "@@ -529,7 +531,31 @@ public void handleRestoreWallet() {\n     }\n \n     public void handleBackupWalletToSeed() {\n-        BackupWalletToSeedDialogFragment.show(getSupportFragmentManager());\n+        handleVerifySeed();\n+    }\n+\n+    private void handleVerifySeed() {\n+        final int AUTH_REQUEST_CODE_VIEW_RECOVERYPHRASE = 1;\n+        DecryptSeedSharedModel decryptSeedSharedModel = ViewModelProviders.of(this).get(DecryptSeedSharedModel.class);\n+        decryptSeedSharedModel.getOnDecryptSeedCallback().observe(this, new Observer<Pair<Integer, DeterministicSeed>>() {\n+\n+            @Override\n+            public void onChanged(Pair<Integer, DeterministicSeed> data) {\n+                switch (data.getFirst()) {\n+                    case AUTH_REQUEST_CODE_VIEW_RECOVERYPHRASE:\n+                        startVerifySeedActivity(data.getSecond());\n+                        break;\n+                }\n+            }\n+        });\n+        DecryptSeedWithPinDialog.show(this, AUTH_REQUEST_CODE_VIEW_RECOVERYPHRASE);\n+    }\n+\n+    private void startVerifySeedActivity(DeterministicSeed seed) {\n+        List<String> mnemonicCode = seed.getMnemonicCode();\n+        String [] seedArray = mnemonicCode.toArray(new String[0]);\n+        Intent intent = VerifySeedActivity.Companion.createIntent(this, seedArray);", "originalCommit": "c252f3fd4e99de0e3348177fb214b6ec0fd474e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0NjIxMw==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366446213", "bodyText": "Thank you for this idea.", "author": "HashEngineering", "createdAt": "2020-01-14T16:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQzNjI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2MTcyMA==", "url": "https://github.com/dashevo/dash-wallet/pull/300#discussion_r366461720", "bodyText": "82fc9d1", "author": "HashEngineering", "createdAt": "2020-01-14T17:05:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQzNjI3MQ=="}], "type": "inlineReview"}, {"oid": "e556361cfcd7154f9350d4f80be30a668393726b", "url": "https://github.com/dashevo/dash-wallet/commit/e556361cfcd7154f9350d4f80be30a668393726b", "message": "Simplify string concat", "committedDate": "2020-01-14T16:58:56Z", "type": "commit"}, {"oid": "82fc9d131051506372c3c9f69ac6bb890066e896", "url": "https://github.com/dashevo/dash-wallet/commit/82fc9d131051506372c3c9f69ac6bb890066e896", "message": "Make createIntent static", "committedDate": "2020-01-14T16:59:36Z", "type": "commit"}, {"oid": "be532926bb667e8d4b425ba9f5b1375c7f808232", "url": "https://github.com/dashevo/dash-wallet/commit/be532926bb667e8d4b425ba9f5b1375c7f808232", "message": "Refactor CheckPinDialog to eliminate need to duplicate some methods in child classes", "committedDate": "2020-01-14T17:01:30Z", "type": "commit"}, {"oid": "ba00bab0a19e860001eacdef0e0e55eafc87e869", "url": "https://github.com/dashevo/dash-wallet/commit/ba00bab0a19e860001eacdef0e0e55eafc87e869", "message": "Modify initSharedModel() to take a FragmentActivity parameter", "committedDate": "2020-01-14T17:42:59Z", "type": "commit"}]}