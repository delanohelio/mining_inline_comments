{"pr_number": 528, "pr_title": "DashPay: Profile Picture | Select Picture", "pr_createdAt": "2020-10-13T02:14:46Z", "pr_url": "https://github.com/dashevo/dash-wallet/pull/528", "timeline": [{"oid": "17ae8048707e20a8e07667c8c2e5918fb256645d", "url": "https://github.com/dashevo/dash-wallet/commit/17ae8048707e20a8e07667c8c2e5918fb256645d", "message": "Add picture selection and save the path", "committedDate": "2020-10-13T02:11:30Z", "type": "commit"}, {"oid": "1dfcb0ff7df947c473ce427fa90384cc2f7c203f", "url": "https://github.com/dashevo/dash-wallet/commit/1dfcb0ff7df947c473ce427fa90384cc2f7c203f", "message": "close the choose dialog after clicking, save the taken picture", "committedDate": "2020-10-13T21:19:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzODQzMQ==", "url": "https://github.com/dashevo/dash-wallet/pull/528#discussion_r504338431", "bodyText": ".apply() needs to be called to save the image path to preferences.", "author": "sambarboza", "createdAt": "2020-10-14T00:51:47Z", "path": "common/src/main/java/org/dash/wallet/common/Configuration.java", "diffHunk": "@@ -431,7 +432,15 @@ public long getLastSeenNotificationTime() {\n         return prefs.getLong(PREFS_LAST_SEEN_NOTIFICATION_TIME, 0);\n     }\n \n-    public void setPrefsLastSeenNotificationTime(long lastSeenNotificationTime) {\n+    public void setLastSeenNotificationTime(long lastSeenNotificationTime) {\n         prefs.edit().putLong(PREFS_LAST_SEEN_NOTIFICATION_TIME, lastSeenNotificationTime).apply();\n     }\n+\n+    public void setLocalProfilePictureUri(String picturePath) {\n+        prefs.edit().putString(PREFS_KEY_LOCAL_PROFILE_PICTURE_URI, picturePath);", "originalCommit": "1dfcb0ff7df947c473ce427fa90384cc2f7c203f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM1NDUzNw==", "url": "https://github.com/dashevo/dash-wallet/pull/528#discussion_r504354537", "bodyText": "Fixed here: 649f009", "author": "HashEngineering", "createdAt": "2020-10-14T01:55:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzODQzMQ=="}], "type": "inlineReview"}, {"oid": "649f0091a5dc9d8caaf4046096c9d15993998ff3", "url": "https://github.com/dashevo/dash-wallet/commit/649f0091a5dc9d8caaf4046096c9d15993998ff3", "message": "Configuration: add .apply()", "committedDate": "2020-10-14T01:55:06Z", "type": "commit"}, {"oid": "533ae5cdc9a49614dc377f59e2e4e342def31cbe", "url": "https://github.com/dashevo/dash-wallet/commit/533ae5cdc9a49614dc377f59e2e4e342def31cbe", "message": "Fixed the crash when taking picture on KitKat. (#529)\n\nImprove the way of storing profile picture in the app", "committedDate": "2020-10-15T23:14:03Z", "type": "commit"}, {"oid": "4de474d38ec3508ca8d75c8c837cbe0a6c6a6189", "url": "https://github.com/dashevo/dash-wallet/commit/4de474d38ec3508ca8d75c8c837cbe0a6c6a6189", "message": "Fix permissions bug with taking a picture", "committedDate": "2020-10-15T23:15:18Z", "type": "commit"}, {"oid": "d006090e401bdbba812adc882667cd4352a2bbae", "url": "https://github.com/dashevo/dash-wallet/commit/d006090e401bdbba812adc882667cd4352a2bbae", "message": "remove unused code", "committedDate": "2020-10-15T23:20:57Z", "type": "commit"}, {"oid": "9e77c31f5a7ea1432d9c51977401e5dbdee9e8c9", "url": "https://github.com/dashevo/dash-wallet/commit/9e77c31f5a7ea1432d9c51977401e5dbdee9e8c9", "message": "PlatformRepo: Only update the local copy of a Profile if it was updated on Platform", "committedDate": "2020-10-19T15:15:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4MzIwOA==", "url": "https://github.com/dashevo/dash-wallet/pull/528#discussion_r508983208", "bodyText": "I think the ger... is a typo?", "author": "sambarboza", "createdAt": "2020-10-21T04:32:26Z", "path": "wallet/src/de/schildbach/wallet/ui/EditProfileActivity.kt", "diffHunk": "@@ -177,4 +221,115 @@ class EditProfileActivity : BaseMenuActivity() {\n         this.isEditing = isEditing\n     }\n \n+    private fun takePictureWithPermission() {\n+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED) {\n+            takePicture()\n+        } else {\n+            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.CAMERA), REQUEST_CODE_TAKE_PICTURE_PERMISSION)\n+        }\n+    }\n+\n+    private fun choosePictureWithPermission() {\n+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\n+            choosePicture()\n+        } else {\n+            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE), REQUEST_CODE_CHOOSE_PICTURE_PERMISSION)\n+        }\n+    }\n+\n+    private fun selectImage(context: Context) {\n+        SelectProfilePictureDialog.createDialog()\n+                .show(supportFragmentManager, \"selectPictureDialog\");\n+    }\n+\n+    private fun choosePicture() {\n+        if (editProfileViewModel.createTmpPictureFile()) {\n+            val pickPhoto = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)\n+            startActivityForResult(pickPhoto, REQUEST_CODE_URI)\n+        } else {\n+            Toast.makeText(this, \"Unable to create temporary file\", Toast.LENGTH_LONG).show()\n+        }\n+    }\n+\n+    private fun takePicture() {\n+        if (editProfileViewModel.createTmpPictureFile()) {\n+            dispatchTakePictureIntent()\n+        } else {\n+            Toast.makeText(this, \"Unable to create temporary file\", Toast.LENGTH_LONG).show()\n+        }\n+    }\n+\n+    private fun dispatchTakePictureIntent() {\n+        Intent(MediaStore.ACTION_IMAGE_CAPTURE).also { takePictureIntent ->\n+            // Ensure that there's a camera activity to handle the intent\n+            takePictureIntent.resolveActivity(packageManager)?.also {\n+                val tmpFileUri = gerFileUri(editProfileViewModel.tmpPictureFile)\n+                takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, tmpFileUri)\n+                if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.LOLLIPOP) {\n+                    // to avoid 'SecurityException: Permission Denial' on KitKat\n+                    takePictureIntent.clipData = ClipData.newRawUri(\"\", tmpFileUri)\n+                    takePictureIntent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION or Intent.FLAG_GRANT_READ_URI_PERMISSION)\n+                }\n+                startActivityForResult(takePictureIntent, REQUEST_CODE_IMAGE)\n+            }\n+        }\n+    }\n+\n+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n+        super.onActivityResult(requestCode, resultCode, data)\n+        if (resultCode != RESULT_CANCELED) {\n+            when (requestCode) {\n+                REQUEST_CODE_IMAGE -> {\n+                    if (resultCode == RESULT_OK) {\n+                        // picture saved in editProfileViewModel.profilePictureTmpFile\n+                        editProfileViewModel.onTmpPictureReadyForEditEvent.call(editProfileViewModel.tmpPictureFile)\n+                    }\n+                }\n+                REQUEST_CODE_URI -> if (resultCode == RESULT_OK && data != null) {\n+                    val selectedImage: Uri? = data.data\n+                    val filePathColumn = arrayOf(MediaStore.Images.Media.DATA)\n+                    if (selectedImage != null) {\n+                        val cursor: Cursor? = contentResolver.query(selectedImage,\n+                                filePathColumn, null, null, null)\n+                        if (cursor != null) {\n+                            cursor.moveToFirst()\n+                            val columnIndex: Int = cursor.getColumnIndex(filePathColumn[0])\n+                            val picturePath: String = cursor.getString(columnIndex)\n+                            editProfileViewModel.saveAsProfilePictureTmp(picturePath)\n+                            cursor.close()\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    private fun cropProfilePicture() {\n+        val tmpPictureFile = editProfileViewModel.tmpPictureFile\n+        //TODO: this line is for debugging - show the selected image on the screen\n+        dashpayUserAvatar.setImageURI(gerFileUri(tmpPictureFile))\n+        editProfileViewModel.saveTmpAsProfilePicture()\n+    }\n+\n+    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {\n+        when (requestCode) {\n+            REQUEST_CODE_TAKE_PICTURE_PERMISSION -> {\n+                when {\n+                    grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED -> takePicture()\n+                    else -> takePictureWithPermission()\n+                }\n+            }\n+            REQUEST_CODE_CHOOSE_PICTURE_PERMISSION -> {\n+                when {\n+                    grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED -> choosePicture()\n+                    else -> choosePictureWithPermission()\n+                }\n+            }\n+            else -> super.onRequestPermissionsResult(requestCode, permissions, grantResults)\n+        }\n+    }\n+\n+    private fun gerFileUri(file: File): Uri {", "originalCommit": "9e77c31f5a7ea1432d9c51977401e5dbdee9e8c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc2Nzk1OA==", "url": "https://github.com/dashevo/dash-wallet/pull/528#discussion_r509767958", "bodyText": "Fixed here:  206c8d1", "author": "HashEngineering", "createdAt": "2020-10-21T22:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4MzIwOA=="}], "type": "inlineReview"}, {"oid": "206c8d1fd6aee934a93541071dbfbd893a4c6004", "url": "https://github.com/dashevo/dash-wallet/commit/206c8d1fd6aee934a93541071dbfbd893a4c6004", "message": "rename gerFileUri to getFileUri", "committedDate": "2020-10-21T13:41:25Z", "type": "commit"}, {"oid": "09464c72325a7d2502177ccca38082adac87cfd3", "url": "https://github.com/dashevo/dash-wallet/commit/09464c72325a7d2502177ccca38082adac87cfd3", "message": "Merge branch 'evonet-develop' into dashpay-choose-image", "committedDate": "2020-10-23T15:35:41Z", "type": "commit"}, {"oid": "a11a311bc263281d74070d30ccf3e45043101449", "url": "https://github.com/dashevo/dash-wallet/commit/a11a311bc263281d74070d30ccf3e45043101449", "message": "rename button", "committedDate": "2020-10-23T19:00:04Z", "type": "commit"}]}