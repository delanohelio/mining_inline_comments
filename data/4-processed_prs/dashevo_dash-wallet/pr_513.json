{"pr_number": 513, "pr_title": "Restore Identity from First Public Key", "pr_createdAt": "2020-09-24T16:10:18Z", "pr_url": "https://github.com/dashevo/dash-wallet/pull/513", "timeline": [{"oid": "1ed67f2c962af60e092d0243babce2ce154bcdf0", "url": "https://github.com/dashevo/dash-wallet/commit/1ed67f2c962af60e092d0243babce2ce154bcdf0", "message": "Use 0.15-SNAPSHOT for dpp, dashpay, dapi-client", "committedDate": "2020-09-18T18:34:19Z", "type": "commit"}, {"oid": "1354fcad8fdb06104a5303fe84ce25ed9b42bd2a", "url": "https://github.com/dashevo/dash-wallet/commit/1354fcad8fdb06104a5303fe84ce25ed9b42bd2a", "message": "Update for DPP 0.15, new dpns/dashpay contracts, database tables", "committedDate": "2020-09-19T01:58:36Z", "type": "commit"}, {"oid": "f9d262ea38241110aca09e3b5d25206154fa6f46", "url": "https://github.com/dashevo/dash-wallet/commit/f9d262ea38241110aca09e3b5d25206154fa6f46", "message": "Set unique property on username", "committedDate": "2020-09-19T17:14:07Z", "type": "commit"}, {"oid": "1deafa3b404b19722ab479bda10ac489492ec1ff", "url": "https://github.com/dashevo/dash-wallet/commit/1deafa3b404b19722ab479bda10ac489492ec1ff", "message": "Handle updated profiles from Platform and refactor", "committedDate": "2020-09-22T22:19:02Z", "type": "commit"}, {"oid": "090df0b4bd6fb6d3964fa5c8404f63af66b27d87", "url": "https://github.com/dashevo/dash-wallet/commit/090df0b4bd6fb6d3964fa5c8404f63af66b27d87", "message": "BlockchainIdentityData:  Add userId field\n\nThis allows loading an identity before the credit funding\ntransaction is found.", "committedDate": "2020-09-24T15:58:49Z", "type": "commit"}, {"oid": "e5601c2525486b8b0ae8b2d07b29dc4a9c82af81", "url": "https://github.com/dashevo/dash-wallet/commit/e5601c2525486b8b0ae8b2d07b29dc4a9c82af81", "message": "BlockchainState: Notification shows sync percentage", "committedDate": "2020-09-24T15:58:50Z", "type": "commit"}, {"oid": "ff9b5a7e42de88a5a8197f874c80744b21490613", "url": "https://github.com/dashevo/dash-wallet/commit/ff9b5a7e42de88a5a8197f874c80744b21490613", "message": "BlockchainState: Notification shows sync percentage", "committedDate": "2020-09-24T15:58:50Z", "type": "commit"}, {"oid": "db91501fa06211eca89dc7e7bb9d7aa44cef3892", "url": "https://github.com/dashevo/dash-wallet/commit/db91501fa06211eca89dc7e7bb9d7aa44cef3892", "message": "Refactor database clear when restarting/wiping the app", "committedDate": "2020-09-24T15:58:50Z", "type": "commit"}, {"oid": "927595c9418a37bce0d6d6630224e2d1652de695", "url": "https://github.com/dashevo/dash-wallet/commit/927595c9418a37bce0d6d6630224e2d1652de695", "message": "Check for identity before syncing chain.", "committedDate": "2020-09-24T16:02:55Z", "type": "commit"}, {"oid": "289be3cf59ae3d4417b2b310b54256a87cd2cf68", "url": "https://github.com/dashevo/dash-wallet/commit/289be3cf59ae3d4417b2b310b54256a87cd2cf68", "message": "Add database json file and handle the cftx after the fact", "committedDate": "2020-09-24T16:03:45Z", "type": "commit"}, {"oid": "4b5b1c88f387dd4c2fc19d3e184806fdac8b923d", "url": "https://github.com/dashevo/dash-wallet/commit/4b5b1c88f387dd4c2fc19d3e184806fdac8b923d", "message": "catch profile fetching exception and fix getIdentityByPublicKey", "committedDate": "2020-09-25T18:33:47Z", "type": "commit"}, {"oid": "36b7be6b44b24a506783648c4eeeb58fb942c023", "url": "https://github.com/dashevo/dash-wallet/commit/36b7be6b44b24a506783648c4eeeb58fb942c023", "message": "Change method of submitting bloom filters", "committedDate": "2020-09-25T18:34:35Z", "type": "commit"}, {"oid": "c1a8d002665d6365f421b5b67cf29dd9cb7a3d69", "url": "https://github.com/dashevo/dash-wallet/commit/c1a8d002665d6365f421b5b67cf29dd9cb7a3d69", "message": "Fix recovery of passphrase", "committedDate": "2020-09-29T16:23:40Z", "type": "commit"}, {"oid": "cc9449946f8dfd05c38212706579e6d22a14952a", "url": "https://github.com/dashevo/dash-wallet/commit/cc9449946f8dfd05c38212706579e6d22a14952a", "message": "Refactor DashPayProfile", "committedDate": "2020-09-29T16:37:21Z", "type": "commit"}, {"oid": "5964f05eb56c7d42d01f1e1b5d4d084f4f6d1c50", "url": "https://github.com/dashevo/dash-wallet/commit/5964f05eb56c7d42d01f1e1b5d4d084f4f6d1c50", "message": "Merge branch 'evonet-develop' of https://github.com/dashevo/dash-wallet into dpp-0.15", "committedDate": "2020-09-29T18:21:39Z", "type": "commit"}, {"oid": "15f7ef210c3b2a4b710726c52c6f46a0350f60da", "url": "https://github.com/dashevo/dash-wallet/commit/15f7ef210c3b2a4b710726c52c6f46a0350f60da", "message": "Merge branch 'dpp-0.15' of https://github.com/dashevo/dash-wallet into chain-sync-phase-3a", "committedDate": "2020-09-29T18:45:40Z", "type": "commit"}, {"oid": "858f89f01c04abec252b520b13ffd642d7c7f46e", "url": "https://github.com/dashevo/dash-wallet/commit/858f89f01c04abec252b520b13ffd642d7c7f46e", "message": "CreateIdentityService: remove commented code", "committedDate": "2020-09-30T15:25:44Z", "type": "commit"}, {"oid": "5bbc6bf4fb3f25285938415403ae3386297e3658", "url": "https://github.com/dashevo/dash-wallet/commit/5bbc6bf4fb3f25285938415403ae3386297e3658", "message": "PlatformRepo: Fix loading of blockchainIdentity from Database", "committedDate": "2020-09-30T15:27:02Z", "type": "commit"}, {"oid": "66f955eca73ab75af529904f6b80e91a799994e5", "url": "https://github.com/dashevo/dash-wallet/commit/66f955eca73ab75af529904f6b80e91a799994e5", "message": "ReceiveInfoView: Use observer to get profile information\n\nFixes crash", "committedDate": "2020-09-30T15:27:56Z", "type": "commit"}, {"oid": "1b86ba48be297898cb5cee2e7d97971394f4fb20", "url": "https://github.com/dashevo/dash-wallet/commit/1b86ba48be297898cb5cee2e7d97971394f4fb20", "message": "MoreFragment: Show the user profile only if the user has registered on PlatformRepo.kt\n\nThis resolves a crash when accessing the More menu before registring a username", "committedDate": "2020-09-30T22:33:25Z", "type": "commit"}, {"oid": "67bc825f3c23af4148ea4a932cabcec43150b9cc", "url": "https://github.com/dashevo/dash-wallet/commit/67bc825f3c23af4148ea4a932cabcec43150b9cc", "message": "PlatformRepo: Modify blockchainIdentity creation depending user registration state", "committedDate": "2020-09-30T22:34:42Z", "type": "commit"}, {"oid": "983529e01a4381dc89932979bb018a948a197c03", "url": "https://github.com/dashevo/dash-wallet/commit/983529e01a4381dc89932979bb018a948a197c03", "message": "Merge branch 'evonet-develop' of https://github.com/dashevo/dash-wallet into chain-sync-phase-3a", "committedDate": "2020-09-30T22:47:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg1OTYxMw==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497859613", "bodyText": "I needed a way to get the LifeCycleOwner of a View that is derived from a ConstraintLayout for an observer.", "author": "HashEngineering", "createdAt": "2020-09-30T23:42:04Z", "path": "wallet/src/de/schildbach/wallet/Extensions.kt", "diffHunk": "@@ -0,0 +1,35 @@\n+package de.schildbach.wallet\n+\n+import android.content.Context\n+import android.content.ContextWrapper\n+import androidx.fragment.app.FragmentActivity\n+import androidx.lifecycle.LifecycleOwner\n+\n+//\n+// https://stackoverflow.com/questions/49075413/easy-way-to-get-current-activity-fragment-lifecycleowner-from-within-view\n+//\n+\n+fun Context.fragmentActivity(): FragmentActivity? {\n+    var curContext = this\n+    var maxDepth = 20\n+    while (--maxDepth > 0 && curContext !is FragmentActivity) {\n+        curContext = (curContext as ContextWrapper).baseContext\n+    }\n+    return if(curContext is FragmentActivity)\n+        curContext\n+    else\n+        null\n+}\n+\n+fun Context.lifecycleOwner(): LifecycleOwner? {\n+    var curContext = this\n+    var maxDepth = 20\n+    while (maxDepth-- > 0 && curContext !is LifecycleOwner) {\n+        curContext = (curContext as ContextWrapper).baseContext\n+    }\n+    return if (curContext is LifecycleOwner) {\n+        curContext as LifecycleOwner\n+    } else {\n+        null\n+    }\n+}", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg1OTk5Ng==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497859996", "bodyText": "Not sure if FORCE_SEND_FOR_REFRESH is required vs SEND_IF_CHANGED, but that is how most of the testing was done.", "author": "HashEngineering", "createdAt": "2020-09-30T23:43:34Z", "path": "wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java", "diffHunk": "@@ -904,7 +904,7 @@ public int onStartCommand(final Intent intent, final int flags, final int startI\n             } else if(BlockchainService.ACTION_RESET_BLOOMFILTERS.equals(action)) {\n                 if (peerGroup != null) {\n                     log.info(\"recalculating bloom filters\");\n-                    peerGroup.recalculateFastCatchupAndFilter(PeerGroup.FilterRecalculateMode.SEND_IF_CHANGED);\n+                    peerGroup.recalculateFastCatchupAndFilter(PeerGroup.FilterRecalculateMode.FORCE_SEND_FOR_REFRESH);", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MDE5Mg==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497860192", "bodyText": "This is used by the Notification for the foreground service.", "author": "HashEngineering", "createdAt": "2020-09-30T23:44:16Z", "path": "wallet/res/values/strings.xml", "diffHunk": "@@ -8,7 +8,7 @@\n     <string name=\"blockchain_state_progress_days\">%1$s, %2$d days behind</string>\n     <string name=\"blockchain_state_progress_weeks\">%1$s, %2$d weeks behind</string>\n     <string name=\"blockchain_state_progress_months\">%1$s, %2$d months behind</string>\n-    <string name=\"blockchain_state_progress_downloading\">Synchronizing with network</string>\n+    <string name=\"blockchain_state_progress_downloading\">Synchronizing with network (%1$s%%)</string>", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MDMzNQ==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497860335", "bodyText": "To display the percent complete like this (5%)", "author": "HashEngineering", "createdAt": "2020-09-30T23:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MDE5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MDY1Mw==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497860653", "bodyText": "We need to store the userId because if we are restoring a recovery phrase, we won't have the credit funding transaction until later in the sync process.", "author": "HashEngineering", "createdAt": "2020-09-30T23:45:46Z", "path": "wallet/src/de/schildbach/wallet/data/BlockchainIdentityData.kt", "diffHunk": "@@ -31,6 +31,7 @@ import org.dashevo.dpp.identity.IdentityPublicKey\n data class BlockchainIdentityData(var creationState: CreationState = CreationState.NONE,\n                                   var creationStateErrorMessage: String?,\n                                   var username: String?,\n+                                  var userId: String?,", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MDgyNw==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497860827", "bodyText": "Prevents crash if no user is registered on the More Screen.", "author": "HashEngineering", "createdAt": "2020-09-30T23:46:14Z", "path": "wallet/src/de/schildbach/wallet/ui/MoreFragment.kt", "diffHunk": "@@ -66,7 +67,7 @@ class MoreFragment : Fragment(R.layout.activity_more) {\n         }\n \n         val blockchainIdentity = PlatformRepo.getInstance().getBlockchainIdentity()\n-        if (blockchainIdentity != null) {\n+        if (blockchainIdentity != null && blockchainIdentity.registrationStatus == BlockchainIdentity.RegistrationStatus.REGISTERED) {", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MTE1Mg==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497861152", "bodyText": "since the userId is saved in the database, we don't need to load it from the wallet.", "author": "HashEngineering", "createdAt": "2020-09-30T23:47:22Z", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -180,14 +187,13 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n      * @param text The beginning of a username to search for\n      * @return\n      */\n+\n     @Throws(Exception::class)\n     suspend fun searchUsernames(text: String, onlyExactUsername: Boolean = false): List<UsernameSearchResult> {\n         val wallet = walletApplication.wallet\n         val blockchainIdentityData = blockchainIdentityDataDao.load()!!\n-        //We don't check for nullity here because if it's null, it'll be thrown, captured below\n-        //and sent as a Resource.error\n-        val creditFundingTx = wallet.getCreditFundingTransaction(wallet.getTransaction(blockchainIdentityData.creditFundingTxId))\n-        val userId = creditFundingTx.creditBurnIdentityIdentifier.toStringBase58()\n+        val userId = blockchainIdentity.uniqueIdString", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MTQ5Mw==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497861493", "bodyText": "we return the blockchainIdentity because this is during the registration process and there is no other data to load.", "author": "HashEngineering", "createdAt": "2020-09-30T23:48:52Z", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -576,8 +583,20 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n \n     fun initBlockchainIdentity(blockchainIdentityData: BlockchainIdentityData, wallet: Wallet): BlockchainIdentity {\n         val creditFundingTransaction = blockchainIdentityData.findCreditFundingTransaction(wallet)\n-        if (creditFundingTransaction != null) {\n-            return BlockchainIdentity(platform, creditFundingTransaction, wallet).apply {\n+        val blockchainIdentity = if (creditFundingTransaction != null) {\n+            BlockchainIdentity(platform, creditFundingTransaction, wallet)\n+        } else {\n+            val blockchainIdentity = BlockchainIdentity(platform, 0, wallet)\n+            if (blockchainIdentityData.creationState >= BlockchainIdentityData.CreationState.DONE) {\n+                blockchainIdentity.apply {\n+                    uniqueId = Sha256Hash.wrap(Base58.decode(blockchainIdentityData.userId))\n+                }\n+            } else {\n+                return blockchainIdentity", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MTYyNA==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497861624", "bodyText": "oops.  left a comment", "author": "HashEngineering", "createdAt": "2020-09-30T23:49:21Z", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -719,14 +739,22 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n             }\n \n             if (!platform.hasApp(\"dashpay\")) {\n+                log.info(\"update contacts not completed because there is no dashpay contract\")\n                 return\n             }\n \n             val blockchainIdentityData = blockchainIdentityDataDao.load() ?: return\n             if (blockchainIdentityData.creationState < BlockchainIdentityData.CreationState.DONE) {\n+                log.info(\"update contacts not completed username registration/recovery is not complete\")\n                 return\n             }\n-            val userId = blockchainIdentityData.getIdentity(walletApplication.wallet) ?: return\n+\n+            if (blockchainIdentity == null) {\n+                log.info(\"update contacts not completed: blockchainIdentity has not been initialized\")\n+            }\n+\n+            val userId = blockchainIdentity.uniqueIdString!! //blockchainIdentityData!!.getIdentity(walletApplication.wallet) ?: return", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MTgyNQ==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497861825", "bodyText": "This was moved up in case there is an exception when processing profiles.", "author": "HashEngineering", "createdAt": "2020-09-30T23:50:00Z", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -795,6 +823,13 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n                 }\n             }\n \n+            // If new keychains were added to the wallet, then update the bloom filters\n+            if (addedContact) {\n+                val intent = Intent(BlockchainService.ACTION_RESET_BLOOMFILTERS, null, walletApplication,\n+                        BlockchainServiceImpl::class.java)\n+                walletApplication.startService(intent)\n+            }\n+", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MTk4NA==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497861984", "bodyText": "comment", "author": "HashEngineering", "createdAt": "2020-09-30T23:50:36Z", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -959,9 +995,48 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n             preDownloadBlocks.set(true)\n             preDownloadBlocksFuture = future\n             log.info(\"PreDownloadBlocks: starting\")\n+\n+            //first check to see if there is a blockchain identity\n+            if (blockchainIdentityDataDao.load() == null) {\n+                log.info(\"PreDownloadBlocks: checking for existing associated identity\")\n+\n+                //val fundingKey = walletApplication.wallet.watchingKey\n+                val identity = getIdentityFromPublicKeyId()\n+                //log.info(\"key hash: ${fundingKey.pubKeyHash.toHexString()}, identityBytes: ${identityBytes != null}\")\n+                if (identity != null) {\n+                    log.info(\"PreDownloadBlocks: initiate recovery of existing identity ${identity.id}\")\n+                    ContextCompat.startForegroundService(walletApplication, createIntentForRestore(walletApplication, identity.id))\n+                    return@launch\n+                } else {\n+                    log.info(\"PreDownloadBlocks: no existing identity found\")\n+                }\n+            }\n+\n+            // update contacts, profiles and other platform data\n             if (!updatingContacts.get()) {\n                 updateContactRequests()\n             }\n         }\n     }\n+\n+    /**\n+        This is used by java code, outside of coroutines\n+     */\n+    fun clearDatabases() {\n+        val database = AppDatabase.getAppDatabase()\n+        database.blockchainIdentityDataDaoAsync().clear()\n+        database.dashPayProfileDaoAsync().clear()\n+        database.dashPayContactRequestDaoAsync().clear()\n+\n+        // TODO: how do we make the blockchainIdentity == null\n+    }\n+\n+    fun getIdentityFromPublicKeyId(): Identity? {\n+        val fundingKey = walletApplication.wallet.blockchainIdentityKeyChain.watchingKey//currentAuthenticationKey(AuthenticationKeyChain.KeyChainType.BLOCKCHAIN_IDENTITY)", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MjA3OA==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r497862078", "bodyText": "extra comments", "author": "HashEngineering", "createdAt": "2020-09-30T23:50:53Z", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -959,9 +995,48 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n             preDownloadBlocks.set(true)\n             preDownloadBlocksFuture = future\n             log.info(\"PreDownloadBlocks: starting\")\n+\n+            //first check to see if there is a blockchain identity\n+            if (blockchainIdentityDataDao.load() == null) {\n+                log.info(\"PreDownloadBlocks: checking for existing associated identity\")\n+\n+                //val fundingKey = walletApplication.wallet.watchingKey\n+                val identity = getIdentityFromPublicKeyId()\n+                //log.info(\"key hash: ${fundingKey.pubKeyHash.toHexString()}, identityBytes: ${identityBytes != null}\")", "originalCommit": "983529e01a4381dc89932979bb018a948a197c03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ebb810f968f2392ed107d6d6f7293d6dbbea4bdd", "url": "https://github.com/dashevo/dash-wallet/commit/ebb810f968f2392ed107d6d6f7293d6dbbea4bdd", "message": "PlatformRepo.kt: Reformat, remove comments", "committedDate": "2020-10-05T19:24:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NTc3MQ==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r500465771", "bodyText": "The defaultValue argument is not being used.", "author": "sambarboza", "createdAt": "2020-10-06T17:16:58Z", "path": "wallet/src/de/schildbach/wallet/data/DashPayProfile.kt", "diffHunk": "@@ -16,18 +16,28 @@ data class DashPayProfile(@PrimaryKey val userId: String,\n                           val createdAt: Long = 0,\n                           val updatedAt: Long = 0) : Parcelable {\n     companion object {\n-        fun fromDocument(document: Document, username: String): DashPayProfile? {\n-            return try {\n-                DashPayProfile(document.ownerId,\n-                        username,\n-                        document.data[\"displayName\"] as String,\n-                        document.data[\"publicMessage\"] as String,\n-                        document.data[\"avatarUrl\"] as String,\n-                        if (document.createdAt != null) document.createdAt!! else 0L,\n-                        if (document.updatedAt != null) document.updatedAt!! else 0L)\n-            } catch (e: Exception) {\n-                null\n+\n+        private fun getField(document: Document, field: String, defaultValue: String = \"\"): String {", "originalCommit": "ebb810f968f2392ed107d6d6f7293d6dbbea4bdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4ODAzMA==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r500488030", "bodyText": "oh wow, good catch.", "author": "HashEngineering", "createdAt": "2020-10-06T17:53:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NTc3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwOTE2NQ==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r500509165", "bodyText": "e994500", "author": "HashEngineering", "createdAt": "2020-10-06T18:27:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NTc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3MDcxNA==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r500470714", "bodyText": "Since we have a single database, shouldn't this be called clearDatabase (in singular) or clearTables?", "author": "sambarboza", "createdAt": "2020-10-06T17:25:04Z", "path": "wallet/src/de/schildbach/wallet/ui/dashpay/PlatformRepo.kt", "diffHunk": "@@ -959,9 +995,45 @@ class PlatformRepo private constructor(val walletApplication: WalletApplication)\n             preDownloadBlocks.set(true)\n             preDownloadBlocksFuture = future\n             log.info(\"PreDownloadBlocks: starting\")\n+\n+            //first check to see if there is a blockchain identity\n+            if (blockchainIdentityDataDao.load() == null) {\n+                log.info(\"PreDownloadBlocks: checking for existing associated identity\")\n+\n+                val identity = getIdentityFromPublicKeyId()\n+                if (identity != null) {\n+                    log.info(\"PreDownloadBlocks: initiate recovery of existing identity ${identity.id}\")\n+                    ContextCompat.startForegroundService(walletApplication, createIntentForRestore(walletApplication, identity.id))\n+                    return@launch\n+                } else {\n+                    log.info(\"PreDownloadBlocks: no existing identity found\")\n+                }\n+            }\n+\n+            // update contacts, profiles and other platform data\n             if (!updatingContacts.get()) {\n                 updateContactRequests()\n             }\n         }\n     }\n+\n+    /**\n+    This is used by java code, outside of coroutines\n+\n+    This should not be a suspended method.\n+     */\n+    fun clearDatabases() {", "originalCommit": "ebb810f968f2392ed107d6d6f7293d6dbbea4bdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4ODgxNA==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r500488814", "bodyText": "yes, I will change this to clearDatabase()", "author": "HashEngineering", "createdAt": "2020-10-06T17:54:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3MDcxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwNTkxOQ==", "url": "https://github.com/dashevo/dash-wallet/pull/513#discussion_r500505919", "bodyText": "Fixed here: 4e26f7b", "author": "HashEngineering", "createdAt": "2020-10-06T18:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3MDcxNA=="}], "type": "inlineReview"}, {"oid": "4e26f7bbb9a9366b77163e89eab6dce58b538efa", "url": "https://github.com/dashevo/dash-wallet/commit/4e26f7bbb9a9366b77163e89eab6dce58b538efa", "message": "rename clearDatabases() to clearDatabase(), move database live data to PlatformRepo", "committedDate": "2020-10-06T18:20:12Z", "type": "commit"}, {"oid": "e9945008258db372d2274ab3ef48ee5a191b6b8f", "url": "https://github.com/dashevo/dash-wallet/commit/e9945008258db372d2274ab3ef48ee5a191b6b8f", "message": "Use defaultValue in getField", "committedDate": "2020-10-06T18:26:23Z", "type": "commit"}]}