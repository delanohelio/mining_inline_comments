{"pr_number": 5491, "pr_title": "Enhance conflict dialog", "pr_createdAt": "2020-02-19T10:54:00Z", "pr_url": "https://github.com/nextcloud/android/pull/5491", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTYzMg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381241632", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "author": "nextcloud-android-bot", "createdAt": "2020-02-19T11:46:07Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,129 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n+    public ConflictsResolveDialog() {\n+        // needed by Android\n+        existingFile = null;\n+        newFile = null;\n+        listener = null;\n+        user = null;\n+    }\n \n-    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener, boolean canKeepServer) {\n+    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener,\n+                                  OCFile file,\n+                                  OCUpload conflictUpload, Optional<User> user) {\n         this.listener = listener;\n-        this.canKeepServer = canKeepServer;\n+        this.existingFile = file;\n+        this.newFile = new File(conflictUpload.getLocalPath());\n+        this.user = user.get();\n+    }\n+\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+\n+        int color = ThemeUtils.primaryAccentColor(getContext());", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY0NA==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381241644", "bodyText": "Issue found: Useless parentheses.", "author": "nextcloud-android-bot", "createdAt": "2020-02-19T11:46:08Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,129 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n+    public ConflictsResolveDialog() {\n+        // needed by Android\n+        existingFile = null;\n+        newFile = null;\n+        listener = null;\n+        user = null;\n+    }\n \n-    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener, boolean canKeepServer) {\n+    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener,\n+                                  OCFile file,\n+                                  OCUpload conflictUpload, Optional<User> user) {\n         this.listener = listener;\n-        this.canKeepServer = canKeepServer;\n+        this.existingFile = file;\n+        this.newFile = new File(conflictUpload.getLocalPath());\n+        this.user = user.get();\n+    }\n+\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+\n+        int color = ThemeUtils.primaryAccentColor(getContext());\n+\n+        AlertDialog alertDialog = (AlertDialog) getDialog();\n+\n+        if (alertDialog == null || user == null) {\n+            Toast.makeText(getContext(), \"Failed to create conflict dialog\", Toast.LENGTH_LONG).show();\n+            return;\n+        }\n+\n+        alertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(color);\n+        alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE).setTextColor(color);\n+    }\n+\n+    @Override\n+    public void onCreate(@Nullable Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+\n+        if (savedInstanceState != null) {\n+            newFile = (File) savedInstanceState.getSerializable(\"file\");\n+            existingFile = savedInstanceState.getParcelable(\"ocfile\");\n+            user = savedInstanceState.getParcelable(\"user\");\n+            listener = (OnConflictDecisionMadeListener) getActivity();\n+        }\n+    }\n+\n+    @Override\n+    public void onSaveInstanceState(@NonNull Bundle outState) {\n+        super.onSaveInstanceState(outState);\n+\n+        outState.putSerializable(\"file\", newFile);\n+        outState.putParcelable(\"ocfile\", existingFile);\n+        outState.putParcelable(\"user\", user);\n     }\n \n     @NonNull\n     @Override\n     public Dialog onCreateDialog(Bundle savedInstanceState) {\n-        AlertDialog.Builder builder = new AlertDialog.Builder(requireActivity(), R.style.Theme_ownCloud_Dialog)\n-            .setIcon(R.drawable.ic_warning)\n-            .setTitle(R.string.conflict_title)\n-            .setMessage(getString(R.string.conflict_message))\n-            .setPositiveButton(R.string.conflict_use_local_version,\n-                               (dialog, which) -> {\n-                                   if (listener != null) {\n-                                       listener.conflictDecisionMade(Decision.KEEP_LOCAL);\n-                                   }\n-                               })\n-            .setNeutralButton(R.string.conflict_keep_both,\n-                              (dialog, which) -> {\n-                                  if (listener != null) {\n-                                      listener.conflictDecisionMade(Decision.KEEP_BOTH);\n-                                  }\n-                              });\n-\n-        if (this.canKeepServer) {\n-            builder.setNegativeButton(R.string.conflict_use_server_version,\n-                                      (dialog, which) -> {\n-                                          if (listener != null) {\n-                                              listener.conflictDecisionMade(Decision.KEEP_SERVER);\n-                                          }\n-                                      });\n-        }\n+        // Inflate the layout for the dialog\n+        LayoutInflater inflater = getActivity().getLayoutInflater();\n+        View view = inflater.inflate(R.layout.conflict_resolve_dialog, null);\n+        int accentColor = ThemeUtils.primaryAccentColor(getContext());\n+\n+        // Build the dialog\n+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n+        builder.setView(view)\n+            .setPositiveButton(R.string.common_ok, ((dialog, which) -> {\n+                if (listener != null) {\n+                    CheckBox newFile = view.findViewById(R.id.new_checkbox);\n+                    CheckBox existingFile = view.findViewById(R.id.existing_checkbox);\n+\n+                    if (newFile.isSelected() && existingFile.isSelected()) {\n+                        listener.conflictDecisionMade(Decision.KEEP_BOTH);\n+                    } else if (newFile.isSelected()) {\n+                        listener.conflictDecisionMade(Decision.KEEP_LOCAL);\n+                    } else {\n+                        listener.conflictDecisionMade(Decision.KEEP_SERVER);\n+                    }\n+                }\n+            }))\n+            .setNegativeButton(R.string.common_cancel, ((dialog, which) -> {", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY1MA==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381241650", "bodyText": "Issue found: Assigning an Object to null is a code smell.  Consider refactoring.", "author": "nextcloud-android-bot", "createdAt": "2020-02-19T11:46:10Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,129 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n+    public ConflictsResolveDialog() {\n+        // needed by Android\n+        existingFile = null;\n+        newFile = null;", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MTUyNQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381291525", "bodyText": "why does Android need this? (according to your comment)", "author": "AndyScherzinger", "createdAt": "2020-02-19T13:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMxNDYzNQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381314635", "bodyText": "Was needed as default/empty constructor, when rotating, but now I use fragment manager and it is not needed.\nI will remove it \ud83d\udc4d", "author": "tobiasKaminsky", "createdAt": "2020-02-19T14:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY2Mg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381241662", "bodyText": "Issue found: Assigning an Object to null is a code smell.  Consider refactoring.", "author": "nextcloud-android-bot", "createdAt": "2020-02-19T11:46:11Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,129 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n+    public ConflictsResolveDialog() {\n+        // needed by Android\n+        existingFile = null;", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY3Ng==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381241676", "bodyText": "Issue found: Assigning an Object to null is a code smell.  Consider refactoring.", "author": "nextcloud-android-bot", "createdAt": "2020-02-19T11:46:12Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,129 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n+    public ConflictsResolveDialog() {\n+        // needed by Android\n+        existingFile = null;\n+        newFile = null;\n+        listener = null;", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY4Nw==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381241687", "bodyText": "Issue found: Assigning an Object to null is a code smell.  Consider refactoring.", "author": "nextcloud-android-bot", "createdAt": "2020-02-19T11:46:13Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,129 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n+    public ConflictsResolveDialog() {\n+        // needed by Android\n+        existingFile = null;\n+        newFile = null;\n+        listener = null;\n+        user = null;", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI0MTY5NQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381241695", "bodyText": "Issue found: Useless parentheses.", "author": "nextcloud-android-bot", "createdAt": "2020-02-19T11:46:15Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,129 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n+    public ConflictsResolveDialog() {\n+        // needed by Android\n+        existingFile = null;\n+        newFile = null;\n+        listener = null;\n+        user = null;\n+    }\n \n-    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener, boolean canKeepServer) {\n+    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener,\n+                                  OCFile file,\n+                                  OCUpload conflictUpload, Optional<User> user) {\n         this.listener = listener;\n-        this.canKeepServer = canKeepServer;\n+        this.existingFile = file;\n+        this.newFile = new File(conflictUpload.getLocalPath());\n+        this.user = user.get();\n+    }\n+\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+\n+        int color = ThemeUtils.primaryAccentColor(getContext());\n+\n+        AlertDialog alertDialog = (AlertDialog) getDialog();\n+\n+        if (alertDialog == null || user == null) {\n+            Toast.makeText(getContext(), \"Failed to create conflict dialog\", Toast.LENGTH_LONG).show();\n+            return;\n+        }\n+\n+        alertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(color);\n+        alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE).setTextColor(color);\n+    }\n+\n+    @Override\n+    public void onCreate(@Nullable Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+\n+        if (savedInstanceState != null) {\n+            newFile = (File) savedInstanceState.getSerializable(\"file\");\n+            existingFile = savedInstanceState.getParcelable(\"ocfile\");\n+            user = savedInstanceState.getParcelable(\"user\");\n+            listener = (OnConflictDecisionMadeListener) getActivity();\n+        }\n+    }\n+\n+    @Override\n+    public void onSaveInstanceState(@NonNull Bundle outState) {\n+        super.onSaveInstanceState(outState);\n+\n+        outState.putSerializable(\"file\", newFile);\n+        outState.putParcelable(\"ocfile\", existingFile);\n+        outState.putParcelable(\"user\", user);\n     }\n \n     @NonNull\n     @Override\n     public Dialog onCreateDialog(Bundle savedInstanceState) {\n-        AlertDialog.Builder builder = new AlertDialog.Builder(requireActivity(), R.style.Theme_ownCloud_Dialog)\n-            .setIcon(R.drawable.ic_warning)\n-            .setTitle(R.string.conflict_title)\n-            .setMessage(getString(R.string.conflict_message))\n-            .setPositiveButton(R.string.conflict_use_local_version,\n-                               (dialog, which) -> {\n-                                   if (listener != null) {\n-                                       listener.conflictDecisionMade(Decision.KEEP_LOCAL);\n-                                   }\n-                               })\n-            .setNeutralButton(R.string.conflict_keep_both,\n-                              (dialog, which) -> {\n-                                  if (listener != null) {\n-                                      listener.conflictDecisionMade(Decision.KEEP_BOTH);\n-                                  }\n-                              });\n-\n-        if (this.canKeepServer) {\n-            builder.setNegativeButton(R.string.conflict_use_server_version,\n-                                      (dialog, which) -> {\n-                                          if (listener != null) {\n-                                              listener.conflictDecisionMade(Decision.KEEP_SERVER);\n-                                          }\n-                                      });\n-        }\n+        // Inflate the layout for the dialog\n+        LayoutInflater inflater = getActivity().getLayoutInflater();\n+        View view = inflater.inflate(R.layout.conflict_resolve_dialog, null);\n+        int accentColor = ThemeUtils.primaryAccentColor(getContext());\n+\n+        // Build the dialog\n+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n+        builder.setView(view)\n+            .setPositiveButton(R.string.common_ok, ((dialog, which) -> {", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MTA5Mg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381291092", "bodyText": "empty string? (for backwards compatibility?)", "author": "AndyScherzinger", "createdAt": "2020-02-19T13:33:35Z", "path": "src/main/res/values/strings.xml", "diffHunk": "@@ -328,7 +328,7 @@\n     <string name=\"instant_upload_path\">/InstantUpload</string>\n     <string name=\"auto_upload_path\">/AutoUpload</string>\n     <string name=\"conflict_title\">File conflict</string>\n-    <string name=\"conflict_message\">Which files do you want to keep? If you select both versions, the local file will have a number appended to its name.</string>\n+    <string name=\"conflict_message\"></string>", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyMDE0Mg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381320142", "bodyText": "Not needed, as split up.", "author": "tobiasKaminsky", "createdAt": "2020-02-19T14:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MTA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MjY3NQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381292675", "bodyText": "strings are unused resources according to lint?", "author": "AndyScherzinger", "createdAt": "2020-02-19T13:36:27Z", "path": "src/main/res/values/strings.xml", "diffHunk": "@@ -925,4 +925,10 @@\n     <string name=\"sync_not_enough_space_dialog_action_free_space\">Free up space</string>\n     <string name=\"sync_not_enough_space_dialog_placeholder\">%1$s is %2$s, but there is only %3$s available on device.</string>\n     <string name=\"sync_not_enough_space_dialog_title\">Not enough space</string>\n+    <string name=\"conflict_message_headline\">Which files do you want to keep?</string>\n+    <string name=\"conflict_message_description\">If you select both versions, the local file will have a number appended to its name.</string>\n+    <string name=\"conflict_new_file\">New file</string>\n+    <string name=\"conflict_already_existing_file\">Already existing file</string>", "originalCommit": "7b8152786d833f0619fd847526768004fea0882e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyMDc5OA==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381320798", "bodyText": "This is a lie ;-)\nI will have a look.", "author": "tobiasKaminsky", "createdAt": "2020-02-19T14:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MjY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyNDQ1OQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381824459", "bodyText": "You were right with lint, but referred to the wrong conflict messages :-)\nI removed the not used ones now.", "author": "tobiasKaminsky", "createdAt": "2020-02-20T07:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MjY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyNzYyMw==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381827623", "bodyText": "Whoops \ud83d\ude48", "author": "AndyScherzinger", "createdAt": "2020-02-20T07:41:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI5MjY3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2NjE5Mw==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381866193", "bodyText": "static final String KEY_FILE?", "author": "ezaquarii", "createdAt": "2020-02-20T09:07:02Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,120 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n-\n-    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener, boolean canKeepServer) {\n+    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener,\n+                                  OCFile file,\n+                                  OCUpload conflictUpload, Optional<User> user) {\n         this.listener = listener;\n-        this.canKeepServer = canKeepServer;\n+        this.existingFile = file;\n+        this.newFile = new File(conflictUpload.getLocalPath());\n+        this.user = user.get();\n+    }\n+\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+\n+        AlertDialog alertDialog = (AlertDialog) getDialog();\n+\n+        if (alertDialog == null || user == null) {\n+            Toast.makeText(getContext(), \"Failed to create conflict dialog\", Toast.LENGTH_LONG).show();\n+            return;\n+        }\n+\n+        int color = ThemeUtils.primaryAccentColor(getContext());\n+        alertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(color);\n+        alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE).setTextColor(color);\n+    }\n+\n+    @Override\n+    public void onCreate(@Nullable Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+\n+        if (savedInstanceState != null) {\n+            newFile = (File) savedInstanceState.getSerializable(\"file\");", "originalCommit": "87c85b6dc44aa82700d23d3bf93c856485d3e012", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2NzUyNQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381867525", "bodyText": "NotNull -> NonNull.\nWe are using a proprietary org.jetbrains.annotations.NotNull annotation. We should use the one from androidx package, called NonNull.", "author": "ezaquarii", "createdAt": "2020-02-20T09:09:28Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -99,7 +195,7 @@ public void showDialog(AppCompatActivity activity) {\n     }\n \n     @Override\n-    public void onCancel(DialogInterface dialog) {\n+    public void onCancel(@NotNull DialogInterface dialog) {", "originalCommit": "87c85b6dc44aa82700d23d3bf93c856485d3e012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyODk4Ng==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381928986", "bodyText": "Argh. Again and again\u2026\nI removed lots of those, but seems that still some are left\u2026", "author": "tobiasKaminsky", "createdAt": "2020-02-20T11:01:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2NzUyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkzMTAxNQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381931015", "bodyText": "Nope, not my fault ;-)\nMethod in DialogFragment uses andoidx.annotation.NonNull\nbut auto suggestion from AndroidStudio only suggests org.jetbrains.annotations.NotNull\n\nthis can be changed here, no idea why jetbrains is on top\u2026", "author": "tobiasKaminsky", "createdAt": "2020-02-20T11:05:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2NzUyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3Mjc5NQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381872795", "bodyText": "Do we have a good reason to do it this way?\nWe are using a non-default constructor, whoch makes default constructor unavailable; default constructor is used by FragmentManager. I expect it can crash if FragmentManager tries to restore the dialog.\nHow it is normally done would be:\n\npass arguments via arguments Bundle\nimplement listener in parent activity and use type cast to obtain reference to it", "author": "ezaquarii", "createdAt": "2020-02-20T09:19:15Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,120 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n-\n-    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener, boolean canKeepServer) {\n+    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener,", "originalCommit": "87c85b6dc44aa82700d23d3bf93c856485d3e012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg0NzYxMg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r386847612", "bodyText": "This was already the case, so I did not changed/touched it.\nBut let me change it :-)", "author": "tobiasKaminsky", "createdAt": "2020-03-03T07:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3Mjc5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3NzQyNg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381877426", "bodyText": "This Optional<T>.get() can throw NPE.\nIf we really, really, really know it won't be null, let's use getOrElse(IllegalStateException::new).\nThe main reason we introduced Optional<User> was to replace nullable getAccount() call. The trouble with getAccount() was that callers were liberally assuming valid return value. Since the code was then full of if (account == null) { some ad-hoc remediation } workarounds, this assumption was not really holding up. My suspicion was that we were experiencing many edge cases of NPEs and were trying to patch them in some simple way.\nHence the Optional<T> which provides more explicit and harder to ignore API.\nHaving said all of the above, I think that the best idea would be to pass User instead of Optional<User> and just make sure that if the user dependency is not available, we never get here in the first place. This way we don't need to handle special case.", "author": "ezaquarii", "createdAt": "2020-02-20T09:27:19Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,120 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n-\n-    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener, boolean canKeepServer) {\n+    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener,\n+                                  OCFile file,\n+                                  OCUpload conflictUpload, Optional<User> user) {\n         this.listener = listener;\n-        this.canKeepServer = canKeepServer;\n+        this.existingFile = file;\n+        this.newFile = new File(conflictUpload.getLocalPath());\n+        this.user = user.get();", "originalCommit": "87c85b6dc44aa82700d23d3bf93c856485d3e012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkzMjc5Mg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381932792", "bodyText": "Ok, will pass User and fail early, if no user is available.", "author": "tobiasKaminsky", "createdAt": "2020-02-20T11:09:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3NzQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3ODcwOA==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381878708", "bodyText": "This will never be called - if user is null, it would blow up with NPE in the constructor.", "author": "ezaquarii", "createdAt": "2020-02-20T09:29:27Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -40,49 +65,120 @@\n  */\n public class ConflictsResolveDialog extends DialogFragment {\n \n+    private OCFile existingFile;\n+    private File newFile;\n+    private OnConflictDecisionMadeListener listener;\n+    private User user;\n+    private List<ThumbnailsCacheManager.ThumbnailGenerationTask> asyncTasks = new ArrayList<>();\n+\n     public enum Decision {\n         CANCEL,\n         KEEP_BOTH,\n         KEEP_LOCAL,\n         KEEP_SERVER,\n     }\n \n-    private final OnConflictDecisionMadeListener listener;\n-    private final boolean canKeepServer;\n-\n-    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener, boolean canKeepServer) {\n+    public ConflictsResolveDialog(OnConflictDecisionMadeListener listener,\n+                                  OCFile file,\n+                                  OCUpload conflictUpload, Optional<User> user) {\n         this.listener = listener;\n-        this.canKeepServer = canKeepServer;\n+        this.existingFile = file;\n+        this.newFile = new File(conflictUpload.getLocalPath());\n+        this.user = user.get();\n+    }\n+\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+\n+        AlertDialog alertDialog = (AlertDialog) getDialog();\n+\n+        if (alertDialog == null || user == null) {", "originalCommit": "87c85b6dc44aa82700d23d3bf93c856485d3e012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkzNDk4OA==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381934988", "bodyText": "Changed as above", "author": "tobiasKaminsky", "createdAt": "2020-02-20T11:13:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3ODcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4MDQ5NQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381880495", "bodyText": "Cyclomatic complexity of thos method is high. I'm not sure if this is a new code or moved from somewhere else.\nIf we have bandwidth, we could split those if's into methods.", "author": "ezaquarii", "createdAt": "2020-02-20T09:32:35Z", "path": "src/main/java/com/owncloud/android/ui/dialog/ConflictsResolveDialog.java", "diffHunk": "@@ -108,4 +204,137 @@ public void onCancel(DialogInterface dialog) {\n     public interface OnConflictDecisionMadeListener {\n         void conflictDecisionMade(Decision decision);\n     }\n+\n+    private void setThumbnail(OCFile file, ImageView thumbnailView) {", "originalCommit": "87c85b6dc44aa82700d23d3bf93c856485d3e012", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkzNDcwNg==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381934706", "bodyText": "This is half c&p from ThumbnailGenerationClass.\nI will try to get this get this back, so that we do not have code duplication.", "author": "tobiasKaminsky", "createdAt": "2020-02-20T11:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4MDQ5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4MzM1OQ==", "url": "https://github.com/nextcloud/android/pull/5491#discussion_r381883359", "bodyText": "Enclosing if(getAcount != null) could be updated:\n   @Override\n    protected void onStart() {\n        super.onStart();\n        User optionalUser = getUser();\n        if (!user.isPresent()) {\n            finish(); // or launch first run activity, or do something else\n            return;\n        }\n        OCFile file = getFile();\n        ...\n        final User user = optionalUser.get(); // now it's safe\n        ConflictsResolveDialog dialog = new ConflictsResolveDialog(this,\n                getFile(),\n                conflictUpload,\n                user); // guaranteed to be non-null\n        ...\nThis way we can eliminate 1 level of ifology and decrease cyclomatic complexity a bit.", "author": "ezaquarii", "createdAt": "2020-02-20T09:37:27Z", "path": "src/main/java/com/owncloud/android/ui/activity/ConflictsResolveActivity.java", "diffHunk": "@@ -137,12 +151,21 @@ protected void onStart() {\n                 finish();\n             } else {\n                 // Check whether the file is contained in the current Account\n-                if (getStorageManager().fileExists(file.getRemotePath())) {\n-                    ConflictsResolveDialog dialog = new ConflictsResolveDialog(this, !this.shouldDeleteLocal());\n-                    dialog.showDialog(this);\n-                } else {\n-                    // Account was changed to a different one - just finish\n-                    finish();\n+                Fragment prev = getSupportFragmentManager().findFragmentByTag(\"conflictDialog\");\n+\n+                FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();\n+                if (prev == null) {\n+                    if (getStorageManager().fileExists(file.getRemotePath())) {\n+                        ConflictsResolveDialog dialog = new ConflictsResolveDialog(this,\n+                                                                                   getFile(),\n+                                                                                   conflictUpload,\n+                                                                                   getUser()\n+                        );\n+                        dialog.show(fragmentTransaction, \"conflictDialog\");\n+                    } else {\n+                        // Account was changed to a different one - just finish", "originalCommit": "87c85b6dc44aa82700d23d3bf93c856485d3e012", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae08a42f8a5ebfa5c7ef6936ec0a294b0134534b", "url": "https://github.com/nextcloud/android/commit/ae08a42f8a5ebfa5c7ef6936ec0a294b0134534b", "message": "Enhance conflict dialog\n- fix bug\n- add ui tests\n- add instrumented tests\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-03T09:31:03Z", "type": "commit"}, {"oid": "628e58e65ececab597020ce38d58b6f4b668a2df", "url": "https://github.com/nextcloud/android/commit/628e58e65ececab597020ce38d58b6f4b668a2df", "message": "Fixe during CR\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-03T09:31:03Z", "type": "commit"}, {"oid": "836e51fa79191e4756618d3f11f85de8e40ded98", "url": "https://github.com/nextcloud/android/commit/836e51fa79191e4756618d3f11f85de8e40ded98", "message": "Remove unneeded strings\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-03T09:31:03Z", "type": "commit"}, {"oid": "b8c4c68275ac962d83c9e75d98662c80c87eb126", "url": "https://github.com/nextcloud/android/commit/b8c4c68275ac962d83c9e75d98662c80c87eb126", "message": "Fixes during CR\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-03T09:31:03Z", "type": "commit"}, {"oid": "7ca6f304ed1b1dfb2b40d2878453e869345c43db", "url": "https://github.com/nextcloud/android/commit/7ca6f304ed1b1dfb2b40d2878453e869345c43db", "message": "Use proper dialog instantiation\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-03T09:31:04Z", "type": "commit"}, {"oid": "7ca6f304ed1b1dfb2b40d2878453e869345c43db", "url": "https://github.com/nextcloud/android/commit/7ca6f304ed1b1dfb2b40d2878453e869345c43db", "message": "Use proper dialog instantiation\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-03T09:31:04Z", "type": "forcePushed"}, {"oid": "3485f5b09f29c2178182d7a8303543c96c80d37b", "url": "https://github.com/nextcloud/android/commit/3485f5b09f29c2178182d7a8303543c96c80d37b", "message": "Fix test\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-03T15:05:05Z", "type": "forcePushed"}, {"oid": "dbf81ddf1109bf38f480dcbd1c5f6ecfac6fe770", "url": "https://github.com/nextcloud/android/commit/dbf81ddf1109bf38f480dcbd1c5f6ecfac6fe770", "message": "Fix test\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-05T06:15:08Z", "type": "forcePushed"}, {"oid": "30ac72652e7005d306d134e3656b8b75cc0dbee0", "url": "https://github.com/nextcloud/android/commit/30ac72652e7005d306d134e3656b8b75cc0dbee0", "message": "Fix test\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-05T07:22:58Z", "type": "commit"}, {"oid": "30ac72652e7005d306d134e3656b8b75cc0dbee0", "url": "https://github.com/nextcloud/android/commit/30ac72652e7005d306d134e3656b8b75cc0dbee0", "message": "Fix test\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-03-05T07:22:58Z", "type": "forcePushed"}]}