{"pr_number": 7123, "pr_title": "Add status to sharee", "pr_createdAt": "2020-10-21T09:52:14Z", "pr_url": "https://github.com/nextcloud/android/pull/7123", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE1Njc3Mw==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509156773", "bodyText": "the string-keys should be converted to constants GetShareesRemoteOperation.*", "author": "AndyScherzinger", "createdAt": "2020-10-21T10:10:59Z", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -229,21 +243,35 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                 Iterator<JSONObject> namesIt = names.iterator();\n                 JSONObject item;\n                 String displayName;\n-                int icon = 0;\n+                String subline = null;\n+                Object icon = 0;\n                 Uri dataUri;\n                 int count = 0;\n                 while (namesIt.hasNext()) {\n                     item = namesIt.next();\n                     dataUri = null;\n                     displayName = null;\n                     String userName = item.getString(GetShareesRemoteOperation.PROPERTY_LABEL);\n+                    String name = item.isNull(\"name\") ? \"\" : item.getString(\"name\");\n                     JSONObject value = item.getJSONObject(GetShareesRemoteOperation.NODE_VALUE);\n                     ShareType type = ShareType.fromValue(value.getInt(GetShareesRemoteOperation.PROPERTY_SHARE_TYPE));\n                     String shareWith = value.getString(GetShareesRemoteOperation.PROPERTY_SHARE_WITH);\n \n+                    Status status;\n+                    JSONObject statusObject = item.optJSONObject(\"status\");", "originalCommit": "0748f498f99b6d463110c1462f07d954cbae2b8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5MjM0Ng==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509192346", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Paint mTextPaint;\n          \n          \n            \n                private Paint textPaint;", "author": "AndyScherzinger", "createdAt": "2020-10-21T11:14:07Z", "path": "src/main/java/com/owncloud/android/ui/StatusDrawable.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ *\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Color;\n+import android.graphics.ColorFilter;\n+import android.graphics.Paint;\n+import android.graphics.PixelFormat;\n+import android.graphics.drawable.Drawable;\n+\n+import com.owncloud.android.utils.BitmapUtils;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.core.content.res.ResourcesCompat;\n+\n+/**\n+ * A Drawable object that draws a status\n+ */\n+public class StatusDrawable extends Drawable {\n+    private String mText = null;\n+    private @DrawableRes int icon = -1;\n+    private Paint mTextPaint;", "originalCommit": "0748f498f99b6d463110c1462f07d954cbae2b8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5NjYwMQ==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509696601", "bodyText": "Fixed", "author": "AndyScherzinger", "createdAt": "2020-10-21T21:06:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5MjM0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5MjYyMg==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509192622", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private String mText = null;\n          \n          \n            \n                private String text = null;", "author": "AndyScherzinger", "createdAt": "2020-10-21T11:14:36Z", "path": "src/main/java/com/owncloud/android/ui/StatusDrawable.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ *\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Color;\n+import android.graphics.ColorFilter;\n+import android.graphics.Paint;\n+import android.graphics.PixelFormat;\n+import android.graphics.drawable.Drawable;\n+\n+import com.owncloud.android.utils.BitmapUtils;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.core.content.res.ResourcesCompat;\n+\n+/**\n+ * A Drawable object that draws a status\n+ */\n+public class StatusDrawable extends Drawable {\n+    private String mText = null;", "originalCommit": "0748f498f99b6d463110c1462f07d954cbae2b8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5NjUxNA==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509696514", "bodyText": "Fixed", "author": "AndyScherzinger", "createdAt": "2020-10-21T21:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5MjYyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5Mjc0Ng==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509192746", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final Paint mBackground;\n          \n          \n            \n                private final Paint background;", "author": "AndyScherzinger", "createdAt": "2020-10-21T11:14:51Z", "path": "src/main/java/com/owncloud/android/ui/StatusDrawable.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ *\n+ * Nextcloud Android client application\n+ *\n+ * @author Tobias Kaminsky\n+ * Copyright (C) 2020 Tobias Kaminsky\n+ * Copyright (C) 2020 Nextcloud GmbH\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.owncloud.android.ui;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Color;\n+import android.graphics.ColorFilter;\n+import android.graphics.Paint;\n+import android.graphics.PixelFormat;\n+import android.graphics.drawable.Drawable;\n+\n+import com.owncloud.android.utils.BitmapUtils;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.core.content.res.ResourcesCompat;\n+\n+/**\n+ * A Drawable object that draws a status\n+ */\n+public class StatusDrawable extends Drawable {\n+    private String mText = null;\n+    private @DrawableRes int icon = -1;\n+    private Paint mTextPaint;\n+    private final Paint mBackground;", "originalCommit": "0748f498f99b6d463110c1462f07d954cbae2b8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5NjQ3MQ==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509696471", "bodyText": "Fixed", "author": "AndyScherzinger", "createdAt": "2020-10-21T21:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5Mjc0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5NjQ0NQ==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509196445", "bodyText": "primary_dark or primary?", "author": "AndyScherzinger", "createdAt": "2020-10-21T11:21:23Z", "path": "src/main/java/com/owncloud/android/utils/BitmapUtils.java", "diffHunk": "@@ -194,12 +202,19 @@ else if (orientation == ExifInterface.ORIENTATION_ROTATE_270) {\n         return resultBitmap;\n     }\n \n-    public static Color usernameToColor(String name) throws NoSuchAlgorithmException {\n+    public static Color usernameToColor(String name) {\n         String hash = name.toLowerCase(Locale.ROOT);\n \n         // already a md5 hash?\n         if (!hash.matches(\"([0-9a-f]{4}-?){8}$\")) {\n-            hash = md5(hash);\n+            try {\n+                hash = md5(hash);\n+            } catch (NoSuchAlgorithmException e) {\n+                int color = getResources().getColor(R.color.primary_dark);", "originalCommit": "0748f498f99b6d463110c1462f07d954cbae2b8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5ODI4Mg==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509198282", "bodyText": "I think we (still) don't prefix with ~", "author": "AndyScherzinger", "createdAt": "2020-10-21T11:24:42Z", "path": "src/main/res/drawable/ic_user_status_away.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<!--\n+  ~\n+  ~ Nextcloud Android client application", "originalCommit": "0748f498f99b6d463110c1462f07d954cbae2b8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5NjM4Nw==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r509696387", "bodyText": "Fixed", "author": "AndyScherzinger", "createdAt": "2020-10-21T21:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE5ODI4Mg=="}], "type": "inlineReview"}, {"oid": "096007e27f073369a7f9869a220930248b122f1d", "url": "https://github.com/nextcloud/android/commit/096007e27f073369a7f9869a220930248b122f1d", "message": "fix spotbugs & lint\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-29T11:34:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1Njg2Mw==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r514356863", "bodyText": "Codacy found an issue: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter", "author": "nextcloud-android-bot", "createdAt": "2020-10-29T15:36:32Z", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -324,6 +374,59 @@ public int update(@NonNull Uri uri, ContentValues values, String selection, Stri\n         return 0;\n     }\n \n+    @Nullable\n+    @Override\n+    @SuppressFBWarnings(\"IOI_USE_OF_FILE_STREAM_CONSTRUCTORS\") // TODO remove with API26\n+    public ParcelFileDescriptor openFile(@NonNull Uri uri, @NonNull String mode) throws FileNotFoundException {\n+        ArbitraryDataProvider arbitraryDataProvider = new ArbitraryDataProvider(getContext().getContentResolver());\n+\n+        String userId = uri.getQueryParameter(\"shareWith\");\n+        String displayName = uri.getQueryParameter(\"displayName\");\n+        String accountName = accountManager.getUser().getAccountName();\n+        String serverName = accountName.substring(accountName.lastIndexOf('@') + 1);\n+\n+        String eTag = arbitraryDataProvider.getValue(userId + \"@\" + serverName, ThumbnailsCacheManager.AVATAR);\n+        String avatarKey = \"a_\" + userId + \"_\" + serverName + \"_\" + eTag;\n+\n+        StatusType status = StatusType.valueOf(uri.getQueryParameter(\"status\"));\n+        String icon = uri.getQueryParameter(\"icon\");\n+\n+        Bitmap avatarBitmap = ThumbnailsCacheManager.getBitmapFromDiskCache(avatarKey);\n+\n+        if (avatarBitmap == null) {\n+            float avatarRadius = getContext().getResources().getDimension(R.dimen.list_item_avatar_icon_radius);\n+            avatarBitmap = BitmapUtils.drawableToBitmap(TextDrawable.createNamedAvatar(displayName, avatarRadius));\n+        }\n+\n+        Bitmap avatar = BitmapUtils.createAvatarWithStatus(avatarBitmap, status, icon, getContext());\n+\n+        // create a file to write bitmap data\n+        File f = new File(getContext().getCacheDir(), \"test\");\n+        try {\n+            if (!f.createNewFile()) {\n+                throw new IllegalStateException(\"File could not be created!\");\n+            }\n+\n+            //Convert bitmap to byte array\n+            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\n+            avatar.compress(Bitmap.CompressFormat.PNG, 90, bos);\n+            byte[] bitmapData = bos.toByteArray();\n+\n+            //write the bytes in file\n+            try (FileOutputStream fos = new FileOutputStream(f)) {", "originalCommit": "df3da6ab8236e23a1c97e1a29469f652db4f7f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1Njg3NQ==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r514356875", "bodyText": "Codacy found an issue: Avoid instantiating new objects inside loops", "author": "nextcloud-android-bot", "createdAt": "2020-10-29T15:36:33Z", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -229,21 +244,37 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                 Iterator<JSONObject> namesIt = names.iterator();\n                 JSONObject item;\n                 String displayName;\n-                int icon = 0;\n+                String subline = null;\n+                Object icon = 0;\n                 Uri dataUri;\n                 int count = 0;\n                 while (namesIt.hasNext()) {\n                     item = namesIt.next();\n                     dataUri = null;\n                     displayName = null;\n                     String userName = item.getString(GetShareesRemoteOperation.PROPERTY_LABEL);\n+                    String name = item.isNull(\"name\") ? \"\" : item.getString(\"name\");\n                     JSONObject value = item.getJSONObject(GetShareesRemoteOperation.NODE_VALUE);\n                     ShareType type = ShareType.fromValue(value.getInt(GetShareesRemoteOperation.PROPERTY_SHARE_TYPE));\n                     String shareWith = value.getString(GetShareesRemoteOperation.PROPERTY_SHARE_WITH);\n \n+                    Status status;\n+                    JSONObject statusObject = item.optJSONObject(PROPERTY_STATUS);\n+\n+                    if (statusObject != null) {\n+                        status = new Status(\n+                            StatusType.valueOf(statusObject.getString(PROPERTY_STATUS)),\n+                            statusObject.isNull(PROPERTY_MESSAGE) ? \"\" : statusObject.getString(PROPERTY_MESSAGE),\n+                            statusObject.isNull(PROPERTY_ICON) ? \"\" : statusObject.getString(PROPERTY_ICON),\n+                            statusObject.isNull(PROPERTY_CLEAR_AT) ? -1 : statusObject.getInt(PROPERTY_CLEAR_AT)\n+                        );\n+                    } else {\n+                        status = new Status(StatusType.OFFLINE, \"\", \"\", -1);", "originalCommit": "df3da6ab8236e23a1c97e1a29469f652db4f7f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1Njg4Ng==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r514356886", "bodyText": "Codacy found an issue: Avoid using redundant field initializer for 'bigText'", "author": "nextcloud-android-bot", "createdAt": "2020-10-29T15:36:34Z", "path": "src/main/java/com/owncloud/android/ui/TextDrawable.java", "diffHunk": "@@ -65,6 +64,8 @@\n      */\n     private float mRadius;\n \n+    private boolean bigText = false;", "originalCommit": "df3da6ab8236e23a1c97e1a29469f652db4f7f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1Njg5OA==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r514356898", "bodyText": "Codacy found an issue: Assigning an Object to null is a code smell.  Consider refactoring.", "author": "nextcloud-android-bot", "createdAt": "2020-10-29T15:36:35Z", "path": "src/main/java/com/owncloud/android/utils/BitmapUtils.java", "diffHunk": "@@ -384,6 +414,90 @@ public static void setRoundedBitmapForGridMode(Bitmap thumbnail, ImageView image\n                                      imageView);\n     }\n \n+    public static Bitmap createAvatarWithStatus(Bitmap avatar, StatusType status, String icon, Context context) {\n+        float avatarRadius = getResources().getDimension(R.dimen.list_item_avatar_icon_radius);\n+        int width = DisplayUtils.convertDpToPixel(2 * avatarRadius, context);\n+\n+        Bitmap output = Bitmap.createBitmap(width, width, Bitmap.Config.ARGB_8888);\n+        Canvas canvas = new Canvas(output);\n+\n+        // avatar\n+        Bitmap croppedBitmap = getCroppedBitmap(avatar, width);\n+\n+        canvas.drawBitmap(croppedBitmap, 0f, 0f, null);\n+\n+        // status\n+        int statusSize = width / 4;\n+\n+        StatusDrawable statusDrawable;\n+        if (TextUtils.isEmpty(icon)) {\n+            switch (status) {\n+                case DND:\n+                    statusDrawable = new StatusDrawable(R.drawable.ic_user_status_dnd, statusSize, context);\n+                    statusDrawable.setBounds(width / 2,\n+                                             width / 2,\n+                                             width,\n+                                             width);\n+                    break;\n+\n+                case ONLINE:\n+                    statusDrawable = new StatusDrawable(new Color(255, 73, 179, 130), statusSize);\n+                    statusDrawable.setBounds(width,\n+                                             width,\n+                                             width,\n+                                             width);\n+                    break;\n+\n+                case AWAY:\n+                    statusDrawable = new StatusDrawable(R.drawable.ic_user_status_away, statusSize, context);\n+                    statusDrawable.setBounds(width / 2,\n+                                             width / 2,\n+                                             width,\n+                                             width);\n+                    break;\n+\n+                default:\n+                    // do not show\n+                    statusDrawable = null;", "originalCommit": "df3da6ab8236e23a1c97e1a29469f652db4f7f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1NjkwNw==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r514356907", "bodyText": "Codacy found an issue: Avoid instantiating new objects inside loops", "author": "nextcloud-android-bot", "createdAt": "2020-10-29T15:36:36Z", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -229,21 +244,37 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                 Iterator<JSONObject> namesIt = names.iterator();\n                 JSONObject item;\n                 String displayName;\n-                int icon = 0;\n+                String subline = null;\n+                Object icon = 0;\n                 Uri dataUri;\n                 int count = 0;\n                 while (namesIt.hasNext()) {\n                     item = namesIt.next();\n                     dataUri = null;\n                     displayName = null;\n                     String userName = item.getString(GetShareesRemoteOperation.PROPERTY_LABEL);\n+                    String name = item.isNull(\"name\") ? \"\" : item.getString(\"name\");\n                     JSONObject value = item.getJSONObject(GetShareesRemoteOperation.NODE_VALUE);\n                     ShareType type = ShareType.fromValue(value.getInt(GetShareesRemoteOperation.PROPERTY_SHARE_TYPE));\n                     String shareWith = value.getString(GetShareesRemoteOperation.PROPERTY_SHARE_WITH);\n \n+                    Status status;\n+                    JSONObject statusObject = item.optJSONObject(PROPERTY_STATUS);\n+\n+                    if (statusObject != null) {\n+                        status = new Status(", "originalCommit": "df3da6ab8236e23a1c97e1a29469f652db4f7f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1NjkxNw==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r514356917", "bodyText": "Codacy found an issue: Assigning an Object to null is a code smell.  Consider refactoring.", "author": "nextcloud-android-bot", "createdAt": "2020-10-29T15:36:37Z", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -254,30 +285,48 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                                 dataUri = Uri.withAppendedPath(remoteBaseUri, shareWith);\n \n                                 if (userName.equals(shareWith)) {\n-                                    displayName = getContext().getString(R.string.share_remote_clarification, userName);\n+                                    displayName = name;\n+                                    subline = getContext().getString(R.string.remote);\n                                 } else {\n                                     String[] uriSplitted = shareWith.split(\"@\");\n-                                    displayName = getContext().getString(R.string.share_known_remote_clarification,\n-                                                                         userName, uriSplitted[uriSplitted.length - 1]);\n+                                    displayName = name;\n+                                    subline = getContext().getString(R.string.share_known_remote_on_clarification,\n+                                                                     uriSplitted[uriSplitted.length - 1]);\n                                 }\n                             }\n                             break;\n \n                         case USER:\n                             displayName = userName;\n-                            icon = R.drawable.ic_user;\n+                            subline = (status.getMessage() == null || status.getMessage().isEmpty()) ? null :", "originalCommit": "df3da6ab8236e23a1c97e1a29469f652db4f7f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1NjkyMA==", "url": "https://github.com/nextcloud/android/pull/7123#discussion_r514356920", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "nextcloud-android-bot", "createdAt": "2020-10-29T15:36:38Z", "path": "src/main/java/com/owncloud/android/providers/UsersAndGroupsSearchProvider.java", "diffHunk": "@@ -254,30 +285,48 @@ private Cursor searchForUsersOrGroups(Uri uri) {\n                                 dataUri = Uri.withAppendedPath(remoteBaseUri, shareWith);\n \n                                 if (userName.equals(shareWith)) {\n-                                    displayName = getContext().getString(R.string.share_remote_clarification, userName);\n+                                    displayName = name;\n+                                    subline = getContext().getString(R.string.remote);\n                                 } else {\n                                     String[] uriSplitted = shareWith.split(\"@\");\n-                                    displayName = getContext().getString(R.string.share_known_remote_clarification,\n-                                                                         userName, uriSplitted[uriSplitted.length - 1]);\n+                                    displayName = name;\n+                                    subline = getContext().getString(R.string.share_known_remote_on_clarification,\n+                                                                     uriSplitted[uriSplitted.length - 1]);\n                                 }\n                             }\n                             break;\n \n                         case USER:\n                             displayName = userName;\n-                            icon = R.drawable.ic_user;\n+                            subline = (status.getMessage() == null || status.getMessage().isEmpty()) ? null :", "originalCommit": "df3da6ab8236e23a1c97e1a29469f652db4f7f57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe6a08aab4ddf45bd641f8c61fe611d10cf6cdd1", "url": "https://github.com/nextcloud/android/commit/fe6a08aab4ddf45bd641f8c61fe611d10cf6cdd1", "message": "add missing import\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-29T19:22:38Z", "type": "forcePushed"}, {"oid": "e6d3563c733a1b682b65f1c6b111baac1c15a223", "url": "https://github.com/nextcloud/android/commit/e6d3563c733a1b682b65f1c6b111baac1c15a223", "message": "changes after rebase\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T06:52:03Z", "type": "forcePushed"}, {"oid": "390a314297d65fa58b9feee7928a33c14d7630bf", "url": "https://github.com/nextcloud/android/commit/390a314297d65fa58b9feee7928a33c14d7630bf", "message": "changes after rebase\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T07:14:10Z", "type": "forcePushed"}, {"oid": "cfb3778a9ad02fc1d4ba700560989ae4b3def18b", "url": "https://github.com/nextcloud/android/commit/cfb3778a9ad02fc1d4ba700560989ae4b3def18b", "message": "Use status from lib\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T08:20:02Z", "type": "commit"}, {"oid": "540285560acaa41c75c60f134c90e273f6c5c9ae", "url": "https://github.com/nextcloud/android/commit/540285560acaa41c75c60f134c90e273f6c5c9ae", "message": "use primarey\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T08:20:03Z", "type": "commit"}, {"oid": "640820826f0d2242057a60c2b33320704daf7f5d", "url": "https://github.com/nextcloud/android/commit/640820826f0d2242057a60c2b33320704daf7f5d", "message": "changes after rebase\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T08:20:03Z", "type": "commit"}, {"oid": "b3762366947dbb778fa36b58a96215fd40fecd6b", "url": "https://github.com/nextcloud/android/commit/b3762366947dbb778fa36b58a96215fd40fecd6b", "message": "changes after rebase\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T08:20:35Z", "type": "forcePushed"}, {"oid": "3d79b79685cc41f5f04e28b02ead867e998d67e4", "url": "https://github.com/nextcloud/android/commit/3d79b79685cc41f5f04e28b02ead867e998d67e4", "message": "changes after rebase\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T09:08:36Z", "type": "commit"}, {"oid": "3d79b79685cc41f5f04e28b02ead867e998d67e4", "url": "https://github.com/nextcloud/android/commit/3d79b79685cc41f5f04e28b02ead867e998d67e4", "message": "changes after rebase\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-10-30T09:08:36Z", "type": "forcePushed"}]}