{"pr_number": 6121, "pr_title": "enhance deep linking to allow pretty urls", "pr_createdAt": "2020-05-20T22:17:17Z", "pr_url": "https://github.com/nextcloud/android/pull/6121", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r428393302", "bodyText": "Actually I am not sure about that in the moment.\nThat allows 3 times deep nesting like e.g. https://www.example.de/ne/xt/cloud/f/501857 or https://www.example.de/next/cloud/index.php/f/501857\nWhat are your opinions on that?\nPossible would e.g. be also:\n                <data android:pathPattern=\"/f/..*\" />\n                <data android:pathPattern=\"/..*/f/..*\" />\n                <data android:pathPattern=\"/..*/..*/f/..*\" />\n                <data android:pathPattern=\"/..*/..*/index.php/f/..*\" />\n\nwhich would allow 2 times deep nesting\nor e.g.\n                <data android:pathPattern=\"/f/..*\" />\n                <data android:pathPattern=\"/..*/f/..*\" />\n                <data android:pathPattern=\"/..*/index.php/f/..*\" />\n\nwhich would only allow one time deep nesting\nBTW: android:pathPattern=\"/.*f/.*\" is here not possible, because it would allow trigger every link, that contains this pattern \"*f/*\"  which would be really too much imo; just look for that pattern on google: there are way too much sites containing that pattern.\nThe proposed solutions trigger only at links with \"*/f/*\" which is much more rare.", "author": "szaimen", "createdAt": "2020-05-21T01:15:39Z", "path": "src/main/AndroidManifest.xml", "diffHunk": "@@ -121,14 +121,13 @@\n                 <action android:name=\"android.intent.action.VIEW\" />\n                 <category android:name=\"android.intent.category.DEFAULT\" />\n                 <category android:name=\"android.intent.category.BROWSABLE\" />\n-                <data android:scheme=\"http\"\n-                    android:host=\"*\"\n-                    android:pathPattern=\"/.*index.php/f/.*\"\n-                    />\n-                <data android:scheme=\"https\"\n-                      android:host=\"*\"\n-                      android:pathPattern=\"/.*index.php/f/.*\"\n-                    />\n+                <data android:scheme=\"http\" />\n+                <data android:scheme=\"https\" />\n+                <data android:host=\"*\" />\n+                <data android:pathPattern=\"/f/..*\" />\n+                <data android:pathPattern=\"/..*/f/..*\" />\n+                <data android:pathPattern=\"/..*/..*/f/..*\" />\n+                <data android:pathPattern=\"/..*/..*/..*/f/..*\" />", "originalCommit": "435481e7fe6fa6cf16a3112ff706b0e93c18338c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1NTE0Mw==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r428955143", "bodyText": "@ezaquarii do you have an opinion on that?", "author": "szaimen", "createdAt": "2020-05-21T22:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5OTQ5MQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429099491", "bodyText": "It looks scary. This one strong indication that a test should be provided.", "author": "ezaquarii", "createdAt": "2020-05-22T07:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyOTY3NQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429129675", "bodyText": "Actually it only looks scary but it isn't:\nIt allows 3 time deep linking as I said above.\nactually it is less scary then just taking\n\"/.*f/..*\"\n(which would allow for infinity deep linking but would also allow for false links to get clicked like http://cloud.test.com/asdkfjl\u00f6jlkf/sdfk\"\nwhich shouldn't be the case.\nor do you like that one more?", "author": "szaimen", "createdAt": "2020-05-22T09:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMDMxNQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429130315", "bodyText": "Also why did you not complain about a missing test here: #5345\nI don't get it", "author": "szaimen", "createdAt": "2020-05-22T09:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMzUwMA==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429133500", "bodyText": "If you just want tests to be written because you don't trust it because you don't understand what it does that just say that and I will explain it (although I've explained it already quite good in the first comment, imo)", "author": "szaimen", "createdAt": "2020-05-22T09:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MDk4OQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429370989", "bodyText": "@szaimen\n\nAlso why did you not complain about a missing test here: #5345 I don't get it\n\nMaybe I was focused on something else? We're spread thin between this project and our full time jobs and families with kids. Things slip through.\nBut the main point is that if you intriduce technical debt, it stays, as there is no manpower to clean up after.\n\nIf you just want tests to be written because you don't trust it because you don't understand what it does that just say that and\n\nThe tests are primarly for code maintainers to validate the the code works correctly and enable cheap refactoring.\n\nI will explain it\n\nLook, I appreciate it, but the fact is that no future maintainer will be chasing you in 2021 for any explanations, so this proposition has limited value.", "author": "ezaquarii", "createdAt": "2020-05-22T17:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MzkxNQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429373915", "bodyText": "Thanks for explaining the background. Didn't know that.", "author": "szaimen", "createdAt": "2020-05-22T17:37:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzMwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r428898075", "bodyText": "The PR description says that tests are not needed. We can extract this part and put it under test.", "author": "ezaquarii", "createdAt": "2020-05-21T20:32:41Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2625,12 +2625,21 @@ private void handleOpenFileViaIntent(Intent intent) {\n         if (userName == null && fileId == null && intent.getData() != null) {\n             // Handle intent coming from URI\n \n-            Pattern pattern  = Pattern.compile(\"(.*)/index\\\\.php/([f])/([0-9]+)$\");\n-            Matcher matcher = pattern.matcher(intent.getData().toString());\n-            if (matcher.matches()) {\n-                String uri = matcher.group(1);\n-                if (\"f\".equals(matcher.group(2))) {\n-                    fileId = matcher.group(3);\n+            Pattern pattern1 = Pattern.compile(\"(.*)/index\\\\.php/([f])/([0-9]+)$\");", "originalCommit": "b9636c761b22b7a08bb6739ab339b33534348b68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0ODQ3OQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r428948479", "bodyText": "hm, I'm not completely convinced, that we can extract it because without pattern1 I think the account wouldn't be found if someone wants to open a link containing index.php and we just had pattern2 or are you completely sure about that?\nI will test out if it works without pattern1\nAnd actually I have no clue about how to add tests, so I would need your help in that case\nI am fairly new to Java programming and this is my first Android PR ever...", "author": "szaimen", "createdAt": "2020-05-21T22:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1NDY3Mw==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r428954673", "bodyText": "I've tested removing pattern1 and matcher1 and the opening of internal links that contain index.php doesn't work if we do that, it just says that no account was found but there is definitely one.\nYou can test it yourself by installing #6120 (comment)\nand trying to open an internal link from your testdomain that contains index.php.", "author": "szaimen", "createdAt": "2020-05-21T22:44:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwMTgxMA==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429101810", "bodyText": "@szaimen Enire link maching functionality should be extracted into a function/class and tested for all desired inputs. This links matching code is simple, but it feels like having very complex business rules.\nSince this module has complex behaviour, BDD style test seems to be suitable for this case.\n\nAnd actually I have no clue about how to add tests, so I would need your help in that case\n\nThere are plenty of examples in our code base. You just create a class with a method annotated with @Test and the test runner runs it. It's as trivial as creating a \"Hello world\". You'll find examples in test and androidTest directories.\nTry it out and I'll help you if you get stuck.", "author": "ezaquarii", "createdAt": "2020-05-22T08:03:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTQzOQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429131439", "bodyText": "Could you please send me a link to a test that seems to be comparable to what I should do?\nI have really no clue how to do that.\nI would also appreciate if you would send a link to instructions how to write tests in Java...", "author": "szaimen", "createdAt": "2020-05-22T09:06:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MTY0MQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429371641", "bodyText": "Could you please send me a link to a test that seems to be comparable to what I should do?\nI have really no clue how to do that.\n\n@szaimen\nSure, I'll help you out. I'll put a commit with a test skeleton.\nFor the time being, just continue as ususal. We can refactor it at any stage - I'm not worried about it.", "author": "ezaquarii", "createdAt": "2020-05-22T17:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MzMyNg==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429373326", "bodyText": "Sure, I'll help you out. I'll put a commit with a test skeleton.\n\n@ezaquarii Thank you very much!", "author": "szaimen", "createdAt": "2020-05-22T17:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3NTUwMQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r429375501", "bodyText": "For the time being, just continue as ususal. We can refactor it at any stage - I'm not worried about it.\n\n@ezaquarii Actually, from my side is this PR already done.\nOpening pretty URL internal links and normal internal links works as expected.\nThe only question that remains is, how deep we want to allow the nesting, as I wrote here:\n#6121 (comment)", "author": "szaimen", "createdAt": "2020-05-22T17:41:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ=="}], "type": "inlineReview"}, {"oid": "65432b601090c3ef1168b03a7c776d411a3bcd2f", "url": "https://github.com/nextcloud/android/commit/65432b601090c3ef1168b03a7c776d411a3bcd2f", "message": "Refactored deep link handling\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-28T00:26:05Z", "type": "forcePushed"}, {"oid": "2659fbd692ac6adffeebe830324e09c10bcb0a39", "url": "https://github.com/nextcloud/android/commit/2659fbd692ac6adffeebe830324e09c10bcb0a39", "message": "Refactored deep link handling\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-28T00:27:20Z", "type": "forcePushed"}, {"oid": "ad5629d551ce6525f97ff14dfef1ac66de17f7bc", "url": "https://github.com/nextcloud/android/commit/ad5629d551ce6525f97ff14dfef1ac66de17f7bc", "message": "Refactored deep link handling\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-28T00:33:41Z", "type": "forcePushed"}, {"oid": "f78d22c649a8af19e040a61c102e35d51340fc38", "url": "https://github.com/nextcloud/android/commit/f78d22c649a8af19e040a61c102e35d51340fc38", "message": "Refactored deep link handling\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-28T00:38:35Z", "type": "forcePushed"}, {"oid": "a293cacea7ba6c9753008e1f71294d12c5fe047b", "url": "https://github.com/nextcloud/android/commit/a293cacea7ba6c9753008e1f71294d12c5fe047b", "message": "Refactored deep link handling\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-28T00:40:28Z", "type": "forcePushed"}, {"oid": "8c944cc91f7fce8887ae0c467150bde60a0ecbf9", "url": "https://github.com/nextcloud/android/commit/8c944cc91f7fce8887ae0c467150bde60a0ecbf9", "message": "Refactored deep link handling\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-28T00:41:18Z", "type": "forcePushed"}, {"oid": "725d754607253bc36926cbec19c0b4617d71fa6a", "url": "https://github.com/nextcloud/android/commit/725d754607253bc36926cbec19c0b4617d71fa6a", "message": "Move user filtering to deep link handler\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-28T22:15:25Z", "type": "forcePushed"}, {"oid": "c1b4ffa58252921540b3481f669937e6581c569b", "url": "https://github.com/nextcloud/android/commit/c1b4ffa58252921540b3481f669937e6581c569b", "message": "Deep link handler tests\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-30T14:31:31Z", "type": "forcePushed"}, {"oid": "3f2a70c412d2384eb217e8201d2643be7fb103d9", "url": "https://github.com/nextcloud/android/commit/3f2a70c412d2384eb217e8201d2643be7fb103d9", "message": "Deep link handler tests\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-30T14:36:06Z", "type": "forcePushed"}, {"oid": "a32857e2344918ab1fa0fa152a494e8a44bfbc37", "url": "https://github.com/nextcloud/android/commit/a32857e2344918ab1fa0fa152a494e8a44bfbc37", "message": "Deep link handler tests\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-30T14:59:47Z", "type": "forcePushed"}, {"oid": "4dfa70e3b25a6664539068449bfb2d0e24377c98", "url": "https://github.com/nextcloud/android/commit/4dfa70e3b25a6664539068449bfb2d0e24377c98", "message": "Deep link handler tests\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-05-30T16:40:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3MDMyOA==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r432870328", "bodyText": "@szaimen we could proably simplify those regexps even further, but I have currently no time to work on it.", "author": "ezaquarii", "createdAt": "2020-05-30T17:02:22Z", "path": "src/main/AndroidManifest.xml", "diffHunk": "@@ -121,14 +121,13 @@\n                 <action android:name=\"android.intent.action.VIEW\" />\n                 <category android:name=\"android.intent.category.DEFAULT\" />\n                 <category android:name=\"android.intent.category.BROWSABLE\" />\n-                <data android:scheme=\"http\"\n-                    android:host=\"*\"\n-                    android:pathPattern=\"/.*index.php/f/.*\"\n-                    />\n-                <data android:scheme=\"https\"\n-                      android:host=\"*\"\n-                      android:pathPattern=\"/.*index.php/f/.*\"\n-                    />\n+                <data android:scheme=\"http\" />\n+                <data android:scheme=\"https\" />\n+                <data android:host=\"*\" />\n+                <data android:pathPattern=\"/f/..*\" />\n+                <data android:pathPattern=\"/..*/f/..*\" />\n+                <data android:pathPattern=\"/..*/..*/f/..*\" />\n+                <data android:pathPattern=\"/..*/..*/..*/f/..*\" />", "originalCommit": "4dfa70e3b25a6664539068449bfb2d0e24377c98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODk2OQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r432878969", "bodyText": "@ezaquarii Yes, I already thought about that, too, but have decided against it because it would allow to many false links. Here is the comment I am refering to:\n\nBTW: android:pathPattern=\"/.*f/..*\" is here not possible, because it would allow trigger every link, that contains this pattern \"*f/*\" which would be really too much imo; just look for that pattern on google: there are way too much sites containing that pattern.\nThe proposed solutions trigger only at links with \"*/f/*\" which is much more rare.", "author": "szaimen", "createdAt": "2020-05-30T19:00:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3MDMyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4OTg1NA==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r432889854", "bodyText": "@ezaquarii Yes, I already thought about that, too, but have decided against it because it would allow to many false links.\n\nI was thinking about X{n,m} notation here, but I have no time to play with it. I'd err on side of K.I.S.S. rule here.", "author": "ezaquarii", "createdAt": "2020-05-30T21:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3MDMyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwMDgwOQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r432900809", "bodyText": "I am not sure if that will work since the pathpattern and intent filters in general are quite limited. (is unfortunately no real regex and have many other issues: (e.g. having to start with a \"/\" and only having asterisk and period)\nbut maybe you are refering to something else?\nbtw: here are the docs regarding the data filter: https://developer.android.com/guide/topics/manifest/data-element", "author": "szaimen", "createdAt": "2020-05-31T01:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3MDMyOA=="}], "type": "inlineReview"}, {"oid": "c3f2c58c0fe989ae1e1719135dcc527fd2f369e1", "url": "https://github.com/nextcloud/android/commit/c3f2c58c0fe989ae1e1719135dcc527fd2f369e1", "message": "Deep link handler tests\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-06-04T08:59:08Z", "type": "forcePushed"}, {"oid": "815e30166eb2b4e4c087a9e3acc65234a20fbeaf", "url": "https://github.com/nextcloud/android/commit/815e30166eb2b4e4c087a9e3acc65234a20fbeaf", "message": "allow pretty urls\n\nSigned-off-by: szaimen <szaimen@e.mail.de>", "committedDate": "2020-06-30T05:51:20Z", "type": "commit"}, {"oid": "ed4917db14fdb5059d5c4c56321e627370d0c900", "url": "https://github.com/nextcloud/android/commit/ed4917db14fdb5059d5c4c56321e627370d0c900", "message": "Update pattern matcher to allow pretty urls\n\nSigned-off-by: szaimen <szaimen@e.mail.de>", "committedDate": "2020-06-30T05:51:20Z", "type": "commit"}, {"oid": "214689bc0d3b17f34e044d11b3c17a9cfc51ee7b", "url": "https://github.com/nextcloud/android/commit/214689bc0d3b17f34e044d11b3c17a9cfc51ee7b", "message": "allow 3 times deep nextcloud nesting\n\nSigned-off-by: szaimen <szaimen@e.mail.de>", "committedDate": "2020-06-30T05:51:20Z", "type": "commit"}, {"oid": "bcb126206426f8ca3e1ad98828791d3bc7b223ce", "url": "https://github.com/nextcloud/android/commit/bcb126206426f8ca3e1ad98828791d3bc7b223ce", "message": "Deep link handler prototype\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-06-30T05:51:20Z", "type": "commit"}, {"oid": "50b19e5d7733fe27b4e7de96b390a140c8ea9f4d", "url": "https://github.com/nextcloud/android/commit/50b19e5d7733fe27b4e7de96b390a140c8ea9f4d", "message": "Refactored deep link handling\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-06-30T05:51:21Z", "type": "commit"}, {"oid": "a887a4c32bb0da323f044682c17cf673174a4479", "url": "https://github.com/nextcloud/android/commit/a887a4c32bb0da323f044682c17cf673174a4479", "message": "Move user filtering to deep link handler\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-06-30T05:51:21Z", "type": "commit"}, {"oid": "74e68d6b8eaade88fcdf83eedc8954f319b1d9ae", "url": "https://github.com/nextcloud/android/commit/74e68d6b8eaade88fcdf83eedc8954f319b1d9ae", "message": "Deep link handler tests\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-06-30T05:51:21Z", "type": "commit"}, {"oid": "74e68d6b8eaade88fcdf83eedc8954f319b1d9ae", "url": "https://github.com/nextcloud/android/commit/74e68d6b8eaade88fcdf83eedc8954f319b1d9ae", "message": "Deep link handler tests\n\nSigned-off-by: Chris Narkiewicz <hello@ezaquarii.com>", "committedDate": "2020-06-30T05:51:21Z", "type": "forcePushed"}, {"oid": "3d7e8b770a36f532b268ca3e863265e74a4a0084", "url": "https://github.com/nextcloud/android/commit/3d7e8b770a36f532b268ca3e863265e74a4a0084", "message": "add missing import\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-06-30T06:45:52Z", "type": "commit"}, {"oid": "05748959e9e1ba07d6987e3ef758d980fc57c1f4", "url": "https://github.com/nextcloud/android/commit/05748959e9e1ba07d6987e3ef758d980fc57c1f4", "message": "exit always with 0\n\nSigned-off-by: tobiasKaminsky <tobias@kaminsky.me>", "committedDate": "2020-06-30T09:55:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NjU2NQ==", "url": "https://github.com/nextcloud/android/pull/6121#discussion_r447566565", "bodyText": "Codacy found an issue: Avoid using Literals in Conditional Statements", "author": "nextcloud-android-bot", "createdAt": "2020-06-30T10:03:52Z", "path": "src/main/java/com/owncloud/android/ui/activity/FileDisplayActivity.java", "diffHunk": "@@ -2408,44 +2402,54 @@ private void handleOpenFileViaIntent(Intent intent) {\n         String fileId = intent.getStringExtra(KEY_FILE_ID);\n \n         if (userName == null && fileId == null && intent.getData() != null) {\n-            // Handle intent coming from URI\n-\n-            Pattern pattern  = Pattern.compile(\"(.*)/index\\\\.php/([f])/([0-9]+)$\");\n-            Matcher matcher = pattern.matcher(intent.getData().toString());\n-            if (matcher.matches()) {\n-                String uri = matcher.group(1);\n-                if (\"f\".equals(matcher.group(2))) {\n-                    fileId = matcher.group(3);\n-                    findAccountAndOpenFile(uri, fileId);\n-                    return;\n-                }\n+            openDeepLink(intent.getData());\n+        } else {\n+            Optional<User> optionalUser = userName == null ? getUser() : getUserAccountManager().getUser(userName);\n+            if (optionalUser.isPresent()) {\n+                openFile(optionalUser.get(), fileId);\n             } else {\n                 dismissLoadingDialog();\n-                DisplayUtils.showSnackMessage(this, getString(R.string.invalid_url));\n-                return;\n+                DisplayUtils.showSnackMessage(this, getString(R.string.associated_account_not_found));\n             }\n         }\n-        openFile(userName, fileId);\n-\n     }\n-    private void openFile(String userName, String fileId) {\n-        Optional<User> optionalNewUser;\n-        User user;\n \n-        if (userName == null) {\n-            optionalNewUser = getUser();\n+    private void openDeepLink(Uri uri) {\n+        DeepLinkHandler linkHandler = new DeepLinkHandler(getUserAccountManager());\n+        DeepLinkHandler.Match match = linkHandler.parseDeepLink(uri);\n+        if (match == null) {\n+            dismissLoadingDialog();\n+            DisplayUtils.showSnackMessage(this, getString(R.string.invalid_url));\n+        } else if (match.getUsers().isEmpty()) {\n+            dismissLoadingDialog();\n+            DisplayUtils.showSnackMessage(this, getString(R.string.associated_account_not_found));\n+        } else if (match.getUsers().size() == 1) {", "originalCommit": "05748959e9e1ba07d6987e3ef758d980fc57c1f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}