{"pr_number": 3243, "pr_title": "Show radio icon as uploader avatar in Youtube mixes ", "pr_createdAt": "2020-03-17T17:51:08Z", "pr_url": "https://github.com/TeamNewPipe/NewPipe/pull/3243", "timeline": [{"oid": "0341e6a70128e592c2d1586700ca423b4eab0a36", "url": "https://github.com/TeamNewPipe/NewPipe/commit/0341e6a70128e592c2d1586700ca423b4eab0a36", "message": "Add support for INFINITE_ and MORE_THAN_100_ITEMS in playlists", "committedDate": "2020-03-17T20:22:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzAyNg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395667026", "bodyText": "I would prefer a switch case here", "author": "XiangRongLin", "createdAt": "2020-03-20T14:19:15Z", "path": "app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java", "diffHunk": "@@ -284,8 +285,15 @@ public void handleResult(@NonNull final PlaylistInfo result) {\n \n         imageLoader.displayImage(result.getUploaderAvatarUrl(), headerUploaderAvatar,\n                 ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n-        headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,\n-                (int) result.getStreamCount(), (int) result.getStreamCount()));\n+\n+        int streamCount = (int) result.getStreamCount();\n+        if (streamCount == PlaylistExtractor.MORE_THAN_100_ITEMS) {", "originalCommit": "0341e6a70128e592c2d1586700ca423b4eab0a36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgzNzY4Ng==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395837686", "bodyText": "Mmmh you are right", "author": "Stypox", "createdAt": "2020-03-20T19:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzAyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2MjY4Mg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395862682", "bodyText": "Done, also moved everything to a global localizeStreamCount function that is also used in PlaylistInfoItem and ChannelInfoItem and correctly localizes the item count.", "author": "Stypox", "createdAt": "2020-03-20T19:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NzAyNg=="}], "type": "inlineReview"}, {"oid": "9411b8e38590e5f9b429bdbd28e1ecf36afdcf06", "url": "https://github.com/TeamNewPipe/NewPipe/commit/9411b8e38590e5f9b429bdbd28e1ecf36afdcf06", "message": "Detect ITEM_COUNT_* in localizeStreamCount()\n\nITEM_COUNT_INFINITE and ITEM_COUNT_MORE_THAN_100.\nUse localizeStreamCount in PlaylistFragment and PlaylistItemHolder", "committedDate": "2020-03-20T19:57:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjE4MA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395866180", "bodyText": "Here it should say just the count like in my PR. So e.g. \"100+\" instead of \"100+ videos\".", "author": "wb9688", "createdAt": "2020-03-20T20:08:22Z", "path": "app/src/main/java/org/schabi/newpipe/info_list/holder/PlaylistMiniInfoItemHolder.java", "diffHunk": "@@ -36,7 +37,8 @@ public void updateFromItem(final InfoItem infoItem, final HistoryRecordManager h\n         final PlaylistInfoItem item = (PlaylistInfoItem) infoItem;\n \n         itemTitleView.setText(item.getName());\n-        itemStreamCountView.setText(String.valueOf(item.getStreamCount()));\n+        itemStreamCountView.setText(Localization.localizeStreamCount(itemStreamCountView.getContext(),", "originalCommit": "9411b8e38590e5f9b429bdbd28e1ecf36afdcf06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2ODA0Nw==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395868047", "bodyText": "No, to keep consistenct, the string should contain \"videos\":\n\"No videos\"\n\"1 video\"\n\"2 videos\"\n...\n\"100+ videos\"\n\"\u221e videos\"", "author": "Stypox", "createdAt": "2020-03-20T20:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2OTY3NQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395869675", "bodyText": "Do you really think there's enough space for that there?", "author": "wb9688", "createdAt": "2020-03-20T20:16:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3MjMwMQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395872301", "bodyText": "Oh, sorry, that's right ;-)", "author": "Stypox", "createdAt": "2020-03-20T20:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjE4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjQ1Mg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395866452", "bodyText": "Why are you casting to int?", "author": "wb9688", "createdAt": "2020-03-20T20:09:01Z", "path": "app/src/main/java/org/schabi/newpipe/util/Localization.java", "diffHunk": "@@ -145,7 +148,14 @@ public static String localizeViewCount(Context context, long viewCount) {\n     }\n \n     public static String localizeStreamCount(Context context, long streamCount) {\n-        return getQuantity(context, R.plurals.videos, R.string.no_videos, streamCount, localizeNumber(context, streamCount));\n+        switch ((int) streamCount) {", "originalCommit": "9411b8e38590e5f9b429bdbd28e1ecf36afdcf06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2ODI3NQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395868275", "bodyText": "Because Java switch does not allow the usage of long", "author": "Stypox", "createdAt": "2020-03-20T20:13:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3NTEzNA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395875134", "bodyText": "Then just use an if, as this would cause issues when the streamCount is e.g. 4294967294.", "author": "wb9688", "createdAt": "2020-03-20T20:29:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg4NDY5MQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395884691", "bodyText": "Yeah but I don't think a stream count can reach 2^31 - 1 or  2147483647 or 2*10^10, that's really big. Also, it would be pointless to prevent issues here, if streamCount has to be cast to int anyway in order to pass it to getQuantity.", "author": "Stypox", "createdAt": "2020-03-20T20:53:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg4NTg3NQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r395885875", "bodyText": "I didn't see getQuantity needed an int, so in that case, that's fine.", "author": "wb9688", "createdAt": "2020-03-20T20:56:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEzNTM0NA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r396135344", "bodyText": "I think checking whether the uploader name is \"YouTube\" and the uploaderUrl is empty seems to be better here", "author": "TobiGr", "createdAt": "2020-03-22T20:07:54Z", "path": "app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java", "diffHunk": "@@ -282,10 +284,21 @@ public void handleResult(@NonNull final PlaylistInfo result) {\n \n         playlistCtrl.setVisibility(View.VISIBLE);\n \n-        imageLoader.displayImage(result.getUploaderAvatarUrl(), headerUploaderAvatar,\n-                ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n-        headerStreamCount.setText(getResources().getQuantityString(R.plurals.videos,\n-                (int) result.getStreamCount(), (int) result.getStreamCount()));\n+        String avatarUrl = result.getUploaderAvatarUrl();\n+        if (avatarUrl.contains(\"upload.wikimedia.org\")) {", "originalCommit": "48f17ffdc197ae611c2ad9579e8c5394fd834051", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMzI0OQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r396733249", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (avatarUrl.contains(\"upload.wikimedia.org\")) {\n          \n          \n            \n                    if (YouTubeParsingHelper.isYouTubeMixId(result.getId())) {", "author": "TobiGr", "createdAt": "2020-03-23T20:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEzNTM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczNzYyMQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r396737621", "bodyText": "That's not a good idea, unless you first check whether result.getServiceId() equals YouTube's service ID.", "author": "wb9688", "createdAt": "2020-03-23T20:30:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEzNTM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyNDgwMA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r397424800", "bodyText": "@wb9688 is result.getServiceId() == ServiceList.YouTube.getServiceId() ok?", "author": "Stypox", "createdAt": "2020-03-24T19:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEzNTM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyNjk3MQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3243#discussion_r397426971", "bodyText": "result.getServiceId() == ServiceList.YouTube.getServiceId() && YouTubeParsingHelper.isYouTubeMixId(result.getId()) is OK.", "author": "wb9688", "createdAt": "2020-03-24T20:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEzNTM0NA=="}], "type": "inlineReview"}, {"oid": "1a278bf2af5932b9d8e5bb18fa63fa8a436e3a6c", "url": "https://github.com/TeamNewPipe/NewPipe/commit/1a278bf2af5932b9d8e5bb18fa63fa8a436e3a6c", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-04-10T20:36:24Z", "type": "forcePushed"}, {"oid": "623f7ad5d335eb1d621b90cb9fce892b3d67d900", "url": "https://github.com/TeamNewPipe/NewPipe/commit/623f7ad5d335eb1d621b90cb9fce892b3d67d900", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-05-21T13:00:39Z", "type": "forcePushed"}, {"oid": "18a2057e59f0d2143e1c1a391016bf789dd7a101", "url": "https://github.com/TeamNewPipe/NewPipe/commit/18a2057e59f0d2143e1c1a391016bf789dd7a101", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-05-21T13:08:09Z", "type": "forcePushed"}, {"oid": "c2895500df9cb348e093b13482baaa526db1d0cc", "url": "https://github.com/TeamNewPipe/NewPipe/commit/c2895500df9cb348e093b13482baaa526db1d0cc", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-05-21T13:09:18Z", "type": "forcePushed"}, {"oid": "a18ebf6600da0c5d7cd5d6fc840ac0db4920c02d", "url": "https://github.com/TeamNewPipe/NewPipe/commit/a18ebf6600da0c5d7cd5d6fc840ac0db4920c02d", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-12-14T17:29:51Z", "type": "forcePushed"}, {"oid": "c2210330b6d70f08b194065accaef2a067b639fb", "url": "https://github.com/TeamNewPipe/NewPipe/commit/c2210330b6d70f08b194065accaef2a067b639fb", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-12-14T18:22:00Z", "type": "commit"}, {"oid": "3ec079b20201e535cd33869957c225ef73be21f7", "url": "https://github.com/TeamNewPipe/NewPipe/commit/3ec079b20201e535cd33869957c225ef73be21f7", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-12-14T17:50:00Z", "type": "forcePushed"}, {"oid": "c2210330b6d70f08b194065accaef2a067b639fb", "url": "https://github.com/TeamNewPipe/NewPipe/commit/c2210330b6d70f08b194065accaef2a067b639fb", "message": "Show radio instead of Youtube logo in mixes\n\nYouTube mixes have YouTube as a creator, though YouTube's logo is not safe to use as it is a trademark (better safe than sorry)", "committedDate": "2020-12-14T18:22:00Z", "type": "forcePushed"}]}