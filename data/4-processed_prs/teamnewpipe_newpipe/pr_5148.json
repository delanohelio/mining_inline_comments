{"pr_number": 5148, "pr_title": "Show improved error panel instead of annoying snackbar or crashing ", "pr_createdAt": "2020-12-11T14:36:39Z", "pr_url": "https://github.com/TeamNewPipe/NewPipe/pull/5148", "timeline": [{"oid": "aa22e45bf49f8bd832794ffed4fbb8e83e2988c5", "url": "https://github.com/TeamNewPipe/NewPipe/commit/aa22e45bf49f8bd832794ffed4fbb8e83e2988c5", "message": "Optimize imports and solve checkstyle issues", "committedDate": "2020-12-12T12:27:39Z", "type": "forcePushed"}, {"oid": "ff9c195ffeec7f637c7f8ee010d7eebdc6df54fd", "url": "https://github.com/TeamNewPipe/NewPipe/commit/ff9c195ffeec7f637c7f8ee010d7eebdc6df54fd", "message": "Fix tests", "committedDate": "2020-12-29T22:57:16Z", "type": "forcePushed"}, {"oid": "1790548af07969c60bc736f073b823967178e8ed", "url": "https://github.com/TeamNewPipe/NewPipe/commit/1790548af07969c60bc736f073b823967178e8ed", "message": "Completely remove return activity, now outdated", "committedDate": "2021-01-09T15:24:26Z", "type": "forcePushed"}, {"oid": "88c52076976374c3f44d74164e0f897d8a2b8a67", "url": "https://github.com/TeamNewPipe/NewPipe/commit/88c52076976374c3f44d74164e0f897d8a2b8a67", "message": "Completely remove return activity, now outdated", "committedDate": "2021-01-09T15:33:59Z", "type": "forcePushed"}, {"oid": "94690ce17baee4ef126411336a14ce1a0352bf32", "url": "https://github.com/TeamNewPipe/NewPipe/commit/94690ce17baee4ef126411336a14ce1a0352bf32", "message": "Completely remove return activity, now outdated", "committedDate": "2021-01-15T09:06:22Z", "type": "forcePushed"}, {"oid": "8f21460eee4cc61ea5870f30f6fcecf1c2b0dddb", "url": "https://github.com/TeamNewPipe/NewPipe/commit/8f21460eee4cc61ea5870f30f6fcecf1c2b0dddb", "message": "Fix error panel and search fragment state saving", "committedDate": "2021-01-15T14:51:23Z", "type": "forcePushed"}, {"oid": "4865f02274341bfe2c824b17c8937bf27d912d92", "url": "https://github.com/TeamNewPipe/NewPipe/commit/4865f02274341bfe2c824b17c8937bf27d912d92", "message": "FeedFragment: fix view binding and show loading indicator correctly", "committedDate": "2021-01-18T09:47:16Z", "type": "forcePushed"}, {"oid": "6c11083c1e772907bf0beafe7f12841951f115ed", "url": "https://github.com/TeamNewPipe/NewPipe/commit/6c11083c1e772907bf0beafe7f12841951f115ed", "message": "FeedFragment: fix view binding and show loading indicator correctly", "committedDate": "2021-02-16T16:29:53Z", "type": "forcePushed"}, {"oid": "7ef7c6c4f67880e06ef7a1f7cdbd49bdb6bbff5e", "url": "https://github.com/TeamNewPipe/NewPipe/commit/7ef7c6c4f67880e06ef7a1f7cdbd49bdb6bbff5e", "message": "FeedFragment: fix view binding and show loading indicator correctly", "committedDate": "2021-02-16T19:41:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTgzMTg1MQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5148#discussion_r579831851", "bodyText": "I cannot comment on the line below...\nIt might be a good idea to use a slightly different Email subject:\npublic final String ERROR_EMAIL_SUBJECT\n            = \"Exception in  \" + getString(R.string.app_name) + BuildConfig.VERSION_NAME;", "author": "TobiGr", "createdAt": "2021-02-21T16:35:29Z", "path": "app/src/main/java/org/schabi/newpipe/error/ErrorActivity.java", "diffHunk": "@@ -70,7 +61,6 @@\n     public static final String TAG = ErrorActivity.class.toString();\n     // BUNDLE TAGS\n     public static final String ERROR_INFO = \"error_info\";\n-    public static final String ERROR_LIST = \"error_list\";\n \n     public static final String ERROR_EMAIL_ADDRESS = \"crashreport@newpipe.schabi.org\";\n     public static final String ERROR_EMAIL_SUBJECT", "originalCommit": "7ef7c6c4f67880e06ef7a1f7cdbd49bdb6bbff5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTg0NDg5Mg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5148#discussion_r579844892", "bodyText": "why is the companion object at the end of the file? (just a question, because it does not contain any important values)", "author": "TobiGr", "createdAt": "2021-02-21T18:20:36Z", "path": "app/src/main/java/org/schabi/newpipe/error/ErrorPanelHelper.kt", "diffHunk": "@@ -0,0 +1,121 @@\n+package org.schabi.newpipe.error\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.util.Log\n+import android.view.View\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.core.view.isVisible\n+import androidx.fragment.app.Fragment\n+import com.jakewharton.rxbinding4.view.clicks\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.disposables.Disposable\n+import org.schabi.newpipe.MainActivity\n+import org.schabi.newpipe.R\n+import org.schabi.newpipe.extractor.exceptions.ContentNotAvailableException\n+import org.schabi.newpipe.extractor.exceptions.ContentNotSupportedException\n+import org.schabi.newpipe.extractor.exceptions.ReCaptchaException\n+import org.schabi.newpipe.ktx.animate\n+import org.schabi.newpipe.ktx.isInterruptedCaused\n+import org.schabi.newpipe.ktx.isNetworkRelated\n+import java.util.concurrent.TimeUnit\n+\n+class ErrorPanelHelper(\n+    private val fragment: Fragment,\n+    rootView: View,\n+    onRetry: Runnable\n+) {\n+    private val context: Context = rootView.context!!\n+    private val errorPanelRoot: View = rootView.findViewById(R.id.error_panel)\n+    private val errorTextView: TextView = errorPanelRoot.findViewById(R.id.error_message_view)\n+    private val errorButtonAction: Button = errorPanelRoot.findViewById(R.id.error_button_action)\n+    private val errorButtonRetry: Button = errorPanelRoot.findViewById(R.id.error_button_retry)\n+\n+    private var errorDisposable: Disposable? = null\n+\n+    init {\n+        errorDisposable = errorButtonRetry.clicks()\n+            .debounce(300, TimeUnit.MILLISECONDS)\n+            .observeOn(AndroidSchedulers.mainThread())\n+            .subscribe { onRetry.run() }\n+    }\n+\n+    fun showError(errorInfo: ErrorInfo) {\n+\n+        if (errorInfo.throwable != null && errorInfo.throwable!!.isInterruptedCaused) {\n+            if (DEBUG) {\n+                Log.w(TAG, \"onError() isInterruptedCaused! = [$errorInfo.throwable]\")\n+            }\n+            return\n+        }\n+\n+        errorButtonAction.isVisible = true\n+        if (errorInfo.throwable is ReCaptchaException) {\n+            errorButtonAction.setText(R.string.recaptcha_solve)\n+            errorButtonAction.setOnClickListener {\n+                // Starting ReCaptcha Challenge Activity\n+                val intent = Intent(context, ReCaptchaActivity::class.java)\n+                intent.putExtra(\n+                    ReCaptchaActivity.RECAPTCHA_URL_EXTRA,\n+                    (errorInfo.throwable as ReCaptchaException).url\n+                )\n+                fragment.startActivityForResult(intent, ReCaptchaActivity.RECAPTCHA_REQUEST)\n+                errorButtonAction.setOnClickListener(null)\n+            }\n+            errorTextView.setText(R.string.recaptcha_request_toast)\n+            errorButtonRetry.isVisible = true\n+        } else {\n+            errorButtonAction.setText(R.string.error_snackbar_action)\n+            errorButtonAction.setOnClickListener {\n+                ErrorActivity.reportError(context, errorInfo)\n+            }\n+\n+            when {\n+                errorInfo.throwable is ContentNotAvailableException -> {\n+                    errorTextView.setText(R.string.content_not_available)\n+                    errorButtonRetry.isVisible = false\n+                }\n+                errorInfo.throwable != null && errorInfo.throwable!!.isNetworkRelated -> {\n+                    errorTextView.setText(R.string.network_error)\n+                    errorButtonRetry.isVisible = true\n+                }\n+                errorInfo.throwable is ContentNotSupportedException -> {\n+                    errorTextView.setText(R.string.content_not_supported)\n+                    errorButtonRetry.isVisible = false\n+                }\n+                else -> {\n+                    errorTextView.setText(R.string.error_snackbar_message)\n+                    errorButtonRetry.isVisible = true\n+                }\n+            }\n+        }\n+        errorPanelRoot.animate(true, 300)\n+    }\n+\n+    fun showTextError(errorString: String) {\n+        errorButtonAction.isVisible = false\n+        errorButtonRetry.isVisible = false\n+        errorTextView.text = errorString\n+    }\n+\n+    fun hide() {\n+        errorButtonAction.setOnClickListener(null)\n+        errorPanelRoot.animate(false, 150)\n+    }\n+\n+    fun isVisible(): Boolean {\n+        return errorPanelRoot.isVisible\n+    }\n+\n+    fun dispose() {\n+        errorButtonAction.setOnClickListener(null)\n+        errorButtonRetry.setOnClickListener(null)\n+        errorDisposable?.dispose()\n+    }\n+\n+    companion object {\n+        val TAG: String = ErrorPanelHelper::class.simpleName!!\n+        val DEBUG: Boolean = MainActivity.DEBUG\n+    }", "originalCommit": "7ef7c6c4f67880e06ef7a1f7cdbd49bdb6bbff5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTg2NDI3OQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5148#discussion_r579864279", "bodyText": "Isn't that the standard for Kotlin?", "author": "Stypox", "createdAt": "2021-02-21T20:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTg0NDg5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTg0NzIwNQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5148#discussion_r579847205", "bodyText": "Why is this needed?", "author": "TobiGr", "createdAt": "2021-02-21T18:39:05Z", "path": "app/src/main/java/org/schabi/newpipe/fragments/detail/VideoDetailFragment.java", "diffHunk": "@@ -932,18 +927,22 @@ private void initTabs() {\n         }\n \n         if (showRelatedStreams && binding.relatedStreamsLayout == null) {\n-            //temp empty fragment. will be updated in handleResult\n-            pageAdapter.addFragment(new Fragment(), RELATED_TAB_TAG);\n+            // temp empty fragment. will be updated in handleResult\n+            pageAdapter.addFragment(new EmptyFragment(false), RELATED_TAB_TAG);\n             tabIcons.add(R.drawable.ic_art_track_white_24dp);\n             tabContentDescriptions.add(R.string.related_streams_tab_description);\n         }\n \n         if (showDescription) {\n             // temp empty fragment. will be updated in handleResult\n-            pageAdapter.addFragment(new Fragment(), DESCRIPTION_TAB_TAG);\n+            pageAdapter.addFragment(new EmptyFragment(false), DESCRIPTION_TAB_TAG);\n             tabIcons.add(R.drawable.ic_description_white_24dp);\n             tabContentDescriptions.add(R.string.description_tab_description);\n         }\n+\n+        if (pageAdapter.getCount() == 0) {\n+            pageAdapter.addFragment(new EmptyFragment(true), EMPTY_TAB_TAG);\n+        }", "originalCommit": "7ef7c6c4f67880e06ef7a1f7cdbd49bdb6bbff5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTg2NDUwNw==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5148#discussion_r579864507", "bodyText": "Because otherwise there would be scrolling issues, since the scrollable view would not extend to the lower half of the screen", "author": "Stypox", "createdAt": "2021-02-21T20:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTg0NzIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTg1NDczNQ==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/5148#discussion_r579854735", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        \"Service don't support importing\",\n          \n          \n            \n                                        \"Service does not support importing subscriptions\",", "author": "TobiGr", "createdAt": "2021-02-21T19:38:45Z", "path": "app/src/main/java/org/schabi/newpipe/local/subscription/SubscriptionsImportFragment.java", "diffHunk": "@@ -84,10 +84,12 @@ public void onCreate(final Bundle savedInstanceState) {\n \n         setupServiceVariables();\n         if (supportedSources.isEmpty() && currentServiceId != Constants.NO_SERVICE_ID) {\n-            ErrorActivity.reportError(activity, Collections.emptyList(), null, null,\n-                    ErrorInfo.make(UserAction.SOMETHING_ELSE,\n+            ErrorActivity.reportErrorInSnackbar(activity,\n+                    new ErrorInfo(new String[]{}, UserAction.SUBSCRIPTION_IMPORT_EXPORT,\n                             NewPipe.getNameOfService(currentServiceId),\n-                            \"Service don't support importing\", R.string.general_error));\n+                            \"Service don't support importing\",", "originalCommit": "7ef7c6c4f67880e06ef7a1f7cdbd49bdb6bbff5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ae0fe3d9690e9966ba917383d5f4aa3853f807b", "url": "https://github.com/TeamNewPipe/NewPipe/commit/6ae0fe3d9690e9966ba917383d5f4aa3853f807b", "message": "Improve email subject for error reporting", "committedDate": "2021-02-21T21:24:58Z", "type": "forcePushed"}, {"oid": "66dbaffadd6caf6a54fe64b63101014dae5cf679", "url": "https://github.com/TeamNewPipe/NewPipe/commit/66dbaffadd6caf6a54fe64b63101014dae5cf679", "message": "Improve email subject for error reporting", "committedDate": "2021-03-07T11:53:32Z", "type": "forcePushed"}, {"oid": "553b80164b4f951e2a967ff26855b408d0ddf070", "url": "https://github.com/TeamNewPipe/NewPipe/commit/553b80164b4f951e2a967ff26855b408d0ddf070", "message": "Move all error-related classes into error package", "committedDate": "2021-03-07T16:49:28Z", "type": "commit"}, {"oid": "4ea388419b97d2138f8bdb6f5c874b7bf27cd14e", "url": "https://github.com/TeamNewPipe/NewPipe/commit/4ea388419b97d2138f8bdb6f5c874b7bf27cd14e", "message": "Improve email subject for error reporting", "committedDate": "2021-03-07T17:07:32Z", "type": "forcePushed"}, {"oid": "54364d8f55a90532e158680b1809ec007bf2904c", "url": "https://github.com/TeamNewPipe/NewPipe/commit/54364d8f55a90532e158680b1809ec007bf2904c", "message": "Improve email subject for error reporting", "committedDate": "2021-03-07T17:33:16Z", "type": "forcePushed"}, {"oid": "a4c2aabcabc26e7aca5ece19b19a0357f47b39c3", "url": "https://github.com/TeamNewPipe/NewPipe/commit/a4c2aabcabc26e7aca5ece19b19a0357f47b39c3", "message": "Better handle url not supported in RouterActivity\n\nMake sure the url not supported dialog is only shown when the url is really not supported, not on any ExtractionException", "committedDate": "2021-03-07T18:00:13Z", "type": "forcePushed"}, {"oid": "c43bca6007584c2cca28ddf984ad090baf370c68", "url": "https://github.com/TeamNewPipe/NewPipe/commit/c43bca6007584c2cca28ddf984ad090baf370c68", "message": "Add report/solve-recaptcha button in error panel\n\nIt will be shown even when nothing could be loaded not due to a network error, and the user can choose to ignore or report it.\n\nAlso improve error reporting arguments\nAlso completely refactor error activity\nAlso improve some code here and there", "committedDate": "2021-03-12T22:21:49Z", "type": "commit"}, {"oid": "1fc8e4c148454eeb6870c6335b7aa0406f233b7c", "url": "https://github.com/TeamNewPipe/NewPipe/commit/1fc8e4c148454eeb6870c6335b7aa0406f233b7c", "message": "Optimize imports and solve checkstyle issues", "committedDate": "2021-03-12T22:21:53Z", "type": "commit"}, {"oid": "0263125e11fe251f04e5ccb5b53a28bac10cdd57", "url": "https://github.com/TeamNewPipe/NewPipe/commit/0263125e11fe251f04e5ccb5b53a28bac10cdd57", "message": "Fix tests", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "463dd8ea74003317abc6a38779b299b2a4c181b1", "url": "https://github.com/TeamNewPipe/NewPipe/commit/463dd8ea74003317abc6a38779b299b2a4c181b1", "message": "Completely remove return activity, now outdated", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "b265cabc226e80bf07efa978740689eef1b7a81d", "url": "https://github.com/TeamNewPipe/NewPipe/commit/b265cabc226e80bf07efa978740689eef1b7a81d", "message": "Fix views not scrollable when showing error panel", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "c2b6cec37dec28f0785c4d5268f67662c7f600cd", "url": "https://github.com/TeamNewPipe/NewPipe/commit/c2b6cec37dec28f0785c4d5268f67662c7f600cd", "message": "Hide meta info panel in search when starting a new search", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "c3cf1d81c24a988afed5f037cb8b967b18690ee5", "url": "https://github.com/TeamNewPipe/NewPipe/commit/c3cf1d81c24a988afed5f037cb8b967b18690ee5", "message": "Fix error panel and search fragment state saving", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "aee04782355cea4e71fe824d6afbc05e1347e77f", "url": "https://github.com/TeamNewPipe/NewPipe/commit/aee04782355cea4e71fe824d6afbc05e1347e77f", "message": "FeedFragment: fix view binding and show loading indicator correctly", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "8ce18647f168caf3955bb375f7540278beafe02e", "url": "https://github.com/TeamNewPipe/NewPipe/commit/8ce18647f168caf3955bb375f7540278beafe02e", "message": "Improve email subject for error reporting", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "285ea4e3fd179be8513a29a79dee014cb9ccfe1e", "url": "https://github.com/TeamNewPipe/NewPipe/commit/285ea4e3fd179be8513a29a79dee014cb9ccfe1e", "message": "Better handle url not supported in RouterActivity\n\nMake sure the url not supported dialog is only shown when the url is really not supported, not on any ExtractionException", "committedDate": "2021-03-12T22:21:54Z", "type": "commit"}, {"oid": "285ea4e3fd179be8513a29a79dee014cb9ccfe1e", "url": "https://github.com/TeamNewPipe/NewPipe/commit/285ea4e3fd179be8513a29a79dee014cb9ccfe1e", "message": "Better handle url not supported in RouterActivity\n\nMake sure the url not supported dialog is only shown when the url is really not supported, not on any ExtractionException", "committedDate": "2021-03-12T22:21:54Z", "type": "forcePushed"}]}