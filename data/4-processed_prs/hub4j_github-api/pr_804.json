{"pr_number": 804, "pr_title": "Fixed GHRepository.getFileContent() for path containing non-ASCII characters", "pr_createdAt": "2020-05-06T15:25:34Z", "pr_url": "https://github.com/hub4j/github-api/pull/804", "timeline": [{"oid": "50903b5c4ac591ed2ca102fd139026b99bd27592", "url": "https://github.com/hub4j/github-api/commit/50903b5c4ac591ed2ca102fd139026b99bd27592", "message": "updated GHContentIntegrationTest.java", "committedDate": "2020-05-06T14:53:23Z", "type": "commit"}, {"oid": "e6d7f7248bdbed4ef59fef3cd71feb0ea778d759", "url": "https://github.com/hub4j/github-api/commit/e6d7f7248bdbed4ef59fef3cd71feb0ea778d759", "message": "updated GitHubRequest.java\n\nusing URI.toASCIIString() instead of URI.toString() in urlPathEncode()", "committedDate": "2020-05-06T14:54:21Z", "type": "commit"}, {"oid": "676984b3d5f14727449044683b0d20243adba45f", "url": "https://github.com/hub4j/github-api/commit/676984b3d5f14727449044683b0d20243adba45f", "message": "added src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/testGetFileContentWithNonAsciiPath/**", "committedDate": "2020-05-06T14:58:42Z", "type": "commit"}, {"oid": "4a53301e9f1da23ac9b1d172d195e25cea392a9c", "url": "https://github.com/hub4j/github-api/commit/4a53301e9f1da23ac9b1d172d195e25cea392a9c", "message": "Merge branch 'master' into master", "committedDate": "2020-05-06T15:26:06Z", "type": "commit"}, {"oid": "fa600c03e241014d4aa85db8769179ded41e8930", "url": "https://github.com/hub4j/github-api/commit/fa600c03e241014d4aa85db8769179ded41e8930", "message": "updated GHContentIntegrationTest.java\n\nsorting imports", "committedDate": "2020-05-06T15:33:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3MTc1OA==", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r422371758", "bodyText": "This is interesting.  What happens if you take this path string and call repo.getFileContent() on it?", "author": "bitwiseman", "createdAt": "2020-05-08T20:59:56Z", "path": "src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/testGetFileContentWithNonAsciiPath/__files/repos_github-api-test-org_ghcontentintegrationtest_contents_ghcontent-ro_a-dir-with-nonascii-entry_bornsteintxt-3.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"name\": \"B??????rnstein.txt\",\n+  \"path\": \"ghcontent-ro/a-dir-with-nonascii-entry/B??????rnstein.txt\",", "originalCommit": "fa600c03e241014d4aa85db8769179ded41e8930", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzNDg4Mw==", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423034883", "bodyText": "You mean against the real github? i haven't tried that but it surely won't work.", "author": "reisners", "createdAt": "2020-05-11T13:22:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3MTc1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExNjI1Mw==", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423116253", "bodyText": "It should work.  For other paths you can do exactly this.  It's a roundtrip thing.", "author": "bitwiseman", "createdAt": "2020-05-11T15:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3MTc1OA=="}], "type": "inlineReview"}, {"oid": "4d4edfa181a1545ad75799c04e43f8494bfadf44", "url": "https://github.com/hub4j/github-api/commit/4d4edfa181a1545ad75799c04e43f8494bfadf44", "message": "updated GHContentIntegrationTest.java\n\nadapting testGetFileContentWithNonAsciiPath to shortened file path", "committedDate": "2020-05-11T06:01:32Z", "type": "commit"}, {"oid": "81a55db644772ac29701989fa4151ce6a3f3f46e", "url": "https://github.com/hub4j/github-api/commit/81a55db644772ac29701989fa4151ce6a3f3f46e", "message": "updated src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/testGetFileWithNoneAsciiPath/**", "committedDate": "2020-05-11T13:29:02Z", "type": "commit"}, {"oid": "fbf4c4846153962e513bbdcf39be05402eb36308", "url": "https://github.com/hub4j/github-api/commit/fbf4c4846153962e513bbdcf39be05402eb36308", "message": "updated GHContentIntegrationTest.java, src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/**\n\nadapting to new org hub4-test-org (was github-api-test-org)", "committedDate": "2020-05-11T14:33:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExODU3NQ==", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423118575", "bodyText": "I'm looking for a test something like this (I haven't run locally):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final GHContent fileContent = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\")\n          \n          \n            \n                            .getFileContent(\"ghcontent-ro/a-file-with-\\u00F6\");\n          \n          \n            \n                    assertThat(IOUtils.readLines(fileContent.read(), StandardCharsets.UTF_8), hasItems(\"test\"));\n          \n          \n            \n                    final GHRepository repo = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\");\n          \n          \n            \n                    final GHContent fileContent = repo.getFileContent(\"ghcontent-ro/a-file-with-\\u00F6\");\n          \n          \n            \n                    assertThat(IOUtils.readLines(fileContent.read(), StandardCharsets.UTF_8), hasItems(\"test\"));\n          \n          \n            \n                    \n          \n          \n            \n                    final GHContent fileContent2 = repo.getFileContent(fileContent.getPath());\n          \n          \n            \n                    assertThat(IOUtils.readLines(fileContent2.read(), StandardCharsets.UTF_8), hasItems(\"test\"));", "author": "bitwiseman", "createdAt": "2020-05-11T15:20:43Z", "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "diffHunk": "@@ -158,4 +160,11 @@ public void testMIMELonger() throws IOException {\n                 + \"123456789012345678901234567890123456789012345678901234567890\");\n         ghContentBuilder.commit();\n     }\n+\n+    @Test\n+    public void testGetFileContentWithNonAsciiPath() throws Exception {\n+        final GHContent fileContent = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\")\n+                .getFileContent(\"ghcontent-ro/a-file-with-\\u00F6\");\n+        assertThat(IOUtils.readLines(fileContent.read(), StandardCharsets.UTF_8), hasItems(\"test\"));", "originalCommit": "fbf4c4846153962e513bbdcf39be05402eb36308", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMjYwNQ==", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423122605", "bodyText": "I just checked; your modification works on my machine. So yes, please go with it.", "author": "reisners", "createdAt": "2020-05-11T15:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExODU3NQ=="}], "type": "inlineReview"}, {"oid": "63ce8e461bd090689c0b51927be6389cd564c4b2", "url": "https://github.com/hub4j/github-api/commit/63ce8e461bd090689c0b51927be6389cd564c4b2", "message": "Update src/test/java/org/kohsuke/github/GHContentIntegrationTest.java\n\nCo-authored-by: Liam Newman <bitwiseman@gmail.com>", "committedDate": "2020-05-12T07:59:53Z", "type": "commit"}, {"oid": "65d6fc7272a725370b1c15ed185a8d26c49b6358", "url": "https://github.com/hub4j/github-api/commit/65d6fc7272a725370b1c15ed185a8d26c49b6358", "message": "updated GHContentIntegrationTest.java\n\ndummy commit", "committedDate": "2020-05-12T10:06:44Z", "type": "commit"}, {"oid": "488e5e531f0d2c114cd441d81c689921b50466b8", "url": "https://github.com/hub4j/github-api/commit/488e5e531f0d2c114cd441d81c689921b50466b8", "message": "updated GHContentIntegrationTest.java\n\ndummy commit", "committedDate": "2020-05-13T10:39:10Z", "type": "commit"}]}