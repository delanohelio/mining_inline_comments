{"pr_number": 738, "pr_title": "Get commit or tag signature verified flag", "pr_createdAt": "2020-03-12T20:38:40Z", "pr_url": "https://github.com/hub4j/github-api/pull/738", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4Mzc1NA==", "url": "https://github.com/hub4j/github-api/pull/738#discussion_r392083754", "bodyText": "Would it make sense to create a enum which holds all possible reasons? The following page defines possible reasons (please see the \"Signature verification object\" section):\nhttps://developer.github.com/v3/repos/commits/", "author": "artem-smotrakov", "createdAt": "2020-03-13T08:17:26Z", "path": "src/main/java/org/kohsuke/github/GHVerification.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package org.kohsuke.github;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+/**\n+ * The commit/tag would be signed by user. This object would hold the verification status. Whether the Commit/Tag is\n+ * signed or not.\n+ *\n+ * @author Sourabh Sarvotham Parkala\n+ */\n+@SuppressFBWarnings(value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },\n+        justification = \"JSON API\")\n+public class GHVerification {\n+    private String reason, signature, payload;", "originalCommit": "bbb183538555bd6466538f3f95caabcd2e703bc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4NDY0NQ==", "url": "https://github.com/hub4j/github-api/pull/738#discussion_r392084645", "bodyText": "Minor: How about \"Indicates whether GitHub considers the signature in this commit to be verified\"? (borrowed from https://developer.github.com/v3/repos/commits/)", "author": "artem-smotrakov", "createdAt": "2020-03-13T08:19:55Z", "path": "src/main/java/org/kohsuke/github/GHVerification.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package org.kohsuke.github;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+/**\n+ * The commit/tag would be signed by user. This object would hold the verification status. Whether the Commit/Tag is\n+ * signed or not.\n+ *\n+ * @author Sourabh Sarvotham Parkala\n+ */\n+@SuppressFBWarnings(value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },\n+        justification = \"JSON API\")\n+public class GHVerification {\n+    private String reason, signature, payload;\n+    private boolean verified;\n+\n+    /**\n+     * Gets boolean value.", "originalCommit": "bbb183538555bd6466538f3f95caabcd2e703bc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4NTE5MQ==", "url": "https://github.com/hub4j/github-api/pull/738#discussion_r392085191", "bodyText": "I would suggest \"Gets the payload that was signed.\"", "author": "artem-smotrakov", "createdAt": "2020-03-13T08:21:27Z", "path": "src/main/java/org/kohsuke/github/GHVerification.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package org.kohsuke.github;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+/**\n+ * The commit/tag would be signed by user. This object would hold the verification status. Whether the Commit/Tag is\n+ * signed or not.\n+ *\n+ * @author Sourabh Sarvotham Parkala\n+ */\n+@SuppressFBWarnings(value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },\n+        justification = \"JSON API\")\n+public class GHVerification {\n+    private String reason, signature, payload;\n+    private boolean verified;\n+\n+    /**\n+     * Gets boolean value.\n+     *\n+     * @return true if the signature is valid else returns false.\n+     */\n+    public boolean getVerified() {\n+        return verified;\n+    }\n+\n+    /**\n+     * Gets reason for verification value.\n+     *\n+     * @return return reason, such as \"valid\" or \"unsigned\".\n+     */\n+    public String getReason() {\n+        return reason;\n+    }\n+\n+    /**\n+     * Gets signature used for the verification.\n+     *\n+     * @return null if not signed else encoded signature.\n+     */\n+    public String getSignature() {\n+        return signature;\n+    }\n+\n+    /**\n+     * Gets payload used for the verification.", "originalCommit": "bbb183538555bd6466538f3f95caabcd2e703bc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NjExMw==", "url": "https://github.com/hub4j/github-api/pull/738#discussion_r392176113", "bodyText": "Not sure if value is necessary.", "author": "artem-smotrakov", "createdAt": "2020-03-13T11:36:15Z", "path": "src/main/java/org/kohsuke/github/GHReason.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.kohsuke.github;\n+\n+/**\n+ * The possible values for reason in verification object from github.\n+ * \n+ * @see <a href=\"https://developer.github.com/v3/repos/commits/#signature-verification-object\">List of possible reason\n+ *      values</a>\n+ * @author Sourabh Sarvotham Parkala\n+ */\n+public enum GHReason {\n+    EXPIRED_KEY(\"expired_key\"),\n+    NOT_SIGNING_KEY(\"not_signing_key\"),\n+    GPGVERIFY_ERROR(\"gpgverify_error\"),\n+    GPGVERIFY_UNAVAILABLE(\"gpgverify_unavailable\"),\n+    UNSIGNED(\"unsigned\"),\n+    UNKNOW_SIGNATURE_TYPE(\"unknown_signature_type\"),\n+    NO_USER(\"no_user\"),\n+    UNVERIFIED_EMAIL(\"unverified_email\"),\n+    BAD_EMAIL(\"bad_email\"),\n+    UNKNOWN_KEY(\"unknown_key\"),\n+    MALFORMED_SIGNATURE(\"malformed_signature\"),\n+    INVALID(\"invalid\"),\n+    VALID(\"valid\");\n+\n+    private final String value;", "originalCommit": "fae68d5daa639e00958dfdcfb3c87fa1b2e4276a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI4MjM0MQ==", "url": "https://github.com/hub4j/github-api/pull/738#discussion_r393282341", "bodyText": "@artem-smotrakov\nIn general, you'd be correct.  But I think the default mapping for enums is all-caps and convert-underscores-to-dashes. Which would result in EXPIRED_KEY converting to expired-key and vice versa.  Once tests are added, we can see whether this is needed or not.", "author": "bitwiseman", "createdAt": "2020-03-16T20:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NjExMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3OTAwOQ==", "url": "https://github.com/hub4j/github-api/pull/738#discussion_r393279009", "bodyText": "We need at test for each of these values. Or at least a bunch of them.  Even if you have to manually create them.", "author": "bitwiseman", "createdAt": "2020-03-16T20:00:34Z", "path": "src/main/java/org/kohsuke/github/GHReason.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.kohsuke.github;\n+\n+/**\n+ * The possible values for reason in verification object from github.\n+ * \n+ * @see <a href=\"https://developer.github.com/v3/repos/commits/#signature-verification-object\">List of possible reason\n+ *      values</a>\n+ * @author Sourabh Sarvotham Parkala\n+ */\n+public enum GHReason {\n+    EXPIRED_KEY(\"expired_key\"),", "originalCommit": "fae68d5daa639e00958dfdcfb3c87fa1b2e4276a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI4Mjk2MQ==", "url": "https://github.com/hub4j/github-api/pull/738#discussion_r393282961", "bodyText": "As noted above, we need tests for at least a few more GHReason values (specifically multi-word values).", "author": "bitwiseman", "createdAt": "2020-03-16T20:09:46Z", "path": "src/test/java/org/kohsuke/github/AppTest.java", "diffHunk": "@@ -584,6 +584,8 @@ public void testCommitShortInfo() throws Exception {\n         GHCommit commit = r.getCommit(\"86a2e245aa6d71d54923655066049d9e21a15f23\");\n         assertEquals(commit.getCommitShortInfo().getAuthor().getName(), \"Kohsuke Kawaguchi\");\n         assertEquals(commit.getCommitShortInfo().getMessage(), \"doc\");\n+        assertFalse(commit.getCommitShortInfo().getVerification().getVerified());\n+        assertEquals(commit.getCommitShortInfo().getVerification().getReason(), GHReason.UNSIGNED.get());", "originalCommit": "fae68d5daa639e00958dfdcfb3c87fa1b2e4276a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b6fe00e8c1158007f3af07fdc66fa3f017157870", "url": "https://github.com/hub4j/github-api/commit/b6fe00e8c1158007f3af07fdc66fa3f017157870", "message": "Get commit or tag signature verified flag\n\nThis fixes #737\n\n- A new entity GHVerification.java has been added which would be reflecting Verification flag\n- Updating GHCommit.java and GHTagObject.java with GHVerification\n- Altering few test cases AppTest.java and GHTagTest.java to verify if the Verification entity is being picked up\n- A separate test class SignatureVerificationTest.java with the associated wiremock test resources\n- Adding a new enum GHReason.java\n- Updating tests to check the GHReason implementation, GHReasonTest.java with the associated wiremock test resources", "committedDate": "2020-03-25T16:12:40Z", "type": "forcePushed"}, {"oid": "a78d2f28d7f2d3dc50a71aeeba3c37b2c9e86424", "url": "https://github.com/hub4j/github-api/commit/a78d2f28d7f2d3dc50a71aeeba3c37b2c9e86424", "message": "Get commit or tag signature verified flag\n\nThis fixes #737\n\n- A new entity GHVerification.java has been added which would be reflecting Verification flag\n- Updating GHCommit.java and GHTagObject.java with GHVerification\n- Altering few test cases AppTest.java and GHTagTest.java to verify if the Verification entity is being picked up\n- A separate test class SignatureVerificationTest.java with the associated wiremock test resources\n- Adding a new enum GHReason.java\n- Updating tests to check the GHReason implementation, GHReasonTest.java with the associated wiremock test resources", "committedDate": "2020-03-25T16:19:56Z", "type": "commit"}, {"oid": "a78d2f28d7f2d3dc50a71aeeba3c37b2c9e86424", "url": "https://github.com/hub4j/github-api/commit/a78d2f28d7f2d3dc50a71aeeba3c37b2c9e86424", "message": "Get commit or tag signature verified flag\n\nThis fixes #737\n\n- A new entity GHVerification.java has been added which would be reflecting Verification flag\n- Updating GHCommit.java and GHTagObject.java with GHVerification\n- Altering few test cases AppTest.java and GHTagTest.java to verify if the Verification entity is being picked up\n- A separate test class SignatureVerificationTest.java with the associated wiremock test resources\n- Adding a new enum GHReason.java\n- Updating tests to check the GHReason implementation, GHReasonTest.java with the associated wiremock test resources", "committedDate": "2020-03-25T16:19:56Z", "type": "forcePushed"}, {"oid": "f554ddc372ad119d00c30fb6d6ac7c76aa6d6265", "url": "https://github.com/hub4j/github-api/commit/f554ddc372ad119d00c30fb6d6ac7c76aa6d6265", "message": "Capitalize and Move GHVerification.Reason enum", "committedDate": "2020-03-26T16:45:20Z", "type": "commit"}, {"oid": "494318b8790b232e878149a674eff7604b91c15d", "url": "https://github.com/hub4j/github-api/commit/494318b8790b232e878149a674eff7604b91c15d", "message": "Change method name to isVerified", "committedDate": "2020-03-26T16:49:03Z", "type": "commit"}, {"oid": "31ed0125b85940d9049acc1deff2223f07038c4e", "url": "https://github.com/hub4j/github-api/commit/31ed0125b85940d9049acc1deff2223f07038c4e", "message": "Shorten test paths for windows", "committedDate": "2020-03-26T17:09:01Z", "type": "commit"}, {"oid": "418df15f7bcb306867236b4f82f2c3d50495ecee", "url": "https://github.com/hub4j/github-api/commit/418df15f7bcb306867236b4f82f2c3d50495ecee", "message": "Merge branch 'master' into sign_verification", "committedDate": "2020-03-26T17:23:16Z", "type": "commit"}]}