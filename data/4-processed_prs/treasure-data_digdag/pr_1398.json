{"pr_number": 1398, "pr_title": "Add attempt status response", "pr_createdAt": "2020-04-21T12:33:14Z", "pr_url": "https://github.com/treasure-data/digdag/pull/1398", "timeline": [{"oid": "ad2d6a65332aa59606f521f1783952624e6936ae", "url": "https://github.com/treasure-data/digdag/commit/ad2d6a65332aa59606f521f1783952624e6936ae", "message": "initial implementation", "committedDate": "2020-04-21T12:32:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0MzczNQ==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r412143735", "bodyText": "would an enum be better here?", "author": "dzannotti", "createdAt": "2020-04-21T12:33:35Z", "path": "digdag-client/src/main/java/io/digdag/client/api/RestSessionAttempt.java", "diffHunk": "@@ -48,6 +48,19 @@ default int getIndex()\n \n     Optional<Instant> getFinishedAt();\n \n+    default String getStatus() {", "originalCommit": "ad2d6a65332aa59606f521f1783952624e6936ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MTg2MQ==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r416291861", "bodyText": "What would the enum be like?", "author": "komamitsu", "createdAt": "2020-04-28T03:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0MzczNQ=="}], "type": "inlineReview"}, {"oid": "b4b4cf410a04fef9c7953f4a97614db2d0f1ac52", "url": "https://github.com/treasure-data/digdag/commit/b4b4cf410a04fef9c7953f4a97614db2d0f1ac52", "message": "Merge branch 'v0_10' into add-attemp-status-reponse", "committedDate": "2020-04-23T12:21:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MTA1Nw==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r416291057", "bodyText": "!this.getSuccess() isn't needed?", "author": "komamitsu", "createdAt": "2020-04-28T03:01:53Z", "path": "digdag-client/src/main/java/io/digdag/client/api/RestSessionAttempt.java", "diffHunk": "@@ -48,6 +48,19 @@ default int getIndex()\n \n     Optional<Instant> getFinishedAt();\n \n+    default String getStatus() {\n+        if (this.getCancelRequested()) {\n+            return \"KILLED\";\n+        }\n+        if (this.getSuccess()) {\n+            return \"SUCCESS\";\n+        }\n+        if (!this.getSuccess() && this.getDone()) {", "originalCommit": "b4b4cf410a04fef9c7953f4a97614db2d0f1ac52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MzI0Mw==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r416293243", "bodyText": "If you don't have a strong opinion for using an uppercase string as a return value, why don't you return a lowercase string to keep consistency with the existing behaviour?", "author": "komamitsu", "createdAt": "2020-04-28T03:08:30Z", "path": "digdag-client/src/main/java/io/digdag/client/api/RestSessionAttempt.java", "diffHunk": "@@ -48,6 +48,19 @@ default int getIndex()\n \n     Optional<Instant> getFinishedAt();\n \n+    default String getStatus() {\n+        if (this.getCancelRequested()) {\n+            return \"KILLED\";\n+        }\n+        if (this.getSuccess()) {\n+            return \"SUCCESS\";", "originalCommit": "b4b4cf410a04fef9c7953f4a97614db2d0f1ac52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c6e271abdd5f8702c3342baddfafae58deeb76da", "url": "https://github.com/treasure-data/digdag/commit/c6e271abdd5f8702c3342baddfafae58deeb76da", "message": "pr feedback", "committedDate": "2020-05-01T12:58:23Z", "type": "commit"}, {"oid": "ac77cbc6107751b6a5c9e739d8ea057a9be1d49f", "url": "https://github.com/treasure-data/digdag/commit/ac77cbc6107751b6a5c9e739d8ea057a9be1d49f", "message": "fixed unit test", "committedDate": "2020-05-01T14:13:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE4MjQ2Ng==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r421182466", "bodyText": "Don't need to change these to lowercases?", "author": "komamitsu", "createdAt": "2020-05-07T01:15:30Z", "path": "digdag-docs/src/_extra/api/swagger.yaml", "diffHunk": "@@ -1239,6 +1239,13 @@ definitions:\n       cancelRequested:\n         type: \"boolean\"\n         default: false\n+      status:\n+        type: \"string\"\n+        enum:\n+        - \"SUCCESS\"", "originalCommit": "ac77cbc6107751b6a5c9e739d8ea057a9be1d49f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3afc4c44e46432a90d73bba666713e2b17884262", "url": "https://github.com/treasure-data/digdag/commit/3afc4c44e46432a90d73bba666713e2b17884262", "message": "lower case swagger", "committedDate": "2020-05-13T12:32:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzNDg4NA==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r426334884", "bodyText": "Ah, it could happen that a task finishes while it received a cancel request right before the finish...? @yoyama\nIn this case, I think it should show success / error.", "author": "komamitsu", "createdAt": "2020-05-18T01:49:37Z", "path": "digdag-client/src/main/java/io/digdag/client/api/RestSessionAttempt.java", "diffHunk": "@@ -48,6 +48,19 @@ default int getIndex()\n \n     Optional<Instant> getFinishedAt();\n \n+    default String getStatus() {\n+        if (this.getCancelRequested()) {", "originalCommit": "3afc4c44e46432a90d73bba666713e2b17884262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQzOTg5OA==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r426439898", "bodyText": "I checked recent 5000000 records of session_attempts table in our service\n state_flags | count\n-------------+--------\n           6 | 588183\n           2 |  21313\n           3 |    635\n           0 |    136\n\n6 means success, 3 means killed, 2 means error and 0 means running. So far, success status that already received a cancel request doesn't exist and the change in this PR seems good. But I think current logic in updating state_flags won't be guaranteed on server side design in the future and the change in this PR should be a bit more robust for future changes to some extents. So I'd like to ask you to move if (this.getCancelRequested()) {...} into if (this.getDone()) {...}.\nBTW, I talked with @yoyama about this logic and we thought cancel requested and another state should be orthogonal as much as possible. So success (cancel requested) or running (cancel requested) might need to be added in the future.", "author": "komamitsu", "createdAt": "2020-05-18T08:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzNDg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1MDE3Nw==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r431150177", "bodyText": "@komamitsu is the latest commit what you meant, i'm not sure", "author": "dzannotti", "createdAt": "2020-05-27T13:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzNDg4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA5OTA4Nw==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r433099087", "bodyText": "Sorry for my complicated comment.\nI meant it would be better if the condition is like\n       if (this.getSuccess()) {\n            return \"success\";\n        }\n        if (this.getDone()) {\n            if (this.getCancelRequested()) {\n                return \"killed\";\n            }\n            else {\n                return \"error\";\n            }\n        }\n        return \"running\";", "author": "komamitsu", "createdAt": "2020-06-01T08:11:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMzNDg4NA=="}], "type": "inlineReview"}, {"oid": "b8b97aec50f5e401a0772ccfc6def043d8f6a930", "url": "https://github.com/treasure-data/digdag/commit/b8b97aec50f5e401a0772ccfc6def043d8f6a930", "message": "revised code", "committedDate": "2020-05-27T13:53:00Z", "type": "commit"}, {"oid": "1a354932ae6b7cc0eaefbfed63c9f14b1632a1c6", "url": "https://github.com/treasure-data/digdag/commit/1a354932ae6b7cc0eaefbfed63c9f14b1632a1c6", "message": "lowercase swagger", "committedDate": "2020-05-27T14:03:30Z", "type": "commit"}, {"oid": "7e42486596b23c1ed8d1cff93f64495d532645e5", "url": "https://github.com/treasure-data/digdag/commit/7e42486596b23c1ed8d1cff93f64495d532645e5", "message": "feedback implemented", "committedDate": "2020-06-03T13:35:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzNDg3NA==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r436434874", "bodyText": "In current implementation, killed is printed out only when the session attempt has been done...?", "author": "komamitsu", "createdAt": "2020-06-08T02:49:10Z", "path": "digdag-client/src/test/java/io/digdag/client/api/ModelCompatibilityTest.java", "diffHunk": "@@ -67,4 +67,96 @@ private String removeField(String json, String field)\n         assertThat(node.remove(field) == null, is(false));\n         return mapper.writeValueAsString(node);\n     }\n+\n+    @Test\n+    public void testSessionAttemptStatusSuccess()\n+            throws Exception\n+    {\n+        RestSessionAttempt attempt = RestSessionAttempt.builder()\n+            .id(Id.of(\"1\"))\n+            .index(3)\n+            .project(IdAndName.of(Id.of(\"1\"), \"p\"))\n+            .workflow(NameOptionalId.of(\"w\", Optional.of(Id.of(\"1\"))))\n+            .sessionId(Id.of(\"1\"))\n+            .sessionUuid(UUID.randomUUID())\n+            .sessionTime(OffsetDateTime.now(ZoneId.of(\"UTC\")))\n+            .retryAttemptName(Optional.absent())\n+            .done(false)\n+            .success(true)\n+            .cancelRequested(false)\n+            .params(newConfig())\n+            .createdAt(Instant.now())\n+            .finishedAt(Optional.absent())\n+            .build();\n+        assertThat(attempt.getStatus(), is(\"success\"));\n+    }\n+\n+    @Test\n+    public void testSessionAttemptStatusError()\n+            throws Exception\n+    {\n+        RestSessionAttempt attempt = RestSessionAttempt.builder()\n+            .id(Id.of(\"1\"))\n+            .index(3)\n+            .project(IdAndName.of(Id.of(\"1\"), \"p\"))\n+            .workflow(NameOptionalId.of(\"w\", Optional.of(Id.of(\"1\"))))\n+            .sessionId(Id.of(\"1\"))\n+            .sessionUuid(UUID.randomUUID())\n+            .sessionTime(OffsetDateTime.now(ZoneId.of(\"UTC\")))\n+            .retryAttemptName(Optional.absent())\n+            .done(true)\n+            .success(false)\n+            .cancelRequested(false)\n+            .params(newConfig())\n+            .createdAt(Instant.now())\n+            .finishedAt(Optional.absent())\n+            .build();\n+        assertThat(attempt.getStatus(), is(\"error\"));\n+    }\n+\n+    @Test\n+    public void testSessionAttemptStatusKilled()\n+            throws Exception\n+    {\n+        RestSessionAttempt attempt = RestSessionAttempt.builder()\n+            .id(Id.of(\"1\"))\n+            .index(3)\n+            .project(IdAndName.of(Id.of(\"1\"), \"p\"))\n+            .workflow(NameOptionalId.of(\"w\", Optional.of(Id.of(\"1\"))))\n+            .sessionId(Id.of(\"1\"))\n+            .sessionUuid(UUID.randomUUID())\n+            .sessionTime(OffsetDateTime.now(ZoneId.of(\"UTC\")))\n+            .retryAttemptName(Optional.absent())\n+            .done(false)", "originalCommit": "7e42486596b23c1ed8d1cff93f64495d532645e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzNTIyNQ==", "url": "https://github.com/treasure-data/digdag/pull/1398#discussion_r436435225", "bodyText": "Ah, found this one https://ci.appveyor.com/project/treasure-data/digdag/builds/33292140/job/ndb3n2q3x25i9wj3#L967.\nLet me tweak it...", "author": "komamitsu", "createdAt": "2020-06-08T02:51:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzNDg3NA=="}], "type": "inlineReview"}, {"oid": "e2c78b451ecd4c1582d5d8a9fded61576be56d37", "url": "https://github.com/treasure-data/digdag/commit/e2c78b451ecd4c1582d5d8a9fded61576be56d37", "message": "Fix test", "committedDate": "2020-06-08T02:53:27Z", "type": "commit"}]}