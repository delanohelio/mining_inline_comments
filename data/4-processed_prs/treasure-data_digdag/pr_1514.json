{"pr_number": 1514, "pr_title": "Add a document for Command Executor", "pr_createdAt": "2020-12-24T08:02:16Z", "pr_url": "https://github.com/treasure-data/digdag/pull/1514", "timeline": [{"oid": "50435e8e48e6f543a509854eade1f97585d82450", "url": "https://github.com/treasure-data/digdag/commit/50435e8e48e6f543a509854eade1f97585d82450", "message": "WIP: Add a document for Command Executor", "committedDate": "2020-12-24T08:44:40Z", "type": "commit"}, {"oid": "50435e8e48e6f543a509854eade1f97585d82450", "url": "https://github.com/treasure-data/digdag/commit/50435e8e48e6f543a509854eade1f97585d82450", "message": "WIP: Add a document for Command Executor", "committedDate": "2020-12-24T08:44:40Z", "type": "forcePushed"}, {"oid": "22abf8199b82960cfb0ed37e86b0aa14b8559419", "url": "https://github.com/treasure-data/digdag/commit/22abf8199b82960cfb0ed37e86b0aa14b8559419", "message": "WIP update the document.", "committedDate": "2021-01-19T08:43:24Z", "type": "commit"}, {"oid": "9f132c52e4054dfe4f05b59d8adefa314979e9cf", "url": "https://github.com/treasure-data/digdag/commit/9f132c52e4054dfe4f05b59d8adefa314979e9cf", "message": "WIP", "committedDate": "2021-01-20T06:07:18Z", "type": "commit"}, {"oid": "ad301abc7420c405f1b68f6d28d72f8ff7fc4947", "url": "https://github.com/treasure-data/digdag/commit/ad301abc7420c405f1b68f6d28d72f8ff7fc4947", "message": "Refactoring", "committedDate": "2021-01-20T07:44:44Z", "type": "commit"}, {"oid": "070091dd4e1aa605a970f561d40171d0590aab62", "url": "https://github.com/treasure-data/digdag/commit/070091dd4e1aa605a970f561d40171d0590aab62", "message": "Fix table in markdown related issue.", "committedDate": "2021-01-20T08:17:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDc1OTQ1NQ==", "url": "https://github.com/treasure-data/digdag/pull/1514#discussion_r560759455", "bodyText": "Need for table in markdown.", "author": "yoyama", "createdAt": "2021-01-20T08:24:43Z", "path": "digdag-docs/src/conf.py", "diffHunk": "@@ -34,7 +34,7 @@\n # Add any Sphinx extension module names here, as strings. They can be\n # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n # ones.\n-extensions = ['recommonmark']\n+extensions = ['recommonmark', 'sphinx_markdown_tables']", "originalCommit": "070091dd4e1aa605a970f561d40171d0590aab62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDc1OTUyNg==", "url": "https://github.com/treasure-data/digdag/pull/1514#discussion_r560759526", "bodyText": "Need for table in markdown.", "author": "yoyama", "createdAt": "2021-01-20T08:24:52Z", "path": "digdag-docs/requirements.txt", "diffHunk": "@@ -1,3 +1,4 @@\n sphinx\n recommonmark\n sphinx_rtd_theme\n+sphinx-markdown-tables", "originalCommit": "070091dd4e1aa605a970f561d40171d0590aab62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTQyMzEwMg==", "url": "https://github.com/treasure-data/digdag/pull/1514#discussion_r561423102", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `sh>`, `py>` `rb>` support Command Executor.\n          \n          \n            \n            `sh>`, `py>`, and `rb>` support Command Executor.", "author": "serihiro", "createdAt": "2021-01-21T00:22:06Z", "path": "digdag-docs/src/command_executor.md", "diffHunk": "@@ -0,0 +1,141 @@\n+# Command Executor\n+`Command Executor` provides a functionality to run operators in various environment like Docker.\n+\n+`sh>`, `py>` `rb>` support Command Executor.", "originalCommit": "070091dd4e1aa605a970f561d40171d0590aab62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTQyOTQ3OQ==", "url": "https://github.com/treasure-data/digdag/pull/1514#discussion_r561429479", "bodyText": "Regarding access-key-id and secret-access-key, we should mention about the fallback to commonly applied values (default vlaues) for all ECS clusters.\n\n  \n    \n      digdag/digdag-standards/src/main/java/io/digdag/standards/command/ecs/EcsClientConfig.java\n    \n    \n        Lines 78 to 88\n      in\n      cb35cf2\n    \n    \n    \n    \n\n        \n          \n           // This method assumes that `access_key_id` and `secret_access_key` are stored at `systemConfig`. \n        \n\n        \n          \n           // If the `systemConfig` has cluster specific configuration items, they will be fetched. \n        \n\n        \n          \n           // If not, the default configuration items will be done. \n        \n\n        \n          \n           if (systemConfig.has(SYSTEM_CONFIG_PREFIX + name + \".access_key_id\")) { \n        \n\n        \n          \n               ecsConfig.set(\"access_key_id\", systemConfig.get(SYSTEM_CONFIG_PREFIX + name + \".access_key_id\", String.class)); \n        \n\n        \n          \n               ecsConfig.set(\"secret_access_key\", systemConfig.get(SYSTEM_CONFIG_PREFIX + name + \".secret_access_key\", String.class)); \n        \n\n        \n          \n           } \n        \n\n        \n          \n           else { \n        \n\n        \n          \n               ecsConfig.set(\"access_key_id\", systemConfig.get(SYSTEM_CONFIG_DEFAULT_PREFIX + \"access_key_id\", String.class)); \n        \n\n        \n          \n               ecsConfig.set(\"secret_access_key\", systemConfig.get(SYSTEM_CONFIG_DEFAULT_PREFIX + \"secret_access_key\", String.class)); \n        \n\n        \n          \n           }", "author": "serihiro", "createdAt": "2021-01-21T00:28:49Z", "path": "digdag-docs/src/command_executor.md", "diffHunk": "@@ -0,0 +1,141 @@\n+# Command Executor\n+`Command Executor` provides a functionality to run operators in various environment like Docker.\n+\n+`sh>`, `py>` `rb>` support Command Executor.\n+\n+Supported environments are `AWS ECS (Elastic Container Service)`, `Docker`, and local.\n+`Kubernetes` is under development.\n+\n+For example, if you define a task with `sh>`, the task runs in local. If you add configuration for Docker, the task is executed in a docker container.\n+You can switch environment to run a task without changing task definition.\n+\n+Currently, ECS is default Command Executor.\n+If there is no valid configuration for ECS, fallback to Docker. \n+If there is no valid configuration for Docker, fallback to local.\n+\n+## ECS\n+### Setup\n+The following is an example configuration for ECS Command Executor.\n+\n+```\n+agent.command_executor.ecs.name = digdag-test\n+\n+agent.command_executor.ecs.digdag-test.access_key_id = <ACCESS KEY>\n+agent.command_executor.ecs.digdag-test.secret_access_key = <SECRET KEY>\n+agent.command_executor.ecs.digdag-test.launch_type = FARGATE\n+agent.command_executor.ecs.digdag-test.region = us-east-1\n+agent.command_executor.ecs.digdag-test.subnets = subnet-NNNNN\n+agent.command_executor.ecs.digdag-test.max_retries = 3\n+\n+agent.command_executor.ecs.temporal_storage.type = s3\n+agent.command_executor.ecs.temporal_storage.s3.bucket = <Bucket>\n+agent.command_executor.ecs.temporal_storage.s3.endpoint = s3.amazonaws.com\n+agent.command_executor.ecs.temporal_storage.s3.credentials.access-key-id = <ACCESS KEY>\n+agent.command_executor.ecs.temporal_storage.s3.credentials.secret-access-key = <SECRET KEY>\n+```", "originalCommit": "070091dd4e1aa605a970f561d40171d0590aab62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTU3MjQzOQ==", "url": "https://github.com/treasure-data/digdag/pull/1514#discussion_r561572439", "bodyText": "@serihiro Thank you for your review.\nThe description focuses on the minimum/basic configuration to start ECS Command Executor.\nIf we describes about default __default_config__, it is better to add a sub-section \"multiple cluster setting\".\nBut I don't have enough time to write them and skip it.\nWhat do you think it ?\nIf you think we need to add them, you can create additional PR for it.", "author": "yoyama", "createdAt": "2021-01-21T03:44:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTQyOTQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTYzMTU4OQ==", "url": "https://github.com/treasure-data/digdag/pull/1514#discussion_r561631589", "bodyText": "Then I will add it to another PR later. Thanks.", "author": "serihiro", "createdAt": "2021-01-21T06:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTQyOTQ3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTQ2MDM3OQ==", "url": "https://github.com/treasure-data/digdag/pull/1514#discussion_r561460379", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (This way lists and check all task definitions until found and take long time to run the task. See issue #1488)\n          \n          \n            \n            (This way lists and check all task definitions until found and take long time to run the task. See issue [#1488](https://github.com/treasure-data/digdag/issues/1488))", "author": "szyn", "createdAt": "2021-01-21T01:45:39Z", "path": "digdag-docs/src/command_executor.md", "diffHunk": "@@ -0,0 +1,141 @@\n+# Command Executor\n+`Command Executor` provides a functionality to run operators in various environment like Docker.\n+\n+`sh>`, `py>` `rb>` support Command Executor.\n+\n+Supported environments are `AWS ECS (Elastic Container Service)`, `Docker`, and local.\n+`Kubernetes` is under development.\n+\n+For example, if you define a task with `sh>`, the task runs in local. If you add configuration for Docker, the task is executed in a docker container.\n+You can switch environment to run a task without changing task definition.\n+\n+Currently, ECS is default Command Executor.\n+If there is no valid configuration for ECS, fallback to Docker. \n+If there is no valid configuration for Docker, fallback to local.\n+\n+## ECS\n+### Setup\n+The following is an example configuration for ECS Command Executor.\n+\n+```\n+agent.command_executor.ecs.name = digdag-test\n+\n+agent.command_executor.ecs.digdag-test.access_key_id = <ACCESS KEY>\n+agent.command_executor.ecs.digdag-test.secret_access_key = <SECRET KEY>\n+agent.command_executor.ecs.digdag-test.launch_type = FARGATE\n+agent.command_executor.ecs.digdag-test.region = us-east-1\n+agent.command_executor.ecs.digdag-test.subnets = subnet-NNNNN\n+agent.command_executor.ecs.digdag-test.max_retries = 3\n+\n+agent.command_executor.ecs.temporal_storage.type = s3\n+agent.command_executor.ecs.temporal_storage.s3.bucket = <Bucket>\n+agent.command_executor.ecs.temporal_storage.s3.endpoint = s3.amazonaws.com\n+agent.command_executor.ecs.temporal_storage.s3.credentials.access-key-id = <ACCESS KEY>\n+agent.command_executor.ecs.temporal_storage.s3.credentials.secret-access-key = <SECRET KEY>\n+```\n+\n+Each sub keys of `agent.command_executor` are as follows:\n+\n+| key                                |  description                                     |\n+| :--------------------------------- | :----------------------------------------------- |\n+| ecs.name                           | ECS Cluster name. The value &lt;name&gt; is used as the key of following configuration |\n+| ecs.&lt;name&gt;.access_key_id     | AWS access key for ECS. The key needs permissions for ECS and CloudWatch  |\n+| ecs.&lt;name&gt;.secret_access_key | AWS secret key                                   |\n+| ecs.&lt;name&gt;.launch_type       | The launch type of container. `FARGATE` or `EC2` |\n+| ecs.&lt;name&gt;.region            | AWS region                                       |\n+| ecs.&lt;name&gt;.subnets           | AWS subnet                                       |\n+| ecs.&lt;name&gt;.max_retries       | Number of retry for AWS client                   |\n+\n+Following keys are for configuration of temporal storage with AWS S3.\n+\n+| key                                                   | description                      |\n+| :---------------------------------------------------- | :------------------------------- |\n+| ecs.temporal_storage.type                             | The bucket type. `s3` for AWS S3 |\n+| ecs.temporal_storage.s3.bucket                        | Bucket name                      |\n+| ecs.temporal_storage.s3.endpoint                      | The end point URL for S3         |\n+| ecs.temporal_storage.s3.credentials.access-key-id     | AWS access key for the bucket    |\n+| ecs.temporal_storage.s3.credentials.secret-access-key | AWS secret key                   |\n+\n+### How to use from workflow\n+\n+In workflow definition, there are two ways to set a task on ECS.\n+\n+#### Set `ecs.task_definition_arn`\n+```\n+_export:\n+  ecs:\n+    task_definition_arn: \"arn:aws:ecs:us-east-1:...\"\n+\n++task1:\n+  py>: ...\n+```\n+\n+#### Set `docker.image`\n+```\n+_export:\n+  docker:\n+    image: \"digdag/digdag-python:3.7\"\n+\n++task1:\n+  py>: ...\n+```\n+\n+You need to set a tag `digdag.docker.image` in the task definition.\n+ECS Command Executor try to search the tagged task definition.\n+\n+(This way lists and check all task definitions until found and take long time to run the task. See issue #1488)", "originalCommit": "070091dd4e1aa605a970f561d40171d0590aab62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ba900b1059779f6a72da68aa148eaa0944bed21", "url": "https://github.com/treasure-data/digdag/commit/6ba900b1059779f6a72da68aa148eaa0944bed21", "message": "Update digdag-docs/src/command_executor.md\n\nCo-authored-by: Kazuhiro Serizawa <nserihiro@gmail.com>", "committedDate": "2021-01-21T03:34:22Z", "type": "commit"}, {"oid": "0e2d7725f4e25f3d9e02cd8be4bb25086e0dc85d", "url": "https://github.com/treasure-data/digdag/commit/0e2d7725f4e25f3d9e02cd8be4bb25086e0dc85d", "message": "Update digdag-docs/src/command_executor.md\n\nCo-authored-by: Shota Suzuki <aqr.aqua@gmail.com>", "committedDate": "2021-01-21T03:34:42Z", "type": "commit"}]}