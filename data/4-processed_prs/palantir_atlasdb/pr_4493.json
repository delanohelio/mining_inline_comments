{"pr_number": 4493, "pr_title": "Add metrics for off-heap timestamp cache.", "pr_createdAt": "2020-01-07T17:40:14Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4493", "timeline": [{"oid": "2649003b848f6b9f93145d262ea82bb22be9f0ba", "url": "https://github.com/palantir/atlasdb/commit/2649003b848f6b9f93145d262ea82bb22be9f0ba", "message": "Start", "committedDate": "2020-01-07T17:35:36Z", "type": "commit"}, {"oid": "0af52c7a70c99e2ca4bbdbd950e6c80086610cfd", "url": "https://github.com/palantir/atlasdb/commit/0af52c7a70c99e2ca4bbdbd950e6c80086610cfd", "message": "Metrics.", "committedDate": "2020-01-07T17:35:36Z", "type": "commit"}, {"oid": "5ca2dad7c4e137d2e4ea81f11228ae8d7cd1c0a4", "url": "https://github.com/palantir/atlasdb/commit/5ca2dad7c4e137d2e4ea81f11228ae8d7cd1c0a4", "message": "Cache size metric.", "committedDate": "2020-01-07T17:35:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE1MjU4MQ==", "url": "https://github.com/palantir/atlasdb/pull/4493#discussion_r364152581", "bodyText": "Hmm. A meter is plausible here, but it registers a bunch of series that I'm not sure are interesting for an operation that I don't think is super common.", "author": "jeremyk-91", "createdAt": "2020-01-08T10:07:35Z", "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/cache/OffHeapTimestampCache.java", "diffHunk": "@@ -126,6 +149,7 @@ private static CacheDescriptor createNamespaceAndConstructCacheProposal(\n         @Override\n         public Map<Map.Entry<Long, Long>, Map.Entry<Long, Long>> apply(Set<Map.Entry<Long, Long>> request) {\n             if (offHeapTimestampCache.cacheDescriptor.get().currentSize().get() >= offHeapTimestampCache.maxSize) {\n+                offHeapTimestampCache.taggedMetricRegistry.meter(CACHE_NUKE).mark();", "originalCommit": "5ca2dad7c4e137d2e4ea81f11228ae8d7cd1c0a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE2Njc1Ng==", "url": "https://github.com/palantir/atlasdb/pull/4493#discussion_r364166756", "bodyText": "Changed to the counter as we are only interested in the occurrences not the moving average.", "author": "OStevan", "createdAt": "2020-01-08T10:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE1MjU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE1MzY1OQ==", "url": "https://github.com/palantir/atlasdb/pull/4493#discussion_r364153659", "bodyText": "I think this needs to reset CACHE_SIZE to 0, or the metric should be something like CACHE_WRITES rather than CACHE_SIZE.", "author": "jeremyk-91", "createdAt": "2020-01-08T10:10:08Z", "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/cache/OffHeapTimestampCache.java", "diffHunk": "@@ -126,6 +149,7 @@ private static CacheDescriptor createNamespaceAndConstructCacheProposal(\n         @Override\n         public Map<Map.Entry<Long, Long>, Map.Entry<Long, Long>> apply(Set<Map.Entry<Long, Long>> request) {\n             if (offHeapTimestampCache.cacheDescriptor.get().currentSize().get() >= offHeapTimestampCache.maxSize) {\n+                offHeapTimestampCache.taggedMetricRegistry.meter(CACHE_NUKE).mark();\n                 offHeapTimestampCache.clear();", "originalCommit": "5ca2dad7c4e137d2e4ea81f11228ae8d7cd1c0a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE2OTE2NQ==", "url": "https://github.com/palantir/atlasdb/pull/4493#discussion_r364169165", "bodyText": "Discussed off-line, since counter does not provide a reset we will write a new Gauge which can be reseted.", "author": "OStevan", "createdAt": "2020-01-08T10:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE1MzY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NTU1OA==", "url": "https://github.com/palantir/atlasdb/pull/4493#discussion_r364185558", "bodyText": "Added a resettable counter implementation of a Gauge.", "author": "OStevan", "createdAt": "2020-01-08T11:28:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE1MzY1OQ=="}], "type": "inlineReview"}, {"oid": "7aca1d045e893ad08bae7be581bf60895751f110", "url": "https://github.com/palantir/atlasdb/commit/7aca1d045e893ad08bae7be581bf60895751f110", "message": "Added resettable counter for cache size metric.", "committedDate": "2020-01-08T11:15:28Z", "type": "commit"}, {"oid": "112761eeb9f2f86d7dd543ce6056c9ca92ee75a4", "url": "https://github.com/palantir/atlasdb/commit/112761eeb9f2f86d7dd543ce6056c9ca92ee75a4", "message": "Added tests for counter.", "committedDate": "2020-01-08T11:27:14Z", "type": "commit"}, {"oid": "0a7a7cecba92916ef02f9cea5ddba11416be4561", "url": "https://github.com/palantir/atlasdb/commit/0a7a7cecba92916ef02f9cea5ddba11416be4561", "message": "Simplified.", "committedDate": "2020-01-08T11:45:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDM5OQ==", "url": "https://github.com/palantir/atlasdb/pull/4493#discussion_r364194399", "bodyText": "this repeatedly re-registers the gauges", "author": "jeremyk-91", "createdAt": "2020-01-08T11:52:08Z", "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/cache/OffHeapTimestampCache.java", "diffHunk": "@@ -84,6 +105,7 @@ public void clear() {\n         if (previous != null) {\n             persistentTimestampStore.dropNamespace(previous.storeNamespace());\n         }\n+        taggedMetricRegistry.gauge(CACHE_SIZE, cacheSizeGauge);", "originalCommit": "0a7a7cecba92916ef02f9cea5ddba11416be4561", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIzMzA4Nw==", "url": "https://github.com/palantir/atlasdb/pull/4493#discussion_r364233087", "bodyText": "Now register once.", "author": "OStevan", "createdAt": "2020-01-08T13:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NDM5OQ=="}], "type": "inlineReview"}, {"oid": "a20aa6d748ac0a87433204910a173d3bada27207", "url": "https://github.com/palantir/atlasdb/commit/a20aa6d748ac0a87433204910a173d3bada27207", "message": "Single gauge register for cache.", "committedDate": "2020-01-08T13:32:56Z", "type": "commit"}]}