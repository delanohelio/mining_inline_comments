{"pr_number": 4799, "pr_title": "TransactionManager#startTransactions API.", "pr_createdAt": "2020-05-26T10:59:10Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4799", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2MjM2MQ==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r430362361", "bodyText": "I am thinking we could have a different Interface passed here here that is only lockwatch related, so we don't pollute PreCommitCondition.", "author": "jkozlowski", "createdAt": "2020-05-26T12:07:22Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/StartTransactionRequest.java", "diffHunk": "@@ -13,23 +13,12 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.palantir.atlasdb.transaction.api;\n \n import org.immutables.value.Value;\n \n-import com.palantir.lock.v2.LockToken;\n-\n @Value.Immutable\n-public interface TransactionAndImmutableTsLock {\n-\n-    Transaction transaction();\n-\n-    LockToken immutableTsLock();\n-\n-    static TransactionAndImmutableTsLock of(Transaction transaction, LockToken immutableTsLock) {\n-        return ImmutableTransactionAndImmutableTsLock.builder()\n-                .transaction(transaction)\n-                .immutableTsLock(immutableTsLock)\n-                .build();\n-    }\n+public interface StartTransactionRequest {\n+    PreCommitCondition preCommitCondition();", "originalCommit": "7488fdef599530eeea031c9c6a49b240957b7d2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2Mjg1Mw==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r430362853", "bodyText": "Possibly, this dealing with List might cleanup some more code (where we have CombinedCondition* type things), but I'd hold off for now.", "author": "jkozlowski", "createdAt": "2020-05-26T12:08:17Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/StartTransactionRequest.java", "diffHunk": "@@ -13,23 +13,12 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.palantir.atlasdb.transaction.api;\n \n import org.immutables.value.Value;\n \n-import com.palantir.lock.v2.LockToken;\n-\n @Value.Immutable\n-public interface TransactionAndImmutableTsLock {\n-\n-    Transaction transaction();\n-\n-    LockToken immutableTsLock();\n-\n-    static TransactionAndImmutableTsLock of(Transaction transaction, LockToken immutableTsLock) {\n-        return ImmutableTransactionAndImmutableTsLock.builder()\n-                .transaction(transaction)\n-                .immutableTsLock(immutableTsLock)\n-                .build();\n-    }\n+public interface StartTransactionRequest {\n+    PreCommitCondition preCommitCondition();", "originalCommit": "7488fdef599530eeea031c9c6a49b240957b7d2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2MzkzMA==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r430363930", "bodyText": "This would have to work with an empty list of started transactions, and just send the update up to the latest we know about. Or throw", "author": "jkozlowski", "createdAt": "2020-05-26T12:10:16Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -209,26 +214,74 @@ protected boolean shouldStopRetrying(int numTimesFailed) {\n         }\n     }\n \n-    @Override\n-    public <T, E extends Exception> T finishRunTaskWithLockThrowOnConflict(TransactionAndImmutableTsLock txAndLock,\n-                                                                           TransactionTask<T, E> task)\n-            throws E, TransactionFailedRetriableException {\n-        Timer postTaskTimer = getTimer(\"finishTask\");\n-        Timer.Context postTaskContext;\n+    static final OpenTransactions EMPTY = new OpenTransactions() {\n+        @Override\n+        public List<OpenTransaction> getTransactions() {\n+            return ImmutableList.of();\n+        }\n \n-        TransactionTask<T, E> wrappedTask = wrapTaskIfNecessary(task, txAndLock.immutableTsLock());\n+        //        @Override\n+        //        public TransactionsLockWatchEvents getEvents(Optional<IdentifiedVersion> lastKnownVersion) {\n+        //            throw new SafeIllegalArgumentException(\"Empty batch\");\n+        //        }\n+    };\n \n-        Transaction tx = txAndLock.transaction();\n-        T result;\n-        try {\n-            result = runTaskThrowOnConflict(wrappedTask, tx);\n-        } finally {\n-            postTaskContext = postTaskTimer.time();\n-            timelockService.tryUnlock(ImmutableSet.of(txAndLock.immutableTsLock()));\n+    private final class DefaultOpenTransactions implements OpenTransactions {\n+\n+        private final List<OpenTransaction> transactions;\n+\n+        DefaultOpenTransactions(\n+                List<OpenTransaction> transactions) {\n+            this.transactions = transactions;\n+        }\n+\n+\n+        @Override\n+        public List<OpenTransaction> getTransactions() {\n+            return transactions;\n+        }\n+\n+        //    @Override\n+        //    public TransactionsLockWatchEvents getEvents(Optional<IdentifiedVersion> lastKnownVersion) {\n+        //        return null;", "originalCommit": "7488fdef599530eeea031c9c6a49b240957b7d2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3MjIyOQ==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r430372229", "bodyText": "Interested in another name, but this is how we call this in atlasdb-proxy.", "author": "jkozlowski", "createdAt": "2020-05-26T12:25:35Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/OpenTransaction.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.transaction.api;\n+\n+import com.palantir.atlasdb.metrics.Timed;\n+\n+public interface OpenTransaction extends Transaction {", "originalCommit": "7488fdef599530eeea031c9c6a49b240957b7d2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4NTk2Nw==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r431385967", "bodyText": "I think this is fine, enough of us work on atlasdb-proxy that the naming should be obvious :)", "author": "jeremyk-91", "createdAt": "2020-05-27T19:17:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3MjIyOQ=="}], "type": "inlineReview"}, {"oid": "eaa28639a9cd9e27ba50710ba8cdd576b4bd9fbb", "url": "https://github.com/palantir/atlasdb/commit/eaa28639a9cd9e27ba50710ba8cdd576b4bd9fbb", "message": "Tighter API for starting transactions.", "committedDate": "2020-05-27T14:17:15Z", "type": "commit"}, {"oid": "f725e4dde3019d15fb7108eaa0705c5f40e232e6", "url": "https://github.com/palantir/atlasdb/commit/f725e4dde3019d15fb7108eaa0705c5f40e232e6", "message": "Cleanup", "committedDate": "2020-05-27T14:17:15Z", "type": "commit"}, {"oid": "139420ed6c4d22927efe8570854d5c5586187e0f", "url": "https://github.com/palantir/atlasdb/commit/139420ed6c4d22927efe8570854d5c5586187e0f", "message": "whitespace", "committedDate": "2020-05-27T14:17:15Z", "type": "commit"}, {"oid": "59cdd49fafe3624f828c78a279cf9ab7a1c749ec", "url": "https://github.com/palantir/atlasdb/commit/59cdd49fafe3624f828c78a279cf9ab7a1c749ec", "message": "Import order.", "committedDate": "2020-05-27T14:17:15Z", "type": "commit"}, {"oid": "6e61d5065e36e7a48e008db540bc143477a4d106", "url": "https://github.com/palantir/atlasdb/commit/6e61d5065e36e7a48e008db540bc143477a4d106", "message": "Fixup", "committedDate": "2020-05-27T14:17:16Z", "type": "commit"}, {"oid": "583e07e49c2c1f8ea40f9651a842f5685f792b9e", "url": "https://github.com/palantir/atlasdb/commit/583e07e49c2c1f8ea40f9651a842f5685f792b9e", "message": "Fixup", "committedDate": "2020-05-27T14:17:16Z", "type": "commit"}, {"oid": "8f4cf179927ee69ddb185124d9660cb036b323fc", "url": "https://github.com/palantir/atlasdb/commit/8f4cf179927ee69ddb185124d9660cb036b323fc", "message": "Add generated changelog entries", "committedDate": "2020-05-27T14:17:16Z", "type": "commit"}, {"oid": "8f4cf179927ee69ddb185124d9660cb036b323fc", "url": "https://github.com/palantir/atlasdb/commit/8f4cf179927ee69ddb185124d9660cb036b323fc", "message": "Add generated changelog entries", "committedDate": "2020-05-27T14:17:16Z", "type": "forcePushed"}, {"oid": "9a0bd72bc0cfc1e29497ff1570d227b9bd40636e", "url": "https://github.com/palantir/atlasdb/commit/9a0bd72bc0cfc1e29497ff1570d227b9bd40636e", "message": "Merge branch 'develop' into start-transactions-api", "committedDate": "2020-05-27T14:59:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDE5MQ==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r431404191", "bodyText": "Think we discussed this one, I'm still slightly in favour of StartTransactionsResponse", "author": "jeremyk-91", "createdAt": "2020-05-27T19:51:21Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/OpenTransactions.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.transaction.api;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import com.palantir.lock.watch.IdentifiedVersion;\n+import com.palantir.lock.watch.TransactionsLockWatchEvents;\n+\n+public interface OpenTransactions {", "originalCommit": "9a0bd72bc0cfc1e29497ff1570d227b9bd40636e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyNTA4MQ==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r431425081", "bodyText": "Cool, will rename now.", "author": "jkozlowski", "createdAt": "2020-05-27T20:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDE5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyNjI5NA==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r431426294", "bodyText": "Renamed", "author": "jkozlowski", "createdAt": "2020-05-27T20:36:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNTYwNA==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r431405604", "bodyText": "Should we document/put in the contract the behaviour around FAILUREs at -1 (for systems with no-op managers i.e. embedded)? I don't remember exactly how we handle that case", "author": "jeremyk-91", "createdAt": "2020-05-27T19:54:11Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/OpenTransactions.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.transaction.api;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import com.palantir.lock.watch.IdentifiedVersion;\n+import com.palantir.lock.watch.TransactionsLockWatchEvents;\n+\n+public interface OpenTransactions {\n+\n+    List<OpenTransaction> getTransactions();\n+\n+    /**\n+     * Returns a condensed view of new lock watch events since lastKnownVersion for the set of started transactions.\n+     *\n+     * @param lastKnownVersion exclusive start version to get events from\n+     */\n+    TransactionsLockWatchEvents getEvents(Optional<IdentifiedVersion> lastKnownVersion);", "originalCommit": "9a0bd72bc0cfc1e29497ff1570d227b9bd40636e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyOTM2MQ==", "url": "https://github.com/palantir/atlasdb/pull/4799#discussion_r431429361", "bodyText": "Discussed offline: this ends up just sending a dummy SNAPSHOT always, meaning lock watches are effectively off.", "author": "jkozlowski", "createdAt": "2020-05-27T20:42:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNTYwNA=="}], "type": "inlineReview"}, {"oid": "18c20231bcb2e73717c5deaf78595e64cb4884a5", "url": "https://github.com/palantir/atlasdb/commit/18c20231bcb2e73717c5deaf78595e64cb4884a5", "message": "Rename.", "committedDate": "2020-05-27T20:35:57Z", "type": "commit"}, {"oid": "479201e3d1bdcd96688deaef3e40bb68e3b6ebf2", "url": "https://github.com/palantir/atlasdb/commit/479201e3d1bdcd96688deaef3e40bb68e3b6ebf2", "message": "Fixup", "committedDate": "2020-05-27T20:51:00Z", "type": "commit"}]}