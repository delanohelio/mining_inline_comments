{"pr_number": 4988, "pr_title": "remove unnecessary oracle config restrictions", "pr_createdAt": "2020-09-18T19:04:07Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4988", "timeline": [{"oid": "6cf164ea5fd016d8a89ec421b2234fd3b8fcf5e8", "url": "https://github.com/palantir/atlasdb/commit/6cf164ea5fd016d8a89ec421b2234fd3b8fcf5e8", "message": "Add generated changelog entries", "committedDate": "2020-09-18T19:05:53Z", "type": "forcePushed"}, {"oid": "042365ecbcf52ffb6c40c54926cc7f3f8c496854", "url": "https://github.com/palantir/atlasdb/commit/042365ecbcf52ffb6c40c54926cc7f3f8c496854", "message": "Add generated changelog entries", "committedDate": "2020-09-18T19:09:46Z", "type": "forcePushed"}, {"oid": "557bd8ae00d9d09404416fb549fe27a26482d1c8", "url": "https://github.com/palantir/atlasdb/commit/557bd8ae00d9d09404416fb549fe27a26482d1c8", "message": "remove unnecessary oracle config restrictions\n\nForbidding configuring the keystore/truststore when the oracle protocol\nis not TCPS makes it a lot harder to automate configs. It is much easier\nto allow our config automation to always fill in these values even when\nthey won't be used.\n\nThis does not remove the validation that checks they are present when\nthey really are required.", "committedDate": "2020-09-18T19:24:13Z", "type": "commit"}, {"oid": "97cc2ba6e127251a8da7f490623bb93125cc0312", "url": "https://github.com/palantir/atlasdb/commit/97cc2ba6e127251a8da7f490623bb93125cc0312", "message": "Add generated changelog entries", "committedDate": "2020-09-18T19:24:16Z", "type": "commit"}, {"oid": "97cc2ba6e127251a8da7f490623bb93125cc0312", "url": "https://github.com/palantir/atlasdb/commit/97cc2ba6e127251a8da7f490623bb93125cc0312", "message": "Add generated changelog entries", "committedDate": "2020-09-18T19:24:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwMzM4MQ==", "url": "https://github.com/palantir/atlasdb/pull/4988#discussion_r492103381", "bodyText": "thanks for the detailed tests!", "author": "jeremyk-91", "createdAt": "2020-09-21T14:42:50Z", "path": "atlasdb-dbkvs-hikari/src/test/java/com/palantir/nexus/db/pool/config/OracleConnectionConfigTest.java", "diffHunk": "@@ -85,6 +90,71 @@ public void namespaceIsNamespaceOverrideIfServiceNameConfigurationSpecified() {\n         assertThat(connectionConfig.namespace()).contains(SERVICE_NAME_CONFIGURATION.namespaceOverride());\n     }\n \n+    @Test\n+    public void settingKeyAndTrustStoresAllowedWithoutTcps() {\n+        OracleConnectionConfig connectionConfig = getBaseBuilder()\n+                .sid(SID)\n+                .truststorePath(\"truststore.jks\")\n+                .truststorePassword(\"password\")\n+                .keystorePath(\"keystore.jks\")\n+                .keystorePassword(\"password\")\n+                .build();\n+        assertThat(connectionConfig.getProtocol())\n+                .isEqualTo(ConnectionProtocol.TCP);\n+        assertThat(connectionConfig.getTruststorePath())\n+                .isEqualTo(Optional.of(\"truststore.jks\"));\n+        assertThat(connectionConfig.getKeystorePath())\n+                .isEqualTo(Optional.of(\"keystore.jks\"));\n+        assertThat(connectionConfig.getTruststorePassword())\n+                .isEqualTo(Optional.of(\"password\"));\n+        assertThat(connectionConfig.getKeystorePassword())\n+                .isEqualTo(Optional.of(\"password\"));\n+\n+        // note that even though keystore/truststore are set, none of the javax.net.ssl. properties will be set\n+        // since the protocol is TCP\n+        Properties hikariProperties = connectionConfig.getHikariProperties();\n+        assertThat(hikariProperties.stringPropertyNames())\n+                .noneMatch(prop -> prop.startsWith(\"javax.net.ssl.\"));\n+    }\n+\n+    @Test\n+    public void tcpsSetsTrustStore() throws IOException {\n+        File truststoreFile = new File(\"truststore.jks\");\n+        boolean truststoreFileCreated = truststoreFile.createNewFile();\n+        try {\n+            OracleConnectionConfig connectionConfig = getBaseBuilder()\n+                    .sid(SID)\n+                    .protocol(ConnectionProtocol.TCPS)\n+                    .truststorePath(\"truststore.jks\")\n+                    .truststorePassword(\"password\")\n+                    .keystorePath(\"keystore.jks\")\n+                    .keystorePassword(\"password\")\n+                    .build();\n+\n+            assertThat(connectionConfig.getProtocol())\n+                    .isEqualTo(ConnectionProtocol.TCPS);\n+            assertThat(connectionConfig.getTruststorePath())\n+                    .isEqualTo(Optional.of(\"truststore.jks\"));\n+            assertThat(connectionConfig.getKeystorePath())\n+                    .isEqualTo(Optional.of(\"keystore.jks\"));\n+            assertThat(connectionConfig.getTruststorePassword())\n+                    .isEqualTo(Optional.of(\"password\"));\n+            assertThat(connectionConfig.getKeystorePassword())\n+                    .isEqualTo(Optional.of(\"password\"));\n+\n+            Properties hikariProperties = connectionConfig.getHikariProperties();\n+            assertThat(hikariProperties)\n+                    .containsEntry(\"javax.net.ssl.trustStore\", truststoreFile.getAbsolutePath())\n+                    .containsEntry(\"javax.net.ssl.trustStorePassword\", \"password\")\n+                    .doesNotContainKeys(\"javax.net.ssl.keyStore\", \"javax.net.ssl.keyStorePassword\");\n+        } finally {\n+            // clean up the truststore file if we created it\n+            if (truststoreFileCreated) {\n+                truststoreFile.delete();\n+            }\n+        }\n+    }", "originalCommit": "97cc2ba6e127251a8da7f490623bb93125cc0312", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwMzU0OQ==", "url": "https://github.com/palantir/atlasdb/pull/4988#discussion_r492103549", "bodyText": "I'd prefer if we put a WARN log here if any of them are present? Basically it's easy to make a config error and then be really puzzled as to why the settings aren't taking effect.", "author": "jeremyk-91", "createdAt": "2020-09-21T14:43:04Z", "path": "atlasdb-dbkvs-hikari/src/main/java/com/palantir/nexus/db/pool/config/OracleConnectionConfig.java", "diffHunk": "@@ -196,16 +196,6 @@ protected final void check() {\n         } else {\n             Preconditions.checkArgument(!getTwoWaySsl(),\n                     \"two way ssl cannot be enabled without enabling ConnectionProtocol.TCPS\");\n-            Preconditions.checkArgument(!getServerDn().isPresent(),\n-                    \"a server dn cannot be given without enabling ConnectionProtocol.TCPS\");\n-            Preconditions.checkArgument(!getTruststorePath().isPresent(),\n-                    \"a truststore path cannot be given without enabling ConnectionProtocol.TCPS\");\n-            Preconditions.checkArgument(!getTruststorePassword().isPresent(),\n-                    \"a truststore password cannot be given without enabling ConnectionProtocol.TCPS\");\n-            Preconditions.checkArgument(!getKeystorePath().isPresent(),\n-                    \"a keystore file cannot be given without enabling ConnectionProtocol.TCPS\");\n-            Preconditions.checkArgument(!getKeystorePassword().isPresent(),\n-                    \"a keystore password without enabling ConnectionProtocol.TCPS\");", "originalCommit": "97cc2ba6e127251a8da7f490623bb93125cc0312", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE0MDM3NA==", "url": "https://github.com/palantir/atlasdb/pull/4988#discussion_r492140374", "bodyText": "In this case if you set the protocol incorrectly you wouldn't be able to connect to the DB. Warning on here would just be unnecessary noise if the rest of the prefs were actually correct.", "author": "berler", "createdAt": "2020-09-21T15:18:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwMzU0OQ=="}], "type": "inlineReview"}]}