{"pr_number": 4746, "pr_title": "[PaxosLog] Part 7b: Configuration Sketch :fire: CONTENTIOUS :fire:", "pr_createdAt": "2020-04-30T16:56:56Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4746", "timeline": [{"oid": "dbb6290b04249c8051e46de532d38527cceec204", "url": "https://github.com/palantir/atlasdb/commit/dbb6290b04249c8051e46de532d38527cceec204", "message": "some changes", "committedDate": "2020-04-30T15:33:57Z", "type": "commit"}, {"oid": "f0e2dc0c8c05454f70b2c5616da5a270489960ec", "url": "https://github.com/palantir/atlasdb/commit/f0e2dc0c8c05454f70b2c5616da5a270489960ec", "message": "Testing", "committedDate": "2020-04-30T15:54:09Z", "type": "commit"}, {"oid": "302c97fbf913e6f186778494631f629b6323e7c8", "url": "https://github.com/palantir/atlasdb/commit/302c97fbf913e6f186778494631f629b6323e7c8", "message": "fix", "committedDate": "2020-04-30T16:56:21Z", "type": "commit"}, {"oid": "5bf4998f7e521f3a213451077e72ab777b5409c7", "url": "https://github.com/palantir/atlasdb/commit/5bf4998f7e521f3a213451077e72ab777b5409c7", "message": "Checkstyle", "committedDate": "2020-04-30T16:59:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDI5NQ==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418320295", "bodyText": "Is there any other config that you need here? Would it not make sense to inline this?", "author": "jkozlowski", "createdAt": "2020-04-30T22:17:19Z", "path": "timelock-agent/src/main/java/com/palantir/timelock/config/SqlitePaxosPersistenceConfiguration.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.timelock.config;\n+\n+import java.io.File;\n+\n+import org.immutables.value.Value;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+@Value.Immutable\n+// TODO (jkong): Allow serialization/deserialization, once we want this to actually be configurable\n+public interface SqlitePaxosPersistenceConfiguration {\n+    /**\n+     * Indicates where the SQLite paxos state log files should be stored.\n+     * Should not conflict with any other data directories that may be used by TimeLock to store Paxos state logs.\n+     */\n+    @JsonProperty(\"data-directory\")\n+    File dataDirectory();", "originalCommit": "5bf4998f7e521f3a213451077e72ab777b5409c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1MDk3Mg==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418450972", "bodyText": "I'm not aware of anything right now, but I also don't know that I won't need anything more", "author": "jeremyk-91", "createdAt": "2020-05-01T07:48:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUwODgyMg==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418508822", "bodyText": "I would be surprised if we wanted more config, the only thing I can think of is tuning any sqlite options, but instead we should just hardcode them and make sure they work correctly.", "author": "jkozlowski", "createdAt": "2020-05-01T11:35:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5MDk4OA==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r419590988", "bodyText": "Going ahead with this for now, we can change later on if needed: I'm not confident there is a single correct set of parameters given variance in request loads.", "author": "jeremyk-91", "createdAt": "2020-05-04T17:09:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDI5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDk1Nw==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418320957", "bodyText": "What if this was required and you actually checked state (meaning whether you already migrated or not/running validation) not just by looking if directories exist, but actually checking an internal sqlite table?", "author": "jkozlowski", "createdAt": "2020-04-30T22:18:56Z", "path": "timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java", "diffHunk": "@@ -39,6 +44,9 @@ default File dataDirectory() {\n         return new File(\"var/data/paxos\");\n     }\n \n+    @JsonProperty(\"sqlite-persistence\")\n+    Optional<SqlitePaxosPersistenceConfiguration> sqlitePersistence();", "originalCommit": "5bf4998f7e521f3a213451077e72ab777b5409c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1NDAyOA==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418454028", "bodyText": "The purpose of isNewService is not to determine whether migration/validation has taken place - it's to avoid accidental misconfiguration of the directories.\nThat said an inclusive OR is probably not ideal. While we're running in validation mode it's probably best to just test the base directory. Once we are migrating:\n\nIf both directories exist, accept.\nIf the data directory exists and SQLite does not, accept: migration maybe hasn't taken place. The SQLite migration will poison the data directory so we will be safe overall against someone just changing the SQLite directory.\nOtherwise, reject: we create the data directory every time when is new service is true (*).\n\nLong term solution / if we don't want to keep (*) around:\n\nIf both directories are absent, reject.\nIf SQLite exists and data directory does not, check if SQLite has migrated, and accept if yes, reject if no.\n\nWe could make this required, but I would not want to run the validation/migration everywhere immediately (because of its possible effect on startup times).", "author": "jeremyk-91", "createdAt": "2020-05-01T08:01:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUwOTE1Mw==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418509153", "bodyText": "That makes sense. I would suggest we should run this everywhere straight away: our infra should just downgrade if we overrun the startup budget, which means we'll need to fix that anyway. And we have canaries", "author": "jkozlowski", "createdAt": "2020-05-01T11:36:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0NzUzMQ==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418547531", "bodyText": "Cool. I was thinking of using the canaries as a mechanism for avoiding a possible rollback at large deployment (I'd assume the migration is O(N log N) with number of entries) but maybe that's too much effort, and I should just do the math here when we do pub lish the release and abort if we believe things will explode (e.g. if Herb takes 5 minutes, Brimstone will definitely be a no-go)", "author": "jeremyk-91", "createdAt": "2020-05-01T13:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU1NzA2MA==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418557060", "bodyText": "yeah, if we can get away without special config I'd say it's worth a try. Worst thing that happens as I understand it is that you just timeout the upgrade, and infra should rollback", "author": "jkozlowski", "createdAt": "2020-05-01T14:09:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyMDk1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0ODE0OQ==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418548149", "bodyText": "This is really tedious, but necessary \ud83c\udf35", "author": "gmaretic", "createdAt": "2020-05-01T13:48:09Z", "path": "timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java", "diffHunk": "@@ -76,21 +84,46 @@ default void checkLeaderModeIsNotInAutoMigrationMode() {\n \n     @Value.Check\n     default void check() {\n-        if (isNewService() && dataDirectory().isDirectory()) {\n+        boolean hasExistingDirectory = doesDirectoryAlreadyExist();\n+        if (isNewService() && hasExistingDirectory) {\n             throw new SafeIllegalArgumentException(\n                     \"This timelock server has been configured as a new stack (the 'is-new-service' property is set to \"\n-                            + \"true), but the Paxos data directory already exists. Almost surely this is because it \"\n+                            + \"true), but a Paxos data directory already exists. Almost surely this is because it \"\n                             + \"has already been turned on at least once, and thus the 'is-new-service' property should \"\n                             + \"be set to false for safety reasons.\");\n         }\n \n-        if (!isNewService() && !dataDirectory().isDirectory()) {\n-            throw new SafeIllegalArgumentException(\"The timelock data directory does not appear to exist. If you are \"\n+        if (!isNewService() && !hasExistingDirectory) {\n+            throw new SafeIllegalArgumentException(\"The timelock data directories do not appear to exist. If you are \"\n                     + \"trying to move the nodes on your timelock cluster or add new nodes, you have likely already \"\n                     + \"made a mistake by this point. This is a non-trivial operation and risks service corruption, \"\n                     + \"so contact support for assistance. Otherwise, if this is a new timelock service, please \"\n                     + \"configure paxos.is-new-service to true for the first startup only of each node.\");\n         }\n     }\n+    default boolean doesDirectoryAlreadyExist() {\n+        return dataDirectory().isDirectory() || sqlitePersistence()\n+                .map(SqlitePaxosPersistenceConfiguration::dataDirectory)\n+                .map(File::isDirectory).orElse(false);\n+    }\n \n+    @Value.Check\n+    default void checkSqliteAndFileDataDirectoriesAreNotPossiblyShared() {", "originalCommit": "5bf4998f7e521f3a213451077e72ab777b5409c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0ODczMg==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418548732", "bodyText": "I't kinda funky that this is not an IllegalStateException tbh", "author": "gmaretic", "createdAt": "2020-05-01T13:49:28Z", "path": "timelock-agent/src/test/java/com/palantir/timelock/config/PaxosInstallConfigurationIntegrationTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.timelock.config;\n+\n+import static org.assertj.core.api.Assertions.assertThatCode;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+public class PaxosInstallConfigurationIntegrationTest {\n+    @Rule\n+    public final TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+    private File fileSubdirectory;\n+    private File sqliteSubdirectory;\n+\n+    @Before\n+    public void setUp() {\n+        fileSubdirectory = temporaryFolder.getRoot().toPath().resolve(\"file\").toFile();\n+        sqliteSubdirectory = temporaryFolder.getRoot().toPath().resolve(\"sqlite\").toFile();\n+    }\n+\n+    @Test\n+    public void serviceIsNewIfNoDataDirectoriesPresent() {\n+        ImmutablePaxosInstallConfiguration.Builder partialConfiguration = createPartialConfiguration(\n+                fileSubdirectory, sqliteSubdirectory);\n+        assertThatCode(() -> partialConfiguration.isNewService(true).build()).doesNotThrowAnyException();\n+        assertThatThrownBy(() -> partialConfiguration.isNewService(false).build())\n+                .isInstanceOf(IllegalArgumentException.class)\n+                .hasMessageContaining(\"The timelock data directories do not appear to exist.\");", "originalCommit": "5bf4998f7e521f3a213451077e72ab777b5409c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMyMjM0Mw==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r419322343", "bodyText": "Yep, I'd have used State if fresh, but preserving legacy behaviour.", "author": "jeremyk-91", "createdAt": "2020-05-04T09:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0ODczMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0OTg0NA==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r418549844", "bodyText": "Both of these tests have both base and sqlite?", "author": "gmaretic", "createdAt": "2020-05-01T13:52:17Z", "path": "timelock-agent/src/test/java/com/palantir/timelock/config/PaxosInstallConfigurationIntegrationTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.timelock.config;\n+\n+import static org.assertj.core.api.Assertions.assertThatCode;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+public class PaxosInstallConfigurationIntegrationTest {\n+    @Rule\n+    public final TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+    private File fileSubdirectory;\n+    private File sqliteSubdirectory;\n+\n+    @Before\n+    public void setUp() {\n+        fileSubdirectory = temporaryFolder.getRoot().toPath().resolve(\"file\").toFile();\n+        sqliteSubdirectory = temporaryFolder.getRoot().toPath().resolve(\"sqlite\").toFile();\n+    }\n+\n+    @Test\n+    public void serviceIsNewIfNoDataDirectoriesPresent() {\n+        ImmutablePaxosInstallConfiguration.Builder partialConfiguration = createPartialConfiguration(\n+                fileSubdirectory, sqliteSubdirectory);\n+        assertThatCode(() -> partialConfiguration.isNewService(true).build()).doesNotThrowAnyException();\n+        assertThatThrownBy(() -> partialConfiguration.isNewService(false).build())\n+                .isInstanceOf(IllegalArgumentException.class)\n+                .hasMessageContaining(\"The timelock data directories do not appear to exist.\");\n+    }\n+\n+    @Test\n+    public void serviceIsNotNewIfBaseDataDirectoryIsPresent() {\n+        ImmutablePaxosInstallConfiguration.Builder partialConfiguration = createPartialConfiguration(\n+                getAndCreateRandomSubdirectory(), sqliteSubdirectory);\n+        assertIsNotNewService(partialConfiguration);\n+    }\n+\n+    @Test\n+    public void serviceIsNotNewIfSqliteDataDirectoryIsPresent() {", "originalCommit": "5bf4998f7e521f3a213451077e72ab777b5409c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMyMjY0NA==", "url": "https://github.com/palantir/atlasdb/pull/4746#discussion_r419322644", "bodyText": "Spoke offline: The confusion here was that baseDirectory and sqliteDirectory were path constants that were not created. We renamed them in the pairing session on Friday.", "author": "jeremyk-91", "createdAt": "2020-05-04T09:46:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0OTg0NA=="}], "type": "inlineReview"}, {"oid": "1a407684c63ca827504c2f758767971d7a424d97", "url": "https://github.com/palantir/atlasdb/commit/1a407684c63ca827504c2f758767971d7a424d97", "message": "CR", "committedDate": "2020-05-01T14:41:50Z", "type": "commit"}, {"oid": "664ad13f0246edab27c256b8899f41afea9d6c61", "url": "https://github.com/palantir/atlasdb/commit/664ad13f0246edab27c256b8899f41afea9d6c61", "message": "Fix bad mocks in test", "committedDate": "2020-05-04T11:22:22Z", "type": "commit"}, {"oid": "73708c20008e5c26d06f4859ba7ad68419bb3615", "url": "https://github.com/palantir/atlasdb/commit/73708c20008e5c26d06f4859ba7ad68419bb3615", "message": "Merge branch 'develop' into jkong/psl-config-round-2", "committedDate": "2020-05-04T15:51:17Z", "type": "commit"}, {"oid": "7a9dda08ec5b89995bfaf0ccad07e7a9563c8fb1", "url": "https://github.com/palantir/atlasdb/commit/7a9dda08ec5b89995bfaf0ccad07e7a9563c8fb1", "message": "PaxosInstallConfigIntegrationTest fix", "committedDate": "2020-05-04T16:19:07Z", "type": "commit"}]}