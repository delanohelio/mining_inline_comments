{"pr_number": 4827, "pr_title": "[LW] Change TransactionLockWatchEvents interface", "pr_createdAt": "2020-06-09T13:25:15Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4827", "timeline": [{"oid": "ae4b23d6f37058f842296ae63f46187b9ccb5611", "url": "https://github.com/palantir/atlasdb/commit/ae4b23d6f37058f842296ae63f46187b9ccb5611", "message": "bring over necessary changes", "committedDate": "2020-06-09T13:22:51Z", "type": "commit"}, {"oid": "5e4137d7eb1d4f506c3f6ab42291318280ac6320", "url": "https://github.com/palantir/atlasdb/commit/5e4137d7eb1d4f506c3f6ab42291318280ac6320", "message": "Add generated changelog entries", "committedDate": "2020-06-09T13:22:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMDExMQ==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437420111", "bodyText": "This now needs to generate a new random UUID on each call to getEventsForTransactions - is that intentional? I thought -1 as a sequence number was enough to indicate that the Events value was meaningless.", "author": "jeremyk-91", "createdAt": "2020-06-09T13:33:46Z", "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java", "diffHunk": "@@ -55,10 +52,19 @@ public CommitUpdate getCommitUpdate(long startTs) {\n     @Override\n     public TransactionsLockWatchEvents getEventsForTransactions(Set<Long> startTimestamps,\n             Optional<IdentifiedVersion> version) {\n-        return NONE;\n+        IdentifiedVersion fakeVersion = generateFakeVersion();", "originalCommit": "5e4137d7eb1d4f506c3f6ab42291318280ac6320", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyNDkyOQ==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437424929", "bodyText": "This was a suggestion from the other PR by Jakub (ensuring that it 100% is treated as a snapshot each time) but in honesty this is unnecessary - things go off the snapshot flag anyway.", "author": "Jolyon-S", "createdAt": "2020-06-09T13:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMDExMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMjI5Mw==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437422293", "bodyText": "I see why we'd want a boolean here, though this class feels like it should be renamed - it's quite a bit more than just the events now. Maybe TransactionsLockWatchUpdate?", "author": "jeremyk-91", "createdAt": "2020-06-09T13:36:44Z", "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/TransactionsLockWatchEvents.java", "diffHunk": "@@ -25,53 +25,9 @@\n  * Represents a condensed view of lock watch events occurring between some known version and a set of start transaction\n  * calls.\n  */\n+@Value.Immutable\n public interface TransactionsLockWatchEvents {\n-    <T> T accept(Visitor<T> visitor);\n-\n-    interface Visitor<T> {\n-        T visit(Events success);\n-        T visit(ForcedSnapshot failure);\n-    }\n-\n-    static Events success(List<LockWatchEvent> events, Map<Long, Long> startTsToSequence) {\n-        return ImmutableEvents.of(events, startTsToSequence);\n-    }\n-\n-    static ForcedSnapshot failure(LockWatchStateUpdate.Snapshot snapshot) {\n-        return ImmutableForcedSnapshot.of(snapshot);\n-    }\n-\n-    /**\n-     * A successful result contains a list of all lock watch events occurring between the last known version and the\n-     * last started transaction, and a mapping of start timestamps to their respective last occurred event.\n-     */\n-    @Value.Immutable\n-    interface Events extends TransactionsLockWatchEvents {\n-        @Value.Parameter\n-        List<LockWatchEvent> events();\n-        @Value.Parameter\n-        Map<Long, Long> startTsToSequence();\n-\n-        @Override\n-        default <T> T accept(Visitor<T> visitor) {\n-            return visitor.visit(this);\n-        }\n-    }\n-\n-    /**\n-     * A failure denotes that it was not possible to compute the result for all of the requested transactions. Since\n-     * that generally implies we will fail to get the necessary information for the commit timestamp anyway, instead of\n-     * giving partial information, we return a single snapshot that should be used to reseed the state of lock watches\n-     * for all future transactions.\n-     */\n-    @Value.Immutable\n-    interface ForcedSnapshot extends TransactionsLockWatchEvents {\n-        @Value.Parameter\n-        LockWatchStateUpdate.Snapshot snapshot();\n-\n-        @Override\n-        default <T> T accept(Visitor<T> visitor) {\n-            return visitor.visit(this);\n-        }\n-    }\n+    List<LockWatchEvent> events();\n+    Map<Long, IdentifiedVersion> startTsToSequence();\n+    boolean clearCache();", "originalCommit": "5e4137d7eb1d4f506c3f6ab42291318280ac6320", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyNTMxMg==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437425312", "bodyText": "I think that is reasonable", "author": "Jolyon-S", "createdAt": "2020-06-09T13:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMjI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyNzgwNQ==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437427805", "bodyText": "Is that renaming considered a breaking change?", "author": "Jolyon-S", "createdAt": "2020-06-09T13:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMjI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzMjE1Ng==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437432156", "bodyText": "Technically yes (though this is internal API so I wouldn't be too concerned).", "author": "jeremyk-91", "createdAt": "2020-06-09T13:47:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMjI5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMjQ3Mw==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437422473", "bodyText": "nit: If we want to keep this, this should be static. Though I think having a constant for the UUID would be preferable", "author": "jeremyk-91", "createdAt": "2020-06-09T13:36:59Z", "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java", "diffHunk": "@@ -55,10 +52,19 @@ public CommitUpdate getCommitUpdate(long startTs) {\n     @Override\n     public TransactionsLockWatchEvents getEventsForTransactions(Set<Long> startTimestamps,\n             Optional<IdentifiedVersion> version) {\n-        return NONE;\n+        IdentifiedVersion fakeVersion = generateFakeVersion();\n+        return ImmutableTransactionsLockWatchEvents.builder()\n+                .clearCache(true)\n+                .startTsToSequence(\n+                        startTimestamps.stream().collect(Collectors.toMap(startTs -> startTs, $ -> fakeVersion)))\n+                .build();\n     }\n \n     @Override\n     public void removeTransactionStateFromCache(long startTimestamp) {\n     }\n+\n+    private IdentifiedVersion generateFakeVersion() {", "originalCommit": "5e4137d7eb1d4f506c3f6ab42291318280ac6320", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyNTUxMw==", "url": "https://github.com/palantir/atlasdb/pull/4827#discussion_r437425513", "bodyText": "As per the other, I agree.", "author": "Jolyon-S", "createdAt": "2020-06-09T13:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMjQ3Mw=="}], "type": "inlineReview"}, {"oid": "ca01b2d4a453e6b10948173f504550562a516bd3", "url": "https://github.com/palantir/atlasdb/commit/ca01b2d4a453e6b10948173f504550562a516bd3", "message": "rename", "committedDate": "2020-06-09T13:45:09Z", "type": "commit"}, {"oid": "8f06bb75f610e987f82cd09e5dd5034699f9fe51", "url": "https://github.com/palantir/atlasdb/commit/8f06bb75f610e987f82cd09e5dd5034699f9fe51", "message": "fix annoying mistake", "committedDate": "2020-06-09T13:51:09Z", "type": "commit"}]}