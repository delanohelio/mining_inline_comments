{"pr_number": 5134, "pr_title": "Excavator: Prefer AssertJ", "pr_createdAt": "2020-11-25T17:56:27Z", "pr_url": "https://github.com/palantir/atlasdb/pull/5134", "timeline": [{"oid": "6e640149ea5df5d903d35a7746f6bb324014a9eb", "url": "https://github.com/palantir/atlasdb/commit/6e640149ea5df5d903d35a7746f6bb324014a9eb", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-11-29T01:06:38Z", "type": "forcePushed"}, {"oid": "c39db2d9c1b39cbc15b49ec59165ce282dfe3ff1", "url": "https://github.com/palantir/atlasdb/commit/c39db2d9c1b39cbc15b49ec59165ce282dfe3ff1", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-11-29T10:19:55Z", "type": "forcePushed"}, {"oid": "c819105412aea86dbe05993791617832a4165b68", "url": "https://github.com/palantir/atlasdb/commit/c819105412aea86dbe05993791617832a4165b68", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-01T07:49:17Z", "type": "forcePushed"}, {"oid": "6136fd62e895e034cf468ca5875756362e5d3552", "url": "https://github.com/palantir/atlasdb/commit/6136fd62e895e034cf468ca5875756362e5d3552", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-01T12:07:09Z", "type": "forcePushed"}, {"oid": "08244c4a8362aaa58c89ddacf009ca0bc2c0e15f", "url": "https://github.com/palantir/atlasdb/commit/08244c4a8362aaa58c89ddacf009ca0bc2c0e15f", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-02T22:46:37Z", "type": "forcePushed"}, {"oid": "c0e178aef81d5c1b76ea91c1ab7401396fa25448", "url": "https://github.com/palantir/atlasdb/commit/c0e178aef81d5c1b76ea91c1ab7401396fa25448", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-03T02:29:01Z", "type": "forcePushed"}, {"oid": "79e225388d8628546775731712f8a4d6989eac18", "url": "https://github.com/palantir/atlasdb/commit/79e225388d8628546775731712f8a4d6989eac18", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-03T19:23:24Z", "type": "forcePushed"}, {"oid": "4bd16556433a80a4fca5867cee872034dfb43453", "url": "https://github.com/palantir/atlasdb/commit/4bd16556433a80a4fca5867cee872034dfb43453", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-03T23:30:22Z", "type": "forcePushed"}, {"oid": "1b256a752d4d39bb1653fb07682527c836b530a3", "url": "https://github.com/palantir/atlasdb/commit/1b256a752d4d39bb1653fb07682527c836b530a3", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-04T22:08:42Z", "type": "forcePushed"}, {"oid": "8c42a11e36a074c0c4a01a1a50fc5d195c1940cd", "url": "https://github.com/palantir/atlasdb/commit/8c42a11e36a074c0c4a01a1a50fc5d195c1940cd", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-05T00:16:01Z", "type": "forcePushed"}, {"oid": "6ec382a637866eb79b1b20f2dccf189740616039", "url": "https://github.com/palantir/atlasdb/commit/6ec382a637866eb79b1b20f2dccf189740616039", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-06T10:03:38Z", "type": "forcePushed"}, {"oid": "807c9941afd89647cb2e652574c30d7083647479", "url": "https://github.com/palantir/atlasdb/commit/807c9941afd89647cb2e652574c30d7083647479", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-06T14:50:55Z", "type": "forcePushed"}, {"oid": "63ba2c81637966ad7fa1e194627a3350c071b3c1", "url": "https://github.com/palantir/atlasdb/commit/63ba2c81637966ad7fa1e194627a3350c071b3c1", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-06T22:53:59Z", "type": "forcePushed"}, {"oid": "ce252bd20da3aeeea0b786d6e5438385e64def9d", "url": "https://github.com/palantir/atlasdb/commit/ce252bd20da3aeeea0b786d6e5438385e64def9d", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-07T00:45:51Z", "type": "forcePushed"}, {"oid": "08acf494b0c6a7178b649dd9ab7ee0c492034f9b", "url": "https://github.com/palantir/atlasdb/commit/08acf494b0c6a7178b649dd9ab7ee0c492034f9b", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-07T15:42:18Z", "type": "forcePushed"}, {"oid": "7ea78d29dbe86700c7322a655a71ad69c11f7501", "url": "https://github.com/palantir/atlasdb/commit/7ea78d29dbe86700c7322a655a71ad69c11f7501", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-07T18:20:49Z", "type": "forcePushed"}, {"oid": "fbf5b536abd179ffbba707342d29fcac5f1ebbfb", "url": "https://github.com/palantir/atlasdb/commit/fbf5b536abd179ffbba707342d29fcac5f1ebbfb", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-08T02:09:21Z", "type": "forcePushed"}, {"oid": "764ad4c35db56343c7577172ae2ec080fc4a80a0", "url": "https://github.com/palantir/atlasdb/commit/764ad4c35db56343c7577172ae2ec080fc4a80a0", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-08T09:38:13Z", "type": "forcePushed"}, {"oid": "bcc9e988abe5e1541aabac5d3e7ba69990a3cb7a", "url": "https://github.com/palantir/atlasdb/commit/bcc9e988abe5e1541aabac5d3e7ba69990a3cb7a", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-12T08:57:07Z", "type": "forcePushed"}, {"oid": "801c90318b9c2ad165b402d490bb23690af49471", "url": "https://github.com/palantir/atlasdb/commit/801c90318b9c2ad165b402d490bb23690af49471", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-12T14:29:07Z", "type": "forcePushed"}, {"oid": "55063e4fd49ea19e19ecbca4a7ff518e20384c41", "url": "https://github.com/palantir/atlasdb/commit/55063e4fd49ea19e19ecbca4a7ff518e20384c41", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-13T17:31:53Z", "type": "forcePushed"}, {"oid": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "url": "https://github.com/palantir/atlasdb/commit/f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-13T21:15:34Z", "type": "commit"}, {"oid": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "url": "https://github.com/palantir/atlasdb/commit/f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "message": "Excavator: Prefer AssertJ", "committedDate": "2020-12-13T21:15:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjA2NQ==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545266065", "bodyText": "hasSameSizeAs", "author": "jeremyk-91", "createdAt": "2020-12-17T17:24:52Z", "path": "atlasdb-dbkvs/src/test/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/RowsColumnRangeBatchRequestsTest.java", "diffHunk": "@@ -134,9 +134,9 @@ private static void assertPartitionsHaveCorrectSize(\n             int actualPartitionSize = RowsColumnRangeBatchRequests.getAllRowsInOrder(partitions.get(i))\n                     .size();\n             if (i < partitions.size() - 1) {\n-                Assert.assertEquals(expectedSize, actualPartitionSize);\n+                assertThat(actualPartitionSize).isEqualTo(expectedSize);", "originalCommit": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI3Mjk4Mw==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545272983", "bodyText": "or not", "author": "jeremyk-91", "createdAt": "2020-12-17T17:34:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjE1MQ==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545266151", "bodyText": "isLessThanOrEqualTo", "author": "jeremyk-91", "createdAt": "2020-12-17T17:25:00Z", "path": "atlasdb-dbkvs/src/test/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/RowsColumnRangeBatchRequestsTest.java", "diffHunk": "@@ -134,9 +134,9 @@ private static void assertPartitionsHaveCorrectSize(\n             int actualPartitionSize = RowsColumnRangeBatchRequests.getAllRowsInOrder(partitions.get(i))\n                     .size();\n             if (i < partitions.size() - 1) {\n-                Assert.assertEquals(expectedSize, actualPartitionSize);\n+                assertThat(actualPartitionSize).isEqualTo(expectedSize);\n             } else {\n-                Assert.assertTrue(actualPartitionSize <= expectedSize);\n+                assertThat(actualPartitionSize <= expectedSize).isTrue();", "originalCommit": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIzOTgxMQ==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r552239811", "bodyText": "Same here, it will eventually make it to isLessThanOrEqualTo :-)", "author": "carterkozak", "createdAt": "2021-01-05T22:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjE1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjYxOA==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545266618", "bodyText": "bleh, this whole group isn't quite right though the original is wrong anyway", "author": "jeremyk-91", "createdAt": "2020-12-17T17:25:42Z", "path": "atlasdb-dbkvs/src/test/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/WhereClausesTest.java", "diffHunk": "@@ -39,7 +40,7 @@ public void startOnly() {\n         WhereClauses whereClauses = WhereClauses.create(\"i\", request);\n \n         List<String> expectedClauses = ImmutableList.of(\"i.row_name >= ?\");\n-        assertEquals(whereClauses.getClauses(), expectedClauses);\n+        assertThat(expectedClauses).isEqualTo(whereClauses.getClauses());", "originalCommit": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjgwMQ==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545266801", "bodyText": "hasSameSizeAs", "author": "jeremyk-91", "createdAt": "2020-12-17T17:25:57Z", "path": "atlasdb-dbkvs/src/test/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/WhereClausesTest.java", "diffHunk": "@@ -139,16 +140,16 @@ public void usesDifferentTableIdentifier() {\n \n         List<String> expectedClauses =\n                 ImmutableList.of(\"other.row_name >= ?\", \"other.row_name < ?\", \"other.col_name IN (?)\");\n-        assertEquals(whereClauses.getClauses(), expectedClauses);\n+        assertThat(expectedClauses).isEqualTo(whereClauses.getClauses());\n \n         checkWhereArguments(whereClauses, ImmutableList.of(START, END, COL1));\n     }\n \n     private void checkWhereArguments(WhereClauses whereClauses, List<byte[]> expectedArgs) {\n         List<Object> actualArgs = whereClauses.getArguments();\n         for (int i = 0; i < actualArgs.size(); i++) {\n-            assertArrayEquals(expectedArgs.get(i), (byte[]) actualArgs.get(i));\n+            assertThat((byte[]) actualArgs.get(i)).isEqualTo(expectedArgs.get(i));\n         }\n-        assertEquals(expectedArgs.size(), actualArgs.size());\n+        assertThat(actualArgs.size()).isEqualTo(expectedArgs.size());", "originalCommit": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIzOTU5MQ==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r552239591", "bodyText": "This should turn into hasSameSizeAs if the automation runs a few more times. We opted to implement the simplest migrations such that we could funnel the code to an eventually ideal state rather than cluttering the migrations with attempts to make everything ideal on the first try.", "author": "carterkozak", "createdAt": "2021-01-05T22:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY1NTY5OQ==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r552655699", "bodyText": "Yeah, I left these more as notes to myself to update them :)", "author": "jeremyk-91", "createdAt": "2021-01-06T14:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY1NTg2NQ==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r552655865", "bodyText": "Though makes sense that running these transformations multiple times would converge on the correct result", "author": "jeremyk-91", "createdAt": "2021-01-06T14:20:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NjgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2Njk1Mw==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545266953", "bodyText": "This feels like it'll implode, let's see", "author": "jeremyk-91", "createdAt": "2020-12-17T17:26:10Z", "path": "atlasdb-dbkvs/src/test/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/WhereClausesTest.java", "diffHunk": "@@ -139,16 +140,16 @@ public void usesDifferentTableIdentifier() {\n \n         List<String> expectedClauses =\n                 ImmutableList.of(\"other.row_name >= ?\", \"other.row_name < ?\", \"other.col_name IN (?)\");\n-        assertEquals(whereClauses.getClauses(), expectedClauses);\n+        assertThat(expectedClauses).isEqualTo(whereClauses.getClauses());\n \n         checkWhereArguments(whereClauses, ImmutableList.of(START, END, COL1));\n     }\n \n     private void checkWhereArguments(WhereClauses whereClauses, List<byte[]> expectedArgs) {\n         List<Object> actualArgs = whereClauses.getArguments();\n         for (int i = 0; i < actualArgs.size(); i++) {\n-            assertArrayEquals(expectedArgs.get(i), (byte[]) actualArgs.get(i));\n+            assertThat((byte[]) actualArgs.get(i)).isEqualTo(expectedArgs.get(i));", "originalCommit": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI3NTYxNA==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545275614", "bodyText": "nope", "author": "jeremyk-91", "createdAt": "2020-12-17T17:37:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2Njk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2NzM1NA==", "url": "https://github.com/palantir/atlasdb/pull/5134#discussion_r545267354", "bodyText": "yeah, I guess this one is hard to replicate", "author": "jeremyk-91", "createdAt": "2020-12-17T17:26:43Z", "path": "atlasdb-dbkvs/src/test/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/ranges/RangePredicateHelperTest.java", "diffHunk": "@@ -38,8 +39,8 @@ public void startRowInclusiveEmpty() {\n         RangePredicateHelper.create(false, DBType.ORACLE, builder).startRowInclusive(PtBytes.EMPTY_BYTE_ARRAY);\n         FullQuery query = builder.build();\n \n-        assertThat(query.getQuery(), isEmptyString());\n-        assertThat(query.getArgs(), emptyArray());\n+        assertThat(query.getQuery()).is(new HamcrestCondition<>(isEmptyString()));", "originalCommit": "f9ccf4ca69d443d2bd1eb49fd17637421a72d98a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eb2ddf40baa5f9323f8eba893bea38f568cd8774", "url": "https://github.com/palantir/atlasdb/commit/eb2ddf40baa5f9323f8eba893bea38f568cd8774", "message": "minor changes", "committedDate": "2020-12-17T17:37:58Z", "type": "commit"}, {"oid": "5742e671ea31d9d5c0cf3feef868e3711067f047", "url": "https://github.com/palantir/atlasdb/commit/5742e671ea31d9d5c0cf3feef868e3711067f047", "message": "spotless", "committedDate": "2020-12-17T17:39:00Z", "type": "commit"}]}