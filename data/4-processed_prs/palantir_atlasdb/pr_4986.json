{"pr_number": 4986, "pr_title": "Reject requests if corruption", "pr_createdAt": "2020-09-15T15:52:18Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4986", "timeline": [{"oid": "9736f990188f66ab4745822023ab208e64e7afe8", "url": "https://github.com/palantir/atlasdb/commit/9736f990188f66ab4745822023ab208e64e7afe8", "message": "Reject requests if corruption", "committedDate": "2020-09-15T15:51:47Z", "type": "commit"}, {"oid": "3f476cd5b835d283d17fb6057eab3c2d3903a331", "url": "https://github.com/palantir/atlasdb/commit/3f476cd5b835d283d17fb6057eab3c2d3903a331", "message": "Minor refactor", "committedDate": "2020-09-15T18:04:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1MjUwOA==", "url": "https://github.com/palantir/atlasdb/pull/4986#discussion_r489352508", "bodyText": "Note - QosException.unavailable returns 200 response and the client may retry at a later time.", "author": "sudiksha27", "createdAt": "2020-09-16T11:05:13Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/corruption/UndertowCorruptionHandlerService.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.corruption;\n+\n+import java.util.List;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.palantir.common.remoting.ServiceNotAvailableException;\n+import com.palantir.conjure.java.undertow.lib.Endpoint;\n+import com.palantir.conjure.java.undertow.lib.UndertowRuntime;\n+import com.palantir.conjure.java.undertow.lib.UndertowService;\n+\n+import io.undertow.server.HandlerWrapper;\n+\n+public class UndertowCorruptionHandlerService implements UndertowService {\n+    private final UndertowService delegate;\n+    private final HandlerWrapper wrapper;\n+    private final CorruptionHealthCheck healthCheck;\n+\n+    public UndertowCorruptionHandlerService(UndertowService service, CorruptionHealthCheck healthCheck) {\n+        this.delegate = service;\n+        this.healthCheck = healthCheck;\n+        this.wrapper = handler -> exchange -> {\n+            if (healthCheck.isHealthy()) {\n+                handler.handleRequest(exchange);\n+            } else {\n+                throw new ServiceNotAvailableException(\"TimeLock is not available on account of data corruption.\");", "originalCommit": "3f476cd5b835d283d17fb6057eab3c2d3903a331", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "728157d98fb3d3176a8524aa78b3b844594e5cc6", "url": "https://github.com/palantir/atlasdb/commit/728157d98fb3d3176a8524aa78b3b844594e5cc6", "message": "Update UndertowCorruptionHandlerService.java", "committedDate": "2020-09-16T21:04:46Z", "type": "commit"}, {"oid": "3398fbd2c62480a58c0376e1f24b3fb7a9453b03", "url": "https://github.com/palantir/atlasdb/commit/3398fbd2c62480a58c0376e1f24b3fb7a9453b03", "message": "Update JerseyCorruptionFilter.java", "committedDate": "2020-09-16T21:05:23Z", "type": "commit"}, {"oid": "d0ce165d59eaaf5708193e85d1a0188e4892961c", "url": "https://github.com/palantir/atlasdb/commit/d0ce165d59eaaf5708193e85d1a0188e4892961c", "message": "Json response message", "committedDate": "2020-09-16T21:53:19Z", "type": "commit"}, {"oid": "aaae88d1cdbd1d3a8bfc466d24f5a719b88b0df2", "url": "https://github.com/palantir/atlasdb/commit/aaae88d1cdbd1d3a8bfc466d24f5a719b88b0df2", "message": "Service unavailable exception", "committedDate": "2020-09-16T21:54:25Z", "type": "commit"}, {"oid": "a825c719dad92f54a0870467ec204ddb36d52e21", "url": "https://github.com/palantir/atlasdb/commit/a825c719dad92f54a0870467ec204ddb36d52e21", "message": "Refactor", "committedDate": "2020-09-17T09:34:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNjY3NA==", "url": "https://github.com/palantir/atlasdb/pull/4986#discussion_r490136674", "bodyText": "This should be consistent with the other QoS exceptions we get.", "author": "jeremyk-91", "createdAt": "2020-09-17T10:24:58Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/corruption/Constants.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.corruption;\n+\n+public final class Constants {\n+    private Constants() {\n+        // no op\n+    }\n+\n+    public static final String CORRUPTION_MESSAGE\n+            = \"{\\\"error\\\": \\\"TimeLock is not available on account of data corruption.\\\"}\";", "originalCommit": "a825c719dad92f54a0870467ec204ddb36d52e21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzOTA4OA==", "url": "https://github.com/palantir/atlasdb/pull/4986#discussion_r490139088", "bodyText": "I don't think this is needed if we standardise with internal frameworks.", "author": "jeremyk-91", "createdAt": "2020-09-17T10:29:33Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/corruption/UndertowCorruptionHandlerService.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.corruption;\n+\n+import java.util.List;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.palantir.conjure.java.undertow.lib.Endpoint;\n+import com.palantir.conjure.java.undertow.lib.UndertowRuntime;\n+import com.palantir.conjure.java.undertow.lib.UndertowService;\n+\n+import io.undertow.server.HandlerWrapper;\n+import io.undertow.util.Headers;\n+import io.undertow.util.StatusCodes;\n+\n+public class UndertowCorruptionHandlerService implements UndertowService {\n+    private final UndertowService delegate;\n+    private final HandlerWrapper wrapper;\n+    private final CorruptionHealthCheck healthCheck;\n+\n+    public UndertowCorruptionHandlerService(UndertowService service, CorruptionHealthCheck healthCheck) {\n+        this.delegate = service;\n+        this.healthCheck = healthCheck;\n+        this.wrapper = handler -> exchange -> {\n+            if (healthCheck.isHealthy()) {\n+                handler.handleRequest(exchange);\n+            } else {\n+                exchange.setStatusCode(StatusCodes.SERVICE_UNAVAILABLE);\n+                exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, \"application/json\");", "originalCommit": "a825c719dad92f54a0870467ec204ddb36d52e21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b50c4e13c141861cdcbd4c69e8a4f3ecf5b7f01d", "url": "https://github.com/palantir/atlasdb/commit/b50c4e13c141861cdcbd4c69e8a4f3ecf5b7f01d", "message": "Address comments", "committedDate": "2020-09-17T10:31:50Z", "type": "commit"}, {"oid": "b47183d77af8f49caf6ccd150475a918d18c99fc", "url": "https://github.com/palantir/atlasdb/commit/b47183d77af8f49caf6ccd150475a918d18c99fc", "message": "Add generated changelog entries", "committedDate": "2020-09-17T10:31:50Z", "type": "commit"}, {"oid": "de406edae9eb287bbb3823ef944499dbd1158ac0", "url": "https://github.com/palantir/atlasdb/commit/de406edae9eb287bbb3823ef944499dbd1158ac0", "message": "Fix", "committedDate": "2020-09-23T12:32:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE5NTQ0Nw==", "url": "https://github.com/palantir/atlasdb/pull/4986#discussion_r495195447", "bodyText": "as a note, you can here throw QosException.unavailabe() and induce the same behaviour", "author": "j-baker", "createdAt": "2020-09-25T19:41:25Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/corruption/UndertowCorruptionHandlerService.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.corruption;\n+\n+import java.util.List;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.palantir.conjure.java.undertow.lib.Endpoint;\n+import com.palantir.conjure.java.undertow.lib.UndertowRuntime;\n+import com.palantir.conjure.java.undertow.lib.UndertowService;\n+\n+import io.undertow.server.HandlerWrapper;\n+import io.undertow.util.Headers;\n+import io.undertow.util.StatusCodes;\n+\n+public class UndertowCorruptionHandlerService implements UndertowService {\n+    private final UndertowService delegate;\n+    private final HandlerWrapper wrapper;\n+    private final CorruptionHealthCheck healthCheck;\n+\n+    public UndertowCorruptionHandlerService(UndertowService service, CorruptionHealthCheck healthCheck) {\n+        this.delegate = service;\n+        this.healthCheck = healthCheck;\n+        this.wrapper = handler -> exchange -> {\n+            if (healthCheck.isHealthy()) {\n+                handler.handleRequest(exchange);\n+            } else {\n+                exchange.setStatusCode(StatusCodes.SERVICE_UNAVAILABLE);", "originalCommit": "de406edae9eb287bbb3823ef944499dbd1158ac0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}