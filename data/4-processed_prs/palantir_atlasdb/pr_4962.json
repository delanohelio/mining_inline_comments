{"pr_number": 4962, "pr_title": "[LW] Fixes, 5: Throw underlying exception if already on fallback cache", "pr_createdAt": "2020-08-24T13:44:55Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4962", "timeline": [{"oid": "77ca6cf097e36f1321394d022093468940b15006", "url": "https://github.com/palantir/atlasdb/commit/77ca6cf097e36f1321394d022093468940b15006", "message": "fix failure on fallback case", "committedDate": "2020-08-24T13:43:00Z", "type": "commit"}, {"oid": "818185eeb68b6cb2cbf07d72ba22d932fec8817b", "url": "https://github.com/palantir/atlasdb/commit/818185eeb68b6cb2cbf07d72ba22d932fec8817b", "message": "Add generated changelog entries", "committedDate": "2020-08-24T13:43:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcyNjU4Nw==", "url": "https://github.com/palantir/atlasdb/pull/4962#discussion_r475726587", "bodyText": "are you sure you want equals here and not ==?", "author": "jeremyk-91", "createdAt": "2020-08-24T16:07:41Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ResilientLockWatchEventCache.java", "diffHunk": "@@ -74,11 +74,15 @@ synchronized RuntimeException handleException(InvocationTargetException rethrow)\n         } catch (TransactionLockWatchFailedException e) {\n             throw e;\n         } catch (Throwable t) {\n-            log.warn(\"Unexpected failure occurred when trying to use the default cache. Switching to the fallback \"\n-                    + \"implementation\", t);\n-            fallbackCacheSelectedCounter.inc();\n-            delegate = fallbackCache;\n-            throw new TransactionLockWatchFailedException(\"Unexpected failure in the lock watch cache\", t);\n+            if (delegate.equals(fallbackCache)) {", "originalCommit": "818185eeb68b6cb2cbf07d72ba22d932fec8817b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4NjQwMQ==", "url": "https://github.com/palantir/atlasdb/pull/4962#discussion_r476286401", "bodyText": "yeah, good catch. equals here would mean we never bother actually falling back, but we probably want to do that even if this was configured with the same (but not same in memory) for each for some reason", "author": "Jolyon-S", "createdAt": "2020-08-25T08:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcyNjU4Nw=="}], "type": "inlineReview"}, {"oid": "35c42c1b700cc4881e45ef8c27aac79f51e91825", "url": "https://github.com/palantir/atlasdb/commit/35c42c1b700cc4881e45ef8c27aac79f51e91825", "message": "use equals equals instead of equals", "committedDate": "2020-08-25T08:53:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMxMDc4MQ==", "url": "https://github.com/palantir/atlasdb/pull/4962#discussion_r476310781", "bodyText": "Should've been SafeRuntimeException", "author": "jkozlowski", "createdAt": "2020-08-25T09:28:25Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ResilientLockWatchEventCache.java", "diffHunk": "@@ -74,11 +74,15 @@ synchronized RuntimeException handleException(InvocationTargetException rethrow)\n         } catch (TransactionLockWatchFailedException e) {\n             throw e;\n         } catch (Throwable t) {\n-            log.warn(\"Unexpected failure occurred when trying to use the default cache. Switching to the fallback \"\n-                    + \"implementation\", t);\n-            fallbackCacheSelectedCounter.inc();\n-            delegate = fallbackCache;\n-            throw new TransactionLockWatchFailedException(\"Unexpected failure in the lock watch cache\", t);\n+            if (delegate == fallbackCache) {\n+                throw new RuntimeException(t);", "originalCommit": "35c42c1b700cc4881e45ef8c27aac79f51e91825", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}