{"pr_number": 4616, "pr_title": "[LW] Batched get commit timestamps endpoint", "pr_createdAt": "2020-02-28T12:00:18Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4616", "timeline": [{"oid": "3264e2603117b1d7276d1c7d6d83b2a5321c1c10", "url": "https://github.com/palantir/atlasdb/commit/3264e2603117b1d7276d1c7d6d83b2a5321c1c10", "message": "Batched get commit timestamps", "committedDate": "2020-02-28T11:40:48Z", "type": "commit"}, {"oid": "33f12e25e6d35a86ac93e72bc40775bb0a6298fb", "url": "https://github.com/palantir/atlasdb/commit/33f12e25e6d35a86ac93e72bc40775bb0a6298fb", "message": "Add generated changelog entries", "committedDate": "2020-02-28T11:40:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM5NjM3OQ==", "url": "https://github.com/palantir/atlasdb/pull/4616#discussion_r386396379", "bodyText": "define this in conjure? seems like a fairly simple object no?", "author": "felixdesouza", "createdAt": "2020-03-02T13:38:11Z", "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/CommitTimestampsWithWatches.java", "diffHunk": "@@ -20,15 +20,16 @@\n \n import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.palantir.timestamp.TimestampRange;\n \n @Value.Immutable\n-@JsonSerialize(as = ImmutableTimestampWithWatches.class)\n-@JsonDeserialize(as = ImmutableTimestampWithWatches.class)\n-public interface TimestampWithWatches {\n-    long timestamp();\n+@JsonSerialize(as = ImmutableCommitTimestampsWithWatches.class)\n+@JsonDeserialize(as = ImmutableCommitTimestampsWithWatches.class)\n+public interface CommitTimestampsWithWatches {", "originalCommit": "33f12e25e6d35a86ac93e72bc40775bb0a6298fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM5Njk2OA==", "url": "https://github.com/palantir/atlasdb/pull/4616#discussion_r386396968", "bodyText": "I believe you're going to need to rebase, @j-baker got a similar thing in with #4622", "author": "felixdesouza", "createdAt": "2020-03-02T13:39:16Z", "path": "timelock-api/src/main/conjure/timelock-api.yml", "diffHunk": "@@ -20,6 +20,14 @@ types:\n       base-type: any\n       external:\n         java: com.palantir.lock.v2.Lease\n+    CommitTimestampsWithWatches:\n+      base-type: any\n+      external:\n+        java: com.palantir.lock.watch.CommitTimestampsWithWatches\n+    Long:", "originalCommit": "33f12e25e6d35a86ac93e72bc40775bb0a6298fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM5NzI4Nw==", "url": "https://github.com/palantir/atlasdb/pull/4616#discussion_r386397287", "bodyText": "as above, it's probably just easier to define this object here instead of external, unless you have strong reservations as to why not.", "author": "felixdesouza", "createdAt": "2020-03-02T13:39:52Z", "path": "timelock-api/src/main/conjure/timelock-api.yml", "diffHunk": "@@ -20,6 +20,14 @@ types:\n       base-type: any\n       external:\n         java: com.palantir.lock.v2.Lease\n+    CommitTimestampsWithWatches:\n+      base-type: any\n+      external:\n+        java: com.palantir.lock.watch.CommitTimestampsWithWatches", "originalCommit": "33f12e25e6d35a86ac93e72bc40775bb0a6298fb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d50a616155bf0ad33358a257f1f15f801d7b6a52", "url": "https://github.com/palantir/atlasdb/commit/d50a616155bf0ad33358a257f1f15f801d7b6a52", "message": "Resolve conflicts with develop and address CR", "committedDate": "2020-03-02T15:11:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ1Mjk0Ng==", "url": "https://github.com/palantir/atlasdb/pull/4616#discussion_r386452946", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return GetCommitTimestampsResponse.of(freshTimestamps.getLowerBound(), freshTimestamps.getUpperBound(),\n          \n          \n            \n                            getWatchStateUpdate(lastKnownVersion));\n          \n          \n            \n                    return GetCommitTimestampsResponse.of(\n          \n          \n            \n                            freshTimestamps.getLowerBound(), \n          \n          \n            \n                            freshTimestamps.getUpperBound(),\n          \n          \n            \n                            getWatchStateUpdate(lastKnownVersion));", "author": "felixdesouza", "createdAt": "2020-03-02T15:15:30Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/AsyncTimelockServiceImpl.java", "diffHunk": "@@ -176,8 +176,10 @@ public StartTransactionResponseV5 startTransactionsWithWatches(StartTransactionR\n     }\n \n     @Override\n-    public TimestampWithWatches getCommitTimestampWithWatches(OptionalLong lastKnownVersion) {\n-        return TimestampWithWatches.of(getFreshTimestamp(), getWatchStateUpdate(lastKnownVersion));\n+    public GetCommitTimestampsResponse getCommitTimestamps(int numTimestamps, OptionalLong lastKnownVersion) {\n+        TimestampRange freshTimestamps = getFreshTimestamps(numTimestamps);\n+        return GetCommitTimestampsResponse.of(freshTimestamps.getLowerBound(), freshTimestamps.getUpperBound(),\n+                getWatchStateUpdate(lastKnownVersion));", "originalCommit": "d50a616155bf0ad33358a257f1f15f801d7b6a52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ1NDAyMg==", "url": "https://github.com/palantir/atlasdb/pull/4616#discussion_r386454022", "bodyText": "I think I missed this earlier, any reason to not use Conjure unions here? you should still get the visitors and everything that you want etc.", "author": "felixdesouza", "createdAt": "2020-03-02T15:16:57Z", "path": "timelock-api/src/main/conjure/timelock-api.yml", "diffHunk": "@@ -20,8 +20,12 @@ types:\n       base-type: any\n       external:\n         java: com.palantir.lock.v2.Lease\n+    LockWatchStateUpdate:", "originalCommit": "d50a616155bf0ad33358a257f1f15f801d7b6a52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3NjI0NA==", "url": "https://github.com/palantir/atlasdb/pull/4616#discussion_r386476244", "bodyText": "Discussed offline -- requires nontrivial refactoring since the update is used outside of timelock api", "author": "gmaretic", "createdAt": "2020-03-02T15:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ1NDAyMg=="}], "type": "inlineReview"}, {"oid": "ebb1db1291df28d71242919ede3a28481471ba16", "url": "https://github.com/palantir/atlasdb/commit/ebb1db1291df28d71242919ede3a28481471ba16", "message": "Update timelock-impl/src/main/java/com/palantir/atlasdb/timelock/AsyncTimelockServiceImpl.java\n\nCo-Authored-By: Felix de Souza <fdesouza@palantir.com>", "committedDate": "2020-03-02T15:26:57Z", "type": "commit"}]}