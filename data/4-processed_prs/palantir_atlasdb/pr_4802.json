{"pr_number": 4802, "pr_title": "Filter out leaderPaxos from list of namespaces", "pr_createdAt": "2020-05-26T13:45:22Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4802", "timeline": [{"oid": "b3694dd4c0993a152540597e80008937779b665c", "url": "https://github.com/palantir/atlasdb/commit/b3694dd4c0993a152540597e80008937779b665c", "message": "Filter out leaderPaxos from list of namespaces", "committedDate": "2020-05-26T13:02:35Z", "type": "commit"}, {"oid": "122cce5ecf25206bd8f8dc03bcc0afe8996c2001", "url": "https://github.com/palantir/atlasdb/commit/122cce5ecf25206bd8f8dc03bcc0afe8996c2001", "message": "Update test", "committedDate": "2020-05-26T13:24:35Z", "type": "commit"}, {"oid": "021b59c239d12bcdd739d8c7b1e567a858189dae", "url": "https://github.com/palantir/atlasdb/commit/021b59c239d12bcdd739d8c7b1e567a858189dae", "message": "Add generated changelog entries", "committedDate": "2020-05-26T13:24:35Z", "type": "commit"}, {"oid": "9f53caa92ed8fb1361907b31201ca03be6a92ceb", "url": "https://github.com/palantir/atlasdb/commit/9f53caa92ed8fb1361907b31201ca03be6a92ceb", "message": "Fix test", "committedDate": "2020-05-26T17:47:33Z", "type": "commit"}, {"oid": "95c0d8bf0c6839bba7bd0c9b7410a3a3ccf7490d", "url": "https://github.com/palantir/atlasdb/commit/95c0d8bf0c6839bba7bd0c9b7410a3a3ccf7490d", "message": "Merge branch 'sqlite_namespace_loader_fix' of github.com:palantir/atlasdb into sqlite_namespace_loader_fix", "committedDate": "2020-05-26T17:47:59Z", "type": "commit"}, {"oid": "a2780338d6b5b194de06d3db0030447a27d0d292", "url": "https://github.com/palantir/atlasdb/commit/a2780338d6b5b194de06d3db0030447a27d0d292", "message": "Add generated changelog entries", "committedDate": "2020-05-26T17:47:59Z", "type": "commit"}, {"oid": "96133377d6524ec054eebde5059f09713440184f", "url": "https://github.com/palantir/atlasdb/commit/96133377d6524ec054eebde5059f09713440184f", "message": "Add generated changelog entries", "committedDate": "2020-05-26T17:47:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwMTkxMQ==", "url": "https://github.com/palantir/atlasdb/pull/4802#discussion_r430601911", "bodyText": "This is fine, but I would be a bit more specific on explaining the subset of users this actually applied to (i.e. previously if, and only if, you had used SQLite, leaderPaxos would be returned as part of the set of persisted namespaces). Otherwise it sounds like it was always being returned", "author": "jeremyk-91", "createdAt": "2020-05-26T17:58:08Z", "path": "changelog/@unreleased/pr-4802.v2.yml", "diffHunk": "@@ -0,0 +1,6 @@\n+type: fix\n+fix:\n+  description: |\n+    `leaderPaxos` is filtered out from the set of persisted namespaces.", "originalCommit": "95c0d8bf0c6839bba7bd0c9b7410a3a3ccf7490d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNDMyNw==", "url": "https://github.com/palantir/atlasdb/pull/4802#discussion_r430614327", "bodyText": "\ud83d\udc4d", "author": "sudiksha27", "createdAt": "2020-05-26T18:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwMTkxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwMzQyNQ==", "url": "https://github.com/palantir/atlasdb/pull/4802#discussion_r430603425", "bodyText": "Do we need to create the leader paxos directory somewhere before this?", "author": "jeremyk-91", "createdAt": "2020-05-26T17:59:45Z", "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -17,38 +17,73 @@\n package com.palantir.atlasdb.timelock.management;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.file.Path;\n import java.util.Set;\n-import java.util.stream.Collectors;\n+import java.util.concurrent.ExecutionException;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n \n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TemporaryFolder;\n+import org.mockito.Mock;\n \n+import com.codahale.metrics.MetricRegistry;\n+import com.google.common.collect.ImmutableList;\n+import com.palantir.atlasdb.http.RedirectRetryTargeter;\n+import com.palantir.atlasdb.timelock.TimeLockServices;\n+import com.palantir.atlasdb.timelock.TimelockNamespaces;\n import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n-import com.palantir.paxos.Client;\n+import com.palantir.atlasdb.util.MetricsManager;\n+import com.palantir.paxos.SqliteConnections;\n+import com.palantir.tokens.auth.AuthHeader;\n+import com.palantir.tritium.metrics.registry.DefaultTaggedMetricRegistry;\n \n public class DiskNamespaceLoaderTest {\n     private static final String NAMESPACE_1 = \"namespace_1\";\n     private static final String NAMESPACE_2 = \"namespace_2\";\n+    private static final AuthHeader AUTH_HEADER = AuthHeader.valueOf(\"Bearer omitted\");\n+    @Mock private Function<String, TimeLockServices> serviceFactory;\n+    @Mock private Supplier<Integer> maxNumberOfClientsSupplier;\n+\n+    private final MetricsManager metricsManager = new MetricsManager(\n+            new MetricRegistry(),\n+            DefaultTaggedMetricRegistry.getDefault(),\n+            unused -> false);\n+    private TimeLockManagementResource timeLockManagementResource;\n \n     @Rule\n     public final TemporaryFolder tempFolder = new TemporaryFolder();\n \n-    public DiskNamespaceLoader diskNamespaceLoader;\n-\n     @Before\n-    public void setup() {\n-        diskNamespaceLoader = new DiskNamespaceLoader(tempFolder.getRoot().toPath());\n+    public void setup() throws MalformedURLException {\n+        URL testUrl = new URL(\"http\", \"host\", \"file\");\n+        RedirectRetryTargeter redirectRetryTargeter = RedirectRetryTargeter\n+                .create(testUrl, ImmutableList.of(testUrl));\n+\n+        Path rootFolderPath = tempFolder.getRoot().toPath();\n+        PersistentNamespaceContext persistentNamespaceContext = PersistentNamespaceContext.of(rootFolderPath, SqliteConnections\n+                        .createDefaultNamedSqliteDatabaseAtPath(rootFolderPath));\n+\n+        TimelockNamespaces namespaces = new TimelockNamespaces(metricsManager, serviceFactory, maxNumberOfClientsSupplier);\n+\n+        timeLockManagementResource = TimeLockManagementResource.create(persistentNamespaceContext,\n+                namespaces,\n+                redirectRetryTargeter);\n+\n         createDirectoryForLeaderForEachClientUseCase(NAMESPACE_1);\n         createDirectoryInRootDataDirectory(NAMESPACE_2);\n     }\n \n     @Test\n-    public void doesNotLoadLeaderPaxosAsNamespace() {\n-        Set<String> namespaces = diskNamespaceLoader.getAllPersistedNamespaces().stream().map(Client::value).collect(\n-                Collectors.toSet());\n+    public void doesNotLoadLeaderPaxosAsNamespace() throws ExecutionException, InterruptedException {\n+        Set<String> namespaces = timeLockManagementResource.getNamespaces(AUTH_HEADER).get();", "originalCommit": "95c0d8bf0c6839bba7bd0c9b7410a3a3ccf7490d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNDE5OA==", "url": "https://github.com/palantir/atlasdb/pull/4802#discussion_r430614198", "bodyText": "we do create one is the setup - createDirectoryForLeaderForEachClientUseCase, it is of LeaderForEachClient paxos use case pattern but I think that's sufficient for this test.", "author": "sudiksha27", "createdAt": "2020-05-26T18:17:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwMzQyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MjM5NA==", "url": "https://github.com/palantir/atlasdb/pull/4802#discussion_r431142394", "bodyText": "I see. Yep, that makes sense", "author": "jeremyk-91", "createdAt": "2020-05-27T13:45:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwMzQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0Mjc3MA==", "url": "https://github.com/palantir/atlasdb/pull/4802#discussion_r431142770", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final MetricsManager metricsManager = new MetricsManager(\n          \n          \n            \n                        new MetricRegistry(),\n          \n          \n            \n                        DefaultTaggedMetricRegistry.getDefault(),\n          \n          \n            \n                        unused -> false);\n          \n          \n            \n                private final MetricsManager metricsManager = MetricsManagers.createForTests();", "author": "jeremyk-91", "createdAt": "2020-05-27T13:45:37Z", "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -17,38 +17,73 @@\n package com.palantir.atlasdb.timelock.management;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.file.Path;\n import java.util.Set;\n-import java.util.stream.Collectors;\n+import java.util.concurrent.ExecutionException;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n \n import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TemporaryFolder;\n+import org.mockito.Mock;\n \n+import com.codahale.metrics.MetricRegistry;\n+import com.google.common.collect.ImmutableList;\n+import com.palantir.atlasdb.http.RedirectRetryTargeter;\n+import com.palantir.atlasdb.timelock.TimeLockServices;\n+import com.palantir.atlasdb.timelock.TimelockNamespaces;\n import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n-import com.palantir.paxos.Client;\n+import com.palantir.atlasdb.util.MetricsManager;\n+import com.palantir.paxos.SqliteConnections;\n+import com.palantir.tokens.auth.AuthHeader;\n+import com.palantir.tritium.metrics.registry.DefaultTaggedMetricRegistry;\n \n public class DiskNamespaceLoaderTest {\n     private static final String NAMESPACE_1 = \"namespace_1\";\n     private static final String NAMESPACE_2 = \"namespace_2\";\n+    private static final AuthHeader AUTH_HEADER = AuthHeader.valueOf(\"Bearer omitted\");\n+    @Mock private Function<String, TimeLockServices> serviceFactory;\n+    @Mock private Supplier<Integer> maxNumberOfClientsSupplier;\n+\n+    private final MetricsManager metricsManager = new MetricsManager(\n+            new MetricRegistry(),\n+            DefaultTaggedMetricRegistry.getDefault(),\n+            unused -> false);", "originalCommit": "96133377d6524ec054eebde5059f09713440184f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1194cbae83171f6231e889abfcd91cdf28cc5b9b", "url": "https://github.com/palantir/atlasdb/commit/1194cbae83171f6231e889abfcd91cdf28cc5b9b", "message": "Address comments | test fix\n\nCo-authored-by: Jeremy Kong <jeremykong@hotmail.com>", "committedDate": "2020-05-27T13:47:20Z", "type": "commit"}, {"oid": "a13c9a964371690301a9278c12e549ad4fd98f89", "url": "https://github.com/palantir/atlasdb/commit/a13c9a964371690301a9278c12e549ad4fd98f89", "message": "Fix import", "committedDate": "2020-05-27T13:49:45Z", "type": "commit"}]}