{"pr_number": 1358, "pr_title": "Handle transactions without crypto transfers in transaction REST API", "pr_createdAt": "2020-12-14T19:02:07Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358", "timeline": [{"oid": "2a48df8bfe3b499445273d3515b829ed70f03144", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2a48df8bfe3b499445273d3515b829ed70f03144", "message": "query transactions without crypto transfer list\naccount.id now can be either the payer account id or the entity_id in crypto transfer list\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-14T17:21:40Z", "type": "commit"}, {"oid": "2116aca8fa2d149539080058b8a430d68c24b627", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2116aca8fa2d149539080058b8a430d68c24b627", "message": "Merge branch 'master' into handle-transactions-without-crypto-transfer\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-14T17:22:41Z", "type": "commit"}, {"oid": "75caa76ac6bc898b294b89ec0c7d36ed4e733e82", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/75caa76ac6bc898b294b89ec0c7d36ed4e733e82", "message": "- add flyway migration for new transaction index\n- add / update integration tests\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-14T18:49:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY2NTUxMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r542665513", "bodyText": "the comment no longer applies, will remove in the next commit", "author": "xin-hedera", "createdAt": "2020-12-14T19:13:37Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -223,7 +270,10 @@ const reqToSql = function (req) {\n   const resultTypeQuery = utils.parseResultParams(req, 't.result');\n   const transactionTypeQuery = utils.getTransactionTypeQuery(parsedQueryParams);\n   const {query, params, order, limit} = utils.parseLimitAndOrderParams(req);\n-  const sqlParams = accountParams.concat(tsParams).concat(tsParams).concat(params);\n+\n+  // accountQuery and tsQuery will appear twice in the inner query, one for transaction table and one for\n+  // crypto_transfer table. So concat their params twice here to match the query.", "originalCommit": "75caa76ac6bc898b294b89ec0c7d36ed4e733e82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e0c23bd974bd11bef8cad7b72fdf2e992b1d12ee", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e0c23bd974bd11bef8cad7b72fdf2e992b1d12ee", "message": "address sonar code smells\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-14T19:46:29Z", "type": "commit"}, {"oid": "a790341c5903d2ce97a0c02204366ce2ece595d9", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a790341c5903d2ce97a0c02204366ce2ece595d9", "message": "Merge branch 'master' into handle-transactions-without-crypto-transfer\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-14T19:51:35Z", "type": "commit"}, {"oid": "461a8ddea625d868ab56e190899b89476f6c3290", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/461a8ddea625d868ab56e190899b89476f6c3290", "message": "move V1.32.1 flyway migration script to v1 folder\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-14T19:52:28Z", "type": "commit"}, {"oid": "620593580b07190ce194e5a2f2660b160ece6c62", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/620593580b07190ce194e5a2f2660b160ece6c62", "message": "code smell\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-14T20:26:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzNjg0Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r542936847", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @param {String} query - they mysql query\n          \n          \n            \n             * @param {String} query - the mysql query", "author": "ijungmann", "createdAt": "2020-12-15T00:01:55Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -169,6 +171,22 @@ const buildWhereClause = function (...conditions) {\n   return clause === '' ? '' : `WHERE ${clause}`;\n };\n \n+/**\n+ * Convert parameters to the named format.\n+ *\n+ * @param {String} query - they mysql query", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk0NzUzOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r542947539", "bodyText": "I think this needs to be slightly reworded since it explicitly mentions Cryptotransfer, which no longer always applies.", "author": "ijungmann", "createdAt": "2020-12-15T00:15:51Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -169,6 +171,22 @@ const buildWhereClause = function (...conditions) {\n   return clause === '' ? '' : `WHERE ${clause}`;\n };\n \n+/**\n+ * Convert parameters to the named format.\n+ *\n+ * @param {String} query - they mysql query\n+ * @param {String} prefix - the prefix for the named parameters\n+ * @return {String} - The converted query\n+ */\n+const convertToNamedQuery = function (query, prefix) {\n+  let index = 0;\n+  return query.replace(/\\?/g, () => {\n+    const namedParam = `?${prefix}${index}`;\n+    index += 1;\n+    return namedParam;\n+  });\n+};\n+\n /**\n  * Cryptotransfer transactions queries are organized as follows: First there's an inner query that selects the", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MTMwMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r542951300", "bodyText": "I'm sure this is a much bigger effort and out of the scope of this, but could this replace some of the logic in the individual parseQueryParam methods in utils.js and directly generate the needed format instead of converting, or is there a need for the mySql format somewhere?", "author": "ijungmann", "createdAt": "2020-12-15T00:25:56Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -169,6 +171,22 @@ const buildWhereClause = function (...conditions) {\n   return clause === '' ? '' : `WHERE ${clause}`;\n };\n \n+/**\n+ * Convert parameters to the named format.\n+ *\n+ * @param {String} query - they mysql query\n+ * @param {String} prefix - the prefix for the named parameters\n+ * @return {String} - The converted query\n+ */\n+const convertToNamedQuery = function (query, prefix) {", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MjI1Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r542952257", "bodyText": "I'm also not 100% on the name, unless I'm misunderstanding \"named query\" makes me think of a JPA named query, which this is not really emulating.", "author": "ijungmann", "createdAt": "2020-12-15T00:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MTMwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MDc3OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543470778", "bodyText": "AFAIK, the mysql style query was written at the beginning when the choice of db was mysql. that's why for account/balance/transaction, the query needs to be translated to pg style.\nI intend to limit the scope of \"converting mysql style ? placeholder to named parameter\" to where it's indeed needed, for instance, the transactions inner query since the same REST query param is used in multiple places so in the previous PR tsParams were concat twice.\nEventually, we should remove the translation layer and directly compose pg style query as in topicmessages and tokens.", "author": "xin-hedera", "createdAt": "2020-12-15T15:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MTMwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4MDc1Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543480757", "bodyText": "That makes sense, thanks for the details.", "author": "ijungmann", "createdAt": "2020-12-15T16:11:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1MTMwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk1NjM0OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r542956348", "bodyText": "nit based on the other comments in this file.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // limit the query to transactions with crypto transfer list\n          \n          \n            \n                // limit the query to transactions with cryptotransfer list", "author": "ijungmann", "createdAt": "2020-12-15T00:39:20Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -195,23 +213,62 @@ const getTransactionsInnerQuery = function (\n   transactionTypeQuery,\n   order\n ) {\n-  const whereClause = buildWhereClause(tsQuery, resultTypeQuery, transactionTypeQuery);\n-  const ctlTsQuery = tsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n-  const ctlWhereClause = buildWhereClause(accountQuery, ctlTsQuery, creditDebitQuery);\n+  const namedAccountQuery = convertToNamedQuery(accountQuery, 'acct');\n+  const namedTsQuery = convertToNamedQuery(tsQuery, 'ts');\n+  const namedLimitQuery = convertToNamedQuery(limitQuery, 'limit');\n+  const ctlTsQuery = namedTsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n+  let ctlWhereClause;\n+\n+  if (creditDebitQuery) {\n+    // limit the query to transactions with crypto transfer list", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3MTc2MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543071761", "bodyText": "Interesting, did not know about this way of using logical operators", "author": "ijungmann", "createdAt": "2020-12-15T06:08:01Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -195,23 +213,62 @@ const getTransactionsInnerQuery = function (\n   transactionTypeQuery,\n   order\n ) {\n-  const whereClause = buildWhereClause(tsQuery, resultTypeQuery, transactionTypeQuery);\n-  const ctlTsQuery = tsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n-  const ctlWhereClause = buildWhereClause(accountQuery, ctlTsQuery, creditDebitQuery);\n+  const namedAccountQuery = convertToNamedQuery(accountQuery, 'acct');\n+  const namedTsQuery = convertToNamedQuery(tsQuery, 'ts');\n+  const namedLimitQuery = convertToNamedQuery(limitQuery, 'limit');\n+  const ctlTsQuery = namedTsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n+  let ctlWhereClause;\n+\n+  if (creditDebitQuery) {\n+    // limit the query to transactions with crypto transfer list\n+    ctlWhereClause = buildWhereClause(namedAccountQuery, ctlTsQuery, creditDebitQuery);\n+    const whereClause = buildWhereClause(namedTsQuery, resultTypeQuery, transactionTypeQuery);\n+    return `\n+      SELECT t.consensus_ns AS consensus_timestamp\n+      FROM transaction t\n+      JOIN (\n+        SELECT DISTINCT consensus_timestamp\n+        FROM crypto_transfer AS ctl\n+        ${ctlWhereClause}\n+        ORDER BY consensus_timestamp ${order}\n+      ) AS ctl\n+      ON t.consensus_ns = ctl.consensus_timestamp\n+      ${whereClause}\n+      ORDER BY t.consensus_ns ${order}\n+      ${namedLimitQuery}`;\n+  }\n+\n+  const transactionAccountQuery = namedAccountQuery.replace(/ctl\\.entity_id/g, 't.payer_account_id');\n+  const transactionWhereClause = buildWhereClause(\n+    transactionAccountQuery,\n+    namedTsQuery,\n+    resultTypeQuery,\n+    transactionTypeQuery\n+  );\n+  const ctlJoinClause =\n+    (resultTypeQuery || transactionTypeQuery) && 'JOIN transaction AS t ON ctl.consensus_timestamp = t.consensus_ns';", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MTc0OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543081749", "bodyText": "I'm a little confused on the logic of this part, the way I'm reading this the FULL OUTER JOIN here would allow for cryptotransfers without a transaction row.  If that is a possibility, is it also possible to have a token transfer without a transaction row, etc?", "author": "ijungmann", "createdAt": "2020-12-15T06:33:04Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -195,23 +213,62 @@ const getTransactionsInnerQuery = function (\n   transactionTypeQuery,\n   order\n ) {\n-  const whereClause = buildWhereClause(tsQuery, resultTypeQuery, transactionTypeQuery);\n-  const ctlTsQuery = tsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n-  const ctlWhereClause = buildWhereClause(accountQuery, ctlTsQuery, creditDebitQuery);\n+  const namedAccountQuery = convertToNamedQuery(accountQuery, 'acct');\n+  const namedTsQuery = convertToNamedQuery(tsQuery, 'ts');\n+  const namedLimitQuery = convertToNamedQuery(limitQuery, 'limit');\n+  const ctlTsQuery = namedTsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n+  let ctlWhereClause;\n+\n+  if (creditDebitQuery) {\n+    // limit the query to transactions with crypto transfer list\n+    ctlWhereClause = buildWhereClause(namedAccountQuery, ctlTsQuery, creditDebitQuery);\n+    const whereClause = buildWhereClause(namedTsQuery, resultTypeQuery, transactionTypeQuery);\n+    return `\n+      SELECT t.consensus_ns AS consensus_timestamp\n+      FROM transaction t\n+      JOIN (\n+        SELECT DISTINCT consensus_timestamp\n+        FROM crypto_transfer AS ctl\n+        ${ctlWhereClause}\n+        ORDER BY consensus_timestamp ${order}\n+      ) AS ctl\n+      ON t.consensus_ns = ctl.consensus_timestamp\n+      ${whereClause}\n+      ORDER BY t.consensus_ns ${order}\n+      ${namedLimitQuery}`;\n+  }\n+\n+  const transactionAccountQuery = namedAccountQuery.replace(/ctl\\.entity_id/g, 't.payer_account_id');\n+  const transactionWhereClause = buildWhereClause(\n+    transactionAccountQuery,\n+    namedTsQuery,\n+    resultTypeQuery,\n+    transactionTypeQuery\n+  );\n+  const ctlJoinClause =\n+    (resultTypeQuery || transactionTypeQuery) && 'JOIN transaction AS t ON ctl.consensus_timestamp = t.consensus_ns';\n+  ctlWhereClause = buildWhereClause(namedAccountQuery, ctlTsQuery, resultTypeQuery, transactionTypeQuery);\n \n   return `\n-    SELECT t.consensus_ns AS consensus_timestamp\n-    FROM transaction t\n-    JOIN (\n-            SELECT DISTINCT consensus_timestamp\n-            FROM crypto_transfer AS ctl\n-            ${ctlWhereClause}\n-            ORDER BY consensus_timestamp ${order}\n-         ) AS ctl\n+    SELECT coalesce(t.consensus_ns,ctl.consensus_timestamp) AS consensus_timestamp\n+    FROM (\n+        SELECT consensus_ns\n+        FROM transaction AS t\n+        ${transactionWhereClause}\n+        ORDER BY consensus_ns ${order}\n+        ${namedLimitQuery}\n+    ) AS t\n+    FULL OUTER JOIN (\n+        SELECT DISTINCT ctl.consensus_timestamp AS consensus_timestamp", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3NDM1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543474358", "bodyText": "a crypto transfer always has an associated transaction. previously, the reverse is also true that a transaction always has a crypto transfer list.\nsimilarly, a token transfer must belong to a transaction.", "author": "xin-hedera", "createdAt": "2020-12-15T16:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MTc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3OTczOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543479739", "bodyText": "That makes sense, but then I'm not understanding why a FULL OUTER JOIN is needed, as opposed to a LEFT OUTER JOIN.", "author": "ijungmann", "createdAt": "2020-12-15T16:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MTc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4ODAwMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543488001", "bodyText": "oh, it's partially because I made it generic for all REST query params.\nTo be concise, it's because of the account.id filter. with the change, it can be either transaction.payer_account_id or crypto_transfer.entity_id. It's possible that for account.id A, the transactions of which A paid fee for and the transactions with A in the crypto transfer have entries not in the other. So we need a full outer join.", "author": "xin-hedera", "createdAt": "2020-12-15T16:20:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MTc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5MzUxNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543493515", "bodyText": "Ah, got it.  Interesting that that one param causes so much havoc, that makes sense though.", "author": "ijungmann", "createdAt": "2020-12-15T16:27:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MTc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4OTI5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543589293", "bodyText": "made some changes to the query to split the generic query into two cases, with and without account query. also added comments based on your feedback", "author": "xin-hedera", "createdAt": "2020-12-15T18:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MTc0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4NTM3Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543085377", "bodyText": "What is the gain to this change, or is it just a style preference?", "author": "ijungmann", "createdAt": "2020-12-15T06:42:03Z", "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -255,14 +254,14 @@ const parseOperatorAndValueFromQueryParam = (paramValue) => {\n   if (splitItem.length === 1) {\n     // No operator specified. Just use \"eq:\"\n     return {op: opsMap.eq, value: splitItem[0]};\n-  } else if (splitItem.length === 2) {\n+  }\n+  if (splitItem.length === 2) {", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3NTE2Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543475162", "bodyText": "this is auto adjusted by IDEA eslint plugin based on some rule.", "author": "xin-hedera", "createdAt": "2020-12-15T16:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4NTM3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4NTY1Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543085656", "bodyText": "Same here, is this style or for a particular benefit?", "author": "ijungmann", "createdAt": "2020-12-15T06:42:41Z", "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -355,7 +354,8 @@ const parseCreditDebitParams = (parsedQueryParams, columnName) => {\n   return parseParams(parsedQueryParams[constants.filterKeys.CREDIT_TYPE], (op, value) => {\n     if (value === 'credit') {\n       return [`${columnName} > 0`, []];\n-    } else if (value === 'debit') {\n+    }\n+    if (value === 'debit') {", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3NTMxMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543475311", "bodyText": "this is auto adjusted by IDEA eslint plugin based on some rule.", "author": "xin-hedera", "createdAt": "2020-12-15T16:05:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4NTY1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MTI5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543091293", "bodyText": "There are two other places in this file that need to be updated as well.", "author": "ijungmann", "createdAt": "2020-12-15T06:55:18Z", "path": "hedera-mirror-rest/balances.js", "diffHunk": "@@ -91,7 +91,7 @@ const getBalances = async (req, res) => {\n       ${query}`;\n \n   const sqlParams = tsParams.concat(accountParams).concat(pubKeyParams).concat(balanceParams).concat(params);\n-  const pgSqlQuery = utils.convertMySqlStyleQueryToPostgres(sqlQuery, sqlParams);\n+  const pgSqlQuery = utils.convertMySqlStyleQueryToPostgres(sqlQuery);", "originalCommit": "461a8ddea625d868ab56e190899b89476f6c3290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4MTI1Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543481257", "bodyText": "good catch", "author": "xin-hedera", "createdAt": "2020-12-15T16:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MTI5Mw=="}], "type": "inlineReview"}, {"oid": "11bcccb2ed10e2685033c542b17845e6afad8dc9", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/11bcccb2ed10e2685033c542b17845e6afad8dc9", "message": "address feedback\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T16:33:07Z", "type": "commit"}, {"oid": "5819eec25edad0fcf85a59c52afea25db0a78cc6", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5819eec25edad0fcf85a59c52afea25db0a78cc6", "message": "add comment for getTransactionsInnerQuery, small query optimization\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T18:34:15Z", "type": "commit"}, {"oid": "bf90d9a5b4c67fbeae9a1f9a01ad3effc73b83a8", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bf90d9a5b4c67fbeae9a1f9a01ad3effc73b83a8", "message": "add config params for pg pool connectionTimeoutMillis, max, and statement_timeout\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T21:40:46Z", "type": "commit"}, {"oid": "db50e45f7b65f2fc34ba88ad8653ca61783acf8a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/db50e45f7b65f2fc34ba88ad8653ca61783acf8a", "message": "revert accidental change\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T21:44:32Z", "type": "commit"}, {"oid": "8fe3a7de2febdd5aeb1c761656c7ec01209ab7ff", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8fe3a7de2febdd5aeb1c761656c7ec01209ab7ff", "message": "fix the logic that customizing config file name causes skipping default configuration file\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T22:02:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU5NzA3NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543597074", "bodyText": "Update description", "author": "Nana-EC", "createdAt": "2020-12-15T18:46:58Z", "path": "hedera-mirror-rest/__tests__/specs/transactions-19-timestamp-no-transfers.spec.json", "diffHunk": "@@ -0,0 +1,74 @@\n+{\n+  \"description\": \"Transaction api calls for transactions at timestamp\",", "originalCommit": "5819eec25edad0fcf85a59c52afea25db0a78cc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMzgzMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543723831", "bodyText": "I get the logic but this section is a little hard to follow and I worry that its complexity might contribute to challenges in managing it.\nDo you think there's a way to simplify or split it up into clearer functions.", "author": "Nana-EC", "createdAt": "2020-12-15T22:11:00Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -195,23 +213,72 @@ const getTransactionsInnerQuery = function (\n   transactionTypeQuery,\n   order\n ) {\n-  const whereClause = buildWhereClause(tsQuery, resultTypeQuery, transactionTypeQuery);\n-  const ctlTsQuery = tsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n-  const ctlWhereClause = buildWhereClause(accountQuery, ctlTsQuery, creditDebitQuery);\n+  // convert the mysql style '?' placeholder to the named parameter format, later the same named parameter is converted\n+  // to the same positional index, thus the caller only has to pass the value once for the same column\n+  const namedAccountQuery = convertToNamedQuery(accountQuery, 'acct');\n+  const namedTsQuery = convertToNamedQuery(tsQuery, 'ts');\n+  const namedLimitQuery = convertToNamedQuery(limitQuery, 'limit');\n \n-  return `\n-    SELECT t.consensus_ns AS consensus_timestamp\n-    FROM transaction t\n-    JOIN (\n-            SELECT DISTINCT consensus_timestamp\n-            FROM crypto_transfer AS ctl\n-            ${ctlWhereClause}\n-            ORDER BY consensus_timestamp ${order}\n-         ) AS ctl\n-    ON t.consensus_ns = ctl.consensus_timestamp\n-    ${whereClause}\n-    ORDER BY t.consensus_ns ${order}\n-    ${limitQuery}`;\n+  const ctlTsQuery = namedTsQuery.replace(/t\\.consensus_ns/g, 'ctl.consensus_timestamp');\n+  let ctlWhereClause;\n+\n+  if (creditDebitQuery) {", "originalCommit": "5819eec25edad0fcf85a59c52afea25db0a78cc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3NDAyNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r543774026", "bodyText": "made an attempt, let me know if it's more maintainable", "author": "xin-hedera", "createdAt": "2020-12-15T23:56:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMzgzMQ=="}], "type": "inlineReview"}, {"oid": "d2339180d4f15eb773df57cb72516d234912ad4e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d2339180d4f15eb773df57cb72516d234912ad4e", "message": "address sonar reported code smell\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T22:27:16Z", "type": "commit"}, {"oid": "dff8b2f6e580c08e207105183e7efeed3d89f3c2", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/dff8b2f6e580c08e207105183e7efeed3d89f3c2", "message": "adress feedback, attempt to make the changes to getTransactionsInnerQuery more maintainable\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T23:48:25Z", "type": "commit"}, {"oid": "eb2d009a31e1e56a59c8c1b52468ae4d14994c93", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/eb2d009a31e1e56a59c8c1b52468ae4d14994c93", "message": "update default for db.pool.connectionTimeout and db.pool.statementTimeout\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-15T23:52:12Z", "type": "commit"}, {"oid": "ffcf69b80514db4a54fc54581e171db034cd2cbc", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ffcf69b80514db4a54fc54581e171db034cd2cbc", "message": "oops, forgot to update the document\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-16T02:57:25Z", "type": "commit"}, {"oid": "967683b8d5919c7a9964159baa8fb7c41951c047", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/967683b8d5919c7a9964159baa8fb7c41951c047", "message": "Merge branch 'rest-db-pool-config-params' into handle-transactions-without-crypto-transfer\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-16T02:58:02Z", "type": "commit"}, {"oid": "ae64660f6500dc5cd12fb13a6dfcd8e64471fe22", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ae64660f6500dc5cd12fb13a6dfcd8e64471fe22", "message": "Merge branch 'master' into handle-transactions-without-crypto-transfer\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-16T16:13:46Z", "type": "commit"}, {"oid": "bf2602b3ad55b54a6323a97eabddd7bf3431f2b4", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bf2602b3ad55b54a6323a97eabddd7bf3431f2b4", "message": "address code smell\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-16T16:43:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ5NTA3Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1358#discussion_r544495077", "bodyText": "Can you add another spec for account transaction with no transfers to make sure that's picked up.", "author": "Nana-EC", "createdAt": "2020-12-16T17:41:28Z", "path": "hedera-mirror-rest/__tests__/specs/accounts-10-account-transactions.spec.json", "diffHunk": "@@ -83,6 +92,20 @@\n   \"responseStatus\": 200,\n   \"responseJson\": {\n     \"transactions\": [\n+      {", "originalCommit": "bf2602b3ad55b54a6323a97eabddd7bf3431f2b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bb5d6c2c4b7538be434912db1cc731ee52f1fd50", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bb5d6c2c4b7538be434912db1cc731ee52f1fd50", "message": "add a cryptotransfer transaction with no tx fee and no hbar transfer from/to payer account to accounts-14-account-transactions-transactiontype.spec.json\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-12-16T20:22:37Z", "type": "commit"}]}