{"pr_number": 788, "pr_title": "Ensure 404 repsonse for unmatched routes", "pr_createdAt": "2020-05-26T19:42:52Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/788", "timeline": [{"oid": "e61b4eeddf0e41d08ce547e879890b86efbc65c5", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e61b4eeddf0e41d08ce547e879890b86efbc65c5", "message": "Ensure 404 repsonse for unmatched routes\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-05-26T19:20:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMDAwNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430700004", "bodyText": "Would be preferable to throw NotFoundError here and let it be handled by httpErrorHandler instead of deal with next() and adding new middleware", "author": "steven-sheehy", "createdAt": "2020-05-26T20:50:29Z", "path": "hedera-mirror-rest/middleware/responseHandler.js", "diffHunk": "@@ -21,11 +21,18 @@\n \n const constants = require('../constants.js');\n \n-// response middleware that pull response data passed through request and sets in json response\n+// response middleware that pulls response data passed through request and sets in json response\n // next param is required to ensure express maps to this middleware and can also be used to pass onto future middleware\n-const responseHandler = (req, res, next) => {\n-  // set response json\n-  res.json(res.locals[constants.responseDataLabel]);\n+const responseHandler = async (req, res, next) => {\n+  const responseData = res.locals[constants.responseDataLabel];\n+  if (responseData === undefined) {\n+    // unmatched route will have no response data", "originalCommit": "e61b4eeddf0e41d08ce547e879890b86efbc65c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwNTcwMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430705700", "bodyText": "Considered that option. I'm okay with doing that too. Will just have to reorganize uses", "author": "Nana-EC", "createdAt": "2020-05-26T21:01:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMDAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMjMxNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430712316", "bodyText": "More like remove the use().\nUpdated", "author": "Nana-EC", "createdAt": "2020-05-26T21:15:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMDAwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMDMyNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430700326", "bodyText": "handleError should be async, right?", "author": "steven-sheehy", "createdAt": "2020-05-26T20:51:05Z", "path": "hedera-mirror-rest/middleware/httpErrorHandler.js", "diffHunk": "@@ -62,6 +62,14 @@ const handleError = (err, req, res, next) => {\n       logger.trace(`Unhandled error encountered: ${err.message}`);\n       res.status(httpStatusCodes.INTERNAL_ERROR).json(errorMessageFormat(httpErrorMessages.INTERNAL_ERROR));\n   }\n+", "originalCommit": "e61b4eeddf0e41d08ce547e879890b86efbc65c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwNjA1MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430706050", "bodyText": "Should be yeah. But dependency handles it well. I'll set them async", "author": "Nana-EC", "createdAt": "2020-05-26T21:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMDMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMjQzNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430712435", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-05-26T21:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMDMyNg=="}], "type": "inlineReview"}, {"oid": "ef8a7f6aa1a877fa5e413eaf9fe7e766c143423e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ef8a7f6aa1a877fa5e413eaf9fe7e766c143423e", "message": " Throw notfound in responsehandler\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-05-26T21:15:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMzM2OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430713368", "bodyText": "Can be removed as this is no longer exported/existing", "author": "steven-sheehy", "createdAt": "2020-05-26T21:18:04Z", "path": "hedera-mirror-rest/server.js", "diffHunk": "@@ -33,7 +33,7 @@ const transactions = require('./transactions.js');\n const balances = require('./balances.js');\n const accounts = require('./accounts.js');\n const topicmessage = require('./topicmessage.js');\n-const {handleError} = require('./middleware/httpErrorHandler');\n+const {handleError, pageNotFound} = require('./middleware/httpErrorHandler');", "originalCommit": "ef8a7f6aa1a877fa5e413eaf9fe7e766c143423e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyODA4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430728084", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-05-26T21:51:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMzM2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMzg1OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430713859", "bodyText": "Log not necessary, error handler already logs URL and error message at error level", "author": "steven-sheehy", "createdAt": "2020-05-26T21:19:14Z", "path": "hedera-mirror-rest/middleware/responseHandler.js", "diffHunk": "@@ -20,12 +20,20 @@\n 'use strict';\n \n const constants = require('../constants.js');\n+const {NotFoundError} = require('../errors/notFoundError');\n \n-// response middleware that pull response data passed through request and sets in json response\n+// response middleware that pulls response data passed through request and sets in json response\n // next param is required to ensure express maps to this middleware and can also be used to pass onto future middleware\n-const responseHandler = (req, res, next) => {\n-  // set response json\n-  res.json(res.locals[constants.responseDataLabel]);\n+const responseHandler = async (req, res, next) => {\n+  const responseData = res.locals[constants.responseDataLabel];\n+  if (responseData === undefined) {\n+    // unmatched route will have no response data, pass NotFoundError to next middleware\n+    logger.debug(`Unsupported API endpoint: ${req.originalUrl}`);", "originalCommit": "ef8a7f6aa1a877fa5e413eaf9fe7e766c143423e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyODA2Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430728067", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-05-26T21:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMzg1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNDAwNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430714005", "bodyText": "Do we still need this?", "author": "steven-sheehy", "createdAt": "2020-05-26T21:19:32Z", "path": "hedera-mirror-rest/middleware/httpErrorHandler.js", "diffHunk": "@@ -62,6 +62,8 @@ const handleError = (err, req, res, next) => {\n       logger.trace(`Unhandled error encountered: ${err.message}`);\n       res.status(httpStatusCodes.INTERNAL_ERROR).json(errorMessageFormat(httpErrorMessages.INTERNAL_ERROR));\n   }\n+\n+  next();", "originalCommit": "ef8a7f6aa1a877fa5e413eaf9fe7e766c143423e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyNzMxMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430727312", "bodyText": "It's good practice to pass this along, unless we 100% want to mark this as the end of the flow and block any middleware placed after this.\nI'm fine as is since I didn't want to make it hard for someone to be wondering why their middleware wasn't getting picked up. I can remove it if you prefer.", "author": "Nana-EC", "createdAt": "2020-05-26T21:49:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNDAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyODMwNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430728304", "bodyText": "I'm fine with keeping, just more of a question to make sure it wasn't a refactoring leftover", "author": "steven-sheehy", "createdAt": "2020-05-26T21:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNDAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM0Mzc1MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r431343750", "bodyText": "just a fyi for future: https://stackoverflow.com/questions/16810449/when-to-use-next-and-return-next-in-node-js", "author": "apeksharma", "createdAt": "2020-05-27T18:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNDAwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNDI5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430714293", "bodyText": "Not needed", "author": "steven-sheehy", "createdAt": "2020-05-26T21:20:08Z", "path": "hedera-mirror-rest/middleware/httpErrorHandler.js", "diffHunk": "@@ -21,7 +21,7 @@\n \n const {DbError} = require('../errors/dbError');\n const {InvalidArgumentError} = require('../errors/invalidArgumentError');\n-const {NotFoundError} = require('../errors/notFoundError');\n+const {NotFoundError, NotFoundErrorMessage} = require('../errors/notFoundError');", "originalCommit": "ef8a7f6aa1a877fa5e413eaf9fe7e766c143423e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyODA0OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/788#discussion_r430728049", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-05-26T21:51:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNDI5Mw=="}], "type": "inlineReview"}, {"oid": "d21d519bebb59eba6a41cd347ba164afd627c69f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d21d519bebb59eba6a41cd347ba164afd627c69f", "message": "Clean up\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-05-26T21:51:35Z", "type": "commit"}]}