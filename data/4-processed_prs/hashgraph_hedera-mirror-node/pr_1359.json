{"pr_number": 1359, "pr_title": "TimescaleDB: Helm", "pr_createdAt": "2020-12-14T19:13:23Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4ODEzMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542688131", "bodyText": "Hmm, should I move this into the importer chart as a property?", "author": "Nana-EC", "createdAt": "2020-12-14T19:33:40Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -15,6 +15,8 @@ global:\n     username: mirror_api\n     password: mirror_api_pass\n   useReleaseForNameLabel: false  # Set the name label to the release name for Marketplace\n+  extaddressbook:", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4MDk1MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542780951", "bodyText": "What is it? How is it used? What's an ext?", "author": "steven-sheehy", "createdAt": "2020-12-14T21:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4ODEzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NTcyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543075728", "bodyText": "This is an external address book (i.e. not in class path) that is used for non demo/testnet/mainnet network.\nIn this scenario the address book is place at the intialAddressBook path for reading\nProbably better way to state this would be\nimporter:\n  initialAddressBook:\n    enabled: true", "author": "Nana-EC", "createdAt": "2020-12-15T06:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4ODEzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0NjAwMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543746000", "bodyText": "Went with above for simplicity.", "author": "Nana-EC", "createdAt": "2020-12-15T22:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4ODEzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NzQ0Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544647443", "bodyText": "Removed this, so is no longer applicable", "author": "Nana-EC", "createdAt": "2020-12-16T21:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4ODEzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4OTMzNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542689337", "bodyText": "Might remove timescaledb.postgresql.databases to ensure that all db and user creation logic is done in some script", "author": "Nana-EC", "createdAt": "2020-12-14T19:34:45Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -169,3 +171,19 @@ redis:\n \n rest:\n   enabled: true\n+\n+timescaledb:\n+  credentials:\n+    accessNode:\n+      superuser: mirror_node_pass\n+    dataNode:\n+      superuser: mirror_node_pass\n+  enabled: false\n+  persistentVolume:\n+    size: 10Gi\n+  #  postgresql:\n+  #    databases: [\"postgres\", \"mirror_node\"]", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0NjIxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543746218", "bodyText": "Removed and went with default postgres", "author": "Nana-EC", "createdAt": "2020-12-15T22:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4OTMzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NDQ3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542774471", "bodyText": "This should be a lot higher. We have 500Gi for postgresql", "author": "steven-sheehy", "createdAt": "2020-12-14T20:55:18Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -169,3 +171,19 @@ redis:\n \n rest:\n   enabled: true\n+\n+timescaledb:\n+  credentials:\n+    accessNode:\n+      superuser: mirror_node_pass\n+    dataNode:\n+      superuser: mirror_node_pass\n+  enabled: false\n+  persistentVolume:\n+    size: 10Gi", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0Njg5OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543746899", "bodyText": "Went with 500Gi to start with. I think like a few other configs the tweaking/tuning can be done later along with testing.", "author": "Nana-EC", "createdAt": "2020-12-15T22:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NDQ3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTEyMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542775123", "bodyText": "You should research and specify resource constraints as we do for every other dependency.", "author": "steven-sheehy", "createdAt": "2020-12-14T20:55:56Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -169,3 +171,19 @@ redis:\n \n rest:\n   enabled: true\n+\n+timescaledb:\n+  credentials:\n+    accessNode:\n+      superuser: mirror_node_pass\n+    dataNode:\n+      superuser: mirror_node_pass\n+  enabled: false", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MjQ4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543082484", "bodyText": "Adding initial go based on current Postgres constraints", "author": "Nana-EC", "createdAt": "2020-12-15T06:34:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTEyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0NzEwOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543747109", "bodyText": "Added some initial constraints. Further tweaking could be done later", "author": "Nana-EC", "createdAt": "2020-12-15T22:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTcxMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542775710", "bodyText": "Why would we not want timescaledb to have its own service account?", "author": "steven-sheehy", "createdAt": "2020-12-14T20:56:26Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -169,3 +171,19 @@ redis:\n \n rest:\n   enabled: true\n+\n+timescaledb:\n+  credentials:\n+    accessNode:\n+      superuser: mirror_node_pass\n+    dataNode:\n+      superuser: mirror_node_pass\n+  enabled: false\n+  persistentVolume:\n+    size: 10Gi\n+  #  postgresql:\n+  #    databases: [\"postgres\", \"mirror_node\"]\n+  serviceAccount:\n+    create: false", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3Mjg1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543072858", "bodyText": "There was a bug here where the chart failed to install because of a name conflict.\nMeant to circle back with a custom name.\nWill add in next commit", "author": "Nana-EC", "createdAt": "2020-12-15T06:10:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0NzMyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543747328", "bodyText": "Service account added with custom name to avoid resource name conflict", "author": "Nana-EC", "createdAt": "2020-12-15T22:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MjIzNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543772237", "bodyText": "I don't see how there could've been a name conflict unless a prior install didn't get deleted properly. Hardcoding the name actually makes it more likely there will be a resource name conflict as it doesn't include the namespace or release name in the name this way.", "author": "steven-sheehy", "createdAt": "2020-12-15T23:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUwODg4OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544508888", "bodyText": "I think I may have tracked down the issue. charts/hedera-mirror/charts still contained the timescale single chart so that may have been deploying that service account and potentially other resources. Looking into this", "author": "Nana-EC", "createdAt": "2020-12-16T18:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTcxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0Nzc2Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544647766", "bodyText": "Yep, the single chart was the issue. Remove that and there's no longer a conflict", "author": "Nana-EC", "createdAt": "2020-12-16T21:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NTcxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc3NzkyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542777928", "bodyText": "Revert indentation breakage", "author": "steven-sheehy", "createdAt": "2020-12-14T20:58:29Z", "path": "charts/hedera-mirror-importer/templates/statefulset.yaml", "diffHunk": "@@ -79,13 +79,19 @@ spec:\n         {{- toYaml .Values.tolerations | nindent 8 }}\n       volumes:\n         - name: config\n-          secret:\n+          projected:\n             defaultMode: 420\n-            secretName: {{ include \"hedera-mirror-importer.fullname\" . }}\n-{{- if not .Values.persistence.enabled }}\n-        - name: data\n-          emptyDir: {}\n-{{- else }}\n+            sources:\n+              - secret:\n+                  name: {{ include \"hedera-mirror-importer.fullname\" . }}\n+              {{- if .Values.global.extaddressbook.enabled }}\n+              - secret:\n+                  name: mirror-importer-addressbook\n+              {{- end}}\n+  {{- if not .Values.persistence.enabled }}\n+  - name: data", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5MDE4Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542790183", "bodyText": "Chart mentions some values are not production ready and should be tweaked. We should tweak:\nhttps://github.com/timescale/timescaledb-kubernetes/blob/abec6247e78b685d4dc075ed877ba02d0eac72f8/charts/timescaledb-multinode/values.yaml#L72", "author": "steven-sheehy", "createdAt": "2020-12-14T21:09:55Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -169,3 +171,19 @@ redis:\n \n rest:\n   enabled: true\n+\n+timescaledb:\n+  credentials:\n+    accessNode:\n+      superuser: mirror_node_pass\n+    dataNode:\n+      superuser: mirror_node_pass\n+  enabled: false\n+  persistentVolume:\n+    size: 10Gi\n+  #  postgresql:", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0Nzc4OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543747788", "bodyText": "Tweaked. Likely to have further tweaking in following tasks", "author": "Nana-EC", "createdAt": "2020-12-15T22:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5MDE4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgyMDg1NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r542820855", "bodyText": "suggestion: it's good to have a comment in importer charts values about explicit addressbook file name if network is OTHER", "author": "xin-hedera", "createdAt": "2020-12-14T21:38:24Z", "path": "charts/hedera-mirror-importer/templates/statefulset.yaml", "diffHunk": "@@ -79,13 +79,19 @@ spec:\n         {{- toYaml .Values.tolerations | nindent 8 }}\n       volumes:\n         - name: config\n-          secret:\n+          projected:\n             defaultMode: 420\n-            secretName: {{ include \"hedera-mirror-importer.fullname\" . }}\n-{{- if not .Values.persistence.enabled }}\n-        - name: data\n-          emptyDir: {}\n-{{- else }}\n+            sources:\n+              - secret:\n+                  name: {{ include \"hedera-mirror-importer.fullname\" . }}\n+              {{- if .Values.global.extaddressbook.enabled }}\n+              - secret:\n+                  name: mirror-importer-addressbook", "originalCommit": "2e362275c44942a3e932cce1cc440f1374a058b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NDkyMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543074922", "bodyText": "Will add a comment", "author": "Nana-EC", "createdAt": "2020-12-15T06:15:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgyMDg1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0Nzg2Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543747863", "bodyText": "Added comment", "author": "Nana-EC", "createdAt": "2020-12-15T22:56:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgyMDg1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MjI4NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543752285", "bodyText": "But available memory is max 1Gi per your resource constraints. This looks like it is requesting more than is available.", "author": "steven-sheehy", "createdAt": "2020-12-15T23:06:03Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -169,3 +169,33 @@ redis:\n \n rest:\n   enabled: true\n+\n+timescaledb:\n+  credentials:\n+    accessNode:\n+      superuser: mirror_node_pass\n+    dataNode:\n+      superuser: mirror_node_pass\n+  enabled: false\n+  persistentVolume:\n+    size: 500Gi\n+  resources:\n+    limits:\n+      cpu: 1500m\n+      memory: 1000Mi\n+    requests:\n+      cpu: 250m\n+      memory: 500Mi\n+  postgresql:\n+    databases:\n+      - postgres\n+    parameters:\n+      max_wal_size: 8GB  # recommended to be 80% of the Volume Size\n+      min_wal_size: 2GB  # 80% of the WAL Volume Size\n+      shared_buffers: 2GB # recommended to be 25% of available instance memory", "originalCommit": "5f8b4703067cb81e2f9e45683b9cdc432d63c99d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc5ODQ4MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543798480", "bodyText": "Will tweak to be more consistent with constraint", "author": "Nana-EC", "createdAt": "2020-12-16T00:59:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MjI4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwNjEyNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543806124", "bodyText": "Or up max memory. 1Gi sounds way too low", "author": "steven-sheehy", "createdAt": "2020-12-16T01:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MjI4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MjQ3OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543752478", "bodyText": "nit: This indentation doesn't match its corresponding if/else", "author": "steven-sheehy", "createdAt": "2020-12-15T23:06:28Z", "path": "charts/hedera-mirror-importer/templates/statefulset.yaml", "diffHunk": "@@ -98,4 +104,4 @@ spec:\n         {{- if .Values.persistence.storageClass }}\n         storageClassName: \"{{ .Values.persistence.storageClass }}\"\n         {{- end }}\n-{{- end }}\n+  {{- end }}", "originalCommit": "5f8b4703067cb81e2f9e45683b9cdc432d63c99d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc5OTcxNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543799715", "bodyText": "IntelliJ keeps indenting this. Will try to fix once I've employed the suggested extraVolume and extraVolumeMounts", "author": "Nana-EC", "createdAt": "2020-12-16T01:02:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MjQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwNTg1MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543805850", "bodyText": "Yeah, I don't use intellij to edit helm files. I use vs or vi. Intellij just doesn't understand helm.", "author": "steven-sheehy", "createdAt": "2020-12-16T01:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MjQ3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0ODA0Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544648047", "bodyText": "Should be fixed now", "author": "Nana-EC", "createdAt": "2020-12-16T21:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MjQ3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NTUxOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543765519", "bodyText": "This doesn't really add the OTHER address book as it still requires you to add a secret manually external to this chart AND configure the path via the values.yaml. I also don't think it's necessary to complicate the config volume by mixing it with the address book. There is a better option:\nAdd extraVolumes and extraVolumeMounts as a lot of charts do to add arbitrary secrets, configmaps, etc. to the chart via values.yaml. Then the user would populate the initialAddressBook via the standard config property. The benefit of this approach is pretty widely used by community charts and it is generic and can support adding any arbitrary data in the future that we or users may need.", "author": "steven-sheehy", "createdAt": "2020-12-15T23:36:09Z", "path": "charts/hedera-mirror-importer/templates/statefulset.yaml", "diffHunk": "@@ -79,13 +79,19 @@ spec:\n         {{- toYaml .Values.tolerations | nindent 8 }}\n       volumes:\n         - name: config\n-          secret:\n+          projected:\n             defaultMode: 420\n-            secretName: {{ include \"hedera-mirror-importer.fullname\" . }}\n-{{- if not .Values.persistence.enabled }}\n+            sources:\n+              - secret:\n+                  name: {{ include \"hedera-mirror-importer.fullname\" . }}\n+              {{- if .Values.initialAddressBook.enabled }}\n+              - secret:\n+                  name: mirror-importer-addressbook # if enabled add filesystem path to initial address book for OTHER networks", "originalCommit": "5f8b4703067cb81e2f9e45683b9cdc432d63c99d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc5NzQ5MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r543797491", "bodyText": "Sure, will look into the extraVolume and extraVolumeMounts.\nRegarding the extra configs yes, the operator will still have to set the network: OTHER and initialAddressBook path and deploy the secret manually.\nThis makes sense since we do expect deployment of that nature to be more detailed.", "author": "Nana-EC", "createdAt": "2020-12-16T00:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NTUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0ODIxOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544648219", "bodyText": "Implemented use of extraVolumes and extraVolumeMounts configs", "author": "Nana-EC", "createdAt": "2020-12-16T21:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NTUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2NjYwMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544666601", "bodyText": "We should use the same image to connect as a client as we do for the TimescaleDB server. It also has psql in it.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:24:24Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwOTkyMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544709920", "bodyText": "I was matching the logic of the other timescale jobs but I can set it to timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3", "author": "Nana-EC", "createdAt": "2020-12-16T23:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2NjYwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NDU0Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546844547", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:49:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2NjYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2Nzc2MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544667760", "bodyText": "Should set -o errexit -o pipefail", "author": "steven-sheehy", "createdAt": "2020-12-16T22:26:35Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4MDg3NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546880875", "bodyText": "Hitting issues on the pipe fail option\nset: Illegal option -o pipefail\n\nWill look into it", "author": "Nana-EC", "createdAt": "2020-12-21T19:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2Nzc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4NzQ2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546887469", "bodyText": "pipefial shouldn't be needed with updated call logic that call the file secret", "author": "Nana-EC", "createdAt": "2020-12-21T19:25:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2Nzc2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2OTA4Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544669083", "bodyText": "This assumes the release name is mirror. Need to substitute the actual release name to work in our dev, for example.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:29:07Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NDYxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546844618", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2OTA4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3MTYwMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544671600", "bodyText": "Bad practice to store SQL in environment variables and it's more secure to store passwords in secrets and mount them as files. For this reason, we should create a init.sql secret and mount it as a volume to the job and execute that. It's also cleaner since you can just use helm to inject the values directly to the secret and not have an additional variable mapping. Similar to how we do this in secret-postgresql.yaml.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:33:43Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set grpcuser=\"${GRPCUSER}\" \\\n+                  --set grpcpassword=\"${GRPCUSERPASSWORD}\" \\\n+                  --set restuser=\"${RESTUSER}\" \\\n+                  --set restpassword=\"${RESTPASSWORD}\"\n+          env:\n+            - name: DBNAME\n+              value: {{ .Values.importer.config.hedera.mirror.importer.db.name | quote }}\n+            - name: DBUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbuser\n+            - name: DBUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbpassword\n+            - name: GRPCUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcuser\n+            - name: GRPCUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcpassword\n+            - name: RESTUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restuser\n+            - name: RESTPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restpassword\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n+            - name: ACCESS_SVC_CONNSTR_MAIN_USER\n+              value: host=mirror-timescaledb user={{ .Values.importer.config.hedera.mirror.importer.db.username }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.password }}\n+            - name: CREATE_USER_DB_SQL_COMMAND\n+              value: |\n+                SELECT format('CREATE DATABASE %I', :'dbname')", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMTMxOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544701319", "bodyText": "Yes I had that approach initially and went this was as I was trying to make the approach similar to what timescale does for data nodes db creation, but I agree a secret sql is preferred as it's more secure", "author": "Nana-EC", "createdAt": "2020-12-16T23:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3MTYwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NDY4Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546844682", "bodyText": "Fixed", "author": "Nana-EC", "createdAt": "2020-12-21T17:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3MTYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3MTg3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544671871", "bodyText": "Shouldn't the timescale specific postgres image already do this?", "author": "steven-sheehy", "createdAt": "2020-12-16T22:34:15Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set grpcuser=\"${GRPCUSER}\" \\\n+                  --set grpcpassword=\"${GRPCUSERPASSWORD}\" \\\n+                  --set restuser=\"${RESTUSER}\" \\\n+                  --set restpassword=\"${RESTPASSWORD}\"\n+          env:\n+            - name: DBNAME\n+              value: {{ .Values.importer.config.hedera.mirror.importer.db.name | quote }}\n+            - name: DBUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbuser\n+            - name: DBUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbpassword\n+            - name: GRPCUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcuser\n+            - name: GRPCUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcpassword\n+            - name: RESTUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restuser\n+            - name: RESTPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restpassword\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n+            - name: ACCESS_SVC_CONNSTR_MAIN_USER\n+              value: host=mirror-timescaledb user={{ .Values.importer.config.hedera.mirror.importer.db.username }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.password }}\n+            - name: CREATE_USER_DB_SQL_COMMAND\n+              value: |\n+                SELECT format('CREATE DATABASE %I', :'dbname')\n+                WHERE NOT EXISTS (\n+                   SELECT\n+                     FROM pg_database\n+                    WHERE datname=:'dbname'\n+                )\n+                \\gexec\n+                create user :dbuser with createrole password :'dbpassword';\n+                alter user :dbuser with superuser;\n+            - name: CREATE_API_USERS_SQL_COMMAND\n+              value: |\n+                CREATE EXTENSION IF NOT EXISTS timescaledb;", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5ODg5Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544698897", "bodyText": "That was my initial expectation but it seems that the extension is per db.\nSO it's there for the postgres db but not the new db created", "author": "Nana-EC", "createdAt": "2020-12-16T23:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3MTg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NDc0Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544674743", "bodyText": "I thought we were going to switch away from using public as the schema?", "author": "steven-sheehy", "createdAt": "2020-12-16T22:39:36Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set grpcuser=\"${GRPCUSER}\" \\\n+                  --set grpcpassword=\"${GRPCUSERPASSWORD}\" \\\n+                  --set restuser=\"${RESTUSER}\" \\\n+                  --set restpassword=\"${RESTPASSWORD}\"\n+          env:\n+            - name: DBNAME\n+              value: {{ .Values.importer.config.hedera.mirror.importer.db.name | quote }}\n+            - name: DBUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbuser\n+            - name: DBUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbpassword\n+            - name: GRPCUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcuser\n+            - name: GRPCUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcpassword\n+            - name: RESTUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restuser\n+            - name: RESTPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restpassword\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n+            - name: ACCESS_SVC_CONNSTR_MAIN_USER\n+              value: host=mirror-timescaledb user={{ .Values.importer.config.hedera.mirror.importer.db.username }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.password }}\n+            - name: CREATE_USER_DB_SQL_COMMAND\n+              value: |\n+                SELECT format('CREATE DATABASE %I', :'dbname')\n+                WHERE NOT EXISTS (\n+                   SELECT\n+                     FROM pg_database\n+                    WHERE datname=:'dbname'\n+                )\n+                \\gexec\n+                create user :dbuser with createrole password :'dbpassword';\n+                alter user :dbuser with superuser;\n+            - name: CREATE_API_USERS_SQL_COMMAND\n+              value: |\n+                CREATE EXTENSION IF NOT EXISTS timescaledb;\n+\n+                create user :grpcuser with login password :'grpcpassword';\n+                create user :restuser with login password :'restpassword';\n+                alter default privileges in schema public grant select on tables to :grpcuser;", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5OTQyMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544699423", "bodyText": "Yes we are. I'll do it in the following PR that's in draft. Wanted to get base case covered since I believe I hit some schema related issues the last time regarding search and access for users.\nBut yep we'll use a new schema", "author": "Nana-EC", "createdAt": "2020-12-16T23:32:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NDc0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NjE4MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544676180", "bodyText": "Since we have a chance to do things over, we should fix the security mistake of allowing the importer user to create roles. We should reduce his permissions to just read/write of mirrornode database.\nAdditionally, this should be called importeruser not dbuser to make that clear it's not some admin user.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:42:12Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set grpcuser=\"${GRPCUSER}\" \\\n+                  --set grpcpassword=\"${GRPCUSERPASSWORD}\" \\\n+                  --set restuser=\"${RESTUSER}\" \\\n+                  --set restpassword=\"${RESTPASSWORD}\"\n+          env:\n+            - name: DBNAME\n+              value: {{ .Values.importer.config.hedera.mirror.importer.db.name | quote }}\n+            - name: DBUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbuser\n+            - name: DBUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbpassword\n+            - name: GRPCUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcuser\n+            - name: GRPCUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcpassword\n+            - name: RESTUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restuser\n+            - name: RESTPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restpassword\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n+            - name: ACCESS_SVC_CONNSTR_MAIN_USER\n+              value: host=mirror-timescaledb user={{ .Values.importer.config.hedera.mirror.importer.db.username }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.password }}\n+            - name: CREATE_USER_DB_SQL_COMMAND\n+              value: |\n+                SELECT format('CREATE DATABASE %I', :'dbname')\n+                WHERE NOT EXISTS (\n+                   SELECT\n+                     FROM pg_database\n+                    WHERE datname=:'dbname'\n+                )\n+                \\gexec\n+                create user :dbuser with createrole password :'dbpassword';", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NDgyNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546844825", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:50:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NjE4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NjgyMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544676821", "bodyText": "Remove in favor of init.sql", "author": "steven-sheehy", "createdAt": "2020-12-16T22:43:32Z", "path": "charts/hedera-mirror/templates/secret-timescaledb.yaml", "diffHunk": "@@ -0,0 +1,17 @@\n+{{- if .Values.timescaledb.enabled -}}\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init\" .Release.Name  }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+type: Opaque\n+stringData:\n+  dbuser: \"{{ .Values.importer.config.hedera.mirror.importer.db.username }}\"", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NDg3Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546844876", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-12-21T17:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NjgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NzA4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544677084", "bodyText": "Consider enabling pg_stat_statements if not enabled by default.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:44:03Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set grpcuser=\"${GRPCUSER}\" \\\n+                  --set grpcpassword=\"${GRPCUSERPASSWORD}\" \\\n+                  --set restuser=\"${RESTUSER}\" \\\n+                  --set restpassword=\"${RESTPASSWORD}\"\n+          env:\n+            - name: DBNAME\n+              value: {{ .Values.importer.config.hedera.mirror.importer.db.name | quote }}\n+            - name: DBUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbuser\n+            - name: DBUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbpassword\n+            - name: GRPCUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcuser\n+            - name: GRPCUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcpassword\n+            - name: RESTUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restuser\n+            - name: RESTPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restpassword\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n+            - name: ACCESS_SVC_CONNSTR_MAIN_USER\n+              value: host=mirror-timescaledb user={{ .Values.importer.config.hedera.mirror.importer.db.username }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.password }}\n+            - name: CREATE_USER_DB_SQL_COMMAND\n+              value: |\n+                SELECT format('CREATE DATABASE %I', :'dbname')\n+                WHERE NOT EXISTS (\n+                   SELECT\n+                     FROM pg_database\n+                    WHERE datname=:'dbname'\n+                )\n+                \\gexec\n+                create user :dbuser with createrole password :'dbpassword';\n+                alter user :dbuser with superuser;\n+            - name: CREATE_API_USERS_SQL_COMMAND\n+              value: |\n+                CREATE EXTENSION IF NOT EXISTS timescaledb;\n+", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5OTgwMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544699803", "bodyText": "Good idea", "author": "Nana-EC", "createdAt": "2020-12-16T23:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NzA4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NDk2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546844969", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-12-21T17:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3NzA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3Nzk2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544677969", "bodyText": "Should consider create viewer role for reuse like in secret-postgresql.sql.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:45:48Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set grpcuser=\"${GRPCUSER}\" \\\n+                  --set grpcpassword=\"${GRPCUSERPASSWORD}\" \\\n+                  --set restuser=\"${RESTUSER}\" \\\n+                  --set restpassword=\"${RESTPASSWORD}\"\n+          env:\n+            - name: DBNAME\n+              value: {{ .Values.importer.config.hedera.mirror.importer.db.name | quote }}\n+            - name: DBUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbuser\n+            - name: DBUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbpassword\n+            - name: GRPCUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcuser\n+            - name: GRPCUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcpassword\n+            - name: RESTUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restuser\n+            - name: RESTPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restpassword\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n+            - name: ACCESS_SVC_CONNSTR_MAIN_USER\n+              value: host=mirror-timescaledb user={{ .Values.importer.config.hedera.mirror.importer.db.username }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.password }}\n+            - name: CREATE_USER_DB_SQL_COMMAND\n+              value: |\n+                SELECT format('CREATE DATABASE %I', :'dbname')\n+                WHERE NOT EXISTS (\n+                   SELECT\n+                     FROM pg_database\n+                    WHERE datname=:'dbname'\n+                )\n+                \\gexec\n+                create user :dbuser with createrole password :'dbpassword';\n+                alter user :dbuser with superuser;\n+            - name: CREATE_API_USERS_SQL_COMMAND\n+              value: |\n+                CREATE EXTENSION IF NOT EXISTS timescaledb;\n+\n+                create user :grpcuser with login password :'grpcpassword';\n+                create user :restuser with login password :'restpassword';\n+                alter default privileges in schema public grant select on tables to :grpcuser;", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTA4OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845089", "bodyText": "Used a viewer role", "author": "Nana-EC", "createdAt": "2020-12-21T17:51:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3Nzk2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3ODAwNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544678005", "bodyText": "I think you're missing a grant connect.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:45:55Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set grpcuser=\"${GRPCUSER}\" \\\n+                  --set grpcpassword=\"${GRPCUSERPASSWORD}\" \\\n+                  --set restuser=\"${RESTUSER}\" \\\n+                  --set restpassword=\"${RESTPASSWORD}\"\n+          env:\n+            - name: DBNAME\n+              value: {{ .Values.importer.config.hedera.mirror.importer.db.name | quote }}\n+            - name: DBUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbuser\n+            - name: DBUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: dbpassword\n+            - name: GRPCUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcuser\n+            - name: GRPCUSERPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: grpcpassword\n+            - name: RESTUSER\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restuser\n+            - name: RESTPASSWORD\n+              valueFrom:\n+                secretKeyRef:\n+                  name: {{ printf \"%s-timescaledb-init\" .Release.Name }}\n+                  key: restpassword\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}\n+            - name: ACCESS_SVC_CONNSTR_MAIN_USER\n+              value: host=mirror-timescaledb user={{ .Values.importer.config.hedera.mirror.importer.db.username }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.password }}\n+            - name: CREATE_USER_DB_SQL_COMMAND\n+              value: |\n+                SELECT format('CREATE DATABASE %I', :'dbname')\n+                WHERE NOT EXISTS (\n+                   SELECT\n+                     FROM pg_database\n+                    WHERE datname=:'dbname'\n+                )\n+                \\gexec\n+                create user :dbuser with createrole password :'dbpassword';\n+                alter user :dbuser with superuser;\n+            - name: CREATE_API_USERS_SQL_COMMAND\n+              value: |\n+                CREATE EXTENSION IF NOT EXISTS timescaledb;\n+\n+                create user :grpcuser with login password :'grpcpassword';", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgyOTI4MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546829281", "bodyText": "Seems to function without it", "author": "Nana-EC", "createdAt": "2020-12-21T17:18:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3ODAwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3OTIzMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544679230", "bodyText": "All users should be created by superuser. All users should be created in mirrornode database.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:48:25Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: postgres:11-alpine\n+          command:\n+            - sh\n+            - -c\n+            - >\n+              while ! pg_isready -U postgres -h mirror-timescaledb-data; do sleep 1; done;\n+              echo \"${CREATE_USER_DB_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" \\\n+                  --set ON_ERROR_STOP=1 \\\n+                  --set dbname=\"${DBNAME}\" \\\n+                  --set dbuser=\"${DBUSER}\" \\\n+                  --set dbpassword=\"${DBUSERPASSWORD}\"\n+              echo \"${CREATE_API_USERS_SQL_COMMAND}\" | psql --file=- --echo-queries -d \"${ACCESS_SVC_CONNSTR_MAIN_USER}\" \\", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTE4MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845181", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-12-21T17:51:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3OTIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3OTgzNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544679837", "bodyText": "Use nindent", "author": "steven-sheehy", "createdAt": "2020-12-16T22:49:37Z", "path": "charts/hedera-mirror-importer/templates/statefulset.yaml", "diffHunk": "@@ -66,6 +66,9 @@ spec:\n               mountPath: /usr/etc/hedera-mirror-importer\n             - name: data\n               mountPath: /var/lib/hedera-mirror-importer\n+{{- if .Values.extraVolumeMounts }}\n+{{ toYaml .Values.extraVolumeMounts | indent 12 }}", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTIzNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845235", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:51:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3OTgzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4MDY0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544680646", "bodyText": "This change is unnecessary. Helm delete already deletes services and endpoints. This command is to cleanup things not deleted by Helm like PVCs. The -l release=\"${RELEASE}\" might be okay to keep if you see a benefit in that.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:51:18Z", "path": "charts/README.md", "diffHunk": "@@ -66,12 +106,40 @@ To remove all the Kubernetes components associated with the chart and delete the\n $ helm delete \"${RELEASE}\"\n ```\n \n+\n The above command does not delete any of the underlying persistent volumes. To delete all the data associated with this release:\n \n ```shell script\n-$ kubectl delete $(kubectl get pvc -o name)\n+$ kubectl delete $(kubectl get pvc, ep, service -l release=\"${RELEASE}\" -o name)", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTM1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845358", "bodyText": "Reverted but added the -l release=\"${RELEASE}\"", "author": "Nana-EC", "createdAt": "2020-12-21T17:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4MDY0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4MDY5OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544680699", "bodyText": "Spurious newline", "author": "steven-sheehy", "createdAt": "2020-12-16T22:51:26Z", "path": "charts/README.md", "diffHunk": "@@ -66,12 +106,40 @@ To remove all the Kubernetes components associated with the chart and delete the\n $ helm delete \"${RELEASE}\"\n ```\n \n+", "originalCommit": "eee7f65b34cdc872ad59e1f08f22e2e8e2baba47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTU0Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845542", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-12-21T17:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4MDY5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4MjcyNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544682725", "bodyText": "This step is duplicated twice", "author": "steven-sheehy", "createdAt": "2020-12-16T22:55:17Z", "path": "charts/README.md", "diffHunk": "@@ -22,10 +22,50 @@ export RELEASE=\"mirror1\"\n \n To install the wrapper chart:\n \n-```shell script\n-$ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n-$ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n-```\n+1. Add the Hedera Mirror Node Repo\n+    ```shell script\n+    $ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n+    ```\n+\n+2. (Optional): Configure Network & AddressBook\n+    When running against a network other than the demo/testnent/mainnet network, the network must be updated and an initialAddressBook file must be provided.\n+\n+    e.g. To use an addressbook from a file located at `/Downloads/perf.bin`:\n+    First create the addressBook file as a secret from the local file:\n+    ```shell script\n+    $ kubectl create secret generic mirror-importer-addressbook --from-file=perf.bin=/Downloads/perf.bin --save-config=true\n+    ```\n+\n+    Then update the `values/yaml` file to set the `network`, `initialAddressBook`, `extraVolumes` and `extraVolumeMounts` configs.\n+    ```yaml\n+    importer:\n+      config:\n+        hedera:\n+          mirror:\n+            importer:\n+              initialAddressBook: \"/usr/etc/addressbook/perf.bin\"\n+              network: \"OTHER\"\n+      extraVolumes:\n+         - name: addressbook-secret-volume\n+           secret:\n+             defaultMode: 420\n+             secretName: mirror-importer-addressbook\n+      extraVolumeMounts:\n+         - name: addressbook-secret-volume\n+           mountPath: /usr/etc/addressbook\n+    ```\n+    > **_Note_** Ensure the configured `mountPath` matches the path in `initialAddressBook`\n+\n+    Then create the addressBook file as a secret from a local file e.g. `/Downloads/perf.bin`.\n+    ```shell script\n+    $ kubectl create secret generic mirror-importer-addressbook --from-file=perf.bin=/Downloads/perf.bin --save-config=true", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTYwNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845605", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-12-21T17:52:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4MjcyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4NDExOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544684118", "bodyText": "Extra spacing under these extraVolumes and extraVolumeMounts. Not sure it causes rendering issues if copied.", "author": "steven-sheehy", "createdAt": "2020-12-16T22:57:56Z", "path": "charts/README.md", "diffHunk": "@@ -22,10 +22,50 @@ export RELEASE=\"mirror1\"\n \n To install the wrapper chart:\n \n-```shell script\n-$ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n-$ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n-```\n+1. Add the Hedera Mirror Node Repo\n+    ```shell script\n+    $ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n+    ```\n+\n+2. (Optional): Configure Network & AddressBook\n+    When running against a network other than the demo/testnent/mainnet network, the network must be updated and an initialAddressBook file must be provided.\n+\n+    e.g. To use an addressbook from a file located at `/Downloads/perf.bin`:\n+    First create the addressBook file as a secret from the local file:\n+    ```shell script\n+    $ kubectl create secret generic mirror-importer-addressbook --from-file=perf.bin=/Downloads/perf.bin --save-config=true\n+    ```\n+\n+    Then update the `values/yaml` file to set the `network`, `initialAddressBook`, `extraVolumes` and `extraVolumeMounts` configs.\n+    ```yaml\n+    importer:\n+      config:\n+        hedera:\n+          mirror:\n+            importer:\n+              initialAddressBook: \"/usr/etc/addressbook/perf.bin\"\n+              network: \"OTHER\"\n+      extraVolumes:\n+         - name: addressbook-secret-volume", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTY1Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845652", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-12-21T17:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4NDExOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4NDM1NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544684355", "bodyText": "values.yaml", "author": "steven-sheehy", "createdAt": "2020-12-16T22:58:25Z", "path": "charts/README.md", "diffHunk": "@@ -22,10 +22,50 @@ export RELEASE=\"mirror1\"\n \n To install the wrapper chart:\n \n-```shell script\n-$ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n-$ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n-```\n+1. Add the Hedera Mirror Node Repo\n+    ```shell script\n+    $ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n+    ```\n+\n+2. (Optional): Configure Network & AddressBook\n+    When running against a network other than the demo/testnent/mainnet network, the network must be updated and an initialAddressBook file must be provided.\n+\n+    e.g. To use an addressbook from a file located at `/Downloads/perf.bin`:\n+    First create the addressBook file as a secret from the local file:\n+    ```shell script\n+    $ kubectl create secret generic mirror-importer-addressbook --from-file=perf.bin=/Downloads/perf.bin --save-config=true\n+    ```\n+\n+    Then update the `values/yaml` file to set the `network`, `initialAddressBook`, `extraVolumes` and `extraVolumeMounts` configs.", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTczNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845737", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:52:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4NDM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4NTIyNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r544685225", "bodyText": "I prefer the TLDR of the previous approach of repo add & install. There are hundreds of potential options to list in between repo add and install that we can't list all. Instead, I think we should add a separate configuration section with this address book information.", "author": "steven-sheehy", "createdAt": "2020-12-16T23:00:05Z", "path": "charts/README.md", "diffHunk": "@@ -22,10 +22,50 @@ export RELEASE=\"mirror1\"\n \n To install the wrapper chart:\n \n-```shell script\n-$ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n-$ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n-```\n+1. Add the Hedera Mirror Node Repo\n+    ```shell script\n+    $ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTg5MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845891", "bodyText": "Reverted and added a configuration sub sub section", "author": "Nana-EC", "createdAt": "2020-12-21T17:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY4NTIyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI0MzY0MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r545243641", "bodyText": "add newline before this paragraph\ntypo testnent -> testnet\nprefer initial address book to initialAddressBook", "author": "xin-hedera", "createdAt": "2020-12-17T16:52:56Z", "path": "charts/README.md", "diffHunk": "@@ -22,10 +22,50 @@ export RELEASE=\"mirror1\"\n \n To install the wrapper chart:\n \n-```shell script\n-$ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n-$ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n-```\n+1. Add the Hedera Mirror Node Repo\n+    ```shell script\n+    $ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n+    ```\n+\n+2. (Optional): Configure Network & AddressBook\n+    When running against a network other than the demo/testnent/mainnet network, the network must be updated and an initialAddressBook file must be provided.", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NTkzNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546845936", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI0MzY0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI0ODU5MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r545248590", "bodyText": "better this way:\nThen create a local values.yaml file to ...", "author": "xin-hedera", "createdAt": "2020-12-17T16:59:40Z", "path": "charts/README.md", "diffHunk": "@@ -22,10 +22,50 @@ export RELEASE=\"mirror1\"\n \n To install the wrapper chart:\n \n-```shell script\n-$ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n-$ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n-```\n+1. Add the Hedera Mirror Node Repo\n+    ```shell script\n+    $ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n+    ```\n+\n+2. (Optional): Configure Network & AddressBook\n+    When running against a network other than the demo/testnent/mainnet network, the network must be updated and an initialAddressBook file must be provided.\n+\n+    e.g. To use an addressbook from a file located at `/Downloads/perf.bin`:\n+    First create the addressBook file as a secret from the local file:\n+    ```shell script\n+    $ kubectl create secret generic mirror-importer-addressbook --from-file=perf.bin=/Downloads/perf.bin --save-config=true\n+    ```\n+\n+    Then update the `values/yaml` file to set the `network`, `initialAddressBook`, `extraVolumes` and `extraVolumeMounts` configs.", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgzNjcxMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546836710", "bodyText": "The values.yaml file already exists though. Or do you mean a separately named files in which they'd also have to be sure to add the necessary properties  like the way values-prod.yaml does.", "author": "Nana-EC", "createdAt": "2020-12-21T17:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI0ODU5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkwMDg4Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546900882", "bodyText": "I think Xin is saying not to recommend users update the existing values.yaml but to create their own custom yaml file like custom.yaml. If so, I would agree with that.", "author": "steven-sheehy", "createdAt": "2020-12-21T19:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI0ODU5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAxMzQ1Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547013452", "bodyText": "Noting a new file works for me", "author": "Nana-EC", "createdAt": "2020-12-22T01:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI0ODU5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMwNjYyMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r545306621", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {{ toYaml .Values.extraVolumeMounts | indent 12 }}\n          \n          \n            \n            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}", "author": "xin-hedera", "createdAt": "2020-12-17T18:24:33Z", "path": "charts/hedera-mirror-importer/templates/statefulset.yaml", "diffHunk": "@@ -66,6 +66,9 @@ spec:\n               mountPath: /usr/etc/hedera-mirror-importer\n             - name: data\n               mountPath: /var/lib/hedera-mirror-importer\n+{{- if .Values.extraVolumeMounts }}\n+{{ toYaml .Values.extraVolumeMounts | indent 12 }}", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NjAxNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546846016", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:53:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMwNjYyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMwNzI4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r545307284", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {{- if .Values.extraVolumes }}\n          \n          \n            \n            {{ toYaml .Values.extraVolumes | nindent 8}}\n          \n          \n            \n            {{- end }}\n          \n          \n            \n            {{- if .Values.extraVolumes }}\n          \n          \n            \n            {{- toYaml .Values.extraVolumes | nindent 8 }}\n          \n          \n            \n            {{- end }}\n          \n      \n    \n    \n  \n\nalso this block is placed at the wrong place, should be before:\n{{- if not .Values.persistence.enabled }}", "author": "xin-hedera", "createdAt": "2020-12-17T18:25:36Z", "path": "charts/hedera-mirror-importer/templates/statefulset.yaml", "diffHunk": "@@ -86,6 +89,9 @@ spec:\n         - name: data\n           emptyDir: {}\n {{- else }}\n+{{- if .Values.extraVolumes }}\n+{{ toYaml .Values.extraVolumes | nindent 8}}\n+{{- end }}", "originalCommit": "753bfea9308fd242918b45042949012bee0c82cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxMjM5NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r545312394", "bodyText": "Good catch. Those collapsed diffs make it hard to see.", "author": "steven-sheehy", "createdAt": "2020-12-17T18:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMwNzI4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0NjA3Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546846077", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-21T17:53:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMwNzI4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5MjUzOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546892539", "bodyText": "host needs to be templated with release name. Since it's used in multiple places, might be good to move to function in helpers", "author": "steven-sheehy", "createdAt": "2020-12-21T19:36:54Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+apiVersion: batch/v1\n+kind: Job\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init-job\" .Release.Name }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+  annotations:\n+    \"helm.sh/hook-delete-policy\": hook-succeeded\n+spec:\n+  backoffLimit: 4\n+  template:\n+    spec:\n+      containers:\n+        - name: init-mirrornode-db\n+          image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3\n+          command:\n+            - sh\n+            - -c\n+            - |\n+              set -e\n+\n+              while ! pg_isready -U postgres -h {{ printf \"%s-timescaledb-data\" .Release.Name }}; do sleep 1; done;\n+              psql --echo-queries -d \"${ACCESS_SVC_CONNSTR_POSTGRES}\" --set ON_ERROR_STOP=1 -f ${DB_INIT_FILE}\n+          env:\n+            - name: ACCESS_SVC_CONNSTR_POSTGRES\n+              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTQ5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039493", "bodyText": "Updated using a helpers function", "author": "Nana-EC", "createdAt": "2020-12-22T02:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5MjUzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5MzIwMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546893202", "bodyText": "if timescale enabled", "author": "steven-sheehy", "createdAt": "2020-12-21T19:38:27Z", "path": "charts/hedera-mirror/templates/job-timescaledb-init.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+apiVersion: batch/v1", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTUxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039518", "bodyText": "Added", "author": "Nana-EC", "createdAt": "2020-12-22T02:57:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5MzIwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5Mzc3MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546893770", "bodyText": "Some variable names all lower, some camel case. Would be good to standardize on camel case.", "author": "steven-sheehy", "createdAt": "2020-12-21T19:39:47Z", "path": "charts/hedera-mirror/templates/secret-timescaledb.yaml", "diffHunk": "@@ -0,0 +1,30 @@\n+{{- if .Values.timescaledb.enabled -}}\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init\" .Release.Name  }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+type: Opaque\n+stringData:\n+  init.sql: |-\n+    {{- $dbname := .Values.importer.config.hedera.mirror.importer.db.name }}\n+    {{- $importeruser := .Values.importer.config.hedera.mirror.importer.db.username }}\n+    {{- $importerpassword := .Values.importer.config.hedera.mirror.importer.db.password }}", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTU0OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039548", "bodyText": "Standardized", "author": "Nana-EC", "createdAt": "2020-12-22T02:57:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5Mzc3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5NjY0MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546896641", "bodyText": "This section would make more sense in the configuration section above instead of a random separate section. So you'd have sections that look like:\n\nInstall\nConfigure\n\nTimescaleDB\nCustom address book\n\n\nTesting", "author": "steven-sheehy", "createdAt": "2020-12-21T19:46:22Z", "path": "charts/README.md", "diffHunk": "@@ -64,13 +97,31 @@ To remove all the Kubernetes components associated with the chart and delete the\n \n ```shell script\n $ helm delete \"${RELEASE}\"\n+$ kubectl delete $(kubectl get pvc -l release=\"${RELEASE}\" -o name)\n+$ kubectl delete pvc data-\"${RELEASE}\"-importer-0\n ```\n \n-The above command does not delete any of the underlying persistent volumes. To delete all the data associated with this release:\n+## Install (TimescaleDB, mirror db v2 schema)\n+In an effort to increase performance and ingestion the v2 db schema of the mirror node will utilize [TimescaleDB](https://docs.timescale.com/latest/main) to take on a more time series aligned approach.\n \n-```shell script\n-$ kubectl delete $(kubectl get pvc -o name)\n-```\n+To deploy the mirror chart using TimescaleDB instead of PostgreSQL take the following steps\n+1. Set the following config values in `values.yaml` as noted below", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTU4NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039585", "bodyText": "Reorganized", "author": "Nana-EC", "createdAt": "2020-12-22T02:57:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5NjY0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5ODM4Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546898382", "bodyText": "We should keep the delete chart separate from the delete data like it was. Deleting the chart is recoverable but deleting the data is not and we should warn users sufficiently about the seriousness of the action.", "author": "steven-sheehy", "createdAt": "2020-12-21T19:48:53Z", "path": "charts/README.md", "diffHunk": "@@ -64,13 +97,31 @@ To remove all the Kubernetes components associated with the chart and delete the\n \n ```shell script\n $ helm delete \"${RELEASE}\"\n+$ kubectl delete $(kubectl get pvc -l release=\"${RELEASE}\" -o name)\n+$ kubectl delete pvc data-\"${RELEASE}\"-importer-0\n ```\n \n-The above command does not delete any of the underlying persistent volumes. To delete all the data associated with this release:", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTY1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039658", "bodyText": "Separated", "author": "Nana-EC", "createdAt": "2020-12-22T02:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5ODM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5OTg4Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546899887", "bodyText": "I take that back, release is not a standard label applied to all kubernetes objects, hence why you're having to add an explicit delete for the importer pvc. I think the original kubectl delete $(kubectl get pvc -o name) would be simpler and more future-proof.", "author": "steven-sheehy", "createdAt": "2020-12-21T19:52:28Z", "path": "charts/README.md", "diffHunk": "@@ -64,13 +97,31 @@ To remove all the Kubernetes components associated with the chart and delete the\n \n ```shell script\n $ helm delete \"${RELEASE}\"\n+$ kubectl delete $(kubectl get pvc -l release=\"${RELEASE}\" -o name)", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTcyNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039727", "bodyText": "Good catch, updated", "author": "Nana-EC", "createdAt": "2020-12-22T02:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5OTg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkwMTczOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546901738", "bodyText": "Does this job run on every helm release? If so, this init.sql needs to be made safe to be re-ran multiple times by adding if not exists or other mechanisms to keep it from failing on subsequent executions.", "author": "steven-sheehy", "createdAt": "2020-12-21T19:56:46Z", "path": "charts/hedera-mirror/templates/secret-timescaledb.yaml", "diffHunk": "@@ -0,0 +1,30 @@\n+{{- if .Values.timescaledb.enabled -}}\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init\" .Release.Name  }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+type: Opaque\n+stringData:\n+  init.sql: |-\n+    {{- $dbname := .Values.importer.config.hedera.mirror.importer.db.name }}\n+    {{- $importeruser := .Values.importer.config.hedera.mirror.importer.db.username }}\n+    {{- $importerpassword := .Values.importer.config.hedera.mirror.importer.db.password }}\n+    {{- $grpcUsername := .Values.grpc.config.hedera.mirror.grpc.db.username }}\n+    {{- $grpcPassword := .Values.grpc.config.hedera.mirror.grpc.db.password }}\n+    {{- $restuser := .Values.global.rest.username }}\n+    {{- $restpassword := .Values.global.rest.password }}\n+    create database {{ $dbname }};", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAyNjMzOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547026338", "bodyText": "No, it runs once. The job won't run again after it's completed unless it's deleted and another release is pushed", "author": "Nana-EC", "createdAt": "2020-12-22T02:07:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkwMTczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzNjc3OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547036779", "bodyText": "I think adding a post-install hook should work. That should ensure 1. it runs after resources are created, 2. It runs only on install", "author": "Nana-EC", "createdAt": "2020-12-22T02:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkwMTczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTgyNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039826", "bodyText": "Added post-install and verified upgrades don't call the job again", "author": "Nana-EC", "createdAt": "2020-12-22T02:58:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkwMTczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk2NjcxMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546966713", "bodyText": "this block failed to render properly, you can check it out by \"View file\", guess it's caused by the leading spaces.", "author": "xin-hedera", "createdAt": "2020-12-21T22:45:23Z", "path": "charts/README.md", "diffHunk": "@@ -22,10 +22,43 @@ export RELEASE=\"mirror1\"\n \n To install the wrapper chart:\n \n-```shell script\n-$ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n-$ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n-```\n+    ```shell script\n+    $ helm repo add hedera https://hashgraph.github.io/hedera-mirror-node/charts\n+    $ helm upgrade --install \"${RELEASE}\" hedera/hedera-mirror\n+    ```", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTkzMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039930", "bodyText": "Fixed", "author": "Nana-EC", "createdAt": "2020-12-22T02:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk2NjcxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk3MzE4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r546973184", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  cpu: 2Gi\n          \n          \n            \n                  cpu: 2", "author": "xin-hedera", "createdAt": "2020-12-21T22:59:30Z", "path": "charts/hedera-mirror/values.yaml", "diffHunk": "@@ -169,3 +177,30 @@ redis:\n \n rest:\n   enabled: true\n+\n+timescaledb:\n+  credentials:\n+    accessNode:\n+      superuser: mirror_node_pass\n+    dataNode:\n+      superuser: mirror_node_pass\n+  enabled: false\n+  persistentVolume:\n+    size: 500Gi\n+  resources:\n+    limits:\n+      cpu: 2Gi", "originalCommit": "05d6ccfdc0a361280e620f90ac50ea2f9c4f2258", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzOTg5Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547039897", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-22T02:58:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk3MzE4NA=="}], "type": "inlineReview"}, {"oid": "3506b3b4cef79acc40c4c20c58fd17d314d50317", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3506b3b4cef79acc40c4c20c58fd17d314d50317", "message": "Add v2 migrations flyway migrations for timescaledb\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:41Z", "type": "commit"}, {"oid": "ffcdcbe6d6aeb67e8ed64aa1b5c0ad165ca0540e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ffcdcbe6d6aeb67e8ed64aa1b5c0ad165ca0540e", "message": "Added test support to flip between v1 and v2 dbs\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:41Z", "type": "commit"}, {"oid": "a1d34baac11ed565271f266c5136a9f4a8366e7d", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a1d34baac11ed565271f266c5136a9f4a8366e7d", "message": "Added config documentation and moved topicRunningHashV2AddedTimestamp config into FlywayConfiguration\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "8af08e4be7b697949d75e62d1ae36ae0c044b921", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8af08e4be7b697949d75e62d1ae36ae0c044b921", "message": "Utilize flyway migrations locations and fix grpc and rest tests to support timescaledb\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "f736b1542d1e2ac19e6a395161356614d1b11b37", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f736b1542d1e2ac19e6a395161356614d1b11b37", "message": "Add v2 directory of migrations and revert AbstractDownloaderTest change\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "6ea70c7e5c4e9e5bb64c03fb265e7ce284f32f29", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6ea70c7e5c4e9e5bb64c03fb265e7ce284f32f29", "message": "Updated config docs and removed FlywayProperties and updated locations\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "412a8435385fe1a441c6b8508eb02bac283f35aa", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/412a8435385fe1a441c6b8508eb02bac283f35aa", "message": "Revert config additions for simplicity\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "5974f70e9ad6e40043f749760300227917d29ed1", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5974f70e9ad6e40043f749760300227917d29ed1", "message": "Reverted db usernam config removal and updated circle config w flyway props\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "db62f49fcc74f9c901460c91447536d33d48f46e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/db62f49fcc74f9c901460c91447536d33d48f46e", "message": "Update v1 script location for grpc test in circle ci\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "cf21c2b2a190fbc9f10c1d2a55c644f26b3a8089", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/cf21c2b2a190fbc9f10c1d2a55c644f26b3a8089", "message": "Address feedback on timesacle db init migrations regarding domains, placeholders and distributed hyper tables\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "5c9256d4df78b2f0fb0096a3520dca85445d15dc", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5c9256d4df78b2f0fb0096a3520dca85445d15dc", "message": "Fix up constraints and add compression policy\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "44feed2641c90f0013f1b04e252175b139455058", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/44feed2641c90f0013f1b04e252175b139455058", "message": "Fix rest tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "acd86ea6c26cd07f1659c870eccaa38fc2ad06ac", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/acd86ea6c26cd07f1659c870eccaa38fc2ad06ac", "message": "Added compression for most tables\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "5798fcc3acb82d4c4bedb134611770894124c3d3", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5798fcc3acb82d4c4bedb134611770894124c3d3", "message": "CLeaned up configuration\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "40ec0d04c922a30247582839554795ef79f0df4a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/40ec0d04c922a30247582839554795ef79f0df4a", "message": "Restore circle ci flyway locations config\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "5124f62d97c7f07cdff8c66bfd57af52dfc05774", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5124f62d97c7f07cdff8c66bfd57af52dfc05774", "message": "Removed V2_0_4__Address_Book and utility function\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "86f6e5d450aabd1a69d9bfb3c7805aff0c13bfdb", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/86f6e5d450aabd1a69d9bfb3c7805aff0c13bfdb", "message": "Try moving flyway locations to test bootstrap\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "295416d44b4e009703d89e5ba50de54cbd939fa7", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/295416d44b4e009703d89e5ba50de54cbd939fa7", "message": "Addressed feedback on compression and missing hyper tables\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:42Z", "type": "commit"}, {"oid": "f088fa14cb4418d64f6a37ad7767e54a3bb2416c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f088fa14cb4418d64f6a37ad7767e54a3bb2416c", "message": "Removed config repetition for flyway migrations\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:43Z", "type": "commit"}, {"oid": "f1faed07e2ddb1bc44d498fd6349186d1b5eb453", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f1faed07e2ddb1bc44d498fd6349186d1b5eb453", "message": "Made address_book a hyper table and added compression\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:43Z", "type": "commit"}, {"oid": "2768c8d67955189da0fd7f18cf26405b7eef9ce7", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2768c8d67955189da0fd7f18cf26405b7eef9ce7", "message": "Updated hyper table comments\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:43Z", "type": "commit"}, {"oid": "a7fb09f55649a6072c7662061e92d99c9dcda335", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a7fb09f55649a6072c7662061e92d99c9dcda335", "message": "Utilize flyway migrations locations and fix grpc and rest tests to support timescaledb\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:00:43Z", "type": "commit"}, {"oid": "2825bec305d929a71ff7a00dff623edf5ce58cc2", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2825bec305d929a71ff7a00dff623edf5ce58cc2", "message": "Added timescaledb v2 chart\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:10Z", "type": "commit"}, {"oid": "79b2fecf24693e2556a5b25f0fa0e677d32a24e4", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/79b2fecf24693e2556a5b25f0fa0e677d32a24e4", "message": "Turn on monitor\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:10Z", "type": "commit"}, {"oid": "3cd9dcd84ccaa5c619d077c5506f33184f92cd9b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3cd9dcd84ccaa5c619d077c5506f33184f92cd9b", "message": "Increased postgres db size\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:10Z", "type": "commit"}, {"oid": "a906051681aab48f53d3e47ef8b1da58cea346be", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a906051681aab48f53d3e47ef8b1da58cea346be", "message": "Removed v2 ref form values\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:10Z", "type": "commit"}, {"oid": "d5d7a3af2e2a12a2c1fec831d572bc9f33269b1a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d5d7a3af2e2a12a2c1fec831d572bc9f33269b1a", "message": "Fix merge conflicts\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:10Z", "type": "commit"}, {"oid": "7d47db8660a9197795ea590acc5f9e1acbce7ea1", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7d47db8660a9197795ea590acc5f9e1acbce7ea1", "message": "Fix indents in compression migration\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:10Z", "type": "commit"}, {"oid": "b9d3e895e668e43045886dcb06c60c06b4a73ac6", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b9d3e895e668e43045886dcb06c60c06b4a73ac6", "message": "Addressed feedback 1\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:30Z", "type": "commit"}, {"oid": "8df50746cb624687599bf54fbc0dfa52406c22cd", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8df50746cb624687599bf54fbc0dfa52406c22cd", "message": "Add timescaledb init job and secret and update readme\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:30Z", "type": "commit"}, {"oid": "06c966c213f9a12d11ded7f330bd582ea3e53ce1", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/06c966c213f9a12d11ded7f330bd582ea3e53ce1", "message": "Streamlined volume mount and removed extra settings\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:31Z", "type": "commit"}, {"oid": "00e355e75b30b34c980807933bfd4db3048ab41c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/00e355e75b30b34c980807933bfd4db3048ab41c", "message": "Updated default limits on resources\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:31Z", "type": "commit"}, {"oid": "e9fb7ae0971865f5f62671eac869bf8ec20dacae", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e9fb7ae0971865f5f62671eac869bf8ec20dacae", "message": "Updated job-timescaledb-init to use init.sql file from  secret-timescaledb\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:31Z", "type": "commit"}, {"oid": "35c903d9cf300dda891f818ea3543bed2b965b52", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/35c903d9cf300dda891f818ea3543bed2b965b52", "message": "Set errexit on db init script call\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:31Z", "type": "commit"}, {"oid": "efa28fb57c2fc33a9dd1005f808d0ee118f50c2a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/efa28fb57c2fc33a9dd1005f808d0ee118f50c2a", "message": "Use a post-install hook and update docs\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:31Z", "type": "commit"}, {"oid": "efa28fb57c2fc33a9dd1005f808d0ee118f50c2a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/efa28fb57c2fc33a9dd1005f808d0ee118f50c2a", "message": "Use a post-install hook and update docs\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:02:31Z", "type": "forcePushed"}, {"oid": "4cd0162c9a19eb2f8491b77b6cc2531b7e294b89", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4cd0162c9a19eb2f8491b77b6cc2531b7e294b89", "message": "Removed extra space on install commands\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-22T03:08:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3NDU3NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547374575", "bodyText": "alter default privileges in schema public grant select on tables to viewer;", "author": "steven-sheehy", "createdAt": "2020-12-22T16:28:13Z", "path": "charts/hedera-mirror/templates/secret-timescaledb.yaml", "diffHunk": "@@ -0,0 +1,30 @@\n+{{- if .Values.timescaledb.enabled -}}\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init\" .Release.Name  }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+type: Opaque\n+stringData:\n+  init.sql: |-\n+    {{- $dbName := .Values.importer.config.hedera.mirror.importer.db.name }}\n+    {{- $importerUser := .Values.importer.config.hedera.mirror.importer.db.username }}\n+    {{- $importerPassword := .Values.importer.config.hedera.mirror.importer.db.password }}\n+    {{- $grpcUsername := .Values.grpc.config.hedera.mirror.grpc.db.username }}\n+    {{- $grpcPassword := .Values.grpc.config.hedera.mirror.grpc.db.password }}\n+    {{- $restUser := .Values.global.rest.username }}\n+    {{- $restPassword := .Values.global.rest.password }}\n+    create database {{ $dbName }};\n+    \\c {{ $dbName }};\n+    create extension if not exists timescaledb cascade;\n+    create user {{ $importerUser }} with login password '{{ $importerPassword }}';\n+    create role viewer;\n+    create user {{ $grpcUsername }} with login password '{{ $grpcPassword }}' in role viewer;\n+    create user {{ $restUser }} with login password '{{ $restPassword }}' in role viewer;\n+    grant select on all tables in schema public to {{ $importerUser }};\n+    grant select on all tables in schema public to viewer;\n+    alter default privileges for role {{ $importerUser }} in schema public grant select on tables to viewer;", "originalCommit": "4cd0162c9a19eb2f8491b77b6cc2531b7e294b89", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3NzY1OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547377659", "bodyText": "This does not create a read only user. Because the viewer role inherits from public, he has permissions to create objects. This is also why it works without grant connect currently.\nWe need to revisit these permissions completely. We should revoke all permissions from public first. Then we should create readonly and readwrite roles then assign those to users appropriately. Maybe we can do this in a follow up.", "author": "steven-sheehy", "createdAt": "2020-12-22T16:34:23Z", "path": "charts/hedera-mirror/templates/secret-timescaledb.yaml", "diffHunk": "@@ -0,0 +1,30 @@\n+{{- if .Values.timescaledb.enabled -}}\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  labels:\n+    {{- include \"hedera-mirror.labels\" . | nindent 4 }}\n+  name: {{ printf \"%s-timescaledb-init\" .Release.Name  }}\n+  namespace: {{ include \"hedera-mirror.namespace\" . }}\n+type: Opaque\n+stringData:\n+  init.sql: |-\n+    {{- $dbName := .Values.importer.config.hedera.mirror.importer.db.name }}\n+    {{- $importerUser := .Values.importer.config.hedera.mirror.importer.db.username }}\n+    {{- $importerPassword := .Values.importer.config.hedera.mirror.importer.db.password }}\n+    {{- $grpcUsername := .Values.grpc.config.hedera.mirror.grpc.db.username }}\n+    {{- $grpcPassword := .Values.grpc.config.hedera.mirror.grpc.db.password }}\n+    {{- $restUser := .Values.global.rest.username }}\n+    {{- $restPassword := .Values.global.rest.password }}\n+    create database {{ $dbName }};\n+    \\c {{ $dbName }};\n+    create extension if not exists timescaledb cascade;\n+    create user {{ $importerUser }} with login password '{{ $importerPassword }}';\n+    create role viewer;\n+    create user {{ $grpcUsername }} with login password '{{ $grpcPassword }}' in role viewer;\n+    create user {{ $restUser }} with login password '{{ $restPassword }}' in role viewer;\n+    grant select on all tables in schema public to {{ $importerUser }};\n+    grant select on all tables in schema public to viewer;", "originalCommit": "4cd0162c9a19eb2f8491b77b6cc2531b7e294b89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQyMTM3OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1359#discussion_r547421379", "bodyText": "I'm my next PR, I'm creating the tables in a new schema.\nI can open a ticket to focus on fixing the privileges for the users outside of these PR.\nThese will also be easier to confirm as they'll follow or be in conjunction with testing.", "author": "Nana-EC", "createdAt": "2020-12-22T18:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3NzY1OQ=="}], "type": "inlineReview"}]}