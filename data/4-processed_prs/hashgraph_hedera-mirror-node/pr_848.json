{"pr_number": 848, "pr_title": "Add Additional Importer and grpc latency metrics", "pr_createdAt": "2020-06-29T02:47:41Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/848", "timeline": [{"oid": "e03067298854ea38332e8812ebc5715b5ba2261c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e03067298854ea38332e8812ebc5715b5ba2261c", "message": "Add importer and grpc latency metrics\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-06-29T18:33:52Z", "type": "commit"}, {"oid": "5399388f9fcbd2f89459f58162c1ca01ffe157aa", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5399388f9fcbd2f89459f58162c1ca01ffe157aa", "message": "Switch from TransactionConsensusLongTime to ransactionValidStartTime and fixed a test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-06-29T18:33:52Z", "type": "commit"}, {"oid": "5399388f9fcbd2f89459f58162c1ca01ffe157aa", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5399388f9fcbd2f89459f58162c1ca01ffe157aa", "message": "Switch from TransactionConsensusLongTime to ransactionValidStartTime and fixed a test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-06-29T18:33:52Z", "type": "forcePushed"}, {"oid": "ebca538b4f6c8791be217e1f6d1dfc5bd3fc6bf3", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ebca538b4f6c8791be217e1f6d1dfc5bd3fc6bf3", "message": "renamed metric\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-06-29T19:11:21Z", "type": "commit"}, {"oid": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aa2afb1213a7467bef331b1bdaef3eea83a03795", "message": "Renamed metrics from consensus to validStart\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-06-29T19:17:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MDUwOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446750508", "bodyText": "Since there's no dynamic tags, you should register this in constructor for performance reasons.", "author": "steven-sheehy", "createdAt": "2020-06-29T03:18:51Z", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/service/TopicMessageServiceImpl.java", "diffHunk": "@@ -207,6 +214,9 @@ void onNext(TopicMessage topicMessage) {\n             }\n \n             lastTopicMessage = topicMessage;\n+            consensusToPublishMetric\n+                    .register(meterRegistry)", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTIxOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955219", "bodyText": "Moved to @PostConstruct of CompositeTopicListener", "author": "Nana-EC", "createdAt": "2020-06-30T20:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MDUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MTE3OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446751178", "bodyText": "Putting this metric in topic message service means it runs for both historic messages and incoming, producing inaccurate results. Since this metric should really track when it was first published, it should be placed inside the CompositeTopicListener.", "author": "steven-sheehy", "createdAt": "2020-06-29T03:22:07Z", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/service/TopicMessageServiceImpl.java", "diffHunk": "@@ -53,6 +56,10 @@\n     private final TopicListener topicListener;\n     private final EntityRepository entityRepository;\n     private final TopicMessageRetriever topicMessageRetriever;\n+    private final MeterRegistry meterRegistry;\n+    private final Timer.Builder consensusToPublishMetric = Timer.builder(\"hedera.mirror.message.latency\")", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTI5MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955290", "bodyText": "Good point. Moving logic to CompositeTopicListener", "author": "Nana-EC", "createdAt": "2020-06-30T20:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MTE3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1Mjk5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446752993", "bodyText": "I did a lot of work to reduce construction of temporary objects in this flow recently. It would be better to use System.currentTimeMillis() - topicMessage.getConsensusTimestampInstant().toEpochMillis(). Please verify accuracy of calculation. Potentially also System.nanoTime() - topicMessage.getConsensusTimestamp().\nNote that's nanoTime and not nanaTime. :D", "author": "steven-sheehy", "createdAt": "2020-06-29T03:31:08Z", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/service/TopicMessageServiceImpl.java", "diffHunk": "@@ -207,6 +214,9 @@ void onNext(TopicMessage topicMessage) {\n             }\n \n             lastTopicMessage = topicMessage;\n+            consensusToPublishMetric\n+                    .register(meterRegistry)\n+                    .record(Duration.between(topicMessage.getConsensusTimestampInstant(), Instant.now()));", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTQ1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955458", "bodyText": "Fair point. Went with milliseconds since we're expecting the latency in the range of 6-12 seconds. Nano feels like extra accuracy.\nLet me know if I'm missing something on the needs for nanoTime (not meTime)", "author": "Nana-EC", "createdAt": "2020-06-30T20:20:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1Mjk5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MzI3OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446753278", "bodyText": "Would prefer hedera.mirror.topicmessage.latency for clarity.", "author": "steven-sheehy", "createdAt": "2020-06-29T03:32:23Z", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/service/TopicMessageServiceImpl.java", "diffHunk": "@@ -53,6 +56,10 @@\n     private final TopicListener topicListener;\n     private final EntityRepository entityRepository;\n     private final TopicMessageRetriever topicMessageRetriever;\n+    private final MeterRegistry meterRegistry;\n+    private final Timer.Builder consensusToPublishMetric = Timer.builder(\"hedera.mirror.message.latency\")", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTUwMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955503", "bodyText": "Agreed. Updated", "author": "Nana-EC", "createdAt": "2020-06-30T20:21:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MzI3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MzkyMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446753920", "bodyText": "I would not use the term push because it's not a) synchronously pushing when you record and b) only elastic actually pushes while prometheus pulls. Recommend record instead of push.", "author": "steven-sheehy", "createdAt": "2020-06-29T03:35:34Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -101,6 +106,8 @@ public RecordFileParser(ApplicationStatusRepository applicationStatusRepository,\n      */\n     public void loadRecordFile(StreamFileData streamFileData) {\n         Instant startTime = Instant.now();\n+        pushParserFallBehindMetric(streamFileData.getFilename(), startTime);", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTY2MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955661", "bodyText": "Updated to to 'record' not 'push'", "author": "Nana-EC", "createdAt": "2020-06-30T20:21:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MzkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NDIzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446754233", "bodyText": "Instead of parsing the filename, we should use the RecordFile object which has already retrieved the consensus timestamp. In fact, can just rf.loadend - rf.consensusend, don't need to pass in start time and convert to instants and durations.", "author": "steven-sheehy", "createdAt": "2020-06-29T03:37:16Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -188,6 +195,19 @@ private void loadRecordFiles(List<String> fileNames) {\n         }\n     }\n \n+    private void pushParserFallBehindMetric(String filePath, Instant startTime) {\n+        try {\n+            String fileName = Utility.getFileName(filePath);", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTcxOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955719", "bodyText": "Fair point. Didn't realize the timestamp was that of the 1st transaction consensus.", "author": "Nana-EC", "createdAt": "2020-06-30T20:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NDIzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NDI2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446754269", "bodyText": "Register in constructor", "author": "steven-sheehy", "createdAt": "2020-06-29T03:37:30Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -188,6 +195,19 @@ private void loadRecordFiles(List<String> fileNames) {\n         }\n     }\n \n+    private void pushParserFallBehindMetric(String filePath, Instant startTime) {\n+        try {\n+            String fileName = Utility.getFileName(filePath);\n+            String fileTimeStamp = fileName.replace(\".rcd\", \"\").replace('_', ':');\n+            Instant fileCreateTime = Instant.parse(fileTimeStamp);\n+            parserFallBehindMetric\n+                    .register(meterRegistry)", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTc1Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955756", "bodyText": "Moved to constructor", "author": "Nana-EC", "createdAt": "2020-06-30T20:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NDI2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NDQ1Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r446754456", "bodyText": "The description states milliseconds but we only have second granularity. Can we do ms here?", "author": "steven-sheehy", "createdAt": "2020-06-29T03:38:24Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -188,6 +195,19 @@ private void loadRecordFiles(List<String> fileNames) {\n         }\n     }\n \n+    private void pushParserFallBehindMetric(String filePath, Instant startTime) {\n+        try {\n+            String fileName = Utility.getFileName(filePath);\n+            String fileTimeStamp = fileName.replace(\".rcd\", \"\").replace('_', ':');\n+            Instant fileCreateTime = Instant.parse(fileTimeStamp);\n+            parserFallBehindMetric\n+                    .register(meterRegistry)\n+                    .record(Duration.between(fileCreateTime, startTime).getSeconds(), TimeUnit.SECONDS);", "originalCommit": "6921c612aad83f2b116d99b9cfbc3215b76bfbff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTg2Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955863", "bodyText": "I'll be converting the recordFileEnd to ms and the consensus time to ms so we can get ms granularity.", "author": "Nana-EC", "createdAt": "2020-06-30T20:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NDQ1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNDI3NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447314275", "bodyText": "Inaccurate description. Not serialization but consensus timestamp of first transaction.\nAlso, I think it might be more accurate to compare against last consensus timestamp in file instead of first.", "author": "steven-sheehy", "createdAt": "2020-06-29T23:23:08Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -89,6 +90,10 @@ public RecordFileParser(ApplicationStatusRepository applicationStatusRepository,\n                 .description(\"The duration in seconds it took to parse the file and store it in the database\")\n                 .tag(\"type\", parserProperties.getStreamType().toString());\n \n+        parserFallBehindMetric = Timer.builder(\"hedera.mirror.file.age\")\n+                .description(\"The difference in ms between the serialization of the file and when the mirror node \" +", "originalCommit": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NTkxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447955918", "bodyText": "Good clarification. Yeah last consensus time will help ignore the time the network takes to serialize all the transactions to file. Probably the closest time to the end of file write.", "author": "Nana-EC", "createdAt": "2020-06-30T20:21:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNDI3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNTA5MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447315091", "bodyText": "Move tag and register to constructor or @PostConstruct (not onStart())", "author": "steven-sheehy", "createdAt": "2020-06-29T23:25:40Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -193,13 +211,28 @@ private void executeBatches() {\n                             \"claims: {}, topic messages: {}, non-fee transfers: {}\",\n                     transactions, entityIds, transferLists, fileData, contractResult, liveHashes, topicMessages,\n                     nonFeeTransfers);\n+            batchInsertMetric.tag(\"entity\", \"transactions\")", "originalCommit": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjI0OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447956249", "bodyText": "Agreed, but removing this change till after PgCopy logic goes in as it deletes a lot of code from this file.", "author": "Nana-EC", "createdAt": "2020-06-30T20:22:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNTA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyODU4MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447328581", "bodyText": "Would prefer hedera.mirror.parse.delay to closer match related hedera.mirror.parse.duration", "author": "steven-sheehy", "createdAt": "2020-06-30T00:06:35Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/RecordFileParser.java", "diffHunk": "@@ -89,6 +90,10 @@ public RecordFileParser(ApplicationStatusRepository applicationStatusRepository,\n                 .description(\"The duration in seconds it took to parse the file and store it in the database\")\n                 .tag(\"type\", parserProperties.getStreamType().toString());\n \n+        parserFallBehindMetric = Timer.builder(\"hedera.mirror.file.age\")", "originalCommit": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjI5Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447956297", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-06-30T20:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyODU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMzMDAxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447330018", "bodyText": "Move to constructor or @PostConstruct. Constructor would be preferable to make final.", "author": "steven-sheehy", "createdAt": "2020-06-30T00:11:24Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -75,13 +79,27 @@\n     private PreparedStatement sqlInsertTopicMessage;\n     private Connection connection;\n \n+    // Metrics\n+    private final MeterRegistry meterRegistry;\n+    private Timer.Builder batchInsertMetric;\n+    private Timer.Builder validStartTimeToDBInsertMetric;\n+    private int validStartTimeOfFirstTransactionInBatch = Instant.now().getNano();\n+\n     @Override\n     public void onStart(StreamFileData streamFileData) {\n         String fileName = streamFileData.getFilename();\n         entityIds = new HashSet<>();\n         if (recordFileRepository.findByName(fileName).size() > 0) {\n             throw new DuplicateFileException(\"File already exists in the database: \" + fileName);\n         }\n+\n+        batchInsertMetric = Timer.builder(\"hedera.mirror.db.batch.insert\")", "originalCommit": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjUxNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447956515", "bodyText": "Agreed, but removing this change till after PgCopy logic goes in as it deletes a lot of code from this file.", "author": "Nana-EC", "createdAt": "2020-06-30T20:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMzMDAxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMzMDk2MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447330961", "bodyText": "Move tag and register to constructor or @PostConstruct (not onStart())", "author": "steven-sheehy", "createdAt": "2020-06-30T00:14:17Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -193,13 +211,28 @@ private void executeBatches() {\n                             \"claims: {}, topic messages: {}, non-fee transfers: {}\",\n                     transactions, entityIds, transferLists, fileData, contractResult, liveHashes, topicMessages,\n                     nonFeeTransfers);\n+            batchInsertMetric.tag(\"entity\", \"transactions\")\n+                    .register(meterRegistry)\n+                    .record(transactions.timeTakenInMs, TimeUnit.MILLISECONDS);\n         } catch (SQLException e) {\n             log.error(\"Error committing sql insert batch \", e);\n             throw new ParserSQLException(e);\n         }\n         batch_count = 0;\n     }\n \n+    private ExecuteBatchResult executeTransactionInsertBatch(PreparedStatement ps) throws SQLException {\n+        var executeResult = executeBatch(ps);\n+\n+        validStartTimeToDBInsertMetric.tag(\"entity\", \"transactions\")", "originalCommit": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjU2MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447956561", "bodyText": "Agreed, but removing this change till after PgCopy logic goes in as it deletes a lot of code from this file.", "author": "Nana-EC", "createdAt": "2020-06-30T20:23:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMzMDk2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMzOTUxMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447339512", "bodyText": "I don't think this is correct. Instant.now().get(ChronoField.NANO_OF_SECOND) would just return the 9 digit nanosecond part of the current time, not the number of nano seconds from epoch.", "author": "steven-sheehy", "createdAt": "2020-06-30T00:39:37Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -193,13 +211,28 @@ private void executeBatches() {\n                             \"claims: {}, topic messages: {}, non-fee transfers: {}\",\n                     transactions, entityIds, transferLists, fileData, contractResult, liveHashes, topicMessages,\n                     nonFeeTransfers);\n+            batchInsertMetric.tag(\"entity\", \"transactions\")\n+                    .register(meterRegistry)\n+                    .record(transactions.timeTakenInMs, TimeUnit.MILLISECONDS);\n         } catch (SQLException e) {\n             log.error(\"Error committing sql insert batch \", e);\n             throw new ParserSQLException(e);\n         }\n         batch_count = 0;\n     }\n \n+    private ExecuteBatchResult executeTransactionInsertBatch(PreparedStatement ps) throws SQLException {\n+        var executeResult = executeBatch(ps);\n+\n+        validStartTimeToDBInsertMetric.tag(\"entity\", \"transactions\")\n+                .register(meterRegistry)\n+                .record((Instant.now()", "originalCommit": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjYwNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447956606", "bodyText": "Agreed, but removing this change till after PgCopy logic goes in as it deletes a lot of code from this file.", "author": "Nana-EC", "createdAt": "2020-06-30T20:23:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMzOTUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0ODMyMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447348321", "bodyText": "This should not record just once per batch but for every transaction. Should use System.nanoTime() -  transaction.getValidStartNs() (double check this). In which case, this can probably move to RecordFileParser and implemented similar to the other latency metric.", "author": "steven-sheehy", "createdAt": "2020-06-30T01:09:39Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -193,13 +211,28 @@ private void executeBatches() {\n                             \"claims: {}, topic messages: {}, non-fee transfers: {}\",\n                     transactions, entityIds, transferLists, fileData, contractResult, liveHashes, topicMessages,\n                     nonFeeTransfers);\n+            batchInsertMetric.tag(\"entity\", \"transactions\")\n+                    .register(meterRegistry)\n+                    .record(transactions.timeTakenInMs, TimeUnit.MILLISECONDS);\n         } catch (SQLException e) {\n             log.error(\"Error committing sql insert batch \", e);\n             throw new ParserSQLException(e);\n         }\n         batch_count = 0;\n     }\n \n+    private ExecuteBatchResult executeTransactionInsertBatch(PreparedStatement ps) throws SQLException {\n+        var executeResult = executeBatch(ps);\n+\n+        validStartTimeToDBInsertMetric.tag(\"entity\", \"transactions\")", "originalCommit": "aa2afb1213a7467bef331b1bdaef3eea83a03795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjYzNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/848#discussion_r447956636", "bodyText": "Agreed, but removing this change till after PgCopy logic goes in as it deletes a lot of code from this file.", "author": "Nana-EC", "createdAt": "2020-06-30T20:23:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0ODMyMQ=="}], "type": "inlineReview"}, {"oid": "aec547a56f83a88bec75b024249add36368d2407", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aec547a56f83a88bec75b024249add36368d2407", "message": "Addressed feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-06-30T20:18:26Z", "type": "commit"}, {"oid": "12cc9f87f06696b753d1db4e9b4eb6a4225bf258", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/12cc9f87f06696b753d1db4e9b4eb6a4225bf258", "message": " Removed space\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-06-30T20:48:12Z", "type": "commit"}]}