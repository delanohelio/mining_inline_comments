{"pr_number": 477, "pr_title": "Implemented perf module utilizing jmeter to run multi thread GRPC load test", "pr_createdAt": "2020-01-02T21:30:40Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/477", "timeline": [{"oid": "2cb541fc167f8584c5aaea9e39b69ec8486f2333", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2cb541fc167f8584c5aaea9e39b69ec8486f2333", "message": "Implemented perf module utilizing jmeter to run multi thread load tests against grpc for historic and incoming messages\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-02T21:20:06Z", "type": "commit"}, {"oid": "729924a54586c1418dbc4938fbda0233d5ee069c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/729924a54586c1418dbc4938fbda0233d5ee069c", "message": "Pull in data generator updates from master\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-03T17:18:34Z", "type": "commit"}, {"oid": "09adc9c99cb5c60c6bcc00100715d98f20c3857b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/09adc9c99cb5c60c6bcc00100715d98f20c3857b", "message": "Add default test include to run base test only\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-03T17:19:45Z", "type": "commit"}, {"oid": "d1ab81c9da45934011a61390fb38d6b587624a95", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d1ab81c9da45934011a61390fb38d6b587624a95", "message": "Moved db connection props to test plan jmx. Also updated success criteria for clients\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-03T18:50:49Z", "type": "commit"}, {"oid": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "message": "Merge branch 'master' into grpcperfpilot\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-03T20:58:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk0Njk4OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362946988", "bodyText": "Renaming exec jar is now accomplished differently for importer. Please use that approach", "author": "steven-sheehy", "createdAt": "2020-01-03T20:17:15Z", "path": ".circleci/config.yml", "diffHunk": "@@ -75,7 +75,9 @@ jobs:\n             NAME=hedera-mirror-grpc-${VERSION_TAG:-b$CIRCLE_BUILD_NUM}\n             WORKSPACE=/tmp/workspace\n             mkdir -p ${WORKSPACE}/${NAME}\n-            mv hedera-mirror-grpc/target/hedera-mirror-grpc-*.jar ${WORKSPACE}/${NAME}/${NAME}.jar\n+            # Truncate '-exec' from jar name", "originalCommit": "d1ab81c9da45934011a61390fb38d6b587624a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ5Nzk3OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363497979", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-01-06T21:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk0Njk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NDYxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362954618", "bodyText": "test", "author": "steven-sheehy", "createdAt": "2020-01-03T20:42:16Z", "path": "hedera-mirror-grpc/pom.xml", "diffHunk": "@@ -119,6 +119,18 @@\n             <version>${testcontainers.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.jmeter</groupId>\n+            <artifactId>ApacheJMeter_core</artifactId>\n+            <version>5.1.1</version>\n+            <scope>compile</scope>", "originalCommit": "d1ab81c9da45934011a61390fb38d6b587624a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxNzQ5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363517493", "bodyText": "Changed", "author": "Nana-EC", "createdAt": "2020-01-06T22:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NDYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NDYzOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362954638", "bodyText": "test", "author": "steven-sheehy", "createdAt": "2020-01-03T20:42:21Z", "path": "hedera-mirror-grpc/pom.xml", "diffHunk": "@@ -119,6 +119,18 @@\n             <version>${testcontainers.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.jmeter</groupId>\n+            <artifactId>ApacheJMeter_core</artifactId>\n+            <version>5.1.1</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.jmeter</groupId>\n+            <artifactId>ApacheJMeter_java</artifactId>\n+            <version>5.1.1</version>\n+            <scope>compile</scope>", "originalCommit": "d1ab81c9da45934011a61390fb38d6b587624a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxNzQ3Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363517472", "bodyText": "Changed", "author": "Nana-EC", "createdAt": "2020-01-06T22:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NDYzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTMyMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362955320", "bodyText": "This should be removed. If this is just a task that needs to run once, just use the command line flags and document it in the readme. Something like ../mvnw dependency:copy-dependencies -DincludeScope=test ...", "author": "steven-sheehy", "createdAt": "2020-01-03T20:45:04Z", "path": "hedera-mirror-grpc/pom.xml", "diffHunk": "@@ -146,7 +158,53 @@\n             <plugin>\n                 <groupId>org.springframework.boot</groupId>\n                 <artifactId>spring-boot-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>repackage</id>\n+                        <goals>\n+                            <goal>repackage</goal>\n+                        </goals>\n+                        <configuration>\n+                            <classifier>exec</classifier>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <!-- Create test case jar to allow jmeter to utilize samplers -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jar-plugin</artifactId>\n+                <version>3.2.0</version>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>test-jar</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n             </plugin>\n+        <!-- Use to gather dependency files that may need to be copied to jMeter -->", "originalCommit": "d1ab81c9da45934011a61390fb38d6b587624a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxNzM3Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363517373", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-01-06T22:40:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTMyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTU3NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362955575", "bodyText": "insertTopicMessage", "author": "steven-sheehy", "createdAt": "2020-01-03T20:45:56Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -0,0 +1,180 @@\n+package com.hedera.mirror.grpc.jmeter;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import io.r2dbc.postgresql.PostgresqlConnectionConfiguration;\n+import io.r2dbc.postgresql.PostgresqlConnectionFactory;\n+import io.r2dbc.postgresql.api.PostgresqlConnection;\n+import io.r2dbc.postgresql.api.PostgresqlStatement;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.concurrent.CountDownLatch;\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.data.r2dbc.core.DatabaseClient;\n+import org.springframework.data.r2dbc.core.DefaultReactiveDataAccessStrategy;\n+import org.springframework.data.r2dbc.dialect.PostgresDialect;\n+\n+import com.hedera.mirror.grpc.converter.InstantToLongConverter;\n+\n+@Log4j2\n+public class ConnectionHandler {\n+    private final InstantToLongConverter itlc = new InstantToLongConverter();\n+    private final PostgresqlConnection connection;\n+    private final String host;\n+    private final int port;\n+    private final String dbName;\n+    private final String dbUser;\n+    private final String dbPassword;\n+\n+    public ConnectionHandler(String hst, int prt, String dbn, String dbu, String dbp) {\n+        host = hst;\n+        port = prt;\n+        dbName = dbn;\n+        dbUser = dbu;\n+        dbPassword = dbp;\n+\n+        connection = getConnection();\n+    }\n+\n+    public PostgresqlConnectionFactory getConnectionFactory() {\n+        log.trace(\"Initialize connectionFactory\");\n+        PostgresqlConnectionFactory connectionFactory = new PostgresqlConnectionFactory(\n+                PostgresqlConnectionConfiguration.builder()\n+                        .host(host)\n+                        .port(port)\n+                        .username(dbUser)\n+                        .password(dbPassword)\n+                        .database(dbName)\n+                        .build());\n+\n+        return connectionFactory;\n+    }\n+\n+    public DatabaseClient getDatabaseClient() {\n+        log.trace(\"InitializedatabaseClient\");\n+        PostgresqlConnectionFactory connectionFactory = getConnectionFactory();\n+\n+        return DatabaseClient.builder()\n+                .connectionFactory(connectionFactory)\n+                .dataAccessStrategy(new DefaultReactiveDataAccessStrategy(PostgresDialect.INSTANCE))\n+                .build();\n+    }\n+\n+    public PostgresqlConnection getConnection() {\n+        log.info(\"Initialize PostgresqlConnection\");\n+        PostgresqlConnectionFactory connectionFactory = getConnectionFactory();\n+\n+        return connectionFactory.create().block();\n+    }\n+\n+    public void InsertTopicMessage(int newTopicsMessageCount, long tpcnm, Instant instantref, CountDownLatch latch,", "originalCommit": "d1ab81c9da45934011a61390fb38d6b587624a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxNzMzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363517333", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-01-06T22:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTg0OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362955848", "bodyText": "tpcnm? Please spell out variables. instantref should just be instant or something descriptive like startTime.", "author": "steven-sheehy", "createdAt": "2020-01-03T20:47:01Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -0,0 +1,180 @@\n+package com.hedera.mirror.grpc.jmeter;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import io.r2dbc.postgresql.PostgresqlConnectionConfiguration;\n+import io.r2dbc.postgresql.PostgresqlConnectionFactory;\n+import io.r2dbc.postgresql.api.PostgresqlConnection;\n+import io.r2dbc.postgresql.api.PostgresqlStatement;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.concurrent.CountDownLatch;\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.data.r2dbc.core.DatabaseClient;\n+import org.springframework.data.r2dbc.core.DefaultReactiveDataAccessStrategy;\n+import org.springframework.data.r2dbc.dialect.PostgresDialect;\n+\n+import com.hedera.mirror.grpc.converter.InstantToLongConverter;\n+\n+@Log4j2\n+public class ConnectionHandler {\n+    private final InstantToLongConverter itlc = new InstantToLongConverter();\n+    private final PostgresqlConnection connection;\n+    private final String host;\n+    private final int port;\n+    private final String dbName;\n+    private final String dbUser;\n+    private final String dbPassword;\n+\n+    public ConnectionHandler(String hst, int prt, String dbn, String dbu, String dbp) {\n+        host = hst;\n+        port = prt;\n+        dbName = dbn;\n+        dbUser = dbu;\n+        dbPassword = dbp;\n+\n+        connection = getConnection();\n+    }\n+\n+    public PostgresqlConnectionFactory getConnectionFactory() {\n+        log.trace(\"Initialize connectionFactory\");\n+        PostgresqlConnectionFactory connectionFactory = new PostgresqlConnectionFactory(\n+                PostgresqlConnectionConfiguration.builder()\n+                        .host(host)\n+                        .port(port)\n+                        .username(dbUser)\n+                        .password(dbPassword)\n+                        .database(dbName)\n+                        .build());\n+\n+        return connectionFactory;\n+    }\n+\n+    public DatabaseClient getDatabaseClient() {\n+        log.trace(\"InitializedatabaseClient\");\n+        PostgresqlConnectionFactory connectionFactory = getConnectionFactory();\n+\n+        return DatabaseClient.builder()\n+                .connectionFactory(connectionFactory)\n+                .dataAccessStrategy(new DefaultReactiveDataAccessStrategy(PostgresDialect.INSTANCE))\n+                .build();\n+    }\n+\n+    public PostgresqlConnection getConnection() {\n+        log.info(\"Initialize PostgresqlConnection\");\n+        PostgresqlConnectionFactory connectionFactory = getConnectionFactory();\n+\n+        return connectionFactory.create().block();\n+    }\n+\n+    public void InsertTopicMessage(int newTopicsMessageCount, long tpcnm, Instant instantref, CountDownLatch latch,", "originalCommit": "d1ab81c9da45934011a61390fb38d6b587624a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNzE0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364507146", "bodyText": "Fixed", "author": "Nana-EC", "createdAt": "2020-01-09T00:16:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTg0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTkzOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362955939", "bodyText": "Space", "author": "steven-sheehy", "createdAt": "2020-01-03T20:47:22Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -0,0 +1,180 @@\n+package com.hedera.mirror.grpc.jmeter;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import io.r2dbc.postgresql.PostgresqlConnectionConfiguration;\n+import io.r2dbc.postgresql.PostgresqlConnectionFactory;\n+import io.r2dbc.postgresql.api.PostgresqlConnection;\n+import io.r2dbc.postgresql.api.PostgresqlStatement;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.concurrent.CountDownLatch;\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.data.r2dbc.core.DatabaseClient;\n+import org.springframework.data.r2dbc.core.DefaultReactiveDataAccessStrategy;\n+import org.springframework.data.r2dbc.dialect.PostgresDialect;\n+\n+import com.hedera.mirror.grpc.converter.InstantToLongConverter;\n+\n+@Log4j2\n+public class ConnectionHandler {\n+    private final InstantToLongConverter itlc = new InstantToLongConverter();\n+    private final PostgresqlConnection connection;\n+    private final String host;\n+    private final int port;\n+    private final String dbName;\n+    private final String dbUser;\n+    private final String dbPassword;\n+\n+    public ConnectionHandler(String hst, int prt, String dbn, String dbu, String dbp) {\n+        host = hst;\n+        port = prt;\n+        dbName = dbn;\n+        dbUser = dbu;\n+        dbPassword = dbp;\n+\n+        connection = getConnection();\n+    }\n+\n+    public PostgresqlConnectionFactory getConnectionFactory() {\n+        log.trace(\"Initialize connectionFactory\");\n+        PostgresqlConnectionFactory connectionFactory = new PostgresqlConnectionFactory(\n+                PostgresqlConnectionConfiguration.builder()\n+                        .host(host)\n+                        .port(port)\n+                        .username(dbUser)\n+                        .password(dbPassword)\n+                        .database(dbName)\n+                        .build());\n+\n+        return connectionFactory;\n+    }\n+\n+    public DatabaseClient getDatabaseClient() {\n+        log.trace(\"InitializedatabaseClient\");", "originalCommit": "d1ab81c9da45934011a61390fb38d6b587624a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNzE3Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364507172", "bodyText": "Changed", "author": "Nana-EC", "createdAt": "2020-01-09T00:16:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NTkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MjIzOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362962238", "bodyText": "Remove", "author": "steven-sheehy", "createdAt": "2020-01-03T21:10:03Z", "path": "hedera-mirror-perf/pom.xml", "diffHunk": "@@ -0,0 +1,150 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>hedera-mirror-node</artifactId>\n+        <groupId>com.hedera</groupId>\n+        <version>0.5.0</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>hedera-mirror-perf</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hedera</groupId>\n+            <artifactId>hedera-mirror-grpc</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <extensions>\n+            <extension>\n+                <groupId>kr.motd.maven</groupId>\n+                <artifactId>os-maven-plugin</artifactId>\n+                <version>1.6.2</version>\n+            </extension>\n+        </extensions>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-install-plugin</artifactId>\n+                <configuration>\n+                    <groupId>com.hedera</groupId>\n+                    <artifactId>hedera-mirror-grpc-sampler</artifactId>\n+                    <version>${project.version}</version>\n+                    <packaging>jar</packaging>\n+                    <file>${project.basedir}/../hedera-mirror-grpc/target/hedera-mirror-grpc-${project.version}-tests.jar\n+                    </file>\n+                    <generatePom>true</generatePom>\n+                </configuration>\n+                <executions>\n+                    <execution>\n+                        <id>install-jar-lib</id>\n+                        <goals>\n+                            <goal>install-file</goal>\n+                        </goals>\n+                        <phase>validate</phase>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>com.google.cloud.tools</groupId>\n+                <artifactId>jib-maven-plugin</artifactId>", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3MzMwMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364473301", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-01-08T22:23:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MjIzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MjI5Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362962292", "bodyText": "Is jmeter plugin really using this?", "author": "steven-sheehy", "createdAt": "2020-01-03T21:10:18Z", "path": "hedera-mirror-perf/pom.xml", "diffHunk": "@@ -0,0 +1,150 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>hedera-mirror-node</artifactId>\n+        <groupId>com.hedera</groupId>\n+        <version>0.5.0</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>hedera-mirror-perf</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hedera</groupId>\n+            <artifactId>hedera-mirror-grpc</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <extensions>\n+            <extension>\n+                <groupId>kr.motd.maven</groupId>\n+                <artifactId>os-maven-plugin</artifactId>", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3MzIzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364473233", "bodyText": "Nope. Will remove.", "author": "Nana-EC", "createdAt": "2020-01-08T22:23:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MjI5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MzE5Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362963197", "bodyText": "Remove remainder of file contents", "author": "steven-sheehy", "createdAt": "2020-01-03T21:13:39Z", "path": "hedera-mirror-perf/README.md", "diffHunk": "@@ -0,0 +1,47 @@\n+# Load Testing of Hedera Mirror Node\n+\n+This code runs performance load tests against Mirror Node Modules.\n+\n+## Overview\n+\n+## jMeter\n+\n+#### gRPC Load Testing:\n+\n+Java based ...\n+\n+-   Build hedera-miror-grpc module\n+-   Copy hedera-mirror-grpc-hcs-0.1.0-rc1-tests.jar to jmeter /lib/ext folder. In my case i installed jmeter using brew and it could be found under /usr/local/Cellar/jmeter/5.2.1/libexec/lib/ext\n+-   Copy the following external dependencies\n+-           whatalokation-grpc-client.jar, r2dbc-spi-0.8.0.RELEASE.jar, spring-data-r2dbc-1.0.0.RELEASE.jar, spring-data-relational-1.1.1.RELEASE.jar\n+-   Open jMeter with 'open /usr/local/bin/jmeter' from terminal\n+-   Add a Thread Group and then a Java Request in jMeter. Following this select the test jar loaded and specify desired test params. Logic follow - https://jmeter.apache.org/usermanual/component_reference.html#Java_Request\n+-   Save test and copy resulting .jmx file to hedera-mirror-perf/src/test/jmeter/ location\n+-   Startup database and grpc modules, either thorugh docker-compose or through spring-boot\n+-   Run 'mvn -U clean verify' under hedera-mirror-perf/ module to kickoff the verify stage in the perf module where the performance tests are run\n+\n+#### gRPC Load Testing Using Gatling:", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNjQxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364506418", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-01-09T00:13:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MzE5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2NjAwNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362966007", "bodyText": "Convert this to actual sequence of commands:\n$ ./mvnw clean package -DskipTests\n$ cp hedera-mirror-grpc/target/...\nOr separate commands with comments between", "author": "steven-sheehy", "createdAt": "2020-01-03T21:24:16Z", "path": "hedera-mirror-perf/README.md", "diffHunk": "@@ -0,0 +1,47 @@\n+# Load Testing of Hedera Mirror Node\n+\n+This code runs performance load tests against Mirror Node Modules.\n+\n+## Overview\n+\n+## jMeter\n+\n+#### gRPC Load Testing:\n+\n+Java based ...\n+\n+-   Build hedera-miror-grpc module", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwNzIzOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364507239", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-01-09T00:16:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2NjAwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2NjA4MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362966080", "bodyText": "Performance Testing", "author": "steven-sheehy", "createdAt": "2020-01-03T21:24:35Z", "path": "hedera-mirror-perf/README.md", "diffHunk": "@@ -0,0 +1,47 @@\n+# Load Testing of Hedera Mirror Node", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3MjY5OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364472699", "bodyText": "Changed", "author": "Nana-EC", "createdAt": "2020-01-08T22:21:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2NjA4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NzMwMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362987303", "bodyText": "These are not maintainable. There's already some spring versions in here that are 5.2.2 and other 5.2.0. At a minimum, use the properties provided by Spring Boot to keep versions in sync. Second, there should be a way to not have to declare transitive dependencies.", "author": "steven-sheehy", "createdAt": "2020-01-03T22:53:08Z", "path": "hedera-mirror-perf/pom.xml", "diffHunk": "@@ -0,0 +1,150 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>hedera-mirror-node</artifactId>\n+        <groupId>com.hedera</groupId>\n+        <version>0.5.0</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>hedera-mirror-perf</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hedera</groupId>\n+            <artifactId>hedera-mirror-grpc</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <extensions>\n+            <extension>\n+                <groupId>kr.motd.maven</groupId>\n+                <artifactId>os-maven-plugin</artifactId>\n+                <version>1.6.2</version>\n+            </extension>\n+        </extensions>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-install-plugin</artifactId>\n+                <configuration>\n+                    <groupId>com.hedera</groupId>\n+                    <artifactId>hedera-mirror-grpc-sampler</artifactId>\n+                    <version>${project.version}</version>\n+                    <packaging>jar</packaging>\n+                    <file>${project.basedir}/../hedera-mirror-grpc/target/hedera-mirror-grpc-${project.version}-tests.jar\n+                    </file>\n+                    <generatePom>true</generatePom>\n+                </configuration>\n+                <executions>\n+                    <execution>\n+                        <id>install-jar-lib</id>\n+                        <goals>\n+                            <goal>install-file</goal>\n+                        </goals>\n+                        <phase>validate</phase>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>com.google.cloud.tools</groupId>\n+                <artifactId>jib-maven-plugin</artifactId>\n+            </plugin>\n+            <plugin>\n+                <groupId>com.lazerycode.jmeter</groupId>\n+                <artifactId>jmeter-maven-plugin</artifactId>\n+                <version>3.0.0</version>\n+                <executions>\n+                    <!-- Generate JMeter configuration -->\n+                    <execution>\n+                        <id>configuration</id>\n+                        <goals>\n+                            <goal>configure</goal>\n+                        </goals>\n+                    </execution>\n+                    <!-- Run JMeter tests -->\n+                    <execution>\n+                        <id>jmeter-tests</id>\n+                        <phase>verify</phase>\n+                        <goals>\n+                            <goal>jmeter</goal>\n+                        </goals>\n+                    </execution>\n+                    <!-- Fail build on errors in test -->\n+                    <execution>\n+                        <id>jmeter-check-results</id>\n+                        <goals>\n+                            <goal>results</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <generateReports>true</generateReports>\n+                    <errorRateThresholdInPercent>25</errorRateThresholdInPercent>\n+                    <jmeterExtensions>\n+                        <artifact>kg.apc:jmeter-plugins-json:jar:2.6</artifact>\n+                        <artifact>kg.apc:jmeter-plugins-manager:0.19</artifact>\n+                        <artifact>kg.apc:jmeter-plugins-extras-libs:1.4.0</artifact>\n+                        <artifact>kg.apc:jmeter-plugins-casutg:2.6</artifact>\n+                        <artifact>io.opencensus:opencensus-api:0.24.0</artifact>\n+                        <artifact>io.opencensus:opencensus-contrib-grpc-metrics:0.24.0</artifact>\n+                        <artifact>io.grpc:grpc-core:${grpc.version}</artifact>\n+                        <artifact>io.grpc:grpc-api:${grpc.version}</artifact>\n+                        <artifact>io.grpc:grpc-netty:${grpc.version}</artifact>\n+                        <artifact>io.grpc:grpc-protobuf:${grpc.version}</artifact>\n+                        <artifact>io.grpc:grpc-stub:${grpc.version}</artifact>\n+                        <artifact>io.grpc:grpc-protobuf-lite:${grpc.version}</artifact>\n+                        <artifact>io.grpc:grpc-context:${grpc.version}</artifact>\n+                        <artifact>io.netty:netty-all:4.1.25.Final</artifact>\n+                        <artifact>com.google.guava:guava:28.1-jre</artifact>\n+                        <artifact>com.google.protobuf:protobuf-java:3.11.1</artifact>\n+                        <artifact>org.apache.jmeter:ApacheJMeter_core:5.2.1</artifact>\n+                        <artifact>io.perfmark:perfmark-api:0.20.1</artifact>\n+                        <artifact>org.reactivestreams:reactive-streams:1.0.3</artifact>\n+                        <artifact>org.projectlombok:lombok:1.18.10</artifact>\n+                        <artifact>io.r2dbc:r2dbc-spi:0.8.0.RELEASE</artifact>\n+                        <artifact>io.r2dbc:r2dbc-postgresql:0.8.0.RELEASE</artifact>\n+                        <artifact>org.springframework.data:spring-data-r2dbc:1.0.0.RELEASE</artifact>\n+                        <artifact>org.springframework.data:spring-data-relational:1.1.3.RELEASE</artifact>\n+                        <artifact>org.springframework.data:spring-data-commons:2.2.3.RELEASE</artifact>\n+                        <artifact>org.springframework:spring-core:5.2.2.RELEASE</artifact>", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2NjIwMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364466203", "bodyText": "Agreed, will version the spring ones as I did with the GRPC ones.\nI'll look to see if I can remove a lot of these and look more into something that gets all the transitive dependencies. It was a costing process to figure them all out so I'd prefer a ticket to come back to this later.", "author": "Nana-EC", "createdAt": "2020-01-08T22:04:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NzMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NzkwNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362987904", "bodyText": "I would prefer hedera-mirror-test. We could maybe consolidate datagenerator to it in the future or maybe put non-performance cross-module tests in here too later.", "author": "steven-sheehy", "createdAt": "2020-01-03T22:56:08Z", "path": "pom.xml", "diffHunk": "@@ -37,6 +37,7 @@\n         <module>hedera-mirror-importer</module>\n         <module>hedera-mirror-protobuf</module>\n         <module>hedera-mirror-rest</module>\n+        <module>hedera-mirror-perf</module>", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2NjUyNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364466525", "bodyText": "Test seems too general to me. You'd name a module that if it was responsible for say unit or component testing other modules. In this case it's specifically for performance scenarios i.e. large data loads, stress tests. Performance seems like the right umbrella.\nHowever, I do agree we could consolidate data generator with this since again it touches on performance testing", "author": "Nana-EC", "createdAt": "2020-01-08T22:05:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NzkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3NjI2MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364476261", "bodyText": "The name suites the current perf only tests, but what about if we add system tests here?", "author": "steven-sheehy", "createdAt": "2020-01-08T22:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NzkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwMjIxNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364502214", "bodyText": "Fair enough, will rename to hedera-mirror-test", "author": "Nana-EC", "createdAt": "2020-01-08T23:57:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4NzkwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODA1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362988058", "bodyText": "This shouldn't be needed. Just declare a dependency on hedera-mirror-grpc with a classifier of tests", "author": "steven-sheehy", "createdAt": "2020-01-03T22:56:56Z", "path": "hedera-mirror-perf/pom.xml", "diffHunk": "@@ -0,0 +1,150 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>hedera-mirror-node</artifactId>\n+        <groupId>com.hedera</groupId>\n+        <version>0.5.0</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>hedera-mirror-perf</artifactId>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hedera</groupId>\n+            <artifactId>hedera-mirror-grpc</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <extensions>\n+            <extension>\n+                <groupId>kr.motd.maven</groupId>\n+                <artifactId>os-maven-plugin</artifactId>\n+                <version>1.6.2</version>\n+            </extension>\n+        </extensions>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-install-plugin</artifactId>", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3MTQ2NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r364471464", "bodyText": "Agreed however, the artifact under jmeterExtensions doesn't seem to be able to pick that up. Will come back to this along with the artifact props below", "author": "Nana-EC", "createdAt": "2020-01-08T22:18:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODA1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODE2NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362988165", "bodyText": "These sections should be simplified to 2 sections: test creation and test execution. I don't think it needs to be GRPC specific as we'll eventually run all modules with a single command", "author": "steven-sheehy", "createdAt": "2020-01-03T22:57:27Z", "path": "hedera-mirror-perf/README.md", "diffHunk": "@@ -0,0 +1,47 @@\n+# Load Testing of Hedera Mirror Node\n+\n+This code runs performance load tests against Mirror Node Modules.\n+\n+## Overview", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUxNzMwOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363517308", "bodyText": "Updated.", "author": "Nana-EC", "createdAt": "2020-01-06T22:39:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODE2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODQ5Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362988496", "bodyText": "Spell out variables. Use this.threadNum = threadNum; for assignments", "author": "steven-sheehy", "createdAt": "2020-01-03T22:59:07Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/TopicMessageGeneratorSampler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.hedera.mirror.grpc.jmeter.sampler;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.concurrent.CountDownLatch;\n+import lombok.extern.log4j.Log4j2;\n+\n+import com.hedera.mirror.grpc.jmeter.ConnectionHandler;\n+\n+@Log4j2\n+public class TopicMessageGeneratorSampler {\n+    private final ConnectionHandler connectionHandler;\n+    private final int threadNum;\n+\n+    public TopicMessageGeneratorSampler(ConnectionHandler connectionHndler, int thrdNum) {", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ2NDU5Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363464596", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-01-06T20:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODQ5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODY0Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362988647", "bodyText": "What's THRD? Thread name/num should already be printed by log4j2.", "author": "steven-sheehy", "createdAt": "2020-01-03T22:59:44Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/TopicMessageGeneratorSampler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.hedera.mirror.grpc.jmeter.sampler;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.concurrent.CountDownLatch;\n+import lombok.extern.log4j.Log4j2;\n+\n+import com.hedera.mirror.grpc.jmeter.ConnectionHandler;\n+\n+@Log4j2\n+public class TopicMessageGeneratorSampler {\n+    private final ConnectionHandler connectionHandler;\n+    private final int threadNum;\n+\n+    public TopicMessageGeneratorSampler(ConnectionHandler connectionHndler, int thrdNum) {\n+        connectionHandler = connectionHndler;\n+        threadNum = thrdNum;\n+    }\n+\n+    public String populateTopicMessages(long topicNum, int historicalMessageCount, int futureMessageCount,\n+                                        long newTopicsMessageDelay, long delSeqFrom) throws InterruptedException {\n+        log.info(\"THRD {} : Running TopicMessageGenerator Sampler populateTopicMessages topicNum : {}, \" +", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MDA0Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363180043", "bodyText": "Just a shorted version of \"Thread\". jMeter has it's own logic to create logs, the Log4j2 pattern isn't honoured. You have to programmatically get the thread name if you want it.\nThis helps differentiate the log details amongst thread in the test results .log file.", "author": "Nana-EC", "createdAt": "2020-01-06T07:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODY0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ2NDcyMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363464721", "bodyText": "Changed to [thread-x]", "author": "Nana-EC", "createdAt": "2020-01-06T20:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4ODY0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4OTA0Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362989047", "bodyText": "Push if statement into ConnectionHandler. Then this method can be deleted and logic is encapsulated.", "author": "steven-sheehy", "createdAt": "2020-01-03T23:01:42Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/TopicMessageGeneratorSampler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.hedera.mirror.grpc.jmeter.sampler;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.concurrent.CountDownLatch;\n+import lombok.extern.log4j.Log4j2;\n+\n+import com.hedera.mirror.grpc.jmeter.ConnectionHandler;\n+\n+@Log4j2\n+public class TopicMessageGeneratorSampler {\n+    private final ConnectionHandler connectionHandler;\n+    private final int threadNum;\n+\n+    public TopicMessageGeneratorSampler(ConnectionHandler connectionHndler, int thrdNum) {\n+        connectionHandler = connectionHndler;\n+        threadNum = thrdNum;\n+    }\n+\n+    public String populateTopicMessages(long topicNum, int historicalMessageCount, int futureMessageCount,\n+                                        long newTopicsMessageDelay, long delSeqFrom) throws InterruptedException {\n+        log.info(\"THRD {} : Running TopicMessageGenerator Sampler populateTopicMessages topicNum : {}, \" +\n+                        \"historicalMessageCount :\" +\n+                        \" {}, futureMessageCount : {}, \" +\n+                        \"newTopicsMessageDelay : {}, delSeqFrom : {}\",\n+                threadNum, topicNum, historicalMessageCount, futureMessageCount, newTopicsMessageDelay,\n+                delSeqFrom);\n+\n+        CountDownLatch historicMessagesLatch = new CountDownLatch(historicalMessageCount);\n+        CountDownLatch incomingMessagesLatch = new CountDownLatch(futureMessageCount);\n+\n+        topicNum = topicNum == -1 ? connectionHandler.getNextAvailableTopicID() : topicNum;\n+\n+        populateHistoricalMessages(topicNum, historicalMessageCount, historicMessagesLatch);\n+\n+        generateIncomingMessages(topicNum, futureMessageCount, incomingMessagesLatch, newTopicsMessageDelay);\n+\n+        deleteMessagesFromTopic(topicNum, delSeqFrom);\n+\n+        return \"Success\";\n+    }\n+\n+    private void populateHistoricalMessages(long topicNum, int historicalMessageCount,\n+                                            CountDownLatch historicMessagesLatch) {\n+        if (historicalMessageCount > 0) {\n+            Instant pastInstant = Instant.now().minus(7, ChronoUnit.DAYS);\n+            connectionHandler\n+                    .InsertTopicMessage(historicalMessageCount, topicNum, pastInstant, historicMessagesLatch, -1);\n+        }\n+    }\n+\n+    private void generateIncomingMessages(long topicNum, int futureMessageCount, CountDownLatch incomingMessagesLatch\n+            , long delay) throws InterruptedException {\n+        if (futureMessageCount > 0) {\n+            Instant incomingInstant;\n+            if (delay == 0) {\n+                incomingInstant = Instant.now();\n+                connectionHandler\n+                        .InsertTopicMessage(futureMessageCount, topicNum, incomingInstant, incomingMessagesLatch, -1);\n+            } else {\n+                // prevent sleep of more than 10 secs\n+                if (delay > 10) {\n+                    log.warn(\"Capping delay to 10 seconds. We don't want long living threads.\");\n+                    delay = 10;\n+                }\n+\n+                for (int i = 0; i < futureMessageCount; i++) {\n+                    incomingInstant = Instant.now();\n+                    connectionHandler\n+                            .InsertTopicMessage(1, topicNum, incomingInstant, incomingMessagesLatch, -1);\n+                    Thread.sleep(delay * 1000);\n+                }\n+            }\n+        }\n+    }\n+\n+    private void deleteMessagesFromTopic(long topicId, long seqNumFrom) {\n+        if (topicId >= 0 && seqNumFrom >= 0) {", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ2NDc4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363464784", "bodyText": "Done", "author": "Nana-EC", "createdAt": "2020-01-06T20:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4OTA0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4OTUzMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r362989530", "bodyText": "Is it not possible to use domain and repositories here because of JMeter?", "author": "steven-sheehy", "createdAt": "2020-01-03T23:04:19Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/ConnectionHandler.java", "diffHunk": "@@ -0,0 +1,180 @@\n+package com.hedera.mirror.grpc.jmeter;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import io.r2dbc.postgresql.PostgresqlConnectionConfiguration;\n+import io.r2dbc.postgresql.PostgresqlConnectionFactory;\n+import io.r2dbc.postgresql.api.PostgresqlConnection;\n+import io.r2dbc.postgresql.api.PostgresqlStatement;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n+import java.util.concurrent.CountDownLatch;\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.data.r2dbc.core.DatabaseClient;\n+import org.springframework.data.r2dbc.core.DefaultReactiveDataAccessStrategy;\n+import org.springframework.data.r2dbc.dialect.PostgresDialect;\n+\n+import com.hedera.mirror.grpc.converter.InstantToLongConverter;\n+\n+@Log4j2\n+public class ConnectionHandler {\n+    private final InstantToLongConverter itlc = new InstantToLongConverter();\n+    private final PostgresqlConnection connection;\n+    private final String host;\n+    private final int port;\n+    private final String dbName;\n+    private final String dbUser;\n+    private final String dbPassword;\n+\n+    public ConnectionHandler(String hst, int prt, String dbn, String dbu, String dbp) {\n+        host = hst;\n+        port = prt;\n+        dbName = dbn;\n+        dbUser = dbu;\n+        dbPassword = dbp;\n+\n+        connection = getConnection();\n+    }\n+\n+    public PostgresqlConnectionFactory getConnectionFactory() {\n+        log.trace(\"Initialize connectionFactory\");\n+        PostgresqlConnectionFactory connectionFactory = new PostgresqlConnectionFactory(\n+                PostgresqlConnectionConfiguration.builder()\n+                        .host(host)\n+                        .port(port)\n+                        .username(dbUser)\n+                        .password(dbPassword)\n+                        .database(dbName)\n+                        .build());\n+\n+        return connectionFactory;\n+    }\n+\n+    public DatabaseClient getDatabaseClient() {\n+        log.trace(\"InitializedatabaseClient\");\n+        PostgresqlConnectionFactory connectionFactory = getConnectionFactory();\n+\n+        return DatabaseClient.builder()\n+                .connectionFactory(connectionFactory)\n+                .dataAccessStrategy(new DefaultReactiveDataAccessStrategy(PostgresDialect.INSTANCE))\n+                .build();\n+    }\n+\n+    public PostgresqlConnection getConnection() {\n+        log.info(\"Initialize PostgresqlConnection\");\n+        PostgresqlConnectionFactory connectionFactory = getConnectionFactory();\n+\n+        return connectionFactory.create().block();\n+    }\n+\n+    public void InsertTopicMessage(int newTopicsMessageCount, long tpcnm, Instant instantref, CountDownLatch latch,\n+                                   long seqStart) {\n+\n+        if (newTopicsMessageCount == 0) {\n+            // no messages to create, abort and db logic\n+            return;\n+        }\n+\n+        // insert some new messages\n+        long nextSequenceNum = seqStart == -1 ? getNextAvailableSequenceNumber(tpcnm) : seqStart;\n+        for (int i = 0; i < newTopicsMessageCount; i++) {\n+            Instant temp = instantref.plus(i, ChronoUnit.SECONDS);\n+            Long instalong = itlc.convert(temp);\n+            long sequenceNum = nextSequenceNum + i;\n+            log.info(\"Emitting new topic message for topicNum {}, Time: {}, count: {}, seq : {}\", tpcnm,\n+                    instalong, i, sequenceNum);\n+\n+            String topicMessageInsertSql = \"insert into topic_message\"\n+                    + \" (consensus_timestamp, realm_num, topic_num, message, running_hash, sequence_number)\"", "originalCommit": "5a5795e5aaec22cc36a9bf16fd1d7a6d04c986f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE3NTU5NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/477#discussion_r363175594", "bodyText": "Yes, per my understanding that's correct. The Jmeter application is essentially running the entire flow. Everything else serves as dependencies for mostly class information. Spring features don't seem to work.", "author": "Nana-EC", "createdAt": "2020-01-06T06:47:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4OTUzMA=="}], "type": "inlineReview"}, {"oid": "f91863420a74c9ebc4b4df571c0b3ce5b011766e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f91863420a74c9ebc4b4df571c0b3ce5b011766e", "message": "Updated generator to emit topic messages on create and update. Also updated jmeter TopicMessageGenerator emission logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-05T07:38:16Z", "type": "commit"}, {"oid": "4acbc4be6792a935319d4fe0cc3c8a390f176116", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4acbc4be6792a935319d4fe0cc3c8a390f176116", "message": "Added messagesLatchWaitSeconds option to tests and addressed some feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-06T20:16:16Z", "type": "commit"}, {"oid": "a447dbbc72923b9a51ccfc53526a4249bc95361f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a447dbbc72923b9a51ccfc53526a4249bc95361f", "message": "Addressed feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-06T22:39:30Z", "type": "commit"}, {"oid": "8fb993f7ed30674744fe649bcead684b383394d2", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8fb993f7ed30674744fe649bcead684b383394d2", "message": "Added timer for historica and incomming messages. Also updated insert logic to use improved consensus time\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-07T21:51:16Z", "type": "commit"}, {"oid": "30eb16ad672003d73d1b4c79e473cccfaaa3d69d", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/30eb16ad672003d73d1b4c79e473cccfaaa3d69d", "message": "Addressed some feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-08T22:21:41Z", "type": "commit"}, {"oid": "261123a67d223b41e8cbb4061dc28da3f992bdc6", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/261123a67d223b41e8cbb4061dc28da3f992bdc6", "message": "Renamed module to test and addressed other feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-09T00:16:25Z", "type": "commit"}, {"oid": "6df691cab0db17392d271c948418f05e7a9f83ad", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6df691cab0db17392d271c948418f05e7a9f83ad", "message": "Merge branch 'master' into grpcperfpilot\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-09T00:20:15Z", "type": "commit"}, {"oid": "f1540ab8faedf8e94b4ee13585d5b5c9c07e90f8", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f1540ab8faedf8e94b4ee13585d5b5c9c07e90f8", "message": "Fixed pom reference and added some method comments\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-09T00:45:07Z", "type": "commit"}, {"oid": "31cce435141a796ecd971f36b32bda84c2323e91", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/31cce435141a796ecd971f36b32bda84c2323e91", "message": "Added topicMessageEmitCycles prop to prevent over population of incoming messages. Ensured tests clean up\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-09T03:07:44Z", "type": "commit"}, {"oid": "c644489ab1720788d80f8f9c6105c44f620df12e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c644489ab1720788d80f8f9c6105c44f620df12e", "message": "Simplify jmeterExtensions and reduce logging verbosity\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-01-09T19:58:25Z", "type": "commit"}, {"oid": "1ac6d22336224a1258b82f8345f23539ae42333b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1ac6d22336224a1258b82f8345f23539ae42333b", "message": "Fix jmeterExtensions and some code cleanup\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-01-09T23:03:44Z", "type": "commit"}, {"oid": "21ee7d24e06124bcdc3797d32f721dc73312019b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/21ee7d24e06124bcdc3797d32f721dc73312019b", "message": "Cleaned up JMX files and  improved timing for shutdown on failure\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-10T19:49:49Z", "type": "commit"}, {"oid": "8ac463ddb87ae9b2c5e26facd1cdca9d3ae17e22", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8ac463ddb87ae9b2c5e26facd1cdca9d3ae17e22", "message": "Made message consensustime more deterministic to distinguish past and future messages from grpc\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-10T21:32:54Z", "type": "commit"}, {"oid": "beba64ab8d868e33569cfd3414460773946b9e7a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/beba64ab8d868e33569cfd3414460773946b9e7a", "message": "Switch to use AtomicInteger on message count. Accounted for server time disparity in future message differentiation\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-10T22:12:58Z", "type": "commit"}, {"oid": "c363790b01fc85aa1fbe1fae89ff24a5a26a2340", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c363790b01fc85aa1fbe1fae89ff24a5a26a2340", "message": "Bumped historic messages start time to not start at exactly epoch\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-11T01:34:40Z", "type": "commit"}, {"oid": "1ac34b0dfd0aee4650097284d5e68243f5544406", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1ac34b0dfd0aee4650097284d5e68243f5544406", "message": "Updated readme and tweaked 2 test plans\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-11T05:48:21Z", "type": "commit"}, {"oid": "f4a6ff2b84516178704df866c8a8fcf9add3277b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f4a6ff2b84516178704df866c8a8fcf9add3277b", "message": "Add subscriber id to grpc requests\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-01-13T20:29:57Z", "type": "commit"}, {"oid": "6ab16fa55d006c1c21fc44d360b4bd2f39105740", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6ab16fa55d006c1c21fc44d360b4bd2f39105740", "message": "Moved test paramers to POJO's\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-13T21:55:30Z", "type": "commit"}, {"oid": "3b515b992a117ff4da8aa10556ce4e2741fb04e4", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3b515b992a117ff4da8aa10556ce4e2741fb04e4", "message": "Merge w master 1/13/20\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-13T22:23:04Z", "type": "commit"}, {"oid": "0f3de38f805619e8f4c76177d8b7dfbfe1f89f80", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0f3de38f805619e8f4c76177d8b7dfbfe1f89f80", "message": "Add logic to clean up given topic id before test starts\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-13T22:57:13Z", "type": "commit"}, {"oid": "a0ea8d42bd875e08c23601f92de9683e95cb9055", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a0ea8d42bd875e08c23601f92de9683e95cb9055", "message": "Improved test run time by employing pre and post thread group\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-14T00:13:16Z", "type": "commit"}, {"oid": "63bf85a0b8e43c1e318e78670309786fc6cbb54b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/63bf85a0b8e43c1e318e78670309786fc6cbb54b", "message": "Re-added TopicMessageGeneratorClient default params. Also added request duration assertions and logic to specify test properties through command line\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-14T22:08:07Z", "type": "commit"}, {"oid": "b8ed22df29f6751396b47adb0d46cbad0f96c8fd", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b8ed22df29f6751396b47adb0d46cbad0f96c8fd", "message": "Sampler cleanup\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-01-14T22:51:40Z", "type": "commit"}, {"oid": "9df81698903b0ec92bb723d8fb4568430c170b8e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/9df81698903b0ec92bb723d8fb4568430c170b8e", "message": "Merge branch 'grpcperfpilot' of https://github.com/hashgraph/hedera-mirror-node into grpcperfpilot", "committedDate": "2020-01-14T22:52:36Z", "type": "commit"}, {"oid": "cfb62082b24ab8178b6d415965b9ebe159f64739", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/cfb62082b24ab8178b6d415965b9ebe159f64739", "message": "Fix message rate\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-01-14T23:02:27Z", "type": "commit"}, {"oid": "6e021b4877ff7cf5d00c6b73cc0854b68543e6e6", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6e021b4877ff7cf5d00c6b73cc0854b68543e6e6", "message": "Merge branch 'master' into grpcperfpilot w rc1 removal\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-14T23:16:12Z", "type": "commit"}, {"oid": "4d058fddd7e3162a1f1c33856f02bcfd35095335", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/4d058fddd7e3162a1f1c33856f02bcfd35095335", "message": "Remove rc1 from test pom\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-01-14T23:21:04Z", "type": "commit"}]}