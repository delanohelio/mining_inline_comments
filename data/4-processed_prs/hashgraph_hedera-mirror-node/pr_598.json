{"pr_number": 598, "pr_title": "Updated integrationDbOps.js with more detailed setup logic", "pr_createdAt": "2020-03-13T17:12:20Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/598", "timeline": [{"oid": "ade03d120784942fe9a6d997f958355b2b6a753a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ade03d120784942fe9a6d997f958355b2b6a753a", "message": "Updated integrationDbOps.js with more detailed setup logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-13T17:06:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzkwMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392367903", "bodyText": "earlier, many tests were setting up record file due to foreign key restriction in t_transactions.fk_rec_file_id. Now the restriction is gone.\nIf that's the only reason for it to be here, consider removing it in future.", "author": "apeksharma", "createdAt": "2020-03-13T17:23:34Z", "path": "hedera-mirror-rest/__tests__/integration.test.js", "diffHunk": "@@ -326,8 +326,19 @@ fs.readdirSync(specPath).forEach(function(file) {\n   let specText = fs.readFileSync(p, 'utf8');\n   var spec = JSON.parse(specText);\n   test(`DB integration test - ${file} - ${spec.url}`, async () => {\n+    // await specSetupSteps(spec);\n     let response = await request(server).get(spec.url);\n     expect(response.status).toEqual(spec.responseStatus);\n     expect(JSON.parse(response.text)).toEqual(spec.responseJson);\n   });\n });\n+\n+const specSetupSteps = async function(spec) {\n+  let recordFile = spec.fileName;", "originalCommit": "ade03d120784942fe9a6d997f958355b2b6a753a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4NjkyNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392386924", "bodyText": "Gotcha will look into this.", "author": "Nana-EC", "createdAt": "2020-03-13T18:00:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3ODYzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392378633", "bodyText": "if there's an existing test case where we add duplicate accounts for testing some corner case, this is okay.\nIf we don't have a reason to accept duplicates here, we should fail explicitly.\nokay in followup.", "author": "apeksharma", "createdAt": "2020-03-13T17:43:39Z", "path": "hedera-mirror-rest/__tests__/integrationDbOps.js", "diffHunk": "@@ -189,11 +268,29 @@ const toAccount = function(str) {\n };\n \n const addAccount = async function(account) {\n+  account = Object.assign({entity_shard: 0, entity_realm: 0, exp_time_ns: null}, account);\n+\n+  let e = accountEntityIds[account.entity_num];", "originalCommit": "ade03d120784942fe9a6d997f958355b2b6a753a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0NTk2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/598#discussion_r392445969", "bodyText": "Will look into it", "author": "Nana-EC", "createdAt": "2020-03-13T20:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3ODYzMw=="}], "type": "inlineReview"}]}