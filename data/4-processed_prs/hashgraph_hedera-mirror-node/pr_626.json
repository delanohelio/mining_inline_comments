{"pr_number": 626, "pr_title": "Updated HCS Acceptance tests for easy running by devops", "pr_createdAt": "2020-03-25T23:21:16Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/626", "timeline": [{"oid": "12e785916f3f7657d8053a85b8ab6562c39ed448", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/12e785916f3f7657d8053a85b8ab6562c39ed448", "message": "Updated HCS Acceptance tests for easy running by devops\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-25T23:01:44Z", "type": "commit"}, {"oid": "079950a30d47cb2578c480d14547958cd0f20e02", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/079950a30d47cb2578c480d14547958cd0f20e02", "message": "Set subscribeonly topic id to empty to force manual setting\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-25T23:06:26Z", "type": "commit"}, {"oid": "2770e3b4dd8fab74a6f790c19f49f8be597ef629", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2770e3b4dd8fab74a6f790c19f49f8be597ef629", "message": "Updated readme file\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-25T23:17:49Z", "type": "commit"}, {"oid": "8d449344ebd6a4c843e09882e0fc46231a87f157", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/8d449344ebd6a4c843e09882e0fc46231a87f157", "message": "Added note about Java sdk usage\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-25T23:20:19Z", "type": "commit"}, {"oid": "14d7833e168fd41f394ac734a76bc9861cea643a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/14d7833e168fd41f394ac734a76bc9861cea643a", "message": "Added existingTopicNum param. Moves config from code to application.yml file\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-26T19:55:32Z", "type": "commit"}, {"oid": "2f13e87798f23f98c08d0404e9e11548c86d2ee0", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2f13e87798f23f98c08d0404e9e11548c86d2ee0", "message": "Updated topicmessages tests to use shard value from config\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-26T20:55:17Z", "type": "commit"}, {"oid": "206bfbbed00b96829d56d540b2b1104af4181f2c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/206bfbbed00b96829d56d540b2b1104af4181f2c", "message": "Added existingTopicNum place holder to application-default\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-26T22:48:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzI2NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399037265", "bodyText": "I think instead of a subscribe delay this should be a subscribe timeout. Subscribe delay is a slow and brittle approach that always waits that amount of time before subscribing. Brittle because if it's not an appropriate value for that environment it will fail.\nA subscribe timeout is a smarter approach that would retry subscribe every 1s up to the timeout when a topic not found is returned, potentially returning quicker than the delay. This may have been what Appy was getting at.\nI understand you have message timeout, but that should probably be adjusted to start after subscription is successful.", "author": "steven-sheehy", "createdAt": "2020-03-27T05:03:37Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -38,16 +38,19 @@\n public class MirrorNodeClient {\n     private final MirrorClient mirrorClient;\n     private final int messageTimeout;\n+    private final int subscribeDelay;\n \n     public MirrorNodeClient(AcceptanceTestProperties acceptanceTestProperties) {\n         String mirrorNodeAddress = acceptanceTestProperties.getMirrorNodeAddress();\n         log.debug(\"Creating Mirror Node client for {}\", mirrorNodeAddress);\n         mirrorClient = new MirrorClient(Objects.requireNonNull(mirrorNodeAddress));\n         messageTimeout = acceptanceTestProperties.getMessageTimeout();\n+        subscribeDelay = acceptanceTestProperties.getSubscribeDelay() * 1000;\n     }\n \n     public SubscriptionResponse subscribeToTopic(MirrorConsensusTopicQuery mirrorConsensusTopicQuery) throws Throwable {\n-        log.debug(\"Subscribing to topic\");\n+        log.debug(\"Subscribing to topic. Subscribe is delayed by {} ms\", subscribeDelay);\n+        Thread.sleep(subscribeDelay, 0);", "originalCommit": "206bfbbed00b96829d56d540b2b1104af4181f2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MDM2Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399360362", "bodyText": "Yeah, Appy and I agreed on this. I was hoping to do retry in a different PR within the spring but wanted to get this in and focus on a few other things earlier on.\nLet me know if this is blocking or if I can address this later as it works for now.", "author": "Nana-EC", "createdAt": "2020-03-27T15:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2NTA0Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399365043", "bodyText": "I'm okay to go with this approach and replace it with subscribeTimeout in a follow up.", "author": "steven-sheehy", "createdAt": "2020-03-27T15:52:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMTQyMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r400511422", "bodyText": "Went ahead and implemented retry logic", "author": "Nana-EC", "createdAt": "2020-03-30T21:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzc2NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399037765", "bodyText": "These timeouts/delays should be a Duration", "author": "steven-sheehy", "createdAt": "2020-03-27T05:06:03Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/config/AcceptanceTestProperties.java", "diffHunk": "@@ -44,4 +45,8 @@\n     private String operatorKey;\n     @Min(0)\n     private int messageTimeout;\n+    @Min(0)\n+    private int subscribeDelay;", "originalCommit": "206bfbbed00b96829d56d540b2b1104af4181f2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyODU2Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r400528562", "bodyText": "Fixed and removed one", "author": "Nana-EC", "createdAt": "2020-03-30T22:18:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzk3Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399037972", "bodyText": "Why are we duplicately storing these instead of just storing the AcceptanceTestProperties?", "author": "steven-sheehy", "createdAt": "2020-03-27T05:06:55Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -38,16 +38,19 @@\n public class MirrorNodeClient {\n     private final MirrorClient mirrorClient;\n     private final int messageTimeout;\n+    private final int subscribeDelay;", "originalCommit": "206bfbbed00b96829d56d540b2b1104af4181f2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MDA4Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399360087", "bodyText": "I should store the object over the individual primitives. Will fix.", "author": "Nana-EC", "createdAt": "2020-03-27T15:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMTUwMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r400511501", "bodyText": "removed", "author": "Nana-EC", "createdAt": "2020-03-30T21:41:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAzNzk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0MDgyNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399040825", "bodyText": "Updated .feature files to specify an expectedCount of messages which can differ from the published amount. This allows for environments where transaction volume is small and files aren't closed as often.\n\nAs a non-programmer, I should be able to read these feature files and understand them. These changes makes it non-obvious and confusing. A better approach would be to revert to the old feature file with a single numMessages, then publish numMessages and every second after publish one more message until timeout. The additional messages are just for closing the record file and can be ignored and you just verify you received at least numMessages.", "author": "steven-sheehy", "createdAt": "2020-03-27T05:19:21Z", "path": "hedera-mirror-test/src/test/resources/features/hcs/hcs.feature", "diffHunk": "@@ -5,23 +5,23 @@ Feature: HCS Base Coverage Feature\n     Scenario Outline: Validate Topic message submission\n         Given I successfully create a new topic id\n         And I publish and verify <numMessages> messages sent\n-        When I provide a number of messages <numMessages> I want to receive\n+        When I provide a number of messages <expectedCount> I want to receive\n         And I subscribe with a filter to retrieve messages\n         Then the network should successfully observe these messages\n         Examples:\n-            | numMessages |\n-            | 100         |\n+            | numMessages | expectedCount |\n+            | 15          | 10            |", "originalCommit": "206bfbbed00b96829d56d540b2b1104af4181f2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1OTUyNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399359524", "bodyText": "I see what you're saying. However, I did also observe that 1 message extra isn't always enough to close the record file.", "author": "Nana-EC", "createdAt": "2020-03-27T15:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0MDgyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MTg1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r399361858", "bodyText": "Not one extra message, one message per second until timeout.", "author": "steven-sheehy", "createdAt": "2020-03-27T15:48:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0MDgyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMTc3Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r400511773", "bodyText": "Implemented this with a background thread that emits messages once every second as you noted", "author": "Nana-EC", "createdAt": "2020-03-30T21:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0MDgyNQ=="}], "type": "inlineReview"}, {"oid": "554922d257ba898d226ccbc6b1a2b7f6091297a1", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/554922d257ba898d226ccbc6b1a2b7f6091297a1", "message": " Added retry logic and background message publish logic\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-30T21:38:57Z", "type": "commit"}, {"oid": "44600b0b5ac1d45244ec5dbf8a7856df92b188f7", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/44600b0b5ac1d45244ec5dbf8a7856df92b188f7", "message": "Added retry logic logging visibility\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-30T22:30:36Z", "type": "commit"}, {"oid": "5762da92923872c2dfb2485035339eef9b5157a6", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5762da92923872c2dfb2485035339eef9b5157a6", "message": "Updated readme w emitBackgroundMessages\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-31T16:44:54Z", "type": "commit"}, {"oid": "6417513cb443b837d2051b33a7301d2df86a0fac", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6417513cb443b837d2051b33a7301d2df86a0fac", "message": "Added matching recover methods and summaries appropriately.\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-31T22:14:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwNjMwMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401106301", "bodyText": "This will retry all StatusRuntimeException, not just NOT_FOUND. You probably want to set exceptionExpression to interrogate the code.", "author": "steven-sheehy", "createdAt": "2020-03-31T17:57:21Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -62,11 +65,12 @@ public SubscriptionResponse subscribeToTopic(MirrorConsensusTopicQuery mirrorCon\n         return subscriptionResponse;\n     }\n \n+    @Retryable(value = {StatusRuntimeException.class})", "originalCommit": "5762da92923872c2dfb2485035339eef9b5157a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MDI2NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401250265", "bodyText": "Will look into this", "author": "Nana-EC", "createdAt": "2020-03-31T22:22:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwNjMwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2NzE1Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401167156", "bodyText": "This is now unused, right? Though we do need some sort of limit to subscribe: either subscribeTimeout or subscribeRetries?", "author": "steven-sheehy", "createdAt": "2020-03-31T19:40:00Z", "path": "hedera-mirror-test/src/test/resources/application-default.yml", "diffHunk": "@@ -2,9 +2,12 @@ hedera:\n   mirror:\n     test:\n       acceptance:\n-        messageTimeout: 20\n+        emitBackgroundMessages: false\n+        existingTopicNum:\n+        messageTimeout: 20s\n+        mirrorNodeAddress: hcs.testnet.mirrornode.hedera.com:5600\n         nodeId: 0.0.3\n         nodeAddress: testnet\n-        mirrorNodeAddress: hcs.testnet.mirrornode.hedera.com:5600\n         operatorId:\n         operatorKey:\n+        subscribeDelay: 2s", "originalCommit": "5762da92923872c2dfb2485035339eef9b5157a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MTAxNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401251014", "bodyText": "Yes unused, meant to remove.\nNot sure what you mean on limit here.\nSubscribes already have the messageTimeOut. They'll last as max the length of time the wait for messages.\nNumbest of retries is already set in the Configuration file", "author": "Nana-EC", "createdAt": "2020-03-31T22:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2NzE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxODAxNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401818017", "bodyText": "There's no retries in config file. It seems to be hardcoded in ClientConfiguration.", "author": "steven-sheehy", "createdAt": "2020-04-01T18:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2NzE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyNjU4Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401926583", "bodyText": "Oh understood, you want to be able to configure the number of retries. Gotcha. Will do this", "author": "Nana-EC", "createdAt": "2020-04-01T21:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2NzE1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2ODIzOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401168239", "bodyText": "Default should be in code. Can remove default in config or duplicate it.", "author": "steven-sheehy", "createdAt": "2020-03-31T19:41:58Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/config/AcceptanceTestProperties.java", "diffHunk": "@@ -42,6 +43,10 @@\n     private String operatorId;\n     @NotBlank\n     private String operatorKey;\n-    @Min(0)\n-    private int messageTimeout;\n+    @NotNull\n+    private Duration messageTimeout;", "originalCommit": "5762da92923872c2dfb2485035339eef9b5157a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MTkxNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401251917", "bodyText": "Will set.", "author": "Nana-EC", "createdAt": "2020-03-31T22:26:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2ODIzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3MzQyMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401173420", "bodyText": "Why are we retrying create topics? They could've potentially failed for valid reasons like no funds or invalid input. Or if we do need it we should interrogate code only for particular types.", "author": "steven-sheehy", "createdAt": "2020-03-31T19:51:26Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TopicFeature.java", "diffHunk": "@@ -41,27 +44,32 @@\n import com.hedera.mirror.test.e2e.acceptance.client.MirrorNodeClient;\n import com.hedera.mirror.test.e2e.acceptance.client.SubscriptionResponse;\n import com.hedera.mirror.test.e2e.acceptance.client.TopicClient;\n+import com.hedera.mirror.test.e2e.acceptance.config.AcceptanceTestProperties;\n import com.hedera.mirror.test.e2e.acceptance.util.FeatureInputHandler;\n \n @Log4j2\n @Cucumber\n public class TopicFeature {\n+    private final AcceptanceTestProperties acceptanceProps;\n     private int messageSubscribeCount;\n-    private int latency;\n+    private long latency;\n     private MirrorConsensusTopicQuery mirrorConsensusTopicQuery;\n     private ConsensusTopicId consensusTopicId;\n     private SubscriptionResponse subscriptionResponse;\n     private Ed25519PrivateKey submitKey;\n     private Instant testInstantReference;\n     private List<TransactionReceipt> publishedTransactionReceipts;\n-\n     @Autowired\n     private MirrorNodeClient mirrorClient;\n-\n     @Autowired\n     private TopicClient topicClient;\n \n+    public TopicFeature(AcceptanceTestProperties acceptanceTestProperties) {\n+        acceptanceProps = acceptanceTestProperties;\n+    }\n+\n     @Given(\"I successfully create a new topic id\")\n+    @Retryable(value = {StatusRuntimeException.class})", "originalCommit": "5762da92923872c2dfb2485035339eef9b5157a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1Mjc0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401252746", "bodyText": "Initially the refuse stream also occurred on createTopic, so a retry on topic creation was valid where a new topic is needed - which is most tests.", "author": "Nana-EC", "createdAt": "2020-03-31T22:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3MzQyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxODUxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401818518", "bodyText": "Ok, so just need to check for UNAVAILABLE here then", "author": "steven-sheehy", "createdAt": "2020-04-01T18:22:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3MzQyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0MTgzMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401241830", "bodyText": "I don't think you can retry a batch, right? You might've sent one successfully then got an exception on second. It would then try to send the first one again. Retry should be on the single publish message if at all.", "author": "steven-sheehy", "createdAt": "2020-03-31T22:02:01Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TopicFeature.java", "diffHunk": "@@ -198,17 +223,17 @@ public void verifySubscriptionChannelConnection() throws Throwable {\n     }\n \n     @When(\"I publish {int} batches of {int} messages every {long} milliseconds\")\n+    @Retryable(value = {StatusRuntimeException.class})", "originalCommit": "5762da92923872c2dfb2485035339eef9b5157a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1Mjk1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401252958", "bodyText": "Makes sense to retry a single emit. I'll update that", "author": "Nana-EC", "createdAt": "2020-03-31T22:29:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0MTgzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyNjAyMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r402026021", "bodyText": "Overloaded method to retry single attempt to publishes messages not a batch.\nAs part of a larger refactor I'd have moved this into TopicClient but I'm hitting some issues and this works for now.", "author": "Nana-EC", "createdAt": "2020-04-02T03:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0MTgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NTE0OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401245149", "bodyText": "3rd param is numBatches so why is a message timeout being passed?", "author": "steven-sheehy", "createdAt": "2020-03-31T22:09:48Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TopicFeature.java", "diffHunk": "@@ -312,4 +337,56 @@ public void closeClients() {\n             }\n         }\n     }\n+\n+    /**\n+     * Subscribe to topic and observe messages while emitting background messages to encourage service file close in\n+     * environments with low traffic.\n+     *\n+     * @return SubscriptionResponse\n+     * @throws InterruptedException\n+     */\n+    public SubscriptionResponse subscribeWithBackgroundMessageEmission() throws Throwable {\n+        Thread backgroundMessageThread = null;\n+\n+        if (acceptanceProps.isEmitBackgroundMessages()) {\n+            backgroundMessageThread = new Thread(topicClient\n+                    .getBackgroundMessagePublisher(consensusTopicId, submitKey, (int) acceptanceProps", "originalCommit": "5762da92923872c2dfb2485035339eef9b5157a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1Mzg1OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401253859", "bodyText": "I believe the recommendation was yours to emit a message every second for as long as we are listening for messages.\nTherefore a 20 sec max timeout would mean emit at worst a message every seconds 20 times.\nThat's the logic here.", "author": "Nana-EC", "createdAt": "2020-03-31T22:31:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NTE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgyMjIyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401822228", "bodyText": "Yeah, just confusing to have a numBatches be populated by a timeout. Would be better to use a ScheduledExecutorService in the future to run until the timeout:\nExecutors.newSingleThreadScheduledExecutor().scheduleAtFixedRate(() -> {}, 0, 1, TimeUnit.SECONDS).get(timeout, TimeUnit.Seconds);", "author": "steven-sheehy", "createdAt": "2020-04-01T18:28:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NTE0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NjEyMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401246121", "bodyText": "This is all  quite tightly coupled together. A feature should not know about threads, retrying or background production of messages. Would be better if topicClient handled it internally via one of its existing methods. Could be done in follow up", "author": "steven-sheehy", "createdAt": "2020-03-31T22:12:11Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TopicFeature.java", "diffHunk": "@@ -312,4 +337,56 @@ public void closeClients() {\n             }\n         }\n     }\n+\n+    /**\n+     * Subscribe to topic and observe messages while emitting background messages to encourage service file close in\n+     * environments with low traffic.\n+     *\n+     * @return SubscriptionResponse\n+     * @throws InterruptedException\n+     */\n+    public SubscriptionResponse subscribeWithBackgroundMessageEmission() throws Throwable {\n+        Thread backgroundMessageThread = null;\n+\n+        if (acceptanceProps.isEmitBackgroundMessages()) {\n+            backgroundMessageThread = new Thread(topicClient", "originalCommit": "5762da92923872c2dfb2485035339eef9b5157a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NDEzMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r401254132", "bodyText": "Yep agreed. This was part of the stuff I mentioned could be refactored but could wait.", "author": "Nana-EC", "createdAt": "2020-03-31T22:32:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NjEyMQ=="}], "type": "inlineReview"}, {"oid": "3125694e30398ca0793b0801b37712fcf24e55cf", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3125694e30398ca0793b0801b37712fcf24e55cf", "message": "Merge master to get test fragility fixes\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-04-01T21:32:41Z", "type": "commit"}, {"oid": "1f6566b597747796171c4d1ef4ddba51e0e33e15", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1f6566b597747796171c4d1ef4ddba51e0e33e15", "message": "Addressed feedback. Used scheduler and filtered on retries\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-04-01T23:07:33Z", "type": "commit"}, {"oid": "d84e871e97fddc8ffe6ae9a48d4f42faed5ae2a0", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d84e871e97fddc8ffe6ae9a48d4f42faed5ae2a0", "message": "Overloaded publishTopicMessages method to retry only single publish attempts not batches\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-04-02T03:02:31Z", "type": "commit"}, {"oid": "aa62b4b1aeb200c3b2b578a6f05a30503091eb34", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aa62b4b1aeb200c3b2b578a6f05a30503091eb34", "message": "Signed-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>\nMerge branch 'master' into hcs-acceptance-devops", "committedDate": "2020-04-02T18:06:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzMDg3MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r402530870", "bodyText": "Don't think this will work. Did you try? It should be a spel expression that interrogates the object:\n@Retryable(include = {StatusRuntimeException.class}, exceptionExpression = \"#{message.contains('this can be retried')}\")`\n\n@Retryable(include = {StatusRuntimeException.class}, exceptionExpression = \"#{status == Status.NOT_FOUND}\")`", "author": "steven-sheehy", "createdAt": "2020-04-02T18:39:17Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -37,17 +40,18 @@\n @Log4j2\n public class MirrorNodeClient {\n     private final MirrorClient mirrorClient;\n-    private final int messageTimeout;\n+    private final AcceptanceTestProperties acceptanceProps;\n \n     public MirrorNodeClient(AcceptanceTestProperties acceptanceTestProperties) {\n         String mirrorNodeAddress = acceptanceTestProperties.getMirrorNodeAddress();\n         log.debug(\"Creating Mirror Node client for {}\", mirrorNodeAddress);\n         mirrorClient = new MirrorClient(Objects.requireNonNull(mirrorNodeAddress));\n-        messageTimeout = acceptanceTestProperties.getMessageTimeout();\n+        acceptanceProps = acceptanceTestProperties;\n     }\n \n+    @Retryable(value = {StatusRuntimeException.class}, exceptionExpression = \"NOT_FOUND\")", "originalCommit": "aa62b4b1aeb200c3b2b578a6f05a30503091eb34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIyNjMyNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r403226327", "bodyText": "Ah missed this. Thanks", "author": "Nana-EC", "createdAt": "2020-04-03T18:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzMDg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzMjg5Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r402532896", "bodyText": "These two methods now seem to be unused", "author": "steven-sheehy", "createdAt": "2020-04-02T18:42:51Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -179,4 +184,40 @@ public Instant getInstantOfPublishedMessage(long sequenceNumber) {\n     public Instant getInstantOfFirstPublishedMessage() {\n         return recordPublishInstants.get(0L);\n     }\n+\n+    public List<TransactionReceipt> batchPublishMessages(ConsensusTopicId topicId,", "originalCommit": "aa62b4b1aeb200c3b2b578a6f05a30503091eb34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI0NDQwOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r403244409", "bodyText": "Removed", "author": "Nana-EC", "createdAt": "2020-04-03T18:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzMjg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzMzIwNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r402533206", "bodyText": "subscribeRetryBackoffPeriod and should be Duration. and not null", "author": "steven-sheehy", "createdAt": "2020-04-02T18:43:23Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/config/AcceptanceTestProperties.java", "diffHunk": "@@ -42,6 +44,15 @@\n     private String operatorId;\n     @NotBlank\n     private String operatorKey;\n-    @Min(0)\n-    private int messageTimeout;\n+    @NotNull\n+    private Duration messageTimeout = Duration.ofSeconds(20);\n+    @NotNull\n+    private Long existingTopicNum;\n+\n+    private boolean emitBackgroundMessages = false;\n+\n+    @Max(5)\n+    private int subscribeRetries = 3;\n+\n+    private long subscribeRetryOffPeriod = 2000l;", "originalCommit": "aa62b4b1aeb200c3b2b578a6f05a30503091eb34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIyNjQ4MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r403226481", "bodyText": "Will fix", "author": "Nana-EC", "createdAt": "2020-04-03T18:30:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzMzIwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0MzY1NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r402543654", "bodyText": "I thought it was implied, but will state explicitly: exceptionExpression should be populated on all retryables", "author": "steven-sheehy", "createdAt": "2020-04-02T19:00:50Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TopicFeature.java", "diffHunk": "@@ -201,14 +229,22 @@ public void verifySubscriptionChannelConnection() throws Throwable {\n     public void publishTopicMessages(int numGroups, int messageCount, long milliSleep) throws InterruptedException,\n             HederaStatusException {\n         for (int i = 0; i < numGroups; i++) {\n-            topicClient.publishMessagesToTopic(consensusTopicId, \"New message\", submitKey, messageCount, false);\n             Thread.sleep(milliSleep, 0);\n+            publishTopicMessages(messageCount);\n+            log.trace(\"Emitted {} message(s) in batch {} of {} potential batches. Will sleep {} ms until \" +\n+                    \"next batch\", messageCount, i + 1, numGroups, milliSleep);\n         }\n \n         messageSubscribeCount = numGroups * messageCount;\n     }\n \n+    @Retryable(value = {StatusRuntimeException.class})", "originalCommit": "aa62b4b1aeb200c3b2b578a6f05a30503091eb34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIyNjk5Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/626#discussion_r403226992", "bodyText": "I got it, just forgot these 2 and hand't pushed it yet.", "author": "Nana-EC", "createdAt": "2020-04-03T18:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0MzY1NA=="}], "type": "inlineReview"}, {"oid": "7f5d3700f6150d07098931a69a0539728d3134f0", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7f5d3700f6150d07098931a69a0539728d3134f0", "message": "Updated exceptionExpression and addressed other feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-04-03T18:54:56Z", "type": "commit"}, {"oid": "2b679876a6ff9446b031d6ed3f88b3e144b9aed8", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2b679876a6ff9446b031d6ed3f88b3e144b9aed8", "message": "Renamed subscribeRetryOffPeriod to subscribeRetryBackoffPeriod\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-04-03T18:58:36Z", "type": "commit"}]}