{"pr_number": 1305, "pr_title": "Add retry configuration support to HTS acceptance tests", "pr_createdAt": "2020-12-02T03:02:16Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305", "timeline": [{"oid": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e993679ce45ec94fd01e68b80f9a6409b39b6d68", "message": "Added backoff and retry configurations\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-02T02:51:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODQ3Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534408476", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + i + 1).getBytes();\n          \n          \n            \n                        byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + (i + 1)).getBytes();\n          \n      \n    \n    \n  \n\nI think this is what you want.", "author": "xin-hedera", "createdAt": "2020-12-02T18:59:00Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -117,8 +117,9 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n         log.debug(\"Publishing {} message(s) to topicId : {}.\", numMessages, topicId);\n         List<TransactionReceipt> transactionReceiptList = new ArrayList<>();\n         for (int i = 0; i < numMessages; i++) {\n-            byte[] byteArray = Longs.toByteArray(Instant.now().toEpochMilli());\n-            String message = Base64.encodeBase64String(byteArray) + \"_\" + baseMessage + \"_\" + i + 1;\n+            byte[] publishTimestampByteArray = Longs.toByteArray(System.currentTimeMillis());\n+            byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + i + 1).getBytes();", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0NzQ3NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534447474", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-02T20:05:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODQ3Ng=="}], "type": "inlineReview"}, {"oid": "28464c0d4dde0b987eb1b06113d977f673e304b1", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/28464c0d4dde0b987eb1b06113d977f673e304b1", "message": "Minor tweaks\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-02T20:04:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4ODY2Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r533888667", "bodyText": "If you're not caching this value so it's only created once, move the SecureRandom creation to a static variable as it can be a heavy weight operation to construct.", "author": "steven-sheehy", "createdAt": "2020-12-02T04:27:07Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/props/TopicMessagePublishRequest.java", "diffHunk": "@@ -48,18 +47,15 @@\n     @ToString.Exclude\n     private Ed25519PrivateKey operatorPrivateKey;\n \n-    private String randomAlphanumeric;\n+    private byte[] randomAlphanumeric;\n \n-    public String getMessage() {\n-        int timeStampBytes = 8;\n+    public byte[] getMessage() {\n         if (randomAlphanumeric == null) {\n-            int additionalBytes = messageByteSize <= timeStampBytes ? 0 : messageByteSize - 8;\n-            randomAlphanumeric = RandomStringUtils.randomAlphanumeric(additionalBytes);\n+            randomAlphanumeric = new byte[messageByteSize > 8 ? messageByteSize - Long.BYTES : 0];\n+            new SecureRandom().nextBytes(randomAlphanumeric);", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ5NTY0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534495646", "bodyText": "I am caching it so it's created once.\nDidn't want the weight of creating each time at high TPS tests", "author": "Nana-EC", "createdAt": "2020-12-02T21:33:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4ODY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUzNjkzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534536933", "bodyText": "Ah, missed that.", "author": "steven-sheehy", "createdAt": "2020-12-02T22:54:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4ODY2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzMjM0Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534332343", "bodyText": "Use Long.BYTES for 8", "author": "steven-sheehy", "createdAt": "2020-12-02T17:03:50Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/props/TopicMessagePublishRequest.java", "diffHunk": "@@ -48,18 +47,15 @@\n     @ToString.Exclude\n     private Ed25519PrivateKey operatorPrivateKey;\n \n-    private String randomAlphanumeric;\n+    private byte[] randomAlphanumeric;\n \n-    public String getMessage() {\n-        int timeStampBytes = 8;\n+    public byte[] getMessage() {\n         if (randomAlphanumeric == null) {\n-            int additionalBytes = messageByteSize <= timeStampBytes ? 0 : messageByteSize - 8;\n-            randomAlphanumeric = RandomStringUtils.randomAlphanumeric(additionalBytes);\n+            randomAlphanumeric = new byte[messageByteSize > 8 ? messageByteSize - Long.BYTES : 0];", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxNzAyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534517028", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-02T22:13:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzMjM0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNTg4NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534335885", "bodyText": "I think the message can be null or less than 8 so we should probably handle that explicitly as these topics are usually wide open and anyone can submit.", "author": "steven-sheehy", "createdAt": "2020-12-02T17:08:47Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/result/HCSSamplerResult.java", "diffHunk": "@@ -183,7 +175,7 @@ public Instant getMessagePublishInstant(T currentResponse) {\n     }\n \n     private Instant retrieveInstantFromArray(byte[] message) {", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxODIyOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534518229", "bodyText": "Updating to return Instant.MAX in case of null or bytes of length less than 8", "author": "Nana-EC", "createdAt": "2020-12-02T22:15:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNTg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNzEwNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534337107", "bodyText": "You should pass UTF-8 charset whenever using String.getBytes()", "author": "steven-sheehy", "createdAt": "2020-12-02T17:10:25Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -117,8 +117,9 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n         log.debug(\"Publishing {} message(s) to topicId : {}.\", numMessages, topicId);\n         List<TransactionReceipt> transactionReceiptList = new ArrayList<>();\n         for (int i = 0; i < numMessages; i++) {\n-            byte[] byteArray = Longs.toByteArray(Instant.now().toEpochMilli());\n-            String message = Base64.encodeBase64String(byteArray) + \"_\" + baseMessage + \"_\" + i + 1;\n+            byte[] publishTimestampByteArray = Longs.toByteArray(System.currentTimeMillis());\n+            byte[] suffixByteArray = (\"_\" + baseMessage + \"_\" + i + 1).getBytes();", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxOTEzNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534519135", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-02T22:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNzEwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzOTI3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534339271", "bodyText": "Printing the byte array is probably not that helpful. Should print the ex.getMessage() and maybe the message as a string (pass charset).", "author": "steven-sheehy", "createdAt": "2020-12-02T17:13:41Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/result/HCSSamplerResult.java", "diffHunk": "@@ -163,16 +161,10 @@ public Instant getMessagePublishInstant(T currentResponse) {\n \n         byte[] message = getMessageByteArray(currentResponse);\n         try {\n-            byte[] decodedMessage = Base64.decodeBase64(message);\n-            publishInstant = retrieveInstantFromArray(decodedMessage);\n+            publishInstant = retrieveInstantFromArray(message);\n             if (isInstantOutOfRange(publishInstant)) {\n-                publishInstant = retrieveInstantFromArray(message);\n-\n-                // support non encoded version\n-                if (isInstantOutOfRange(publishInstant)) {\n-                    log.debug(\"publishInstant is out of range: {}\", publishInstant);\n-                    publishInstant = null;\n-                }\n+                log.debug(\"publishInstant is out of range: {}\", publishInstant);\n+                publishInstant = null;\n             }\n         } catch (Exception ex) {\n             log.debug(\"response message contains invalid publish millisecond value: {}\", message);", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxOTA5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534519093", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-12-02T22:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzOTI3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MDM5MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534340390", "bodyText": "You should always pass a charset when converting from bytes to String and vice versa.", "author": "steven-sheehy", "createdAt": "2020-12-02T17:15:14Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -144,13 +145,13 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n             recordPublishInstants.put(0L, transactionRecord.consensusTimestamp);\n         }\n \n-        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", message, topicId,\n+        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", new String(message), topicId,", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MDg2Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534340866", "bodyText": "Should wrap in log level check since new String param slower to create.", "author": "steven-sheehy", "createdAt": "2020-12-02T17:15:55Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/TopicClient.java", "diffHunk": "@@ -144,13 +145,13 @@ public TransactionReceipt deleteTopic(ConsensusTopicId topicId) throws HederaSta\n             recordPublishInstants.put(0L, transactionRecord.consensusTimestamp);\n         }\n \n-        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", message, topicId,\n+        log.trace(\"Published message : '{}' to topicId : {} with consensusTimestamp: {}\", new String(message), topicId,", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxOTQyMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534519423", "bodyText": "Wrapped", "author": "Nana-EC", "createdAt": "2020-12-02T22:18:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MDg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MjIzMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534342232", "bodyText": "Charset", "author": "steven-sheehy", "createdAt": "2020-12-02T17:17:53Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TopicFeature.java", "diffHunk": "@@ -364,7 +364,7 @@ public SubscriptionResponse subscribeWithBackgroundMessageEmission() throws Thro\n             scheduler = Executors.newSingleThreadScheduledExecutor();\n             scheduler.scheduleAtFixedRate(() -> {\n                 try {\n-                    topicClient.publishMessageToTopic(consensusTopicId, \"backgroundMessage\", submitKey);\n+                    topicClient.publishMessageToTopic(consensusTopicId, \"backgroundMessage\".getBytes(), submitKey);", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxOTg4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534519884", "bodyText": "Added", "author": "Nana-EC", "createdAt": "2020-12-02T22:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MjIzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NTMwNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534345307", "bodyText": "I believe this syntax should work: #{${hedera.mirror.test.acceptance.restPollRetries}}", "author": "steven-sheehy", "createdAt": "2020-12-02T17:22:06Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/steps/TokenFeature.java", "diffHunk": "@@ -275,13 +271,17 @@ public void deleteToken() throws HederaStatusException {\n     }\n \n     @Then(\"the mirror node REST API should return status {int}\")\n-    @Retryable(value = {AssertionError.class, AssertionFailedError.class}, backoff = @Backoff(delay = 5000))\n+    @Retryable(value = {AssertionError.class, AssertionFailedError.class},\n+            backoff = @Backoff(delayExpression = \"#{@acceptanceTestProperties.restRetryBackoffPeriod.toMillis()}\"),\n+            maxAttemptsExpression = \"#{@acceptanceTestProperties.restPollRetries}\")", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUwNTQ3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534505471", "bodyText": "I had thought so too but when I tried it I always got\njava.lang.IllegalArgumentException: Could not resolve placeholder 'hedera.mirror.test.acceptance.restPollRetries' in value \"#{${hedera.mirror.test.acceptance.restPollRetries}}\"\n\nThe current implementation seemed to be the only one where it worked", "author": "Nana-EC", "createdAt": "2020-12-02T21:51:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NTMwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyMDIzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534520233", "bodyText": "Updated to #{@restPollingProperties.maxAttempts}", "author": "Nana-EC", "createdAt": "2020-12-02T22:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NTMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NjM3Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534346372", "bodyText": "We should group like things in nested properties. Also would be clearer to name this maxAttempts and the other delay as that's what @Retryable calls them. Suggest hedera.mirror.test.acceptance.rest.maxAttempts", "author": "steven-sheehy", "createdAt": "2020-12-02T17:23:39Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/config/AcceptanceTestProperties.java", "diffHunk": "@@ -58,4 +59,11 @@\n \n     @NotNull\n     private Duration subscribeRetryBackoffPeriod = Duration.ofMillis(5000);\n+\n+    @Min(1)\n+    @Max(60)\n+    private int restPollRetries = 60;", "originalCommit": "e993679ce45ec94fd01e68b80f9a6409b39b6d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUwNTk1MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534505950", "bodyText": "Yeah I considered putting it under rest initially. Will do that now", "author": "Nana-EC", "createdAt": "2020-12-02T21:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NjM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxNDc5Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534514793", "bodyText": "Adding a RestPollingProperties class. Moved the above 2 properties as well as the rest base url there", "author": "Nana-EC", "createdAt": "2020-12-02T22:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0NjM3Mg=="}], "type": "inlineReview"}, {"oid": "ab7708823e5341f7621605fac42d157023262e25", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ab7708823e5341f7621605fac42d157023262e25", "message": "Addressed feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-02T22:20:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0MDc3Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r534540777", "bodyText": "Suggest using DurationMin/Max to narrow the allowed values.", "author": "steven-sheehy", "createdAt": "2020-12-02T23:02:20Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/config/RestPollingProperties.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.hedera.mirror.test.e2e.acceptance.config;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+import java.time.Duration;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+import org.springframework.validation.annotation.Validated;\n+\n+@Component\n+@ConfigurationProperties(prefix = \"hedera.mirror.test.acceptance.rest\")\n+@Data\n+@Validated\n+public class RestPollingProperties {\n+\n+    @NotBlank\n+    private String baseUrl;\n+\n+    @NotNull", "originalCommit": "ab7708823e5341f7621605fac42d157023262e25", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM2NTkwMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1305#discussion_r535365901", "bodyText": "Added", "author": "Nana-EC", "createdAt": "2020-12-03T16:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0MDc3Nw=="}], "type": "inlineReview"}, {"oid": "7d0074ca8e9920e0e82cc6fe9912db301d0f595b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/7d0074ca8e9920e0e82cc6fe9912db301d0f595b", "message": "Added duration min max\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-12-03T16:02:54Z", "type": "commit"}]}