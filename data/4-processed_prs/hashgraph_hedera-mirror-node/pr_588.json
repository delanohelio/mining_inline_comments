{"pr_number": 588, "pr_title": "Slight performance and acceptance test improvements and corrections", "pr_createdAt": "2020-03-10T19:39:35Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/588", "timeline": [{"oid": "f9fb91efb0ca24b722c51f929682b4c22f6dac84", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f9fb91efb0ca24b722c51f929682b4c22f6dac84", "message": "Slight performance and acceptants test improvements and corrections\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-10T18:51:52Z", "type": "commit"}, {"oid": "2f45bd96fdb0de4514195ef4a223acf7a6053c95", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2f45bd96fdb0de4514195ef4a223acf7a6053c95", "message": "Shorten error message and undo assert time change\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-10T20:15:43Z", "type": "commit"}, {"oid": "184587d65ff9411aecf50e5bebe149a411ced405", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/184587d65ff9411aecf50e5bebe149a411ced405", "message": "Moved subscribe error to complete message\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-10T20:59:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNzY5MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391037691", "bodyText": "Negative for now() is a bit weird. I would suggest changing it to boxed type and allowing null for now:\nLong startTime = propHandler.getLongClientTestParam(\"StartTime\", 0, null);", "author": "steven-sheehy", "createdAt": "2020-03-11T15:03:40Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "diffHunk": "@@ -63,11 +64,20 @@ public void setupTest(JavaSamplerContext context) {\n         int port = propHandler.getIntTestParam(\"port\", \"5600\");\n         boolean sharedChannel = Boolean.valueOf(propHandler.getTestParam(\"sharedChannel\", \"false\"));\n         long startTime = propHandler.getLongClientTestParam(\"StartTime\", 0, \"0\");\n+        int nanoStartTime = 0;\n+\n+        // allow for subscribe from now\n+        if (startTime < 0) {", "originalCommit": "184587d65ff9411aecf50e5bebe149a411ced405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjEyMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391246123", "bodyText": "Fixed. Updated some methods in PropertiesHandler to make this easier", "author": "Nana-EC", "createdAt": "2020-03-11T20:21:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNzY5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzOTA3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391039071", "bodyText": "Should be \"failed: \" to avoid concatenating without a space in between", "author": "steven-sheehy", "createdAt": "2020-03-11T15:05:35Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/result/HCSSamplerResult.java", "diffHunk": "@@ -71,13 +73,15 @@ public void onNext(T result) {\n     }\n \n     public void onComplete() {\n-        log.info(\"Observed {} historic and {} incoming messages in {} ({}/s): {}\", historicalMessageCount,\n-                incomingMessageCount, stopwatch, getMessageRate(), success ? \"success\" : \"failed\");\n+        String errorMessage = subscribeError == null ? \"\" : \" : with \" + subscribeError.getMessage();\n+        log.info(\"Observed {} historic and {} incoming messages in {} ({}/s): {}. Last message received {} ago\",\n+                historicalMessageCount,\n+                incomingMessageCount, stopwatch, getMessageRate(), success ? \"success\" :\n+                        \"failed\" + errorMessage, lastMessage);", "originalCommit": "184587d65ff9411aecf50e5bebe149a411ced405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjM1MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391246351", "bodyText": "Fixed", "author": "Nana-EC", "createdAt": "2020-03-11T20:22:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzOTA3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MDY4MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391040681", "bodyText": "Succes/failure with error should be at end of message.", "author": "steven-sheehy", "createdAt": "2020-03-11T15:07:50Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/sampler/result/HCSSamplerResult.java", "diffHunk": "@@ -71,13 +73,15 @@ public void onNext(T result) {\n     }\n \n     public void onComplete() {\n-        log.info(\"Observed {} historic and {} incoming messages in {} ({}/s): {}\", historicalMessageCount,\n-                incomingMessageCount, stopwatch, getMessageRate(), success ? \"success\" : \"failed\");\n+        String errorMessage = subscribeError == null ? \"\" : \" : with \" + subscribeError.getMessage();\n+        log.info(\"Observed {} historic and {} incoming messages in {} ({}/s): {}. Last message received {} ago\",", "originalCommit": "184587d65ff9411aecf50e5bebe149a411ced405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjE5Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391246192", "bodyText": "Fixed", "author": "Nana-EC", "createdAt": "2020-03-11T20:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MDY4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjgyMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391042823", "bodyText": "Should use normal English for scenario. Also should use timestamp in place of date:\nAnd I provide a starting timestamp <startTimestamp>", "author": "steven-sheehy", "createdAt": "2020-03-11T15:10:44Z", "path": "hedera-mirror-test/src/test/resources/features/hcs/hcs.feature", "diffHunk": "@@ -26,12 +26,12 @@ Feature: HCS Base Coverage Feature\n     @SubscribeOnly @Acceptance\n     Scenario Outline: Validate topic message subscription only\n         Given I provide a topic id <topicId>\n-        When I provide a number of messages <numMessages> I want to receive\n-        And I subscribe with a filter to retrieve messages\n+        And I provide a startDate <startDate> and a number of messages <numMessages> I want to receive", "originalCommit": "184587d65ff9411aecf50e5bebe149a411ced405", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjI2NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391246265", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-03-11T20:21:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjgyMw=="}], "type": "inlineReview"}, {"oid": "57a7f7680bff9585aece5dcade8b30f683c33db8", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/57a7f7680bff9585aece5dcade8b30f683c33db8", "message": "Updated PropertiesHandler to support nullable Long and Int types. Updated Sampler result logs and BDD feature test names to read better\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-03-11T20:05:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjcyMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391246722", "bodyText": "imo, nanos precision seems unnecessary. Or maybe am missing some nuance?\n(just a note, not changes needed)", "author": "apeksharma", "createdAt": "2020-03-11T20:22:50Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/client/SingleTopicHCSClient.java", "diffHunk": "@@ -60,18 +60,27 @@ private static synchronized void setChannel(String host, int port) {\n     public void setupTest(JavaSamplerContext context) {\n         propHandler = new PropertiesHandler(context);\n         String host = propHandler.getTestParam(\"host\", \"localhost\");\n-        int port = propHandler.getIntTestParam(\"port\", \"5600\");\n+        int port = propHandler.getIntTestParam(\"port\", 5600);\n         boolean sharedChannel = Boolean.valueOf(propHandler.getTestParam(\"sharedChannel\", \"false\"));\n-        long startTime = propHandler.getLongClientTestParam(\"StartTime\", 0, \"0\");\n-        long endTimeSecs = propHandler.getLongClientTestParam(\"EndTime\", 0, \"0\");\n-        long limit = propHandler.getLongClientTestParam(\"Limit\", 0, \"100\");\n+        Long startTime = propHandler.getLongClientTestParam(\"StartTime\", 0, null);\n+        int nanoStartTime = 0;", "originalCommit": "57a7f7680bff9585aece5dcade8b30f683c33db8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2NjQ1OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/588#discussion_r391266459", "bodyText": "This was an enhancement to help identify clients on the gRPC side. I use the timestamp for subscription to see which 1 out of say 200 clients got a specific error on the gaps server. Open to suggestions on another way to uniquely identify each client", "author": "Nana-EC", "createdAt": "2020-03-11T21:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjcyMg=="}], "type": "inlineReview"}]}