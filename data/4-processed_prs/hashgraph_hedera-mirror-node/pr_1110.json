{"pr_number": 1110, "pr_title": "HTS: REST Token Discovery API", "pr_createdAt": "2020-10-08T16:41:07Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110", "timeline": [{"oid": "0c63d34fc4d2a422579aa22a3d624340124e0a6a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0c63d34fc4d2a422579aa22a3d624340124e0a6a", "message": "HTS: REST Token Discovery\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-08T16:31:59Z", "type": "commit"}, {"oid": "ebaadc81b92af54b44c34db960bcb61b39c79f04", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ebaadc81b92af54b44c34db960bcb61b39c79f04", "message": "Fixed up tests and main functions\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-08T18:43:30Z", "type": "commit"}, {"oid": "aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4", "message": "Added comments and util test\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-08T19:00:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0MTQ4OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r501941488", "bodyText": "Add a UT for this", "author": "Nana-EC", "createdAt": "2020-10-08T18:51:31Z", "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -730,6 +746,11 @@ const parseTokenBalances = (tokenBalances) => {\n     : [];\n };\n \n+const parsePublicKey = (publicKey) => {", "originalCommit": "ebaadc81b92af54b44c34db960bcb61b39c79f04", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2c998bc4021e08bc2a1ad2581978644f11a5ce63", "message": "Update to allow tokenid in query be num or full entityid\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-09T00:33:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMTIwNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502031205", "bodyText": "should the token also go into the t_entities table?", "author": "xin-hedera", "createdAt": "2020-10-08T21:47:00Z", "path": "hedera-mirror-rest/__tests__/integrationDomainOps.js", "diffHunk": "@@ -284,6 +306,89 @@ const addTopicMessage = async function (message) {\n   );\n };\n \n+const addToken = async function (token) {", "originalCommit": "aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMjQyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502532428", "bodyText": "I was thinking a similar thing but right now we seem to separate that logic and make it explicit by adding an account.\nIt really should be called entity", "author": "Nana-EC", "createdAt": "2020-10-09T16:07:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYzNTM0Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502635343", "bodyText": "Doing it this way also avoids having a combined object that contains token and entity info.\nI think it's cleaner this way and avoids confusion.", "author": "Nana-EC", "createdAt": "2020-10-09T19:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMTIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMjE4NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502032185", "bodyText": "for consistency and readability, suggest a token's id is defined by both entity_realm and entity_num like the accounts.", "author": "xin-hedera", "createdAt": "2020-10-08T21:49:26Z", "path": "hedera-mirror-rest/__tests__/specs/tokens-01-no-args.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1\n+      },\n+      {\n+        \"entity_num\": 1135\n+      },\n+      {\n+        \"entity_realm\": 7,\n+        \"entity_num\": 25301\n+      },\n+      {\n+        \"entity_realm\": 23,\n+        \"entity_num\": 45678\n+      }\n+    ],\n+    \"tokens\": [", "originalCommit": "aca01177e3000fc1fb7fc594a6d2eb0f65e5b8c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMjk1OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502532959", "bodyText": "Can update this. It should be as you've noted", "author": "Nana-EC", "createdAt": "2020-10-09T16:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMjE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxMzkyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502513928", "bodyText": "description does not match the scenario", "author": "xin-hedera", "createdAt": "2020-10-09T15:35:47Z", "path": "hedera-mirror-rest/__tests__/specs/tokens-03-publickey.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMzAzNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502533037", "bodyText": "Will update", "author": "Nana-EC", "createdAt": "2020-10-09T16:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxMzkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNTA2Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502515066", "bodyText": "wrong description", "author": "xin-hedera", "createdAt": "2020-10-09T15:37:37Z", "path": "hedera-mirror-rest/__tests__/specs/tokens-07-invalid-query-params.spec.json", "diffHunk": "@@ -0,0 +1,71 @@\n+{\n+  \"description\": \"Token api call for all tokens utilizing all available query params\",", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzOTk2MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502539961", "bodyText": "Had renamed the file, will update", "author": "Nana-EC", "createdAt": "2020-10-09T16:21:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNTA2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNjczNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502516735", "bodyText": "this test case shouldn't pass, account 0.0.2 does not exist", "author": "xin-hedera", "createdAt": "2020-10-09T15:40:25Z", "path": "hedera-mirror-rest/__tests__/specs/tokens-06-all-params.spec.json", "diffHunk": "@@ -0,0 +1,82 @@\n+{\n+  \"description\": \"Token api call for all tokens utilizing all available query params\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1,\n+        \"public_key\": \"7a3c7a3c5477bdf4a63742647d7cfc4544acc1899d07141caf4cd9fea2f75b28a5cc\",\n+        \"key\": [1, 1, 1]\n+      },\n+      {\n+        \"entity_num\": 1135,\n+        \"public_key\": \"2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864\",\n+        \"key\": [2, 2, 2]\n+      },\n+      {\n+        \"entity_realm\": 7,\n+        \"entity_num\": 25301,\n+        \"public_key\": \"2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864\",\n+        \"key\": [3, 3, 3]\n+      },\n+      {\n+        \"entity_realm\": 23,\n+        \"entity_num\": 45678,\n+        \"public_key\": \"2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864\",\n+        \"key\": [4, 4, 4]\n+      }\n+    ],\n+    \"tokens\": [\n+      {\n+        \"token_id\": 1,\n+        \"symbol\": \"FIRSTMOVERLPDJH\"\n+      },\n+      {\n+        \"token_id\": 1135,\n+        \"symbol\": \"ORIGINALRDKSE\"\n+      },\n+      {\n+        \"token_id\": 30064796373,\n+        \"symbol\": \"MIRRORTOKEN\"\n+      },\n+      {\n+        \"token_id\": 98784293486,\n+        \"symbol\": \"HEDERACOIN\"\n+      }\n+    ],\n+    \"tokenaccounts\": [\n+      {\n+        \"token_id\": 30064796373,\n+        \"account_id\": 2\n+      },\n+      {\n+        \"token_id\": 98784293486,\n+        \"account_id\": 2\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/tokens?account.id=2&token.id=gte:0.0.18&token.id=lt:0.30000.0&limit=2&entity.publickey=2b60955bcbf0cf5e9ea880b52e5b63f664b08edf6ed15e301049517438d61864&order=desc\",", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzOTg1NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502539854", "bodyText": "The query confers with the token_account table, which would only contain an account reference if an account existed when a token was associated with.\nIf there was no reference of account 0.0.2 in token _account this result would return back en empty list\nIn the REST call we probably don't need to add the overhead of also checking the entities table for the account given the above fact.\nI can add account 0.0.2 to the entities table for consistency though.", "author": "Nana-EC", "createdAt": "2020-10-09T16:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNjczNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzEzNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502523136", "bodyText": "Q: should we use account.publickey instead of entity.publickey? The balances REST API uses account.publickey btw.\nAlso, the design doc has an optional filter by token admin publickey, initially I thought entity.publickey is the admin key filter.", "author": "xin-hedera", "createdAt": "2020-10-09T15:51:10Z", "path": "hedera-mirror-rest/tokens.js", "diffHunk": "@@ -0,0 +1,196 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ *\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const config = require('./config');\n+const constants = require('./constants');\n+const EntityId = require('./entityId');\n+const utils = require('./utils');\n+const {DbError} = require('./errors/dbError');\n+\n+// select columns\n+const sqlQueryColumns = {\n+  KEY: 'e.key',\n+  SYMBOL: 't.symbol',\n+  TOKEN_ID: 't.token_id',\n+  PUBLIC_KEY: 'e.ed25519_public_key_hex',\n+};\n+\n+// query to column maps\n+const filterColumnMap = {\n+  'entity.publickey': sqlQueryColumns.PUBLIC_KEY,", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzNDM3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502534371", "bodyText": "So the reason I added entity.public key is so that we don't have to add a new one for every entity.\nRight now we have account.pubickey, in this case the entity is a token not an account.\nIf similar logic was used on files, contract, topics or any future entity type we'd want the naming to be appropriate.\nI didn't want to refactor account and balance as part of this change because it would break the API.", "author": "Nana-EC", "createdAt": "2020-10-09T16:10:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4ODAzMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502588033", "bodyText": "I think being explicit about what type of entity the public key is for is better. part of my confusion of entity.publickey   = account.publickey also came from other test cases and I'll leave separate comments.", "author": "xin-hedera", "createdAt": "2020-10-09T17:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzEzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5Njg1MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502596850", "bodyText": "Changed to just publickey", "author": "Nana-EC", "createdAt": "2020-10-09T18:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzEzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMzA1NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502503055", "bodyText": "Should this also use parsePublicKey?", "author": "steven-sheehy", "createdAt": "2020-10-09T15:18:54Z", "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -692,13 +700,21 @@ const formatComparator = (comparator) => {\n         // Accepted forms: shard.realm.num or num\n         comparator.value = parseEntityId(comparator.value);\n         break;\n-      case constants.filterKeys.TIMESTAMP:\n-        comparator.value = parseTimestampParam(comparator.value);\n-        break;\n       case constants.filterKeys.ACCOUNT_PUBLICKEY:\n         // Acceptable forms: exactly 64 characters or +12 bytes (DER encoded)\n         comparator.value = ed25519.derToEd25519(comparator.value);", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4NzMzMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502587332", "bodyText": "Eventually it should.\nRight now accounts/balances endpoint need some refactoring as they don't utilize the improved logic we brought in when adding the topic messages endpoint.", "author": "Nana-EC", "createdAt": "2020-10-09T17:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMzA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMzQyOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502503429", "bodyText": "Comment not moved", "author": "steven-sheehy", "createdAt": "2020-10-09T15:19:29Z", "path": "hedera-mirror-rest/utils.js", "diffHunk": "@@ -172,9 +173,16 @@ const filterValidityChecks = function (param, op, val) {\n       // Acceptable range: 0 < x <= Number.MAX_SAFE_INTEGER\n       ret = isValidNum(val);\n       break;\n-    case constants.filterKeys.ENCODING:\n+    case constants.filterKeys.TIMESTAMP:\n+      ret = isValidTimestampParam(val);\n+      break;\n+    case constants.filterKeys.TOKEN_ID:\n       // Acceptable words: binary or text", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5NjM1MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502596350", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-10-09T18:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMzQyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzAzNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502523034", "bodyText": "Should we add types to these so it's clear they're tokens and not accounts? In the future, we should rename \"accounts\" array to \"entities\".", "author": "steven-sheehy", "createdAt": "2020-10-09T15:51:01Z", "path": "hedera-mirror-rest/__tests__/specs/tokens-01-no-args.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4ODE3NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502588175", "bodyText": "Yes added locally pushing up in next commit", "author": "Nana-EC", "createdAt": "2020-10-09T17:55:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzAzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5NTg0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502595846", "bodyText": "Was gonna do the accounts -> entities change but Xin's PR does that so I'll leave as is", "author": "Nana-EC", "createdAt": "2020-10-09T18:11:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzAzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyNjkwNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502526906", "bodyText": "I'm not a fan of entity.publickey. It's generic while this public key is specifically associated with the token entity. Why not just publickey like in the design? Since we're in the tokens context it should be sufficient.", "author": "steven-sheehy", "createdAt": "2020-10-09T15:57:37Z", "path": "hedera-mirror-rest/__tests__/specs/tokens-03-publickey.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1,\n+        \"public_key\": \"3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\",\n+        \"key\": [1, 1, 1]\n+      },\n+      {\n+        \"entity_num\": 1135,\n+        \"public_key\": \"519a008fabde4d28d68293c71fcdcdcca38d8fae6102a832b31e802f257fd1d9\",\n+        \"key\": [2, 2, 2]\n+      },\n+      {\n+        \"entity_realm\": 7,\n+        \"entity_num\": 25301,\n+        \"public_key\": \"3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\",\n+        \"key\": [3, 3, 3]\n+      },\n+      {\n+        \"entity_realm\": 23,\n+        \"entity_num\": 45678,\n+        \"public_key\": \"c7e81a0c1444c6e5b5c1bfb1a02ae5faae44c11e621f286d21242cc584280692\",\n+        \"key\": [4, 4, 4]\n+      }\n+    ],\n+    \"tokens\": [\n+      {\n+        \"token_id\": 1,\n+        \"symbol\": \"FIRSTMOVERLPDJH\"\n+      },\n+      {\n+        \"token_id\": 1135,\n+        \"symbol\": \"ORIGINALRDKSE\"\n+      },\n+      {\n+        \"token_id\": 30064796373,\n+        \"symbol\": \"MIRRORTOKEN\"\n+      },\n+      {\n+        \"token_id\": 98784293486,\n+        \"symbol\": \"HEDERACOIN\"\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/tokens?entity.publickey=3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\",", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4OTQ3MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502589470", "bodyText": "I had entity because I wanted all entities that ended up having publickey filters to use it instead of the specific account.publickey which obviously calls out accounts only.\nI used the entity prefix to try to be consistent with that.\nI'm also not a fan of the x.y filter names so I'm okay with making it just publickey", "author": "Nana-EC", "createdAt": "2020-10-09T17:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyNjkwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyODk3Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502528973", "bodyText": "Can just set a default when declaring limit.", "author": "steven-sheehy", "createdAt": "2020-10-09T16:01:02Z", "path": "hedera-mirror-rest/tokens.js", "diffHunk": "@@ -0,0 +1,196 @@\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ *\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+'use strict';\n+\n+const config = require('./config');\n+const constants = require('./constants');\n+const EntityId = require('./entityId');\n+const utils = require('./utils');\n+const {DbError} = require('./errors/dbError');\n+\n+// select columns\n+const sqlQueryColumns = {\n+  KEY: 'e.key',\n+  SYMBOL: 't.symbol',\n+  TOKEN_ID: 't.token_id',\n+  PUBLIC_KEY: 'e.ed25519_public_key_hex',\n+};\n+\n+// query to column maps\n+const filterColumnMap = {\n+  'entity.publickey': sqlQueryColumns.PUBLIC_KEY,\n+  symbol: sqlQueryColumns.SYMBOL,\n+  'token.id': sqlQueryColumns.TOKEN_ID,\n+};\n+\n+// sql queries\n+const tokensSelectQuery = `select t.token_id, symbol, e.key from token t`;\n+const accountIdJoinQuery = ` join token_account ta on ta.account_id = $1 and t.token_id = ta.token_id`;\n+const entityIdJoinQuery = ` join t_entities e on e.id = t.token_id`;\n+\n+/**\n+ * Given top level select columns and filters from request query, extract filters and create final sql query with appropriate where clauses.\n+ */\n+const extractSqlFromTokenRequest = (pgSqlQuery, pgSqlParams, nextParamCount, filters) => {\n+  // add filters\n+  let limit;\n+  let order = 'asc';\n+  let applicableFilters = 0;\n+  for (const filter of filters) {\n+    if (filter.key === constants.filterKeys.LIMIT) {\n+      limit = filter.value;\n+      continue;\n+    }\n+\n+    // handle keys that do not require formatting first\n+    if (filter.key === constants.filterKeys.ORDER) {\n+      order = filter.value;\n+      continue;\n+    }\n+\n+    const columnKey = filterColumnMap[filter.key];\n+    if (columnKey === undefined) {\n+      continue;\n+    }\n+\n+    pgSqlQuery += applicableFilters === 0 ? ` where ` : ` and `;\n+    applicableFilters++;\n+    pgSqlQuery += `${filterColumnMap[filter.key]}${filter.operator}$${nextParamCount++}`;\n+    pgSqlParams.push(filter.value);\n+  }\n+\n+  // add order\n+  pgSqlQuery += ` order by ${sqlQueryColumns.TOKEN_ID} ${order}`;\n+\n+  // add limit\n+  pgSqlQuery += ` limit $${nextParamCount++}`;\n+  limit = limit === undefined ? config.maxLimit : limit;", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5NTE0OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502595149", "bodyText": "Updated", "author": "Nana-EC", "createdAt": "2020-10-09T18:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyODk3Mw=="}], "type": "inlineReview"}, {"oid": "330c404465a647ab6a109bff1fa6ffc153ecaa7a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/330c404465a647ab6a109bff1fa6ffc153ecaa7a", "message": "Addressed comments on integration spec tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-09T17:50:45Z", "type": "commit"}, {"oid": "a5e408c0de923753ad3e16d882f205eda61dbb6c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a5e408c0de923753ad3e16d882f205eda61dbb6c", "message": "Addressed publickey feedback\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-09T18:08:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4OTA2Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502589067", "bodyText": "accounts shouldn't be reused for the purpose of adding tokens into t_entities table. in addition, entries in the accounts array are inserted with fk_entity_type_id = 1, while for tokens, it should be 5", "author": "xin-hedera", "createdAt": "2020-10-09T17:57:24Z", "path": "hedera-mirror-rest/__tests__/specs/tokens-03-publickey.spec.json", "diffHunk": "@@ -0,0 +1,72 @@\n+{\n+  \"description\": \"Token api call for all tokens\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 1,", "originalCommit": "2c998bc4021e08bc2a1ad2581978644f11a5ce63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5NjI4Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1110#discussion_r502596282", "bodyText": "I updated the token entities with the type 5 just now", "author": "Nana-EC", "createdAt": "2020-10-09T18:12:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4OTA2Nw=="}], "type": "inlineReview"}]}