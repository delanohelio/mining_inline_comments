{"pr_number": 1087, "pr_title": "HTS: Add new fields to accounts, balances and transactions REST API", "pr_createdAt": "2020-09-28T21:12:04Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087", "timeline": [{"oid": "0d3b3f3df0c0efe68f6b1106d85ad49a1dcc3f21", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0d3b3f3df0c0efe68f6b1106d85ad49a1dcc3f21", "message": "support token balances in balances endpoint\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-09-25T21:03:27Z", "type": "commit"}, {"oid": "ceb685ec0c733bd7805cd86a9da809a099f8d731", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ceb685ec0c733bd7805cd86a9da809a099f8d731", "message": "add token transfer list for /transactions\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-09-28T20:48:36Z", "type": "commit"}, {"oid": "429c0b0cb61bf01b300c36d50850701530b6de5a", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/429c0b0cb61bf01b300c36d50850701530b6de5a", "message": "Merge branch 'master' into token-new-fields-balances-transactions-rest-api", "committedDate": "2020-09-28T21:00:24Z", "type": "commit"}, {"oid": "f73fc86028a9417e549c38be5ae53d1d000e0033", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/f73fc86028a9417e549c38be5ae53d1d000e0033", "message": "move 'pg-format' to dev dependencies\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-09-28T21:11:26Z", "type": "commit"}, {"oid": "3c975755061d6e22f04b72281e55b382a30a522b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3c975755061d6e22f04b72281e55b382a30a522b", "message": "cleanup\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-09-28T21:16:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3NzcyMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r497777722", "bodyText": "file name is misspelled transactions-16-specefic-id-tokentransfer.spec.json. Should be transactions-16-specific-id-tokentransfer.spec.json", "author": "Nana-EC", "createdAt": "2020-09-30T20:22:44Z", "path": "hedera-mirror-rest/__tests__/specs/transactions-16-specefic-id-tokentransfer.spec.json", "diffHunk": "@@ -0,0 +1,97 @@\n+{", "originalCommit": "3c975755061d6e22f04b72281e55b382a30a522b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI4MjA0OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498282048", "bodyText": "thanks, updated", "author": "xin-hedera", "createdAt": "2020-10-01T14:20:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3NzcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4MDU1NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r497780554", "bodyText": "nit: You should add a comment highlighting you're formatting the response as an aggregate of comma separated tokenid balance paris e.g. \"0.0.2=1000,0.0.5=-333..\" so that you can easily split it out later", "author": "Nana-EC", "createdAt": "2020-09-30T20:28:12Z", "path": "hedera-mirror-rest/balances.js", "diffHunk": "@@ -51,54 +53,56 @@ const getBalances = async (req, res) => {\n     }\n   }\n \n-  let [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n-\n-  let [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n-\n-  let [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n-  let joinEntities = '' !== pubKeyQuery; // Only need to join t_entites if we're selecting on publickey.\n-\n+  const [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n+  const [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n+  const [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n   const {query, params, order, limit} = utils.parseLimitAndOrderParams(req, 'desc');\n \n   // Use the inner query to find the latest snapshot timestamp from the balance history table\n-  let innerQuery =\n-    'select consensus_timestamp from account_balance ab\\n' +\n-    ' where\\n' +\n-    (tsQuery === '' ? '1=1' : tsQuery) +\n-    '\\n' +\n-    'order by consensus_timestamp desc limit 1';\n-\n-  let sqlQuery = 'select ab.consensus_timestamp,\\n' + 'ab.account_id, ab.balance\\n' + ' from account_balance ab\\n';\n-  if (joinEntities) {\n-    sqlQuery +=\n-      ' join t_entities e\\n' +\n-      ' on e.id = ab.account_id\\n' +\n-      ' and e.entity_shard = ' +\n-      config.shard +\n-      '\\n' +\n-      ' and e.fk_entity_type_id < ' +\n-      utils.ENTITY_TYPE_FILE +\n-      '\\n';\n-  }\n-  sqlQuery +=\n-    ' where ' +\n-    ' consensus_timestamp = (' +\n-    innerQuery +\n-    ')\\n' +\n-    ' and\\n' +\n-    [accountQuery, pubKeyQuery, balanceQuery].map((q) => (q === '' ? '1=1' : q)).join(' and ') +\n-    ' order by consensus_timestamp desc, ' +\n-    'account_id ' +\n-    order +\n-    ' ' +\n-    query;\n-\n-  let sqlParams = tsParams.concat(accountParams).concat(pubKeyParams).concat(balanceParams).concat(params);\n-\n+  const innerQuery = `\n+      SELECT\n+        ab.consensus_timestamp\n+      FROM account_balance ab\n+      WHERE ${tsQuery === '' ? '1=1' : tsQuery}\n+      ORDER BY ab.consensus_timestamp DESC\n+      LIMIT 1`;\n+\n+  const whereClause = `\n+      WHERE ${[`ab.consensus_timestamp = (${innerQuery})`, accountQuery, pubKeyQuery, balanceQuery]\n+        .filter((q) => q !== '')\n+        .join(' AND ')}`;\n+\n+  // Only need to join t_entites if we're selecting on publickey.\n+  const joinEntityClause =\n+    pubKeyQuery !== ''\n+      ? `\n+      JOIN t_entities e\n+        ON e.id = ab.account_id\n+          AND e.entity_shard = ${config.shard}\n+          AND e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}`\n+      : '';\n+\n+  const sqlQuery = `\n+      SELECT\n+        ab.consensus_timestamp,\n+        ab.account_id,\n+        ab.balance,\n+        string_agg(tb.token_id || '=' || tb.balance, ',' ORDER BY tb.token_id) AS token_balances", "originalCommit": "3c975755061d6e22f04b72281e55b382a30a522b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4MTIwNQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r497781205", "bodyText": "nit: same thing here, add a comment with an example to highlight aggregation logic", "author": "Nana-EC", "createdAt": "2020-09-30T20:29:29Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -34,12 +35,40 @@ const selectClause = `SELECT\n        coalesce(ttr.result, 'UNKNOWN') AS result,\n        coalesce(ttt.name, 'UNKNOWN') AS name,\n        t.node_account_id,\n-       ctl.entity_id as ctl_entity_id,\n-       ctl.amount,\n+       ctl.entity_id AS ctl_entity_id,\n+       ctl.amount AS amount,\n+       string_agg(", "originalCommit": "3c975755061d6e22f04b72281e55b382a30a522b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e20fdacdf869448a06a7daf2b36d665f1796e0dc", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e20fdacdf869448a06a7daf2b36d665f1796e0dc", "message": "add token balances to /accounts and /accounts/:accountId responses\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-10-01T01:57:16Z", "type": "commit"}, {"oid": "da154ca975a8fe69c1be4218249799ecedbee169", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/da154ca975a8fe69c1be4218249799ecedbee169", "message": "adjust token_balance primary key\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-10-01T14:07:58Z", "type": "commit"}, {"oid": "a99344691976e16988a887aed15018228f562bc8", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a99344691976e16988a887aed15018228f562bc8", "message": "Merge branch 'master' into token-new-fields-balances-transactions-rest-api", "committedDate": "2020-10-01T14:17:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI4NTg0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498285846", "bodyText": "token balance query is by (consensus_timestamp, account_id), adjust the order of the column in the primary key so the query can utilize the index", "author": "xin-hedera", "createdAt": "2020-10-01T14:25:01Z", "path": "hedera-mirror-importer/src/main/resources/db/migration/V1.30.1__hts_support.sql", "diffHunk": "@@ -106,7 +106,7 @@ create table if not exists token_balance\n );\n \n alter table if exists token_balance\n-    add constraint token_balance__pk primary key (consensus_timestamp, token_id, account_id);\n+    add constraint token_balance__pk primary key (consensus_timestamp, account_id, token_id);", "originalCommit": "a99344691976e16988a887aed15018228f562bc8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e96418ca0abe964fd9c3f6e752c13d658efbec8b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e96418ca0abe964fd9c3f6e752c13d658efbec8b", "message": "fix token transfer transaction name\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-10-01T14:25:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyNDI1Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498324252", "bodyText": "Having a token transfers array inside a token transfers array is confusing. Would prefer a flat structure like cryptotransfers. I don't think the payerAccountId, nodeAccountId and treasureAccountId are necessary as the recipient account is already created by entities array and linked via the token_transfers.account.", "author": "steven-sheehy", "createdAt": "2020-10-01T15:15:44Z", "path": "hedera-mirror-rest/__tests__/specs/transactions-01-no-args.spec.json", "diffHunk": "@@ -45,12 +45,71 @@\n         \"nodeAccountId\": \"0.0.3\",\n         \"treasuryAccountId\": \"0.0.98\"\n       }\n+    ],\n+    \"tokentransfers\": [\n+      {\n+        \"consensus_timestamp\": \"1234567890000000004\",\n+        \"payerAccountId\": \"0.0.10\",\n+        \"nodeAccountId\": \"0.0.3\",\n+        \"treasuryAccountId\": \"0.0.98\",\n+        \"token_transfers\": [", "originalCommit": "e96418ca0abe964fd9c3f6e752c13d658efbec8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM3MTYyOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498371628", "bodyText": "the array inside array is needed since there are test cases with multiple token transfers in one transaction, renaming tokentransfers to tokentransferstransactions can make it less confusing.\nthe various top level account ids are only used to create the crypto transfer list (actually it's just transaction fee and node fee) for the tokentransfers transaction", "author": "xin-hedera", "createdAt": "2020-10-01T16:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyNDI1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4OTUwMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498389502", "bodyText": "Agreed it is just for setup but also agreed a flatter structure would be better.\nAll account Ids should be created in the \"accounts\" section.\nThen token_transfers only needs to contain the array of token_ids, accounts and amounts", "author": "Nana-EC", "createdAt": "2020-10-01T16:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyNDI1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQwMjA0MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498402041", "bodyText": "the various accounts in either cryptotransfers or tokentransfers are not for account creation into t_entities table. I see it's repeatedly mentioned otherways, did I miss anything?", "author": "xin-hedera", "createdAt": "2020-10-01T17:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyNDI1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxOTU2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498419569", "bodyText": "Correct, accounts don't get created via cryptotransfers but via entities array.\nIf a scenario is needed with multiple token transfers in one transaction, this can be done with a flat structure by simply duplicating the consensus timestamp. The setup json should match the table structure as much as possible to make it easy to insert and understand.", "author": "steven-sheehy", "createdAt": "2020-10-01T17:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyNDI1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzMzA2Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498433062", "bodyText": "I'd prefer the transfer array in transaction array structure. It reflects the layout of the transaction. Splitting entries in the list into multiple flat structure with the same consensus timestamp also makes it hard to correlate the input data and the expected json output.\non the other side, cryptotransfers is flat just because we don't test crypto transfers to multiple accounts and in fact we should, that would make it also a transfer array in transaction array structure.", "author": "xin-hedera", "createdAt": "2020-10-01T18:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyNDI1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0NzMxMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498347311", "bodyText": "LEFT OUTER JOIN to be consistent with the others. Functionally they're both the same.", "author": "steven-sheehy", "createdAt": "2020-10-01T15:47:43Z", "path": "hedera-mirror-rest/transactions.js", "diffHunk": "@@ -102,24 +133,28 @@ const createTransferLists = function (rows) {\n  * @return {String} outerQuery Fully formed SQL query\n  */\n const getTransactionsOuterQuery = function (innerQuery, order) {\n-  return (\n-    selectClause +\n-    `FROM ( ${innerQuery} ) AS tlist\n+  return `\n+    ${selectClause}\n+    FROM ( ${innerQuery} ) AS tlist\n        JOIN transaction t ON tlist.consensus_timestamp = t.consensus_ns\n        LEFT OUTER JOIN t_transaction_results ttr ON ttr.proto_id = t.result\n        LEFT OUTER JOIN t_transaction_types ttt ON ttt.proto_id = t.type\n        JOIN crypto_transfer ctl ON tlist.consensus_timestamp = ctl.consensus_timestamp\n-     ORDER BY t.consensus_ns ${order} , ctl_entity_id ASC, amount ASC`\n-  );\n+       LEFT JOIN token_transfer ttl", "originalCommit": "e96418ca0abe964fd9c3f6e752c13d658efbec8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5NjQ1Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498496457", "bodyText": "sure, made the change", "author": "xin-hedera", "createdAt": "2020-10-01T20:29:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0NzMxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0OTQzNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498349437", "bodyText": "The sort order differs from transfers and may not be deterministic. We should probably sort account_id asc, token_id asc.", "author": "steven-sheehy", "createdAt": "2020-10-01T15:50:51Z", "path": "hedera-mirror-rest/__tests__/specs/transactions-16-specific-id-tokentransfer.spec.json", "diffHunk": "@@ -0,0 +1,97 @@\n+{\n+  \"description\": \"Transaction api calls for a specific transaction using transaction id\",\n+  \"setup\": {\n+    \"accounts\": [\n+      {\n+        \"entity_num\": 3\n+      },\n+      {\n+        \"entity_num\": 9\n+      },\n+      {\n+        \"entity_num\": 10\n+      },\n+      {\n+        \"entity_num\": 98\n+      }\n+    ],\n+    \"balances\": [],\n+    \"transactions\": [],\n+    \"cryptotransfers\": [],\n+    \"tokentransfers\": [\n+      {\n+        \"consensus_timestamp\": \"1565779555711927001\",\n+        \"payerAccountId\": \"0.0.300\",\n+        \"nodeAccountId\": \"0.0.3\",\n+        \"treasuryAccountId\": \"0.0.98\",\n+        \"token_transfers\": [\n+          {\n+            \"token_id\": \"0.0.90000\",\n+            \"account\": \"0.0.300\",\n+            \"amount\": -1200\n+          },\n+          {\n+            \"token_id\": \"0.0.90000\",\n+            \"account\": \"0.0.200\",\n+            \"amount\": 200\n+          },\n+          {\n+            \"token_id\": \"0.0.90000\",\n+            \"account\": \"0.0.400\",\n+            \"amount\": 1000\n+          }\n+        ]\n+      }\n+    ]\n+  },\n+  \"url\": \"/api/v1/transactions/0.0.300-1565779555-711927000\",\n+  \"responseStatus\": 200,\n+  \"responseJson\": {\n+    \"transactions\": [\n+      {\n+        \"consensus_timestamp\": \"1565779555.711927001\",\n+        \"valid_start_timestamp\": \"1565779555.711927000\",\n+        \"charged_tx_fee\": 7,\n+        \"memo_base64\": null,\n+        \"result\": \"SUCCESS\",\n+        \"transaction_hash\": \"aGFzaA==\",\n+        \"name\": \"TOKENTRANSFERS\",\n+        \"node\": \"0.0.3\",\n+        \"transaction_id\": \"0.0.300-1565779555-711927000\",\n+        \"valid_duration_seconds\": \"11\",\n+        \"max_fee\": \"33\",\n+        \"transfers\": [\n+          {\n+            \"account\": \"0.0.3\",\n+            \"amount\": 2\n+          },\n+          {\n+            \"account\": \"0.0.98\",\n+            \"amount\": 1\n+          },\n+          {\n+            \"account\": \"0.0.300\",\n+            \"amount\": -3\n+          }\n+        ],\n+        \"token_transfers\": [\n+          {\n+            \"account\": \"0.0.400\",", "originalCommit": "e96418ca0abe964fd9c3f6e752c13d658efbec8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5NjE4Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498496186", "bodyText": "changed sorting order of token balance / token transfer to the top level resource", "author": "xin-hedera", "createdAt": "2020-10-01T20:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0OTQzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM1ODE3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498358171", "bodyText": "Using json might be a better, more future-proof approach for nested data.", "author": "steven-sheehy", "createdAt": "2020-10-01T16:04:15Z", "path": "hedera-mirror-rest/balances.js", "diffHunk": "@@ -51,54 +53,57 @@ const getBalances = async (req, res) => {\n     }\n   }\n \n-  let [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n-\n-  let [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n-\n-  let [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n-  let joinEntities = '' !== pubKeyQuery; // Only need to join t_entites if we're selecting on publickey.\n-\n+  const [tsQuery, tsParams] = utils.parseTimestampQueryParam(req.query, 'ab.consensus_timestamp');\n+  const [balanceQuery, balanceParams] = utils.parseBalanceQueryParam(req.query, 'ab.balance');\n+  const [pubKeyQuery, pubKeyParams] = utils.parsePublicKeyQueryParam(req.query, 'e.ed25519_public_key_hex');\n   const {query, params, order, limit} = utils.parseLimitAndOrderParams(req, 'desc');\n \n   // Use the inner query to find the latest snapshot timestamp from the balance history table\n-  let innerQuery =\n-    'select consensus_timestamp from account_balance ab\\n' +\n-    ' where\\n' +\n-    (tsQuery === '' ? '1=1' : tsQuery) +\n-    '\\n' +\n-    'order by consensus_timestamp desc limit 1';\n-\n-  let sqlQuery = 'select ab.consensus_timestamp,\\n' + 'ab.account_id, ab.balance\\n' + ' from account_balance ab\\n';\n-  if (joinEntities) {\n-    sqlQuery +=\n-      ' join t_entities e\\n' +\n-      ' on e.id = ab.account_id\\n' +\n-      ' and e.entity_shard = ' +\n-      config.shard +\n-      '\\n' +\n-      ' and e.fk_entity_type_id < ' +\n-      utils.ENTITY_TYPE_FILE +\n-      '\\n';\n-  }\n-  sqlQuery +=\n-    ' where ' +\n-    ' consensus_timestamp = (' +\n-    innerQuery +\n-    ')\\n' +\n-    ' and\\n' +\n-    [accountQuery, pubKeyQuery, balanceQuery].map((q) => (q === '' ? '1=1' : q)).join(' and ') +\n-    ' order by consensus_timestamp desc, ' +\n-    'account_id ' +\n-    order +\n-    ' ' +\n-    query;\n-\n-  let sqlParams = tsParams.concat(accountParams).concat(pubKeyParams).concat(balanceParams).concat(params);\n-\n+  const innerQuery = `\n+      SELECT\n+        ab.consensus_timestamp\n+      FROM account_balance ab\n+      WHERE ${tsQuery === '' ? '1=1' : tsQuery}\n+      ORDER BY ab.consensus_timestamp DESC\n+      LIMIT 1`;\n+\n+  const whereClause = `\n+      WHERE ${[`ab.consensus_timestamp = (${innerQuery})`, accountQuery, pubKeyQuery, balanceQuery]\n+        .filter((q) => q !== '')\n+        .join(' AND ')}`;\n+\n+  // Only need to join t_entites if we're selecting on publickey.\n+  const joinEntityClause =\n+    pubKeyQuery !== ''\n+      ? `\n+      JOIN t_entities e\n+        ON e.id = ab.account_id\n+          AND e.entity_shard = ${config.shard}\n+          AND e.fk_entity_type_id < ${utils.ENTITY_TYPE_FILE}`\n+      : '';\n+\n+  // token balances pairs are aggregated as a string, e.g., \"100=600,101=700\"\n+  const sqlQuery = `\n+      SELECT\n+        ab.consensus_timestamp,\n+        ab.account_id,\n+        ab.balance,\n+        string_agg(tb.token_id || '=' || tb.balance, ',' ORDER BY tb.token_id) AS token_balances", "originalCommit": "e96418ca0abe964fd9c3f6e752c13d658efbec8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5NjM2Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1087#discussion_r498496362", "bodyText": "switched to json_agg with json_build_object", "author": "xin-hedera", "createdAt": "2020-10-01T20:29:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM1ODE3MQ=="}], "type": "inlineReview"}, {"oid": "6e0a1b13eed68e5ca5e19a21f9f4383e76b09b47", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6e0a1b13eed68e5ca5e19a21f9f4383e76b09b47", "message": "switch json_agg with json_build_object, order token balance / token transfer the same as the primary order\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-10-01T20:20:01Z", "type": "commit"}, {"oid": "2906e57fd4f25cef1f233b51c3b66bff70a3c568", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/2906e57fd4f25cef1f233b51c3b66bff70a3c568", "message": "rename 'token_transfers' in setup of integration test specs to 'token_transfer_list'\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-10-01T20:25:26Z", "type": "commit"}, {"oid": "80838cf574390fd71d9a4619c4aca4b8dee7f116", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/80838cf574390fd71d9a4619c4aca4b8dee7f116", "message": "Merge remote-tracking branch 'origin/master' into token-new-fields-balances-transactions-rest-api\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>\n\n# Conflicts:\n#\thedera-mirror-rest/package.json", "committedDate": "2020-10-02T15:46:06Z", "type": "commit"}]}