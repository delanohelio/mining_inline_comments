{"pr_number": 716, "pr_title": "Fixes to run in GKE", "pr_createdAt": "2020-04-27T16:04:27Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/716", "timeline": [{"oid": "826a97bb450ce00fa406164df4a4a6d3bbb9cc20", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/826a97bb450ce00fa406164df4a4a6d3bbb9cc20", "message": "Fixes to run in GKE\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-04-27T15:34:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY0OTczMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/716#discussion_r416649732", "bodyText": "Perhaps it'd be better to have these auto-generated rather than being insecure by default?", "author": "beeradb", "createdAt": "2020-04-28T14:16:29Z", "path": "charts/hedera-mirror-rest/values.yaml", "diffHunk": "@@ -10,7 +10,14 @@ affinity:\n \n annotations: {}\n \n-config: {}\n+config:\n+  hedera:\n+    mirror:\n+      rest:\n+        metrics:\n+          config:\n+            password: password\n+            username: metrics", "originalCommit": "826a97bb450ce00fa406164df4a4a6d3bbb9cc20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NzQ0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/716#discussion_r416687446", "bodyText": "I've use auto-generated passwords in public charts that I maintain before. I wouldn't recommend it as on upgrades it will auto-generate with a new secret that won't work if the application is stateful and only creates users once (like databases).\nAlso, this value is used in two places in the secret: deep in the application.yaml config and separately as metricsPassword. I'm not sure how to generate it and merge it back into the config yaml. I think hardcoded is fine and we'll just add documentation later listing all the passwords properties that should be changed (there's quite a bit and some outside our control).", "author": "steven-sheehy", "createdAt": "2020-04-28T15:02:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY0OTczMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwOTA5OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/716#discussion_r416709099", "bodyText": "One method for doing that would be to hash the secret and use it as an annotation on whatever relies on application.yml (the REST API I'm guessing?).\nhttps://sanderknape.com/2019/03/kubernetes-helm-configmaps-changes-deployments/\nAny change to the secret would cause a rolling update to any resources which referenced it. As long as they aren't stateful (like the DB example you pointed out) it should work.\nIt may make sense to do all this sort of secret management in a single pass though, if there are other places that could use love too.", "author": "beeradb", "createdAt": "2020-04-28T15:29:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY0OTczMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1NTY5MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/716#discussion_r416655691", "bodyText": "Maybe it makes sense to provide methods for ensuring the importer is operating correctly here?\nJust spitballing, but maybe one or more of the following?\n\nHow to check logs to ensure it's configured properly and is actively importing.\nWhere to look for metrics / dashboards so you can get an idea that it's operating as expected\nInfo on what bucket it is configured to use", "author": "beeradb", "createdAt": "2020-04-28T14:23:57Z", "path": "charts/hedera-mirror-importer/templates/NOTES.txt", "diffHunk": "@@ -1,20 +1 @@\n-The Hedera Mirror Importer is mainly a background service. You can get the monitoring URL by running these commands:\n-\n-{{- if contains \"NodePort\" .Values.service.type }}\n-\n-  export NODE_PORT=$(kubectl get --namespace {{ include \"hedera-mirror-importer.namespace\" . }} -o jsonpath=\"{.spec.ports[0].nodePort}\" services {{ include \"hedera-mirror-importer.fullname\" . }})\n-  export NODE_IP=$(kubectl get nodes --namespace {{ include \"hedera-mirror-importer.namespace\" . }} -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n-  echo http://$NODE_IP:$NODE_PORT\n-\n-{{- else if contains \"LoadBalancer\" .Values.service.type }}\n-\n-  export SERVICE_IP=$(kubectl get svc --namespace {{ include \"hedera-mirror-importer.namespace\" . }} {{ include \"hedera-mirror-importer.fullname\" . }} --template \"{{\"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\"}}\")\n-  echo http://$SERVICE_IP:{{ .Values.service.port }}\n-\n-{{- else if contains \"ClusterIP\" .Values.service.type }}\n-\n-  export POD_NAME=$(kubectl get pods --namespace {{ include \"hedera-mirror-importer.namespace\" . }} -l \"app.kubernetes.io/name={{ include \"hedera-mirror-importer.name\" . }},app.kubernetes.io/instance={{ .Release.Name }}\" -o jsonpath=\"{.items[0].metadata.name}\")\n-  echo \"Visit http://127.0.0.1:8080 to use your application\"\n-  kubectl --namespace {{ include \"hedera-mirror-importer.namespace\" . }} port-forward $POD_NAME 8080:80\n-\n-{{- end }}\n+The Hedera Mirror Importer is installed.", "originalCommit": "826a97bb450ce00fa406164df4a4a6d3bbb9cc20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MzM5NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/716#discussion_r416683394", "bodyText": "True, we could add a little more detail here now that we removed the service. This is a sub-chart so we don't have prometheus/grafana installed to point them to. Also, the bucket name is not guaranteed to be provided as its not present in the values.yaml by default. I can add the log command.", "author": "steven-sheehy", "createdAt": "2020-04-28T14:57:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1NTY5MQ=="}], "type": "inlineReview"}, {"oid": "554c68b9462f34e2b64e946f2671c73db6224901", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/554c68b9462f34e2b64e946f2671c73db6224901", "message": "Review feedback\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-04-28T15:40:15Z", "type": "commit"}]}