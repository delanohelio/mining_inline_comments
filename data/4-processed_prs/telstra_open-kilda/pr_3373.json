{"pr_number": 3373, "pr_title": "Protected Path Swap in Flow HS topology", "pr_createdAt": "2020-04-08T12:17:01Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3373", "timeline": [{"oid": "2cf687e36761812ed65be9ed46ff8a234e63d8e4", "url": "https://github.com/telstra/open-kilda/commit/2cf687e36761812ed65be9ed46ff8a234e63d8e4", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-08T15:04:32Z", "type": "forcePushed"}, {"oid": "6b34f64e173ef1ca27a3a4cf0e2c4825688dafcb", "url": "https://github.com/telstra/open-kilda/commit/6b34f64e173ef1ca27a3a4cf0e2c4825688dafcb", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-15T10:43:05Z", "type": "forcePushed"}, {"oid": "14c2b46782d3a99c3d14052f300750049d878612", "url": "https://github.com/telstra/open-kilda/commit/14c2b46782d3a99c3d14052f300750049d878612", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-15T12:07:58Z", "type": "forcePushed"}, {"oid": "daa6388aa305a84816b2779d7a9d58e5acaa6085", "url": "https://github.com/telstra/open-kilda/commit/daa6388aa305a84816b2779d7a9d58e5acaa6085", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-16T06:38:34Z", "type": "forcePushed"}, {"oid": "5ef1dbafb1c932f048d7d144f40a083696a9cd45", "url": "https://github.com/telstra/open-kilda/commit/5ef1dbafb1c932f048d7d144f40a083696a9cd45", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-17T08:02:25Z", "type": "forcePushed"}, {"oid": "47064822893bf53ae7be7defd97b7336027c4655", "url": "https://github.com/telstra/open-kilda/commit/47064822893bf53ae7be7defd97b7336027c4655", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-17T08:08:48Z", "type": "forcePushed"}, {"oid": "2e44bd95ca3205d7a81a83666bd9c8a61e42ab3b", "url": "https://github.com/telstra/open-kilda/commit/2e44bd95ca3205d7a81a83666bd9c8a61e42ab3b", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-17T08:55:31Z", "type": "forcePushed"}, {"oid": "21957e5994ad1241f5543365ba9897cdf0f25768", "url": "https://github.com/telstra/open-kilda/commit/21957e5994ad1241f5543365ba9897cdf0f25768", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-20T08:10:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwODE5NA==", "url": "https://github.com/telstra/open-kilda/pull/3373#discussion_r413608194", "bodyText": "commented code", "author": "niksv", "createdAt": "2020-04-23T08:15:17Z", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/bolts/FlowPathSwapHubBolt.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/* Copyright 2019 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.flowhs.bolts;\n+\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_HISTORY_BOLT;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_NB_RESPONSE_SENDER;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_PING_SENDER;\n+import static org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream.HUB_TO_SPEAKER_WORKER;\n+import static org.openkilda.wfm.topology.utils.KafkaRecordTranslator.FIELD_ID_PAYLOAD;\n+\n+import org.openkilda.floodlight.api.request.FlowSegmentRequest;\n+import org.openkilda.floodlight.api.response.SpeakerFlowSegmentResponse;\n+import org.openkilda.messaging.Message;\n+import org.openkilda.messaging.command.CommandMessage;\n+import org.openkilda.messaging.command.flow.FlowPathSwapRequest;\n+import org.openkilda.messaging.command.flow.PeriodicPingCommand;\n+import org.openkilda.persistence.PersistenceManager;\n+import org.openkilda.wfm.error.PipelineException;\n+import org.openkilda.wfm.share.flow.resources.FlowResourcesConfig;\n+import org.openkilda.wfm.share.flow.resources.FlowResourcesManager;\n+import org.openkilda.wfm.share.history.model.FlowHistoryHolder;\n+import org.openkilda.wfm.share.hubandspoke.HubBolt;\n+import org.openkilda.wfm.share.utils.KeyProvider;\n+import org.openkilda.wfm.topology.flowhs.FlowHsTopology.Stream;\n+import org.openkilda.wfm.topology.flowhs.service.FlowPathSwapHubCarrier;\n+import org.openkilda.wfm.topology.flowhs.service.FlowPathSwapService;\n+import org.openkilda.wfm.topology.utils.MessageKafkaTranslator;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import org.apache.storm.topology.OutputFieldsDeclarer;\n+import org.apache.storm.tuple.Tuple;\n+import org.apache.storm.tuple.Values;\n+\n+public class FlowPathSwapHubBolt extends HubBolt implements FlowPathSwapHubCarrier {\n+\n+    private final FlowPathSwapConfig config;\n+    private final PersistenceManager persistenceManager;\n+    private final FlowResourcesConfig flowResourcesConfig;\n+\n+    private transient FlowPathSwapService service;\n+    private String currentKey;\n+\n+    public FlowPathSwapHubBolt(FlowPathSwapConfig config, PersistenceManager persistenceManager,\n+                               FlowResourcesConfig flowResourcesConfig) {\n+        super(config);\n+\n+        this.config = config;\n+        this.persistenceManager = persistenceManager;\n+        this.flowResourcesConfig = flowResourcesConfig;\n+\n+\n+    }\n+\n+    @Override\n+    protected void init() {\n+\n+        FlowResourcesManager resourcesManager = new FlowResourcesManager(persistenceManager, flowResourcesConfig);\n+        service = new FlowPathSwapService(this, persistenceManager, config.getTransactionRetriesLimit(),\n+                config.getSpeakerCommandRetriesLimit(), resourcesManager);\n+    }\n+\n+    @Override\n+    protected void onRequest(Tuple input) throws PipelineException {\n+        currentKey = input.getStringByField(MessageKafkaTranslator.FIELD_ID_KEY);\n+        FlowPathSwapRequest payload = (FlowPathSwapRequest) input.getValueByField(FIELD_ID_PAYLOAD);\n+        service.handleRequest(currentKey, pullContext(input), payload);\n+    }\n+\n+    @Override\n+    protected void onWorkerResponse(Tuple input) {\n+        String operationKey = input.getStringByField(MessageKafkaTranslator.FIELD_ID_KEY);\n+        currentKey = KeyProvider.getParentKey(operationKey);\n+        SpeakerFlowSegmentResponse flowResponse = (SpeakerFlowSegmentResponse) input.getValueByField(FIELD_ID_PAYLOAD);\n+        service.handleAsyncResponse(currentKey, flowResponse);\n+    }\n+\n+    @Override\n+    public void onTimeout(String key, Tuple tuple) {\n+        currentKey = key;\n+        // service.handleTimeout(key);", "originalCommit": "21957e5994ad1241f5543365ba9897cdf0f25768", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzMDIzOQ==", "url": "https://github.com/telstra/open-kilda/pull/3373#discussion_r414330239", "bodyText": "+1\nIs there any reason why this code is commented out?", "author": "dpoltavets", "createdAt": "2020-04-24T06:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwODE5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzOTcxMg==", "url": "https://github.com/telstra/open-kilda/pull/3373#discussion_r415639712", "bodyText": "Fixed, thanks", "author": "timofei-durakov", "createdAt": "2020-04-27T09:03:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwODE5NA=="}], "type": "inlineReview"}, {"oid": "8d14299e0b04ea67e50bae94e2934095b2139fe4", "url": "https://github.com/telstra/open-kilda/commit/8d14299e0b04ea67e50bae94e2934095b2139fe4", "message": "Fixed commented out timeouts", "committedDate": "2020-04-27T09:01:39Z", "type": "forcePushed"}, {"oid": "33e7af779183612cb0c045abe8b6991a86da1c0f", "url": "https://github.com/telstra/open-kilda/commit/33e7af779183612cb0c045abe8b6991a86da1c0f", "message": "Protected Path Swap in Flow HS topology", "committedDate": "2020-04-27T22:28:18Z", "type": "commit"}, {"oid": "7eedf92c8194f96b9bd51568235382ef0c7fa0ba", "url": "https://github.com/telstra/open-kilda/commit/7eedf92c8194f96b9bd51568235382ef0c7fa0ba", "message": "add tests for update/swapPath retry (#3380)", "committedDate": "2020-04-27T22:28:18Z", "type": "commit"}, {"oid": "ca58d46d2a8f80da2106bed3da7c9842eccb8548", "url": "https://github.com/telstra/open-kilda/commit/ca58d46d2a8f80da2106bed3da7c9842eccb8548", "message": "Fixed commented out timeouts", "committedDate": "2020-04-27T22:34:14Z", "type": "commit"}, {"oid": "ca58d46d2a8f80da2106bed3da7c9842eccb8548", "url": "https://github.com/telstra/open-kilda/commit/ca58d46d2a8f80da2106bed3da7c9842eccb8548", "message": "Fixed commented out timeouts", "committedDate": "2020-04-27T22:34:14Z", "type": "forcePushed"}]}