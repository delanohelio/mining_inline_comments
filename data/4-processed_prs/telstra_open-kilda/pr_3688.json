{"pr_number": 3688, "pr_title": "Fix null pointer exception during producing flow dump", "pr_createdAt": "2020-08-13T15:54:42Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3688", "timeline": [{"oid": "22ccc1d32050e1f4ea70d6589597254fdfa21f8e", "url": "https://github.com/telstra/open-kilda/commit/22ccc1d32050e1f4ea70d6589597254fdfa21f8e", "message": "Fix null pointer exception during producing flow dump", "committedDate": "2020-08-13T15:53:36Z", "type": "commit"}, {"oid": "398efd4604845d7c2252a39733cdccb5b62bb868", "url": "https://github.com/telstra/open-kilda/commit/398efd4604845d7c2252a39733cdccb5b62bb868", "message": "Fix broken reroute test", "committedDate": "2020-08-14T12:15:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQwNzQ0OA==", "url": "https://github.com/telstra/open-kilda/pull/3688#discussion_r471407448", "bodyText": "nit: Is it really related to the issue?", "author": "sergii-iakovenko", "createdAt": "2020-08-17T11:11:05Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "diffHunk": "@@ -563,7 +563,7 @@ class AutoRerouteV2Spec extends HealthCheckSpecification {\n                 }\n                 sleep(500)\n             }\n-            assert northboundV2.getFlow(firstFlow.flowId).statusInfo =~ /ISL (.*) become INACTIVE because of FAIL TIMEOUT (.*)/\n+            assert northboundV2.getFlow(firstFlow.flowId).statusInfo =~ /ISL (.*) become INACTIVE(.*)/", "originalCommit": "398efd4604845d7c2252a39733cdccb5b62bb868", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQyNDQ4MQ==", "url": "https://github.com/telstra/open-kilda/pull/3688#discussion_r471424481", "bodyText": "yes... this is fix from @rtretyak. Without this fix, this test fails.", "author": "surabujin", "createdAt": "2020-08-17T11:47:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQwNzQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAyMzQ2MQ==", "url": "https://github.com/telstra/open-kilda/pull/3688#discussion_r472023461", "bodyText": "Ok", "author": "sergii-iakovenko", "createdAt": "2020-08-18T08:54:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQwNzQ0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMDQ4MQ==", "url": "https://github.com/telstra/open-kilda/pull/3688#discussion_r471410481", "bodyText": "2 questions:\n\nHow are the changes in this file related to the title \"NPE during producting flow dump\"?\nWhat benefits do these changes bring? IMHO, 2 iterators instead of an index are neither shorter nor clearer.", "author": "sergii-iakovenko", "createdAt": "2020-08-17T11:17:34Z", "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/share/mappers/FlowPathMapper.java", "diffHunk": "@@ -65,28 +68,27 @@ public PathInfoData map(FlowPath path) {\n         List<PathNodePayload> resultList = new ArrayList<>();\n \n         Flow flow = flowPath.getFlow();\n-        int srcPort = flow.isForward(flowPath) ? flow.getSrcPort() : flow.getDestPort();\n-        int destPort = flow.isForward(flowPath) ? flow.getDestPort() : flow.getSrcPort();\n-\n-        if (flowPath.getSegments().isEmpty()) {\n-            resultList.add(\n-                    new PathNodePayload(flowPath.getSrcSwitch().getSwitchId(), srcPort, destPort));\n+        FlowEndpoint ingress = FlowSideAdapter.makeIngressAdapter(flow, flowPath).getEndpoint();\n+        FlowEndpoint egress = FlowSideAdapter.makeEgressAdapter(flow, flowPath).getEndpoint();\n+\n+        List<PathSegment> pathSegments = flowPath.getSegments();\n+        Iterator<PathSegment> leftIter = pathSegments.iterator();\n+        Iterator<PathSegment> rightIter = pathSegments.iterator();\n+        if (! rightIter.hasNext()) {\n+            resultList.add(new PathNodePayload(\n+                    flowPath.getSrcSwitch().getSwitchId(), ingress.getPortNumber(), egress.getPortNumber()));\n         } else {\n-            List<PathSegment> pathSegments = flowPath.getSegments();\n-\n-            resultList.add(new PathNodePayload(flowPath.getSrcSwitch().getSwitchId(), srcPort,\n-                    pathSegments.get(0).getSrcPort()));\n-\n-            for (int i = 1; i < pathSegments.size(); i++) {\n-                PathSegment inputNode = pathSegments.get(i - 1);\n-                PathSegment outputNode = pathSegments.get(i);\n-\n-                resultList.add(new PathNodePayload(inputNode.getDestSwitch().getSwitchId(), inputNode.getDestPort(),\n-                        outputNode.getSrcPort()));\n+            PathSegment left;", "originalCommit": "398efd4604845d7c2252a39733cdccb5b62bb868", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQyNzI2Mg==", "url": "https://github.com/telstra/open-kilda/pull/3688#discussion_r471427262", "bodyText": "The only reason I touch this code is to remove call flow.isForward(flowPath) because this call produces an incorrect answer for \"extra/detached\" paths (we inject such path now into RevertResourceAllocationAction). All other changes related to this one... I have tried to make it simpler, looks like I have failed this target.\nIf you insist I will revert iteration by indexes.", "author": "surabujin", "createdAt": "2020-08-17T11:53:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMDQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAyNDM1OA==", "url": "https://github.com/telstra/open-kilda/pull/3688#discussion_r472024358", "bodyText": "Got it.", "author": "sergii-iakovenko", "createdAt": "2020-08-18T08:55:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMDQ4MQ=="}], "type": "inlineReview"}]}