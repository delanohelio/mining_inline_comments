{"pr_number": 3908, "pr_title": "add test for #3906", "pr_createdAt": "2020-12-07T10:22:24Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3908", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMjQzOA==", "url": "https://github.com/telstra/open-kilda/pull/3908#discussion_r539322438", "bodyText": "I don't like this naming since it is very narrow. Test should describe a certain situation that we are testing, more broad scenario. Right now this looks like a pin-point test that is created to test a specific defect, very low value.\nDescribe a real-life situation/use-case: System detects a 1-way ISL as a Failed ISL -> then as part of this broad test add required verifications", "author": "rtretyak", "createdAt": "2020-12-09T13:51:54Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/LinkSpec.groovy", "diffHunk": "@@ -759,13 +759,74 @@ class LinkSpec extends HealthCheckSpecification {\n             antiflap.portUp(isl.srcSwitch.dpId, isl.srcPort)\n             Wrappers.wait(discoveryInterval + WAIT_OFFSET) {\n                 def links = northbound.getAllLinks()\n-                assert islUtils.getIslInfo(links, isl.reversed).get().state == IslChangeType.DISCOVERED\n-                assert islUtils.getIslInfo(links, isl).get().state == IslChangeType.DISCOVERED\n+                assert islUtils.getIslInfo(links, isl.reversed).get().state == DISCOVERED\n+                assert islUtils.getIslInfo(links, isl).get().state == DISCOVERED\n             }\n         }\n         database.resetCosts()\n     }\n \n+    @Tidy\n+    def \"The src/dst switches are valid when isl is discovered in one direction only\"() {", "originalCommit": "74737d2cdfc2ae7db2e090fb8a1d614f8e381a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk2OTY1MA==", "url": "https://github.com/telstra/open-kilda/pull/3908#discussion_r539969650", "bodyText": "Make sense.Renamed.", "author": "andriidovhan", "createdAt": "2020-12-10T08:29:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMjQzOA=="}], "type": "inlineReview"}, {"oid": "e63af052576b56bb6c1e2ab4ef86b22b2f5104c7", "url": "https://github.com/telstra/open-kilda/commit/e63af052576b56bb6c1e2ab4ef86b22b2f5104c7", "message": "add test for #3906", "committedDate": "2020-12-10T08:29:25Z", "type": "forcePushed"}, {"oid": "28c4ff7b5ea79a866e7b538d4a9b01b0cf2e40f6", "url": "https://github.com/telstra/open-kilda/commit/28c4ff7b5ea79a866e7b538d4a9b01b0cf2e40f6", "message": "add test for #3906", "committedDate": "2020-12-10T17:09:43Z", "type": "commit"}, {"oid": "28c4ff7b5ea79a866e7b538d4a9b01b0cf2e40f6", "url": "https://github.com/telstra/open-kilda/commit/28c4ff7b5ea79a866e7b538d4a9b01b0cf2e40f6", "message": "add test for #3906", "committedDate": "2020-12-10T17:09:43Z", "type": "forcePushed"}]}