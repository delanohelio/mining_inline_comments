{"pr_number": 3964, "pr_title": "add test for #3938", "pr_createdAt": "2020-12-30T13:22:37Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3964", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgzMDM3NQ==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r563830375", "bodyText": "Will only work if the ISL is non-rtl. For rtl ISLs the flow will remain UP. You can try to bring the port down on the other end of ISL to make this faster and work regardless of rtl", "author": "rtretyak", "createdAt": "2021-01-25T15:51:21Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -298,6 +306,42 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         ]\n     }\n \n+    @Tidy\n+    @Tags(LOW_PRIORITY)\n+    def \"Info about a terminating switch is registered in flow history while rerouting\"() {\n+        given: \"An active flow\"\n+        def (Switch srcSwitch, Switch dstSwitch) = topology.activeSwitches\n+        def flow = flowHelperV2.randomFlow(srcSwitch, dstSwitch)\n+        flowHelperV2.addFlow(flow)\n+\n+        when: \"Deactivate the src switch\"\n+        def blockData = lockKeeper.knockoutSwitch(srcSwitch, RW)\n+        def swIsActive = false\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northbound.getSwitch(srcSwitch.dpId).state == SwitchChangeType.DEACTIVATED\n+        }\n+\n+        then: \"Flow goes DOWN\"", "originalCommit": "177d98662a2b6ddb0fe104731b7dbd66cbda2ec6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg1MzQ1Mw==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r570853453", "bodyText": "good catch\nI set the VIRTUAL tag.", "author": "andriidovhan", "createdAt": "2021-02-05T10:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgzMDM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ3NzU4MA==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r564477580", "bodyText": "This is a bit misleading description. We should not really try to reroute a flow when terminating switch is down. We just change its status to DOWN without attempting to find a new path. Technically it's a part of 'reroute' process, but practically we are not even trying to find a new 'route'", "author": "rtretyak", "createdAt": "2021-01-26T12:36:01Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -298,6 +306,42 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         ]\n     }\n \n+    @Tidy\n+    @Tags(LOW_PRIORITY)\n+    def \"Info about a terminating switch is registered in flow history while rerouting\"() {", "originalCommit": "177d98662a2b6ddb0fe104731b7dbd66cbda2ec6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDgxNDQ0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r570814442", "bodyText": "changed to \"Root cause is registered in flow history while rerouting\"", "author": "andriidovhan", "createdAt": "2021-02-05T08:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ3NzU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ3ODM0MQ==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r564478341", "bodyText": "when: \"Deactivate the src switch\"\nthen: \"Flow goes DOWN\"\n\nThis currently looks like the fact of switch deactivation has brought the flow down, which is not true. Only ISL failure can change the flow status", "author": "rtretyak", "createdAt": "2021-01-26T12:37:30Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -298,6 +306,42 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         ]\n     }\n \n+    @Tidy\n+    @Tags(LOW_PRIORITY)\n+    def \"Info about a terminating switch is registered in flow history while rerouting\"() {\n+        given: \"An active flow\"\n+        def (Switch srcSwitch, Switch dstSwitch) = topology.activeSwitches\n+        def flow = flowHelperV2.randomFlow(srcSwitch, dstSwitch)\n+        flowHelperV2.addFlow(flow)\n+\n+        when: \"Deactivate the src switch\"\n+        def blockData = lockKeeper.knockoutSwitch(srcSwitch, RW)\n+        def swIsActive = false\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northbound.getSwitch(srcSwitch.dpId).state == SwitchChangeType.DEACTIVATED\n+        }\n+\n+        then: \"Flow goes DOWN\"", "originalCommit": "177d98662a2b6ddb0fe104731b7dbd66cbda2ec6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg1NDAzNg==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r570854036", "bodyText": "refactored\nwhen: \"Deactivate the src switch\"\nand: \"Related ISLs are FAILED\"\nthen: \"Flow goes DOWN\"", "author": "andriidovhan", "createdAt": "2021-02-05T10:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ3ODM0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ4MTIyOA==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r564481228", "bodyText": "It's better to use switchHelper.reviveSwitch instead", "author": "rtretyak", "createdAt": "2021-01-26T12:42:32Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -298,6 +306,42 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         ]\n     }\n \n+    @Tidy\n+    @Tags(LOW_PRIORITY)\n+    def \"Info about a terminating switch is registered in flow history while rerouting\"() {\n+        given: \"An active flow\"\n+        def (Switch srcSwitch, Switch dstSwitch) = topology.activeSwitches\n+        def flow = flowHelperV2.randomFlow(srcSwitch, dstSwitch)\n+        flowHelperV2.addFlow(flow)\n+\n+        when: \"Deactivate the src switch\"\n+        def blockData = lockKeeper.knockoutSwitch(srcSwitch, RW)\n+        def swIsActive = false\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northbound.getSwitch(srcSwitch.dpId).state == SwitchChangeType.DEACTIVATED\n+        }\n+\n+        then: \"Flow goes DOWN\"\n+        Wrappers.wait(discoveryTimeout + WAIT_OFFSET) {\n+            def flowInfo = northboundV2.getFlow(flow.flowId)\n+            assert flowInfo.status == FlowState.DOWN.toString()\n+            assert flowInfo.statusInfo == \"ValidateFlowAction failed: Flow's $flow.flowId src switch is not active\"\n+        }\n+\n+        and: \"The 'Switch is not active' message is registered in flow history\"\n+        def flowHistory = northbound.getFlowHistory(flow.flowId).find { it.action == REROUTE_ACTION }\n+        assert flowHistory.payload[0].action == \"Started flow validation\"\n+        assert flowHistory.payload[1].action == \"ValidateFlowAction failed: Flow's $flow.flowId src switch is not active\"\n+        assert flowHistory.payload[2].action == REROUTE_FAIL\n+\n+        cleanup:\n+        if (!swIsActive) {\n+            lockKeeper.reviveSwitch(srcSwitch, blockData)\n+            Wrappers.wait(WAIT_OFFSET) { northbound.getSwitch(srcSwitch.dpId).state == SwitchChangeType.ACTIVATED }", "originalCommit": "177d98662a2b6ddb0fe104731b7dbd66cbda2ec6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg1NjA5Ng==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r570856096", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2021-02-05T10:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ4MTIyOA=="}], "type": "inlineReview"}, {"oid": "b34f84206331ea95810ab8fc092342d2d6063ac9", "url": "https://github.com/telstra/open-kilda/commit/b34f84206331ea95810ab8fc092342d2d6063ac9", "message": "add test for #3938", "committedDate": "2021-02-05T08:50:29Z", "type": "forcePushed"}, {"oid": "2a3ba12a3eec638118051e0eb6cf02df7e0f577a", "url": "https://github.com/telstra/open-kilda/commit/2a3ba12a3eec638118051e0eb6cf02df7e0f577a", "message": "add test for #3938", "committedDate": "2021-02-05T10:04:33Z", "type": "forcePushed"}, {"oid": "b2491403f87bfd65452dac86b471e0c61bc5f7d1", "url": "https://github.com/telstra/open-kilda/commit/b2491403f87bfd65452dac86b471e0c61bc5f7d1", "message": "add test for #3938", "committedDate": "2021-02-10T15:16:03Z", "type": "forcePushed"}, {"oid": "e3d4482af08be33f70ea87be392b925c060964bb", "url": "https://github.com/telstra/open-kilda/commit/e3d4482af08be33f70ea87be392b925c060964bb", "message": "add test for #3938", "committedDate": "2021-02-12T14:23:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTAyMjczOA==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r595022738", "bodyText": "It will work as it is now, but it's only because of our current setup.\n\nYou can explicitly pick switches that do not support rtl, so that this behavior is strictly defined\nor You can force a flow reroute by bringing some port down on the path. This way you will no longer be dependent on whether isls are rtl or not", "author": "rtretyak", "createdAt": "2021-03-16T10:05:28Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -298,6 +307,46 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         ]\n     }\n \n+    @Tidy\n+    @Tags([VIRTUAL, LOW_PRIORITY])\n+    //it doesn't work on the hardware env due to the 'round trip latency' feature", "originalCommit": "e3d4482af08be33f70ea87be392b925c060964bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTA3OTg5Mw==", "url": "https://github.com/telstra/open-kilda/pull/3964#discussion_r595079893", "bodyText": "agree, refactored.\nthe first option was implemented", "author": "andriidovhan", "createdAt": "2021-03-16T11:25:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTAyMjczOA=="}], "type": "inlineReview"}, {"oid": "97bed9ce642d47aeb72d90afb49525671dfc24e8", "url": "https://github.com/telstra/open-kilda/commit/97bed9ce642d47aeb72d90afb49525671dfc24e8", "message": "add test for #3938", "committedDate": "2021-03-16T11:24:21Z", "type": "forcePushed"}, {"oid": "b09feda457a12aedf445c28778440e088b9db4b4", "url": "https://github.com/telstra/open-kilda/commit/b09feda457a12aedf445c28778440e088b9db4b4", "message": "add test for #3938", "committedDate": "2021-03-24T09:28:10Z", "type": "commit"}, {"oid": "b09feda457a12aedf445c28778440e088b9db4b4", "url": "https://github.com/telstra/open-kilda/commit/b09feda457a12aedf445c28778440e088b9db4b4", "message": "add test for #3938", "committedDate": "2021-03-24T09:28:10Z", "type": "forcePushed"}]}