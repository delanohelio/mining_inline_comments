{"pr_number": 3521, "pr_title": "Repripritize reroute requests", "pr_createdAt": "2020-06-03T13:36:12Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3521", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU3NzkxNg==", "url": "https://github.com/telstra/open-kilda/pull/3521#discussion_r434577916", "bodyText": "What if we have the same bandwidths. Shouldn't we then compare by creation time?", "author": "dpoltavets", "createdAt": "2020-06-03T13:45:01Z", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteQueueService.java", "diffHunk": "@@ -228,15 +230,31 @@ public int compare(FlowThrottlingData throttlingDataA, FlowThrottlingData thrott\n             int priorityB = throttlingDataB.getPriority() == null ? defaultFlowPriority : throttlingDataB.getPriority();\n             Instant timeCreateA = throttlingDataA.getTimeCreate();\n             Instant timeCreateB = throttlingDataB.getTimeCreate();\n+            PathComputationStrategy pathComputationStrategyA = throttlingDataA.getPathComputationStrategy();\n+            PathComputationStrategy pathComputationStrategyB = throttlingDataB.getPathComputationStrategy();\n \n-            if (priorityA == priorityB && (timeCreateA != null || timeCreateB != null)) {\n-                if (timeCreateA == null) {\n-                    return -1;\n+            if (priorityA == priorityB) {\n+                if (pathComputationStrategyA == COST_AND_AVAILABLE_BANDWIDTH\n+                        && pathComputationStrategyB == COST_AND_AVAILABLE_BANDWIDTH) {\n+                    return Long.compare(throttlingDataB.getBandwidth(), throttlingDataA.getBandwidth());", "originalCommit": "12df6fbe479093a1f199e39f8e0ba71ed859431a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwNjM3OA==", "url": "https://github.com/telstra/open-kilda/pull/3521#discussion_r434606378", "bodyText": "Fixed", "author": "rozdy", "createdAt": "2020-06-03T14:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU3NzkxNg=="}], "type": "inlineReview"}, {"oid": "36e03f04e6b41cc40fd2b3d7952c4dfb3803b907", "url": "https://github.com/telstra/open-kilda/commit/36e03f04e6b41cc40fd2b3d7952c4dfb3803b907", "message": "Repripritize reroute requests\n\nFlows with COST_AND_AVAILABLE_BANDWIDTH path computation strategy should be rerouted from low to high bandwidth", "committedDate": "2020-06-03T14:19:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgzOTg4Nw==", "url": "https://github.com/telstra/open-kilda/pull/3521#discussion_r435839887", "bodyText": "As for me it should be separate comparator joined to existing via thenComparing.", "author": "surabujin", "createdAt": "2020-06-05T10:42:31Z", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteQueueService.java", "diffHunk": "@@ -228,15 +230,35 @@ public int compare(FlowThrottlingData throttlingDataA, FlowThrottlingData thrott\n             int priorityB = throttlingDataB.getPriority() == null ? defaultFlowPriority : throttlingDataB.getPriority();\n             Instant timeCreateA = throttlingDataA.getTimeCreate();\n             Instant timeCreateB = throttlingDataB.getTimeCreate();\n+            PathComputationStrategy pathComputationStrategyA = throttlingDataA.getPathComputationStrategy();", "originalCommit": "36e03f04e6b41cc40fd2b3d7952c4dfb3803b907", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MTQwNg==", "url": "https://github.com/telstra/open-kilda/pull/3521#discussion_r435961406", "bodyText": "Reworked", "author": "rozdy", "createdAt": "2020-06-05T14:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgzOTg4Nw=="}], "type": "inlineReview"}, {"oid": "a2b3902244b65c298a996ddef018992e9ec991b9", "url": "https://github.com/telstra/open-kilda/commit/a2b3902244b65c298a996ddef018992e9ec991b9", "message": "Repripritize reroute requests\n\nFlows with COST_AND_AVAILABLE_BANDWIDTH path computation strategy should be rerouted from low to high bandwidth", "committedDate": "2020-06-05T14:26:55Z", "type": "forcePushed"}, {"oid": "d107aa2273ceb7ca20b200476a9a2e1f50f6df7d", "url": "https://github.com/telstra/open-kilda/commit/d107aa2273ceb7ca20b200476a9a2e1f50f6df7d", "message": "Repripritize reroute requests\n\nFlows with COST_AND_AVAILABLE_BANDWIDTH path computation strategy should be rerouted from low to high bandwidth", "committedDate": "2020-06-09T11:27:01Z", "type": "forcePushed"}, {"oid": "95efb54ad8d4adb9a9b1c1d4a6f27a69cb533473", "url": "https://github.com/telstra/open-kilda/commit/95efb54ad8d4adb9a9b1c1d4a6f27a69cb533473", "message": "Repripritize reroute requests\n\nFlows with COST_AND_AVAILABLE_BANDWIDTH path computation strategy should be rerouted from low to high bandwidth", "committedDate": "2020-06-09T13:04:44Z", "type": "commit"}, {"oid": "95efb54ad8d4adb9a9b1c1d4a6f27a69cb533473", "url": "https://github.com/telstra/open-kilda/commit/95efb54ad8d4adb9a9b1c1d4a6f27a69cb533473", "message": "Repripritize reroute requests\n\nFlows with COST_AND_AVAILABLE_BANDWIDTH path computation strategy should be rerouted from low to high bandwidth", "committedDate": "2020-06-09T13:04:44Z", "type": "forcePushed"}]}