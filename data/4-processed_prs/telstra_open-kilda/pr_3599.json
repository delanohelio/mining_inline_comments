{"pr_number": 3599, "pr_title": "Change format of History records in DB from ISO to epoch", "pr_createdAt": "2020-07-06T13:47:52Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3599", "timeline": [{"oid": "0763ef93feb1012c67435e8d1290e3ccb177ca8a", "url": "https://github.com/telstra/open-kilda/commit/0763ef93feb1012c67435e8d1290e3ccb177ca8a", "message": "Change forman of History records in DB from ISO to epoch", "committedDate": "2020-07-06T14:25:53Z", "type": "forcePushed"}, {"oid": "f6501c076338b586c93f4d8b4eed592eabc0ef03", "url": "https://github.com/telstra/open-kilda/commit/f6501c076338b586c93f4d8b4eed592eabc0ef03", "message": "Change forman of History records in DB from ISO to epoch", "committedDate": "2020-07-06T14:50:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMjUzNw==", "url": "https://github.com/telstra/open-kilda/pull/3599#discussion_r450722537", "bodyText": "I'd take precautions - like \"toInteger(n.timestamp) == n.timestamp\" in the \"where\" section.", "author": "sergii-iakovenko", "createdAt": "2020-07-07T09:13:37Z", "path": "services/src/neo4j/migrations/1.25-change-type-of-flow-event-timestamp/rollback.cql", "diffHunk": "@@ -0,0 +1,3 @@\n+MATCH (n:flow_event) set n.timestamp=apoc.date.toISO8601(n.timestamp)", "originalCommit": "f6501c076338b586c93f4d8b4eed592eabc0ef03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc0Mzc3Mw==", "url": "https://github.com/telstra/open-kilda/pull/3599#discussion_r450743773", "bodyText": "ok. will add", "author": "niksv", "createdAt": "2020-07-07T09:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMjUzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDczMzQzNA==", "url": "https://github.com/telstra/open-kilda/pull/3599#discussion_r450733434", "bodyText": "I'd add test for the case with 0 millisecond part of the timestamp.", "author": "sergii-iakovenko", "createdAt": "2020-07-07T09:31:52Z", "path": "src-java/kilda-persistence-neo4j/src/test/java/org/openkilda/persistence/repositories/impl/Neo4jFlowEventRepositoryTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.persistence.repositories.impl;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.openkilda.model.history.FlowEvent;\n+import org.openkilda.persistence.Neo4jBasedTest;\n+import org.openkilda.persistence.repositories.history.FlowEventRepository;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Neo4jFlowEventRepositoryTest extends Neo4jBasedTest {\n+\n+    private static final String FLOW_1 = \"FLOW_1\";\n+    private static final String ACTION_1 = \"ACTION_1\";\n+    private static final String ACTION_2 = \"ACTION_2\";\n+    private static final String ACTION_3 = \"ACTION_3\";\n+    private static final Instant TIME_1 = Instant.parse(\"2020-07-06T11:04:41Z\");\n+    private static final Instant TIME_2 = Instant.parse(\"2020-07-06T11:04:41.482Z\");\n+    private static final Instant TIME_3 = Instant.parse(\"2020-07-06T11:04:42.321Z\");\n+\n+    private static FlowEventRepository repository;\n+\n+    @BeforeClass\n+    public static void setUp() {\n+        repository = new Neo4jFlowEventRepository(neo4jSessionFactory, txManager);\n+    }\n+\n+    @Test\n+    public void findByFlowIdAndTimeFrameOrderTest() {", "originalCommit": "f6501c076338b586c93f4d8b4eed592eabc0ef03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc0MzM1MQ==", "url": "https://github.com/telstra/open-kilda/pull/3599#discussion_r450743351", "bodyText": "It's already there.  TIME_1 is a timestamp with 0 milliseconds. On previous code version this test  fails.", "author": "niksv", "createdAt": "2020-07-07T09:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDczMzQzNA=="}], "type": "inlineReview"}, {"oid": "516fd3fd3cbdb59f0a89fa6c27fe12c345e5d78c", "url": "https://github.com/telstra/open-kilda/commit/516fd3fd3cbdb59f0a89fa6c27fe12c345e5d78c", "message": "Change forman of History records in DB from ISO to epoch", "committedDate": "2020-07-07T10:17:42Z", "type": "forcePushed"}, {"oid": "7b2c371fa68e58007c45628da169b8ead18728f4", "url": "https://github.com/telstra/open-kilda/commit/7b2c371fa68e58007c45628da169b8ead18728f4", "message": "Change forman of History records in DB from ISO to epoch", "committedDate": "2020-07-08T06:52:43Z", "type": "commit"}, {"oid": "7b2c371fa68e58007c45628da169b8ead18728f4", "url": "https://github.com/telstra/open-kilda/commit/7b2c371fa68e58007c45628da169b8ead18728f4", "message": "Change forman of History records in DB from ISO to epoch", "committedDate": "2020-07-08T06:52:43Z", "type": "forcePushed"}]}