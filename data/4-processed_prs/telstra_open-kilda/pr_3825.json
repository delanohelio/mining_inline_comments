{"pr_number": 3825, "pr_title": "check logicalPort in bfdSpec", "pr_createdAt": "2020-11-04T11:17:47Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3825", "timeline": [{"oid": "fe599324ff50124720f0aa05c2b5d3721484062f", "url": "https://github.com/telstra/open-kilda/commit/fe599324ff50124720f0aa05c2b5d3721484062f", "message": "check logicalPort in bfdSpec", "committedDate": "2020-11-04T16:39:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg1OTU0OA==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517859548", "bodyText": "should be read from config", "author": "rtretyak", "createdAt": "2020-11-05T08:11:26Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -31,8 +35,12 @@ Main purpose is to detect ISL failure on switch level, which is times faster tha\n controller-involved discovery mechanism\"\"\")\n @Tags([HARDWARE])\n class BfdSpec extends HealthCheckSpecification {\n+    @Autowired\n+    GrpcService grpc\n     @Shared\n     BfdProperties defaultBfdProps = new BfdProperties(350, (short)3)\n+    @Shared\n+    Integer bfdLogPortDelta = 1000", "originalCommit": "fe599324ff50124720f0aa05c2b5d3721484062f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk4MTAzNA==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517981034", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2020-11-05T11:29:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg1OTU0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjAxMQ==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517956011", "bodyText": "def swAddress = northbound.getSwitch(it.dpId).address and remove L85-86", "author": "rtretyak", "createdAt": "2020-11-05T10:45:27Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -71,6 +79,25 @@ class BfdSpec extends HealthCheckSpecification {\n             }\n         }\n \n+        and: \"BFD logical ports are created\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def dstSwLogPort = isl.dstPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        def dstSwitchAddress = northbound.getSwitch(isl.dstSwitch.dpId).address\n+        [isl.srcSwitch, isl.dstSwitch].each { sw ->\n+            def swAddress = sw.dpId == isl.srcSwitch.dpId ? srcSwitchAddress : dstSwitchAddress", "originalCommit": "fe599324ff50124720f0aa05c2b5d3721484062f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk3MjEyNw==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517972127", "bodyText": "I would like to leave it as is.\nThese variables are reused in L158 and L165\nIt allows us to reduce the number of requests to northbound.", "author": "andriidovhan", "createdAt": "2020-11-05T11:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk4OTIxMg==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517989212", "bodyText": "ah, didn't notice", "author": "rtretyak", "createdAt": "2020-11-05T11:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjUwNA==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517956504", "bodyText": "def swLogPort = swPort + bfdLogPortDelta and remove L83-84", "author": "rtretyak", "createdAt": "2020-11-05T10:46:16Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -71,6 +79,25 @@ class BfdSpec extends HealthCheckSpecification {\n             }\n         }\n \n+        and: \"BFD logical ports are created\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def dstSwLogPort = isl.dstPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        def dstSwitchAddress = northbound.getSwitch(isl.dstSwitch.dpId).address\n+        [isl.srcSwitch, isl.dstSwitch].each { sw ->\n+            def swAddress = sw.dpId == isl.srcSwitch.dpId ? srcSwitchAddress : dstSwitchAddress\n+            def swPort = sw.dpId == isl.srcSwitch.dpId ? isl.srcPort : isl.dstPort\n+            def swLogPort = sw.dpId == isl.srcSwitch.dpId ? srcSwLogPort : dstSwLogPort", "originalCommit": "fe599324ff50124720f0aa05c2b5d3721484062f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2OTg3Ng==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517969876", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2020-11-05T11:09:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1NjUwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1OTUwMw==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517959503", "bodyText": "please do #3754 of full ticket url. Searching project by just a number is painful", "author": "rtretyak", "createdAt": "2020-11-05T10:51:04Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/BfdSpec.groovy", "diffHunk": "@@ -248,6 +290,24 @@ class BfdSpec extends HealthCheckSpecification {\n             assert northbound.getLink(isl.reversed).state == IslChangeType.FAILED\n         }\n \n+        and: \"BFD logical ports are deleted\"\n+        when: \"Get isl source port\"\n+        def srcSwLogPort = isl.srcPort + bfdLogPortDelta\n+        def srcSwitchAddress = northbound.getSwitch(isl.srcSwitch.dpId).address\n+        grpc.getSwitchLogicalPortConfig(srcSwitchAddress, srcSwLogPort)\n+\n+        then: \"Human readable error is returned, because it was deleted while removing BFD session.\"\n+        def e = thrown(HttpServerErrorException)  // issue 3754", "originalCommit": "fe599324ff50124720f0aa05c2b5d3721484062f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2OTk5NA==", "url": "https://github.com/telstra/open-kilda/pull/3825#discussion_r517969994", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2020-11-05T11:09:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk1OTUwMw=="}], "type": "inlineReview"}, {"oid": "3a43ce40f37d8b33d1bcf72a0369e0f43a0d3044", "url": "https://github.com/telstra/open-kilda/commit/3a43ce40f37d8b33d1bcf72a0369e0f43a0d3044", "message": "check logicalPort in bfdSpec", "committedDate": "2020-11-05T11:30:53Z", "type": "commit"}, {"oid": "3a43ce40f37d8b33d1bcf72a0369e0f43a0d3044", "url": "https://github.com/telstra/open-kilda/commit/3a43ce40f37d8b33d1bcf72a0369e0f43a0d3044", "message": "check logicalPort in bfdSpec", "committedDate": "2020-11-05T11:30:53Z", "type": "forcePushed"}]}