{"pr_number": 3096, "pr_title": "Supply most tests with comprehensive cleanup and mark them as @Tidy", "pr_createdAt": "2020-01-06T12:52:15Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3096", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxNjA1NA==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365716054", "bodyText": "as for me \"Cleanup:  is needless in the description", "author": "andriidovhan", "createdAt": "2020-01-13T09:52:55Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/DefaultFlowV2Spec.groovy", "diffHunk": "@@ -182,7 +187,8 @@ class DefaultFlowV2Spec extends HealthCheckSpecification {\n port=$defaultFlow2.source.portNumber vlan=0, existing flow '$defaultFlow1.flowId' \\\n source: switch=$defaultFlow1.source.switchId port=$defaultFlow1.source.portNumber vlan=0\"\n \n-        and: \"Cleanup: Delete the flow\"\n+        cleanup: \"Cleanup: Delete the flow\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczMjYxMg==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365732612", "bodyText": "revert -> Revert", "author": "andriidovhan", "createdAt": "2020-01-13T10:30:18Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/MultiRerouteSpec.groovy", "diffHunk": "@@ -78,7 +80,7 @@ class MultiRerouteSpec extends HealthCheckSpecification {\n             assert it.availableBandwidth >= 0\n         }\n \n-        and: \"Cleanup: revert system to original state\"\n+        cleanup: \"revert system to original state\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczMzkyMQ==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365733921", "bodyText": "\"Cleanup:  is needless in description", "author": "andriidovhan", "createdAt": "2020-01-13T10:33:15Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "diffHunk": "@@ -132,12 +134,13 @@ class PinnedFlowV2Spec extends HealthCheckSpecification {\n             assert pathHelper.convert(northbound.getFlowPath(flow.flowId)) == newPath\n         }\n \n-        and: \"Cleanup: revert system to original state\"\n+        cleanup: \"Cleanup: revert system to original state\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTExOA==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735118", "bodyText": "cleanup is going to fail when assumeTrue is failed\nlet it be for now(it is not critical issue)", "author": "andriidovhan", "createdAt": "2020-01-13T10:36:01Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "diffHunk": "@@ -173,7 +180,7 @@ class PinnedFlowV2Spec extends HealthCheckSpecification {\n         errorDetails.errorMessage == \"Could not update flow\"\n         errorDetails.errorDescription == \"Flow flags are not valid, unable to process pinned protected flow\"\n \n-        and: \"Cleanup: Delete the flow\"\n+        cleanup: \"Cleanup: Delete the flow\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTMxMw==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735313", "bodyText": "\"Cleanup: is needless in description", "author": "andriidovhan", "createdAt": "2020-01-13T10:36:32Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PinnedFlowV2Spec.groovy", "diffHunk": "@@ -173,7 +180,7 @@ class PinnedFlowV2Spec extends HealthCheckSpecification {\n         errorDetails.errorMessage == \"Could not update flow\"\n         errorDetails.errorDescription == \"Flow flags are not valid, unable to process pinned protected flow\"\n \n-        and: \"Cleanup: Delete the flow\"\n+        cleanup: \"Cleanup: Delete the flow\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTU1Nw==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735557", "bodyText": "\"Cleanup: is needless in description", "author": "andriidovhan", "createdAt": "2020-01-13T10:37:08Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "diffHunk": "@@ -302,7 +318,7 @@ class ProtectedPathV2Spec extends HealthCheckSpecification {\n         newCurrentProtectedPath != currentProtectedPath\n         Wrappers.wait(WAIT_OFFSET) { assert northbound.getFlowStatus(flow.flowId).status == FlowState.UP }\n \n-        and: \"Cleanup: revert system to original state\"\n+        cleanup: \"Cleanup: revert system to original state\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNTY3MA==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365735670", "bodyText": "\"Cleanup: is needless in the description", "author": "andriidovhan", "createdAt": "2020-01-13T10:37:27Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "diffHunk": "@@ -428,10 +453,12 @@ class ProtectedPathV2Spec extends HealthCheckSpecification {\n         errorDetails.errorDescription == \"Not enough bandwidth or no path found. \" +\n                 \"Couldn't find non overlapping protected path\"\n \n-        and: \"Cleanup: restore available bandwidth\"\n+        cleanup: \"Cleanup: restore available bandwidth\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNjAwNw==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365736007", "bodyText": "'\"Cleanup: delete' -> '\"Delete '", "author": "andriidovhan", "createdAt": "2020-01-13T10:38:15Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathV2Spec.groovy", "diffHunk": "@@ -490,11 +518,12 @@ class ProtectedPathV2Spec extends HealthCheckSpecification {\n         database.getTransitVlans(flowInfo.forwardPathId, flowInfo.reversePathId).size() == 1\n         database.getTransitVlans(flowInfo.protectedForwardPathId, flowInfo.protectedReversePathId).size() == 1\n \n-        and: \"Cleanup: delete the flow and restore available bandwidth\"\n+        cleanup: \"Cleanup: delete the flow and restore available bandwidth\"", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTczNjYwOA==", "url": "https://github.com/telstra/open-kilda/pull/3096#discussion_r365736608", "bodyText": "unused import", "author": "andriidovhan", "createdAt": "2020-01-13T10:39:32Z", "path": "services/src/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/grpc/LicenseSpec.groovy", "diffHunk": "@@ -1,5 +1,6 @@\n package org.openkilda.functionaltests.spec.grpc\n \n+import org.openkilda.functionaltests.extension.failfast.Tidy", "originalCommit": "1dacb1d4444ffd32acc8e1c899a3b9f22bcf4da6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2735a3a5c62e163d7763718bd7ba92bb42169c8f", "url": "https://github.com/telstra/open-kilda/commit/2735a3a5c62e163d7763718bd7ba92bb42169c8f", "message": "Supply most tests with comprehensive cleanup and mark them as @Tidy\n\n- also update 'failfast' section of the readme file", "committedDate": "2020-01-15T14:44:43Z", "type": "forcePushed"}, {"oid": "ae2c8b2ebaace5e6054d497829bb5113312dc0b5", "url": "https://github.com/telstra/open-kilda/commit/ae2c8b2ebaace5e6054d497829bb5113312dc0b5", "message": "Supply most tests with comprehensive cleanup and mark them as @Tidy\n\n- also update 'failfast' section of the readme file", "committedDate": "2020-02-04T10:35:01Z", "type": "forcePushed"}, {"oid": "b8fa264f90c3085dd26d5a21d00157bc25b10c1f", "url": "https://github.com/telstra/open-kilda/commit/b8fa264f90c3085dd26d5a21d00157bc25b10c1f", "message": "Supply most tests with comprehensive cleanup and mark them as @Tidy\n\n- also update 'failfast' section of the readme file", "committedDate": "2020-02-04T10:38:41Z", "type": "commit"}, {"oid": "b8fa264f90c3085dd26d5a21d00157bc25b10c1f", "url": "https://github.com/telstra/open-kilda/commit/b8fa264f90c3085dd26d5a21d00157bc25b10c1f", "message": "Supply most tests with comprehensive cleanup and mark them as @Tidy\n\n- also update 'failfast' section of the readme file", "committedDate": "2020-02-04T10:38:41Z", "type": "forcePushed"}]}