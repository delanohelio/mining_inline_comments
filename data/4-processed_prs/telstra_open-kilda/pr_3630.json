{"pr_number": 3630, "pr_title": "Minor test adjustments", "pr_createdAt": "2020-07-14T10:04:16Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3630", "timeline": [{"oid": "bc79fbe89e1dacf95fff4ce23c9dbc84273d6071", "url": "https://github.com/telstra/open-kilda/commit/bc79fbe89e1dacf95fff4ce23c9dbc84273d6071", "message": "Minor test adjustments", "committedDate": "2020-07-14T12:20:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5MTYyNg==", "url": "https://github.com/telstra/open-kilda/pull/3630#discussion_r455591626", "bodyText": "@Tidy?", "author": "andriidovhan", "createdAt": "2020-07-16T08:01:06Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/resilience/FloodlightKafkaConnectionSpec.groovy", "diffHunk": "@@ -104,6 +104,7 @@ class FloodlightKafkaConnectionSpec extends HealthCheckSpecification {\n     def \"System can detect switch changes if they happen while Floodlight was disconnected after it reconnects\"() {", "originalCommit": "bc79fbe89e1dacf95fff4ce23c9dbc84273d6071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMxOTUxMA==", "url": "https://github.com/telstra/open-kilda/pull/3630#discussion_r456319510", "bodyText": "done", "author": "rtretyak", "createdAt": "2020-07-17T09:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5MTYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5NTg1OQ==", "url": "https://github.com/telstra/open-kilda/pull/3630#discussion_r455595859", "bodyText": "how do we know that floodlight is available again? probably we should add extra check like assert northbound.activeSwitches.size() == topology.activeSwitches.size()", "author": "andriidovhan", "createdAt": "2020-07-16T08:05:27Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/resilience/FloodlightKafkaConnectionSpec.groovy", "diffHunk": "@@ -121,7 +123,8 @@ class FloodlightKafkaConnectionSpec extends HealthCheckSpecification {\n             assert islUtils.getIslInfo(isls, isl.reversed).get().state == IslChangeType.FAILED\n         }\n \n-        and: \"Cleanup: restore the broken link\"\n+        cleanup:\n+        regionsOut && regions.each { lockKeeper.reviveFloodlight(it) }", "originalCommit": "bc79fbe89e1dacf95fff4ce23c9dbc84273d6071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMxOTU0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3630#discussion_r456319542", "bodyText": "done", "author": "rtretyak", "createdAt": "2020-07-17T09:09:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5NTg1OQ=="}], "type": "inlineReview"}, {"oid": "0b65ed28400164abc4378d225fb7062b152e485a", "url": "https://github.com/telstra/open-kilda/commit/0b65ed28400164abc4378d225fb7062b152e485a", "message": "Minor test adjustments", "committedDate": "2020-07-17T09:09:38Z", "type": "commit"}, {"oid": "0b65ed28400164abc4378d225fb7062b152e485a", "url": "https://github.com/telstra/open-kilda/commit/0b65ed28400164abc4378d225fb7062b152e485a", "message": "Minor test adjustments", "committedDate": "2020-07-17T09:09:38Z", "type": "forcePushed"}]}