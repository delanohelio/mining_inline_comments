{"pr_number": 3340, "pr_title": "add tests for grpc stats in opentsdb", "pr_createdAt": "2020-03-27T12:51:23Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3340", "timeline": [{"oid": "ea7fb13e5aeae3581df3700188f004b7174e6811", "url": "https://github.com/telstra/open-kilda/commit/ea7fb13e5aeae3581df3700188f004b7174e6811", "message": "add tests for grpc stats in opentsdb", "committedDate": "2020-03-30T10:19:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMTY3Mw==", "url": "https://github.com/telstra/open-kilda/pull/3340#discussion_r401531673", "bodyText": "you can search for it.manufacturer == \"Noviflow Inc.\" if you want noviflow switches. Also, I think it makes sense to pick it.hardware + it.software for uniqueness, since we can have same hw model but with different firmware and most likely would like to test them both", "author": "rtretyak", "createdAt": "2020-04-01T11:02:03Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/stats/OpenTsdbSpec.groovy", "diffHunk": "@@ -57,7 +57,29 @@ class OpenTsdbSpec extends HealthCheckSpecification {\n                  [[cookieHex: String.format(\"0x%X\", DefaultRule.VERIFICATION_BROADCAST_RULE.cookie)]]].combinations())\n     }\n \n+    @Unroll(\"GRPC stats are being logged for metric:#metric, tags:#tags\")\n+    @Tags([HARDWARE, SMOKE_SWITCHES])\n+    def \"GRPC stats are being logged\"(metric, tags) {\n+        expect: \"At least 1 result in the past 10 minutes\"\n+        otsdb.query(10.minutes.ago, metricPrefix + metric, tags).dps.size() > 0\n+\n+        where:\n+        [metric, tags] << (\n+                [[\"switch.packet-in.total-packets\", \"switch.packet-in.total-packets.dataplane\",\n+                  \"switch.packet-in.no-match.packets\", \"switch.packet-in.apply-action.packets\",\n+                  \"switch.packet-in.apply-action.packets\", \"switch.packet-in.invalid-ttl.packets\",\n+                  \"switch.packet-in.action-set.packets\", \"switch.packet-in.group.packets\",\n+                  \"switch.packet-in.packet-out.packets\", \"switch.packet-out.total-packets.dataplane\",\n+                  \"switch.packet-out.total-packets.host\", \"switch.packet-out.eth0-interface-up\"],\n+                 noviflowSwitches.collect { [switchid: it.switchId.toOtsdFormat()] }].combinations()\n+        )\n+    }\n+\n     def getUniqueSwitches() {\n         topology.activeSwitches.unique { it.ofVersion }\n     }\n+\n+    def getNoviflowSwitches() {\n+        northbound.activeSwitches.findAll { it.description =~ /NW[0-9]+.([0-9].[0-9])/ }.unique { it.hardware }", "originalCommit": "ea7fb13e5aeae3581df3700188f004b7174e6811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgzNTg3MQ==", "url": "https://github.com/telstra/open-kilda/pull/3340#discussion_r402835871", "bodyText": "I can't agree more", "author": "andriidovhan", "createdAt": "2020-04-03T08:34:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMTY3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMjA5OA==", "url": "https://github.com/telstra/open-kilda/pull/3340#discussion_r401532098", "bodyText": "Can be Tidy", "author": "rtretyak", "createdAt": "2020-04-01T11:02:54Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/stats/OpenTsdbSpec.groovy", "diffHunk": "@@ -57,7 +57,29 @@ class OpenTsdbSpec extends HealthCheckSpecification {\n                  [[cookieHex: String.format(\"0x%X\", DefaultRule.VERIFICATION_BROADCAST_RULE.cookie)]]].combinations())\n     }\n \n+    @Unroll(\"GRPC stats are being logged for metric:#metric, tags:#tags\")\n+    @Tags([HARDWARE, SMOKE_SWITCHES])", "originalCommit": "ea7fb13e5aeae3581df3700188f004b7174e6811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgzMzM2Ng==", "url": "https://github.com/telstra/open-kilda/pull/3340#discussion_r402833366", "bodyText": "done", "author": "andriidovhan", "createdAt": "2020-04-03T08:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMjA5OA=="}], "type": "inlineReview"}, {"oid": "13746311aa9110af0bd5da9d2eeca1509f1a657a", "url": "https://github.com/telstra/open-kilda/commit/13746311aa9110af0bd5da9d2eeca1509f1a657a", "message": "add tests for grpc stats in opentsdb", "committedDate": "2020-04-03T08:36:02Z", "type": "forcePushed"}, {"oid": "f52d0f2b04e89e596c691ce8754070de696f2bdc", "url": "https://github.com/telstra/open-kilda/commit/f52d0f2b04e89e596c691ce8754070de696f2bdc", "message": "add tests for grpc stats in opentsdb", "committedDate": "2020-04-03T12:16:51Z", "type": "commit"}, {"oid": "f52d0f2b04e89e596c691ce8754070de696f2bdc", "url": "https://github.com/telstra/open-kilda/commit/f52d0f2b04e89e596c691ce8754070de696f2bdc", "message": "add tests for grpc stats in opentsdb", "committedDate": "2020-04-03T12:16:51Z", "type": "forcePushed"}]}