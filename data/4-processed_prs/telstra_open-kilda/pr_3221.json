{"pr_number": 3221, "pr_title": "improve MultitableFlowsSpec", "pr_createdAt": "2020-02-19T10:14:20Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3221", "timeline": [{"oid": "cc311e71198b81a8e7f5488f8f998960185763ba", "url": "https://github.com/telstra/open-kilda/commit/cc311e71198b81a8e7f5488f8f998960185763ba", "message": "improve MultitableFlowsSpec", "committedDate": "2020-02-19T11:12:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ5MDY2NQ==", "url": "https://github.com/telstra/open-kilda/pull/3221#discussion_r382490665", "bodyText": "I don't really follow how desired path is connected with this line. So all paths may have a protected path available, but there are no guarantees that the picked desiredPath will have a suitable protected path", "author": "rtretyak", "createdAt": "2020-02-21T09:53:33Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/multitable/MultitableFlowsSpec.groovy", "diffHunk": "@@ -365,11 +365,12 @@ mode with existing flows and hold flows of different table-mode types\"() {\n         List<PathNode> desiredPath = null\n         List<Switch> involvedSwitches = null\n         def switchPair = topologyHelper.allNotNeighboringSwitchPairs.collectMany { [it, it.reversed] }.find { pair ->\n-            desiredPath = pair.paths.find { path ->\n-                involvedSwitches = pathHelper.getInvolvedSwitches(path)\n-                involvedSwitches.size() == 3 &&\n-                        involvedSwitches.every { it.features.contains(SwitchFeature.MULTI_TABLE) }\n+            def allPaths = pair.paths.findAll { path ->\n+                pathHelper.getInvolvedSwitches(path).every { it.features.contains(SwitchFeature.MULTI_TABLE) }\n             }\n+            desiredPath = allPaths.find { pathHelper.getInvolvedSwitches(it).size() == 3 }\n+            // make sure that alternative path for protected path is available\n+            allPaths.unique(false) { a, b -> a.intersect(b) == [] ? 1 : 0 }.size() >= 2", "originalCommit": "cc311e71198b81a8e7f5488f8f998960185763ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU1ODAyMg==", "url": "https://github.com/telstra/open-kilda/pull/3221#discussion_r382558022", "bodyText": "can't agree more.\nfixed", "author": "andriidovhan", "createdAt": "2020-02-21T12:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ5MDY2NQ=="}], "type": "inlineReview"}, {"oid": "0da871e5b812e7a778f4f62125133a40d96999db", "url": "https://github.com/telstra/open-kilda/commit/0da871e5b812e7a778f4f62125133a40d96999db", "message": "improve MultitableFlowsSpec", "committedDate": "2020-02-21T12:33:48Z", "type": "commit"}, {"oid": "0da871e5b812e7a778f4f62125133a40d96999db", "url": "https://github.com/telstra/open-kilda/commit/0da871e5b812e7a778f4f62125133a40d96999db", "message": "improve MultitableFlowsSpec", "committedDate": "2020-02-21T12:33:48Z", "type": "forcePushed"}]}