{"pr_number": 3712, "pr_title": "Per ISL BFD properties", "pr_createdAt": "2020-09-06T13:33:15Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3712", "timeline": [{"oid": "a7810deb56c18a26e2d355b61ee200b7b2ba737c", "url": "https://github.com/telstra/open-kilda/commit/a7810deb56c18a26e2d355b61ee200b7b2ba737c", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-06T15:50:44Z", "type": "forcePushed"}, {"oid": "2c662bd120dc6cda374384efa70492539bd4e7cd", "url": "https://github.com/telstra/open-kilda/commit/2c662bd120dc6cda374384efa70492539bd4e7cd", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-07T15:24:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1MTI0Ng==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485651246", "bodyText": "As for me readBfdProperties and writeBfdProperties is better methods naming.", "author": "rozdy", "createdAt": "2020-09-09T14:21:15Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -150,44 +157,75 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n         return isls;\n     }\n \n+    /**\n+     * Read ISL bfd properties.\n+     */\n+    public BfdPropertiesResponse bfdPropertiesRead(Endpoint source, Endpoint destination) throws IslNotFoundException {", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4MDk2OA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492880968", "bodyText": "The proposed named schema provide one handy \"feature\" - it provides natural method grouping - into alphabetically ordered lists you will always have methods working with the same object placed together. Also, the targeted object is more important than the action being applied to it. That why bfdPropertiesRead is handier than readBfdProperties at least for me.\nRenaming...", "author": "surabujin", "createdAt": "2020-09-22T16:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1MTI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1MTcyMQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485651721", "bodyText": "Please update javadoc.", "author": "rozdy", "createdAt": "2020-09-09T14:21:51Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -150,44 +157,75 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n         return isls;\n     }\n \n+    /**\n+     * Read ISL bfd properties.\n+     */\n+    public BfdPropertiesResponse bfdPropertiesRead(Endpoint source, Endpoint destination) throws IslNotFoundException {\n+        Isl link = findIsl(source, destination);\n+        return LinkMapper.INSTANCE.responseMap(\n+                link, bfdPropertiesReadEffective(source), bfdPropertiesReadEffective(destination));\n+    }\n+\n     /**\n      * Update the \"Under maintenance\" flag in ISL.\n      *\n      * @throws IslNotFoundException if there is no isl with these parameters.\n      */\n-    public Collection<Isl> updateEnableBfdFlag(Endpoint source, Endpoint destination, boolean flagValue)\n-            throws IslNotFoundException {\n-        return transactionManager.doInTransaction(() -> {\n-            List<Isl> processed = new ArrayList<>(2);\n-            boolean madeChange;\n-            madeChange = updateUniIslEnableBfdFlag(source, destination, flagValue, processed);\n-            madeChange |= updateUniIslEnableBfdFlag(destination, source, flagValue, processed);\n+    public BfdPropertiesResponse bfdPropertiesWrite(", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4Mzc5NA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492883794", "bodyText": "done", "author": "surabujin", "createdAt": "2020-09-22T16:43:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1MTcyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1MzUyMg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485653522", "bodyText": "Rename responseMap to mapResponse.", "author": "rozdy", "createdAt": "2020-09-09T14:24:12Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/share/mappers/LinkMapper.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.share.mappers;\n+\n+import org.openkilda.messaging.model.NetworkEndpoint;\n+import org.openkilda.messaging.nbtopology.response.BfdPropertiesResponse;\n+import org.openkilda.model.BfdProperties;\n+import org.openkilda.model.Isl;\n+\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.factory.Mappers;\n+\n+@Mapper\n+public abstract class LinkMapper {\n+    public static final LinkMapper INSTANCE = Mappers.getMapper(LinkMapper.class);\n+\n+    /**\n+     * Convert {@link Isl} into {@link BfdPropertiesResponse}.\n+     */\n+    public BfdPropertiesResponse responseMap(", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4NjY0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492886642", "bodyText": "done", "author": "surabujin", "createdAt": "2020-09-22T16:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1MzUyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1NjQxOA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485656418", "bodyText": "Rename bfdPropertiesReadEffective -> readBfdPropertiesByEndpoint.", "author": "rozdy", "createdAt": "2020-09-09T14:27:54Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -150,44 +157,75 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n         return isls;\n     }\n \n+    /**\n+     * Read ISL bfd properties.\n+     */\n+    public BfdPropertiesResponse bfdPropertiesRead(Endpoint source, Endpoint destination) throws IslNotFoundException {\n+        Isl link = findIsl(source, destination);\n+        return LinkMapper.INSTANCE.responseMap(\n+                link, bfdPropertiesReadEffective(source), bfdPropertiesReadEffective(destination));\n+    }\n+\n     /**\n      * Update the \"Under maintenance\" flag in ISL.\n      *\n      * @throws IslNotFoundException if there is no isl with these parameters.\n      */\n-    public Collection<Isl> updateEnableBfdFlag(Endpoint source, Endpoint destination, boolean flagValue)\n-            throws IslNotFoundException {\n-        return transactionManager.doInTransaction(() -> {\n-            List<Isl> processed = new ArrayList<>(2);\n-            boolean madeChange;\n-            madeChange = updateUniIslEnableBfdFlag(source, destination, flagValue, processed);\n-            madeChange |= updateUniIslEnableBfdFlag(destination, source, flagValue, processed);\n+    public BfdPropertiesResponse bfdPropertiesWrite(\n+            Endpoint source, Endpoint destination, BfdProperties properties) throws IslNotFoundException {\n+        Isl link = transactionManager.doInTransaction(() -> bfdPropertiesWriteGoal(\n+                source, destination, properties));\n+        return LinkMapper.INSTANCE.responseMap(\n+                link, bfdPropertiesReadEffective(source), bfdPropertiesReadEffective(destination));\n+    }\n \n-            if (processed.size() != 2) {\n-                throw new IslNotFoundException(source, destination);\n-            }\n-            if (madeChange) {\n-                carrier.islBfdFlagChanged(processed.get(0));\n-            }\n+    private Isl findIsl(Endpoint leftEnd, Endpoint rightEnd) throws IslNotFoundException {\n+        return islRepository.findByEndpoints(\n+                leftEnd.getDatapath(), leftEnd.getPortNumber(), rightEnd.getDatapath(), rightEnd.getPortNumber())\n+                .orElseThrow(() -> new IslNotFoundException(leftEnd, rightEnd));\n+    }\n \n-            return processed;\n-        });\n+    private BfdProperties bfdPropertiesReadEffective(Endpoint endpoint) {", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4ODExMA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492888110", "bodyText": "no. It reads effective value stored into bfd_session collection, not \"goal\" value stored into isl collections.", "author": "surabujin", "createdAt": "2020-09-22T16:50:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1NjQxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1OTYwOQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485659609", "bodyText": "Rename bfdPropertiesWriteGoal to writeBfdPropertiesGoal.", "author": "rozdy", "createdAt": "2020-09-09T14:31:54Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -150,44 +157,75 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n         return isls;\n     }\n \n+    /**\n+     * Read ISL bfd properties.\n+     */\n+    public BfdPropertiesResponse bfdPropertiesRead(Endpoint source, Endpoint destination) throws IslNotFoundException {\n+        Isl link = findIsl(source, destination);\n+        return LinkMapper.INSTANCE.responseMap(\n+                link, bfdPropertiesReadEffective(source), bfdPropertiesReadEffective(destination));\n+    }\n+\n     /**\n      * Update the \"Under maintenance\" flag in ISL.\n      *\n      * @throws IslNotFoundException if there is no isl with these parameters.\n      */\n-    public Collection<Isl> updateEnableBfdFlag(Endpoint source, Endpoint destination, boolean flagValue)\n-            throws IslNotFoundException {\n-        return transactionManager.doInTransaction(() -> {\n-            List<Isl> processed = new ArrayList<>(2);\n-            boolean madeChange;\n-            madeChange = updateUniIslEnableBfdFlag(source, destination, flagValue, processed);\n-            madeChange |= updateUniIslEnableBfdFlag(destination, source, flagValue, processed);\n+    public BfdPropertiesResponse bfdPropertiesWrite(\n+            Endpoint source, Endpoint destination, BfdProperties properties) throws IslNotFoundException {\n+        Isl link = transactionManager.doInTransaction(() -> bfdPropertiesWriteGoal(\n+                source, destination, properties));\n+        return LinkMapper.INSTANCE.responseMap(\n+                link, bfdPropertiesReadEffective(source), bfdPropertiesReadEffective(destination));\n+    }\n \n-            if (processed.size() != 2) {\n-                throw new IslNotFoundException(source, destination);\n-            }\n-            if (madeChange) {\n-                carrier.islBfdFlagChanged(processed.get(0));\n-            }\n+    private Isl findIsl(Endpoint leftEnd, Endpoint rightEnd) throws IslNotFoundException {\n+        return islRepository.findByEndpoints(\n+                leftEnd.getDatapath(), leftEnd.getPortNumber(), rightEnd.getDatapath(), rightEnd.getPortNumber())\n+                .orElseThrow(() -> new IslNotFoundException(leftEnd, rightEnd));\n+    }\n \n-            return processed;\n-        });\n+    private BfdProperties bfdPropertiesReadEffective(Endpoint endpoint) {\n+        return bfdSessionRepository.findBySwitchIdAndPhysicalPort(endpoint.getDatapath(), endpoint.getPortNumber())\n+                .map(IslMapper.INSTANCE::readBfdProperties)\n+                .orElse(new BfdProperties());\n     }\n \n-    private boolean updateUniIslEnableBfdFlag(\n-            Endpoint leftEnd, Endpoint rightEnd, boolean flagValue, List<Isl> processed) {\n+    private Isl bfdPropertiesWriteGoal(", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5NTI5NA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492895294", "bodyText": "done, mostly", "author": "surabujin", "createdAt": "2020-09-22T17:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1OTYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2MDQ4Mg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485660482", "bodyText": "And here.", "author": "rozdy", "createdAt": "2020-09-09T14:33:02Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/LinkOperationsService.java", "diffHunk": "@@ -150,44 +157,75 @@ public LinkOperationsService(ILinkOperationsServiceCarrier carrier,\n         return isls;\n     }\n \n+    /**\n+     * Read ISL bfd properties.\n+     */\n+    public BfdPropertiesResponse bfdPropertiesRead(Endpoint source, Endpoint destination) throws IslNotFoundException {\n+        Isl link = findIsl(source, destination);\n+        return LinkMapper.INSTANCE.responseMap(\n+                link, bfdPropertiesReadEffective(source), bfdPropertiesReadEffective(destination));\n+    }\n+\n     /**\n      * Update the \"Under maintenance\" flag in ISL.\n      *\n      * @throws IslNotFoundException if there is no isl with these parameters.\n      */\n-    public Collection<Isl> updateEnableBfdFlag(Endpoint source, Endpoint destination, boolean flagValue)\n-            throws IslNotFoundException {\n-        return transactionManager.doInTransaction(() -> {\n-            List<Isl> processed = new ArrayList<>(2);\n-            boolean madeChange;\n-            madeChange = updateUniIslEnableBfdFlag(source, destination, flagValue, processed);\n-            madeChange |= updateUniIslEnableBfdFlag(destination, source, flagValue, processed);\n+    public BfdPropertiesResponse bfdPropertiesWrite(\n+            Endpoint source, Endpoint destination, BfdProperties properties) throws IslNotFoundException {\n+        Isl link = transactionManager.doInTransaction(() -> bfdPropertiesWriteGoal(\n+                source, destination, properties));\n+        return LinkMapper.INSTANCE.responseMap(\n+                link, bfdPropertiesReadEffective(source), bfdPropertiesReadEffective(destination));\n+    }\n \n-            if (processed.size() != 2) {\n-                throw new IslNotFoundException(source, destination);\n-            }\n-            if (madeChange) {\n-                carrier.islBfdFlagChanged(processed.get(0));\n-            }\n+    private Isl findIsl(Endpoint leftEnd, Endpoint rightEnd) throws IslNotFoundException {\n+        return islRepository.findByEndpoints(\n+                leftEnd.getDatapath(), leftEnd.getPortNumber(), rightEnd.getDatapath(), rightEnd.getPortNumber())\n+                .orElseThrow(() -> new IslNotFoundException(leftEnd, rightEnd));\n+    }\n \n-            return processed;\n-        });\n+    private BfdProperties bfdPropertiesReadEffective(Endpoint endpoint) {\n+        return bfdSessionRepository.findBySwitchIdAndPhysicalPort(endpoint.getDatapath(), endpoint.getPortNumber())\n+                .map(IslMapper.INSTANCE::readBfdProperties)\n+                .orElse(new BfdProperties());\n     }\n \n-    private boolean updateUniIslEnableBfdFlag(\n-            Endpoint leftEnd, Endpoint rightEnd, boolean flagValue, List<Isl> processed) {\n+    private Isl bfdPropertiesWriteGoal(\n+            Endpoint source, Endpoint destination, BfdProperties properties) throws IslNotFoundException {\n+        List<Isl> processed = new ArrayList<>(2);\n+        boolean madeChange;\n+        madeChange = bfdPropertiesWriteGoal(source, destination, properties, processed);\n+        madeChange |= bfdPropertiesWriteGoal(destination, source, properties, processed);\n+\n+        if (processed.size() != 2) {\n+            throw new IslNotFoundException(source, destination);\n+        }\n+        if (madeChange) {\n+            carrier.islBfdPropertiesChanged(source, destination);\n+        }\n+\n+        return processed.get(0);\n+    }\n+\n+    private boolean bfdPropertiesWriteGoal(", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5NTU0NQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492895545", "bodyText": "done", "author": "surabujin", "createdAt": "2020-09-22T17:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2MDQ4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3MjQzNA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485672434", "bodyText": "I guess you can rename leftToRight and rightToLeft to simple left and right.", "author": "rozdy", "createdAt": "2020-09-09T14:48:27Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "diffHunk": "@@ -600,6 +637,25 @@ private void initializeFromLinkProps(Endpoint source, Endpoint dest, IslBuilder\n         return result;\n     }\n \n+    private BfdProperties loadBfdProperties() {\n+        BfdProperties leftToRight = loadBfdProperties(reference.getSource(), reference.getDest());", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5NjY0OA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492896648", "bodyText": "it does not exact enough", "author": "surabujin", "createdAt": "2020-09-22T17:04:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3MjQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NjM4Nw==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485686387", "bodyText": "Rename responseMap -> mapResponse.", "author": "rozdy", "createdAt": "2020-09-09T15:05:56Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/LinkMapper.java", "diffHunk": "@@ -17,23 +17,88 @@\n \n import org.openkilda.messaging.info.event.IslInfoData;\n import org.openkilda.messaging.info.event.PathNode;\n+import org.openkilda.messaging.model.NetworkEndpoint;\n+import org.openkilda.messaging.nbtopology.request.BfdPropertiesReadRequest;\n+import org.openkilda.messaging.nbtopology.request.BfdPropertiesWriteRequest;\n+import org.openkilda.messaging.nbtopology.response.BfdPropertiesResponse;\n import org.openkilda.model.SwitchId;\n import org.openkilda.northbound.dto.v1.links.LinkDto;\n import org.openkilda.northbound.dto.v1.links.PathDto;\n+import org.openkilda.northbound.dto.v2.links.BfdPropertiesByEndpoint;\n+import org.openkilda.northbound.dto.v2.links.BfdPropertiesPayload;\n \n import org.mapstruct.Mapper;\n import org.mapstruct.Mapping;\n+import org.mapstruct.MappingTarget;\n+\n+import java.time.Duration;\n+import java.util.Arrays;\n \n @Mapper(componentModel = \"spring\")\n-public interface LinkMapper {\n+public abstract class LinkMapper {\n+    public abstract PathDto map(PathNode data);\n+\n+    @Mapping(target = \"interval\", source = \"intervalMs\")\n+    public abstract org.openkilda.model.BfdProperties map(org.openkilda.northbound.dto.v2.links.BfdProperties source);\n+\n+    @Mapping(target = \"intervalMs\", source = \"interval\")\n+    public abstract org.openkilda.northbound.dto.v2.links.BfdProperties map(org.openkilda.model.BfdProperties source);\n+\n+    @Mapping(target = \"timestamp\", ignore = true)\n+    public abstract BfdPropertiesReadRequest bfdRequestMap(NetworkEndpoint source, NetworkEndpoint destination);\n+\n+    @Mapping(target = \"timestamp\", ignore = true)\n+    @Mapping(target = \"source\", source = \"source\")\n+    @Mapping(target = \"destination\", source = \"destination\")\n+    @Mapping(target = \"properties\", source = \"properties\")\n+    public abstract BfdPropertiesWriteRequest bfdRequestMap(\n+            NetworkEndpoint source, NetworkEndpoint destination,\n+            org.openkilda.northbound.dto.v2.links.BfdProperties  properties);\n+\n+    /**\n+     * Convert {@link BfdPropertiesResponse} into {@link BfdPropertiesPayload}.\n+     */\n+    @Mapping(target = \"intervalMs\", source = \"properties.interval\")\n+    @Mapping(target = \"multiplier\", source = \"properties.multiplier\")\n+    public BfdPropertiesPayload responseMap(BfdPropertiesResponse response) {", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5NzY1NQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492897655", "bodyText": "done", "author": "surabujin", "createdAt": "2020-09-22T17:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NjM4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4ODI3Nw==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485688277", "bodyText": "Rename methods to write/read/deleteBfdProperties.", "author": "rozdy", "createdAt": "2020-09-09T15:08:30Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/LinkService.java", "diffHunk": "@@ -106,13 +108,15 @@\n      */\n     CompletableFuture<List<LinkDto>> deleteLink(LinkParametersDto linkParameters, boolean force);\n \n-    /**\n-     * Update \"Enable BFD\" flag.\n-     *\n-     * @param link link parameters.\n-     * @return updated link.\n-     */\n-    CompletableFuture<List<LinkDto>> updateLinkEnableBfd(LinkEnableBfdDto link);\n+    CompletableFuture<List<LinkDto>> bfdPropertiesWrite(", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5ODUwMQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492898501", "bodyText": "done", "author": "surabujin", "createdAt": "2020-09-22T17:07:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4ODI3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5MTM5NQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485691395", "bodyText": "Didn't get it. Why we need to discard this call?", "author": "rozdy", "createdAt": "2020-09-09T15:12:43Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/bolts/SwitchOperationsBolt.java", "diffHunk": "@@ -323,4 +324,9 @@ public void declareOutputFields(OutputFieldsDeclarer declarer) {\n         declarer.declareStream(StreamType.TO_SERVER42.toString(),\n                 new Fields(MessageEncoder.FIELD_ID_PAYLOAD, MessageEncoder.FIELD_ID_CONTEXT));\n     }\n+\n+    @Override\n+    public void islBfdPropertiesChanged(Endpoint source, Endpoint destination) {\n+        log.warn(\"Discard islBfdPropertiesChanged link carrier call\");", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwMjE0Mw==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492902143", "bodyText": "... this is the ugly design of nbworker.\nMethod islBfdPropertiesChanged is part of ILinkOperationsServiceCarrier, this interface are implemented by LinkOperationsBolt and SwitchOperationsBolt. LinkOperationsBolt can and must provide a correct implementation of this method, while SwitchOperationsBolt can't do it. I have added this warning to have visibility of the issue, when something will goest wrong.", "author": "surabujin", "createdAt": "2020-09-22T17:13:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5MTM5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5NDc0MQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r485694741", "bodyText": "Do we still need this method?", "author": "rozdy", "createdAt": "2020-09-09T15:17:10Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "diffHunk": "@@ -486,11 +525,9 @@ private void fireBecomeStateEvent(IslFsmContext context) {\n         fire(route, context);\n     }\n \n-    private boolean shouldSetupBfd() {\n+    private boolean canSetupBfd() {\n         // TODO(surabujin): ensure the switch is BFD capable\n-\n-        return isPerIslBfdToggleEnabled(reference.getSource(), reference.getDest())\n-                || isPerIslBfdToggleEnabled(reference.getDest(), reference.getSource());\n+        return true;", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwMjg1OA==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492902858", "bodyText": "I would like to keep it and follow TODO placed there i.e. \"ensure the switch is BFD capable\".", "author": "surabujin", "createdAt": "2020-09-22T17:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5NDc0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwMzAzMQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r486403031", "bodyText": "Please, double-check that property is worked as expected on the current master.", "author": "nikitamarchenko", "createdAt": "2020-09-10T14:46:01Z", "path": "src-java/kilda-model/src/main/java/org/openkilda/model/Isl.java", "diffHunk": "@@ -116,9 +117,17 @@\n     @Property(name = \"under_maintenance\")\n     private boolean underMaintenance;\n \n+    // TODO(surabujin): drop after migration\n     @Property(name = \"enable_bfd\")\n     private boolean enableBfd;\n \n+    @Property(\"bfd_interval\")\n+    @Convert(graphPropertyType = Long.class)\n+    private Duration bfdInterval;\n+\n+    @Property(\"bfd_multiplier\")\n+    private short bfdMultiplier;\n+\n     @Property(name = \"bfd_session_status\")\n     @Convert(graphPropertyType = String.class)\n     private BfdSessionStatus bfdSessionStatus;", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwNDMwMQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492904301", "bodyText": "Is there any specific scenario that causes this comment to appear here? I will review BFD \"reportiong\" tools one more time.", "author": "surabujin", "createdAt": "2020-09-22T17:17:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwMzAzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQxMTMzNg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r486411336", "bodyText": "Why did you use literals?", "author": "nikitamarchenko", "createdAt": "2020-09-10T14:56:45Z", "path": "src-java/network-topology/network-storm-topology/src/test/java/org/openkilda/wfm/topology/network/controller/bfd/AbstractBfdActionTest.java", "diffHunk": "@@ -45,8 +45,8 @@\n             .logicalPortNumber(alphaLogicalEndpoint.getPortNumber())\n             .udpPortNumber(BfdPortFsm.BFD_UDP_PORT)\n             .discriminator(1001)\n-            .intervalMs(BfdPortFsm.bfdPollInterval)\n-            .multiplier(BfdPortFsm.bfdFailCycleLimit)\n+            .intervalMs(350)", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwNzk0Mw==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492907943", "bodyText": "Because there are no(since this commit) corresponding constants that keep default values for these fields and because this is the test object.", "author": "surabujin", "createdAt": "2020-09-22T17:22:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQxMTMzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ0MDg0OQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r486440849", "bodyText": "Not sure about that format.", "author": "nikitamarchenko", "createdAt": "2020-09-10T15:36:28Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/controller/v2/LinkControllerV2.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.northbound.controller.v2;\n+\n+import org.openkilda.messaging.model.NetworkEndpoint;\n+import org.openkilda.model.SwitchId;\n+import org.openkilda.northbound.controller.BaseLinkController;\n+import org.openkilda.northbound.dto.v2.links.BfdProperties;\n+import org.openkilda.northbound.dto.v2.links.BfdPropertiesPayload;\n+import org.openkilda.northbound.service.LinkService;\n+\n+import io.swagger.annotations.ApiOperation;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PutMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.stream.Stream;\n+\n+@RestController\n+@RequestMapping(\"/v2/links\")\n+public class LinkControllerV2 extends BaseLinkController {\n+    private static final int BFD_INTERVAL_MIN = 100;\n+    private static final short BFD_MULTIPLIER_MIN = 1;\n+\n+    private final LinkService linkService;\n+\n+    public LinkControllerV2(LinkService linkService) {\n+        this.linkService = linkService;\n+    }\n+\n+    /**\n+     * Write/update/enable BFD properties for specific ISL.\n+     */\n+    @ApiOperation(value = \"Set/update BFD properties\", response = BfdPropertiesPayload.class)\n+    @PutMapping(value = \"/{src-switch}_{src-port}/{dst-switch}_{dst-port}/bfd\")", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwOTAzMg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492909032", "bodyText": "I am open to propositions. .../src switch/src port/dst switch/dst_port/... is worse as for me.", "author": "surabujin", "createdAt": "2020-09-22T17:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ0MDg0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MTAyOQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r486861029", "bodyText": "s.port - 1000", "author": "rtretyak", "createdAt": "2020-09-11T08:34:40Z", "path": "services/src/neo4j/migrations/1.26-per-isl-bfd-properties/1-per-idl-bfd-properties.xml", "diffHunk": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<changelog xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+           xsi:noNamespaceSchemaLocation=\"http://www.liquigraph.org/schema/1.0/liquigraph.xsd\">\n+    <changeset id=\"1.26-bfd-session-update\" author=\"Dmitry Bogun\">\n+        <query><![CDATA[\n+             MATCH (s:bfd_session) WHERE NOT exists(s.physical_port)\n+             SET s.physical_port = s.port - 100,", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwOTEzMQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492909131", "bodyText": "fixed", "author": "surabujin", "createdAt": "2020-09-22T17:24:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MTAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMjQ1Mg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r489302452", "bodyText": "as for me, it is a little bit unusual that the ed ending is missing (ed -> disabled). we almost everywhere(except roundTrip) use the ed ending (i.e. failed, activated, discovered)", "author": "andriidovhan", "createdAt": "2020-09-16T09:36:51Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/LinkServiceImpl.java", "diffHunk": "@@ -324,32 +346,87 @@ private BatchResults getLinkPropsResult(List<LinkPropsResponse> responses, List<\n         return messagingChannel.sendAndGetChunked(nbworkerTopic, message)\n                 .thenApply(response -> response.stream()\n                         .map(IslInfoData.class::cast)\n-                        .map(linkMapper::toLinkDto)\n+                        .map(linkMapper::responseMap)\n                         .collect(Collectors.toList()));\n     }\n \n     @Override\n-    public CompletableFuture<List<LinkDto>> updateLinkEnableBfd(LinkEnableBfdDto link) {\n+    public CompletableFuture<List<LinkDto>> bfdPropertiesWrite(\n+            NetworkEndpoint source, NetworkEndpoint dest, boolean isEnabled) {\n+        BfdProperties properties;\n+        if (isEnabled) {\n+            properties = bfdPropertiesDefault;\n+        } else {\n+            properties = BfdProperties.DISABLE;", "originalCommit": "2c662bd120dc6cda374384efa70492539bd4e7cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwOTIzMQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r492909231", "bodyText": "renamed", "author": "surabujin", "createdAt": "2020-09-22T17:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMjQ1Mg=="}], "type": "inlineReview"}, {"oid": "510d3f58051caf4fc526f4e860da79d72526671f", "url": "https://github.com/telstra/open-kilda/commit/510d3f58051caf4fc526f4e860da79d72526671f", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-22T17:25:40Z", "type": "forcePushed"}, {"oid": "47d682c83300b9e25cf9448bfd7f83c804ad1011", "url": "https://github.com/telstra/open-kilda/commit/47d682c83300b9e25cf9448bfd7f83c804ad1011", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-23T07:32:54Z", "type": "forcePushed"}, {"oid": "a0a23e4acdb4d23f76fff2f18d5263abe10a7c5e", "url": "https://github.com/telstra/open-kilda/commit/a0a23e4acdb4d23f76fff2f18d5263abe10a7c5e", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-24T17:17:33Z", "type": "forcePushed"}, {"oid": "23c5093f9c204bd8e7762655af1e5127db552cc4", "url": "https://github.com/telstra/open-kilda/commit/23c5093f9c204bd8e7762655af1e5127db552cc4", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-24T21:51:19Z", "type": "forcePushed"}, {"oid": "582fa87d03afea66dc2a944a365a0b58afa78214", "url": "https://github.com/telstra/open-kilda/commit/582fa87d03afea66dc2a944a365a0b58afa78214", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-26T09:50:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1NDYzMg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r496454632", "bodyText": "I wouldn't use Duration here, it force to create new db converter(converters in our case not the most reliable thing ever),\nmappers, etc. While the actual usage of it as duration is made in single place only", "author": "timofei-durakov", "createdAt": "2020-09-29T06:47:29Z", "path": "src-java/kilda-model/src/main/java/org/openkilda/model/BfdProperties.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.model;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Builder;\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.ToString;\n+\n+import java.time.Duration;\n+\n+@Getter\n+@ToString\n+@EqualsAndHashCode\n+public class BfdProperties {\n+    @JsonProperty(\"interval\")\n+    protected final Duration interval;", "originalCommit": "582fa87d03afea66dc2a944a365a0b58afa78214", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2ODIxMg==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r496468212", "bodyText": "This is the easiest and simple way to store time duration in an unambiguous way.\nRegarding issues with converters - first point - we are going to move out neo4j soon enough, the second we do not have a clear vision where the issue and is there any relation to the number of converters. So I don't see the reason to not use proper/handy data types in our model.\nRegarding mappers - all other codebase uses Duration for this field, so if we use a different type here we must use mappers too.", "author": "surabujin", "createdAt": "2020-09-29T07:14:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1NDYzMg=="}], "type": "inlineReview"}, {"oid": "1aad686c977a796ff687e5b158fa55b0eef21167", "url": "https://github.com/telstra/open-kilda/commit/1aad686c977a796ff687e5b158fa55b0eef21167", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-09-29T07:26:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNTAzNQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r498635035", "bodyText": "should we add new fields into toString() method? or just remove toString() to generate it by @Data?", "author": "niksv", "createdAt": "2020-10-02T06:23:50Z", "path": "src-java/kilda-model/src/main/java/org/openkilda/model/Isl.java", "diffHunk": "@@ -116,9 +117,17 @@\n     @Property(name = \"under_maintenance\")\n     private boolean underMaintenance;\n \n+    // TODO(surabujin): drop after migration\n     @Property(name = \"enable_bfd\")\n     private boolean enableBfd;\n \n+    @Property(\"bfd_interval\")\n+    @Convert(graphPropertyType = Long.class)\n+    private Duration bfdInterval;\n+\n+    @Property(\"bfd_multiplier\")\n+    private short bfdMultiplier;", "originalCommit": "1aad686c977a796ff687e5b158fa55b0eef21167", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY4ODM1OQ==", "url": "https://github.com/telstra/open-kilda/pull/3712#discussion_r498688359", "bodyText": "Can't say for sure.\nLooks like .toString() include a brief and only most important view of Isl object. Added fields do not part of the most important fields of Isl object, from my point of view. I would like not to include them in the .toString() view now.", "author": "surabujin", "createdAt": "2020-10-02T08:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYzNTAzNQ=="}], "type": "inlineReview"}, {"oid": "ffd106aa322710a3321c558d1877b780d80e1202", "url": "https://github.com/telstra/open-kilda/commit/ffd106aa322710a3321c558d1877b780d80e1202", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-07T16:46:33Z", "type": "forcePushed"}, {"oid": "ded8f80cd5e7e4ca48f8b1e59440f93949bec52e", "url": "https://github.com/telstra/open-kilda/commit/ded8f80cd5e7e4ca48f8b1e59440f93949bec52e", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-12T16:24:28Z", "type": "forcePushed"}, {"oid": "9e591760693d1c9ff818bf7682e1f6f0e77cc152", "url": "https://github.com/telstra/open-kilda/commit/9e591760693d1c9ff818bf7682e1f6f0e77cc152", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-12T19:40:11Z", "type": "forcePushed"}, {"oid": "81533e45b6dbc1c19f5cc2aca7498cb30bc78160", "url": "https://github.com/telstra/open-kilda/commit/81533e45b6dbc1c19f5cc2aca7498cb30bc78160", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-15T15:16:13Z", "type": "forcePushed"}, {"oid": "45255671e10ce4b9dd27eaefac368c7d96d42dc0", "url": "https://github.com/telstra/open-kilda/commit/45255671e10ce4b9dd27eaefac368c7d96d42dc0", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-15T15:20:23Z", "type": "forcePushed"}, {"oid": "5bf7232967b6b5ecbf4c5d2a323ee5c99138e96c", "url": "https://github.com/telstra/open-kilda/commit/5bf7232967b6b5ecbf4c5d2a323ee5c99138e96c", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-15T18:47:39Z", "type": "forcePushed"}, {"oid": "9bee18a17470a1c6b3bcc4c18c91361fbe5a0bec", "url": "https://github.com/telstra/open-kilda/commit/9bee18a17470a1c6b3bcc4c18c91361fbe5a0bec", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-16T07:07:15Z", "type": "forcePushed"}, {"oid": "3e1533f470ebd77c622a9a4ca930615ae1302bc5", "url": "https://github.com/telstra/open-kilda/commit/3e1533f470ebd77c622a9a4ca930615ae1302bc5", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-16T07:43:11Z", "type": "forcePushed"}, {"oid": "85c44070b94617f5218ed3f15c0c3b65f58274ef", "url": "https://github.com/telstra/open-kilda/commit/85c44070b94617f5218ed3f15c0c3b65f58274ef", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-16T10:14:18Z", "type": "forcePushed"}, {"oid": "c553f0c738fb8867408c37338a961bdcaaa0c301", "url": "https://github.com/telstra/open-kilda/commit/c553f0c738fb8867408c37338a961bdcaaa0c301", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-18T17:59:08Z", "type": "forcePushed"}, {"oid": "9ef0f863281e747f5bc2c675e26ad9a577e25478", "url": "https://github.com/telstra/open-kilda/commit/9ef0f863281e747f5bc2c675e26ad9a577e25478", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-19T06:00:18Z", "type": "forcePushed"}, {"oid": "6b11396dd0b2de31166f2d53577eba99963d20ba", "url": "https://github.com/telstra/open-kilda/commit/6b11396dd0b2de31166f2d53577eba99963d20ba", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-19T09:01:29Z", "type": "forcePushed"}, {"oid": "c035c89557c6cd19d69b72c08bb6a0452eaa5b86", "url": "https://github.com/telstra/open-kilda/commit/c035c89557c6cd19d69b72c08bb6a0452eaa5b86", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-19T16:55:40Z", "type": "forcePushed"}, {"oid": "ef6c31cb6935965a61e8f46affe2c21d459c748e", "url": "https://github.com/telstra/open-kilda/commit/ef6c31cb6935965a61e8f46affe2c21d459c748e", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-20T13:08:57Z", "type": "forcePushed"}, {"oid": "dbed6da0f60d55f9026a1ce882a863192d860f3d", "url": "https://github.com/telstra/open-kilda/commit/dbed6da0f60d55f9026a1ce882a863192d860f3d", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-21T13:44:18Z", "type": "forcePushed"}, {"oid": "846816d98decd7040e0bf8eba6fb28e48a8c0605", "url": "https://github.com/telstra/open-kilda/commit/846816d98decd7040e0bf8eba6fb28e48a8c0605", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-23T08:09:22Z", "type": "forcePushed"}, {"oid": "8e76b64b06cb237fa57fbfd3502c7e6016db2240", "url": "https://github.com/telstra/open-kilda/commit/8e76b64b06cb237fa57fbfd3502c7e6016db2240", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-23T14:12:30Z", "type": "commit"}, {"oid": "8e76b64b06cb237fa57fbfd3502c7e6016db2240", "url": "https://github.com/telstra/open-kilda/commit/8e76b64b06cb237fa57fbfd3502c7e6016db2240", "message": "Per isl bfd properties\n\nAdd ability to define BFD interval and multiplier for each ISL. New API\nv2 endpoint was created for this feature. Existing API v1 endpoint was\nadopted to use default BFD properties on enable request.", "committedDate": "2020-10-23T14:12:30Z", "type": "forcePushed"}]}