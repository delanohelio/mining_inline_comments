{"pr_number": 3317, "pr_title": "Teach lockkeeper to add latency between FL and switches", "pr_createdAt": "2020-03-20T13:37:40Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3317", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTc2Nw==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396405767", "bodyText": "Do we always use the eth0 interface?\nProbably would be better to use separate function for getting interface name, for example:\nip route show to match switch_address | awk  '{ print $5 }'", "author": "andriidovhan", "createdAt": "2020-03-23T12:13:14Z", "path": "src-python/lock-keeper/lockkeeper.py", "diffHunk": "@@ -131,6 +132,32 @@ def fl_restart():\n     return jsonify({'status': 'ok'})\n \n \n+@app.route('/floodlight/tc', methods=['POST'])\n+def floodlight_shape_traffic():\n+    body = request.get_json()\n+    common_commands = ['tc qdisc del dev eth0 root',\n+                       'tc qdisc add dev eth0 root handle 1: prio priomap 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2',\n+                       'tc qdisc add dev eth0 parent 1:1 handle 10: netem delay {}ms'.format(\n+                           body['tcData']['egressDelayMs'])]\n+    switches_by_container = defaultdict(list)\n+    for sw in body['affectedAddresses']:\n+        switches_by_container[sw['containerName']].append(sw)\n+    for container, switches in switches_by_container.items():\n+        commands = common_commands.copy()\n+        for switch in switches:\n+            commands.extend(['tc filter add dev eth0 protocol ip parent 1:0 prio 1 u32 match ip dst {}/32 match ip '", "originalCommit": "e8ded166824b5d706e84071bef909354412c333b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyOTg5MQ==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396429891", "bodyText": "We always use eth0. This code is executed inside floodlight container, not lab service", "author": "rtretyak", "createdAt": "2020-03-23T12:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NDgyNA==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396474824", "bodyText": "agree", "author": "andriidovhan", "createdAt": "2020-03-23T14:04:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTc2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxMzUwMA==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396413500", "bodyText": "Do you mind extending text response(for virtual and hardware implementations)?\nfor instance:\n\nafter executing execute_commands_in_container\ncreate list([[containerNames, ip, port],]\nreturn it in response\n\"tc filter is applied in the following containers: {}\".format(<generated_list>)\n\nI guess it can be useful during investigating.", "author": "andriidovhan", "createdAt": "2020-03-23T12:27:51Z", "path": "src-python/lock-keeper/lockkeeper.py", "diffHunk": "@@ -131,6 +132,32 @@ def fl_restart():\n     return jsonify({'status': 'ok'})\n \n \n+@app.route('/floodlight/tc', methods=['POST'])\n+def floodlight_shape_traffic():\n+    body = request.get_json()\n+    common_commands = ['tc qdisc del dev eth0 root',\n+                       'tc qdisc add dev eth0 root handle 1: prio priomap 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2',\n+                       'tc qdisc add dev eth0 parent 1:1 handle 10: netem delay {}ms'.format(\n+                           body['tcData']['egressDelayMs'])]\n+    switches_by_container = defaultdict(list)\n+    for sw in body['affectedAddresses']:\n+        switches_by_container[sw['containerName']].append(sw)\n+    for container, switches in switches_by_container.items():\n+        commands = common_commands.copy()\n+        for switch in switches:\n+            commands.extend(['tc filter add dev eth0 protocol ip parent 1:0 prio 1 u32 match ip dst {}/32 match ip '\n+                             'dport {} 0xffff flowid 1:1'.format(switch['ip'], switch['port'])])\n+        execute_commands_in_container(commands, container)\n+    return jsonify({'status': 'ok'})", "originalCommit": "e8ded166824b5d706e84071bef909354412c333b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwNzg3MA==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396507870", "bodyText": "done", "author": "rtretyak", "createdAt": "2020-03-23T14:49:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxMzUwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxNTIyNg==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396415226", "bodyText": "please, add some log", "author": "andriidovhan", "createdAt": "2020-03-23T12:30:58Z", "path": "src-java/testing/test-library/src/main/java/org/openkilda/testing/service/lockkeeper/LockKeeperVirtualImpl.java", "diffHunk": "@@ -168,19 +168,34 @@ public void restartFloodlight(String region) {\n     }\n \n     @Override\n-    public void blockFloodlightAccess(String region, BlockRequest address) {\n+    public void blockFloodlightAccess(String region, FloodlightResourceAddress address) {\n         log.debug(\"Block floodlight access to {} by adding iptables rules\", address);\n         restTemplate.exchange(getCurrentLabUrl() + \"/lock-keeper/floodlight/block\",\n                 HttpMethod.POST, new HttpEntity<>(address, buildJsonHeaders()), String.class);\n     }\n \n     @Override\n-    public void unblockFloodlightAccess(String region, BlockRequest address) {\n+    public void unblockFloodlightAccess(String region, FloodlightResourceAddress address) {\n         log.debug(\"Unblock floodlight access to {} by removing iptables rules\", address);\n         restTemplate.exchange(getCurrentLabUrl() + \"/lock-keeper/floodlight/unblock\",\n                 HttpMethod.POST, new HttpEntity<>(address, buildJsonHeaders()), String.class);\n     }\n \n+    @Override\n+    public void shapeSwitchesTraffic(List<Switch> switches, TrafficControlData tcData) {\n+        List<FloodlightResourceAddress> swResources = switches.stream()\n+                .map(sw -> LockKeeperService.toFlResource(sw, mgmtManager)).collect(Collectors.toList());\n+        restTemplate.exchange(getCurrentLabUrl() + \"/lock-keeper/floodlight/tc\", HttpMethod.POST,", "originalCommit": "e8ded166824b5d706e84071bef909354412c333b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwNzg0NA==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396507844", "bodyText": "done", "author": "rtretyak", "createdAt": "2020-03-23T14:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxNTIyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjE4MQ==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396422181", "bodyText": "Why don't you like log.debug?)", "author": "andriidovhan", "createdAt": "2020-03-23T12:43:48Z", "path": "src-java/testing/test-library/src/main/java/org/openkilda/testing/service/lockkeeper/LockKeeperVirtualImpl.java", "diffHunk": "@@ -83,23 +85,21 @@ public void setController(Switch sw, String controller) {\n      * changes are reverted.\n      */\n     @Override\n-    public BlockRequest knockoutSwitch(Switch sw, MultiFloodlightManager manager) {\n-        log.debug(\"Block Floodlight access to switch '{}' by adding iptables rules\", sw.getName());", "originalCommit": "e8ded166824b5d706e84071bef909354412c333b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMDkwMg==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396430902", "bodyText": "It is misleading since we are not using iptables in virtual implementation, we set dummy controller instead. The setController already has a debug log for changing controller", "author": "rtretyak", "createdAt": "2020-03-23T12:58:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1NDUzMA==", "url": "https://github.com/telstra/open-kilda/pull/3317#discussion_r396954530", "bodyText": "agree", "author": "andriidovhan", "createdAt": "2020-03-24T07:47:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjE4MQ=="}], "type": "inlineReview"}, {"oid": "10dbdcb3543fcf639474c56901c4a2566741bac1", "url": "https://github.com/telstra/open-kilda/commit/10dbdcb3543fcf639474c56901c4a2566741bac1", "message": "Teach lockkeeper to add latency between FL and switches", "committedDate": "2020-03-23T14:49:17Z", "type": "forcePushed"}, {"oid": "d6d4a69e756957982ff290470587d9dc9c42cdb6", "url": "https://github.com/telstra/open-kilda/commit/d6d4a69e756957982ff290470587d9dc9c42cdb6", "message": "Merge branch 'Add_iproute2' of https://github.com/telstra/open-kilda into functional/lockkeper_add_tc", "committedDate": "2020-03-24T10:13:54Z", "type": "forcePushed"}, {"oid": "e7c8c408d505473bf6411f25df2e7d0c8daca2a2", "url": "https://github.com/telstra/open-kilda/commit/e7c8c408d505473bf6411f25df2e7d0c8daca2a2", "message": "Add ip ad tc tools for traffic control", "committedDate": "2020-03-30T08:21:38Z", "type": "commit"}, {"oid": "246bb7e2c055e73eb0bf4e314a54bce2e3bed0a5", "url": "https://github.com/telstra/open-kilda/commit/246bb7e2c055e73eb0bf4e314a54bce2e3bed0a5", "message": "Teach lockkeeper to add latency between FL and switches", "committedDate": "2020-03-30T08:21:38Z", "type": "commit"}, {"oid": "246bb7e2c055e73eb0bf4e314a54bce2e3bed0a5", "url": "https://github.com/telstra/open-kilda/commit/246bb7e2c055e73eb0bf4e314a54bce2e3bed0a5", "message": "Teach lockkeeper to add latency between FL and switches", "committedDate": "2020-03-30T08:21:38Z", "type": "forcePushed"}]}