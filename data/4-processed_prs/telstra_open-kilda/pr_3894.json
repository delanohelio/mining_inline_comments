{"pr_number": 3894, "pr_title": "add swapEndpoint test for flowLoop", "pr_createdAt": "2020-12-01T14:15:17Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3894", "timeline": [{"oid": "bde08acc466bce3cd1af93134c29bf70074e0a3c", "url": "https://github.com/telstra/open-kilda/commit/bde08acc466bce3cd1af93134c29bf70074e0a3c", "message": "add swapEndpoint test for flowLoop", "committedDate": "2020-12-01T14:51:03Z", "type": "forcePushed"}, {"oid": "0bdcfca7f52ff5983a63bc901a8a50c2c3c7a6ca", "url": "https://github.com/telstra/open-kilda/commit/0bdcfca7f52ff5983a63bc901a8a50c2c3c7a6ca", "message": "add swapEndpoint test for flowLoop", "committedDate": "2020-12-04T15:32:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4MTkzOQ==", "url": "https://github.com/telstra/open-kilda/pull/3894#discussion_r539981939", "bodyText": "should include reversed pairs", "author": "rtretyak", "createdAt": "2020-12-10T08:48:57Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/SwapEndpointSpec.groovy", "diffHunk": "@@ -1378,23 +1378,22 @@ switches\"() {\n     }\n \n     @Tidy\n-    def \"Unable to swap endpoints for a flow with flowLoop\"() {\n+    def \"Able to swap endpoints for a flow with flowLoop\"() {\n         setup: \"Create two flows with the same src and different dst switches\"\n         def tgSwitchIds = topology.getActiveTraffGens()*.switchConnected*.dpId\n-        assumeTrue(\"Not enough traffgen switches found\", tgSwitchIds.size() > 2)\n+        assumeTrue(\"Not enough traffgen switches found\", tgSwitchIds.size() > 1)\n         SwitchPair flow2SwitchPair = null\n-        SwitchPair flow1SwitchPair = topologyHelper.switchPairs.collectMany{ [it, it.reversed] }.find { firstPair ->\n+        SwitchPair flow1SwitchPair = topologyHelper.getAllNeighboringSwitchPairs().find { firstPair ->\n             def firstOk = firstPair.src.dpId in tgSwitchIds && firstPair.dst.dpId in tgSwitchIds\n             flow2SwitchPair = topologyHelper.getAllNeighboringSwitchPairs().find { secondPair ->", "originalCommit": "0bdcfca7f52ff5983a63bc901a8a50c2c3c7a6ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAxMzgzMw==", "url": "https://github.com/telstra/open-kilda/pull/3894#discussion_r540013833", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2020-12-10T09:34:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4MTkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4NTczNw==", "url": "https://github.com/telstra/open-kilda/pull/3894#discussion_r539985737", "bodyText": "still created for the second flow?", "author": "rtretyak", "createdAt": "2020-12-10T08:54:42Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/SwapEndpointSpec.groovy", "diffHunk": "@@ -1417,40 +1416,52 @@ switches\"() {\n                 new SwapFlowPayload(flow2.id, flowHelper.toFlowEndpointV2(flow2Src),\n                         flowHelper.toFlowEndpointV2(flow2Dst)))\n \n-        then: \"Human readable error is returned\"\n-        def exc = thrown(HttpServerErrorException)\n-        exc.statusCode == HttpStatus.NOT_IMPLEMENTED\n-        def errorDetails = exc.responseBodyAsString.to(MessageError)\n-        errorDetails.errorMessage == \"Could not swap endpoints\"\n-        errorDetails.errorDescription == \"Swap endpoints is not implemented for looped flows\"\n+        then: \"Endpoints are successfully swapped\"\n+        verifyEndpoints(response, flow1Src, flow1Dst, flow2Src, flow2Dst)\n+        verifyEndpoints(flow1.id, flow2.id, flow1Src, flow1Dst, flow2Src, flow2Dst)\n \n         and: \"Flows validation doesn't show any discrepancies\"\n         validateFlows(flow1, flow2)\n \n-        and: \"FlowLoop is still created for the second flow on the dst switch\"\n-        northbound.getFlow(flow2.id).loopSwitchId == flow2SwitchPair.dst.dpId\n+        and: \"FlowLoop is still created for the first flow but on the new dst switch\"", "originalCommit": "0bdcfca7f52ff5983a63bc901a8a50c2c3c7a6ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAxMzc3MQ==", "url": "https://github.com/telstra/open-kilda/pull/3894#discussion_r540013771", "bodyText": "oops, you are right(for the second flow).", "author": "andriidovhan", "createdAt": "2020-12-10T09:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4NTczNw=="}], "type": "inlineReview"}, {"oid": "f6ff03ed1f8f4d9a64fe57b15461bf595bd5d795", "url": "https://github.com/telstra/open-kilda/commit/f6ff03ed1f8f4d9a64fe57b15461bf595bd5d795", "message": "add swapEndpoint test for flowLoop", "committedDate": "2020-12-10T09:37:03Z", "type": "commit"}, {"oid": "f6ff03ed1f8f4d9a64fe57b15461bf595bd5d795", "url": "https://github.com/telstra/open-kilda/commit/f6ff03ed1f8f4d9a64fe57b15461bf595bd5d795", "message": "add swapEndpoint test for flowLoop", "committedDate": "2020-12-10T09:37:03Z", "type": "forcePushed"}]}