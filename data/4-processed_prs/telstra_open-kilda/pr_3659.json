{"pr_number": 3659, "pr_title": "extend PartialUpdateSpec", "pr_createdAt": "2020-07-24T11:15:43Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3659", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwODg4OA==", "url": "https://github.com/telstra/open-kilda/pull/3659#discussion_r462908888", "bodyText": "'flow' may be null in case of assumption error", "author": "rtretyak", "createdAt": "2020-07-30T10:40:46Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PartialUpdateSpec.groovy", "diffHunk": "@@ -529,6 +551,92 @@ class PartialUpdateSpec extends HealthCheckSpecification {\n         ]\n     }\n \n+    @Tidy\n+    @Tags(HARDWARE)\n+    def \"Able to update flow encapsulationType using partial update\"() {\n+        given: \"A flow with a 'transit_vlan' encapsulation\"\n+        def switchPair = topologyHelper.getAllNeighboringSwitchPairs().find {\n+            it.src.noviflow && !it.src.wb5164 && it.dst.noviflow && !it.dst.wb5164\n+        }\n+        assumeTrue(\"Unable to find required switches in topology\", switchPair as boolean)\n+\n+        def flow = flowHelperV2.randomFlow(switchPair)\n+        flow.encapsulationType = FlowEncapsulationType.TRANSIT_VLAN\n+        flowHelperV2.addFlow(flow)\n+\n+        def originalCookies = northbound.getSwitchRules(switchPair.src.dpId).flowEntries.findAll {\n+            !new Cookie(it.cookie).serviceFlag\n+        }\n+\n+        when: \"Request a flow partial update for an encapsulationType field(vxlan)\"\n+        def newEncapsulationTypeValue = FlowEncapsulationType.VXLAN.toString().toLowerCase()\n+        def updateRequest = new FlowPatchV2().tap { it.encapsulationType = newEncapsulationTypeValue }\n+        def response = flowHelperV2.partialUpdate(flow.flowId, updateRequest)\n+\n+        then: \"Update response reflects the changes\"\n+        response.encapsulationType == newEncapsulationTypeValue\n+\n+        and: \"Changes actually took place\"\n+        northboundV2.getFlow(flow.flowId).encapsulationType == newEncapsulationTypeValue\n+\n+        and: \"Flow rules have been reinstalled\"\n+        !northbound.getSwitchRules(switchPair.src.dpId).flowEntries.findAll {\n+            !new Cookie(it.cookie).serviceFlag\n+        }.any { it in originalCookies }\n+\n+        cleanup: \"Remove the flow\"\n+        flowHelperV2.deleteFlow(flow.flowId)", "originalCommit": "da7b28e0fc6f79063bfd140d2309a53b22d57cca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ5NjY4MQ==", "url": "https://github.com/telstra/open-kilda/pull/3659#discussion_r463496681", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2020-07-31T09:10:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkwODg4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxNTY3Nw==", "url": "https://github.com/telstra/open-kilda/pull/3659#discussion_r462915677", "bodyText": "we have 20+ qinq tests that do updates and verify them. Can we use partial update in some of those tests instead?", "author": "rtretyak", "createdAt": "2020-07-30T10:55:13Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/PartialUpdateSpec.groovy", "diffHunk": "@@ -529,6 +551,92 @@ class PartialUpdateSpec extends HealthCheckSpecification {\n         ]\n     }\n \n+    @Tidy\n+    @Tags(HARDWARE)\n+    def \"Able to update flow encapsulationType using partial update\"() {\n+        given: \"A flow with a 'transit_vlan' encapsulation\"\n+        def switchPair = topologyHelper.getAllNeighboringSwitchPairs().find {\n+            it.src.noviflow && !it.src.wb5164 && it.dst.noviflow && !it.dst.wb5164\n+        }\n+        assumeTrue(\"Unable to find required switches in topology\", switchPair as boolean)\n+\n+        def flow = flowHelperV2.randomFlow(switchPair)\n+        flow.encapsulationType = FlowEncapsulationType.TRANSIT_VLAN\n+        flowHelperV2.addFlow(flow)\n+\n+        def originalCookies = northbound.getSwitchRules(switchPair.src.dpId).flowEntries.findAll {\n+            !new Cookie(it.cookie).serviceFlag\n+        }\n+\n+        when: \"Request a flow partial update for an encapsulationType field(vxlan)\"\n+        def newEncapsulationTypeValue = FlowEncapsulationType.VXLAN.toString().toLowerCase()\n+        def updateRequest = new FlowPatchV2().tap { it.encapsulationType = newEncapsulationTypeValue }\n+        def response = flowHelperV2.partialUpdate(flow.flowId, updateRequest)\n+\n+        then: \"Update response reflects the changes\"\n+        response.encapsulationType == newEncapsulationTypeValue\n+\n+        and: \"Changes actually took place\"\n+        northboundV2.getFlow(flow.flowId).encapsulationType == newEncapsulationTypeValue\n+\n+        and: \"Flow rules have been reinstalled\"\n+        !northbound.getSwitchRules(switchPair.src.dpId).flowEntries.findAll {\n+            !new Cookie(it.cookie).serviceFlag\n+        }.any { it in originalCookies }\n+\n+        cleanup: \"Remove the flow\"\n+        flowHelperV2.deleteFlow(flow.flowId)\n+    }\n+\n+    @Tidy\n+    def \"Able to update innerVlanId/vlanId using partial update\"() {", "originalCommit": "da7b28e0fc6f79063bfd140d2309a53b22d57cca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ5NjgxOQ==", "url": "https://github.com/telstra/open-kilda/pull/3659#discussion_r463496819", "bodyText": "it makes sense. fixed", "author": "andriidovhan", "createdAt": "2020-07-31T09:10:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxNTY3Nw=="}], "type": "inlineReview"}, {"oid": "f94f8bd9dfa474809bbafd1342db4951ab3a4145", "url": "https://github.com/telstra/open-kilda/commit/f94f8bd9dfa474809bbafd1342db4951ab3a4145", "message": "extend PartialUpdateSpec", "committedDate": "2020-07-31T09:09:20Z", "type": "forcePushed"}, {"oid": "def61ecda6afe5bc67d829f9d1384feb1eaa296e", "url": "https://github.com/telstra/open-kilda/commit/def61ecda6afe5bc67d829f9d1384feb1eaa296e", "message": "extend PartialUpdateSpec", "committedDate": "2020-08-04T12:34:38Z", "type": "commit"}, {"oid": "def61ecda6afe5bc67d829f9d1384feb1eaa296e", "url": "https://github.com/telstra/open-kilda/commit/def61ecda6afe5bc67d829f9d1384feb1eaa296e", "message": "extend PartialUpdateSpec", "committedDate": "2020-08-04T12:34:38Z", "type": "forcePushed"}]}