{"pr_number": 3680, "pr_title": "check flow fields in flowHistory(state before/after)", "pr_createdAt": "2020-08-11T09:06:16Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3680", "timeline": [{"oid": "240ede6e2c1646689c834fa996a3f0e1c677f0c7", "url": "https://github.com/telstra/open-kilda/commit/240ede6e2c1646689c834fa996a3f0e1c677f0c7", "message": "check flow fields in flowHistory(state before/after)", "committedDate": "2020-08-12T08:56:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTA2NQ==", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r470615065", "bodyText": "it just feels that we should save the old values and do a proper comparison here", "author": "rtretyak", "createdAt": "2020-08-14T13:12:54Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowCrudV2Spec.groovy", "diffHunk": "@@ -940,6 +940,17 @@ class FlowCrudV2Spec extends HealthCheckSpecification {\n             it.source.vlanId == newVlanId\n         }\n \n+        and: \"Flow history shows actual info into stateBefore and stateAfter sections\"\n+        def flowHistory = northbound.getFlowHistory(flow.flowId)\n+        with(flowHistory.last().dumps.find { it.type == \"stateBefore\" }){\n+            it.sourcePort != newPortNumber\n+            it.sourceVlan != newVlanId", "originalCommit": "240ede6e2c1646689c834fa996a3f0e1c677f0c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM2NDE0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r471364142", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2020-08-17T09:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTg2OA==", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r470615868", "bodyText": "same. You can easily do it if instead of updating original flow you update a copy of it.\ndef updatedFlow = flow.jacksonCopy().tap {...", "author": "rtretyak", "createdAt": "2020-08-14T13:14:22Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/FlowHistoryV2Spec.groovy", "diffHunk": "@@ -104,13 +104,45 @@ class FlowHistoryV2Spec extends HealthCheckSpecification {\n         }\n \n         when: \"Update the created flow\"\n-        flowHelperV2.updateFlow(flow.flowId, flow.tap { it.description = it.description + \"updated\" })\n+        def oldPathCompStrategy = PathComputationStrategy.LATENCY.toString()\n+        def newPathCompStrategy = PathComputationStrategy.COST.toString()\n+        flowHelperV2.updateFlow(flow.flowId, flow.tap {", "originalCommit": "240ede6e2c1646689c834fa996a3f0e1c677f0c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM2NDI2NA==", "url": "https://github.com/telstra/open-kilda/pull/3680#discussion_r471364264", "bodyText": "thx, fixed", "author": "andriidovhan", "createdAt": "2020-08-17T09:45:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTg2OA=="}], "type": "inlineReview"}, {"oid": "0d29160cafef8f9bdf98f63f845fb278b67c3d1e", "url": "https://github.com/telstra/open-kilda/commit/0d29160cafef8f9bdf98f63f845fb278b67c3d1e", "message": "check flow fields in flowHistory(state before/after)", "committedDate": "2020-08-17T09:49:24Z", "type": "commit"}, {"oid": "0d29160cafef8f9bdf98f63f845fb278b67c3d1e", "url": "https://github.com/telstra/open-kilda/commit/0d29160cafef8f9bdf98f63f845fb278b67c3d1e", "message": "check flow fields in flowHistory(state before/after)", "committedDate": "2020-08-17T09:49:24Z", "type": "forcePushed"}]}