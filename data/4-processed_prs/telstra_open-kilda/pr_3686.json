{"pr_number": 3686, "pr_title": "refactor tests(make sure that flowReroute is finished)", "pr_createdAt": "2020-08-12T18:18:22Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3686", "timeline": [{"oid": "357361bc2076acaf1109da5562a42c97aaa90256", "url": "https://github.com/telstra/open-kilda/commit/357361bc2076acaf1109da5562a42c97aaa90256", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-12T18:28:20Z", "type": "forcePushed"}, {"oid": "8d0eb2d6504f1ab633c37c56a56cf8b564506373", "url": "https://github.com/telstra/open-kilda/commit/8d0eb2d6504f1ab633c37c56a56cf8b564506373", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-12T18:31:04Z", "type": "forcePushed"}, {"oid": "ee2726bab74b156b36e2d48d4dd17333f806cd2d", "url": "https://github.com/telstra/open-kilda/commit/ee2726bab74b156b36e2d48d4dd17333f806cd2d", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-13T13:28:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDYxOQ==", "url": "https://github.com/telstra/open-kilda/pull/3686#discussion_r470004619", "bodyText": "I don't understand this. Test is about update, not reroute. Moreover, it is questionable whether this retry even has to happen at all", "author": "rtretyak", "createdAt": "2020-08-13T14:42:30Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/BandwidthV2Spec.groovy", "diffHunk": "@@ -295,6 +295,13 @@ class BandwidthV2Spec extends HealthCheckSpecification {\n         flowPathAfterUpdate == flowPath\n         checkBandwidth(flowPathAfterUpdate, linksBeforeFlowCreate, linksAfterFlowUpdate)\n \n+        and: \"System retries to reroute the flow with ignored bandwidth\"", "originalCommit": "ee2726bab74b156b36e2d48d4dd17333f806cd2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYzODgyOA==", "url": "https://github.com/telstra/open-kilda/pull/3686#discussion_r470638828", "bodyText": "agree, fixed\n(added relevant comment)", "author": "andriidovhan", "createdAt": "2020-08-14T13:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDYxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNzIyOA==", "url": "https://github.com/telstra/open-kilda/pull/3686#discussion_r470007228", "bodyText": "This is a questionable solution, since we are not checking that the reroute operation has finished. You only check that flow is down (can be the result of original reroute or initial status change before reroute) and that the reroute retry has happened. You are not checking that reroute action has finished. Previous implementation did check the final 'REROUTE_FAIL' status of the operation.\nsame about other similar places in this pr", "author": "rtretyak", "createdAt": "2020-08-13T14:46:07Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/ProtectedPathSpec.groovy", "diffHunk": "@@ -970,7 +971,9 @@ class ProtectedPathSpec extends HealthCheckSpecification {\n         then: \"Flow state is changed to DOWN\"\n         Wrappers.wait(WAIT_OFFSET) {\n             assert northbound.getFlowStatus(flow.id).status == FlowState.DOWN\n-            assert northbound.getFlowHistory(flow.id).last().payload.find { it.action == REROUTE_FAIL }\n+            assert northbound.getFlowHistory(flow.id).find {\n+                it.action == REROUTE_ACTION && it.taskId =~ (/.+ : retry #1 ignore_bw true/)\n+            }", "originalCommit": "ee2726bab74b156b36e2d48d4dd17333f806cd2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY0NTM1MA==", "url": "https://github.com/telstra/open-kilda/pull/3686#discussion_r470645350", "bodyText": "fixed", "author": "andriidovhan", "createdAt": "2020-08-14T14:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNzIyOA=="}], "type": "inlineReview"}, {"oid": "25d5ed984341464fa890b5a8a7f1960ca1a1dafc", "url": "https://github.com/telstra/open-kilda/commit/25d5ed984341464fa890b5a8a7f1960ca1a1dafc", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-14T14:07:01Z", "type": "forcePushed"}, {"oid": "8a94f8263bba4f410eba5ceeb3dd753cf218338a", "url": "https://github.com/telstra/open-kilda/commit/8a94f8263bba4f410eba5ceeb3dd753cf218338a", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-25T05:46:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0NjA2Mg==", "url": "https://github.com/telstra/open-kilda/pull/3686#discussion_r476246062", "bodyText": "should be either }?.payload?.last()?.action or just don't use safe navigation at all", "author": "rtretyak", "createdAt": "2020-08-25T07:48:30Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteSpec.groovy", "diffHunk": "@@ -80,7 +82,12 @@ class AutoRerouteSpec extends HealthCheckSpecification {\n         def portDown = antiflap.portDown(isl.dstSwitch.dpId, isl.dstPort)\n \n         then: \"The flow becomes 'Down'\"\n-        Wrappers.wait(rerouteDelay + WAIT_OFFSET) { assert northbound.getFlowStatus(flow.id).status == FlowState.DOWN }\n+        Wrappers.wait(rerouteDelay + WAIT_OFFSET) {\n+            assert northbound.getFlowStatus(flow.id).status == FlowState.DOWN\n+            assert northbound.getFlowHistory(flow.id).find {\n+                it.action == REROUTE_ACTION && it.taskId =~ (/.+ : retry #1 ignore_bw true/)\n+            }?.payload.last().action == REROUTE_FAIL", "originalCommit": "8a94f8263bba4f410eba5ceeb3dd753cf218338a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0OTc0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3686#discussion_r476449742", "bodyText": "I thought one safe navigation would be enough.\nfixed.", "author": "andriidovhan", "createdAt": "2020-08-25T13:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0NjA2Mg=="}], "type": "inlineReview"}, {"oid": "6c951ea251aca31c394597559a60cce7dc321c82", "url": "https://github.com/telstra/open-kilda/commit/6c951ea251aca31c394597559a60cce7dc321c82", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-25T13:20:52Z", "type": "forcePushed"}, {"oid": "8371fef803cc5470531cf9065f7b6fd667b9b3df", "url": "https://github.com/telstra/open-kilda/commit/8371fef803cc5470531cf9065f7b6fd667b9b3df", "message": "Fix reroutes for max_latency path computation strategy", "committedDate": "2020-08-25T14:03:08Z", "type": "commit"}, {"oid": "0b121a74421ea3057f1e8105a545b39764eca1cc", "url": "https://github.com/telstra/open-kilda/commit/0b121a74421ea3057f1e8105a545b39764eca1cc", "message": "Merge pull request #3696 from telstra/fix-reroutes-for-max-latency\n\nFix reroutes for max_latency path computation strategy", "committedDate": "2020-08-25T18:56:13Z", "type": "commit"}, {"oid": "64111f7a7150119f82905cf2cd067185c95cedbd", "url": "https://github.com/telstra/open-kilda/commit/64111f7a7150119f82905cf2cd067185c95cedbd", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-26T07:01:41Z", "type": "commit"}, {"oid": "64111f7a7150119f82905cf2cd067185c95cedbd", "url": "https://github.com/telstra/open-kilda/commit/64111f7a7150119f82905cf2cd067185c95cedbd", "message": "refactor tests(make sure that flowReroute is finished)", "committedDate": "2020-08-26T07:01:41Z", "type": "forcePushed"}]}