{"pr_number": 3574, "pr_title": "One switch flows update status on switch events", "pr_createdAt": "2020-06-29T16:45:44Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3574", "timeline": [{"oid": "dc583c20daa2efaf484d68aee76ece71a617e4bd", "url": "https://github.com/telstra/open-kilda/commit/dc583c20daa2efaf484d68aee76ece71a617e4bd", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-29T21:08:00Z", "type": "forcePushed"}, {"oid": "3a75b7feaf38ff0823542604e780de52bf485d0d", "url": "https://github.com/telstra/open-kilda/commit/3a75b7feaf38ff0823542604e780de52bf485d0d", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-29T21:46:29Z", "type": "forcePushed"}, {"oid": "a25195658d78022c1addf39ad63a0c3351b3121c", "url": "https://github.com/telstra/open-kilda/commit/a25195658d78022c1addf39ad63a0c3351b3121c", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T06:29:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MTkwMg==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447461902", "bodyText": "Add description so that steps form a valid readable test case in the end.\nPlease add a blank line before when/then to keep the style similar to other tests", "author": "rtretyak", "createdAt": "2020-06-30T07:16:15Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "diffHunk": "@@ -72,6 +72,30 @@ class AutoRerouteV2Spec extends HealthCheckSpecification {\n         database.resetCosts()\n     }\n \n+    def \"Single switch flow changes status on switch up/down events\"() {\n+        given: \"single switch flow\"\n+        def sw = topology.getActiveSwitches()[0]\n+        def flow = flowHelperV2.singleSwitchFlow(sw)\n+        northboundV2.addFlow(flow)\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northboundV2.getFlowStatus(flow.flowId).status == FlowState.UP\n+        }\n+        when: \"Switch become disconnected\"\n+        def blockData = switchHelper.knockoutSwitch(sw, mgmtFlManager)\n+        then: \"Flow changes status to 'Down'\"\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northboundV2.getFlowStatus(flow.flowId).status == FlowState.DOWN\n+        }\n+        when: \"Switch wend back online\"\n+        switchHelper.reviveSwitch(sw, blockData, true)\n+        then:", "originalCommit": "a25195658d78022c1addf39ad63a0c3351b3121c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MjE0OA==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447462148", "bodyText": "went", "author": "rtretyak", "createdAt": "2020-06-30T07:16:46Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/flows/AutoRerouteV2Spec.groovy", "diffHunk": "@@ -72,6 +72,30 @@ class AutoRerouteV2Spec extends HealthCheckSpecification {\n         database.resetCosts()\n     }\n \n+    def \"Single switch flow changes status on switch up/down events\"() {\n+        given: \"single switch flow\"\n+        def sw = topology.getActiveSwitches()[0]\n+        def flow = flowHelperV2.singleSwitchFlow(sw)\n+        northboundV2.addFlow(flow)\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northboundV2.getFlowStatus(flow.flowId).status == FlowState.UP\n+        }\n+        when: \"Switch become disconnected\"\n+        def blockData = switchHelper.knockoutSwitch(sw, mgmtFlManager)\n+        then: \"Flow changes status to 'Down'\"\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert northboundV2.getFlowStatus(flow.flowId).status == FlowState.DOWN\n+        }\n+        when: \"Switch wend back online\"", "originalCommit": "a25195658d78022c1addf39ad63a0c3351b3121c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "87c6ec0da0665bd016bd13de0dc0279c41b41b36", "url": "https://github.com/telstra/open-kilda/commit/87c6ec0da0665bd016bd13de0dc0279c41b41b36", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T07:33:27Z", "type": "forcePushed"}, {"oid": "e62bb9fd848b0c9cd6e5d9d089955922d84708cf", "url": "https://github.com/telstra/open-kilda/commit/e62bb9fd848b0c9cd6e5d9d089955922d84708cf", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T07:34:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4MDQwMg==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447580402", "bodyText": "Bad name. Why if mention \"single-switch\"? It must be something like sendSwitchStatusUpdateNotification, the receiver can treat this notification in any required way.", "author": "surabujin", "createdAt": "2020-06-30T10:28:22Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/service/ISwitchCarrier.java", "diffHunk": "@@ -41,4 +42,6 @@\n     void sendSwitchSynchronizeRequest(String key, SwitchId switchId);\n \n     void sendAffectedFlowRerouteRequest(SwitchId switchId);\n+\n+    void sendUpdateSingleSwitchFlowsRequest(SwitchId switchId, SwitchStatus status);", "originalCommit": "9b76dd37a92e619bafb94cd79734fcebea0cbfe5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYzNDE5MA==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447634190", "bodyText": "Agree, although there's a precedent with sending \"flow reroute\" request instead of \"ISL status update\" notification - just check the method above.", "author": "sergii-iakovenko", "createdAt": "2020-06-30T12:12:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4MDQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4MjQ4OA==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447582488", "bodyText": "Incorrect pattern usage. Each make*Tuple method serve corresponding stream. These methods make abstraction over stream fields set, that's why they are bound to streams. So if you push message into reroute stream, you must use makeRerouteTuple(...).", "author": "surabujin", "createdAt": "2020-06-30T10:32:21Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/sw/SwitchHandler.java", "diffHunk": "@@ -211,6 +218,11 @@ private Values makeRerouteTuple(SwitchId switchId) {\n                 getCommandContext().fork(\"reroute\"));\n     }\n \n+    private Values makeUpdateSingleSwitchFlowsTuple(SwitchId switchId, SwitchStatus status) {", "originalCommit": "9b76dd37a92e619bafb94cd79734fcebea0cbfe5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4MzYyNw==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447583627", "bodyText": "Same issue with the name.", "author": "surabujin", "createdAt": "2020-06-30T10:34:26Z", "path": "src-java/reroute-topology/reroute-messaging/src/main/java/org/openkilda/messaging/command/reroute/UpdateSingleSwitchFlows.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.messaging.command.reroute;\n+\n+import org.openkilda.messaging.command.CommandData;\n+import org.openkilda.model.SwitchId;\n+import org.openkilda.model.SwitchStatus;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy;\n+import com.fasterxml.jackson.databind.annotation.JsonNaming;\n+import lombok.EqualsAndHashCode;\n+import lombok.NonNull;\n+import lombok.Value;\n+\n+@Value\n+@EqualsAndHashCode(callSuper = false)\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonNaming(SnakeCaseStrategy.class)\n+public class UpdateSingleSwitchFlows extends CommandData {", "originalCommit": "9b76dd37a92e619bafb94cd79734fcebea0cbfe5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4NTA0MA==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447585040", "bodyText": "Why not a transaction over all flows not over each of them?", "author": "surabujin", "createdAt": "2020-06-30T10:37:04Z", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -359,6 +359,27 @@ public void processManualRerouteRequest(MessageSender sender, String correlation\n         sender.emitManualRerouteCommand(request.getFlowId(), flowThrottlingData);\n     }\n \n+    /**\n+     * Handles request to update single switch flow status.\n+     */\n+    public void processSingleSwitchFlowStatusUpdate(UpdateSingleSwitchFlows request) {\n+        Collection<Flow> affectedFlows = flowRepository.findOneSwitchFlows(request.getSwitchId());\n+        FlowStatus newFlowStatus = request.getStatus() == SwitchStatus.ACTIVE ? FlowStatus.UP : FlowStatus.DOWN;\n+        FlowPathStatus newFlowPathStatus = request.getStatus() == SwitchStatus.ACTIVE\n+                ? FlowPathStatus.ACTIVE : FlowPathStatus.INACTIVE;\n+        for (Flow flow : affectedFlows) {\n+            log.info(\"Updating flow and path statuses for flow {} to {}, {}\", flow.getFlowId(), newFlowStatus,\n+                    newFlowPathStatus);\n+            transactionManager.doInTransaction(() -> {", "originalCommit": "9b76dd37a92e619bafb94cd79734fcebea0cbfe5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYwNDkzNw==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447604937", "bodyText": "Since we need to have consistent state within flow/flow_path, not all flow/flow_paths on the switch, and it also reduce time for each transaction", "author": "timofei-durakov", "createdAt": "2020-06-30T11:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4NTA0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4NTQ2MQ==", "url": "https://github.com/telstra/open-kilda/pull/3574#discussion_r447585461", "bodyText": "Need FSM diagram update.", "author": "surabujin", "createdAt": "2020-06-30T10:37:55Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/sw/SwitchFsm.java", "diffHunk": "@@ -151,13 +151,14 @@ public void setupEnter(SwitchFsmState from, SwitchFsmState to, SwitchFsmEvent ev\n \n     public void onlineEnter(SwitchFsmState from, SwitchFsmState to, SwitchFsmEvent event, SwitchFsmContext context) {\n         initialSwitchSetup(context);\n+        context.getOutput().sendUpdateSingleSwitchFlowsRequest(switchId, SwitchStatus.ACTIVE);", "originalCommit": "9b76dd37a92e619bafb94cd79734fcebea0cbfe5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fdc15545b438019b12e22ec02f8fa8e39ec38406", "url": "https://github.com/telstra/open-kilda/commit/fdc15545b438019b12e22ec02f8fa8e39ec38406", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T11:42:40Z", "type": "forcePushed"}, {"oid": "5c36cb24c0ba5d424c5162234f17e83ec72a8d7b", "url": "https://github.com/telstra/open-kilda/commit/5c36cb24c0ba5d424c5162234f17e83ec72a8d7b", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T11:59:38Z", "type": "forcePushed"}, {"oid": "e2d9c823cc5b626119db1f9e2ca1f5364f5afa77", "url": "https://github.com/telstra/open-kilda/commit/e2d9c823cc5b626119db1f9e2ca1f5364f5afa77", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T12:03:15Z", "type": "forcePushed"}, {"oid": "47e62aa442c0050470d385f8eda087410bbec502", "url": "https://github.com/telstra/open-kilda/commit/47e62aa442c0050470d385f8eda087410bbec502", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T12:13:46Z", "type": "commit"}, {"oid": "47e62aa442c0050470d385f8eda087410bbec502", "url": "https://github.com/telstra/open-kilda/commit/47e62aa442c0050470d385f8eda087410bbec502", "message": "One switch flows update status on switch events\n\nCloses: #1464", "committedDate": "2020-06-30T12:13:46Z", "type": "forcePushed"}, {"oid": "4f4cce0fe33e0123fc00423d06a01679d54dcb56", "url": "https://github.com/telstra/open-kilda/commit/4f4cce0fe33e0123fc00423d06a01679d54dcb56", "message": "refactor test for #1464", "committedDate": "2020-06-30T20:05:49Z", "type": "commit"}]}