{"pr_number": 3554, "pr_title": "Add replug tests for round-trip case and no portDown case", "pr_createdAt": "2020-06-22T08:26:29Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3554", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1MjU2Mw==", "url": "https://github.com/telstra/open-kilda/pull/3554#discussion_r443452563", "bodyText": "Why do you need NOVIFLOW_COPY_FIELD? Do you need RTL for the non-connected link?\nIf so, let's add this info into the step description/assumeTrue", "author": "andriidovhan", "createdAt": "2020-06-22T10:06:11Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/IslReplugSpec.groovy", "diffHunk": "@@ -21,11 +24,63 @@ import spock.lang.Narrative\n import java.util.concurrent.TimeUnit\n \n @Narrative(\"Verify scenarios around replugging ISLs between different switches/ports.\")\n+@Tags([TOPOLOGY_DEPENDENT])\n class IslReplugSpec extends HealthCheckSpecification {\n \n     @Value('${opentsdb.metric.prefix}')\n     String metricPrefix\n \n+    def \"Roundtrip ISL status changes to MOVED when replugging it into another switch\"() {\n+        given: \"A connected a-switch link, roundtrip-enabled\"\n+        def isl = topology.islsForActiveSwitches.find {\n+            it.aswitch?.inPort && it.aswitch?.outPort &&\n+                    it.srcSwitch.features.contains(SwitchFeature.NOVIFLOW_COPY_FIELD) &&\n+                    it.dstSwitch.features.contains(SwitchFeature.NOVIFLOW_COPY_FIELD)\n+        }\n+        assumeTrue(\"Wasn't able to find enough of required a-switch links with round-trip\", isl.asBoolean())\n+\n+        and: \"A non-connected a-switch link\"\n+        def notConnectedIsl = topology.notConnectedIsls.find {\n+            it.srcSwitch != isl.srcSwitch &&\n+                    it.srcSwitch.features.contains(SwitchFeature.NOVIFLOW_COPY_FIELD)", "originalCommit": "906b763dcd337998bc0c81c82fb5439d22d92a80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1NDgzNg==", "url": "https://github.com/telstra/open-kilda/pull/3554#discussion_r443454836", "bodyText": "changed to and: \"A non-connected a-switch link with round-trip support\"", "author": "rtretyak", "createdAt": "2020-06-22T10:10:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1MjU2Mw=="}], "type": "inlineReview"}, {"oid": "eaca9a8dfabe748838fdce04aca7f02975336b02", "url": "https://github.com/telstra/open-kilda/commit/eaca9a8dfabe748838fdce04aca7f02975336b02", "message": "Add replug tests for round-trip case and no portDown case", "committedDate": "2020-06-22T10:09:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1NDk3NA==", "url": "https://github.com/telstra/open-kilda/pull/3554#discussion_r443454974", "bodyText": "How about validating notConnectedIsl.srcSwitch ?", "author": "andriidovhan", "createdAt": "2020-06-22T10:10:41Z", "path": "src-java/testing/functional-tests/src/test/groovy/org/openkilda/functionaltests/spec/links/IslReplugSpec.groovy", "diffHunk": "@@ -21,11 +24,63 @@ import spock.lang.Narrative\n import java.util.concurrent.TimeUnit\n \n @Narrative(\"Verify scenarios around replugging ISLs between different switches/ports.\")\n+@Tags([TOPOLOGY_DEPENDENT])\n class IslReplugSpec extends HealthCheckSpecification {\n \n     @Value('${opentsdb.metric.prefix}')\n     String metricPrefix\n \n+    def \"Round-trip ISL status changes to MOVED when replugging it into another switch\"() {\n+        given: \"A connected a-switch link, round-trip-enabled\"\n+        def isl = topology.islsForActiveSwitches.find {\n+            it.aswitch?.inPort && it.aswitch?.outPort &&\n+                    it.srcSwitch.features.contains(SwitchFeature.NOVIFLOW_COPY_FIELD) &&\n+                    it.dstSwitch.features.contains(SwitchFeature.NOVIFLOW_COPY_FIELD)\n+        }\n+        assumeTrue(\"Wasn't able to find enough of required a-switch links with round-trip\", isl.asBoolean())\n+\n+        and: \"A non-connected a-switch link with round-trip support\"\n+        def notConnectedIsl = topology.notConnectedIsls.find {\n+            it.srcSwitch != isl.srcSwitch &&\n+                    it.srcSwitch.features.contains(SwitchFeature.NOVIFLOW_COPY_FIELD)\n+        }\n+        assumeTrue(\"Wasn't able to find enough not connected a-switch links\", notConnectedIsl.asBoolean())\n+\n+        when: \"Replug one end of the connected link to the not connected one\"\n+        def newIsl = islUtils.replug(isl, false, notConnectedIsl, true, false)\n+\n+        then: \"Replugged ISL status changes to MOVED\"\n+        islUtils.waitForIslStatus([isl, isl.reversed], MOVED)\n+\n+        and: \"New ISL becomes DISCOVERED\"\n+        islUtils.waitForIslStatus([newIsl, newIsl.reversed], DISCOVERED)\n+\n+        when: \"Replug the link back where it was\"\n+        islUtils.replug(newIsl, true, isl, false, true)\n+\n+        then: \"Original ISL becomes DISCOVERED again\"\n+        islUtils.waitForIslStatus([isl, isl.reversed], DISCOVERED)\n+\n+        and: \"Replugged ISL status changes to MOVED\"\n+        islUtils.waitForIslStatus([newIsl, newIsl.reversed], MOVED)\n+\n+        when: \"Remove the MOVED ISL\"\n+        assert northbound.deleteLink(islUtils.toLinkParameters(newIsl)).size() == 2\n+\n+        then: \"Moved ISL is removed\"\n+        Wrappers.wait(WAIT_OFFSET) {\n+            assert !islUtils.getIslInfo(newIsl).isPresent()\n+            assert !islUtils.getIslInfo(newIsl.reversed).isPresent()\n+        }\n+\n+        and: \"The src and dst switches of the isl pass switch validation\"\n+        [isl.srcSwitch.dpId, isl.dstSwitch.dpId].each { swId ->", "originalCommit": "eaca9a8dfabe748838fdce04aca7f02975336b02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1NjkzNw==", "url": "https://github.com/telstra/open-kilda/pull/3554#discussion_r443456937", "bodyText": "added", "author": "rtretyak", "createdAt": "2020-06-22T10:14:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1NDk3NA=="}], "type": "inlineReview"}, {"oid": "95cafae7858889b925710fa1555078259e58e01d", "url": "https://github.com/telstra/open-kilda/commit/95cafae7858889b925710fa1555078259e58e01d", "message": "Add replug tests for round-trip case and no portDown case", "committedDate": "2020-06-22T10:14:02Z", "type": "forcePushed"}, {"oid": "f60a19aeb52bdb89b3c1301c51e560343732a7c8", "url": "https://github.com/telstra/open-kilda/commit/f60a19aeb52bdb89b3c1301c51e560343732a7c8", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-06-25T11:27:25Z", "type": "forcePushed"}, {"oid": "7dac5b1a7f5a369de8ca4b6051807e1467e244d6", "url": "https://github.com/telstra/open-kilda/commit/7dac5b1a7f5a369de8ca4b6051807e1467e244d6", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-06-25T11:31:39Z", "type": "forcePushed"}, {"oid": "94aeb55d6a5cf88a8a2d1f17af34021fe3c2abdf", "url": "https://github.com/telstra/open-kilda/commit/94aeb55d6a5cf88a8a2d1f17af34021fe3c2abdf", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-06-25T11:37:51Z", "type": "forcePushed"}, {"oid": "348fec9ed168903698a969be5026ce71763ff2ee", "url": "https://github.com/telstra/open-kilda/commit/348fec9ed168903698a969be5026ce71763ff2ee", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-06-26T09:35:02Z", "type": "forcePushed"}, {"oid": "e6344d75588f7c892861b39e1099c85a07e62c87", "url": "https://github.com/telstra/open-kilda/commit/e6344d75588f7c892861b39e1099c85a07e62c87", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-06-26T11:33:54Z", "type": "forcePushed"}, {"oid": "50ad01c3e5c9ae8292ef02f83214d447a4401668", "url": "https://github.com/telstra/open-kilda/commit/50ad01c3e5c9ae8292ef02f83214d447a4401668", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-02T10:18:44Z", "type": "forcePushed"}, {"oid": "0b35820a99b68e6ee4a1a1c33565a4f764f22758", "url": "https://github.com/telstra/open-kilda/commit/0b35820a99b68e6ee4a1a1c33565a4f764f22758", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-02T11:26:44Z", "type": "forcePushed"}, {"oid": "d7ccfb7c10cb42041cf795b88e31b4d5ec19f655", "url": "https://github.com/telstra/open-kilda/commit/d7ccfb7c10cb42041cf795b88e31b4d5ec19f655", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-02T16:03:56Z", "type": "forcePushed"}, {"oid": "61970aa9a5f1c614da5eb92e8c9e1f35e1c629a7", "url": "https://github.com/telstra/open-kilda/commit/61970aa9a5f1c614da5eb92e8c9e1f35e1c629a7", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-03T07:06:59Z", "type": "forcePushed"}, {"oid": "5404133da5182d65aee0eb28dd1c00514419575c", "url": "https://github.com/telstra/open-kilda/commit/5404133da5182d65aee0eb28dd1c00514419575c", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-03T09:55:36Z", "type": "forcePushed"}, {"oid": "0654fc9ba8967f0e36d5ebab5c2ca402a19623ce", "url": "https://github.com/telstra/open-kilda/commit/0654fc9ba8967f0e36d5ebab5c2ca402a19623ce", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-03T11:30:28Z", "type": "forcePushed"}, {"oid": "01e10c6189fa405720531243bc73ec2c848b2e02", "url": "https://github.com/telstra/open-kilda/commit/01e10c6189fa405720531243bc73ec2c848b2e02", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-14T13:20:33Z", "type": "commit"}, {"oid": "01e10c6189fa405720531243bc73ec2c848b2e02", "url": "https://github.com/telstra/open-kilda/commit/01e10c6189fa405720531243bc73ec2c848b2e02", "message": "Update ISL replug tests with round-trip scenarios", "committedDate": "2020-07-14T13:20:33Z", "type": "forcePushed"}]}