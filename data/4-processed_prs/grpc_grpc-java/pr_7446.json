{"pr_number": 7446, "pr_title": "netty: BDP ping accounting should occur after flow control", "pr_createdAt": "2020-09-21T22:58:13Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7446", "timeline": [{"oid": "60454e5bc276a52be680ca9846cf000d127b1548", "url": "https://github.com/grpc/grpc-java/commit/60454e5bc276a52be680ca9846cf000d127b1548", "message": "netty: BDP ping accounting should occur after flow control\n\nIt's hoped that this resolves the \"too_many_pings\" issue some users are\nseeing that is worked around by GRPC_EXPERIMENTAL_AUTOFLOWCONTROL=false.\nThis change also avoids resetting the ping count for empty data frames\n(which shouldn't really happen with gRPC).\n\nThe previous code failed to reset the ping count on HEADERS and\nWINDOW_UPDATE. The code _appeared_ to have callbacks for WINDOW_UPDATE,\nbut was layered above the Http2Connection so was never called. Thus,\nthis version is much more aggressive then the previous version while\nalso addressing the correctness issue.", "committedDate": "2020-09-21T22:52:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI2NTI0Mg==", "url": "https://github.com/grpc/grpc-java/pull/7446#discussion_r496265242", "bodyText": "Why checking isReadable() while the old implementation did not?", "author": "dapengzhang0", "createdAt": "2020-09-28T22:12:50Z", "path": "netty/src/main/java/io/grpc/netty/NettyClientHandler.java", "diffHunk": "@@ -912,4 +917,63 @@ public void onPingRead(ChannelHandlerContext ctx, long data) throws Http2Excepti\n       }\n     }\n   }\n+\n+  private static class PingCountingFrameWriter extends DecoratingHttp2FrameWriter\n+      implements AbstractNettyHandler.PingLimiter {\n+    private int pingCount;\n+\n+    public PingCountingFrameWriter(Http2FrameWriter delegate) {\n+      super(delegate);\n+    }\n+\n+    @Override\n+    public boolean isPingAllowed() {\n+      // \"3 strikes\" may cause the server to complain, so we limit ourselves to 2 or below.\n+      return pingCount < 2;\n+    }\n+\n+    @Override\n+    public ChannelFuture writeHeaders(\n+        ChannelHandlerContext ctx, int streamId, Http2Headers headers,\n+        int padding, boolean endStream, ChannelPromise promise) {\n+      pingCount = 0;\n+      return super.writeHeaders(ctx, streamId, headers, padding, endStream, promise);\n+    }\n+\n+    @Override\n+    public ChannelFuture writeHeaders(\n+        ChannelHandlerContext ctx, int streamId, Http2Headers headers,\n+        int streamDependency, short weight, boolean exclusive,\n+        int padding, boolean endStream, ChannelPromise promise) {\n+      pingCount = 0;\n+      return super.writeHeaders(ctx, streamId, headers, streamDependency, weight, exclusive,\n+          padding, endStream, promise);\n+    }\n+\n+    @Override\n+    public ChannelFuture writeWindowUpdate(\n+        ChannelHandlerContext ctx, int streamId, int windowSizeIncrement, ChannelPromise promise) {\n+      pingCount = 0;\n+      return super.writeWindowUpdate(ctx, streamId, windowSizeIncrement, promise);\n+    }\n+\n+    @Override\n+    public ChannelFuture writePing(\n+        ChannelHandlerContext ctx, boolean ack, long data, ChannelPromise promise) {\n+      if (!ack) {\n+        pingCount++;\n+      }\n+      return super.writePing(ctx, ack, data, promise);\n+    }\n+\n+    @Override\n+    public ChannelFuture writeData(\n+        ChannelHandlerContext ctx, int streamId, ByteBuf data, int padding, boolean endStream,\n+        ChannelPromise promise) {\n+      if (data.isReadable()) {", "originalCommit": "60454e5bc276a52be680ca9846cf000d127b1548", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI2ODA1NQ==", "url": "https://github.com/grpc/grpc-java/pull/7446#discussion_r496268055", "bodyText": "I mentioned I did this in the description: \"This change also avoids resetting the ping count for empty data frames (which shouldn't really happen with gRPC).\"\nIt was a subtle difference with the server's behavior that I noticed when debugging. While I don't think isReadable() will ever be false for gRPC, it seemed good to add the condition to avoid a surprise.", "author": "ejona86", "createdAt": "2020-09-28T22:20:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI2NTI0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI2ODg1OA==", "url": "https://github.com/grpc/grpc-java/pull/7446#discussion_r496268858", "bodyText": "In short: the server does not reset the ping counter when it receives an empty data frame. It seemed we should do the same in our accounting.", "author": "ejona86", "createdAt": "2020-09-28T22:22:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI2NTI0Mg=="}], "type": "inlineReview"}]}