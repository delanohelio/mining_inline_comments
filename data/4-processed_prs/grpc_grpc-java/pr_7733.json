{"pr_number": 7733, "pr_title": "Bump versions for lots of dependencies", "pr_createdAt": "2020-12-16T19:41:09Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7733", "timeline": [{"oid": "3a45fa3bd3dc65f0bb56722f9dd1a15eee07032d", "url": "https://github.com/grpc/grpc-java/commit/3a45fa3bd3dc65f0bb56722f9dd1a15eee07032d", "message": "Bump versions for lots of dependencies\n\nI didn't touch Protobuf and Netty; we upgrade those individually. Below\nare issues I encountered that caused me to not upgrade (further).\n\nGuava 30.1-android fails to build with Android without enabling\ndesugaring. https://github.com/google/guava/issues/5358\n\nRobolectric 4.4 breaks AndroidChannelBuilderTest.\nhttps://github.com/grpc/grpc-java/issues/7731\n\nOpencensus 0.28.1+ is incompatible with gRPC.\nhttps://github.com/census-instrumentation/opencensus-java/issues/2069\nhttps://github.com/grpc/grpc-java/issues/7732\n\nTruth now defines the asm dependency as \"compile\" although it is still\noptional. But asm appears to have accidentally included incorrect gradle\nmodule metadata in their release (I see they've disabled the metadata on\nmaster) which make gradle think it requires Java 8. We could asm\neverywhere, but that's is annoying. It seems likely this will resolve\nitself.\n\nMockito can be upgraded to 3.4.0, but it deprecates initMocks, which\ncauses more code churn than I wanted in this commit. I still\nsynchronized the example versions on 3.4.0, though, as it was already\nbeing used in some examples and the examples don't use initMocks.", "committedDate": "2020-12-16T19:30:15Z", "type": "commit"}, {"oid": "80910e4e4dee09f5568913f7c7eb1973198f7348", "url": "https://github.com/grpc/grpc-java/commit/80910e4e4dee09f5568913f7c7eb1973198f7348", "message": "Also bump Bazel-defined deps", "committedDate": "2020-12-16T22:01:12Z", "type": "commit"}, {"oid": "31444496bcf3d72d9ccd07244def629251498ea9", "url": "https://github.com/grpc/grpc-java/commit/31444496bcf3d72d9ccd07244def629251498ea9", "message": "Fix Maven requireUpperBoundDeps failures", "committedDate": "2020-12-16T22:24:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMzQyMg==", "url": "https://github.com/grpc/grpc-java/pull/7733#discussion_r544923422", "bodyText": "Why need to move this around (seems irrelevant)?", "author": "voidzcy", "createdAt": "2020-12-17T09:06:45Z", "path": "examples/example-gauth/pom.xml", "diffHunk": "@@ -54,6 +49,11 @@\n       <groupId>io.grpc</groupId>\n       <artifactId>grpc-auth</artifactId>\n     </dependency>\n+    <dependency>", "originalCommit": "31444496bcf3d72d9ccd07244def629251498ea9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI1MDA5Nw==", "url": "https://github.com/grpc/grpc-java/pull/7733#discussion_r545250097", "bodyText": "Because Maven's dependency resolution is order-dependent; Maven does a breadth-first search and the first time it encounters each dependency decides the version of that dependency it will use. protobuf-java-util pulls in older versions of Guava and error_prone_annotations. Moving it after gRPC happens to fix the resolution order such that gRPC's (direct) dependencies are discovered first. You can see https://source.cloud.google.com/results/invocations/987ebb25-47f0-465d-94d6-4385647b1aef/log for what the error looked like", "author": "ejona86", "createdAt": "2020-12-17T17:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMzQyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI1MTM1Ng==", "url": "https://github.com/grpc/grpc-java/pull/7733#discussion_r545251356", "bodyText": "(Note that the only reason we see an error there is because we've enabled the Maven Enforcer plugin with requireUpperBoundDeps; Maven normally will happily downgrade transitive dependencies)", "author": "ejona86", "createdAt": "2020-12-17T17:03:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMzQyMg=="}], "type": "inlineReview"}]}