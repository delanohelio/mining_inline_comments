{"pr_number": 7549, "pr_title": "interop-testing: support dynamic configuration and accumulated stats for xDS test client", "pr_createdAt": "2020-10-22T21:27:02Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7549", "timeline": [{"oid": "2d2307ea8fae0531b05d830e1b6c49601add4a8d", "url": "https://github.com/grpc/grpc-java/commit/2d2307ea8fae0531b05d830e1b6c49601add4a8d", "message": "Support configuring test client rpc type and metadata dynamically.", "committedDate": "2020-10-22T20:35:27Z", "type": "commit"}, {"oid": "34a3ed50ff5a5ee97c883d162efd8c4152340b12", "url": "https://github.com/grpc/grpc-java/commit/34a3ed50ff5a5ee97c883d162efd8c4152340b12", "message": "Support accumulated rpc stats.", "committedDate": "2020-10-22T21:25:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MjcyMg==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r510492722", "bodyText": "I don't understand this. How to use XdsUpdateClientConfigureService to change the value, when runQps() starts immediately?", "author": "dapengzhang0", "createdAt": "2020-10-22T22:25:41Z", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -167,8 +169,10 @@ private void parseArgs(String[] args) {\n               + c.qps\n               + \"\\n  --rpc=STR              Types of RPCs to make, ',' separated string. RPCs can \"\n               + \"be EmptyCall or UnaryCall. Default: UnaryCall\"\n+              + \"\\n[deprecated] Use XdsUpdateClientConfigureService\"", "originalCommit": "34a3ed50ff5a5ee97c883d162efd8c4152340b12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUwNTA1OA==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r510505058", "bodyText": "By default, the test client just starts up and sends unary RPCs. That's the warmup phase, the test case won't begin until the test driver has checked if there is at least one RPCs succeed on each backend. This is to ensure the backend service configuration has been picked up by TD. We do not care what type of RPCs used to do the warm up, default unary is completely fine. After the warmup phase, we can change call behaviors to whatever needed for achieving the test goal.", "author": "voidzcy", "createdAt": "2020-10-22T23:02:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUzMzgzNQ==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r510533835", "bodyText": "But rpcTypes is only read once in runQps(), how can rpcTypes be used after updated by the driver?", "author": "dapengzhang0", "createdAt": "2020-10-23T00:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUzODA5Nw==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r510538097", "bodyText": "Oops, this is screwed up. Currently each PeriodicRpc task is created per RpcType. It should be changed to run a single PeriodicRpc and each time it runs, it looks up the RpcType list and sends out one RPC per RpcType.", "author": "voidzcy", "createdAt": "2020-10-23T00:55:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1MjU2Mw==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r510552563", "bodyText": "Should be fixed now.", "author": "voidzcy", "createdAt": "2020-10-23T01:57:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MjcyMg=="}], "type": "inlineReview"}, {"oid": "7825e2343079c8726e5ea685903726a6a715db73", "url": "https://github.com/grpc/grpc-java/commit/7825e2343079c8726e5ea685903726a6a715db73", "message": "Make each PeriodicRpc task run send one RPC  for each type.", "committedDate": "2020-10-23T01:56:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyNjg3Mw==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r511326873", "bodyText": "Did I miss some synchronization barrier here? It seems like multiple calls to handleRpcCompleted could be executing simultaneously and count might no longer be correct by the time this #put() is invoked.", "author": "ericgribkoff", "createdAt": "2020-10-24T06:19:29Z", "path": "interop-testing/src/main/java/io/grpc/testing/integration/XdsTestClient.java", "diffHunk": "@@ -364,31 +375,43 @@ public void onNext(SimpleResponse response) {\n                   }\n                 }\n               });\n+          rpcsStarted.getAndIncrement();\n         }\n       }\n-    }\n \n-    long nanosPerQuery = TimeUnit.SECONDS.toNanos(1) / qps;\n-\n-    for (RpcType rpcType : rpcTypes) {\n-      ListenableScheduledFuture<?> future =\n-          exec.scheduleAtFixedRate(\n-              new PeriodicRpc(rpcType), 0, nanosPerQuery, TimeUnit.NANOSECONDS);\n+      private void handleRpcCompleted(long requestId, RpcType rpcType, String hostname,\n+          Set<XdsStatsWatcher> watchers) {\n+        int count = 0;\n+        if (rpcsSucceededByPeer.containsKey(hostname)) {\n+          count = rpcsSucceededByPeer.get(hostname);\n+        }\n+        rpcsSucceededByPeer.put(hostname, count + 1);", "originalCommit": "7825e2343079c8726e5ea685903726a6a715db73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE5NDE0MQ==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r512194141", "bodyText": "You are right, this needs to be fixed.\nBtw, now that we are warming up the test client normally before making calls open for testing. So we can still use the existing way for checking if there is at least one RPCs succeeding on each backend (getting the stats for next n RPCs). Then we do not need to categorize the number of successful RPCs for each peer, we just need to know the total successful RPCs.", "author": "voidzcy", "createdAt": "2020-10-26T18:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyNjg3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA4Nzc1Mw==", "url": "https://github.com/grpc/grpc-java/pull/7549#discussion_r513087753", "bodyText": "Updated to count the total number of RPCs succeeded without counting them separately for each remote peer.", "author": "voidzcy", "createdAt": "2020-10-27T23:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyNjg3Mw=="}], "type": "inlineReview"}, {"oid": "4961e436120dc6fe96c2bcdeccb4be0e6660f4bf", "url": "https://github.com/grpc/grpc-java/commit/4961e436120dc6fe96c2bcdeccb4be0e6660f4bf", "message": "Merge branch 'master' of github.com:grpc/grpc-java into impl/xds_test_client_for_circuit_breaking", "committedDate": "2020-10-27T23:10:29Z", "type": "commit"}, {"oid": "aa5eb2208d815aeab1b4ffaf55ad79e54f42dfb6", "url": "https://github.com/grpc/grpc-java/commit/aa5eb2208d815aeab1b4ffaf55ad79e54f42dfb6", "message": "Update counting for total number of RPCs succeeded.", "committedDate": "2020-10-28T19:22:51Z", "type": "commit"}, {"oid": "aa5eb2208d815aeab1b4ffaf55ad79e54f42dfb6", "url": "https://github.com/grpc/grpc-java/commit/aa5eb2208d815aeab1b4ffaf55ad79e54f42dfb6", "message": "Update counting for total number of RPCs succeeded.", "committedDate": "2020-10-28T19:22:51Z", "type": "forcePushed"}]}