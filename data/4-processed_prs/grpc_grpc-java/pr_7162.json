{"pr_number": 7162, "pr_title": "xds: Add a mock Cel library used for evaluation in Cel Engine", "pr_createdAt": "2020-06-25T00:36:46Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7162", "timeline": [{"oid": "e67fc49583729ca2bc780032be86f25b85903945", "url": "https://github.com/grpc/grpc-java/commit/e67fc49583729ca2bc780032be86f25b85903945", "message": "Added Cel library interface draft", "committedDate": "2020-06-23T00:22:23Z", "type": "commit"}, {"oid": "6cd2a968ba4c6cdced295c9fc3220b7dd39c2795", "url": "https://github.com/grpc/grpc-java/commit/6cd2a968ba4c6cdced295c9fc3220b7dd39c2795", "message": "Init test branch for Cel library", "committedDate": "2020-06-23T03:20:13Z", "type": "commit"}, {"oid": "2af3a46ef9fdb028864636379a2879d5d1162e3b", "url": "https://github.com/grpc/grpc-java/commit/2af3a46ef9fdb028864636379a2879d5d1162e3b", "message": "Finished Cel library interface", "committedDate": "2020-06-23T18:17:12Z", "type": "commit"}, {"oid": "5f12dbc1f1fea7fab2904f750a094f6415d6c5f2", "url": "https://github.com/grpc/grpc-java/commit/5f12dbc1f1fea7fab2904f750a094f6415d6c5f2", "message": "Cleaned up files", "committedDate": "2020-06-23T18:21:24Z", "type": "commit"}, {"oid": "c7d1116e4415688ec7e2a10bb051031a8ca59c6f", "url": "https://github.com/grpc/grpc-java/commit/c7d1116e4415688ec7e2a10bb051031a8ca59c6f", "message": "Fixed serial warning", "committedDate": "2020-06-23T19:00:03Z", "type": "commit"}, {"oid": "3310160f5e5d1b20db88c02f66db3f6ba8274aa1", "url": "https://github.com/grpc/grpc-java/commit/3310160f5e5d1b20db88c02f66db3f6ba8274aa1", "message": "Fixed unused variable warning", "committedDate": "2020-06-23T19:20:36Z", "type": "commit"}, {"oid": "ac6808e6b67fb6a5c8a4cd579df475ab3153507b", "url": "https://github.com/grpc/grpc-java/commit/ac6808e6b67fb6a5c8a4cd579df475ab3153507b", "message": "Fixed builder warning", "committedDate": "2020-06-23T19:54:12Z", "type": "commit"}, {"oid": "3e4c599569b8636c0c58359344feac78a8c825e7", "url": "https://github.com/grpc/grpc-java/commit/3e4c599569b8636c0c58359344feac78a8c825e7", "message": "Added fake test for Cel library", "committedDate": "2020-06-23T21:24:52Z", "type": "commit"}, {"oid": "885dfb9c91465c608a42e7341e17b398f2719cc0", "url": "https://github.com/grpc/grpc-java/commit/885dfb9c91465c608a42e7341e17b398f2719cc0", "message": "Remove unit tests", "committedDate": "2020-06-23T22:11:07Z", "type": "commit"}, {"oid": "bd65a975b13c775b7769835938716c577fbc5668", "url": "https://github.com/grpc/grpc-java/commit/bd65a975b13c775b7769835938716c577fbc5668", "message": "Merge branch 'Cindy/CelInterface' of github.com:cindyxue/grpc-java into Cindy/CelInterface", "committedDate": "2020-06-24T21:03:27Z", "type": "commit"}, {"oid": "f608b7965ed0e5acbdebcf7074039a683b2cdd90", "url": "https://github.com/grpc/grpc-java/commit/f608b7965ed0e5acbdebcf7074039a683b2cdd90", "message": "Merge pull request #2 from cindyxue/master\n\nMerge master to Cindy/CelInterface", "committedDate": "2020-06-24T21:05:55Z", "type": "commit"}, {"oid": "5355f362d1f54387e63f4f4e0b2b439785ac866a", "url": "https://github.com/grpc/grpc-java/commit/5355f362d1f54387e63f4f4e0b2b439785ac866a", "message": "Merge branch 'Cindy/CelInterface' of github.com:cindyxue/grpc-java into Cindy/CelInterface", "committedDate": "2020-06-24T21:06:31Z", "type": "commit"}, {"oid": "90287350479c88309e0d296cc57b1196e00f7f45", "url": "https://github.com/grpc/grpc-java/commit/90287350479c88309e0d296cc57b1196e00f7f45", "message": "Added checkExpr dependency", "committedDate": "2020-06-24T21:12:31Z", "type": "commit"}, {"oid": "f6aaa15e438e57f242fd574a75c435761c0c12c1", "url": "https://github.com/grpc/grpc-java/commit/f6aaa15e438e57f242fd574a75c435761c0c12c1", "message": "Changed Expr type to CheckedExpr type in the mock library", "committedDate": "2020-06-24T21:22:22Z", "type": "commit"}, {"oid": "ce20137e94d195c24315ca04a889ec48bbbb2e80", "url": "https://github.com/grpc/grpc-java/commit/ce20137e94d195c24315ca04a889ec48bbbb2e80", "message": "Added CheckedExpr dependency", "committedDate": "2020-06-24T22:44:21Z", "type": "commit"}, {"oid": "98363adf03f1fe80d6fa0a45d079c5c78da143d6", "url": "https://github.com/grpc/grpc-java/commit/98363adf03f1fe80d6fa0a45d079c5c78da143d6", "message": "Restructured Cel interface", "committedDate": "2020-06-24T23:48:02Z", "type": "commit"}, {"oid": "056128e17ac0c8230449dbac445547d31865df0f", "url": "https://github.com/grpc/grpc-java/commit/056128e17ac0c8230449dbac445547d31865df0f", "message": "Added unit tests for Cel interface", "committedDate": "2020-06-25T00:25:55Z", "type": "commit"}, {"oid": "e4e485bcf2be16491cb9663ba054920d48f6a94b", "url": "https://github.com/grpc/grpc-java/commit/e4e485bcf2be16491cb9663ba054920d48f6a94b", "message": "Modified unit tests for Cel interface", "committedDate": "2020-06-26T21:13:24Z", "type": "forcePushed"}, {"oid": "bbd693c66fceaed67018a3cf6a6c0d04eb7b8c9f", "url": "https://github.com/grpc/grpc-java/commit/bbd693c66fceaed67018a3cf6a6c0d04eb7b8c9f", "message": "Modified unit tests for Cel interface", "committedDate": "2020-06-27T00:17:09Z", "type": "commit"}, {"oid": "bbd693c66fceaed67018a3cf6a6c0d04eb7b8c9f", "url": "https://github.com/grpc/grpc-java/commit/bbd693c66fceaed67018a3cf6a6c0d04eb7b8c9f", "message": "Modified unit tests for Cel interface", "committedDate": "2020-06-27T00:17:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI2NDIxOQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r447264219", "bodyText": "Keep the new line at the end of the file. Same for the other files.", "author": "ZhenLian", "createdAt": "2020-06-29T21:27:21Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Activation.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+  \n+/** An object which allows to bind names to values. */\n+public abstract class Activation {\n+  /** Resolves the given name to its value. Returns null if resolution fails. */\n+  @Nullable\n+  public abstract Object resolve(String name);\n+\n+  /** Creates a binder backed up by a map. */\n+  public static Activation copyOf(Map<String, ?> map) {\n+    final ImmutableMap<String, Object> copy = ImmutableMap.copyOf(map);\n+    return new Activation() {\n+      @Nullable\n+      @Override\n+      public Object resolve(String name) {\n+        return copy.get(name);\n+      }\n+\n+      @Override\n+      public String toString() {\n+        return copy.toString();\n+      }\n+    };\n+  }\n+}", "originalCommit": "bbd693c66fceaed67018a3cf6a6c0d04eb7b8c9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI2NTQ4OA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r447265488", "bodyText": "Ok!", "author": "cindyxue", "createdAt": "2020-06-29T21:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI2NDIxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3MTczMQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r447271731", "bodyText": "You can also remove the import changes in this PR.", "author": "ZhenLian", "createdAt": "2020-06-29T21:44:02Z", "path": "xds/third_party/googleapis/import.sh", "diffHunk": "@@ -24,6 +24,7 @@ SOURCE_PROTO_BASE_DIR=googleapis\n TARGET_PROTO_BASE_DIR=src/main/proto\n FILES=(\n google/api/expr/v1alpha1/syntax.proto\n+google/api/expr/v1alpha1/checked.proto", "originalCommit": "3cfdb41e83e74374bb61f4cb1ce6e2f7fabdece1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3NDMxMQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r447274311", "bodyText": "Sure!", "author": "cindyxue", "createdAt": "2020-06-29T21:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3MTczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3NTA5MQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r447275091", "bodyText": "However, I think this branch will not compile after I removed this dependency. Should I wait till the other PR got merged so this will no longer be a diff?", "author": "cindyxue", "createdAt": "2020-06-29T21:51:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3MTczMQ=="}], "type": "inlineReview"}, {"oid": "ae34319491f67b1eee56fcc341e9489b6bfc8e37", "url": "https://github.com/grpc/grpc-java/commit/ae34319491f67b1eee56fcc341e9489b6bfc8e37", "message": "Review comments #1", "committedDate": "2020-06-30T20:11:42Z", "type": "forcePushed"}, {"oid": "fafe8a4f88d6a09156ec2dd46dcfd273489a00d6", "url": "https://github.com/grpc/grpc-java/commit/fafe8a4f88d6a09156ec2dd46dcfd273489a00d6", "message": "Review comments #1", "committedDate": "2020-07-01T03:38:31Z", "type": "commit"}, {"oid": "fafe8a4f88d6a09156ec2dd46dcfd273489a00d6", "url": "https://github.com/grpc/grpc-java/commit/fafe8a4f88d6a09156ec2dd46dcfd273489a00d6", "message": "Review comments #1", "committedDate": "2020-07-01T03:38:31Z", "type": "forcePushed"}, {"oid": "17ba1254e0027445916fc05297f901d0333b7683", "url": "https://github.com/grpc/grpc-java/commit/17ba1254e0027445916fc05297f901d0333b7683", "message": "Added ExprChecker and relevent classes", "committedDate": "2020-07-06T23:42:18Z", "type": "commit"}, {"oid": "17ba1254e0027445916fc05297f901d0333b7683", "url": "https://github.com/grpc/grpc-java/commit/17ba1254e0027445916fc05297f901d0333b7683", "message": "Added ExprChecker and relevent classes", "committedDate": "2020-07-06T23:42:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5NzYzNQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r451197635", "bodyText": "Since right now we can get only Expr instead of CheckedExpr, you can add another interface\nInterpretable createInterpretable(Expr expr) throws InterpreterException;\n\nAnyway we need to do some integration work when the APIs are ready, so creating a fake function should be fine.", "author": "ZhenLian", "createdAt": "2020-07-07T23:23:44Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Interpreter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal;\n+\n+import com.google.api.expr.v1alpha1.CheckedExpr;\n+import io.grpc.xds.InterpreterException;\n+\n+/** Interface to a CEL interpreter. */\n+public interface Interpreter {\n+  /** Creates an interpretable for the given expression. */\n+  Interpretable createInterpretable(CheckedExpr checkedExpr) throws InterpreterException;", "originalCommit": "17ba1254e0027445916fc05297f901d0333b7683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5ODk5Mg==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r451198992", "bodyText": "Sure!", "author": "cindyxue", "createdAt": "2020-07-07T23:27:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5NzYzNQ=="}], "type": "inlineReview"}, {"oid": "5a75e3de84001f4aa5dbc8556369705e6d1f5ed2", "url": "https://github.com/grpc/grpc-java/commit/5a75e3de84001f4aa5dbc8556369705e6d1f5ed2", "message": "Removed ExprChecker and relevent classes", "committedDate": "2020-07-07T23:59:37Z", "type": "forcePushed"}, {"oid": "89465719b22b0e887cbba9d0699d29f9033b503a", "url": "https://github.com/grpc/grpc-java/commit/89465719b22b0e887cbba9d0699d29f9033b503a", "message": "Removed ExprChecker and relevent classes", "committedDate": "2020-07-08T18:48:39Z", "type": "forcePushed"}, {"oid": "56d7eaa18911dd62c1e66ad141f572123699b86d", "url": "https://github.com/grpc/grpc-java/commit/56d7eaa18911dd62c1e66ad141f572123699b86d", "message": "Removed ExprChecker and relevent classes", "committedDate": "2020-07-08T19:41:10Z", "type": "commit"}, {"oid": "56d7eaa18911dd62c1e66ad141f572123699b86d", "url": "https://github.com/grpc/grpc-java/commit/56d7eaa18911dd62c1e66ad141f572123699b86d", "message": "Removed ExprChecker and relevent classes", "committedDate": "2020-07-08T19:41:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMTgzNg==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452531836", "bodyText": "I thought we want to evaluate CheckedExpr, rather than Expr.\nEnvoy RBAC already has CheckedExpr with merge of envoyproxy/envoy#11902", "author": "jiangtaoli2016", "createdAt": "2020-07-09T22:50:59Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/DefaultInterpreter.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal;\n+\n+import com.google.api.expr.v1alpha1.Expr;\n+import io.grpc.xds.InterpreterException;\n+\n+/** Default implementation of {@link Interpreter}. */\n+public class DefaultInterpreter implements Interpreter {\n+  /**\n+  * Creates a new interpreter\n+  * @param typeProvider object which allows to construct and inspect messages.\n+  * @param dispatcher a method dispatcher.\n+  */\n+  public DefaultInterpreter(RuntimeTypeProvider typeProvider, Dispatcher dispatcher) {}  \n+  \n+  @Override\n+  public Interpretable createInterpretable(Expr expr) ", "originalCommit": "56d7eaa18911dd62c1e66ad141f572123699b86d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzODEyMA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452538120", "bodyText": "Sure, I'll fix it!", "author": "cindyxue", "createdAt": "2020-07-09T23:10:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMTgzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNjU1MQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452536551", "bodyText": "Could you add the following comment to each of the CEL sub files?\n/**\n  This is a Java stub for evaluating Common Expression Language (CEL). \n  More information about CEL can be found in https://github.com/google/cel-spec. \n  Once Java CEL has been open-sourced, this stub will be removed.\n*/", "author": "jiangtaoli2016", "createdAt": "2020-07-09T23:05:33Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Activation.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+  \n+/** An object which allows to bind names to values. */", "originalCommit": "56d7eaa18911dd62c1e66ad141f572123699b86d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzODI1MA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452538250", "bodyText": "Yes! Thanks for bringing it up :)", "author": "cindyxue", "createdAt": "2020-07-09T23:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNjU1MQ=="}], "type": "inlineReview"}, {"oid": "50df0b24e7dc15926999caaa9f9a9496a3e020ad", "url": "https://github.com/grpc/grpc-java/commit/50df0b24e7dc15926999caaa9f9a9496a3e020ad", "message": "Review comment #2", "committedDate": "2020-07-10T00:09:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MzIyNA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452563224", "bodyText": "you don't need such comment on this file.", "author": "jiangtaoli2016", "createdAt": "2020-07-10T00:40:56Z", "path": "xds/src/test/java/io/grpc/xds/internal/rbac/engine/cel/CelInterfaceTest.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**", "originalCommit": "50df0b24e7dc15926999caaa9f9a9496a3e020ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2NDQ1OA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452564458", "bodyText": "Ok!", "author": "cindyxue", "createdAt": "2020-07-10T00:46:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MzIyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2NDAxOQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452564019", "bodyText": "You can put the comment right above each class along with class description rather than on top of each file. You also need to format the comment (my bad I was not clear in my previous comment)..", "author": "jiangtaoli2016", "createdAt": "2020-07-10T00:44:33Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Activation.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**", "originalCommit": "50df0b24e7dc15926999caaa9f9a9496a3e020ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2NDU5OQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452564599", "bodyText": "Sure, no worries!", "author": "cindyxue", "createdAt": "2020-07-10T00:46:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2NDAxOQ=="}], "type": "inlineReview"}, {"oid": "d68578daa5d538b0bce90db91413570d392b9612", "url": "https://github.com/grpc/grpc-java/commit/d68578daa5d538b0bce90db91413570d392b9612", "message": "Review comments #3", "committedDate": "2020-07-10T01:20:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NjM0OA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452886348", "bodyText": "There should only be one javadoc comment per class/method/field. Ditto elsewhere.", "author": "ejona86", "createdAt": "2020-07-10T14:40:27Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Activation.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+  \n+/**\n+ * This is a Java stub for evaluating Common Expression Language (CEL). \n+ * More information about CEL can be found in https://github.com/google/cel-spec. \n+ * Once Java CEL has been open-sourced, this stub will be removed.\n+ */\n+/** An object which allows to bind names to values. */", "originalCommit": "d68578daa5d538b0bce90db91413570d392b9612", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MTk5Ng==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452941996", "bodyText": "Sure, I'll fix it :)", "author": "cindyxue", "createdAt": "2020-07-10T16:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NjM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NzkwMg==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452887902", "bodyText": "This is really weird. Why is one @Test calling another @Test? It looks like maybe setup() shouldn't have the @Test annotation.", "author": "ejona86", "createdAt": "2020-07-10T14:42:57Z", "path": "xds/src/test/java/io/grpc/xds/internal/rbac/engine/cel/CelInterfaceTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.api.expr.v1alpha1.CheckedExpr;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.protobuf.Descriptors.Descriptor;\n+import io.grpc.xds.InterpreterException;\n+import java.lang.String;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+/** Unit tests for Cel Interface. */\n+@RunWith(JUnit4.class)\n+public class CelInterfaceTest {\n+  private RuntimeTypeProvider messageProvider;\n+  private Dispatcher dispatcher;\n+  private Interpreter interpreter;\n+  private Activation activation;\n+  private Object result;\n+\n+  @Test\n+  public void setup() throws InterpreterException {\n+    // Set up interpreter used in Cel library's eval function.\n+    List<Descriptor> descriptors = new ArrayList<>();\n+    messageProvider = DescriptorMessageProvider.dynamicMessages(descriptors);\n+    dispatcher = DefaultDispatcher.create();\n+    interpreter = new DefaultInterpreter(messageProvider, dispatcher);\n+    // Set up activation used in Cel library's eval function.\n+    Map<String, Object> map = new HashMap<>();\n+    map.put(\"requestUrlPath\", new Object());\n+    map.put(\"requestHost\", new Object());\n+    map.put(\"requestMethod\", new Object());\n+    ImmutableMap<String, Object> apiAttributes = ImmutableMap.copyOf(map);\n+    activation = Activation.copyOf(apiAttributes);\n+    // Add a fake condition CheckedExpr that are being evaluated.\n+    CheckedExpr conditions = CheckedExpr.newBuilder().build();\n+    result = interpreter.createInterpretable(conditions).eval(activation);\n+  }\n+\n+  @Test\n+  public void testCelInterface() {\n+    try {\n+      setup();", "originalCommit": "d68578daa5d538b0bce90db91413570d392b9612", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzOTYyMg==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452939622", "bodyText": "Thanks for the catch! Does @Before make more sense here?", "author": "cindyxue", "createdAt": "2020-07-10T16:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NzkwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0ODI5Ng==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452948296", "bodyText": "I honestly think the two methods should just be combined. That setup seems specific to a particular test, as it sets both the environment and expression. If it just set up some of the things, yeah, it could be a @Before. But you can also just assign messageProducer, dispatcher, and interpreter at their definitions (lines 37-39), outside of the method.", "author": "ejona86", "createdAt": "2020-07-10T16:29:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NzkwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1MDc2OA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452950768", "bodyText": "I agree that it's better to combine those two methods. Thanks for the suggestion :)", "author": "cindyxue", "createdAt": "2020-07-10T16:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4NzkwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4ODIxMA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452888210", "bodyText": "Surely this is not correct.", "author": "ejona86", "createdAt": "2020-07-10T14:43:25Z", "path": "xds/src/test/java/io/grpc/xds/internal/rbac/engine/cel/CelInterfaceTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.api.expr.v1alpha1.CheckedExpr;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.protobuf.Descriptors.Descriptor;\n+import io.grpc.xds.InterpreterException;\n+import java.lang.String;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+/** Unit tests for Cel Interface. */\n+@RunWith(JUnit4.class)\n+public class CelInterfaceTest {\n+  private RuntimeTypeProvider messageProvider;\n+  private Dispatcher dispatcher;\n+  private Interpreter interpreter;\n+  private Activation activation;\n+  private Object result;\n+\n+  @Test\n+  public void setup() throws InterpreterException {\n+    // Set up interpreter used in Cel library's eval function.\n+    List<Descriptor> descriptors = new ArrayList<>();\n+    messageProvider = DescriptorMessageProvider.dynamicMessages(descriptors);\n+    dispatcher = DefaultDispatcher.create();\n+    interpreter = new DefaultInterpreter(messageProvider, dispatcher);\n+    // Set up activation used in Cel library's eval function.\n+    Map<String, Object> map = new HashMap<>();\n+    map.put(\"requestUrlPath\", new Object());\n+    map.put(\"requestHost\", new Object());\n+    map.put(\"requestMethod\", new Object());\n+    ImmutableMap<String, Object> apiAttributes = ImmutableMap.copyOf(map);\n+    activation = Activation.copyOf(apiAttributes);\n+    // Add a fake condition CheckedExpr that are being evaluated.\n+    CheckedExpr conditions = CheckedExpr.newBuilder().build();\n+    result = interpreter.createInterpretable(conditions).eval(activation);\n+  }\n+\n+  @Test\n+  public void testCelInterface() {\n+    try {\n+      setup();\n+    } catch (InterpreterException e) {\n+      System.out.println(e.toString());", "originalCommit": "d68578daa5d538b0bce90db91413570d392b9612", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NDg2MA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452944860", "bodyText": "Thanks for bringing it up! Since this test of a mock library won't necessarily throw anything, may I put // Do nothing. instead in the catch block?", "author": "cindyxue", "createdAt": "2020-07-10T16:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4ODIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NzAzNw==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452947037", "bodyText": "Why do you want to silence the exception? That seems very strange. Why not let it throw? You can put throws Exception (or InterpreterException) on every test method. If the test throws, the test will fail.", "author": "ejona86", "createdAt": "2020-07-10T16:27:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4ODIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1MjYyMQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452952621", "bodyText": "That makes sense! I'll change it to throws Exception. Thank you for suggesting it :)", "author": "cindyxue", "createdAt": "2020-07-10T16:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4ODIxMA=="}], "type": "inlineReview"}, {"oid": "bc05715438d64e618b80709f7b60413a6ac8b038", "url": "https://github.com/grpc/grpc-java/commit/bc05715438d64e618b80709f7b60413a6ac8b038", "message": "Review comments #4", "committedDate": "2020-07-10T17:45:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwMzc3OA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453003778", "bodyText": "The first sentence of javadoc is used as a summary for this class. It looks like the \"This is a Java stub\" paragraph is the same for many classes. That makes it clearly not a summary. It seems you may want to reorganize the docs so that the more informative line is first.", "author": "ejona86", "createdAt": "2020-07-10T18:25:04Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Activation.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.cel;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+  \n+/**\n+ * This is a Java stub for evaluating Common Expression Language (CEL). \n+ * More information about CEL can be found in https://github.com/google/cel-spec. \n+ * Once Java CEL has been open-sourced, this stub will be removed.\n+ * \n+ * <p>An object which allows to bind names to values.", "originalCommit": "bc05715438d64e618b80709f7b60413a6ac8b038", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAxMzg1OA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453013858", "bodyText": "Sounds good! Thanks for the clarification :)", "author": "cindyxue", "createdAt": "2020-07-10T18:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwMzc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNDMyOQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453004329", "bodyText": "It is weird to describe the class by saying it is \"an object.\" It is a class. \"Binds names to values\" seems more to-the-point and applies to the class.", "author": "ejona86", "createdAt": "2020-07-10T18:26:15Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Activation.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.cel;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+  \n+/**\n+ * This is a Java stub for evaluating Common Expression Language (CEL). \n+ * More information about CEL can be found in https://github.com/google/cel-spec. \n+ * Once Java CEL has been open-sourced, this stub will be removed.\n+ * \n+ * <p>An object which allows to bind names to values.", "originalCommit": "bc05715438d64e618b80709f7b60413a6ac8b038", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAxNzEwMQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453017101", "bodyText": "Thanks for pointing it out! I'll change the class description :)", "author": "cindyxue", "createdAt": "2020-07-10T18:48:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNDMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNTgxMw==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453005813", "bodyText": "Ditto here, regarding \"an object.\" Maybe \"Determines an appropriate function and invokes it\"?", "author": "ejona86", "createdAt": "2020-07-10T18:29:26Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Dispatcher.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.cel;\n+\n+import io.grpc.Metadata;\n+import java.util.List;\n+\n+/**\n+ * This is a Java stub for evaluating Common Expression Language (CEL). \n+ * More information about CEL can be found in https://github.com/google/cel-spec. \n+ * Once Java CEL has been open-sourced, this stub will be removed.\n+ * \n+ * <p>An object which implements dispatching of function calls.", "originalCommit": "bc05715438d64e618b80709f7b60413a6ac8b038", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAxNzIxNg==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453017216", "bodyText": "Sure!", "author": "cindyxue", "createdAt": "2020-07-10T18:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNTgxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNzkwMw==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453007903", "bodyText": "\"backed up\" is strange. I'd normally expect \"backed,\" as in the returned Activation is a view of map. But that's not what's here. You do mean \"backed up\" as an copy. Maybe \"Creates an immutable binder using the provided mapping.\" (It is also a bit weird to be calling it \"binder\" instead of \"activation,\" but whatever.)", "author": "ejona86", "createdAt": "2020-07-10T18:33:50Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Activation.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.cel;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import javax.annotation.Nullable;\n+  \n+/**\n+ * This is a Java stub for evaluating Common Expression Language (CEL). \n+ * More information about CEL can be found in https://github.com/google/cel-spec. \n+ * Once Java CEL has been open-sourced, this stub will be removed.\n+ * \n+ * <p>An object which allows to bind names to values.\n+ */\n+public abstract class Activation {\n+  /** Resolves the given name to its value. Returns null if resolution fails. */\n+  @Nullable\n+  public abstract Object resolve(String name);\n+\n+  /** Creates a binder backed up by a map. */", "originalCommit": "bc05715438d64e618b80709f7b60413a6ac8b038", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAxODA0Mw==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453018043", "bodyText": "\"Creates an immutable binder using the provided mapping.\" seems more appropriate here. Thanks for correcting that!", "author": "cindyxue", "createdAt": "2020-07-10T18:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNzkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwODUzMA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453008530", "bodyText": "nit: we tend to indent this one more level, so it doesn't line up with the statements of the method. (The return here is at the same indentation level as the throws.)", "author": "ejona86", "createdAt": "2020-07-10T18:35:16Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/DefaultInterpreter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.cel;\n+\n+import com.google.api.expr.v1alpha1.CheckedExpr;\n+\n+/**\n+ * This is a Java stub for evaluating Common Expression Language (CEL). \n+ * More information about CEL can be found in https://github.com/google/cel-spec. \n+ * Once Java CEL has been open-sourced, this stub will be removed.\n+ * \n+ * <p>Default implementation of {@link Interpreter}.\n+ */\n+public class DefaultInterpreter implements Interpreter {\n+  /**\n+  * Creates a new interpreter\n+  * @param typeProvider object which allows to construct and inspect messages.\n+  * @param dispatcher a method dispatcher.\n+  */\n+  public DefaultInterpreter(RuntimeTypeProvider typeProvider, Dispatcher dispatcher) {}  \n+  \n+  @Override\n+  public Interpretable createInterpretable(CheckedExpr checkedExpr) \n+    throws InterpreterException {", "originalCommit": "bc05715438d64e618b80709f7b60413a6ac8b038", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyMzEzOQ==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453023139", "bodyText": "Sure, I'll fix it!", "author": "cindyxue", "createdAt": "2020-07-10T18:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwODUzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3ODE1Nw==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452978157", "bodyText": "This Metadata is CEL Metadata, not grpc Metadata. See the doc I sent you for the implementation of it.", "author": "ZhenLian", "createdAt": "2020-07-10T17:30:42Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/DefaultDispatcher.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.cel;\n+\n+import io.grpc.Metadata;", "originalCommit": "74da96d71e84e09a542a8c91206321b6a5101092", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNDE4NA==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r453024184", "bodyText": "Good catch! I'll add a Metadata class for CEL :)", "author": "cindyxue", "createdAt": "2020-07-10T18:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3ODE1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3ODYzMw==", "url": "https://github.com/grpc/grpc-java/pull/7162#discussion_r452978633", "bodyText": "Same as above.", "author": "ZhenLian", "createdAt": "2020-07-10T17:31:45Z", "path": "xds/src/main/java/io/grpc/xds/internal/rbac/engine/cel/Dispatcher.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc.xds.internal.cel;\n+\n+import io.grpc.Metadata;", "originalCommit": "74da96d71e84e09a542a8c91206321b6a5101092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "077ce16c92b0c865cc2fbe5d31be7ef0629f5e1a", "url": "https://github.com/grpc/grpc-java/commit/077ce16c92b0c865cc2fbe5d31be7ef0629f5e1a", "message": "Review comments #4", "committedDate": "2020-07-10T19:24:44Z", "type": "forcePushed"}, {"oid": "8b80fd386a3ba9d8c6951ad37d77c885f0b9e118", "url": "https://github.com/grpc/grpc-java/commit/8b80fd386a3ba9d8c6951ad37d77c885f0b9e118", "message": "Review comments #4", "committedDate": "2020-07-10T21:35:48Z", "type": "forcePushed"}, {"oid": "d2db6000a8e84ff87623689e444c8fda803169e7", "url": "https://github.com/grpc/grpc-java/commit/d2db6000a8e84ff87623689e444c8fda803169e7", "message": "Review comments #4", "committedDate": "2020-07-11T01:15:09Z", "type": "forcePushed"}, {"oid": "9067d20ecc95892763c9a3a1b0c4390077367017", "url": "https://github.com/grpc/grpc-java/commit/9067d20ecc95892763c9a3a1b0c4390077367017", "message": "Review comments #4", "committedDate": "2020-07-11T02:13:30Z", "type": "commit"}, {"oid": "9067d20ecc95892763c9a3a1b0c4390077367017", "url": "https://github.com/grpc/grpc-java/commit/9067d20ecc95892763c9a3a1b0c4390077367017", "message": "Review comments #4", "committedDate": "2020-07-11T02:13:30Z", "type": "forcePushed"}]}