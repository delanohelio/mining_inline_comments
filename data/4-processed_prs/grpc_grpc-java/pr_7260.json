{"pr_number": 7260, "pr_title": "xds: include a status for the result of ConfigSelector", "pr_createdAt": "2020-07-28T23:53:18Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7260", "timeline": [{"oid": "524371b2e937e51f3bab57c6ef61433887656223", "url": "https://github.com/grpc/grpc-java/commit/524371b2e937e51f3bab57c6ef61433887656223", "message": "Include a Status in the result of selectConfig.", "committedDate": "2020-07-29T00:12:33Z", "type": "commit"}, {"oid": "524371b2e937e51f3bab57c6ef61433887656223", "url": "https://github.com/grpc/grpc-java/commit/524371b2e937e51f3bab57c6ef61433887656223", "message": "Include a Status in the result of selectConfig.", "committedDate": "2020-07-29T00:12:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MTExNg==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462551116", "bodyText": "nit: Creates", "author": "dapengzhang0", "createdAt": "2020-07-29T19:56:58Z", "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -37,28 +38,51 @@\n   public abstract Result selectConfig(LoadBalancer.PickSubchannelArgs args);\n \n   public static final class Result {\n+    private final Status status;\n+    @Nullable\n     private final Object config;\n+    @Nullable\n     private final CallOptions callOptions;\n     @Nullable\n     private final Runnable committedCallback;\n \n-    private Result(Object config, CallOptions callOptions, @Nullable Runnable committedCallback) {\n-      this.config = checkNotNull(config, \"config\");\n-      this.callOptions = checkNotNull(callOptions, \"callOptions\");\n+    private Result(\n+        Status status, Object config, CallOptions callOptions, Runnable committedCallback) {\n+      this.status = checkNotNull(status, \"status\");\n+      this.config = config;\n+      this.callOptions = callOptions;\n       this.committedCallback = committedCallback;\n     }\n \n+    /**\n+     * Create a {@code Result} with the given error status.", "originalCommit": "524371b2e937e51f3bab57c6ef61433887656223", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjM0OQ==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462552349", "bodyText": "config and callOptions here must not be null", "author": "dapengzhang0", "createdAt": "2020-07-29T19:59:21Z", "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -113,7 +137,7 @@ public Builder setCommittedCallback(@Nullable Runnable committedCallback) {\n       }\n \n       public Result build() {\n-        return new Result(config, callOptions, committedCallback);\n+        return new Result(Status.OK, config, callOptions, committedCallback);", "originalCommit": "524371b2e937e51f3bab57c6ef61433887656223", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NTU1Nw==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462575557", "bodyText": "Why they must not be null? For cases the status is not OK.", "author": "voidzcy", "createdAt": "2020-07-29T20:41:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjM0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3ODk1Ng==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462578956", "bodyText": "For cases is OK, they must be not null.", "author": "dapengzhang0", "createdAt": "2020-07-29T20:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjM0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMDExNA==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462600114", "bodyText": "Ok, checked. Does this really provide a stronger API guarantee or it only weakens the specification by requiring a stronger precondition?", "author": "voidzcy", "createdAt": "2020-07-29T21:28:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjM0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYxMjE0Mg==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462612142", "bodyText": "We should specify the Result must be either with error status (all other fields are ignored), or with OK status in which case config (parsed config) and callOptions are not null.", "author": "dapengzhang0", "createdAt": "2020-07-29T21:54:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjM0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYxNzgzOA==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462617838", "bodyText": "It's mentioned in getStatus().", "author": "voidzcy", "createdAt": "2020-07-29T22:07:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjM0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0MDE4Nw==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462640187", "bodyText": "It's not mentioning \"with OK status, callOptions is not null.\" I'm not going to be nagging on about this. LGTM.", "author": "dapengzhang0", "createdAt": "2020-07-29T23:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1MjM0OQ=="}], "type": "inlineReview"}, {"oid": "d542932b8a7c9cefb431119ce4a898e25f26c59e", "url": "https://github.com/grpc/grpc-java/commit/d542932b8a7c9cefb431119ce4a898e25f26c59e", "message": "Fix comments typo.", "committedDate": "2020-07-29T20:45:41Z", "type": "commit"}, {"oid": "532ac5a58c85c426c9ee59388bbbeb3d14ab0f8f", "url": "https://github.com/grpc/grpc-java/commit/532ac5a58c85c426c9ee59388bbbeb3d14ab0f8f", "message": "Check nullity for config and callOptions.", "committedDate": "2020-07-29T21:27:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYyMDQ3Mg==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462620472", "bodyText": "@Nullable is misleading. Although it is nullable from the programing language point of view. The null case is when status is an error you call getConfig(), which is wrong usecase. The only true @Nullable is getCommittedCallback().", "author": "dapengzhang0", "createdAt": "2020-07-29T22:13:45Z", "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -37,28 +39,51 @@\n   public abstract Result selectConfig(LoadBalancer.PickSubchannelArgs args);\n \n   public static final class Result {\n+    private final Status status;\n+    @Nullable\n     private final Object config;\n+    @Nullable\n     private final CallOptions callOptions;\n     @Nullable\n     private final Runnable committedCallback;\n \n-    private Result(Object config, CallOptions callOptions, @Nullable Runnable committedCallback) {\n-      this.config = checkNotNull(config, \"config\");\n-      this.callOptions = checkNotNull(callOptions, \"callOptions\");\n+    private Result(\n+        Status status, Object config, CallOptions callOptions, Runnable committedCallback) {\n+      this.status = checkNotNull(status, \"status\");\n+      this.config = config;\n+      this.callOptions = callOptions;\n       this.committedCallback = committedCallback;\n     }\n \n+    /**\n+     * Creates a {@code Result} with the given error status.\n+     */\n+    public static Result forError(Status status) {\n+      checkArgument(!status.isOk(), \"status is OK\");\n+      return new Result(status, null, null, null);\n+    }\n+\n+    /**\n+     * Returns the status of the config selection operation. If status is not {@link Status#OK},\n+     * this result should not be used.\n+     */\n+    public Status getStatus() {\n+      return status;\n+    }\n+\n     /**\n      * Returns a parsed config. Must have been returned via\n      * ServiceConfigParser.parseServiceConfig().getConfig()\n      */\n+    @Nullable\n     public Object getConfig() {\n       return config;\n     }\n \n     /**\n      * Returns a config-selector-modified CallOptions for the RPC.\n      */\n+    @Nullable", "originalCommit": "532ac5a58c85c426c9ee59388bbbeb3d14ab0f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYyNzgzOQ==", "url": "https://github.com/grpc/grpc-java/pull/7260#discussion_r462627839", "bodyText": "From the pure API point of view (just as how a checker framework or IDE uses this annotation), this Nullable is legit. For API integrity, nothing can prevent the API consumer calling getConfig() even if the Result is with an error status. It would be the consumer's responsibility to use it correctly. But as the API provider, it should tell what is indeed happening.\nSimilar case is for PickResult. This is the limitation of such an API.", "author": "voidzcy", "createdAt": "2020-07-29T22:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYyMDQ3Mg=="}], "type": "inlineReview"}, {"oid": "a1b7132df3da77e21fd786f6a4385b4a3dac9284", "url": "https://github.com/grpc/grpc-java/commit/a1b7132df3da77e21fd786f6a4385b4a3dac9284", "message": "Add API javadoc.", "committedDate": "2020-07-29T22:36:29Z", "type": "commit"}]}