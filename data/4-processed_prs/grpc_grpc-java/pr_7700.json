{"pr_number": 7700, "pr_title": "Modify the way of getHedgingServiceConfig in io.grpc.examples.hedging.HedgingHelloWorldClient", "pr_createdAt": "2020-12-06T13:44:18Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7700", "timeline": [{"oid": "220cb4b5f2867a2d3040437007bd827278e0233b", "url": "https://github.com/grpc/grpc-java/commit/220cb4b5f2867a2d3040437007bd827278e0233b", "message": "modify the way of getHedgingServiceConfig", "committedDate": "2020-12-06T13:41:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyODg2Nw==", "url": "https://github.com/grpc/grpc-java/pull/7700#discussion_r537928867", "bodyText": "Move the Map creation to this line; don't add the getHedgingServiceConfig method. And please use 4 spaces instead of 8 for indentation (we actually use 2, but 4 for line continuations; after the first indent of 4 spaces, the rest could have been 2 spaces).\nThe method should have been a private method and adds an indirection. We want our examples to be very concrete and clear, which means favoring less indirection and more \"it looks like a basic script.\"", "author": "ejona86", "createdAt": "2020-12-08T00:03:47Z", "path": "examples/src/main/java/io/grpc/examples/hedging/HedgingHelloWorldClient.java", "diffHunk": "@@ -49,23 +49,25 @@\n   private final PriorityBlockingQueue<Long> latencies = new PriorityBlockingQueue<>();\n   private final AtomicInteger failedRpcs = new AtomicInteger();\n \n+  protected Map<String, ?> getHedgingServiceConfig() {\n+    return new Gson()\n+            .fromJson(\n+                    new JsonReader(\n+                            new InputStreamReader(\n+                                    HedgingHelloWorldClient.class.getResourceAsStream(\n+                                            \"hedging_service_config.json\"),\n+                                    UTF_8)),\n+                    Map.class);\n+  }\n+\n   /** Construct client connecting to HelloWorld server at {@code host:port}. */\n   public HedgingHelloWorldClient(String host, int port, boolean hedging) {\n-    Map<String, ?> hedgingServiceConfig =\n-      new Gson()\n-          .fromJson(\n-              new JsonReader(\n-                  new InputStreamReader(\n-                      HedgingHelloWorldClient.class.getResourceAsStream(\n-                          \"hedging_service_config.json\"),\n-                      UTF_8)),\n-              Map.class);\n-\n     ManagedChannelBuilder<?> channelBuilder = ManagedChannelBuilder.forAddress(host, port)\n         // Channels are secure by default (via SSL/TLS). For the example we disable TLS to avoid\n         // needing certificates.\n         .usePlaintext();\n     if (hedging) {\n+      Map<String, ?> hedgingServiceConfig = getHedgingServiceConfig();", "originalCommit": "220cb4b5f2867a2d3040437007bd827278e0233b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e89ee51a6763eb0562e7ede7a531e7ee82559f80", "url": "https://github.com/grpc/grpc-java/commit/e89ee51a6763eb0562e7ede7a531e7ee82559f80", "message": "code refactor.", "committedDate": "2020-12-08T00:34:13Z", "type": "commit"}, {"oid": "35b97ca0a19dd7ec624fcc877b0c54644bcb5146", "url": "https://github.com/grpc/grpc-java/commit/35b97ca0a19dd7ec624fcc877b0c54644bcb5146", "message": "Merge remote-tracking branch 'origin/7699' into 7699\n\n# Conflicts:\n#\texamples/src/main/java/io/grpc/examples/hedging/HedgingHelloWorldClient.java", "committedDate": "2020-12-08T00:34:30Z", "type": "commit"}]}