{"pr_number": 7559, "pr_title": "xds: use internal SynchronizationContext for XdsClient's synchronization", "pr_createdAt": "2020-10-27T20:06:00Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7559", "timeline": [{"oid": "c1bbf2422872c415a6af27446b734c309ddbab1b", "url": "https://github.com/grpc/grpc-java/commit/c1bbf2422872c415a6af27446b734c309ddbab1b", "message": "Create a SynchronizationContext inside XdsClient.", "committedDate": "2020-10-27T19:53:26Z", "type": "commit"}, {"oid": "556e59c4ad7f3a8f588578a19ed84a336d82ea5b", "url": "https://github.com/grpc/grpc-java/commit/556e59c4ad7f3a8f588578a19ed84a336d82ea5b", "message": "Replace locks with SynchronizationContext for client side.", "committedDate": "2020-10-27T19:54:18Z", "type": "commit"}, {"oid": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "url": "https://github.com/grpc/grpc-java/commit/078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "message": "Use XdsClient's internal SynchronizationContext for server side.", "committedDate": "2020-10-27T19:54:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMTE3MQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513201171", "bodyText": "Why is this comment removed but not the one on line 818 for onError?", "author": "sanjaypujare", "createdAt": "2020-10-28T06:10:22Z", "path": "xds/src/main/java/io/grpc/xds/ClientXdsClient.java", "diffHunk": "@@ -802,7 +821,6 @@ void onError(Status error) {\n     }\n \n     private void notifyWatcher(ResourceWatcher watcher, ResourceUpdate update) {\n-      // TODO(chengyuanzhang): should invoke callbacks with watcher's own executor.", "originalCommit": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNTMxMg==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513205312", "bodyText": "Discussed with Eric, it's ok to run it with XdsClient's channel thread.", "author": "voidzcy", "createdAt": "2020-10-28T06:24:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMTE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyNzM0Nw==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513227347", "bodyText": "Understood, but you have the same comment on line 818 for onError. So it is okay to run notifyWatcher on the XdsClient channel thread but you are planning to move the onError callback on the caller provided executor? I think line 818 should be removed as well", "author": "sanjaypujare", "createdAt": "2020-10-28T07:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMTE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyOTExMA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513229110", "bodyText": "Oops, missed to delete that one. Thanks for catching it.", "author": "voidzcy", "createdAt": "2020-10-28T07:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMTE3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMjczNQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513202735", "bodyText": "This uncaughtException only logs but does not clean up such as shutting down the channel. Why can't that error handling be done in this PR?", "author": "sanjaypujare", "createdAt": "2020-10-28T06:15:56Z", "path": "xds/src/main/java/io/grpc/xds/AbstractXdsClient.java", "diffHunk": "@@ -72,6 +73,18 @@\n   private static final String ADS_TYPE_URL_EDS =\n       \"type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment\";\n \n+  private final SynchronizationContext syncContext = new SynchronizationContext(\n+      new Thread.UncaughtExceptionHandler() {\n+        @Override\n+        public void uncaughtException(Thread t, Throwable e) {", "originalCommit": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNzUxNQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513207515", "bodyText": "I put a TODO there. Current behavior is pretty aggressive, it will panic the JVM. It should be ok, as usually when this happens it is due to some severe bug.\nI would need more considerations for how we should handle this more gracefully. Since multiple channels will sharing the same XdsClient instance, it's unclear how uncaught exceptions happening in XdsClient would affect client channels.", "author": "voidzcy", "createdAt": "2020-10-28T06:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMjczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyNTM4NA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513225384", "bodyText": "ok", "author": "sanjaypujare", "createdAt": "2020-10-28T07:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMjczNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMzQxMA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513203410", "bodyText": "Can we include some identifying info for which XdsClient was logging this: ClientXdsClient or ServerXdsClient and for both what resources were being watched/handled.", "author": "sanjaypujare", "createdAt": "2020-10-28T06:17:54Z", "path": "xds/src/main/java/io/grpc/xds/AbstractXdsClient.java", "diffHunk": "@@ -72,6 +73,18 @@\n   private static final String ADS_TYPE_URL_EDS =\n       \"type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment\";\n \n+  private final SynchronizationContext syncContext = new SynchronizationContext(\n+      new Thread.UncaughtExceptionHandler() {\n+        @Override\n+        public void uncaughtException(Thread t, Throwable e) {\n+          getLogger().log(\n+              XdsLogLevel.ERROR,", "originalCommit": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNjAxMg==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513206012", "bodyText": "At current stage, there will be only one XdsClient in the process. I don't think we are ready to have both client and server running in the same process now.", "author": "voidzcy", "createdAt": "2020-10-28T06:26:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMzQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyNTA4MQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513225081", "bodyText": "I think your comments need some clarification: there will be only one ClientXdsClient in the process but one ServerXdsClient per gRPC server (listener). Also \" I don't think we are ready to have both client and server running in the same process now.\" is definitely not true. What you probably meant is not ready to have a single XdsClient to handle both client side and server side.\nThe identifying information would still be helpful on the server side because of one XdsClient per server.", "author": "sanjaypujare", "createdAt": "2020-10-28T07:21:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMzQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyODM0OQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513228349", "bodyText": "But each XdsClient instance already has a unique logId, which is included in XdsLogger. Log messages already include information for which XdsClient it is logged from.", "author": "voidzcy", "createdAt": "2020-10-28T07:29:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMzQxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNjQ1OQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513206459", "bodyText": "The syncContext is used through-out with 2 common patterns:\n\nexecute with. a Runnable\n schedule with a few params and a ScheduledExecutorService which is always getTimeService()\n\nHave you considered just providing 2 methods in AbstractXdsClient that allow the caller to do the same thing but without calling getSyncContext()? So the executeSynchronously is just getSyncContext().execute() and scheduleSynchronously is just  getSyncContext().schedule() with the ScheduledExecutorService always getTimeService(). This will simplify a lot of boilerplate and also hide the actual implementation of syncContext and timeService.", "author": "sanjaypujare", "createdAt": "2020-10-28T06:27:56Z", "path": "xds/src/main/java/io/grpc/xds/AbstractXdsClient.java", "diffHunk": "@@ -268,6 +276,10 @@ protected final void nackResponse(ResourceType type, String nonce, String errorD\n     adsStream.sendDiscoveryRequest(type, versionInfo, resources, nonce, errorDetail);\n   }\n \n+  protected final SynchronizationContext getSyncContext() {", "originalCommit": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwOTk5OQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513209999", "bodyText": "getSyncContext().execute() is NOT executing it synchronously.\nWe could have AbstractXdsClient provide simpler method, such as execute(Runnable) and schedule(long, TimeUnit), and hide the implementation detail of how it is actually scheduled into the SynchronizationContext. But that isn't significantly simpler, it doesn't bother doing that.", "author": "voidzcy", "createdAt": "2020-10-28T06:38:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNjQ1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzc4Ng==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513223786", "bodyText": "okay.", "author": "sanjaypujare", "createdAt": "2020-10-28T07:17:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNjQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNzY0MA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513207640", "bodyText": "Shouldn't the above 3 lines (checks) in the main method instead of in the Runnable.run? The caller should get the exception instead of the exception being lost in a different thread.", "author": "sanjaypujare", "createdAt": "2020-10-28T06:31:43Z", "path": "xds/src/main/java/io/grpc/xds/ServerXdsClient.java", "diffHunk": "@@ -63,33 +61,37 @@\n   @Nullable\n   private ScheduledHandle ldsRespTimer;\n \n-  ServerXdsClient(XdsChannel channel, Node node, SynchronizationContext syncContext,\n-      ScheduledExecutorService timeService, BackoffPolicy.Provider backoffPolicyProvider,\n-      Supplier<Stopwatch> stopwatchSupplier, boolean newServerApi, String instanceIp) {\n+  ServerXdsClient(XdsChannel channel, Node node, ScheduledExecutorService timeService,\n+      BackoffPolicy.Provider backoffPolicyProvider, Supplier<Stopwatch> stopwatchSupplier,\n+      boolean newServerApi, String instanceIp) {\n     super(channel, node, timeService, backoffPolicyProvider, stopwatchSupplier);\n-    this.syncContext = checkNotNull(syncContext, \"syncContext\");\n     this.newServerApi = channel.isUseProtocolV3() && newServerApi;\n     this.instanceIp = (instanceIp != null ? instanceIp : \"0.0.0.0\");\n   }\n \n   @Override\n-  void watchListenerData(int port, ListenerWatcher watcher) {\n-    checkState(listenerWatcher == null, \"ListenerWatcher already registered\");\n-    listenerWatcher = checkNotNull(watcher, \"watcher\");\n-    checkArgument(port > 0, \"port needs to be > 0\");\n-    this.listenerPort = port;\n-    getLogger().log(XdsLogLevel.INFO, \"Started watching listener for port {0}\", port);\n-    if (!newServerApi) {\n-      updateNodeMetadataForListenerRequest(port);\n-    }\n-    adjustResourceSubscription(ResourceType.LDS);\n-    if (!isInBackoff()) {\n-      ldsRespTimer =\n-          syncContext\n-              .schedule(\n-                  new ListenerResourceFetchTimeoutTask(\":\" + port),\n-                  INITIAL_RESOURCE_FETCH_TIMEOUT_SEC, TimeUnit.SECONDS, getTimeService());\n-    }\n+  void watchListenerData(final int port, final ListenerWatcher watcher) {\n+    getSyncContext().execute(new Runnable() {\n+      @Override\n+      public void run() {\n+        checkState(listenerWatcher == null, \"ListenerWatcher already registered\");\n+        listenerWatcher = checkNotNull(watcher, \"watcher\");\n+        checkArgument(port > 0, \"port needs to be > 0\");", "originalCommit": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwODIyMA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513208220", "bodyText": "Also if watchListenerData is called exactly once for a ServerXdsClient why even bother with the syncContext here?  When ServerXdsClient will be able to support multiple watchers for multiple ports we can then add the syncContext.", "author": "sanjaypujare", "createdAt": "2020-10-28T06:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNzY0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIxMDczNw==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513210737", "bodyText": "States meaningful to the task should be checked at the time executing it instead of scheduling it.", "author": "voidzcy", "createdAt": "2020-10-28T06:41:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNzY0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIxMjM0MA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513212340", "bodyText": "What? Why not fail immediately if watcher is null instead of having it thrown inside run? These are all checks on the input arguments to watchListenerData so it makes no sense to do them inside the scheduled task.", "author": "sanjaypujare", "createdAt": "2020-10-28T06:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwNzY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwOTA3OQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513209079", "bodyText": "The InternalLogId functionality is lost in the new SyncContext in the AbstractXdsClient`. Why can't it be provided?", "author": "sanjaypujare", "createdAt": "2020-10-28T06:36:20Z", "path": "xds/src/main/java/io/grpc/xds/XdsClientWrapperForServerSds.java", "diffHunk": "@@ -90,34 +88,6 @@ public XdsClientWrapperForServerSds(int port) {\n     this.port = port;\n   }\n \n-  private SynchronizationContext createSynchronizationContext() {\n-    final InternalLogId logId =\n-        InternalLogId.allocate(\"XdsClientWrapperForServerSds\", Integer.toString(port));", "originalCommit": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIxMDk0OQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513210949", "bodyText": "The XdsClient instance has an unique logId.", "author": "voidzcy", "createdAt": "2020-10-28T06:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwOTA3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwOTY3Mw==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513209673", "bodyText": "This test fails because the checks were inside the Runnable. If the checks were outside this test would work. Even if the test is trivial why remove it?", "author": "sanjaypujare", "createdAt": "2020-10-28T06:37:54Z", "path": "xds/src/test/java/io/grpc/xds/ServerXdsClientTest.java", "diffHunk": "@@ -236,20 +227,6 @@ private static DiscoveryRequest buildDiscoveryRequest(\n         .build();\n   }\n \n-  /** Error when 2 ListenerWatchers registered. */", "originalCommit": "078fba47728b5ff3f20c4b92e7d0a3461b3ab93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIxMjEyOQ==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513212129", "bodyText": "This test doesn't make sense to me. It doesn't test anything. But if you want, I can just put it back and also let the check run outside the SynchronizationContext. It's unclear to me how you make synchronization work for server side XdsClient.", "author": "voidzcy", "createdAt": "2020-10-28T06:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwOTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIxNDE4OA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513214188", "bodyText": "It doesn't make sense to you - alright. But unless you think it is asserting the wrong thing let's leave it there. I have been burnt by removed tests so ...\nAlso like I mentioned in the main code, the checks on the input arguments (these are not checks on the states) should not be inside the scheduled tasks. Even if you say that check on the existing listenerWatcher is a check on the state, it is failing early which is okay.", "author": "sanjaypujare", "createdAt": "2020-10-28T06:51:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwOTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIxNzQ1NA==", "url": "https://github.com/grpc/grpc-java/pull/7559#discussion_r513217454", "bodyText": "Alright. I moved the checks outside the sync context and put back the test case.", "author": "voidzcy", "createdAt": "2020-10-28T07:00:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwOTY3Mw=="}], "type": "inlineReview"}, {"oid": "52519c7c86d59873bc4c3f5ed6febce91dee09f9", "url": "https://github.com/grpc/grpc-java/commit/52519c7c86d59873bc4c3f5ed6febce91dee09f9", "message": "Run checks outside sync context for server XdsClient API.", "committedDate": "2020-10-28T07:00:13Z", "type": "commit"}, {"oid": "970df24cd5e2528d0b519876322a04380433b5ff", "url": "https://github.com/grpc/grpc-java/commit/970df24cd5e2528d0b519876322a04380433b5ff", "message": "Remove comment not logger valid.", "committedDate": "2020-10-28T07:30:31Z", "type": "commit"}]}