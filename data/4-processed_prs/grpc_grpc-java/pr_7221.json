{"pr_number": 7221, "pr_title": "api: add InternalConfigSelector abstract class", "pr_createdAt": "2020-07-16T18:04:09Z", "pr_url": "https://github.com/grpc/grpc-java/pull/7221", "timeline": [{"oid": "b30717cfb9736d1129df2955add4db31bafd8dbf", "url": "https://github.com/grpc/grpc-java/commit/b30717cfb9736d1129df2955add4db31bafd8dbf", "message": "api: add InternalConfigSelector abstract class", "committedDate": "2020-07-16T18:03:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3OTA4NQ==", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455979085", "bodyText": "Shouldn't the config be nullable as well?", "author": "voidzcy", "createdAt": "2020-07-16T18:12:41Z", "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import javax.annotation.Nullable;\n+\n+// The class can not be located in io.grpc.internal since it is used as a cross-module API.\n+// Otherwise, shading would break it.\n+/**\n+ * Per method config selector that the channel or load balancers will use to choose the appropriate\n+ * Route and MethodConfig for an RPC.\n+ */\n+@Internal\n+public abstract class InternalConfigSelector {\n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<io.grpc.InternalConfigSelector> KEY\n+      = Attributes.Key.create(\"io.grpc.config-selector\");\n+\n+  // Use PickSubchannelArgs for SelectConfigArgs for now. May change over time.\n+  /** Selects the config for an PRC. */\n+  public abstract Result selectConfig(LoadBalancer.PickSubchannelArgs args);\n+\n+  public static final class Result {\n+    private final Object config;", "originalCommit": "b30717cfb9736d1129df2955add4db31bafd8dbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NjIxMw==", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455986213", "bodyText": "A parsed config in not null. It could be some constant like NO_CONFIG.", "author": "dapengzhang0", "createdAt": "2020-07-16T18:25:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3OTA4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4MDMzOQ==", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455980339", "bodyText": "ConfigSelector is not an xDS-specific design, its description should be more general. Same for the other places. (You are talking about xDS's concrete implementation XdsConfigSelector)", "author": "voidzcy", "createdAt": "2020-07-16T18:14:47Z", "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import javax.annotation.Nullable;\n+\n+// The class can not be located in io.grpc.internal since it is used as a cross-module API.\n+// Otherwise, shading would break it.\n+/**\n+ * Per method config selector that the channel or load balancers will use to choose the appropriate\n+ * Route and MethodConfig for an RPC.", "originalCommit": "b30717cfb9736d1129df2955add4db31bafd8dbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5MjA3NA==", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455992074", "bodyText": "Good point. Rephrased.", "author": "dapengzhang0", "createdAt": "2020-07-16T18:34:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4MDMzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4MTg5OQ==", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455981899", "bodyText": "This line of comment is redundant.", "author": "voidzcy", "createdAt": "2020-07-16T18:17:33Z", "path": "api/src/main/java/io/grpc/InternalConfigSelector.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright 2020 The gRPC Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.grpc;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import javax.annotation.Nullable;\n+\n+// The class can not be located in io.grpc.internal since it is used as a cross-module API.\n+// Otherwise, shading would break it.\n+/**\n+ * Per method config selector that the channel or load balancers will use to choose the appropriate\n+ * Route and MethodConfig for an RPC.\n+ */\n+@Internal\n+public abstract class InternalConfigSelector {\n+  @NameResolver.ResolutionResultAttr\n+  public static final Attributes.Key<io.grpc.InternalConfigSelector> KEY\n+      = Attributes.Key.create(\"io.grpc.config-selector\");\n+\n+  // Use PickSubchannelArgs for SelectConfigArgs for now. May change over time.", "originalCommit": "b30717cfb9736d1129df2955add4db31bafd8dbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4ODk5MQ==", "url": "https://github.com/grpc/grpc-java/pull/7221#discussion_r455988991", "bodyText": "I think it does provide some information for the reader and is not redundant.\nIt's not a personal note for my following PRs. (My following PRs will not make the change.)", "author": "dapengzhang0", "createdAt": "2020-07-16T18:29:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4MTg5OQ=="}], "type": "inlineReview"}, {"oid": "2b0069267aee6972a1e29e7939021bfd3fe08060", "url": "https://github.com/grpc/grpc-java/commit/2b0069267aee6972a1e29e7939021bfd3fe08060", "message": "improve javadoc", "committedDate": "2020-07-16T18:33:47Z", "type": "commit"}, {"oid": "c19b5e3a936c7bc40b380e9af19667b3a0b846b0", "url": "https://github.com/grpc/grpc-java/commit/c19b5e3a936c7bc40b380e9af19667b3a0b846b0", "message": "remove xds specific comment", "committedDate": "2020-07-16T18:37:04Z", "type": "commit"}]}