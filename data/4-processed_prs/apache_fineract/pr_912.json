{"pr_number": 912, "pr_title": " add new Logging Guidelines section to README (re. FINERACT-942)", "pr_createdAt": "2020-05-19T21:29:51Z", "pr_url": "https://github.com/apache/fineract/pull/912", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyNzc5NQ==", "url": "https://github.com/apache/fineract/pull/912#discussion_r427927795", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * In tests, you'll typically never catch exceptions, but just propagate them, with `@Test void testXYZ() throws SomeException, AnotherException`...`, so that the test fails if the exception happens.  Unless you actually really want to test for the occurence of a problem - in that case, use [JUnit's Assert.assertThrows()](https://github.com/junit-team/junit4/wiki/Exception-testing) (but not `@Test(expected = SomeException.class)`).\n          \n          \n            \n            * In tests, you'll typically never catch exceptions, but just propagate them, with `@Test void testXYZ() throws SomeException, AnotherException`..., so that the test fails if the exception happens.  Unless you actually really want to test for the occurence of a problem - in that case, use [JUnit's Assert.assertThrows()](https://github.com/junit-team/junit4/wiki/Exception-testing) (but not `@Test(expected = SomeException.class)`).\n          \n      \n    \n    \n  \n\nI noticed an extra \"`\" in the guide. It didn't look good in the preview", "author": "xurror", "createdAt": "2020-05-20T11:12:06Z", "path": "README.md", "diffHunk": "@@ -268,6 +268,13 @@ Governance and Policies\n documents the process through which you can become a committer in this project.\n \n \n+Logging Guidelines\n+------------------\n+* Never, ever, use `System.out` and `System.err` or `printStackTrace()` anywhere, but `LOG.info()` or `LOG.error()` instead.\n+* When catching exceptions, either rethrow them, or log them.  Either way, include the root cause by using `catch (SomeException e)` and then either `throw AnotherException(\"..details..\", e)` or `LOG.error(\"...context...\", e)`.\n+* In tests, you'll typically never catch exceptions, but just propagate them, with `@Test void testXYZ() throws SomeException, AnotherException`...`, so that the test fails if the exception happens.  Unless you actually really want to test for the occurence of a problem - in that case, use [JUnit's Assert.assertThrows()](https://github.com/junit-team/junit4/wiki/Exception-testing) (but not `@Test(expected = SomeException.class)`).", "originalCommit": "25dff61af692d35914131148c1def345985214aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyMjIxNQ==", "url": "https://github.com/apache/fineract/pull/912#discussion_r428622215", "bodyText": "done - thanks for noticing", "author": "vorburger", "createdAt": "2020-05-21T12:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyNzc5NQ=="}], "type": "inlineReview"}, {"oid": "ed0181bf710b167a1e048f15a5125b88a13caf82", "url": "https://github.com/apache/fineract/commit/ed0181bf710b167a1e048f15a5125b88a13caf82", "message": " add new Logging Guidelines section to README (re. FINERACT-942)", "committedDate": "2020-05-21T13:00:31Z", "type": "forcePushed"}, {"oid": "40409912643788d5b11f7a4ca9df9a4d45d09e64", "url": "https://github.com/apache/fineract/commit/40409912643788d5b11f7a4ca9df9a4d45d09e64", "message": " add new Logging Guidelines section to README (re. FINERACT-942)", "committedDate": "2020-05-21T13:05:15Z", "type": "commit"}, {"oid": "40409912643788d5b11f7a4ca9df9a4d45d09e64", "url": "https://github.com/apache/fineract/commit/40409912643788d5b11f7a4ca9df9a4d45d09e64", "message": " add new Logging Guidelines section to README (re. FINERACT-942)", "committedDate": "2020-05-21T13:05:15Z", "type": "forcePushed"}]}