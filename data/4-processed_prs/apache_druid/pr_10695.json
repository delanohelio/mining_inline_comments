{"pr_number": 10695, "pr_title": "Add documentation re alphabetical sorted of MV dimensions", "pr_createdAt": "2020-12-20T10:40:44Z", "pr_url": "https://github.com/apache/druid/pull/10695", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMDM4NA==", "url": "https://github.com/apache/druid/pull/10695#discussion_r547000384", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | multiValueHandling | Specify the type of handling multi-value fields will get, possible values are `SORTED_ARRAY`, `SORTED_SET` and `ARRAY`. The first two will order the array upon ingestion and `SORTED_SET` will remove duplicates. `ARRAY` will ingest data as-is | `SORTED_ARRAY` |\n          \n          \n            \n            | multiValueHandling | Specify the type of handling for multi-value fields. Possible values are `SORTED_ARRAY`, `SORTED_SET`, and `ARRAY`. `SORTED_ARRAY` and `SORTED_SET` order the array upon ingestion. `SORTED_SET` removes duplicates. `ARRAY` ingests data as-is | `SORTED_ARRAY` |", "author": "techdocsmith", "createdAt": "2020-12-22T00:30:30Z", "path": "docs/ingestion/index.md", "diffHunk": "@@ -480,6 +480,7 @@ Dimension objects can have the following components:\n | type | Either `string`, `long`, `float`, or `double`. | `string` |\n | name | The name of the dimension. This will be used as the field name to read from input records, as well as the column name stored in generated segments.<br><br>Note that you can use a [`transformSpec`](#transformspec) if you want to rename columns during ingestion time. | none (required) |\n | createBitmapIndex | For `string` typed dimensions, whether or not bitmap indexes should be created for the column in generated segments. Creating a bitmap index requires more storage, but speeds up certain kinds of filtering (especially equality and prefix filtering). Only supported for `string` typed dimensions. | `true` |\n+| multiValueHandling | Specify the type of handling multi-value fields will get, possible values are `SORTED_ARRAY`, `SORTED_SET` and `ARRAY`. The first two will order the array upon ingestion and `SORTED_SET` will remove duplicates. `ARRAY` will ingest data as-is | `SORTED_ARRAY` |", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg==", "url": "https://github.com/apache/druid/pull/10695#discussion_r547002582", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.\n          \n          \n            \n            characters), by default Druid lists the values in alphabetical order, see [Dimension Objects](../ingestion/index.md#dimension-objects) for configuration.\n          \n      \n    \n    \n  \n\nPlease use .md for links. Also, it's not clear to me what the related information is at the destination. But I'm a still fairly new to Druid.", "author": "techdocsmith", "createdAt": "2020-12-22T00:38:42Z", "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1ODMwMw==", "url": "https://github.com/apache/druid/pull/10695#discussion_r547158303", "bodyText": "Thanks @techdocsmith, I've updated the commit with your recommendations. \"Lists\" is the wrong verb here, \"ingests\" would be more appropriate. The referred section is the above committed detail about multiValueHandling.", "author": "lkm", "createdAt": "2020-12-22T09:12:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTM0OQ==", "url": "https://github.com/apache/druid/pull/10695#discussion_r547159349", "bodyText": "Also .md should be .html, check the rest of the reference in the file. The markdown is compiled for the web version of the doc.", "author": "lkm", "createdAt": "2020-12-22T09:14:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQwNDMwOQ==", "url": "https://github.com/apache/druid/pull/10695#discussion_r547404309", "bodyText": "@lkm , please see: #10528 Using .md is more flexible for viewing docs locally and for publishing to the web", "author": "techdocsmith", "createdAt": "2020-12-22T17:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc4ODE4Nw==", "url": "https://github.com/apache/druid/pull/10695#discussion_r547788187", "bodyText": "Thanks for the context @techdocsmith, I've changed it to .md", "author": "lkm", "createdAt": "2020-12-23T08:13:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1ODA3NA==", "url": "https://github.com/apache/druid/pull/10695#discussion_r553758074", "bodyText": "This is a run on sentence. Please replace the comma with a period and split up the sentences.", "author": "gianm", "createdAt": "2021-01-08T06:02:58Z", "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default Druid ingests the values in alphabetical order, see [Dimension Objects](../ingestion/index.md#dimension-objects) for configuration.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1ODQzNQ==", "url": "https://github.com/apache/druid/pull/10695#discussion_r553758435", "bodyText": "It'd be nice to link \"multi-value fields\" to the ../querying/multi-value-dimensions.md doc, so these two pages cross-link to each other.", "author": "gianm", "createdAt": "2021-01-08T06:04:06Z", "path": "docs/ingestion/index.md", "diffHunk": "@@ -480,6 +480,7 @@ Dimension objects can have the following components:\n | type | Either `string`, `long`, `float`, or `double`. | `string` |\n | name | The name of the dimension. This will be used as the field name to read from input records, as well as the column name stored in generated segments.<br><br>Note that you can use a [`transformSpec`](#transformspec) if you want to rename columns during ingestion time. | none (required) |\n | createBitmapIndex | For `string` typed dimensions, whether or not bitmap indexes should be created for the column in generated segments. Creating a bitmap index requires more storage, but speeds up certain kinds of filtering (especially equality and prefix filtering). Only supported for `string` typed dimensions. | `true` |\n+| multiValueHandling | Specify the type of handling for multi-value fields. Possible values are `sorted_array`, `sorted_set`, and `array`. `sorted_array` and `sorted_set` order the array upon ingestion. `sorted_set` removes duplicates. `array` ingests data as-is | `sorted_array` |", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "aa5f4873933d5d877bb753b61142f185a1b68d59", "url": "https://github.com/apache/druid/commit/aa5f4873933d5d877bb753b61142f185a1b68d59", "message": "Add documentation re alphabetical sorted of MV dimensions", "committedDate": "2021-04-15T15:16:59Z", "type": "commit"}, {"oid": "aa5f4873933d5d877bb753b61142f185a1b68d59", "url": "https://github.com/apache/druid/commit/aa5f4873933d5d877bb753b61142f185a1b68d59", "message": "Add documentation re alphabetical sorted of MV dimensions", "committedDate": "2021-04-15T15:16:59Z", "type": "forcePushed"}]}