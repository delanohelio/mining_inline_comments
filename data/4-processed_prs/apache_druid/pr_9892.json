{"pr_number": 9892, "pr_title": "Fails creation of TaskResource if availabilityGroup is null", "pr_createdAt": "2020-05-19T02:42:44Z", "pr_url": "https://github.com/apache/druid/pull/9892", "timeline": [{"oid": "889e502cf80ad7db94605fa90c8817e58a838b7a", "url": "https://github.com/apache/druid/commit/889e502cf80ad7db94605fa90c8817e58a838b7a", "message": "Fails creation of TaskResource if availabilityGroup is null", "committedDate": "2020-05-19T02:38:31Z", "type": "commit"}, {"oid": "d0bd0514120084b437b936d0b2bc3040e47ecee1", "url": "https://github.com/apache/druid/commit/d0bd0514120084b437b936d0b2bc3040e47ecee1", "message": "add check for requiredCapacity", "committedDate": "2020-05-20T01:51:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMDIzNA==", "url": "https://github.com/apache/druid/pull/9892#discussion_r427700234", "bodyText": "just curious: How do we decide between using @Min and @Nonnull annotations on the constructor vs adding an explicit Preconditions check? Is there an advantage to one over another?\nfwiw: I think annotations are easier to read than Preconditions, but I see we use both, so I'm not advocating for one way or another, just curious what your thoughts are", "author": "suneet-s", "createdAt": "2020-05-20T02:03:34Z", "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/TaskResource.java", "diffHunk": "@@ -37,6 +37,7 @@ public TaskResource(\n   )\n   {\n     this.availabilityGroup = Preconditions.checkNotNull(availabilityGroup, \"availabilityGroup\");\n+    Preconditions.checkArgument(requiredCapacity > 0);", "originalCommit": "d0bd0514120084b437b936d0b2bc3040e47ecee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxNzIxNw==", "url": "https://github.com/apache/druid/pull/9892#discussion_r427717217", "bodyText": "I saw both being use too. Personally, I do not have any strong preference. This was the first thing that came to mind.", "author": "maytasm", "createdAt": "2020-05-20T03:11:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMDIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcyODUwMA==", "url": "https://github.com/apache/druid/pull/9892#discussion_r427728500", "bodyText": "AFAIT, we use those validation constraints for static configurations such as RemoteTaskRunnerConfig. JsonConfigProvider binds user configurations to some classes, and JsonConfigurator injects and validates their values. TaskResource is not a static configuration and we don't have such a validation framework for it as for static configurations. But I think it would be nice to have.", "author": "jihoonson", "createdAt": "2020-05-20T04:02:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMDIzNA=="}], "type": "inlineReview"}]}