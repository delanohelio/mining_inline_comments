{"pr_number": 9563, "pr_title": "add lane enforcement for joinish queries", "pr_createdAt": "2020-03-25T11:50:35Z", "pr_url": "https://github.com/apache/druid/pull/9563", "timeline": [{"oid": "5eaae847c125146a98fcf60c1f92dd1a531a8d94", "url": "https://github.com/apache/druid/commit/5eaae847c125146a98fcf60c1f92dd1a531a8d94", "message": "add lane enforcement for joinish queries", "committedDate": "2020-03-25T11:34:45Z", "type": "commit"}, {"oid": "3387430bdaa6cd10399773bc710d87bfd2400f51", "url": "https://github.com/apache/druid/commit/3387430bdaa6cd10399773bc710d87bfd2400f51", "message": "Merge remote-tracking branch 'upstream/master' into joins-and-laning", "committedDate": "2020-03-25T11:35:40Z", "type": "commit"}, {"oid": "606af3f8c4b80c59df9d5664c911edaf3aff1cbb", "url": "https://github.com/apache/druid/commit/606af3f8c4b80c59df9d5664c911edaf3aff1cbb", "message": "oops", "committedDate": "2020-03-25T12:11:32Z", "type": "commit"}, {"oid": "beb572259a54eb906aca50319709e35af4177d70", "url": "https://github.com/apache/druid/commit/beb572259a54eb906aca50319709e35af4177d70", "message": "style", "committedDate": "2020-03-25T19:12:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg4Nzk0NQ==", "url": "https://github.com/apache/druid/pull/9563#discussion_r398887945", "bodyText": "Unnecessary change?", "author": "jihoonson", "createdAt": "2020-03-26T20:59:42Z", "path": "server/src/main/java/org/apache/druid/server/ClientQuerySegmentWalker.java", "diffHunk": "@@ -462,7 +462,8 @@ public QuerySwappingQueryRunner(QueryRunner<T> baseRunner, Query<T> query, Query\n         throw new ISE(\"Unexpected query received\");\n       }\n \n-      return baseRunner.run(queryPlus.withQuery(newQuery), responseContext);\n+      Sequence<T> result = baseRunner.run(queryPlus.withQuery(newQuery), responseContext);\n+      return result;", "originalCommit": "beb572259a54eb906aca50319709e35af4177d70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTMwOA==", "url": "https://github.com/apache/druid/pull/9563#discussion_r398895308", "bodyText": "Would you add @Nullable to the constructor parameter of SegmentServerSelector and getServer()?", "author": "jihoonson", "createdAt": "2020-03-26T21:11:13Z", "path": "server/src/main/java/org/apache/druid/server/LocalQuerySegmentWalker.java", "diffHunk": "@@ -107,17 +116,25 @@ public LocalQuerySegmentWalker(\n     // Note: Not calling 'postProcess'; it isn't official/documented functionality so we'll only support it where\n     // it is already supported.\n     return new FluentQueryRunnerBuilder<>(queryRunnerFactory.getToolchest())\n-        .create(baseRunner)\n+        .create(scheduler.wrapQueryRunner(baseRunner))\n         .applyPreMergeDecoration()\n         .mergeResults()\n         .applyPostMergeDecoration()\n         .emitCPUTimeMetric(emitter, cpuAccumulator);\n   }\n-\n   @Override\n   public <T> QueryRunner<T> getQueryRunnerForSegments(final Query<T> query, final Iterable<SegmentDescriptor> specs)\n   {\n     // SegmentWranglers only work based on intervals and cannot run with specific segments.\n     throw new ISE(\"Cannot run with specific segments\");\n   }\n+\n+  private <T> Query<T> prioritizeAndLaneQuery(Query<T> query, Iterable<Segment> segments)\n+  {\n+    Set<SegmentServerSelector> segmentServerSelectors = new HashSet<>();\n+    for (Segment s : segments) {\n+      segmentServerSelectors.add(new SegmentServerSelector(null, s.getId().toDescriptor()));", "originalCommit": "beb572259a54eb906aca50319709e35af4177d70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "830a628378639aa5a9fb47086d38dc131ddc0ae4", "url": "https://github.com/apache/druid/commit/830a628378639aa5a9fb47086d38dc131ddc0ae4", "message": "review stuffs", "committedDate": "2020-03-27T09:48:51Z", "type": "commit"}]}