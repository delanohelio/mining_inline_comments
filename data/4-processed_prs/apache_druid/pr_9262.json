{"pr_number": 9262, "pr_title": "add docker tutorial, friendlier docker-compose.yml, experimental java 11 dockerfile", "pr_createdAt": "2020-01-27T10:29:38Z", "pr_url": "https://github.com/apache/druid/pull/9262", "timeline": [{"oid": "8f8190ac01c2f713c10459021f70a233f84b98d9", "url": "https://github.com/apache/druid/commit/8f8190ac01c2f713c10459021f70a233f84b98d9", "message": "add docker tutorial, experimental java 11 dockerfile", "committedDate": "2020-01-27T10:24:56Z", "type": "commit"}, {"oid": "10696bf7c0a0bc9d4aa1f356a27d6ef013d01dca", "url": "https://github.com/apache/druid/commit/10696bf7c0a0bc9d4aa1f356a27d6ef013d01dca", "message": "Merge remote-tracking branch 'upstream/master' into docker-stuff", "committedDate": "2020-01-27T10:52:20Z", "type": "commit"}, {"oid": "67a43cd085c6717d047b2261fc4de6b38017cc8c", "url": "https://github.com/apache/druid/commit/67a43cd085c6717d047b2261fc4de6b38017cc8c", "message": "fix typo", "committedDate": "2020-01-27T10:53:03Z", "type": "commit"}, {"oid": "8786c8a61804768fedf4d94b1699fa267bfbec73", "url": "https://github.com/apache/druid/commit/8786c8a61804768fedf4d94b1699fa267bfbec73", "message": "Merge remote-tracking branch 'upstream/master' into docker-stuff", "committedDate": "2020-01-28T21:19:41Z", "type": "commit"}, {"oid": "f5b85a10cf72f6644eed870b5f5d4169c0e4a713", "url": "https://github.com/apache/druid/commit/f5b85a10cf72f6644eed870b5f5d4169c0e4a713", "message": "spelling", "committedDate": "2020-01-28T21:50:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNTEyNw==", "url": "https://github.com/apache/druid/pull/9262#discussion_r372725127", "bodyText": "Capitalize Docker? So \"Druid docker image\" > \"Druid Docker image\" ... or maybe just \"Druid image\"", "author": "sthetland", "createdAt": "2020-01-30T01:52:57Z", "path": "docs/tutorials/docker.md", "diffHunk": "@@ -0,0 +1,81 @@\n+---\n+id: docker\n+title: \"Docker\"\n+---\n+\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~   http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+  \n+In this quickstart, we will download the Druid docker image from [Apache Druid on Docker Hub](https://hub.docker.com/r/apache/druid) and set it up on a single machine using [Docker](https://www.docker.com/get-started) and [Docker Compose](https://docs.docker.com/compose/). The cluster will be ready to load data", "originalCommit": "f5b85a10cf72f6644eed870b5f5d4169c0e4a713", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2MjY5MA==", "url": "https://github.com/apache/druid/pull/9262#discussion_r377962690", "bodyText": "changed to 'Druid image'", "author": "clintropolis", "createdAt": "2020-02-11T23:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNTEyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNjY2Ng==", "url": "https://github.com/apache/druid/pull/9262#discussion_r372726666", "bodyText": "A nit, but i suggest splitting this long sentence, maybe using a semi-colon, with a few other punctuation adjustments:\nThe Druid docker-compose.yml example utilizes a single environment file to specify the complete Druid configuration; however, in production use cases we suggest using either DRUID_COMMON_CONFIG and DRUID_CONFIG_${service} or specially tailored, service-specific environment files.", "author": "sthetland", "createdAt": "2020-01-30T02:00:22Z", "path": "docs/tutorials/docker.md", "diffHunk": "@@ -0,0 +1,81 @@\n+---\n+id: docker\n+title: \"Docker\"\n+---\n+\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~   http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+  \n+In this quickstart, we will download the Druid docker image from [Apache Druid on Docker Hub](https://hub.docker.com/r/apache/druid) and set it up on a single machine using [Docker](https://www.docker.com/get-started) and [Docker Compose](https://docs.docker.com/compose/). The cluster will be ready to load data\n+after completing this initial setup.\n+\n+Before beginning the quickstart, it is helpful to read the [general Druid overview](../design/index.md) and the\n+[ingestion overview](../ingestion/index.md), as the tutorials will refer to concepts discussed on those pages. Additionally, familiarity with Docker is recommended.\n+\n+## Prerequisites\n+\n+* Docker\n+\n+## Getting started\n+\n+The Druid source code contains [an example `docker-compose.yml`](https://github.com/apache/druid/blob/master/distribution/docker/docker-compose.yml) which can pull an image from Docker Hub and is suited to be used as an example environment and to experiment with Docker based Druid configuration and deployments.\n+\n+### Compose file\n+\n+The example `docker-compose.yml` will create a container for each Druid service, as well as Zookeeper and a PostgreSQL container as the metadata store. Deep storage will be a local directory, by default configured as `./storage` relative to your `docker-compose.yml` file, and will be mounted as `/opt/data` and shared between Druid containers which require access to deep storage. The Druid containers are configured via an [environment file](https://github.com/apache/druid/blob/master/distribution/docker/environment).\n+\n+### Configuration\n+\n+Configuration of the Druid Docker container is done via environment variables, which may additionally specify paths to [the standard Druid configuration files](../configuration/index.md)\n+\n+Special environment variables:\n+\n+* `JAVA_OPTS` -- set java options\n+* `DRUID_LOG4J` -- set the entire `log4j.xml` verbatim\n+* `DRUID_LOG_LEVEL` -- override the default log level in default log4j\n+* `DRUID_XMX` -- set Java `Xmx`\n+* `DRUID_XMS` -- set Java `Xms`\n+* `DRUID_MAXNEWSIZE` -- set Java max new size\n+* `DRUID_NEWSIZE` -- set Java new size\n+* `DRUID_MAXDIRECTMEMORYSIZE` -- set Java max direct memory size\n+* `DRUID_CONFIG_COMMON` -- full path to a file for druid 'common' properties\n+* `DRUID_CONFIG_${service}` -- full path to a file for druid 'service' properties\n+\n+In addition to the special environment variables, the script which launches Druid in the container will also attempt to use any environment variable starting with the `druid_` prefix as a command-line configuration. For example, an environment variable\n+ \n+```druid_metadata_storage_type=postgresql```\n+ \n+would be translated into \n+\n+```-Ddruid.metadata.storage.type=postgresql```\n+ \n+for the Druid process in the container.\n+\n+The Druid `docker-compose.yml` example utilizes a single environment file to specify the complete Druid configuration, however in production use cases we suggest using either `DRUID_COMMON_CONFIG` and `DRUID_CONFIG_${service}` or specially tailored service specific environment files.", "originalCommit": "f5b85a10cf72f6644eed870b5f5d4169c0e4a713", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2MjYzOQ==", "url": "https://github.com/apache/druid/pull/9262#discussion_r377962639", "bodyText": "changed", "author": "clintropolis", "createdAt": "2020-02-11T23:33:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNjY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNjgyMA==", "url": "https://github.com/apache/druid/pull/9262#discussion_r372726820", "bodyText": "\"cluster will\" -> \" cluster with\"", "author": "sthetland", "createdAt": "2020-01-30T02:00:58Z", "path": "docs/tutorials/docker.md", "diffHunk": "@@ -0,0 +1,81 @@\n+---\n+id: docker\n+title: \"Docker\"\n+---\n+\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~   http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+  \n+In this quickstart, we will download the Druid docker image from [Apache Druid on Docker Hub](https://hub.docker.com/r/apache/druid) and set it up on a single machine using [Docker](https://www.docker.com/get-started) and [Docker Compose](https://docs.docker.com/compose/). The cluster will be ready to load data\n+after completing this initial setup.\n+\n+Before beginning the quickstart, it is helpful to read the [general Druid overview](../design/index.md) and the\n+[ingestion overview](../ingestion/index.md), as the tutorials will refer to concepts discussed on those pages. Additionally, familiarity with Docker is recommended.\n+\n+## Prerequisites\n+\n+* Docker\n+\n+## Getting started\n+\n+The Druid source code contains [an example `docker-compose.yml`](https://github.com/apache/druid/blob/master/distribution/docker/docker-compose.yml) which can pull an image from Docker Hub and is suited to be used as an example environment and to experiment with Docker based Druid configuration and deployments.\n+\n+### Compose file\n+\n+The example `docker-compose.yml` will create a container for each Druid service, as well as Zookeeper and a PostgreSQL container as the metadata store. Deep storage will be a local directory, by default configured as `./storage` relative to your `docker-compose.yml` file, and will be mounted as `/opt/data` and shared between Druid containers which require access to deep storage. The Druid containers are configured via an [environment file](https://github.com/apache/druid/blob/master/distribution/docker/environment).\n+\n+### Configuration\n+\n+Configuration of the Druid Docker container is done via environment variables, which may additionally specify paths to [the standard Druid configuration files](../configuration/index.md)\n+\n+Special environment variables:\n+\n+* `JAVA_OPTS` -- set java options\n+* `DRUID_LOG4J` -- set the entire `log4j.xml` verbatim\n+* `DRUID_LOG_LEVEL` -- override the default log level in default log4j\n+* `DRUID_XMX` -- set Java `Xmx`\n+* `DRUID_XMS` -- set Java `Xms`\n+* `DRUID_MAXNEWSIZE` -- set Java max new size\n+* `DRUID_NEWSIZE` -- set Java new size\n+* `DRUID_MAXDIRECTMEMORYSIZE` -- set Java max direct memory size\n+* `DRUID_CONFIG_COMMON` -- full path to a file for druid 'common' properties\n+* `DRUID_CONFIG_${service}` -- full path to a file for druid 'service' properties\n+\n+In addition to the special environment variables, the script which launches Druid in the container will also attempt to use any environment variable starting with the `druid_` prefix as a command-line configuration. For example, an environment variable\n+ \n+```druid_metadata_storage_type=postgresql```\n+ \n+would be translated into \n+\n+```-Ddruid.metadata.storage.type=postgresql```\n+ \n+for the Druid process in the container.\n+\n+The Druid `docker-compose.yml` example utilizes a single environment file to specify the complete Druid configuration, however in production use cases we suggest using either `DRUID_COMMON_CONFIG` and `DRUID_CONFIG_${service}` or specially tailored service specific environment files.\n+\n+## Launching the cluster\n+\n+Run `docker-compose up` to launch the cluster will a shell attached, or `docker-compose up -d` to run the cluster in the background. Once the cluster has started, you can navigate to [http://localhost:8888](http://localhost:8888).", "originalCommit": "f5b85a10cf72f6644eed870b5f5d4169c0e4a713", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNzYzMg==", "url": "https://github.com/apache/druid/pull/9262#discussion_r372727632", "bodyText": "Also, maybe others would know, because the path is in a section above, but it wasn't obvious to me to run the command from druid_repo_home/distribution/docker. So optionally, could mention, i.e., \"Run docker-compose up from the distribution/docker directory to launch....\"\nOne more thing, do they need to do the docker commands that are in the druid_repo_home/distribution/docker/README.md ? I did, but wasn't sure I had to.", "author": "sthetland", "createdAt": "2020-01-30T02:05:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNjgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2MjUwMQ==", "url": "https://github.com/apache/druid/pull/9262#discussion_r377962501", "bodyText": "Fixed typo.\nThe steps in the readme are only necessary if building druid image from source, which I'm not sure needs to be mentioned here.", "author": "clintropolis", "createdAt": "2020-02-11T23:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNjgyMA=="}], "type": "inlineReview"}, {"oid": "986224339a4c8940a03c6783af66b698c9e49194", "url": "https://github.com/apache/druid/commit/986224339a4c8940a03c6783af66b698c9e49194", "message": "doc adjustments", "committedDate": "2020-02-07T22:51:34Z", "type": "commit"}]}