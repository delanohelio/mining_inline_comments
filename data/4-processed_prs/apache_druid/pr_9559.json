{"pr_number": 9559, "pr_title": "error on value counter overflow instead of writing sad segments", "pr_createdAt": "2020-03-25T02:44:05Z", "pr_url": "https://github.com/apache/druid/pull/9559", "timeline": [{"oid": "5c3356fdaafb70b7e4a0fa1bb873954af8c7f8be", "url": "https://github.com/apache/druid/commit/5c3356fdaafb70b7e4a0fa1bb873954af8c7f8be", "message": "error on value counter overflow instead of writing sad segments", "committedDate": "2020-03-25T02:32:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4MTgzNA==", "url": "https://github.com/apache/druid/pull/9559#discussion_r397581834", "bodyText": "+1 for this operator friendly error message", "author": "suneet-s", "createdAt": "2020-03-25T02:56:36Z", "path": "processing/src/main/java/org/apache/druid/segment/data/ColumnCapacityExceededException.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment.data;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import org.apache.druid.java.util.common.StringUtils;\n+\n+public class ColumnCapacityExceededException extends RuntimeException\n+{\n+  @VisibleForTesting\n+  public static String formatMessage(String columnName)\n+  {\n+    return StringUtils.format(\n+        \"Too many values to store for %s column, try reducing maxRowsPerSegment\",", "originalCommit": "5c3356fdaafb70b7e4a0fa1bb873954af8c7f8be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgxNTcyMQ==", "url": "https://github.com/apache/druid/pull/9559#discussion_r398815721", "bodyText": "javadocs please. What does the size indicate? Number of rows in the column? Or space it's taking up. Reading the code it looks like it's the former", "author": "suneet-s", "createdAt": "2020-03-26T18:53:53Z", "path": "processing/src/main/java/org/apache/druid/segment/data/ColumnarDoublesSerializer.java", "diffHunk": "@@ -29,5 +29,6 @@\n public interface ColumnarDoublesSerializer extends Serializer\n {\n   void open() throws IOException;\n+  int size();", "originalCommit": "5c3356fdaafb70b7e4a0fa1bb873954af8c7f8be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NDUzNA==", "url": "https://github.com/apache/druid/pull/9559#discussion_r398844534", "bodyText": "aw, I was just making it symmetrical with ColumnarFloatsSerializer and ColumnarLongsSerializer, neither of which have any docs either.\nThis area of the code in general is sort of barren of javadocs, so how about a bargain: unless there is something else to change on this PR, how about I just do a follow-up that adds javadocs to a bunch of this stuff?", "author": "clintropolis", "createdAt": "2020-03-26T19:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgxNTcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0Njk0NA==", "url": "https://github.com/apache/druid/pull/9559#discussion_r398846944", "bodyText": "sounds like a good deal to me. I'm almost done reviewing, pressed the wrong button when I made that comment. I don't have anything else yet.", "author": "suneet-s", "createdAt": "2020-03-26T19:47:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgxNTcyMQ=="}], "type": "inlineReview"}]}