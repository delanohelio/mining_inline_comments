{"pr_number": 10314, "pr_title": "Add config and header support for confluent schema registry. ", "pr_createdAt": "2020-08-24T11:26:29Z", "pr_url": "https://github.com/apache/druid/pull/10314", "timeline": [{"oid": "56472ed2ca070ada3400e473ddaaf0fe96799446", "url": "https://github.com/apache/druid/commit/56472ed2ca070ada3400e473ddaaf0fe96799446", "message": "Add config and header support for confluent schema registry. (porting code from https://github.com/apache/druid/pull/9096)", "committedDate": "2020-08-24T14:20:48Z", "type": "commit"}, {"oid": "56472ed2ca070ada3400e473ddaaf0fe96799446", "url": "https://github.com/apache/druid/commit/56472ed2ca070ada3400e473ddaaf0fe96799446", "message": "Add config and header support for confluent schema registry. (porting code from https://github.com/apache/druid/pull/9096)", "committedDate": "2020-08-24T14:20:48Z", "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "bdf97f6928ae48accc520448cdb72f7d778897d5", "url": "https://github.com/apache/druid/commit/bdf97f6928ae48accc520448cdb72f7d778897d5", "message": "Add Eclipse Public License 2.0 to license check", "committedDate": "2020-08-24T18:13:04Z", "type": "commit"}, {"oid": "bdf97f6928ae48accc520448cdb72f7d778897d5", "url": "https://github.com/apache/druid/commit/bdf97f6928ae48accc520448cdb72f7d778897d5", "message": "Add Eclipse Public License 2.0 to license check", "committedDate": "2020-08-24T18:13:04Z", "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "14887008fd107f1e72b28b2592bb87641cf74749", "url": "https://github.com/apache/druid/commit/14887008fd107f1e72b28b2592bb87641cf74749", "message": "Update licenses.yaml, revert changes to check-licenses.py and dependencies for integration-tests", "committedDate": "2020-08-26T08:21:23Z", "type": "commit"}, {"oid": "14887008fd107f1e72b28b2592bb87641cf74749", "url": "https://github.com/apache/druid/commit/14887008fd107f1e72b28b2592bb87641cf74749", "message": "Update licenses.yaml, revert changes to check-licenses.py and dependencies for integration-tests", "committedDate": "2020-08-26T08:21:23Z", "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "444a972469a6a3403e488cb1c27a248236ec5bf9", "url": "https://github.com/apache/druid/commit/444a972469a6a3403e488cb1c27a248236ec5bf9", "message": "Merge branch 'master' into Druid-8806", "committedDate": "2020-08-26T15:47:15Z", "type": "commit"}, {"oid": "444a972469a6a3403e488cb1c27a248236ec5bf9", "url": "https://github.com/apache/druid/commit/444a972469a6a3403e488cb1c27a248236ec5bf9", "message": "Merge branch 'master' into Druid-8806", "committedDate": "2020-08-26T15:47:15Z", "type": "forcePushed"}, {"oid": "218fd4ddebf26d558345d48dea58a185996c101d", "url": "https://github.com/apache/druid/commit/218fd4ddebf26d558345d48dea58a185996c101d", "message": "Merge branch 'master' into Druid-8806", "committedDate": "2020-09-02T14:41:08Z", "type": "commit"}, {"oid": "900c97d3f1246856f0d71a883c0c3f5d48778a92", "url": "https://github.com/apache/druid/commit/900c97d3f1246856f0d71a883c0c3f5d48778a92", "message": "Merge branch 'master' into Druid-8806", "committedDate": "2020-09-07T07:06:29Z", "type": "commit"}, {"oid": "ad7c7b0d18c47fd7599bf3da3fd9335c4c593c8b", "url": "https://github.com/apache/druid/commit/ad7c7b0d18c47fd7599bf3da3fd9335c4c593c8b", "message": "Merge branch 'master' into Druid-8806", "committedDate": "2020-09-28T11:26:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxNzc4MA==", "url": "https://github.com/apache/druid/pull/10314#discussion_r533817780", "bodyText": "it seems like this method is deprecated as well, but it doesn't really seem like there is a better replacement since the underlying method is doing this\n    ParsedSchema schema = this.getSchemaById(id);\n    return schema instanceof AvroSchema ? ((AvroSchema)schema).rawSchema() : null;", "author": "clintropolis", "createdAt": "2020-12-02T00:41:19Z", "path": "extensions-core/avro-extensions/src/main/java/org/apache/druid/data/input/avro/SchemaRegistryBasedAvroBytesDecoder.java", "diffHunk": "@@ -63,7 +73,7 @@ public GenericRecord parse(ByteBuffer bytes)\n       int id = bytes.getInt(); // extract schema registry id\n       int length = bytes.limit() - 1 - 4;\n       int offset = bytes.position() + bytes.arrayOffset();\n-      Schema schema = registry.getByID(id);\n+      Schema schema = registry.getById(id);", "originalCommit": "ad7c7b0d18c47fd7599bf3da3fd9335c4c593c8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzY1MDY3Mw==", "url": "https://github.com/apache/druid/pull/10314#discussion_r583650673", "bodyText": "Updated to use getSchemaById, which is anyway overridden by the CachedSchemaRegistryClient implementation that is being used here.\nEDIT: actually just used that piece of code, it makes more sense I think, in case getById() gets changed in the future", "author": "spinatelli", "createdAt": "2021-02-26T13:50:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxNzc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxODg0Ng==", "url": "https://github.com/apache/druid/pull/10314#discussion_r533818846", "bodyText": "nit: did this get tagged with an incorrect module or was it just missing from the file? (it doesn't seem like there were any changes to that extension)", "author": "clintropolis", "createdAt": "2020-12-02T00:44:29Z", "path": "licenses.yaml", "diffHunk": "@@ -3081,13 +3081,105 @@ notices:\n ---\n \n name: Kafka Schema Registry Client\n-version: 3.0.1\n+version: 5.5.1\n license_category: binary\n module: extensions/druid-avro-extensions\n license_name: Apache License version 2.0\n libraries:\n   - io.confluent: kafka-schema-registry-client\n+  - io.confluent: common-config\n+  - io.confluent: common-utils\n+\n+---\n+\n+name: com.101tec zkclient\n+license_category: binary\n+version: '0.10'\n+module: druid-ranger-security", "originalCommit": "ad7c7b0d18c47fd7599bf3da3fd9335c4c593c8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzY1MDM3MA==", "url": "https://github.com/apache/druid/pull/10314#discussion_r583650370", "bodyText": "Removed it, it was a duplicate", "author": "spinatelli", "createdAt": "2021-02-26T13:49:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgxODg0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyMDIzNQ==", "url": "https://github.com/apache/druid/pull/10314#discussion_r533820235", "bodyText": "The basic auth example I don't think works anymore, looking at the code underneath it looks like the schema.registry prefix is only for the ssl config\n    if (configs != null && !configs.isEmpty()) {\n      restService.configure(configs);\n      Map<String, Object> sslConfigs = (Map)configs.entrySet().stream().filter((e) -> {\n        return ((String)e.getKey()).startsWith(\"schema.registry.\");\n      }).collect(Collectors.toMap((e) -> {\n        return ((String)e.getKey()).substring(\"schema.registry.\".length());\n      }, Entry::getValue));\n      SslFactory sslFactory = new SslFactory(sslConfigs);\n      if (sslFactory != null && sslFactory.sslContext() != null) {\n        restService.setSslSocketFactory(sslFactory.sslContext().getSocketFactory());\n      }\n    }\n\nwhere restService is not considering the prefix:\n    String basicCredentialsSource = (String)configs.get(\"basic.auth.credentials.source\");\n    String bearerCredentialsSource = (String)configs.get(\"bearer.auth.credentials.source\");\n...\n\nAfter reading through https://docs.confluent.io/platform/current/schema-registry/security/index.html#additional-configurations-for-https, should we also include the SSL config since it seems relevant if connecting to https?\nAlso, formatting seems a bit off here compared to the other JSON example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               \"type\"   : \"schema_registry\",\n          \n          \n            \n               \"urls\"   : [<schema-registry-url-1>, <schema-registry-url-2>, ...],\n          \n          \n            \n               \"config\" : {\n          \n          \n            \n                           \"schema.registry.basic.auth.credentials.source\" : \"USER_INFO\",\n          \n          \n            \n                           \"schema.registry.basic.auth.user.info\"          : \"fred:letmein\",\n          \n          \n            \n                           ... \n          \n          \n            \n                          },\n          \n          \n            \n               \"headers\": {\n          \n          \n            \n                           \"traceID\"   : \"b29c5de2-0db4-490b-b421\",\n          \n          \n            \n                           \"timeStamp\" : \"1577191871865\",\n          \n          \n            \n                           ...\n          \n          \n            \n                           \n          \n          \n            \n                         }\n          \n          \n            \n               \"type\" : \"schema_registry\",\n          \n          \n            \n               \"urls\" : [<schema-registry-url-1>, <schema-registry-url-2>, ...],\n          \n          \n            \n               \"config\" : {\n          \n          \n            \n                    \"basic.auth.credentials.source\": \"USER_INFO\",\n          \n          \n            \n                    \"basic.auth.user.info\": \"fred:letmein\",\n          \n          \n            \n                    \"schema.registry.ssl.truststore.location\": \"/some/secrets/kafka.client.truststore.jks\",\n          \n          \n            \n                    \"schema.registry.ssl.truststore.password\": \"<password>\",\n          \n          \n            \n                    \"schema.registry.ssl.keystore.location\": \"/some/secrets/kafka.client.keystore.jks\",\n          \n          \n            \n                    \"schema.registry.ssl.keystore.password\": \"<password>\",\n          \n          \n            \n                    \"schema.registry.ssl.key.password\": \"<password>\"\n          \n          \n            \n                   ... \n          \n          \n            \n               },\n          \n          \n            \n               \"headers\": {\n          \n          \n            \n                   \"traceID\" : \"b29c5de2-0db4-490b-b421\",\n          \n          \n            \n                   \"timeStamp\" : \"1577191871865\",\n          \n          \n            \n                   ...\n          \n          \n            \n                }", "author": "clintropolis", "createdAt": "2020-12-02T00:48:27Z", "path": "docs/ingestion/data-formats.md", "diffHunk": "@@ -1020,6 +1026,27 @@ For details, see the Schema Registry [documentation](http://docs.confluent.io/cu\n ...\n ```\n \n+Multiple Instances:\n+```json\n+...\n+\"avroBytesDecoder\" : {\n+   \"type\"   : \"schema_registry\",\n+   \"urls\"   : [<schema-registry-url-1>, <schema-registry-url-2>, ...],\n+   \"config\" : {\n+               \"schema.registry.basic.auth.credentials.source\" : \"USER_INFO\",\n+               \"schema.registry.basic.auth.user.info\"          : \"fred:letmein\",\n+               ... \n+              },\n+   \"headers\": {\n+               \"traceID\"   : \"b29c5de2-0db4-490b-b421\",\n+               \"timeStamp\" : \"1577191871865\",\n+               ...\n+               \n+             }", "originalCommit": "ad7c7b0d18c47fd7599bf3da3fd9335c4c593c8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5Mzk3Mg==", "url": "https://github.com/apache/druid/pull/10314#discussion_r533993972", "bodyText": "Also since this config section contains potentially sensitive information, longer term it might make sense to use something like what is suggested in #10309 (though obviously not in this PR)", "author": "clintropolis", "createdAt": "2020-12-02T08:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyMDIzNQ=="}], "type": "inlineReview"}, {"oid": "6d4ccbd63921fbf29f2b607bcfb52a18031ea8aa", "url": "https://github.com/apache/druid/commit/6d4ccbd63921fbf29f2b607bcfb52a18031ea8aa", "message": "Merge remote-tracking branch 'upstream/master' into Druid-8806", "committedDate": "2021-02-26T11:23:52Z", "type": "commit"}, {"oid": "68cbd0a0f6da6e1b760e9f7263d88d58724a749b", "url": "https://github.com/apache/druid/commit/68cbd0a0f6da6e1b760e9f7263d88d58724a749b", "message": "Add spelling exception and remove unused dependency", "committedDate": "2021-02-26T13:11:11Z", "type": "commit"}, {"oid": "a29f73ce4a5ba68ee1cc6d6498788a28cc2b8443", "url": "https://github.com/apache/druid/commit/a29f73ce4a5ba68ee1cc6d6498788a28cc2b8443", "message": "Use non-deprecated getSchemaById() and remove duplicated license entry", "committedDate": "2021-02-26T14:04:34Z", "type": "commit"}, {"oid": "2925492a7d55c7bb1ade4c56145727fc8584fd9c", "url": "https://github.com/apache/druid/commit/2925492a7d55c7bb1ade4c56145727fc8584fd9c", "message": "Update docs/ingestion/data-formats.md\n\nCo-authored-by: Clint Wylie <cjwylie@gmail.com>", "committedDate": "2021-02-26T14:05:06Z", "type": "commit"}, {"oid": "2925492a7d55c7bb1ade4c56145727fc8584fd9c", "url": "https://github.com/apache/druid/commit/2925492a7d55c7bb1ade4c56145727fc8584fd9c", "message": "Update docs/ingestion/data-formats.md\n\nCo-authored-by: Clint Wylie <cjwylie@gmail.com>", "committedDate": "2021-02-26T14:05:06Z", "type": "forcePushed"}, {"oid": "26bffa3f2ec8bfba4038e64522f017abfec8bea5", "url": "https://github.com/apache/druid/commit/26bffa3f2ec8bfba4038e64522f017abfec8bea5", "message": "Added check for schema being null, as per Confluent code", "committedDate": "2021-02-26T14:25:36Z", "type": "commit"}, {"oid": "a4cbfe2d778797aa849a2109cabc96d14cf8bfe7", "url": "https://github.com/apache/druid/commit/a4cbfe2d778797aa849a2109cabc96d14cf8bfe7", "message": "Missing imports and whitespace", "committedDate": "2021-02-26T17:08:44Z", "type": "commit"}, {"oid": "f77bc36675737459a425efc934e693af42295fee", "url": "https://github.com/apache/druid/commit/f77bc36675737459a425efc934e693af42295fee", "message": "Updated unit tests with AvroSchema", "committedDate": "2021-02-27T18:11:29Z", "type": "commit"}]}