{"pr_number": 10373, "pr_title": "Adding more dimensions to the audit log entry", "pr_createdAt": "2020-09-09T19:20:17Z", "pr_url": "https://github.com/apache/druid/pull/10373", "timeline": [{"oid": "5c5c08b8fd0e4f561ae1880ac4e56c0a27cb1dae", "url": "https://github.com/apache/druid/commit/5c5c08b8fd0e4f561ae1880ac4e56c0a27cb1dae", "message": "Adding more dimensions to the audit log entry", "committedDate": "2020-09-09T19:13:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw==", "url": "https://github.com/apache/druid/pull/10373#discussion_r485989247", "bodyText": "Hmm, do we need to emit comment and payload as metrics? They seem to need to be retrieved via API instead.", "author": "jihoonson", "createdAt": "2020-09-10T00:14:23Z", "path": "server/src/main/java/org/apache/druid/server/audit/SQLAuditManager.java", "diffHunk": "@@ -98,6 +98,10 @@ public void doAudit(AuditEntry auditEntry, Handle handle) throws IOException\n             .setDimension(\"key\", auditEntry.getKey())\n             .setDimension(\"type\", auditEntry.getType())\n             .setDimension(\"author\", auditEntry.getAuditInfo().getAuthor())\n+            .setDimension(\"comment\", auditEntry.getAuditInfo().getComment())\n+            .setDimension(\"remote_address\", auditEntry.getAuditInfo().getIp())\n+            .setDimension(\"created_date\", auditEntry.getAuditTime().toString())\n+            .setDimension(\"payload\", auditEntry.getPayload())", "originalCommit": "5c5c08b8fd0e4f561ae1880ac4e56c0a27cb1dae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxODY3OA==", "url": "https://github.com/apache/druid/pull/10373#discussion_r486618678", "bodyText": "Typically comment tends to have the business reason for doing the change. So it is useful for auditing. I am on the fence about payload. I wasn't sure whether it has any extra information not covered by the other columns. So decided to add that one. I can remove it if that is not the case.", "author": "mghosh4", "createdAt": "2020-09-10T20:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY4MTQ0Mg==", "url": "https://github.com/apache/druid/pull/10373#discussion_r486681442", "bodyText": "Thanks. How about removing payload for now then? We can add it later if it turns out to be useful.", "author": "jihoonson", "createdAt": "2020-09-10T23:06:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4MDY3Ng==", "url": "https://github.com/apache/druid/pull/10373#discussion_r486780676", "bodyText": "Actually I checked some of the emitter metric logs and it does seem payload has some information not part of other columns. For example, for audit_type rules it contains the actual load rule change information, similarly for coordinator.config it contains the config setting. Looking at this I think I would like to keep the payload information around as well.", "author": "mghosh4", "createdAt": "2020-09-11T05:24:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyNTQ2OA==", "url": "https://github.com/apache/druid/pull/10373#discussion_r489125468", "bodyText": "I would like to make sure that it will be useful before we add any new dimension since it will increase the size of metrics. The metric size could be problematic since this method is used in updating lookups and compaction configurations. If it's not clear now, then we can add it later when it turns out to be useful.", "author": "jihoonson", "createdAt": "2020-09-16T02:33:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3NTgwMg==", "url": "https://github.com/apache/druid/pull/10373#discussion_r489175802", "bodyText": "I have double checked, all the dimensions convey useful information. Which column is not clear to you?", "author": "mghosh4", "createdAt": "2020-09-16T05:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUyOTIxOA==", "url": "https://github.com/apache/druid/pull/10373#discussion_r489529218", "bodyText": "I'm concerned about the size of the payload. That is usually an unbounded json blob. So this could have scale implications. For example an audit message of a compaction change for a datasource in a cluster with 10k+ datasources can generate a payload that's several MB of text.\nIf reporting payload is critical for some use cases, it should be disabled by default so users who want it can opt in.", "author": "suneet-s", "createdAt": "2020-09-16T15:29:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2OTA2Mw==", "url": "https://github.com/apache/druid/pull/10373#discussion_r489569063", "bodyText": "@suneet-s Interesting, is this because all the compaction config for 10K+ datasources get generated even when we are updating only 1? Do you think we can optimize that?\nI am fine with making payload optional. My only concern is none of the dimension columns capture the actual change that happened which I believe is part of payload. This is important from the perspective of auditing.", "author": "mghosh4", "createdAt": "2020-09-16T16:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NTM2NQ==", "url": "https://github.com/apache/druid/pull/10373#discussion_r489575365", "bodyText": "@mghosh4 Yes that's correct. I agree with your concern about the dimensions not capturing the actual change. I think it's a design flaw of how audit logging works in general, so we need to address that design holistically.\nRight now, even if I look at the druid_audit table, I need to do a json diff to actually know what change happened. I haven't created a proposal on how to fix that because I haven't had the time to come up with a meaningful solution to this, and come up with a testing / transition plan so that we don't break the existing audit logging system.", "author": "suneet-s", "createdAt": "2020-09-16T16:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5NTE2NQ==", "url": "https://github.com/apache/druid/pull/10373#discussion_r489595165", "bodyText": "Got it. So let me add a parameter called addPayloadToAuditMetricDimension in SQLAuditManagerConfig. I can use that to set the payload. Does that sound good? @suneet-s @jihoonson", "author": "mghosh4", "createdAt": "2020-09-16T17:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4OTI0Nw=="}], "type": "inlineReview"}, {"oid": "7707622bc9b9878acb0c9339248c31fde15f6e86", "url": "https://github.com/apache/druid/commit/7707622bc9b9878acb0c9339248c31fde15f6e86", "message": "Making adding payload in audit metric optional", "committedDate": "2020-09-16T18:05:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5NjM0NQ==", "url": "https://github.com/apache/druid/pull/10373#discussion_r489996345", "bodyText": "nit: how about includePayloadAsDimensionInMetric?", "author": "jihoonson", "createdAt": "2020-09-17T06:19:33Z", "path": "docs/configuration/index.md", "diffHunk": "@@ -330,6 +330,15 @@ Switching Request Logger routes native query's request logs to one request logge\n |`druid.request.logging.nativeQueryLogger`|request logger for emitting native query's request logs.|none|\n |`druid.request.logging.sqlQueryLogger`|request logger for emitting SQL query's request logs.|none|\n \n+### Audit Logging\n+\n+Coordinator and Overlord log changes to lookups, segment load/drop rules, dynamic configuration changes for auditing\n+\n+|Property|Description|Default|\n+|--------|-----------|-------|\n+|`druid.audit.manager.auditHistoryMillis`|Default duration for querying audit history.|1 week|\n+|`druid.audit.manager.addPayloadToAuditMetricDimension`|Boolean flag on whether to add `payload` column in service metric.|false|", "originalCommit": "7707622bc9b9878acb0c9339248c31fde15f6e86", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMyMjA0Ng==", "url": "https://github.com/apache/druid/pull/10373#discussion_r490322046", "bodyText": "Can you add a unit test that validates this behavior please", "author": "suneet-s", "createdAt": "2020-09-17T14:59:24Z", "path": "server/src/main/java/org/apache/druid/server/audit/SQLAuditManager.java", "diffHunk": "@@ -93,13 +93,19 @@ public Void withHandle(Handle handle) throws Exception\n   @Override\n   public void doAudit(AuditEntry auditEntry, Handle handle) throws IOException\n   {\n-    emitter.emit(\n-        new ServiceMetricEvent.Builder()\n-            .setDimension(\"key\", auditEntry.getKey())\n-            .setDimension(\"type\", auditEntry.getType())\n-            .setDimension(\"author\", auditEntry.getAuditInfo().getAuthor())\n-            .build(\"config/audit\", 1)\n-    );\n+    ServiceMetricEvent.Builder builder = new ServiceMetricEvent.Builder()\n+                                                .setDimension(\"key\", auditEntry.getKey())\n+                                                .setDimension(\"type\", auditEntry.getType())\n+                                                .setDimension(\"author\", auditEntry.getAuditInfo().getAuthor())\n+                                                .setDimension(\"comment\", auditEntry.getAuditInfo().getComment())\n+                                                .setDimension(\"remote_address\", auditEntry.getAuditInfo().getIp())\n+                                                .setDimension(\"created_date\", auditEntry.getAuditTime().toString());\n+\n+    if (config.getAddPayloadToAuditMetricDimension()) {\n+      builder.setDimension(\"payload\", auditEntry.getPayload());\n+    }", "originalCommit": "7707622bc9b9878acb0c9339248c31fde15f6e86", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f23228d03478e337b8750ea6e1ccdc1633bcd110", "url": "https://github.com/apache/druid/commit/f23228d03478e337b8750ea6e1ccdc1633bcd110", "message": "Changing the name of the parameter to includePayloadAsDimensionInMetric. Adding a unit test", "committedDate": "2020-09-17T20:15:38Z", "type": "commit"}, {"oid": "be45d41f8fd256a181c46ff357cd35013380a040", "url": "https://github.com/apache/druid/commit/be45d41f8fd256a181c46ff357cd35013380a040", "message": "Fixing the intellij code introspection issues", "committedDate": "2020-09-17T21:59:07Z", "type": "commit"}]}