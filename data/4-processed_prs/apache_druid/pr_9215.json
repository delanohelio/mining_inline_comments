{"pr_number": 9215, "pr_title": "[0.17.0] Speed up String first/last aggregators when folding isn't needed. (#9181)", "pr_createdAt": "2020-01-18T00:31:54Z", "pr_url": "https://github.com/apache/druid/pull/9215", "timeline": [{"oid": "26592a33c08421dc8672beac17386d8823818336", "url": "https://github.com/apache/druid/commit/26592a33c08421dc8672beac17386d8823818336", "message": "Speed up String first/last aggregators when folding isn't needed. (#9181)\n\n* Speed up String first/last aggregators when folding isn't needed.\n\nExamines the value column, and disables fold checking via a needsFoldCheck\nflag if that column can't possibly contain SerializableLongStringPairs. This\nis helpful because it avoids calling getObject on the value selector when\nunnecessary; say, because the time selector didn't yield an earlier or later\nvalue.\n\n* PR comments.\n\n* Move fastLooseChop to StringUtils.", "committedDate": "2020-01-18T00:31:43Z", "type": "commit"}, {"oid": "274e6856ff06a08cb2c91a3cf476a5f638d29ffc", "url": "https://github.com/apache/druid/commit/274e6856ff06a08cb2c91a3cf476a5f638d29ffc", "message": "actually fix conflict correctly", "committedDate": "2020-01-18T00:40:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDQxNA==", "url": "https://github.com/apache/druid/pull/9215#discussion_r368190414", "bodyText": "To resolve I moved chop and fastLooseChop to StringUtils since this has tests with them and renamed references in StringFirst/Last aggs", "author": "suneet-s", "createdAt": "2020-01-18T00:45:03Z", "path": "core/src/main/java/org/apache/druid/java/util/common/StringUtils.java", "diffHunk": "@@ -546,4 +546,39 @@ public static String rpad(String base, Integer len, String pad)\n     return new String(data);\n   }\n \n+  /**\n+   * Returns the string truncated to maxBytes.\n+   * If given string input is shorter than maxBytes, then it remains the same.\n+   *\n+   * @param s        The input string to possibly be truncated\n+   * @param maxBytes The max bytes that string input will be truncated to\n+   *\n+   * @return the string after truncated to maxBytes\n+   */\n+  @Nullable\n+  public static String chop(@Nullable final String s, final int maxBytes)\n+  {\n+    if (s == null) {\n+      return null;\n+    } else {\n+      // Shorten firstValue to what could fit in maxBytes as UTF-8.\n+      final byte[] bytes = new byte[maxBytes];\n+      final int len = StringUtils.toUtf8WithLimit(s, ByteBuffer.wrap(bytes));\n+      return new String(bytes, 0, len, StandardCharsets.UTF_8);\n+    }\n+  }\n+\n+  /**\n+   * Shorten \"s\" to \"maxBytes\" chars. Fast and loose because these are *chars* not *bytes*. Use\n+   * {@link #chop(String, int)} for slower, but accurate chopping.\n+   */\n+  @Nullable\n+  public static String fastLooseChop(@Nullable final String s, final int maxBytes)\n+  {\n+    if (s == null || s.length() <= maxBytes) {\n+      return s;\n+    } else {\n+      return s.substring(0, maxBytes);\n+    }", "originalCommit": "26592a33c08421dc8672beac17386d8823818336", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3bd24813cac93d1ec31e834821cbb42a39f5807c", "url": "https://github.com/apache/druid/commit/3bd24813cac93d1ec31e834821cbb42a39f5807c", "message": "remove unused import", "committedDate": "2020-01-18T05:38:38Z", "type": "commit"}]}