{"pr_number": 10232, "pr_title": "Fix Avro support in Web Console", "pr_createdAt": "2020-08-03T16:51:37Z", "pr_url": "https://github.com/apache/druid/pull/10232", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5ODEwNA==", "url": "https://github.com/apache/druid/pull/10232#discussion_r469298104", "bodyText": "It'd be really great if we could test the proper thing here, but I'm not sure how either.\n@vogievetsky Any ideas about how we could actually check all 4 bytes here? (See #10229; the \"1\" should actually be the unprintable character 0x01.)\nAlso, are there tests for this logic block in general? Where could we add one for this particular case?", "author": "gianm", "createdAt": "2020-08-12T14:23:41Z", "path": "web-console/src/utils/ingestion-spec.tsx", "diffHunk": "@@ -2663,7 +2663,7 @@ function guessInputFormat(sampleData: string[]): InputFormat {\n       return inputFormatFromType('orc');\n     }\n     // Avro OCF 4 byte magic header: https://avro.apache.org/docs/current/spec.html#Object+Container+Files\n-    if (sampleDatum.startsWith('Obj1')) {\n+    if (sampleDatum.startsWith('Obj')) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3NTQxNg==", "url": "https://github.com/apache/druid/pull/10232#discussion_r469375416", "bodyText": "sure thing. just do if (sampleDatum.startsWith('Obj') && sampleDatum.charCodeAt(3) === 1)", "author": "vogievetsky", "createdAt": "2020-08-12T16:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5ODEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE5NTg5Mw==", "url": "https://github.com/apache/druid/pull/10232#discussion_r475195893", "bodyText": "Done.", "author": "josephglanville", "createdAt": "2020-08-23T09:27:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5ODEwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyMjI3Mw==", "url": "https://github.com/apache/druid/pull/10232#discussion_r469322273", "bodyText": "What data type is \"someFixed\"? This code is expecting it to be translated as a byte[]. I think most downstream users of these parsed datums will be interpreting them using Rows.objectToStrings, which is going to translate a byte[] into a base64 encoded string. Is that sensible behavior?\nWould you be able to add some documentation to this page: https://druid.apache.org/docs/latest/ingestion/data-formats.html#avro-ocf about how the various Avro types that we support will be handled?", "author": "gianm", "createdAt": "2020-08-12T14:56:18Z", "path": "extensions-core/avro-extensions/src/test/java/org/apache/druid/data/input/avro/AvroFlattenerMakerTest.java", "diffHunk": "@@ -78,7 +78,8 @@ public void getRootField()\n         flattener.getRootField(record, \"someNull\")\n     );\n     Assert.assertEquals(\n-        record.getSomeFixed(),\n+        // Casted to an array by transformValue\n+        record.getSomeFixed().bytes(),", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwNDMyNA==", "url": "https://github.com/apache/druid/pull/10232#discussion_r469704324", "bodyText": "Yes so fixed and bytes are encoded equivalently in Avro, fixed just has an enforced size. There is a binaryAsString option for decoding these as strings if need be. It would be nice to support that as a per-field transformation though rather than applying to all binary types as you may only want some to be interpreted as strings and others to be returned verbatim.\nIf docs were to be added I would probably put them on the druid-avro-extensions page and link to them from the various places Avro parsing it used.", "author": "josephglanville", "createdAt": "2020-08-13T05:26:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyMjI3Mw=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "736624ea14d41f4f96a9f9cf12f5bccc3fbef76c", "url": "https://github.com/apache/druid/commit/736624ea14d41f4f96a9f9cf12f5bccc3fbef76c", "message": "Fix Avro OCF detection prefix and run formation detection on raw input", "committedDate": "2020-10-08T00:30:13Z", "type": "commit"}, {"oid": "deede067f41f4a25f35da21634f29795132f9871", "url": "https://github.com/apache/druid/commit/deede067f41f4a25f35da21634f29795132f9871", "message": "Support Avro Fixed and Enum types correctly", "committedDate": "2020-10-08T00:30:14Z", "type": "commit"}, {"oid": "0268af2a59a68fe1328f288c2ecafb413b6b3045", "url": "https://github.com/apache/druid/commit/0268af2a59a68fe1328f288c2ecafb413b6b3045", "message": "Check Avro version byte in format detection", "committedDate": "2020-10-08T00:30:14Z", "type": "commit"}, {"oid": "aff3f9649ee5d4bff8980cc3a73b1b0043b8e2d5", "url": "https://github.com/apache/druid/commit/aff3f9649ee5d4bff8980cc3a73b1b0043b8e2d5", "message": "Add test for AvroOCFReader.sample\n\nEnsures that the Sampler doesn't receive raw input that it can't\nserialize into JSON.", "committedDate": "2020-10-08T00:30:14Z", "type": "commit"}, {"oid": "449df156ef084b431fe187d9ed154fba8d46d0ee", "url": "https://github.com/apache/druid/commit/449df156ef084b431fe187d9ed154fba8d46d0ee", "message": "Document Avro type handling", "committedDate": "2020-10-08T00:30:14Z", "type": "commit"}, {"oid": "6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "url": "https://github.com/apache/druid/commit/6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "message": "Add TS unit tests for guessInputFormat", "committedDate": "2020-10-08T01:00:16Z", "type": "commit"}, {"oid": "6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "url": "https://github.com/apache/druid/commit/6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "message": "Add TS unit tests for guessInputFormat", "committedDate": "2020-10-08T01:00:16Z", "type": "forcePushed"}]}