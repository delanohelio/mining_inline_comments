{"pr_number": 9740, "pr_title": "fill out missing test coverage for druid-stats, druid-momentsketch, druid-tdigestsketch postaggs", "pr_createdAt": "2020-04-22T03:07:21Z", "pr_url": "https://github.com/apache/druid/pull/9740", "timeline": [{"oid": "04f496fd722b2ab234de140b7523479d8f4a2661", "url": "https://github.com/apache/druid/commit/04f496fd722b2ab234de140b7523479d8f4a2661", "message": "postagg test coverage for druid-stats, druid-momentsketch, druid-tdigestsketch and fixes", "committedDate": "2020-04-22T02:48:11Z", "type": "commit"}, {"oid": "429c759d121f8465481dce54b1fa780868d6eeea", "url": "https://github.com/apache/druid/commit/429c759d121f8465481dce54b1fa780868d6eeea", "message": "style fixes", "committedDate": "2020-04-22T05:24:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NjQ4MA==", "url": "https://github.com/apache/druid/pull/9740#discussion_r416966480", "bodyText": "Seems like the comparator should compare doubles instead of throwing an exception.", "author": "jihoonson", "createdAt": "2020-04-28T22:40:11Z", "path": "extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/TDigestSketchToQuantilePostAggregatorTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.query.aggregation.tdigestsketch;\n+\n+import nl.jqno.equalsverifier.EqualsVerifier;\n+import org.apache.druid.jackson.DefaultObjectMapper;\n+import org.apache.druid.java.util.common.IAE;\n+import org.apache.druid.query.aggregation.PostAggregator;\n+import org.apache.druid.query.aggregation.post.ConstantPostAggregator;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+public class TDigestSketchToQuantilePostAggregatorTest\n+{\n+  @Rule\n+  public ExpectedException expectedException = ExpectedException.none();\n+\n+  @Test\n+  public void testSerde() throws Exception\n+  {\n+    TDigestSketchToQuantilePostAggregator there =\n+        new TDigestSketchToQuantilePostAggregator(\"post\", new ConstantPostAggregator(\"\", 100), 0.5);\n+\n+    DefaultObjectMapper mapper = new DefaultObjectMapper();\n+    TDigestSketchToQuantilePostAggregator andBackAgain = mapper.readValue(\n+        mapper.writeValueAsString(there),\n+        TDigestSketchToQuantilePostAggregator.class\n+    );\n+\n+    Assert.assertEquals(there, andBackAgain);\n+    Assert.assertArrayEquals(there.getCacheKey(), andBackAgain.getCacheKey());\n+    Assert.assertEquals(there.getDependentFields(), andBackAgain.getDependentFields());\n+  }\n+\n+  @Test\n+  public void testToString()\n+  {\n+    PostAggregator postAgg =\n+        new TDigestSketchToQuantilePostAggregator(\"post\", new ConstantPostAggregator(\"\", 100), 0.5);\n+\n+    Assert.assertEquals(\n+        \"TDigestSketchToQuantilePostAggregator{name='post', field=ConstantPostAggregator{name='', constantValue=100}, fraction=0.5}\",\n+        postAgg.toString()\n+    );\n+  }\n+\n+  @Test\n+  public void testComparator()\n+  {\n+    expectedException.expect(IAE.class);\n+    expectedException.expectMessage(\"Comparing arrays of quantiles is not supported\");", "originalCommit": "429c759d121f8465481dce54b1fa780868d6eeea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4OTcwNw==", "url": "https://github.com/apache/druid/pull/9740#discussion_r421289707", "bodyText": "Oops, that is a good point, fixed.", "author": "clintropolis", "createdAt": "2020-05-07T07:18:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NjQ4MA=="}], "type": "inlineReview"}, {"oid": "51d635f910dc9d54bb501532036f422aa5571140", "url": "https://github.com/apache/druid/commit/51d635f910dc9d54bb501532036f422aa5571140", "message": "fix comparator for TDigestQuantilePostAggregator", "committedDate": "2020-05-07T07:17:31Z", "type": "commit"}]}