{"pr_number": 9622, "pr_title": "Preserve the null values for numeric type dimensions post-compaction.", "pr_createdAt": "2020-04-06T01:33:12Z", "pr_url": "https://github.com/apache/druid/pull/9622", "timeline": [{"oid": "d3995fa29301ca1fdbaa93096fe72ef99679d5e8", "url": "https://github.com/apache/druid/commit/d3995fa29301ca1fdbaa93096fe72ef99679d5e8", "message": "Add selector null check to preserve null values as-is.", "committedDate": "2020-04-06T01:16:25Z", "type": "commit"}, {"oid": "af65a9ddd294edfc589975fe161930033e8e2bff", "url": "https://github.com/apache/druid/commit/af65a9ddd294edfc589975fe161930033e8e2bff", "message": "Fix typo.", "committedDate": "2020-04-06T01:17:40Z", "type": "commit"}, {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "url": "https://github.com/apache/druid/commit/b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "message": "add wrapping dimension selector test.", "committedDate": "2020-04-07T16:18:15Z", "type": "commit"}, {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "url": "https://github.com/apache/druid/commit/b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "message": "add wrapping dimension selector test.", "committedDate": "2020-04-07T16:18:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDgyOQ==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405124829", "bodyText": "Probably this should return 0 when doubles[index] == null && NullHandling.replaceWithDefault() == true? Otherwise it probably should throw an exception.", "author": "jihoonson", "createdAt": "2020-04-07T21:29:43Z", "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    return doubles[index] == null ? NullHandling.ZERO_DOUBLE : doubles[index];", "originalCommit": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDkyMw==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405124923", "bodyText": "Same for other column selectors.", "author": "jihoonson", "createdAt": "2020-04-07T21:29:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxMzk3Mw==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405213973", "bodyText": "Done.", "author": "abhishekrb19", "createdAt": "2020-04-08T01:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyODA5NA==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405128094", "bodyText": "We usually append \"Test\" at end of the class name instead of the beginning.", "author": "jihoonson", "createdAt": "2020-04-07T21:36:40Z", "path": "processing/src/test/java/org/apache/druid/segment/TestWrappingDimensionSelector.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestWrappingDimensionSelector", "originalCommit": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxNDAxMw==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405214013", "bodyText": "Ack", "author": "abhishekrb19", "createdAt": "2020-04-08T01:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyODA5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MDc5OA==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405150798", "bodyText": "Probably this should be return NullHandling.replaceWithDefault() ? false : doubles[index] == null.", "author": "jihoonson", "createdAt": "2020-04-07T22:29:14Z", "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    return doubles[index] == null ? NullHandling.ZERO_DOUBLE : doubles[index];\n+  }\n+\n+  @Override\n+  public boolean isNull()\n+  {\n+    return doubles[index] == null;", "originalCommit": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MDkyMg==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405150922", "bodyText": "Same for other column selectors.", "author": "jihoonson", "createdAt": "2020-04-07T22:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MDc5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxNDEwNw==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405214107", "bodyText": "Done.", "author": "abhishekrb19", "createdAt": "2020-04-08T01:57:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MDc5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MTA5OQ==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405151099", "bodyText": "lngSelector.getLong should be never called when the current value is null and NullHandling.sqlCompatible() == true. Probably better to check\nif (NullHandling.sqlCompatible()) {\n  Assert.assertTrue(lngSelector.isNull());\n} else {\n  Assert.assertEquals(0L, lngSelector.getLong());\n}", "author": "jihoonson", "createdAt": "2020-04-07T22:29:57Z", "path": "processing/src/test/java/org/apache/druid/segment/TestWrappingDimensionSelector.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestWrappingDimensionSelector\n+{\n+  @Test\n+  public void testLongWrappingDimensionSelector()\n+  {\n+    Long[] vals = new Long[]{24L, null, 50L, 0L, -60L};\n+    TestNullableLongColumnSelector lngSelector = new TestNullableLongColumnSelector(vals);\n+\n+    LongWrappingDimensionSelector lngWrapSelector = new LongWrappingDimensionSelector(lngSelector, null);\n+    Assert.assertEquals(24L, lngSelector.getLong());\n+    Assert.assertEquals(\"24\", lngWrapSelector.getValue());\n+\n+    lngSelector.increment();\n+    Assert.assertEquals(0L, lngSelector.getLong());", "originalCommit": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxNDI4OQ==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405214289", "bodyText": "Done, that makes sense.", "author": "abhishekrb19", "createdAt": "2020-04-08T01:57:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MTA5OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "url": "https://github.com/apache/druid/commit/fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "message": "Address review comments.", "committedDate": "2020-04-08T04:39:42Z", "type": "commit"}, {"oid": "fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "url": "https://github.com/apache/druid/commit/fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "message": "Address review comments.", "committedDate": "2020-04-08T04:39:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1MzQ3Nw==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405253477", "bodyText": "Would you please fix here too?", "author": "jihoonson", "createdAt": "2020-04-08T04:37:54Z", "path": "processing/src/test/java/org/apache/druid/segment/TestNullableFloatColumnSelector.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableFloatColumnSelector extends TestFloatColumnSelector\n+{\n+\n+  private final Float[] floats;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableFloatColumnSelector(Float[] floats)\n+  {\n+    this.floats = floats;\n+  }\n+\n+  @Override\n+  public float getFloat()\n+  {\n+    if (floats[index] != null) {\n+      return floats[index];\n+    } else {\n+      return NullHandling.ZERO_FLOAT;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2OTA3MA==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405269070", "bodyText": "@jihoonson, I changed it here in the previous commit: e2639e5\nBut then the CI Build Sql compatibility test failed for the Float case, please see below:\n[ERROR] testFloatWrappingDimensionSelector(org.apache.druid.segment.WrappingDimensionSelectorTest)  Time elapsed: 0.008 s  <<< ERROR!\njava.lang.UnsupportedOperationException\n\nI assumed calling getFloat() was ok after reading through some druid sql compatibility documentation. Please correct me if I am wrong.", "author": "abhishekrb19", "createdAt": "2020-04-08T05:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1MzQ3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgwMzA3OA==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405803078", "bodyText": "I'm not sure whether float is special or not. Would you point out the doc you read?", "author": "jihoonson", "createdAt": "2020-04-08T20:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1MzQ3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgyNzU4Ng==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405827586", "bodyText": "@jihoonson, ah, sorry, my bad. You're right - float doesn't appear to be a special case, but it was a bug in the test code. The commit above had an extraneous call because of which the test failed.\nI pushed the corrected changes in my latest commit. Sorry about the confusion. Could you please take another look?", "author": "abhishekrb19", "createdAt": "2020-04-08T21:32:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1MzQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1NDE3NQ==", "url": "https://github.com/apache/druid/pull/9622#discussion_r405254175", "bodyText": "nit: I don't think it matters much, but perhaps NullPointerException or InvalidStateException would be more appropriate.", "author": "jihoonson", "createdAt": "2020-04-08T04:40:46Z", "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    if (doubles[index] != null) {\n+      return doubles[index];\n+    } else if (NullHandling.replaceWithDefault()) {\n+      return NullHandling.ZERO_DOUBLE;\n+    } else {\n+      throw new UnsupportedOperationException();", "originalCommit": "fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5952a800eb3544ae1ba24690334826bba1f435bd", "url": "https://github.com/apache/druid/commit/5952a800eb3544ae1ba24690334826bba1f435bd", "message": "nit: replace exception type.", "committedDate": "2020-04-08T05:55:59Z", "type": "commit"}, {"oid": "b6f9b96915ffe1fc7a7211083f75ac18534ed976", "url": "https://github.com/apache/druid/commit/b6f9b96915ffe1fc7a7211083f75ac18534ed976", "message": "uh, float is indeed NOT a special case.", "committedDate": "2020-04-08T21:23:46Z", "type": "commit"}]}