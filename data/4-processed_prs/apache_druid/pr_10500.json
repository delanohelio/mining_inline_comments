{"pr_number": 10500, "pr_title": "Web console: targetRowsPerSegment for hashed partionin", "pr_createdAt": "2020-10-10T02:45:39Z", "pr_url": "https://github.com/apache/druid/pull/10500", "timeline": [{"oid": "a03d20352bad4b70ae4cc1e7c7751bd568620593", "url": "https://github.com/apache/druid/commit/a03d20352bad4b70ae4cc1e7c7751bd568620593", "message": "Web console: targetRowsPerSegment for hashed partionin\n\nAdded `targetRowsPerSegment` to the web console for hashed partition for both\nthe auto compaction view and as part of the ingestion workflow.\n\nThe help text was also updated to indicate when a user should care about\nupdating these fields", "committedDate": "2020-10-10T02:42:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjU2MA==", "url": "https://github.com/apache/druid/pull/10500#discussion_r502812560", "bodyText": "do not use <br /> in these descriptions. What you want is paragraphs. You can return multiple paragraphs by wrapping them in a fragment <>. So you would want:\n<>\n  <p>Paragraph 1</p>\n  <p>Paragraph 2</p>\n</>\n\nSee \n  \n    \n      druid/web-console/src/utils/ingestion-spec.tsx\n    \n    \n         Line 780\n      in\n      cbe2b44\n    \n    \n    \n    \n\n        \n          \n           <> \n        \n    \n  \n\n for example", "author": "vogievetsky", "createdAt": "2020-10-10T17:26:07Z", "path": "web-console/src/dialogs/compaction-dialog/compaction-dialog.tsx", "diffHunk": "@@ -74,17 +74,39 @@ const COMPACTION_CONFIG_FIELDS: Field<CompactionConfig>[] = [\n     info: <>Total number of rows in segments waiting for being pushed.</>,\n   },\n   // partitionsSpec type: hashed\n+  {\n+    name: 'tuningConfig.partitionsSpec.targetRowsPerSegment',\n+    label: 'Target rows per segment',\n+    type: 'number',\n+    defined: (t: CompactionConfig) =>\n+      deepGet(t, 'tuningConfig.partitionsSpec.type') === 'hashed' &&\n+      !deepGet(t, 'tuningConfig.partitionsSpec.numShards'),\n+    info: (\n+      <p>\n+        If you have skewed data, you may want to set this field to generate evenly sized segments.\n+        <br />\n+        <br /> A target row count for each partition. Each partition will have a row count close to\n+        the target assuming evenly distributed keys. Defaults to 5 million if numShards is null.\n+      </p>\n+    ),\n+  },\n   {\n     name: 'tuningConfig.partitionsSpec.numShards',\n     label: 'Num shards',\n     type: 'number',\n-    defined: (t: CompactionConfig) => deepGet(t, 'tuningConfig.partitionsSpec.type') === 'hashed',\n+    defined: (t: CompactionConfig) =>\n+      deepGet(t, 'tuningConfig.partitionsSpec.type') === 'hashed' &&\n+      !deepGet(t, 'tuningConfig.partitionsSpec.targetRowsPerSegment'),\n     info: (\n-      <>\n+      <p>\n+        If you know the optimal number of shards and want to speed up the time it takes for\n+        compaction to run, set this field.\n+        <br />", "originalCommit": "a03d20352bad4b70ae4cc1e7c7751bd568620593", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg1MTk1Mw==", "url": "https://github.com/apache/druid/pull/10500#discussion_r502851953", "bodyText": "Done", "author": "suneet-s", "createdAt": "2020-10-11T01:29:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjU2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODUzNA==", "url": "https://github.com/apache/druid/pull/10500#discussion_r502818534", "bodyText": "Does this mean that either numShards should be set or targetRowsPerSegment? What is their relationship exactly? Does one have to be set? What if both are set? I am asking because it looks like there might need some validation logic?", "author": "vogievetsky", "createdAt": "2020-10-10T18:30:51Z", "path": "web-console/src/utils/ingestion-spec.tsx", "diffHunk": "@@ -2181,17 +2181,41 @@ export function getPartitionRelatedTuningSpecFormFields(\n           info: <>Total number of rows in segments waiting for being pushed.</>,\n         },\n         // partitionsSpec type: hashed\n+        {\n+          name: 'partitionsSpec.targetRowsPerSegment',\n+          label: 'Target rows per segment',\n+          type: 'number',\n+          defined: (t: TuningConfig) =>\n+            deepGet(t, 'partitionsSpec.type') === 'hashed' &&\n+            !deepGet(t, 'partitionsSpec.numShards'),\n+          info: (\n+            <p>\n+              If you have skewed data, you may want to set this field to generate evenly sized\n+              segments.\n+              <br />\n+              <br /> A target row count for each partition. Each partition will have a row count\n+              close to the target assuming evenly distributed keys. Defaults to 5 million if\n+              numShards is null.\n+            </p>\n+          ),\n+        },\n         {\n           name: 'partitionsSpec.numShards',\n           label: 'Num shards',\n           type: 'number',\n-          defined: (t: TuningConfig) => deepGet(t, 'partitionsSpec.type') === 'hashed',\n+          defined: (t: TuningConfig) =>\n+            deepGet(t, 'partitionsSpec.type') === 'hashed' &&\n+            !deepGet(t, 'partitionsSpec.targetRowsPerSegment'),", "originalCommit": "a03d20352bad4b70ae4cc1e7c7751bd568620593", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzOTc0MQ==", "url": "https://github.com/apache/druid/pull/10500#discussion_r502839741", "bodyText": "That's right, at most one is needed. If both are set, the backend will reject the spec. I forgot to add the validation logic. Will add in the next patch", "author": "suneet-s", "createdAt": "2020-10-10T22:37:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODUzNA=="}], "type": "inlineReview"}, {"oid": "275ad8e890bc73c451f7a8a51bafe53e4087793b", "url": "https://github.com/apache/druid/commit/275ad8e890bc73c451f7a8a51bafe53e4087793b", "message": "code review", "committedDate": "2020-10-11T01:52:16Z", "type": "commit"}, {"oid": "4de618c42925fa3d53ec6925fe85c4ccf4c13984", "url": "https://github.com/apache/druid/commit/4de618c42925fa3d53ec6925fe85c4ccf4c13984", "message": "update test snapshots", "committedDate": "2020-10-11T02:11:47Z", "type": "commit"}, {"oid": "d8fd80a8fd4e7424bfbb7eab28788c5c92190517", "url": "https://github.com/apache/druid/commit/d8fd80a8fd4e7424bfbb7eab28788c5c92190517", "message": "oops", "committedDate": "2020-10-11T14:31:33Z", "type": "commit"}]}