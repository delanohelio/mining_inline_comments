{"pr_number": 1551, "pr_title": "Fix regression in ./gradlew idea introduced in baseline 3.51.0", "pr_createdAt": "2020-11-17T17:06:39Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1551", "timeline": [{"oid": "cb92fa5614c2d920c946fc1a7118bb7312eb1b46", "url": "https://github.com/palantir/gradle-baseline/commit/cb92fa5614c2d920c946fc1a7118bb7312eb1b46", "message": "Fix BaselineIdea accessing the checkstyle version", "committedDate": "2020-11-17T16:35:15Z", "type": "commit"}, {"oid": "2ca508bb8d43e62c33eb55cd3b78e2dc323dc9cf", "url": "https://github.com/palantir/gradle-baseline/commit/2ca508bb8d43e62c33eb55cd3b78e2dc323dc9cf", "message": "Give it a test", "committedDate": "2020-11-17T17:03:42Z", "type": "commit"}, {"oid": "8fa1594dde4e9a777d9f7e72fee5c4bfd137e8ec", "url": "https://github.com/palantir/gradle-baseline/commit/8fa1594dde4e9a777d9f7e72fee5c4bfd137e8ec", "message": "Add generated changelog entries", "committedDate": "2020-11-17T17:03:42Z", "type": "commit"}, {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "url": "https://github.com/palantir/gradle-baseline/commit/aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "message": "Add generated changelog entries", "committedDate": "2020-11-17T17:03:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNDc3OQ==", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525334779", "bodyText": "Nice, I'm actually surprised we got this far without this test.", "author": "CRogers", "createdAt": "2020-11-17T17:08:54Z", "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/BaselineIdeaIntegrationTest.groovy", "diffHunk": "@@ -49,7 +49,23 @@ class BaselineIdeaIntegrationTest extends AbstractPluginTest {\n         buildFile << standardBuildFile\n \n         then:\n-        with('idea').build()\n+        BuildResult result = with('idea').build()\n+        assert result.task(':idea').outcome == TaskOutcome.SUCCESS ?: result.output\n+    }\n+\n+    def 'Works with checkstyle and IntelliJ import'() {\n+        when:\n+        buildFile << standardBuildFile\n+        buildFile << \"\"\" \n+        allprojects { \n+            apply plugin: 'com.palantir.baseline-checkstyle'\n+        }\n+        \"\"\"\n+\n+        then:\n+        BuildResult result = with('idea', '-Didea.active=true', '-is').build()\n+        assert file(\".idea/checkstyle-idea.xml\").exists() ?: result.output\n+        assert result.task(':idea').outcome == TaskOutcome.SUCCESS ?: result.output", "originalCommit": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNDkzMA==", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525334930", "bodyText": "a lot of these changes were motivated by @CompileStatic, but I couldn't fully lock it in because of all our xml manipulation. Figured it was better to just get closer \ud83e\udd37", "author": "iamdanfox", "createdAt": "2020-11-17T17:09:08Z", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -179,14 +182,14 @@ class BaselineIdea extends AbstractBaselinePlugin {\n     /**\n      * Extracts copyright headers from Baseline directory and adds them to Idea project XML node.\n      */\n-    private void addCopyright(node) {\n-        def copyrightManager = node.component.find { it.'@name' == 'CopyrightManager' }\n+    private void addCopyright(Node node) {\n+        Node copyrightManager = node.component.find {it.'@name' == 'CopyrightManager'}", "originalCommit": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTAyOA==", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525335028", "bodyText": "One of my fav idea features.", "author": "CRogers", "createdAt": "2020-11-17T17:09:17Z", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -345,6 +351,7 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             return\n         }\n \n+        // language=xml", "originalCommit": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTY2NQ==", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525335665", "bodyText": "TIL!", "author": "carterkozak", "createdAt": "2020-11-17T17:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTcxMw==", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525335713", "bodyText": "these whitespace changes are intellij helpfully reformatting things. Given that we don't have a palantir-groovy-format (\ud83d\ude02), I couldn't be bothered to revert em all piece by piece", "author": "iamdanfox", "createdAt": "2020-11-17T17:10:15Z", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -179,14 +182,14 @@ class BaselineIdea extends AbstractBaselinePlugin {\n     /**\n      * Extracts copyright headers from Baseline directory and adds them to Idea project XML node.\n      */\n-    private void addCopyright(node) {\n-        def copyrightManager = node.component.find { it.'@name' == 'CopyrightManager' }\n+    private void addCopyright(Node node) {\n+        Node copyrightManager = node.component.find {it.'@name' == 'CopyrightManager'}\n         def copyrightDir = Paths.get(\"${configDir}/copyright/\")\n         def copyrightFiles = getCopyrightFiles(copyrightDir)\n-        copyrightFiles.each { File file ->\n+        copyrightFiles.each {File file ->", "originalCommit": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNjc3MQ==", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525336771", "bodyText": "i stumbled across this trick further down this file, turns out IntelliJ can give you language-specific code highlighting for snippets!!!", "author": "iamdanfox", "createdAt": "2020-11-17T17:11:42Z", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -353,6 +360,7 @@ class BaselineIdea extends AbstractBaselinePlugin {\n     }\n \n     private static void addInspectionProjectProfile(node) {\n+        // language=xml", "originalCommit": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNzIwNg==", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525337206", "bodyText": "this assertion would always pass. the result contained an outcome of either success/fail, but we never checked it. \ud83e\udd26", "author": "iamdanfox", "createdAt": "2020-11-17T17:12:20Z", "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/BaselineIdeaIntegrationTest.groovy", "diffHunk": "@@ -49,7 +49,23 @@ class BaselineIdeaIntegrationTest extends AbstractPluginTest {\n         buildFile << standardBuildFile\n \n         then:\n-        with('idea').build()", "originalCommit": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}