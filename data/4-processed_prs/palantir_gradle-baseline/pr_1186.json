{"pr_number": 1186, "pr_title": "fix #894: Error Prone UnnecessaryLambdaArgumentParentheses", "pr_createdAt": "2020-01-23T16:24:13Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1186", "timeline": [{"oid": "179095c77246401a694fb89841447afdf4825db2", "url": "https://github.com/palantir/gradle-baseline/commit/179095c77246401a694fb89841447afdf4825db2", "message": "fix #894: Error Prone UnnecessaryLambdaArgumentParentheses\n\nLambdas with a single parameter do not require argument parentheses.\n\n```diff\n- (value) -> value != null\n+ value -> value != null\n```", "committedDate": "2020-01-23T16:18:45Z", "type": "commit"}, {"oid": "7da02dfe4eba0e72d10492643f16d805236da9c3", "url": "https://github.com/palantir/gradle-baseline/commit/7da02dfe4eba0e72d10492643f16d805236da9c3", "message": "Add generated changelog entries", "committedDate": "2020-01-23T16:18:45Z", "type": "commit"}, {"oid": "8a1e882a1fc0a194a6d9b97b3184b0523510c418", "url": "https://github.com/palantir/gradle-baseline/commit/8a1e882a1fc0a194a6d9b97b3184b0523510c418", "message": "Ignore arguments with explicit types", "committedDate": "2020-01-23T16:51:49Z", "type": "commit"}, {"oid": "1a6c18d6d8801f3f13a9242271726122516b1494", "url": "https://github.com/palantir/gradle-baseline/commit/1a6c18d6d8801f3f13a9242271726122516b1494", "message": "Merge branch 'ckozak/UnnecessaryLambdaArgumentParentheses' of github.com:palantir/gradle-baseline into ckozak/UnnecessaryLambdaArgumentParentheses", "committedDate": "2020-01-23T16:52:26Z", "type": "commit"}, {"oid": "f9a6e85ab17611b6febcf0f0a113eb31e42a4e59", "url": "https://github.com/palantir/gradle-baseline/commit/f9a6e85ab17611b6febcf0f0a113eb31e42a4e59", "message": "replace checkstyle", "committedDate": "2020-01-23T17:12:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0OTg5Ng==", "url": "https://github.com/palantir/gradle-baseline/pull/1186#discussion_r370249896", "bodyText": "I think we should go with error since checkstyle previous enforced this", "author": "ferozco", "createdAt": "2020-01-23T17:18:15Z", "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/UnnecessaryLambdaArgumentParentheses.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.util.ErrorProneToken;\n+import com.sun.source.tree.LambdaExpressionTree;\n+import com.sun.tools.javac.parser.Tokens;\n+import com.sun.tools.javac.tree.JCTree;\n+import java.util.List;\n+\n+/**\n+ * UnnecessaryLambdaArgumentParentheses provides similar functionality to the upstream UnnecessaryParentheses, but\n+ * specifically for single-parameter lambda arguments which are not covered by the existing check. Perhaps this can be\n+ * contributed upstream. There's an argument against combining the two because parentheses around lambda arguments\n+ * cannot be parsed directly from the AST where other parenthesis checked by UnnecessaryParentheses can.\n+ */\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"UnnecessaryLambdaArgumentParentheses\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.WARNING,", "originalCommit": "f9a6e85ab17611b6febcf0f0a113eb31e42a4e59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1NTM1Ng==", "url": "https://github.com/palantir/gradle-baseline/pull/1186#discussion_r370255356", "bodyText": "Most projects fail on WARNING -- iirc we tried using ERROR for the BracesRequired check but ran into issues (possibly with generated code).\nSince excavator will auto-fix anything in projects that don't fail on warnings, I don't think there's much risk.", "author": "carterkozak", "createdAt": "2020-01-23T17:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0OTg5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3MjQ5MA==", "url": "https://github.com/palantir/gradle-baseline/pull/1186#discussion_r370272490", "bodyText": "ok sure!", "author": "ferozco", "createdAt": "2020-01-23T18:05:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0OTg5Ng=="}], "type": "inlineReview"}]}