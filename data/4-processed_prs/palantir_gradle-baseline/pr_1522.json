{"pr_number": 1522, "pr_title": "Implement error-prone ObjectsHashCodeUnnecessaryVarargs migration", "pr_createdAt": "2020-10-22T15:36:45Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1522", "timeline": [{"oid": "0809f260f2550dfa221b397d1f681cffdbef3715", "url": "https://github.com/palantir/gradle-baseline/commit/0809f260f2550dfa221b397d1f681cffdbef3715", "message": "Implement error-prone ObjectsHashCodeUnnecessaryVarargs migration", "committedDate": "2020-10-22T15:34:13Z", "type": "commit"}, {"oid": "17d68f3110bbc206f7a2aa3863e67327211a6040", "url": "https://github.com/palantir/gradle-baseline/commit/17d68f3110bbc206f7a2aa3863e67327211a6040", "message": "Add generated changelog entries", "committedDate": "2020-10-22T15:34:13Z", "type": "commit"}, {"oid": "e264a56d73b2ff77f3f2fc64eed9682be710686d", "url": "https://github.com/palantir/gradle-baseline/commit/e264a56d73b2ff77f3f2fc64eed9682be710686d", "message": "expected", "committedDate": "2020-10-22T15:46:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyMjYyMg==", "url": "https://github.com/palantir/gradle-baseline/pull/1522#discussion_r510322622", "bodyText": "these are both a bit sketchy cases where compiler should have issued lint message warning: non-varargs call of varargs method with inexact argument type for last parameter;", "author": "schlosna", "createdAt": "2020-10-22T17:06:30Z", "path": "baseline-error-prone/src/test/java/com/palantir/baseline/errorprone/ObjectsHashCodeUnnecessaryVarargsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class ObjectsHashCodeUnnecessaryVarargsTest {\n+\n+    @Test\n+    public void test() {\n+        fix().addInputLines(\n+                        \"Test.java\",\n+                        \"import java.util.Objects;\",\n+                        \"public class Test {\",\n+                        \"  void f(Object a, Object[] b, String[] c) {\",\n+                        \"    Objects.hash(a);\",\n+                        \"    Objects.hash(a, a);\",\n+                        \"    Objects.hash(b);\",\n+                        \"    Objects.hash(c);\",", "originalCommit": "e264a56d73b2ff77f3f2fc64eed9682be710686d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyMzY0Mw==", "url": "https://github.com/palantir/gradle-baseline/pull/1522#discussion_r510323643", "bodyText": "Should Object[] be treated differently than other object type array such as String[] in this case? I'm a little worried this might be papering over some other potential issues where something should be using Arrays.hashCode directly on an array.", "author": "schlosna", "createdAt": "2020-10-22T17:08:12Z", "path": "baseline-error-prone/src/test/java/com/palantir/baseline/errorprone/ObjectsHashCodeUnnecessaryVarargsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class ObjectsHashCodeUnnecessaryVarargsTest {\n+\n+    @Test\n+    public void test() {\n+        fix().addInputLines(\n+                        \"Test.java\",\n+                        \"import java.util.Objects;\",\n+                        \"public class Test {\",\n+                        \"  void f(Object a, Object[] b, String[] c) {\",\n+                        \"    Objects.hash(a);\",\n+                        \"    Objects.hash(a, a);\",\n+                        \"    Objects.hash(b);\",\n+                        \"    Objects.hash(c);\",\n+                        \"  }\",\n+                        \"}\")\n+                .addOutputLines(\n+                        \"Test.java\",\n+                        \"import java.util.Objects;\",\n+                        \"public class Test {\",\n+                        \"  void f(Object a, Object[] b, String[] c) {\",\n+                        \"    Objects.hashCode(a);\",\n+                        \"    Objects.hash(a, a);\",\n+                        \"    Objects.hash(b);\",\n+                        \"    Objects.hashCode(c);\",", "originalCommit": "e264a56d73b2ff77f3f2fc64eed9682be710686d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM2NjgwNg==", "url": "https://github.com/palantir/gradle-baseline/pull/1522#discussion_r510366806", "bodyText": "Good call, I've updated the check to avoid arrays entirely.", "author": "carterkozak", "createdAt": "2020-10-22T18:20:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyMzY0Mw=="}], "type": "inlineReview"}, {"oid": "975db7260a641c5063e5eeaecd044c91741ff1ab", "url": "https://github.com/palantir/gradle-baseline/commit/975db7260a641c5063e5eeaecd044c91741ff1ab", "message": "avoid arrays", "committedDate": "2020-10-22T18:19:23Z", "type": "commit"}]}