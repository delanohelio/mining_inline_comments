{"pr_number": 1283, "pr_title": "Fix class uniqueness non-deterministic ordering", "pr_createdAt": "2020-03-03T17:04:20Z", "pr_url": "https://github.com/palantir/gradle-baseline/pull/1283", "timeline": [{"oid": "0218ab26f0231392381016714b237d767f4d25d9", "url": "https://github.com/palantir/gradle-baseline/commit/0218ab26f0231392381016714b237d767f4d25d9", "message": "Add generated changelog entries", "committedDate": "2020-03-03T16:59:23Z", "type": "commit"}, {"oid": "4d7d46e3b8d5e7a66d461e16e281c1d80cec571e", "url": "https://github.com/palantir/gradle-baseline/commit/4d7d46e3b8d5e7a66d461e16e281c1d80cec571e", "message": "Fix class uniqueness non-deterministic ordering", "committedDate": "2020-03-03T16:59:23Z", "type": "commit"}, {"oid": "5a618c7a1d6760f767cda7e8b3e39044c697b5f5", "url": "https://github.com/palantir/gradle-baseline/commit/5a618c7a1d6760f767cda7e8b3e39044c697b5f5", "message": "Add generated changelog entries", "committedDate": "2020-03-03T16:59:23Z", "type": "commit"}, {"oid": "316168e559c54afb47a4ca5a983f55a77207af39", "url": "https://github.com/palantir/gradle-baseline/commit/316168e559c54afb47a4ca5a983f55a77207af39", "message": "Fix imports", "committedDate": "2020-03-03T18:13:56Z", "type": "commit"}, {"oid": "bde6e134c05257ba1732f96e5f7c088a4bf9d905", "url": "https://github.com/palantir/gradle-baseline/commit/bde6e134c05257ba1732f96e5f7c088a4bf9d905", "message": "Merge branch 'callumr/fix-class-uniqueness-non-unique-order' of github.com:palantir/gradle-baseline into callumr/fix-class-uniqueness-non-unique-order", "committedDate": "2020-03-03T18:14:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIxNTE1NQ==", "url": "https://github.com/palantir/gradle-baseline/pull/1283#discussion_r387215155", "bodyText": "why not just put them in a sorted map?", "author": "dansanduleac", "createdAt": "2020-03-03T18:36:54Z", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/tasks/CheckClassUniquenessLockTask.java", "diffHunk": "@@ -92,25 +94,18 @@ public final void doIt() {\n                         return Optional.empty();\n                     }\n \n-                    StringBuilder stringBuilder = new StringBuilder();\n-                    // TODO(dfox): ensure we iterate through problemJars in a stable order\n-                    for (Set<ModuleVersionIdentifier> clashingJars : problemJars) {\n-                        stringBuilder\n-                                .append(clashingJars.stream()\n-                                        .map(mvi -> mvi.getGroup() + \":\" + mvi.getName())\n-                                        .sorted()\n-                                        .collect(Collectors.joining(\", \", \"[\", \"]\")))\n-                                .append('\\n');\n-\n-                        analyzer.getDifferingSharedClassesInProblemJars(clashingJars).stream()\n-                                .sorted()\n-                                .forEach(className -> {\n-                                    stringBuilder.append(\"  - \");\n-                                    stringBuilder.append(className);\n-                                    stringBuilder.append('\\n');\n-                                });\n-                    }\n-                    return Optional.of(stringBuilder.toString());\n+                    Map<String, String> clashingHeadersToClasses = problemJars.stream()\n+                            .collect(Collectors.toMap(\n+                                    this::clashingJarHeader, clashingJars -> clashingClasses(analyzer, clashingJars)));\n+\n+                    return Optional.of(clashingHeadersToClasses.entrySet().stream()\n+                            .sorted(Comparator.comparing(Map.Entry::getKey))\n+                            .flatMap(entry -> {\n+                                String clashingJarHeader = entry.getKey();\n+                                String clashingClasses = entry.getValue();\n+                                return Stream.of(clashingJarHeader, clashingClasses);\n+                            })\n+                            .collect(Collectors.joining(\"\\n\")));", "originalCommit": "bde6e134c05257ba1732f96e5f7c088a4bf9d905", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8a143e2d9aa159bee19958f205674ebc19b098fd", "url": "https://github.com/palantir/gradle-baseline/commit/8a143e2d9aa159bee19958f205674ebc19b098fd", "message": "sort directly via ImmutableSortedMap", "committedDate": "2020-03-04T12:29:48Z", "type": "commit"}, {"oid": "87c5747a183261415dfbf56253515f49152c6043", "url": "https://github.com/palantir/gradle-baseline/commit/87c5747a183261415dfbf56253515f49152c6043", "message": "use more sorted maps", "committedDate": "2020-03-04T12:32:38Z", "type": "commit"}]}