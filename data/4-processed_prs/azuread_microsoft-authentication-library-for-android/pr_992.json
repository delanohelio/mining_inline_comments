{"pr_number": 992, "pr_title": "SA-PCA: New overloads, javadoc cleanup", "pr_createdAt": "2020-04-02T00:12:48Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992", "timeline": [{"oid": "84eddfb925bf854d886d5516006d10752cecb965", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/84eddfb925bf854d886d5516006d10752cecb965", "message": "Removes @NonNull annotation from optional argument.\nTweaks some formatting.\nChanges 'nil' to 'null' in javadocs", "committedDate": "2020-04-01T23:41:20Z", "type": "commit"}, {"oid": "9ef6f3bce76e805b0a78d0a65cea1a8b75972b02", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/9ef6f3bce76e805b0a78d0a65cea1a8b75972b02", "message": "Adding new signIn + reauthorize method. Tidied up formatting,\nannotations, javadoc", "committedDate": "2020-04-07T01:10:06Z", "type": "commit"}, {"oid": "2bdd95d334ccc104450ba7e45249383bd28c7ea0", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2bdd95d334ccc104450ba7e45249383bd28c7ea0", "message": "Clarifying javadoc", "committedDate": "2020-04-07T01:13:44Z", "type": "commit"}, {"oid": "801496d2b2e27f194d118f98ff109973654fe949", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/801496d2b2e27f194d118f98ff109973654fe949", "message": "Update submodule", "committedDate": "2020-04-07T01:35:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4Njc0Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r404486746", "bodyText": "@shoatman I've added this to javadoc to clarify what the behavior of this method is", "author": "iambmelt", "createdAt": "2020-04-07T01:39:10Z", "path": "msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java", "diffHunk": "@@ -64,7 +63,11 @@\n     ICurrentAccountResult getCurrentAccount() throws InterruptedException, MsalException;\n \n     /**\n-     * Allows a user to sign in to your application with one of their accounts.\n+     * Allows a user to sign in to your application with one of their accounts. This method may only", "originalCommit": "2bdd95d334ccc104450ba7e45249383bd28c7ea0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4Njk0Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r404486942", "bodyText": "@shoatman I have introduced this overload for apps who wish to use SA-PCA, but also wish to specify a prompt for the \"first run\"", "author": "iambmelt", "createdAt": "2020-04-07T01:39:55Z", "path": "msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java", "diffHunk": "@@ -81,9 +84,65 @@\n      * @link AuthenticationCallback#onError(MsalException)}.\n      */\n     void signIn(@NonNull final Activity activity,\n-                @NonNull final String loginHint,\n+                @Nullable final String loginHint,\n                 @NonNull final String[] scopes,\n-                @NonNull final AuthenticationCallback callback);\n+                @NonNull final AuthenticationCallback callback\n+    );\n+\n+    /**\n+     * Allows a user to sign in to your application with one of their accounts. This method may only\n+     * be called once: once a user is signed in, they must first be signed out before another user\n+     * may sign in. If you wish to prompt the existing user for credentials use\n+     * {@link #reauthorize(Activity, String[], Prompt, AuthenticationCallback)} or\n+     * {@link #acquireToken(AcquireTokenParameters)}.\n+     * <p>\n+     * Note: The authority used to make the sign in request will be either the MSAL default: https://login.microsoftonline.com/common\n+     * or the default authority specified by you in your configuration\n+     *\n+     * @param activity  Non-null {@link Activity} that is used as the parent activity for launching the {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity}.\n+     * @param loginHint Optional. If provided, will be used as the query parameter sent for authenticating the user,\n+     *                  which will have the UPN pre-populated.\n+     * @param scopes    The non-null array of scopes to be consented to during sign in.\n+     *                  MSAL always sends the scopes 'openid profile offline_access'.  Do not include any of these scopes in the scope parameter.\n+     *                  The access token returned is for MS Graph and will allow you to query for additional information about the signed in account.\n+     * @param callback  {@link AuthenticationCallback} that is used to send the result back. The success result will be\n+     *                  sent back via {@link AuthenticationCallback#onSuccess(IAuthenticationResult)}.\n+     *                  Failure case will be sent back via {\n+     * @link AuthenticationCallback#onError(MsalException)}.\n+     */\n+    void signIn(@NonNull final Activity activity,", "originalCommit": "2bdd95d334ccc104450ba7e45249383bd28c7ea0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0OTU3NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r405049575", "bodyText": "I think that's fine... if we do this... if the second method actually required still?", "author": "shoatman", "createdAt": "2020-04-07T19:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4Njk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1NzQ0OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r405057448", "bodyText": "@shoatman Technically, the second method was never required since acquireToken(params) can do all the same things.... That said....\nI see this overload of signIn as having a different purpose from the _original signIn() and the newly added reauthorize() (soon to be renamed, signInAgain()\n\nsignIn without a prompt param will allow for SSO state pickup from the browser, if the user already has state\nsignIn with a prompt param allows the developer to tweak the prompt behavior for the first run, but just like the other signIn() method, also disalllows multiple invocations of signIn()\nsignInAgain() accepts no account at all, and can only be used once a user has already signed in -- it's purpose is only if you must reprompt the user for creds, as a banking app might upon relaunch", "author": "iambmelt", "createdAt": "2020-04-07T19:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4Njk0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4NzA3OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r404487079", "bodyText": "@shoatman And I introduced this new method for \"reauth\" -- hopefully this use of this is clearer", "author": "iambmelt", "createdAt": "2020-04-07T01:40:28Z", "path": "msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java", "diffHunk": "@@ -81,9 +84,65 @@\n      * @link AuthenticationCallback#onError(MsalException)}.\n      */\n     void signIn(@NonNull final Activity activity,\n-                @NonNull final String loginHint,\n+                @Nullable final String loginHint,\n                 @NonNull final String[] scopes,\n-                @NonNull final AuthenticationCallback callback);\n+                @NonNull final AuthenticationCallback callback\n+    );\n+\n+    /**\n+     * Allows a user to sign in to your application with one of their accounts. This method may only\n+     * be called once: once a user is signed in, they must first be signed out before another user\n+     * may sign in. If you wish to prompt the existing user for credentials use\n+     * {@link #reauthorize(Activity, String[], Prompt, AuthenticationCallback)} or\n+     * {@link #acquireToken(AcquireTokenParameters)}.\n+     * <p>\n+     * Note: The authority used to make the sign in request will be either the MSAL default: https://login.microsoftonline.com/common\n+     * or the default authority specified by you in your configuration\n+     *\n+     * @param activity  Non-null {@link Activity} that is used as the parent activity for launching the {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity}.\n+     * @param loginHint Optional. If provided, will be used as the query parameter sent for authenticating the user,\n+     *                  which will have the UPN pre-populated.\n+     * @param scopes    The non-null array of scopes to be consented to during sign in.\n+     *                  MSAL always sends the scopes 'openid profile offline_access'.  Do not include any of these scopes in the scope parameter.\n+     *                  The access token returned is for MS Graph and will allow you to query for additional information about the signed in account.\n+     * @param callback  {@link AuthenticationCallback} that is used to send the result back. The success result will be\n+     *                  sent back via {@link AuthenticationCallback#onSuccess(IAuthenticationResult)}.\n+     *                  Failure case will be sent back via {\n+     * @link AuthenticationCallback#onError(MsalException)}.\n+     */\n+    void signIn(@NonNull final Activity activity,\n+                @Nullable final String loginHint,\n+                @NonNull final String[] scopes,\n+                @Nullable final Prompt prompt,\n+                @NonNull final AuthenticationCallback callback\n+    );\n+\n+    /**\n+     * Reauthorizes the current account according to the supplied scopes and prompt behavior.\n+     * <p>\n+     * Note: The authority used to make the sign in request will be either the MSAL default:\n+     * https://login.microsoftonline.com/common or the default authority specified by you in your\n+     * configuration.\n+     *\n+     * @param activity Non-null {@link Activity} that is used as the parent activity for\n+     *                 launching the {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity}.\n+     * @param scopes   The non-null array of scopes to be consented to during sign in.\n+     *                 MSAL always sends the scopes 'openid profile offline_access'. Do\n+     *                 not include any of these scopes in the scope parameter. The access\n+     *                 token returned is for MS Graph and will allow you to query for\n+     *                 additional information about the signed in account.\n+     * @param prompt   Nullable. Indicates the type of user interaction that is required.\n+     *                 If no argument is supplied the default behavior will be used.\n+     * @param callback {@link AuthenticationCallback} that is used to send the result back.\n+     *                 The success result will be sent back via\n+     *                 {@link AuthenticationCallback#onSuccess(IAuthenticationResult)}.\n+     *                 Failure case will be sent back via {@link AuthenticationCallback#onError(MsalException)}.\n+     */\n+    void reauthorize(@NonNull final Activity activity,", "originalCommit": "2bdd95d334ccc104450ba7e45249383bd28c7ea0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA0OTI5NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r405049294", "bodyText": "I'm struggling with naming here.  I think updateSignIn?  or signInAgain or reauthenticate... i'm also wondering if we want...", "author": "shoatman", "createdAt": "2020-04-07T19:11:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4NzA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1MTY0OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r405051648", "bodyText": "I'll take signInAgain -- seems the most discoverable name since signIn() already exists", "author": "iambmelt", "createdAt": "2020-04-07T19:16:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4NzA3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyMDMwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r404520309", "bodyText": "Actually, I think INVALID_PARAMETER could be misleading. Let's create an opposite of MsalClientException.NO_CURRENT_ACCOUNT.\nMaybe ALREADY_SIGNED_IN?", "author": "rpdome", "createdAt": "2020-04-07T03:55:11Z", "path": "msal/src/main/java/com/microsoft/identity/client/SingleAccountPublicClientApplication.java", "diffHunk": "@@ -211,7 +247,71 @@ public void signIn(@NonNull final Activity activity,\n                 null // claimsRequest\n         );\n \n-        acquireTokenInternal(acquireTokenParameters, PublicApiId.SINGLE_ACCOUNT_PCA_SIGN_IN);\n+        acquireTokenInternal(acquireTokenParameters, SINGLE_ACCOUNT_PCA_SIGN_IN);\n+    }\n+\n+    @Override\n+    public void signIn(@NonNull final Activity activity,\n+                       @Nullable final String loginHint,\n+                       @NonNull final String[] scopes,\n+                       @Nullable final Prompt prompt,\n+                       @NonNull final AuthenticationCallback callback) {\n+        final IAccount persistedAccount = getPersistedCurrentAccount();\n+\n+        if (persistedAccount != null) {\n+            callback.onError(\n+                    new MsalClientException(\n+                            MsalClientException.INVALID_PARAMETER,", "originalCommit": "801496d2b2e27f194d118f98ff109973654fe949", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzMDUwNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r404930506", "bodyText": "+1", "author": "shahzaibj", "createdAt": "2020-04-07T16:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyMDMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1MjMxMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r405052313", "bodyText": "@rpdome @shahzaibj Just so we're clear, you are both suggesting a breaking change. (See current implementation of Single Account when an account already exists)\nDo you really want this change?", "author": "iambmelt", "createdAt": "2020-04-07T19:17:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyMDMwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1NTI4NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/992#discussion_r405055284", "bodyText": "We can keep it as is", "author": "shahzaibj", "createdAt": "2020-04-07T19:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyMDMwOQ=="}], "type": "inlineReview"}, {"oid": "3deb523159e3d00e4068aa3e1bafcf3ac397cdba", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/3deb523159e3d00e4068aa3e1bafcf3ac397cdba", "message": "Rename 'reauthorize' to 'signInAgain'", "committedDate": "2020-04-07T19:37:16Z", "type": "commit"}, {"oid": "c48eabd82a03eb28b5bdb57aca3d1974184cc044", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c48eabd82a03eb28b5bdb57aca3d1974184cc044", "message": "Update submodule", "committedDate": "2020-04-07T19:43:40Z", "type": "commit"}, {"oid": "f8ebfda989bc092d45751e2e03e5701f9dd809a3", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/f8ebfda989bc092d45751e2e03e5701f9dd809a3", "message": "Update submodule", "committedDate": "2020-04-07T20:03:18Z", "type": "commit"}]}