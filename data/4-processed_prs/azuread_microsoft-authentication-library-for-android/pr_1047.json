{"pr_number": 1047, "pr_title": "Add UI Tests in MSAL", "pr_createdAt": "2020-05-18T23:29:13Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047", "timeline": [{"oid": "136d829ee3791495d5244aad4707a7dbd414a46f", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/136d829ee3791495d5244aad4707a7dbd414a46f", "message": "Initial commit for msal automation app", "committedDate": "2020-01-07T04:27:40Z", "type": "commit"}, {"oid": "06ecf2ae60ba5ef2597766745143fa659048eb0a", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/06ecf2ae60ba5ef2597766745143fa659048eb0a", "message": "Merge branch 'dev' into shahzaibj/msal-automation-app", "committedDate": "2020-01-07T19:24:35Z", "type": "commit"}, {"oid": "81b6c998063bde9506042a7529dfe7d07bb5c01f", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/81b6c998063bde9506042a7529dfe7d07bb5c01f", "message": "Merge branch 'dev' into shahzaibj/msal-automation-app", "committedDate": "2020-01-08T23:26:12Z", "type": "commit"}, {"oid": "0a51c33478fb7a2f056e59316f1c2c19de4a1130", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/0a51c33478fb7a2f056e59316f1c2c19de4a1130", "message": "Updates to msal automation app", "committedDate": "2020-01-08T23:50:15Z", "type": "commit"}, {"oid": "c051737acde9b55671a33a8319a1ddcafeac5e15", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c051737acde9b55671a33a8319a1ddcafeac5e15", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-01-09T19:11:33Z", "type": "commit"}, {"oid": "79316163919a1335753d1708fc2b86e34d4b0bab", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/79316163919a1335753d1708fc2b86e34d4b0bab", "message": "Initial commit for ui autmation tests", "committedDate": "2020-01-14T18:31:34Z", "type": "commit"}, {"oid": "919baae78292c5b025cf823ac90d8ac1fb349dee", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/919baae78292c5b025cf823ac90d8ac1fb349dee", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-01-21T23:52:22Z", "type": "commit"}, {"oid": "ee4d4fff0853d2faa6806c9a516f61f16d326113", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/ee4d4fff0853d2faa6806c9a516f61f16d326113", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-01-27T22:14:49Z", "type": "commit"}, {"oid": "81fc210704028fc9dc26f8c12df153051e1f477b", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/81fc210704028fc9dc26f8c12df153051e1f477b", "message": "Updates to ui automation", "committedDate": "2020-01-28T01:25:08Z", "type": "commit"}, {"oid": "c886293b7972578f1a206499bc87164fb8bb91a8", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c886293b7972578f1a206499bc87164fb8bb91a8", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-01-28T21:49:29Z", "type": "commit"}, {"oid": "c98a845d14fc6069ea65979db608894692abd30d", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c98a845d14fc6069ea65979db608894692abd30d", "message": "Add more ui automator tests", "committedDate": "2020-02-01T01:53:35Z", "type": "commit"}, {"oid": "a2f6967caca90ed88f6a3ca5cd332a9ce79322fc", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a2f6967caca90ed88f6a3ca5cd332a9ce79322fc", "message": "Fix bugs in ui tests", "committedDate": "2020-02-02T22:11:53Z", "type": "commit"}, {"oid": "4dc87b13534849ea341b831371d8937103dbdaf1", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/4dc87b13534849ea341b831371d8937103dbdaf1", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-04-16T21:35:55Z", "type": "commit"}, {"oid": "b13225a3ad9e7142d19b16c4d0fb6f3d2cceb6c1", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/b13225a3ad9e7142d19b16c4d0fb6f3d2cceb6c1", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-04-22T22:59:10Z", "type": "commit"}, {"oid": "5dc64f2c3b1381575bba7a328e552f5cb27abef4", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/5dc64f2c3b1381575bba7a328e552f5cb27abef4", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-04-25T23:45:23Z", "type": "commit"}, {"oid": "28bcd851c0c66fc63d4a7e75cb321174fd07a95f", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/28bcd851c0c66fc63d4a7e75cb321174fd07a95f", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-05-05T22:44:06Z", "type": "commit"}, {"oid": "ae88e56b597800ee262a434a5ecab68a82eb8549", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/ae88e56b597800ee262a434a5ecab68a82eb8549", "message": "Add msal automated test, remove unused files", "committedDate": "2020-05-05T23:15:57Z", "type": "commit"}, {"oid": "2883395d24cf6b5030a5f020f435c50e7238a3f9", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2883395d24cf6b5030a5f020f435c50e7238a3f9", "message": "Automate msal us gov sov cloud test plan", "committedDate": "2020-05-07T01:07:07Z", "type": "commit"}, {"oid": "20c459b8f56da959a04962216fa5e08b9afa755f", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/20c459b8f56da959a04962216fa5e08b9afa755f", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-05-07T17:58:50Z", "type": "commit"}, {"oid": "9f0ea89ffbb82cb0f5ca36e804f9b055b6619596", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/9f0ea89ffbb82cb0f5ca36e804f9b055b6619596", "message": "Move ui test utilities to its own module", "committedDate": "2020-05-13T18:58:32Z", "type": "commit"}, {"oid": "2b0f0d41f265a9fe19b4d8c62dc5d3c981b16b98", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2b0f0d41f265a9fe19b4d8c62dc5d3c981b16b98", "message": "Add ui automator versions to versions.gradle", "committedDate": "2020-05-15T02:59:14Z", "type": "commit"}, {"oid": "c9741f341895120fed46c59475b3e9088c9cd038", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c9741f341895120fed46c59475b3e9088c9cd038", "message": "Add ui automation utilities to msal project", "committedDate": "2020-05-15T03:00:09Z", "type": "commit"}, {"oid": "fec6abba4f9990851288c4fc05ce6f2cae3d1394", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/fec6abba4f9990851288c4fc05ce6f2cae3d1394", "message": "Remove stale test code", "committedDate": "2020-05-15T03:00:41Z", "type": "commit"}, {"oid": "822623b1166636dd383355493559eb1db5bd7e12", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/822623b1166636dd383355493559eb1db5bd7e12", "message": "Remove stale code from setup", "committedDate": "2020-05-18T22:53:25Z", "type": "commit"}, {"oid": "d86db336ffc6947e284f7b1d2793f79b77328a1f", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/d86db336ffc6947e284f7b1d2793f79b77328a1f", "message": "Update submodule", "committedDate": "2020-05-18T22:57:26Z", "type": "commit"}, {"oid": "ec22cacf04c7d49fca2db122ff0cdfaf3b70b226", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/ec22cacf04c7d49fca2db122ff0cdfaf3b70b226", "message": "Rename packages", "committedDate": "2020-05-18T23:09:41Z", "type": "commit"}, {"oid": "0ca7058c2b5b81f391c7eb25eaf3887fb56e4f1a", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/0ca7058c2b5b81f391c7eb25eaf3887fb56e4f1a", "message": "Remove ignored tests", "committedDate": "2020-05-18T23:24:25Z", "type": "commit"}, {"oid": "1470e7a8e3b119d2ab2faa30f46367814c0082bf", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/1470e7a8e3b119d2ab2faa30f46367814c0082bf", "message": "Remove test application id; fix comment", "committedDate": "2020-05-18T23:51:45Z", "type": "commit"}, {"oid": "5eee1d0af38d3feff1bf273b94ac1f34a586ddba", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/5eee1d0af38d3feff1bf273b94ac1f34a586ddba", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-05-18T23:52:20Z", "type": "commit"}, {"oid": "e0bae079d1cd230dedb923576b53db709986f6b7", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/e0bae079d1cd230dedb923576b53db709986f6b7", "message": "Refactor test setup logic", "committedDate": "2020-05-19T01:01:00Z", "type": "commit"}, {"oid": "cdd6b43b783cacb23720da2b9ab314b14e920f41", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/cdd6b43b783cacb23720da2b9ab314b14e920f41", "message": "Add mising license", "committedDate": "2020-05-19T01:49:27Z", "type": "commit"}, {"oid": "72ee75ee64bd0437020ba02dc79cf25927f8d399", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/72ee75ee64bd0437020ba02dc79cf25927f8d399", "message": "Remove acquire token btn from automation app", "committedDate": "2020-05-19T01:51:54Z", "type": "commit"}, {"oid": "9ce86e2c3105f1aac233271e356171e4cbf4f586", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/9ce86e2c3105f1aac233271e356171e4cbf4f586", "message": "Remove redundant username variable", "committedDate": "2020-05-19T02:31:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzODc4Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r427638783", "bodyText": "This is probably not being used, and needs to be removed.", "author": "shahzaibj", "createdAt": "2020-05-19T22:34:55Z", "path": "msalautomationapp/build.gradle", "diffHunk": "@@ -0,0 +1,108 @@\n+apply plugin: 'com.android.application'\n+\n+android {\n+    signingConfigs {\n+        debug {\n+            storeFile file(\"./debug.keystore\")\n+            storePassword 'android'\n+            keyAlias 'androiddebugkey'\n+            keyPassword 'android'\n+        }\n+        release {\n+            storeFile file(\"./debug.keystore\")\n+            storePassword 'android'\n+            keyAlias 'androiddebugkey'\n+            keyPassword 'android'\n+        }\n+    }\n+\n+    compileSdkVersion rootProject.ext.compileSdkVersion\n+\n+    defaultConfig {\n+        applicationId \"com.msft.identity.client.sample\"\n+        minSdkVersion rootProject.ext.automationAppMinSDKVersion\n+        targetSdkVersion rootProject.ext.targetSdkVersion\n+        versionCode 1\n+        versionName \"1.0\"\n+\n+        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n+\n+        // The following argument makes the Android Test Orchestrator run its\n+        // \"pm clear\" command after each test invocation. This command ensures\n+        // that the app's state is completely cleared between tests.\n+        testInstrumentationRunnerArguments clearPackageData: 'true'\n+    }\n+\n+    testOptions {\n+        execution 'ANDROIDX_TEST_ORCHESTRATOR'\n+    }\n+\n+    buildTypes {\n+        release {\n+            debuggable true\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n+            signingConfig signingConfigs.release\n+        }\n+\n+        debug {\n+            multiDexKeepProguard file('proguard-multidex-rules.pro')\n+        }\n+    }\n+\n+    testBuildType = \"release\"\n+\n+    lintOptions {\n+        abortOnError false\n+    }\n+\n+    flavorDimensions \"main\"\n+\n+    productFlavors {\n+        local {\n+            applicationIdSuffix \".local\"\n+            versionNameSuffix \"-local\"\n+            resValue(\"string\", \"application_name\", \"msal-local\")\n+        }\n+        dist {\n+            // Keep .local because the redirect url we registered on the portal contains .local, not .dist\n+            applicationIdSuffix \".local\"\n+            versionNameSuffix \"-dist\"\n+            resValue(\"string\", \"application_name\", \"msal-dist\")\n+        }\n+    }\n+\n+    sourceSets {\n+        main {\n+            manifest.srcFile 'src/main/AndroidManifest.xml'\n+            java.srcDirs = ['src/main/java']\n+        }\n+\n+        androidTest {\n+            manifest.srcFile 'src/main/AndroidManifest.xml'\n+            res.srcDirs = ['src/main/res']\n+        }\n+    }\n+\n+}\n+\n+dependencies {\n+    // Compile Dependency\n+    localImplementation project(':msal')\n+    distImplementation 'com.microsoft.identity.client:msal:1.5.0'\n+    implementation \"androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayoutVersion\"\n+    implementation \"com.google.code.gson:gson:$rootProject.ext.gsonVersion\"\n+    implementation \"androidx.appcompat:appcompat:$rootProject.ext.appCompatVersion\"\n+    implementation \"androidx.legacy:legacy-support-v4:$rootProject.ext.legacySupportV4Version\"\n+    implementation \"com.google.android.material:material:$rootProject.ext.materialVersion\"\n+    androidTestImplementation \"androidx.test:core:$rootProject.ext.androidxTestCoreVersion\"\n+    androidTestImplementation \"androidx.test.ext:junit:$rootProject.ext.androidxJunitVersion\"\n+    // Set this dependency to use JUnit 4 rules\n+    androidTestImplementation \"androidx.test:rules:$rootProject.rulesVersion\"\n+    androidTestImplementation \"org.mockito:mockito-android:$rootProject.ext.mockitoAndroidVersion\"", "originalCommit": "9ce86e2c3105f1aac233271e356171e4cbf4f586", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MjgyNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436862827", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzODc4Mw=="}], "type": "inlineReview"}, {"oid": "6d768ef8b59b2ccab75aaf35b296df578e8065a6", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/6d768ef8b59b2ccab75aaf35b296df578e8065a6", "message": "Disable test toast temporarily", "committedDate": "2020-05-26T16:43:00Z", "type": "commit"}, {"oid": "ac689b5d495947033f34cb51b8611c31030dfac7", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/ac689b5d495947033f34cb51b8611c31030dfac7", "message": "Update submodule", "committedDate": "2020-05-26T16:43:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NjM1MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436056351", "bodyText": "Don't forget to update android-complete ;)", "author": "iambmelt", "createdAt": "2020-06-05T17:18:43Z", "path": "gradle/versions.gradle", "diffHunk": "@@ -12,6 +12,9 @@ ext {\n     androidMavenGradlePluginVersion = \"1.4.1\"\n \n     // Libraries\n+    androidxTestRunnerVersion = \"1.2.0\"", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgzOTA1Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436839056", "bodyText": "Opened up a PR here: AzureAD/microsoft-authentication-library-common-for-android#911", "author": "shahzaibj", "createdAt": "2020-06-08T16:31:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NjM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NjkzMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436056932", "bodyText": "AcquireTokenAbstractTest or AbstractAcquireTokenTest?", "author": "iambmelt", "createdAt": "2020-06-05T17:19:44Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenAbstractTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import android.content.Context;\n+\n+import com.microsoft.identity.client.AuthenticationCallback;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.IAuthenticationResult;\n+import com.microsoft.identity.client.SilentAuthenticationCallback;\n+import com.microsoft.identity.client.exception.MsalException;\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.common.internal.util.StringUtil;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.AZURE_AUTHENTICATOR_APP_PACKAGE_NAME;\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.COMPANY_PORTAL_APP_PACKAGE_NAME;\n+import static junit.framework.Assert.fail;\n+\n+public abstract class AcquireTokenAbstractTest extends PublicClientApplicationAbstractTest implements IAcquireTokenTest {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MjkwNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436862904", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NjkzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzE4NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436057185", "bodyText": "public methods without javadoc", "author": "iambmelt", "createdAt": "2020-06-05T17:20:12Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenAbstractTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import android.content.Context;\n+\n+import com.microsoft.identity.client.AuthenticationCallback;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.IAuthenticationResult;\n+import com.microsoft.identity.client.SilentAuthenticationCallback;\n+import com.microsoft.identity.client.exception.MsalException;\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.common.internal.util.StringUtil;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.AZURE_AUTHENTICATOR_APP_PACKAGE_NAME;\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.COMPANY_PORTAL_APP_PACKAGE_NAME;\n+import static junit.framework.Assert.fail;\n+\n+public abstract class AcquireTokenAbstractTest extends PublicClientApplicationAbstractTest implements IAcquireTokenTest {\n+\n+    private static final String TAG = AcquireTokenAbstractTest.class.getSimpleName();\n+\n+    protected String[] mScopes;\n+    protected ITestBroker mBroker;\n+    protected IAccount mAccount;\n+    protected IApp mBrowser;\n+\n+    public IAccount getAccount() {\n+        return mAccount;\n+    }\n+\n+    @Before\n+    public void setup() {\n+        mScopes = getScopes();\n+        mBroker = getBroker();\n+        mBrowser = getBrowser();\n+\n+        // clear all cookies in the browser\n+        mBrowser.clear();\n+\n+        // remove existing authenticator and company portal apps\n+        AdbShellUtils.removePackage(AZURE_AUTHENTICATOR_APP_PACKAGE_NAME);\n+        AdbShellUtils.removePackage(COMPANY_PORTAL_APP_PACKAGE_NAME);\n+\n+        if (mBroker != null) {\n+            // do a fresh install of broker\n+            mBroker.install();\n+        }\n+\n+        super.setup();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        mAccount = null;\n+    }\n+\n+    public AuthenticationCallback successfulInteractiveCallback(final CountDownLatch latch, final Context context) {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2Mjk4Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436862986", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzIyNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436057227", "bodyText": "public methods without javadoc", "author": "iambmelt", "createdAt": "2020-06-05T17:20:17Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenAbstractTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import android.content.Context;\n+\n+import com.microsoft.identity.client.AuthenticationCallback;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.IAuthenticationResult;\n+import com.microsoft.identity.client.SilentAuthenticationCallback;\n+import com.microsoft.identity.client.exception.MsalException;\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.common.internal.util.StringUtil;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.AZURE_AUTHENTICATOR_APP_PACKAGE_NAME;\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.COMPANY_PORTAL_APP_PACKAGE_NAME;\n+import static junit.framework.Assert.fail;\n+\n+public abstract class AcquireTokenAbstractTest extends PublicClientApplicationAbstractTest implements IAcquireTokenTest {\n+\n+    private static final String TAG = AcquireTokenAbstractTest.class.getSimpleName();\n+\n+    protected String[] mScopes;\n+    protected ITestBroker mBroker;\n+    protected IAccount mAccount;\n+    protected IApp mBrowser;\n+\n+    public IAccount getAccount() {\n+        return mAccount;\n+    }\n+\n+    @Before\n+    public void setup() {\n+        mScopes = getScopes();\n+        mBroker = getBroker();\n+        mBrowser = getBrowser();\n+\n+        // clear all cookies in the browser\n+        mBrowser.clear();\n+\n+        // remove existing authenticator and company portal apps\n+        AdbShellUtils.removePackage(AZURE_AUTHENTICATOR_APP_PACKAGE_NAME);\n+        AdbShellUtils.removePackage(COMPANY_PORTAL_APP_PACKAGE_NAME);\n+\n+        if (mBroker != null) {\n+            // do a fresh install of broker\n+            mBroker.install();\n+        }\n+\n+        super.setup();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        mAccount = null;\n+    }\n+\n+    public AuthenticationCallback successfulInteractiveCallback(final CountDownLatch latch, final Context context) {\n+        AuthenticationCallback callback = new AuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                showMessageWithToast(authenticationResult.getAccessToken());\n+                Assert.assertFalse(StringUtil.isEmpty(authenticationResult.getAccessToken()));\n+                mAccount = authenticationResult.getAccount();\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                fail(exception.getMessage());\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onCancel() {\n+                fail(\"User cancelled flow\");\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+\n+    public SilentAuthenticationCallback successfulSilentCallback(final CountDownLatch latch, final Context context) {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MzAzOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436863039", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzIyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzI3MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436057271", "bodyText": "public methods without javadoc", "author": "iambmelt", "createdAt": "2020-06-05T17:20:23Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenAbstractTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import android.content.Context;\n+\n+import com.microsoft.identity.client.AuthenticationCallback;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.IAuthenticationResult;\n+import com.microsoft.identity.client.SilentAuthenticationCallback;\n+import com.microsoft.identity.client.exception.MsalException;\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.common.internal.util.StringUtil;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.AZURE_AUTHENTICATOR_APP_PACKAGE_NAME;\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.COMPANY_PORTAL_APP_PACKAGE_NAME;\n+import static junit.framework.Assert.fail;\n+\n+public abstract class AcquireTokenAbstractTest extends PublicClientApplicationAbstractTest implements IAcquireTokenTest {\n+\n+    private static final String TAG = AcquireTokenAbstractTest.class.getSimpleName();\n+\n+    protected String[] mScopes;\n+    protected ITestBroker mBroker;\n+    protected IAccount mAccount;\n+    protected IApp mBrowser;\n+\n+    public IAccount getAccount() {\n+        return mAccount;\n+    }\n+\n+    @Before\n+    public void setup() {\n+        mScopes = getScopes();\n+        mBroker = getBroker();\n+        mBrowser = getBrowser();\n+\n+        // clear all cookies in the browser\n+        mBrowser.clear();\n+\n+        // remove existing authenticator and company portal apps\n+        AdbShellUtils.removePackage(AZURE_AUTHENTICATOR_APP_PACKAGE_NAME);\n+        AdbShellUtils.removePackage(COMPANY_PORTAL_APP_PACKAGE_NAME);\n+\n+        if (mBroker != null) {\n+            // do a fresh install of broker\n+            mBroker.install();\n+        }\n+\n+        super.setup();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        mAccount = null;\n+    }\n+\n+    public AuthenticationCallback successfulInteractiveCallback(final CountDownLatch latch, final Context context) {\n+        AuthenticationCallback callback = new AuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                showMessageWithToast(authenticationResult.getAccessToken());\n+                Assert.assertFalse(StringUtil.isEmpty(authenticationResult.getAccessToken()));\n+                mAccount = authenticationResult.getAccount();\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                fail(exception.getMessage());\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onCancel() {\n+                fail(\"User cancelled flow\");\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+\n+    public SilentAuthenticationCallback successfulSilentCallback(final CountDownLatch latch, final Context context) {\n+        SilentAuthenticationCallback callback = new SilentAuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                showMessageWithToast(authenticationResult.getAccessToken());\n+                Assert.assertFalse(StringUtil.isEmpty(authenticationResult.getAccessToken()));\n+                mAccount = authenticationResult.getAccount();\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                fail(exception.getMessage());\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+    public AuthenticationCallback failureInteractiveCallback(final CountDownLatch latch, final String errorCode, final Context context) {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MzA4Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436863083", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzI3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzMwMg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436057302", "bodyText": "public methods without javadoc", "author": "iambmelt", "createdAt": "2020-06-05T17:20:27Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenAbstractTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import android.content.Context;\n+\n+import com.microsoft.identity.client.AuthenticationCallback;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.IAuthenticationResult;\n+import com.microsoft.identity.client.SilentAuthenticationCallback;\n+import com.microsoft.identity.client.exception.MsalException;\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.common.internal.util.StringUtil;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.AZURE_AUTHENTICATOR_APP_PACKAGE_NAME;\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.COMPANY_PORTAL_APP_PACKAGE_NAME;\n+import static junit.framework.Assert.fail;\n+\n+public abstract class AcquireTokenAbstractTest extends PublicClientApplicationAbstractTest implements IAcquireTokenTest {\n+\n+    private static final String TAG = AcquireTokenAbstractTest.class.getSimpleName();\n+\n+    protected String[] mScopes;\n+    protected ITestBroker mBroker;\n+    protected IAccount mAccount;\n+    protected IApp mBrowser;\n+\n+    public IAccount getAccount() {\n+        return mAccount;\n+    }\n+\n+    @Before\n+    public void setup() {\n+        mScopes = getScopes();\n+        mBroker = getBroker();\n+        mBrowser = getBrowser();\n+\n+        // clear all cookies in the browser\n+        mBrowser.clear();\n+\n+        // remove existing authenticator and company portal apps\n+        AdbShellUtils.removePackage(AZURE_AUTHENTICATOR_APP_PACKAGE_NAME);\n+        AdbShellUtils.removePackage(COMPANY_PORTAL_APP_PACKAGE_NAME);\n+\n+        if (mBroker != null) {\n+            // do a fresh install of broker\n+            mBroker.install();\n+        }\n+\n+        super.setup();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        mAccount = null;\n+    }\n+\n+    public AuthenticationCallback successfulInteractiveCallback(final CountDownLatch latch, final Context context) {\n+        AuthenticationCallback callback = new AuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                showMessageWithToast(authenticationResult.getAccessToken());\n+                Assert.assertFalse(StringUtil.isEmpty(authenticationResult.getAccessToken()));\n+                mAccount = authenticationResult.getAccount();\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                fail(exception.getMessage());\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onCancel() {\n+                fail(\"User cancelled flow\");\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+\n+    public SilentAuthenticationCallback successfulSilentCallback(final CountDownLatch latch, final Context context) {\n+        SilentAuthenticationCallback callback = new SilentAuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                showMessageWithToast(authenticationResult.getAccessToken());\n+                Assert.assertFalse(StringUtil.isEmpty(authenticationResult.getAccessToken()));\n+                mAccount = authenticationResult.getAccount();\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                fail(exception.getMessage());\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+    public AuthenticationCallback failureInteractiveCallback(final CountDownLatch latch, final String errorCode, final Context context) {\n+        AuthenticationCallback callback = new AuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                fail(\"Unexpected success\");\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                showMessageWithToast(exception.getErrorCode());\n+                Assert.assertEquals(errorCode, exception.getErrorCode());\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onCancel() {\n+                fail(\"User cancelled flow\");\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+    public SilentAuthenticationCallback failureSilentCallback(final CountDownLatch latch, final String errorCode, final Context context) {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MzE0NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436863144", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzMwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzM4Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436057386", "bodyText": "Can be removed?", "author": "iambmelt", "createdAt": "2020-06-05T17:20:37Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenAbstractTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import android.content.Context;\n+\n+import com.microsoft.identity.client.AuthenticationCallback;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.IAuthenticationResult;\n+import com.microsoft.identity.client.SilentAuthenticationCallback;\n+import com.microsoft.identity.client.exception.MsalException;\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.utils.AdbShellUtils;\n+import com.microsoft.identity.common.internal.util.StringUtil;\n+\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.AZURE_AUTHENTICATOR_APP_PACKAGE_NAME;\n+import static com.microsoft.identity.common.adal.internal.AuthenticationConstants.Broker.COMPANY_PORTAL_APP_PACKAGE_NAME;\n+import static junit.framework.Assert.fail;\n+\n+public abstract class AcquireTokenAbstractTest extends PublicClientApplicationAbstractTest implements IAcquireTokenTest {\n+\n+    private static final String TAG = AcquireTokenAbstractTest.class.getSimpleName();\n+\n+    protected String[] mScopes;\n+    protected ITestBroker mBroker;\n+    protected IAccount mAccount;\n+    protected IApp mBrowser;\n+\n+    public IAccount getAccount() {\n+        return mAccount;\n+    }\n+\n+    @Before\n+    public void setup() {\n+        mScopes = getScopes();\n+        mBroker = getBroker();\n+        mBrowser = getBrowser();\n+\n+        // clear all cookies in the browser\n+        mBrowser.clear();\n+\n+        // remove existing authenticator and company portal apps\n+        AdbShellUtils.removePackage(AZURE_AUTHENTICATOR_APP_PACKAGE_NAME);\n+        AdbShellUtils.removePackage(COMPANY_PORTAL_APP_PACKAGE_NAME);\n+\n+        if (mBroker != null) {\n+            // do a fresh install of broker\n+            mBroker.install();\n+        }\n+\n+        super.setup();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        mAccount = null;\n+    }\n+\n+    public AuthenticationCallback successfulInteractiveCallback(final CountDownLatch latch, final Context context) {\n+        AuthenticationCallback callback = new AuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                showMessageWithToast(authenticationResult.getAccessToken());\n+                Assert.assertFalse(StringUtil.isEmpty(authenticationResult.getAccessToken()));\n+                mAccount = authenticationResult.getAccount();\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                fail(exception.getMessage());\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onCancel() {\n+                fail(\"User cancelled flow\");\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+\n+    public SilentAuthenticationCallback successfulSilentCallback(final CountDownLatch latch, final Context context) {\n+        SilentAuthenticationCallback callback = new SilentAuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                showMessageWithToast(authenticationResult.getAccessToken());\n+                Assert.assertFalse(StringUtil.isEmpty(authenticationResult.getAccessToken()));\n+                mAccount = authenticationResult.getAccount();\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                fail(exception.getMessage());\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+    public AuthenticationCallback failureInteractiveCallback(final CountDownLatch latch, final String errorCode, final Context context) {\n+        AuthenticationCallback callback = new AuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                fail(\"Unexpected success\");\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                showMessageWithToast(exception.getErrorCode());\n+                Assert.assertEquals(errorCode, exception.getErrorCode());\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onCancel() {\n+                fail(\"User cancelled flow\");\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+    public SilentAuthenticationCallback failureSilentCallback(final CountDownLatch latch, final String errorCode, final Context context) {\n+        SilentAuthenticationCallback callback = new SilentAuthenticationCallback() {\n+            @Override\n+            public void onSuccess(IAuthenticationResult authenticationResult) {\n+                fail(\"Unexpected success\");\n+                latch.countDown();\n+            }\n+\n+            @Override\n+            public void onError(MsalException exception) {\n+                showMessageWithToast(exception.getErrorCode());\n+                Assert.assertSame(errorCode, exception.getErrorCode());\n+                latch.countDown();\n+            }\n+        };\n+\n+        return callback;\n+    }\n+\n+    private void showMessageWithToast(final String msg) {\n+        //todo find a better way to show toast (with delay). A toast on the screen hinders\n+        // UI Automator's ability to click on elements behind the toast.\n+//        new Handler(mActivity.getMainLooper()).post(new Runnable() {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MzIyNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436863227", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzM4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzY5Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436057692", "bodyText": "AcquireTokenNetworkAbstractTest or AbstractAcquireTokenNetworkTest?", "author": "iambmelt", "createdAt": "2020-06-05T17:21:12Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenNetworkAbstractTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.browser.BrowserChrome;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserHelper;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Before;\n+\n+public abstract class AcquireTokenNetworkAbstractTest extends AcquireTokenAbstractTest implements IAcquireTokenNetworkTest {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MzI5Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436863297", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1NzY5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1ODE0Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436058147", "bodyText": "Just confirming we don't need to declare a Runner here?", "author": "iambmelt", "createdAt": "2020-06-05T17:22:07Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/AcquireTokenNetworkAbstractTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.browser.BrowserChrome;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserHelper;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Before;\n+", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MzU2Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436863567", "bodyText": "No, we don't - the default AndroidJunitRunner will be used.", "author": "shahzaibj", "createdAt": "2020-06-08T17:12:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1ODE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1ODU3MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436058570", "bodyText": "Are these error codes surfaced by the automation app? Or values duplicated from MSAL? Javadoc or the class?", "author": "iambmelt", "createdAt": "2020-06-05T17:22:56Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/ErrorCodes.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+public class ErrorCodes {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2Mzk2MA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436863960", "bodyText": "Duplicated from MSAL. These errors are thrown by MSAL in error cases. Addressed by Javadoc", "author": "shahzaibj", "createdAt": "2020-06-08T17:12:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1ODU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1ODc3OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436058778", "bodyText": "Super nit: 1 extra line", "author": "iambmelt", "createdAt": "2020-06-05T17:23:22Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/IAcquireTokenNetworkTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+public interface IAcquireTokenNetworkTest extends IAcquireTokenTest {\n+\n+    LabUserQuery getLabUserQuery();\n+\n+    String getTempUserType();\n+\n+}\n+\n+", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NDAxNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436864014", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:13:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1ODc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1OTA1NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436059055", "bodyText": "Not a terribly confusing class, but javadoc nice if you think others would need/benefit", "author": "iambmelt", "createdAt": "2020-06-05T17:23:57Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/IAcquireTokenNetworkTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+public interface IAcquireTokenNetworkTest extends IAcquireTokenTest {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NDE2NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436864165", "bodyText": "Added javadoc", "author": "shahzaibj", "createdAt": "2020-06-08T17:13:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1OTA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1OTI1Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436059257", "bodyText": "Seems fairly foundational.... javadoc?", "author": "iambmelt", "createdAt": "2020-06-05T17:24:22Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/IAcquireTokenTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import com.microsoft.identity.client.ui.automation.app.IApp;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+\n+public interface IAcquireTokenTest {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NDI1Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436864253", "bodyText": "Added javadoc", "author": "shahzaibj", "createdAt": "2020-06-08T17:13:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1OTI1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2Mzg0NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436063845", "bodyText": "PublicClientApplicationAbstractTest or AbstractPublicClientApplicationTest?", "author": "iambmelt", "createdAt": "2020-06-05T17:32:59Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/PublicClientApplicationAbstractTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.rule.ActivityTestRule;\n+\n+import com.microsoft.identity.client.IPublicClientApplication;\n+import com.microsoft.identity.client.PublicClientApplication;\n+import com.microsoft.identity.client.exception.MsalException;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+\n+import static org.junit.Assert.fail;\n+\n+public abstract class PublicClientApplicationAbstractTest implements IPublicClientApplicationTest {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NDMxMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436864310", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:13:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2Mzg0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2NDM5NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436064394", "bodyText": "javadoc", "author": "iambmelt", "createdAt": "2020-06-05T17:33:27Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/interaction/InteractiveRequest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp.interaction;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.IPublicClientApplication;\n+\n+public class InteractiveRequest {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2NDM1OA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436864358", "bodyText": "Addressed", "author": "shahzaibj", "createdAt": "2020-06-08T17:13:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2NDM5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MDE2Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436070163", "bodyText": "This naming works....only as long as the ids don't change and we don't move out of ADO.....\nWould be perhaps to future-proof to include a description of the test rather than an id of a test elsewhere?", "author": "iambmelt", "createdAt": "2020-06-05T17:45:03Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase769049.java", "diffHunk": "@@ -0,0 +1,161 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.AcquireTokenNetworkAbstractTest;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.MicrosoftPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.concurrent.CountDownLatch;\n+\n+public class TestCase769049 extends AcquireTokenNetworkAbstractTest {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MDQzOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436070439", "bodyText": "(This feedback applies to multiple files, I'll just leave it here once)", "author": "iambmelt", "createdAt": "2020-06-05T17:45:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MDE2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NjU1NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436856554", "bodyText": "I'm inclined to leave these as is for now (at least while I'm working on them) as it makes it easy to search for these tests within Android Studio. There is quite a lot happening in some of these tests and hence the descriptions are long - for now I've left the names as is and added the descriptions as comments.", "author": "shahzaibj", "createdAt": "2020-06-08T17:01:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MDE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MDYyOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1047#discussion_r436070629", "bodyText": "Call out: I love how easy to read this test it", "author": "iambmelt", "createdAt": "2020-06-05T17:45:57Z", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase833516.java", "diffHunk": "@@ -0,0 +1,150 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import com.microsoft.identity.client.MultipleAccountPublicClientApplication;\n+import com.microsoft.identity.client.PublicClientApplication;\n+import com.microsoft.identity.client.SingleAccountPublicClientApplication;\n+import com.microsoft.identity.client.exception.MsalException;\n+import com.microsoft.identity.client.msal.automationapp.AcquireTokenNetworkAbstractTest;\n+import com.microsoft.identity.client.msal.automationapp.ErrorCodes;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.MicrosoftPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserHelper;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+public class TestCase833516 extends AcquireTokenNetworkAbstractTest {\n+\n+    @Test\n+    public void test_833516() throws MsalException, InterruptedException {", "originalCommit": "ac689b5d495947033f34cb51b8611c31030dfac7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "65a6198106f01676da35ef64baf87664c08b88b3", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/65a6198106f01676da35ef64baf87664c08b88b3", "message": "Address comments", "committedDate": "2020-06-08T03:40:09Z", "type": "commit"}, {"oid": "57ec738c85f2c1c97b8bce1d0e757bde81186268", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/57ec738c85f2c1c97b8bce1d0e757bde81186268", "message": "Add comments with test descriptions", "committedDate": "2020-06-08T16:18:14Z", "type": "commit"}, {"oid": "2d98305cfca3bcc5b724940a7c10f25c815ed5ef", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/2d98305cfca3bcc5b724940a7c10f25c815ed5ef", "message": "Merge branch 'dev' into shahzaibj/ui-automation", "committedDate": "2020-06-08T16:20:14Z", "type": "commit"}, {"oid": "f2fad92f1997a037e7285820176cfd0023950bf8", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/f2fad92f1997a037e7285820176cfd0023950bf8", "message": "Update submodule", "committedDate": "2020-06-08T16:20:51Z", "type": "commit"}, {"oid": "c3d0041856948a5c226856239452684d0beccd85", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/c3d0041856948a5c226856239452684d0beccd85", "message": "Remove mockito from automation test app deps", "committedDate": "2020-06-08T17:10:49Z", "type": "commit"}, {"oid": "a6a5fc4f670d3e1cf1bce80ec469a0f3ecded1b3", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/a6a5fc4f670d3e1cf1bce80ec469a0f3ecded1b3", "message": "Update submodule", "committedDate": "2020-06-08T17:58:42Z", "type": "commit"}, {"oid": "3bcdaf67dc2ca33c7ffaa2f51a31f259c31a1f39", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/commit/3bcdaf67dc2ca33c7ffaa2f51a31f259c31a1f39", "message": "Update submodule", "committedDate": "2020-06-08T19:50:17Z", "type": "commit"}]}