{"pr_number": 34, "pr_title": "Simplify RequestLineFrom", "pr_createdAt": "2020-02-11T13:51:30Z", "pr_url": "https://github.com/artipie/http/pull/34", "timeline": [{"oid": "1abc7faa28f2220b76887ea2a32cf5aa5b85f232", "url": "https://github.com/artipie/http/commit/1abc7faa28f2220b76887ea2a32cf5aa5b85f232", "message": "simplify RequestLineFrom", "committedDate": "2020-02-11T13:49:21Z", "type": "commit"}, {"oid": "da40eef3bcb3b42541b7cb995cc126176620f56d", "url": "https://github.com/artipie/http/commit/da40eef3bcb3b42541b7cb995cc126176620f56d", "message": "remove unused method methods", "committedDate": "2020-02-11T13:54:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc3ODU5MQ==", "url": "https://github.com/artipie/http/pull/34#discussion_r377778591", "bodyText": "@Sammers21 Keep the Text field", "author": "paulodamaso", "createdAt": "2020-02-11T17:16:39Z", "path": "src/main/java/com/artipie/http/rq/RequestLineFrom.java", "diffHunk": "@@ -50,61 +46,49 @@\n     /**\n      * HTTP request line.\n      */\n-    private final Text line;\n-\n-    /**\n-     * New reqiest line from string.\n-     * @param line Request line string\n-     */\n-    public RequestLineFrom(final String line) {\n-        this(new TextOf(line));\n-    }\n+    private final String line;", "originalCommit": "da40eef3bcb3b42541b7cb995cc126176620f56d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwMTA0OA==", "url": "https://github.com/artipie/http/pull/34#discussion_r377801048", "bodyText": "No. That makes things more complex for no reason.", "author": "Sammers21", "createdAt": "2020-02-11T17:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc3ODU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjQyNA==", "url": "https://github.com/artipie/http/pull/34#discussion_r377782424", "bodyText": "@Sammers21 Use cactoos decorators to trim and split the Text. And, if you want, you can get rid of this method and create constants for each piece of the information (METHOD = 0, URI = 1 and VERSION = 2) and you won't need to use this method", "author": "paulodamaso", "createdAt": "2020-02-11T17:23:13Z", "path": "src/main/java/com/artipie/http/rq/RequestLineFrom.java", "diffHunk": "@@ -50,61 +46,49 @@\n     /**\n      * HTTP request line.\n      */\n-    private final Text line;\n-\n-    /**\n-     * New reqiest line from string.\n-     * @param line Request line string\n-     */\n-    public RequestLineFrom(final String line) {\n-        this(new TextOf(line));\n-    }\n+    private final String line;\n \n     /**\n      * Primary ctor.\n      * @param line HTTP request line\n      */\n-    public RequestLineFrom(final Text line) {\n+    public RequestLineFrom(final String line) {\n         this.line = line;\n     }\n \n     /**\n      * Request method.\n      * @return Method name\n-     * @throws IOException In case of IO error\n      */\n-    public String method() throws IOException {\n+    public String method() {\n         return this.part(0);\n     }\n \n     /**\n      * Request URI.\n      * @return URI of the request\n-     * @throws IOException In case of IO error\n      */\n-    public URI uri() throws IOException {\n+    public URI uri() {\n         return URI.create(this.part(1));\n     }\n \n     /**\n      * HTTP version.\n      * @return HTTP version string\n-     * @throws IOException In case of IO error\n      */\n-    public String version() throws IOException {\n+    public String version() {\n         return this.part(2);\n     }\n \n     /**\n      * Part of request line.\n      * @param idx Part index\n      * @return Part string\n-     * @throws IOException In case of IO error\n      * @todo #12:30min Check idx value to avoid ArrayIndexOfBoundsException.\n      *  Valid HTTP request line must contains 3 parts which can be splitted by\n      *  whitespace char. If line doesn't contain 3 parts, let's throw an exception.\n      */\n-    private String part(final int idx) throws IOException {\n-        return new IoChecked<>(this.line::asString).value().trim().split(\"\\\\s\")[idx];\n+    private String part(final int idx) {", "originalCommit": "da40eef3bcb3b42541b7cb995cc126176620f56d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwMjEyNQ==", "url": "https://github.com/artipie/http/pull/34#discussion_r377802125", "bodyText": "I'm not using Text", "author": "Sammers21", "createdAt": "2020-02-11T17:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MjQyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4Mjc0NQ==", "url": "https://github.com/artipie/http/pull/34#discussion_r377782745", "bodyText": "@olegmoz Keep using Text", "author": "paulodamaso", "createdAt": "2020-02-11T17:23:43Z", "path": "src/main/java/com/artipie/http/rq/RequestLineFrom.java", "diffHunk": "@@ -50,61 +46,49 @@\n     /**\n      * HTTP request line.\n      */\n-    private final Text line;\n-\n-    /**\n-     * New reqiest line from string.\n-     * @param line Request line string\n-     */\n-    public RequestLineFrom(final String line) {\n-        this(new TextOf(line));\n-    }\n+    private final String line;\n \n     /**\n      * Primary ctor.\n      * @param line HTTP request line\n      */\n-    public RequestLineFrom(final Text line) {\n+    public RequestLineFrom(final String line) {", "originalCommit": "da40eef3bcb3b42541b7cb995cc126176620f56d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgwMjMxMg==", "url": "https://github.com/artipie/http/pull/34#discussion_r377802312", "bodyText": "No, the idea is to use String", "author": "Sammers21", "createdAt": "2020-02-11T17:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4Mjc0NQ=="}], "type": "inlineReview"}]}