{"pr_number": 12366, "pr_title": "Avoid loads ufs jars multiple times during journal formatting", "pr_createdAt": "2020-10-22T12:52:23Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12366", "timeline": [{"oid": "6fc1222a58feacc679a8f467260eff4fc0f9f147", "url": "https://github.com/Alluxio/alluxio/commit/6fc1222a58feacc679a8f467260eff4fc0f9f147", "message": "Avoid loads ufs jars multiple times during journal formatting", "committedDate": "2020-10-22T13:28:32Z", "type": "forcePushed"}, {"oid": "aed1c84e46d24cb2904bb16f9d7f1ef7e18e20da", "url": "https://github.com/Alluxio/alluxio/commit/aed1c84e46d24cb2904bb16f9d7f1ef7e18e20da", "message": "Avoid loads ufs jars multiple times during journal formatting", "committedDate": "2020-10-22T14:32:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0MjM0OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r530042349", "bodyText": "The root UFS is different from the journal UFS. If the UfsManager doesn't have it already, it should have a method for acquiring the journal UFS (to also use the journal conf, instead of the root ufs conf).\nYou can basically think of the journal UFS as a different mount point (separate from any other mount point), which is just for accessing the journal UFS.", "author": "gpang", "createdAt": "2020-11-25T01:05:28Z", "path": "core/server/common/src/main/java/alluxio/master/journal/ufs/UfsJournal.java", "diffHunk": "@@ -146,7 +146,8 @@ protected static UnderFileSystemConfiguration getJournalUfsConf() {\n    */\n   public UfsJournal(URI location, Master master, long quietPeriodMs,\n       Supplier<Set<JournalSink>> journalSinks) {\n-    this(location, master, UnderFileSystem.Factory.create(location.toString(), getJournalUfsConf()),\n+    this(location, master, master.getMasterContext().getUfsManager().getRoot().acquireUfsResource()", "originalCommit": "9ae1e175c96b710856ba4648d30022d2b9c10a12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUwNjg5Ng==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r532506896", "bodyText": "OK", "author": "maobaolong", "createdAt": "2020-11-30T10:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0MjM0OQ=="}], "type": "inlineReview"}, {"oid": "0cabf8c6b7243b74dc69be23accaaca082dd7582", "url": "https://github.com/Alluxio/alluxio/commit/0cabf8c6b7243b74dc69be23accaaca082dd7582", "message": "Avoid loads ufs jars multiple times during journal formatting", "committedDate": "2020-11-30T04:54:14Z", "type": "commit"}, {"oid": "f275b65929707ae026496bf82278dd656f84b18b", "url": "https://github.com/Alluxio/alluxio/commit/f275b65929707ae026496bf82278dd656f84b18b", "message": "Add a missing java doc for NoopUfsManager", "committedDate": "2020-11-30T04:54:14Z", "type": "commit"}, {"oid": "ec5815f65bf31ccd5a43f6d1508d9435d11bfce1", "url": "https://github.com/Alluxio/alluxio/commit/ec5815f65bf31ccd5a43f6d1508d9435d11bfce1", "message": "use journal mountpoint", "committedDate": "2020-11-30T04:54:14Z", "type": "commit"}, {"oid": "7314e42ebbba2a917ce00f6758034139353ad7fa", "url": "https://github.com/Alluxio/alluxio/commit/7314e42ebbba2a917ce00f6758034139353ad7fa", "message": "fix the style", "committedDate": "2020-11-30T04:54:14Z", "type": "commit"}, {"oid": "b0573c82f9f392c18e0dbc0e6667e7de402089d3", "url": "https://github.com/Alluxio/alluxio/commit/b0573c82f9f392c18e0dbc0e6667e7de402089d3", "message": "Add journal mountpoint", "committedDate": "2020-11-30T09:56:46Z", "type": "commit"}, {"oid": "b0573c82f9f392c18e0dbc0e6667e7de402089d3", "url": "https://github.com/Alluxio/alluxio/commit/b0573c82f9f392c18e0dbc0e6667e7de402089d3", "message": "Add journal mountpoint", "committedDate": "2020-11-30T09:56:46Z", "type": "forcePushed"}, {"oid": "163d57bbc5584cab16af55ad7f55f396fa05c81b", "url": "https://github.com/Alluxio/alluxio/commit/163d57bbc5584cab16af55ad7f55f396fa05c81b", "message": "fix style", "committedDate": "2020-11-30T10:36:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzMTI1MA==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r537831250", "bodyText": "I don't these parameters are necessary. The journal is a not actually a mount point. There is already a config prefix for the journal config: https://github.com/Alluxio/alluxio/blob/v2.4.1/core/common/src/main/java/alluxio/conf/PropertyKey.java#L1163", "author": "gpang", "createdAt": "2020-12-07T21:04:09Z", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -1241,6 +1241,45 @@ public String toString() {\n           .setScope(Scope.MASTER)\n           .build();\n \n+  //\n+  // Mount table journal related properties", "originalCommit": "163d57bbc5584cab16af55ad7f55f396fa05c81b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MTA4Nw==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r538981087", "bodyText": "Thanks for remind me, I've enlarge the access scope of the getJournalUfsConf  from protected to public and turn to use getJournalUfsConf  instead.", "author": "maobaolong", "createdAt": "2020-12-09T03:37:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzMTI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzMzM5MA==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r537833390", "bodyText": "Why is this change necessary?", "author": "gpang", "createdAt": "2020-12-07T21:07:41Z", "path": "tests/src/test/java/alluxio/client/hadoop/FileSystemRenameIntegrationTest.java", "diffHunk": "@@ -236,7 +236,7 @@ public void basicRenameTest7() throws Exception {\n     // Due to Hadoop 1 support we stick with the deprecated version. If we drop support for it\n     // FSDataOutputStream.hflush will be the new one.\n     //#ifdef HADOOP1\n-    o.sync();\n+//    o.sync();", "originalCommit": "163d57bbc5584cab16af55ad7f55f396fa05c81b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk3MzgxOA==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r538973818", "bodyText": "Sorry, it is an accident change, reverted it in last commit.", "author": "maobaolong", "createdAt": "2020-12-09T03:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzMzM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzNTM2OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r537835369", "bodyText": "Calling getJournalUfsConf(), or doing the same operations as that method (https://github.com/Alluxio/alluxio/blob/v2.4.1/core/server/common/src/main/java/alluxio/master/journal/ufs/UfsJournal.java#L131), is important. Is the new behavior equivalent to the previous call to getJournalUfsConf()?", "author": "gpang", "createdAt": "2020-12-07T21:10:59Z", "path": "core/server/common/src/main/java/alluxio/master/journal/ufs/UfsJournal.java", "diffHunk": "@@ -146,7 +146,9 @@ protected static UnderFileSystemConfiguration getJournalUfsConf() {\n    */\n   public UfsJournal(URI location, Master master, long quietPeriodMs,\n       Supplier<Set<JournalSink>> journalSinks) {\n-    this(location, master, UnderFileSystem.Factory.create(location.toString(), getJournalUfsConf()),", "originalCommit": "163d57bbc5584cab16af55ad7f55f396fa05c81b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMjQzNA==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r539032434", "bodyText": "Thanks for this suggestion, I'm doing the same operations getJournalUfsConf()  in the AbstractUfsManager#getJournal", "author": "maobaolong", "createdAt": "2020-12-09T06:01:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzNTM2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzOTAyOQ==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r537839029", "bodyText": "Does the NOOP one require this implementation?", "author": "gpang", "createdAt": "2020-12-07T21:17:04Z", "path": "core/server/common/src/main/java/alluxio/master/NoopUfsManager.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.master;\n+\n+import alluxio.conf.ServerConfiguration;\n+import alluxio.underfs.AbstractUfsManager;\n+import alluxio.underfs.UnderFileSystem;\n+import alluxio.util.network.NetworkAddressUtils;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Implementation of UfsManager that does nothing. This is useful for testing and\n+ * for situations where we don't want to start a real UfsManager,e.g. when formatting the journal.\n+ */\n+public class NoopUfsManager extends AbstractUfsManager {\n+\n+  @Override\n+  protected void connectUfs(UnderFileSystem fs) throws IOException {\n+    fs.connectFromMaster(", "originalCommit": "163d57bbc5584cab16af55ad7f55f396fa05c81b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk3MzIyMA==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r538973220", "bodyText": "No, removed it in last commit", "author": "maobaolong", "createdAt": "2020-12-09T03:14:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzOTAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MzQyMQ==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r537843421", "bodyText": "It looks like we are reusing the mounts to store the journal UFS as well. Can you document that in a comment somewhere? Maybe near the top of this class?", "author": "gpang", "createdAt": "2020-12-07T21:24:31Z", "path": "core/server/common/src/main/java/alluxio/underfs/AbstractUfsManager.java", "diffHunk": "@@ -209,6 +210,30 @@ public UfsClient getRoot() {\n     }\n   }\n \n+  @Override\n+  public UfsClient getJournal() {\n+    synchronized (this) {\n+      if (mJournalUfsClient == null) {\n+        String uri = ServerConfiguration.get(PropertyKey.MASTER_MOUNT_TABLE_JOURNAL_UFS);\n+        boolean readOnly =\n+            ServerConfiguration.getBoolean(PropertyKey.MASTER_MOUNT_TABLE_JOURNAL_READONLY);\n+        boolean shared = ServerConfiguration\n+            .getBoolean(PropertyKey.MASTER_MOUNT_TABLE_JOURNAL_SHARED);\n+        Map<String, String> conf =\n+            ServerConfiguration.getNestedProperties(PropertyKey.MASTER_MOUNT_TABLE_JOURNAL_OPTION);\n+        addMount(IdUtils.JOURNAL_MOUNT_ID, new AlluxioURI(uri),", "originalCommit": "163d57bbc5584cab16af55ad7f55f396fa05c81b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzNzkxOQ==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r539037919", "bodyText": "Done. added comments on the class java doc.", "author": "maobaolong", "createdAt": "2020-12-09T06:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MzQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0NDE3Mg==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r537844172", "bodyText": "NIT: I think this only applies to UFS journal, so maybe rename this toUFS_JOURNAL_MOUNT_ID, and add a comment that the journal ufs is stored as a special mount in the ufs manager.", "author": "gpang", "createdAt": "2020-12-07T21:25:46Z", "path": "core/common/src/main/java/alluxio/util/IdUtils.java", "diffHunk": "@@ -34,6 +34,7 @@\n   public static final long INVALID_WORKER_ID = -1;\n   public static final long INVALID_MOUNT_ID = -1;\n   public static final long ROOT_MOUNT_ID = 1;\n+  public static final long JOURNAL_MOUNT_ID = Long.MAX_VALUE - 10000;", "originalCommit": "163d57bbc5584cab16af55ad7f55f396fa05c81b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk3MzA2Mg==", "url": "https://github.com/Alluxio/alluxio/pull/12366#discussion_r538973062", "bodyText": "Done", "author": "maobaolong", "createdAt": "2020-12-09T03:13:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0NDE3Mg=="}], "type": "inlineReview"}, {"oid": "76ec18e42f854d0539f97a1b7622c5c29d254e93", "url": "https://github.com/Alluxio/alluxio/commit/76ec18e42f854d0539f97a1b7622c5c29d254e93", "message": "address comment", "committedDate": "2020-12-08T16:25:39Z", "type": "commit"}, {"oid": "cfa77fe6113b4b30064f01dac77896312fbcc587", "url": "https://github.com/Alluxio/alluxio/commit/cfa77fe6113b4b30064f01dac77896312fbcc587", "message": "address comments.", "committedDate": "2020-12-09T06:05:47Z", "type": "commit"}, {"oid": "9936552018908eea0c3e5eaed6c2735f77c07c40", "url": "https://github.com/Alluxio/alluxio/commit/9936552018908eea0c3e5eaed6c2735f77c07c40", "message": "address comments.", "committedDate": "2020-12-09T06:08:46Z", "type": "commit"}]}