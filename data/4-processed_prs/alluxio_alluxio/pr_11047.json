{"pr_number": 11047, "pr_title": "[DOCFIX] Update performance tuning docs", "pr_createdAt": "2020-02-27T21:36:49Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11047", "timeline": [{"oid": "ef5d9ac571d92e72eb0bfbee5d6351da05728f0d", "url": "https://github.com/Alluxio/alluxio/commit/ef5d9ac571d92e72eb0bfbee5d6351da05728f0d", "message": "[DOCFIX] Update performance tuning docs", "committedDate": "2020-02-27T21:35:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM4NzcxOQ==", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385387719", "bodyText": "to approximate twice in the same sentence sounds a little odd here. Can we try re-wording?", "author": "ZacBlanco", "createdAt": "2020-02-27T21:41:31Z", "path": "docs/en/operation/Performance-Tuning.md", "diffHunk": "@@ -195,7 +192,8 @@ There are 3 options for loading a missing path: `Never`, `Once`, `Always`.\n `ONCE` will use the default behavior of only scanning each directory once ever, and `NEVER` will never consult the UFS\n and thus prevent Alluxio from scanning for new files at all.\n \n-The Alluxio master maintains a cache to approximate which UFS paths have been previously loaded, to approximate the `Once` behavior.\n+The Alluxio master maintains a cache to approximate which UFS paths have been previously loaded,\n+to approximate the `Once` behavior.", "originalCommit": "ef5d9ac571d92e72eb0bfbee5d6351da05728f0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMzIxNA==", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385423214", "bodyText": "updated", "author": "gpang", "createdAt": "2020-02-27T23:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM4NzcxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MjcxNA==", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385392714", "bodyText": "\"...will be scanned for eligibility for persist\" sounds kind of odd.\nHow do you feel about: \"any files underneath the top-level directory will be considered for persistence\"\nor\n\"any files underneath the top-level directory will be considered for persist eligibility\"", "author": "ZacBlanco", "createdAt": "2020-02-27T21:52:21Z", "path": "docs/en/operation/Performance-Tuning.md", "diffHunk": "@@ -320,8 +318,8 @@ alluxio.master.persistence.blacklist=.staging,_temporary\n Files such as `/data/_temporary/part-00001`, `/data/temporary.staging` will not be considered for\n persist.\n This works because eventually these temporary files will be deleted or renamed to permanent files.\n-Because `alluxio.user.file.persist.on.rename=true` is set, the files will be considered for persist\n-again when renamed.\n+Because `alluxio.user.file.persist.on.rename=true` is set, the files will be considered for\n+persistence again when renamed.\n Note that persist on rename works for directories as well as files - if a top level directory is\n renamed with the persist on rename option, all its not yet persisted files will be scanned for\n-eligbility for persist.\n+eligibility for persist.", "originalCommit": "ef5d9ac571d92e72eb0bfbee5d6351da05728f0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMzI0OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385423249", "bodyText": "updated", "author": "gpang", "createdAt": "2020-02-27T23:08:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MjcxNA=="}], "type": "inlineReview"}, {"oid": "8010858255c346433052885472695f84022b6db5", "url": "https://github.com/Alluxio/alluxio/commit/8010858255c346433052885472695f84022b6db5", "message": "Update docs", "committedDate": "2020-02-27T23:07:46Z", "type": "commit"}]}