{"pr_number": 12636, "pr_title": "Add Metrics System Configurations to Helm Chart", "pr_createdAt": "2020-12-14T14:51:53Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12636", "timeline": [{"oid": "222549c4db12333d783cefa42b0334b44d0e5091", "url": "https://github.com/Alluxio/alluxio/commit/222549c4db12333d783cefa42b0334b44d0e5091", "message": "Adding Metrics System Configurations", "committedDate": "2020-12-14T14:49:09Z", "type": "commit"}, {"oid": "66c5b3a70bf43799be4bd6ce58c927c804909eb8", "url": "https://github.com/Alluxio/alluxio/commit/66c5b3a70bf43799be4bd6ce58c927c804909eb8", "message": "Fixing header for new ConfigMap", "committedDate": "2020-12-15T02:04:21Z", "type": "commit"}, {"oid": "2bcfae29aa8a6ee8227b2b7b6218476741ae9f56", "url": "https://github.com/Alluxio/alluxio/commit/2bcfae29aa8a6ee8227b2b7b6218476741ae9f56", "message": "Updated README", "committedDate": "2020-12-15T05:48:32Z", "type": "commit"}, {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "url": "https://github.com/Alluxio/alluxio/commit/3e95fe7d3e4d50868ffa64948755f9983f81978a", "message": "Updated values.yaml for fuse component", "committedDate": "2020-12-15T06:10:59Z", "type": "commit"}, {"oid": "c1767d8032a2e0fbbbe52c24f4d94174235b7b9b", "url": "https://github.com/Alluxio/alluxio/commit/c1767d8032a2e0fbbbe52c24f4d94174235b7b9b", "message": "Updated README", "committedDate": "2020-12-15T07:44:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDIyNA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543110224", "bodyText": "Pod Annotations for the FUSE pods?", "author": "jiacheliu3", "createdAt": "2020-12-15T07:34:21Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+\n+__journal values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `type` | Alluxio supports journal type of `UFS` and `EMBEDDED` | `UFS` |\n+| `ufsType` | `local` or `HDFS`. Ignored if type is `EMBEDDED` | `local` |\n+| `folder` | Master journal folder | `/journal` |\n+| `volumeType` | `volumeType` controls the type of journal volume. It can be `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | journal volume size | `1Gi` |\n+| `storageClass` | Attributes to use when the journal is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access mode for the journal volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the journal is emptyDir | `\"\"` |\n+| `format.runFormat` | Configuration for journal formatting job. Change to true to format journal | `false` |\n+\n+__metastore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `volumeType` | You can enable `metastore` to use ROCKS DB instead of Heap. `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Gi` |\n+| `mountPath` | Mount Path | `/metastore` |\n+| `storageClass` | Attributes to use when the `metastore` is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access Mode for Volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the `metastore` is `emptyDir` | `\"\"` |\n+\n+__tieredstore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `levels` | Tiered Storage | `[]` |\n+| `levels.level` | Level # starts from 0 | `0` |\n+| `levels.alias` | Alias name of tiered storage | `MEM` |\n+| `levels.mediumtype` | `MEM`, `HDD`, `SSD` | `MEM` |\n+| `levels.type` | `hostPath`, `emptyDir` or `persistentVolumeClaim` | `emptyDir` |\n+| `levels.path` | Mount Path for Volume | `/dev/shm` |\n+| `levels.quota` | Volume Size | `1G` |\n+| `levels.high` | Upper usage bound | `0.95` |\n+| `levels.low` | Lower usage bound | `0.7` |\n+\n+__shortCircuit values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `enabled` | Whether use short circuit or not | `true` |\n+| `policy` | The policy for short circuit can be `local` or `uuid` | `uuid` |\n+| `volumeType` | `volumeType` controls the type of `shortCircuit` volume. It can be `persistentVolumeClaim` or `hostPath` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Mi` |\n+| `pvcName` | Attributes to use if the domain socket volume is PVC | `alluxio-worker-domain-socket` |\n+| `accessModes` | Access Mode | `- ReadWriteOnce` |\n+| `storageClass` | Storage Class | `standard` |\n+| `hostPath` | Attributes to use if the domain socket volume is `hostPath`. The `hostPath` directory to use | `/tmp/alluxio-domain` |\n+\n+__fuse values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the fuse pod | `{}` |\n+| `image` | Docker image | `alluxio/alluxio-fuse` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `enabled` | Set to true to deploy FUSE | `false` |\n+| `clientEnabled` | Set to true to deploy FUSE | `false` |\n+| `properties` | Properties for the fuse component | `{}` |\n+| `jvmOptions` | JVM options specific to the fuse container | `[]` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `true` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `true` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirstWithHostNet` |\n+| `user` | Security Context for user | `0` |\n+| `group` | Security Context for group | `0` |\n+| `fsGroup` | Security Context for fsGroup | `0` |\n+| `args` | Arguments to Docker entrypoint | - fuse <br/> - --fuse-opts=allow_other |\n+| `mountPath` | Mount path in the host | `/mnt/alluxio-fuse` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `0.5` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzNDIzMA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543134230", "bodyText": "yes, I will fix it in the next commit.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:17:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDIyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTE0Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543111143", "bodyText": "Is this intended? We rarely use this separation line in our doc.", "author": "jiacheliu3", "createdAt": "2020-12-15T07:36:12Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzNTExMA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543135110", "bodyText": "Yes, it was intended, but I see there is no use of separation in README, so will remove it in the next commit.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTE0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTI4OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543111289", "bodyText": "This section is awesome, thanks a lot for adding it.", "author": "jiacheliu3", "createdAt": "2020-12-15T07:36:30Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMjg0Nw==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543112847", "bodyText": "Maybe EMBEDDED JOURNAL port is more descriptive", "author": "jiacheliu3", "createdAt": "2020-12-15T07:39:25Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzNjAyOA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543136028", "bodyText": "Yes, it is.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:20:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMjg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzY3Nw==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543113677", "bodyText": "Is there a use case where we want the same podAnnotations as the master pods? I'm not entirely sure about your use case what annotations you are putting in for the master/worker pods. But I assume the job master/job worker should have that too?", "author": "jiacheliu3", "createdAt": "2020-12-15T07:40:58Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzODU4OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543138589", "bodyText": "They are pod level annotations, and jobMaster and jobWorker are part of the pod as a container.\nI am using the below annotations for prometheus\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"19999\"\n        prometheus.io/path: \"/metrics/prometheus/\"", "author": "nirav-chotai", "createdAt": "2020-12-15T08:24:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzY3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0MTA5OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543141099", "bodyText": "Ah I see, in that case I guess maybe you could add some example usage in the values.yaml in comments?", "author": "jiacheliu3", "createdAt": "2020-12-15T08:28:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzY3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1MzI3Ng==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543153276", "bodyText": "Good idea, let me add this as an example.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzY3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzk4Mg==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543113982", "bodyText": "Same as job-master, should we have a podAnnotations here?", "author": "jiacheliu3", "createdAt": "2020-12-15T07:41:28Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzODk4OA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543138988", "bodyText": "podAnnotations are applied at pod level, not container level.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:25:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzk4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNTk5Ng==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543115996", "bodyText": "Maybe \"When metastore is enabled, Alluxio uses RocksDB to store metadata off heap. This controls what kind of volume to use for the off heap metastore. persistentVolumeClaim or emptyDir\"?", "author": "jiacheliu3", "createdAt": "2020-12-15T07:45:05Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+\n+__journal values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `type` | Alluxio supports journal type of `UFS` and `EMBEDDED` | `UFS` |\n+| `ufsType` | `local` or `HDFS`. Ignored if type is `EMBEDDED` | `local` |\n+| `folder` | Master journal folder | `/journal` |\n+| `volumeType` | `volumeType` controls the type of journal volume. It can be `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | journal volume size | `1Gi` |\n+| `storageClass` | Attributes to use when the journal is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access mode for the journal volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the journal is emptyDir | `\"\"` |\n+| `format.runFormat` | Configuration for journal formatting job. Change to true to format journal | `false` |\n+\n+__metastore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `volumeType` | You can enable `metastore` to use ROCKS DB instead of Heap. `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzOTYxOQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543139619", "bodyText": "Agreed, more descriptive.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNTk5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNjk1NA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543116954", "bodyText": "Could you please give me an example what this podAnnotations can be for Prometheus?", "author": "jiacheliu3", "createdAt": "2020-12-15T07:46:51Z", "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+\n+__journal values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `type` | Alluxio supports journal type of `UFS` and `EMBEDDED` | `UFS` |\n+| `ufsType` | `local` or `HDFS`. Ignored if type is `EMBEDDED` | `local` |\n+| `folder` | Master journal folder | `/journal` |\n+| `volumeType` | `volumeType` controls the type of journal volume. It can be `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | journal volume size | `1Gi` |\n+| `storageClass` | Attributes to use when the journal is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access mode for the journal volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the journal is emptyDir | `\"\"` |\n+| `format.runFormat` | Configuration for journal formatting job. Change to true to format journal | `false` |\n+\n+__metastore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `volumeType` | You can enable `metastore` to use ROCKS DB instead of Heap. `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Gi` |\n+| `mountPath` | Mount Path | `/metastore` |\n+| `storageClass` | Attributes to use when the `metastore` is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access Mode for Volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the `metastore` is `emptyDir` | `\"\"` |\n+\n+__tieredstore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `levels` | Tiered Storage | `[]` |\n+| `levels.level` | Level # starts from 0 | `0` |\n+| `levels.alias` | Alias name of tiered storage | `MEM` |\n+| `levels.mediumtype` | `MEM`, `HDD`, `SSD` | `MEM` |\n+| `levels.type` | `hostPath`, `emptyDir` or `persistentVolumeClaim` | `emptyDir` |\n+| `levels.path` | Mount Path for Volume | `/dev/shm` |\n+| `levels.quota` | Volume Size | `1G` |\n+| `levels.high` | Upper usage bound | `0.95` |\n+| `levels.low` | Lower usage bound | `0.7` |\n+\n+__shortCircuit values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `enabled` | Whether use short circuit or not | `true` |\n+| `policy` | The policy for short circuit can be `local` or `uuid` | `uuid` |\n+| `volumeType` | `volumeType` controls the type of `shortCircuit` volume. It can be `persistentVolumeClaim` or `hostPath` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Mi` |\n+| `pvcName` | Attributes to use if the domain socket volume is PVC | `alluxio-worker-domain-socket` |\n+| `accessModes` | Access Mode | `- ReadWriteOnce` |\n+| `storageClass` | Storage Class | `standard` |\n+| `hostPath` | Attributes to use if the domain socket volume is `hostPath`. The `hostPath` directory to use | `/tmp/alluxio-domain` |\n+\n+__fuse values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the fuse pod | `{}` |\n+| `image` | Docker image | `alluxio/alluxio-fuse` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `enabled` | Set to true to deploy FUSE | `false` |\n+| `clientEnabled` | Set to true to deploy FUSE | `false` |\n+| `properties` | Properties for the fuse component | `{}` |\n+| `jvmOptions` | JVM options specific to the fuse container | `[]` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `true` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `true` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirstWithHostNet` |\n+| `user` | Security Context for user | `0` |\n+| `group` | Security Context for group | `0` |\n+| `fsGroup` | Security Context for fsGroup | `0` |\n+| `args` | Arguments to Docker entrypoint | - fuse <br/> - --fuse-opts=allow_other |\n+| `mountPath` | Mount path in the host | `/mnt/alluxio-fuse` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `0.5` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__Metrics values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `enabled` | Enabling Alluxio Metrics | `false` |\n+| `ConsoleSink.enabled` | Enabling ConsoleSink | `false` |\n+| `ConsoleSink.period` | Poll period | `10` |\n+| `ConsoleSink.unit` | Unit of poll period | `seconds` |\n+| `CsvSink.enabled` | Enabling CsvSink | `false` |\n+| `CsvSink.period` | Poll period | `1` |\n+| `CsvSink.unit` | Unit of poll period | `seconds` |\n+| `CsvSink.directory` | Polling directory for CsvSink, ensure this directory exists! | `/tmp/alluxio-metrics` |\n+| `JmxSink.enabled` | Enabling JmxSink | `false` |\n+| `JmxSink.domain` | Jmx domain | `org.alluxio` |\n+| `GraphiteSink.enabled` | Enabling GraphiteSink | `false` |\n+| `GraphiteSink.host` | Hostname of Graphite server | `NONE` |\n+| `GraphiteSink.port` | Port of Graphite server | `NONE` |\n+| `GraphiteSink.period` | Poll period | `10` |\n+| `GraphiteSink.unit` | Unit of poll period | `seconds` |\n+| `GraphiteSink.prefix` | Prefix to prepend to metric name | `\"\"` |\n+| `Slf4jSink.enabled` | Enabling Slf4jSink | `false` |\n+| `Slf4jSink.period` | Poll period | `10` |\n+| `Slf4jSink.unit` | Unit of poll period | `seconds` |\n+| `Slf4jSink.filterClass` | Contains all metrics | `null` |\n+| `Slf4jSink.filterRegex` | Contains all metrics | `null` |\n+| `PrometheusMetricsServlet.enabled` | Enabling PrometheusMetricsServlet | `false` |\n+| `podAnnotations` | Pod Annotations for the Prometheus | `{}` |", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0MDUxNw==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543140517", "bodyText": "prometheus.io/path: /metrics/prometheus/\n              prometheus.io/port: 19999\n              prometheus.io/scrape: true\n\nI am using the above and it's working.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNjk1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNzQ3OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543117479", "bodyText": "nit: maybe this line can be removed", "author": "jiacheliu3", "createdAt": "2020-12-15T07:47:51Z", "path": "integration/kubernetes/helm-chart/alluxio/templates/config/alluxio-metrics.yaml", "diffHunk": "@@ -0,0 +1,69 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+\n+{{ if .Values.metrics.enabled -}}\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: {{ $fullName }}-metrics\n+  labels:\n+    name: {{ $fullName }}-metrics\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+data:\n+  metrics.properties: |-\n+", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExOTkyNQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543119925", "bodyText": "nit: If .Values.metrics.enabled=true but .Values.metrics.podAnnotations is removed, this will throw an error.\nI guess you need .Values.metrics.enabled=true and .Values.metrics.PrometheusMetricsServlet.enabled=true before creating this?", "author": "jiacheliu3", "createdAt": "2020-12-15T07:52:18Z", "path": "integration/kubernetes/helm-chart/alluxio/templates/master/statefulset.yaml", "diffHunk": "@@ -49,6 +49,15 @@ spec:\n         release: {{ .Release.Name }}\n         heritage: {{ .Release.Service }}\n         role: alluxio-master\n+    {{- if or .Values.master.podAnnotations .Values.metrics.enabled }}\n+      annotations:\n+      {{- with .Values.master.podAnnotations }}\n+        {{- toYaml . | nindent 8 }}\n+      {{- end }}\n+      {{- with .Values.metrics.podAnnotations }}", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NDczNw==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543144737", "bodyText": "It is there to add all the annotations specified in the master.podAnnotations as well as metrics.podAnnotations and as default values as {} provided it will not throw an error.", "author": "nirav-chotai", "createdAt": "2020-12-15T08:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExOTkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxODEzNA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543318134", "bodyText": "Does it make sense to have metrics.podAnnotations when Prometheus is not enabled? If yes then I'm good with this part.", "author": "jiacheliu3", "createdAt": "2020-12-15T12:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExOTkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzkxMTMyMg==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543911322", "bodyText": "I am not sure whether adding metadata via annotations will be useful for other metrics systems such as Graphite or Jmx hence keeping it when enabling metrics, given annotations will be applied to the pod. So that any other tool can use that metadata to automate the tasks.", "author": "nirav-chotai", "createdAt": "2020-12-16T04:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExOTkyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEyMTc4MA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543121780", "bodyText": "I think you can mention something like Add a table of keys and default values for the Helm templates in README", "author": "jiacheliu3", "createdAt": "2020-12-15T07:55:29Z", "path": "integration/kubernetes/helm-chart/alluxio/CHANGELOG.md", "diffHunk": "@@ -138,3 +138,7 @@\n 0.6.11\n \n - Pass alluxio.user.hostname via ALLUXIO_FUSE_JAVA_OPTS for FUSE\n+\n+0.6.12\n+\n+- Add Metrics configurations including Prometheus", "originalCommit": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NTI0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543145245", "bodyText": "Yes", "author": "nirav-chotai", "createdAt": "2020-12-15T08:34:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEyMTc4MA=="}], "type": "inlineReview"}, {"oid": "51039b81eca75bbbf50d33589f43818bf6553a45", "url": "https://github.com/Alluxio/alluxio/commit/51039b81eca75bbbf50d33589f43818bf6553a45", "message": "Fixed README and added item in the CHANGELOG", "committedDate": "2020-12-15T08:35:41Z", "type": "commit"}, {"oid": "700ae24386b20e11098ea309751df7347426730d", "url": "https://github.com/Alluxio/alluxio/commit/700ae24386b20e11098ea309751df7347426730d", "message": "Added annotation example", "committedDate": "2020-12-15T08:54:05Z", "type": "commit"}, {"oid": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe", "url": "https://github.com/Alluxio/alluxio/commit/bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe", "message": "Updated README", "committedDate": "2020-12-15T09:16:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzQyMA==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r544113420", "bodyText": "I tested manually and this path seems to be wrong. When you mount the configmap alluxio-metrics to this path, it will be a directory:\n[ec2-user@KubernetesSingleMasterLocal-masters-1 ~]$ kubectl exec -it alluxio-master-0 bash\nDefaulting container name to alluxio-master.\nUse 'kubectl describe pod/alluxio-master-0 -n default' to see all of the containers in this pod.\nbash-4.4$ cd /config\nbash-4.4$ ls -al -R\n.:\ntotal 0\ndrwxr-xr-x    3 root     root            32 Dec 16 08:38 .\ndrwxr-xr-x    1 root     root            65 Dec 16 08:38 ..\ndrwxrwsrwx    3 root     alluxio         85 Dec 16 08:38 metrics.properties\n./metrics.properties:\ntotal 0\ndrwxrwsrwx    3 root     alluxio         85 Dec 16 08:38 .\ndrwxr-xr-x    3 root     root            32 Dec 16 08:38 ..\ndrwxr-sr-x    2 root     alluxio         32 Dec 16 08:38 ..2020_12_16_08_38_53.343245412\nlrwxrwxrwx    1 root     root            31 Dec 16 08:38 ..data -> ..2020_12_16_08_38_53.343245412\nlrwxrwxrwx    1 root     root            25 Dec 16 08:38 metrics.properties -> ..data/metrics.properties\n./metrics.properties/..2020_12_16_08_38_53.343245412:\ntotal 4\ndrwxr-sr-x    2 root     alluxio         32 Dec 16 08:38 .\ndrwxrwsrwx    3 root     alluxio         85 Dec 16 08:38 ..\n-rw-r--r--    1 root     alluxio        507 Dec 16 08:38 metrics.properties\n\nTherefore, in order for this to work, this line should be {{- $metricsConfFile := \"-Dalluxio.metrics.conf.file=/config/metrics.properties/metrics.properties\" }}", "author": "jiacheliu3", "createdAt": "2020-12-16T08:44:54Z", "path": "integration/kubernetes/helm-chart/alluxio/templates/config/alluxio-conf.yaml", "diffHunk": "@@ -43,6 +43,10 @@\n {{- if .Values.jvmOptions }}\n   {{- $alluxioJavaOpts = concat $alluxioJavaOpts .Values.jvmOptions }}\n {{- end }}\n+{{- if .Values.metrics.enabled }}\n+  {{- $metricsConfFile := \"-Dalluxio.metrics.conf.file=/config/metrics.properties\" }}", "originalCommit": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDM5Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r544114393", "bodyText": "Could you change the configmap alluxio-metrics to be mounted to /config/metrics and make -Dalluxio.metrics.conf.file=/config/metrics/metrics.properties? Let's distinguish the directory name with the config file name.", "author": "jiacheliu3", "createdAt": "2020-12-16T08:46:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzQyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExOTQ4NQ==", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r544119485", "bodyText": "@jiacheliu3 , thanks for finding this out. Yes, totally make sense to differentiate the directory and then the config file name. This is fixed now.", "author": "nirav-chotai", "createdAt": "2020-12-16T08:54:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzQyMA=="}], "type": "inlineReview"}, {"oid": "4df1f0dc1b7b20af32064a93a2760c1a0bac11c2", "url": "https://github.com/Alluxio/alluxio/commit/4df1f0dc1b7b20af32064a93a2760c1a0bac11c2", "message": "Fixed mount path for metrics config", "committedDate": "2020-12-16T08:53:12Z", "type": "commit"}]}