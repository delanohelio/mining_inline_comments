{"pr_number": 10720, "pr_title": "Parallelize CompactDefinition", "pr_createdAt": "2020-01-09T20:33:27Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10720", "timeline": [{"oid": "210e2005955ab75267dfa9c2755e37f116dd3d83", "url": "https://github.com/Alluxio/alluxio/commit/210e2005955ab75267dfa9c2755e37f116dd3d83", "message": "parallelize compactdefinition", "committedDate": "2020-01-09T20:31:24Z", "type": "commit"}, {"oid": "2224b3927790d549c463d2284e946a3989e7f971", "url": "https://github.com/Alluxio/alluxio/commit/2224b3927790d549c463d2284e946a3989e7f971", "message": "fix syntax error", "committedDate": "2020-01-09T20:31:30Z", "type": "commit"}, {"oid": "7779ee4a03b314692cfd592066cfc3e85b508868", "url": "https://github.com/Alluxio/alluxio/commit/7779ee4a03b314692cfd592066cfc3e85b508868", "message": "turn constant into a variable", "committedDate": "2020-01-10T20:00:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMDk4MA==", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r366530980", "bodyText": "Is this \"job\" or \"task\"?", "author": "gpang", "createdAt": "2020-01-14T19:31:07Z", "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -44,6 +45,7 @@\n public final class CompactDefinition\n     extends AbstractVoidPlanDefinition<CompactConfig, ArrayList<CompactTask>> {\n   private static final Logger LOG = LoggerFactory.getLogger(CompactDefinition.class);\n+  private static final int JOBS_PER_WORKER = 10;", "originalCommit": "7779ee4a03b314692cfd592066cfc3e85b508868", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMjQ5OQ==", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r366532499", "bodyText": "can we add a simple unit test to see that selectExecutors() returns multiple tasks per host?", "author": "gpang", "createdAt": "2020-01-14T19:34:21Z", "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -111,7 +113,13 @@ private boolean shouldIgnore(URIStatus status) {\n \n     Set<Pair<WorkerInfo, ArrayList<CompactTask>>> result = Sets.newHashSet();\n     for (Map.Entry<WorkerInfo, ArrayList<CompactTask>> assignment : assignments.entrySet()) {\n-      result.add(new Pair<>(assignment.getKey(), assignment.getValue()));\n+      List<List<CompactTask>> partitioned = CommonUtils.partition(\n+          assignment.getValue(), JOBS_PER_WORKER);\n+      for (List<CompactTask> compactTasks : partitioned) {", "originalCommit": "7779ee4a03b314692cfd592066cfc3e85b508868", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a5ec14c46902f041fded35e5dc1da566d84579d5", "url": "https://github.com/Alluxio/alluxio/commit/a5ec14c46902f041fded35e5dc1da566d84579d5", "message": "work on test", "committedDate": "2020-01-14T22:51:48Z", "type": "commit"}, {"oid": "e78ca0f29ce527ba7f18b6d96a4dfd5f74609223", "url": "https://github.com/Alluxio/alluxio/commit/e78ca0f29ce527ba7f18b6d96a4dfd5f74609223", "message": "Add test for selectExecutors for Compact", "committedDate": "2020-01-14T23:47:08Z", "type": "commit"}, {"oid": "55ee6ea0f70cd303305b2c2d78c7296cc46e980c", "url": "https://github.com/Alluxio/alluxio/commit/55ee6ea0f70cd303305b2c2d78c7296cc46e980c", "message": "checkstyle", "committedDate": "2020-01-14T23:50:59Z", "type": "commit"}, {"oid": "fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab", "url": "https://github.com/Alluxio/alluxio/commit/fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab", "message": "Make SelectExecutorsTest abstract so that it doesn't get picked up", "committedDate": "2020-01-15T15:12:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNjg2NA==", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r367006864", "bodyText": "NIT: can we make this a local variable like numFiles, and we can use it here, and also at the end of the test when we verify.", "author": "gpang", "createdAt": "2020-01-15T17:26:27Z", "path": "job/server/src/test/java/alluxio/job/plan/transform/CompactDefinitionSelectExecutorsTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.when;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.URIStatus;\n+import alluxio.collections.Pair;\n+import alluxio.job.JobServerContext;\n+import alluxio.job.SelectExecutorsContext;\n+import alluxio.job.plan.SelectExecutorsTest;\n+import alluxio.wire.WorkerInfo;\n+\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class CompactDefinitionSelectExecutorsTest extends SelectExecutorsTest {\n+\n+  private static final String INPUT_DIR = \"/input\";\n+  private static final String OUTPUT_DIR = \"/output\";\n+\n+  @Test\n+  public void testExecutorsParallel() throws Exception {\n+    CompactConfig config = new CompactConfig(null, INPUT_DIR, OUTPUT_DIR, \"test\", 100);\n+\n+    List<URIStatus> inputFiles = new ArrayList<>();\n+    for (int i = 0; i < 50; i++) {", "originalCommit": "fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNzE4Nw==", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r367007187", "bodyText": "Would this have been only 4 in the previous version?", "author": "gpang", "createdAt": "2020-01-15T17:27:06Z", "path": "job/server/src/test/java/alluxio/job/plan/transform/CompactDefinitionSelectExecutorsTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.when;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.URIStatus;\n+import alluxio.collections.Pair;\n+import alluxio.job.JobServerContext;\n+import alluxio.job.SelectExecutorsContext;\n+import alluxio.job.plan.SelectExecutorsTest;\n+import alluxio.wire.WorkerInfo;\n+\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class CompactDefinitionSelectExecutorsTest extends SelectExecutorsTest {\n+\n+  private static final String INPUT_DIR = \"/input\";\n+  private static final String OUTPUT_DIR = \"/output\";\n+\n+  @Test\n+  public void testExecutorsParallel() throws Exception {\n+    CompactConfig config = new CompactConfig(null, INPUT_DIR, OUTPUT_DIR, \"test\", 100);\n+\n+    List<URIStatus> inputFiles = new ArrayList<>();\n+    for (int i = 0; i < 50; i++) {\n+      inputFiles.add(newFile(Integer.toString(i)));\n+    }\n+\n+    when(mMockFileSystem.listStatus(new AlluxioURI(INPUT_DIR))).thenReturn(inputFiles);\n+\n+    Set<Pair<WorkerInfo, ArrayList<CompactTask>>> result = new CompactDefinition().selectExecutors(\n+        config, SelectExecutorsTest.JOB_WORKERS, new SelectExecutorsContext(1,\n+            new JobServerContext(mMockFileSystem, mMockFileSystemContext, mMockUfsManager)));\n+    assertEquals(40, result.size());", "originalCommit": "fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAyNjcyNw==", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r367026727", "bodyText": "That's correct.", "author": "bradyoo", "createdAt": "2020-01-15T18:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNzE4Nw=="}], "type": "inlineReview"}, {"oid": "34e3d8c8d34da850a545d147b9082230a5754da1", "url": "https://github.com/Alluxio/alluxio/commit/34e3d8c8d34da850a545d147b9082230a5754da1", "message": "feedback", "committedDate": "2020-01-15T18:12:02Z", "type": "commit"}, {"oid": "8b4e11810b596a8348c1b7c584f61ff6c648bc9e", "url": "https://github.com/Alluxio/alluxio/commit/8b4e11810b596a8348c1b7c584f61ff6c648bc9e", "message": "checkstyle", "committedDate": "2020-01-15T21:23:14Z", "type": "commit"}]}