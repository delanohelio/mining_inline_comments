{"pr_number": 11983, "pr_title": "Fix ClosedByInterruptException issue in local cache", "pr_createdAt": "2020-08-13T23:18:48Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11983", "timeline": [{"oid": "43a49ede7305f56744e94b1ecc6d4ab23ab2ff73", "url": "https://github.com/Alluxio/alluxio/commit/43a49ede7305f56744e94b1ecc6d4ab23ab2ff73", "message": "Fix ClosedByInterruptException issue in local cache", "committedDate": "2020-08-13T23:13:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNTIwNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11983#discussion_r470315205", "bodyText": "Do we need to do this read in a loop since we are not guaranteed to read the full data in one call?", "author": "calvinjia", "createdAt": "2020-08-14T00:07:58Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "diffHunk": "@@ -88,23 +86,22 @@ public void put(PageId pageId, byte[] page) throws IOException {\n   }\n \n   @Override\n-  public ReadableByteChannel get(PageId pageId, int pageOffset)\n+  public int get(PageId pageId, int pageOffset, byte[] buffer, int bufferOffset)\n       throws IOException, PageNotFoundException {\n     Preconditions.checkArgument(pageOffset >= 0, \"page offset should be non-negative\");\n+    Preconditions.checkArgument(buffer.length >= bufferOffset, \"page offset %s should be \"\n+        + \"less or equal than buffer length %s\", bufferOffset, buffer.length);\n     Path p = getFilePath(pageId);\n     if (!Files.exists(p)) {\n       throw new PageNotFoundException(p.toString());\n     }\n-    File f = p.toFile();\n-    Preconditions.checkArgument(pageOffset <= f.length(),\n-        \"page offset %s exceeded page size %s\", pageOffset, f.length());\n-    FileInputStream fis = new FileInputStream(p.toFile());\n-    try {\n-      fis.skip(pageOffset);\n-      return fis.getChannel();\n-    } catch (Throwable t) {\n-      fis.close();\n-      throw t;\n+    long fileLen = p.toFile().length();\n+    Preconditions.checkArgument(pageOffset <= fileLen,\n+        \"page offset %s exceeded page size %s\", pageOffset, fileLen);\n+    try (RandomAccessFile localFile = new RandomAccessFile(p.toString(), \"r\")) {\n+      localFile.skipBytes(pageOffset);\n+      return localFile.read(buffer, bufferOffset, (int) Math.min(fileLen - pageOffset,\n+          buffer.length - bufferOffset));", "originalCommit": "43a49ede7305f56744e94b1ecc6d4ab23ab2ff73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMyNDM2OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11983#discussion_r470324369", "bodyText": "good point, let me apply this", "author": "apc999", "createdAt": "2020-08-14T00:21:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNTIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNTQwNw==", "url": "https://github.com/Alluxio/alluxio/pull/11983#discussion_r470315407", "bodyText": "Same comment about read", "author": "calvinjia", "createdAt": "2020-08-14T00:08:18Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -123,9 +121,12 @@ public ReadableByteChannel get(PageId pageId, int pageOffset)\n       }\n       Preconditions.checkArgument(pageOffset <= page.length,\n           \"page offset %s exceeded page size %s\", pageOffset, page.length);\n-      ByteArrayInputStream bais = new ByteArrayInputStream(page);\n-      bais.skip(pageOffset);\n-      return Channels.newChannel(bais);\n+\n+      try (ByteArrayInputStream bais = new ByteArrayInputStream(page)) {\n+        bais.skip(pageOffset);\n+        return bais.read(buffer, bufferOffset,\n+            Math.min(page.length - pageOffset, buffer.length - bufferOffset));", "originalCommit": "43a49ede7305f56744e94b1ecc6d4ab23ab2ff73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc3NjkxNw==", "url": "https://github.com/Alluxio/alluxio/pull/11983#discussion_r470776917", "bodyText": "fixed", "author": "apc999", "createdAt": "2020-08-14T18:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNTQwNw=="}], "type": "inlineReview"}, {"oid": "411e94f6bfb1d4d6a059c26f75798cf2dacc0c1d", "url": "https://github.com/Alluxio/alluxio/commit/411e94f6bfb1d4d6a059c26f75798cf2dacc0c1d", "message": "Merge branch 'branch-2.2.2-p' of github.com:Alluxio/alluxio into branch-2.2.2-p-interrupt", "committedDate": "2020-08-14T18:08:48Z", "type": "forcePushed"}, {"oid": "d19dfe93dbba190527b4766a7cadd525de88a213", "url": "https://github.com/Alluxio/alluxio/commit/d19dfe93dbba190527b4766a7cadd525de88a213", "message": "Merge branch 'branch-2.2.2-p' of github.com:Alluxio/alluxio into branch-2.2.2-p-interrupt", "committedDate": "2020-08-15T17:56:14Z", "type": "commit"}, {"oid": "d19dfe93dbba190527b4766a7cadd525de88a213", "url": "https://github.com/Alluxio/alluxio/commit/d19dfe93dbba190527b4766a7cadd525de88a213", "message": "Merge branch 'branch-2.2.2-p' of github.com:Alluxio/alluxio into branch-2.2.2-p-interrupt", "committedDate": "2020-08-15T17:56:14Z", "type": "forcePushed"}]}