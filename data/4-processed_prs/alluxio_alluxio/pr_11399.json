{"pr_number": 11399, "pr_title": "Move validation tools from examples/ module into shell/", "pr_createdAt": "2020-05-08T04:36:18Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11399", "timeline": [{"oid": "0e521e24e02591237af571793d6f5564a0671aa5", "url": "https://github.com/Alluxio/alluxio/commit/0e521e24e02591237af571793d6f5564a0671aa5", "message": "compiles and works", "committedDate": "2020-05-08T04:31:53Z", "type": "commit"}, {"oid": "fb8cb43fe9863d2ccedc6f0f7e2c5047c22376a6", "url": "https://github.com/Alluxio/alluxio/commit/fb8cb43fe9863d2ccedc6f0f7e2c5047c22376a6", "message": "update logging", "committedDate": "2020-05-08T05:06:26Z", "type": "commit"}, {"oid": "6f7b6aa90e023d79a172a03449ffb4479bf9550a", "url": "https://github.com/Alluxio/alluxio/commit/6f7b6aa90e023d79a172a03449ffb4479bf9550a", "message": "format", "committedDate": "2020-05-08T05:08:12Z", "type": "commit"}, {"oid": "ba1e51bd604857f7c85fa4aee9278914ee76f249", "url": "https://github.com/Alluxio/alluxio/commit/ba1e51bd604857f7c85fa4aee9278914ee76f249", "message": "remove setting methods to public", "committedDate": "2020-05-08T05:22:45Z", "type": "commit"}, {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "url": "https://github.com/Alluxio/alluxio/commit/bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "message": "checkstyle", "committedDate": "2020-05-08T05:54:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTUzNA==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422679534", "bodyText": "please fix the spacing on this dependency", "author": "ZacBlanco", "createdAt": "2020-05-10T18:10:16Z", "path": "shell/pom.xml", "diffHunk": "@@ -51,14 +51,18 @@\n       <groupId>commons-io</groupId>\n       <artifactId>commons-io</artifactId>\n     </dependency>\n-   <dependency>\n-     <groupId>org.apache.httpcomponents</groupId>\n-     <artifactId>httpclient</artifactId>\n-   </dependency>\n-   <dependency>\n+    <dependency>\n+      <groupId>org.apache.httpcomponents</groupId>\n+      <artifactId>httpclient</artifactId>\n+    </dependency>\n+    <dependency>", "originalCommit": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4MjQwNA==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422982404", "bodyText": "I added the spaces just because these lines were incorrectly aligned. Please compare with the lines above and below.", "author": "jiacheliu3", "createdAt": "2020-05-11T11:47:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTUzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTU3Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422679577", "bodyText": "please revert if there is no change here", "author": "ZacBlanco", "createdAt": "2020-05-10T18:10:37Z", "path": "shell/pom.xml", "diffHunk": "@@ -82,8 +86,8 @@\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-        <groupId>org.apache.commons</groupId>\n-        <artifactId>commons-compress</artifactId>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-compress</artifactId>", "originalCommit": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4MjUzNA==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422982534", "bodyText": "See comment above", "author": "jiacheliu3", "createdAt": "2020-05-11T11:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTU3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTgzMQ==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422679831", "bodyText": "why remove this?", "author": "ZacBlanco", "createdAt": "2020-05-10T18:12:54Z", "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }", "originalCommit": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4NDgzMg==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422984832", "bodyText": "Reverted. I made a mistake thinking these are all Methods. Tks for the catch.", "author": "jiacheliu3", "createdAt": "2020-05-11T11:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDAyNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422680025", "bodyText": "we should avoid catch-all here. Is there a reason to use Exception over InvocationTargetException?", "author": "ZacBlanco", "createdAt": "2020-05-10T18:14:25Z", "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }\n       Method[] tests = classToRun.getDeclaredMethods();\n       for (Method test : tests) {\n         String testName = test.getName();\n         if (testName.endsWith(\"Test\")) {\n           System.out.printf(\"Running test: %s...\", testName);\n+          boolean passed = false;\n           try {\n             test.invoke(operations);\n-          } catch (InvocationTargetException e) {\n+            passed = true;\n+            cleanupUfs(testDir);\n+          } catch (Exception e) {", "originalCommit": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4OTA1OA==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422989058", "bodyText": "I think it makes sense to let all the tests complete, instead of letting one ufs operation err out and aborts the runUfsTests.", "author": "jiacheliu3", "createdAt": "2020-05-11T12:00:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDAyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDIzMw==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422680233", "bodyText": "should we not put cleanupUfs even on failure?", "author": "ZacBlanco", "createdAt": "2020-05-10T18:16:08Z", "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }\n       Method[] tests = classToRun.getDeclaredMethods();\n       for (Method test : tests) {\n         String testName = test.getName();\n         if (testName.endsWith(\"Test\")) {\n           System.out.printf(\"Running test: %s...\", testName);\n+          boolean passed = false;\n           try {\n             test.invoke(operations);\n-          } catch (InvocationTargetException e) {\n+            passed = true;\n+            cleanupUfs(testDir);\n+          } catch (Exception e) {\n             if (mUfs.getUnderFSType().equals(S3_IDENTIFIER)) {\n               logRelatedS3Operations(test);\n             }\n-            throw new IOException(e.getTargetException());\n+            System.err.format(\"Test %s.%s aborted%n%s\", test.getClass(), test.getName(), e);\n+          } finally {\n+            RunTestUtils.printPassInfo(passed);\n+            if (!passed) {\n+              failedTestCnt++;\n+            }\n           }\n-          System.out.println(\"Test Passed!\");\n-          cleanupUfs(testDir);", "originalCommit": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4NjMwNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422986305", "bodyText": "Moved cleanupUfs() up into the finally block.", "author": "jiacheliu3", "createdAt": "2020-05-11T11:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDIzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDI5MA==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422680290", "bodyText": "does this print something different based on whether passed is true or false?", "author": "ZacBlanco", "createdAt": "2020-05-10T18:16:35Z", "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }\n       Method[] tests = classToRun.getDeclaredMethods();\n       for (Method test : tests) {\n         String testName = test.getName();\n         if (testName.endsWith(\"Test\")) {\n           System.out.printf(\"Running test: %s...\", testName);\n+          boolean passed = false;\n           try {\n             test.invoke(operations);\n-          } catch (InvocationTargetException e) {\n+            passed = true;\n+            cleanupUfs(testDir);\n+          } catch (Exception e) {\n             if (mUfs.getUnderFSType().equals(S3_IDENTIFIER)) {\n               logRelatedS3Operations(test);\n             }\n-            throw new IOException(e.getTargetException());\n+            System.err.format(\"Test %s.%s aborted%n%s\", test.getClass(), test.getName(), e);\n+          } finally {\n+            RunTestUtils.printPassInfo(passed);", "originalCommit": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4ODI5OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422988299", "bodyText": "I renamed CliUtils to RunTestUtils, as CliUtils contains only util methods local to runUfsTests, instead of general to all other cli classes.\nRunTestUtils.printPassInfo() corresponds to\n\n  \n    \n      alluxio/examples/src/main/java/alluxio/cli/CliUtils.java\n    \n    \n         Line 34\n      in\n      c4eba47\n    \n    \n    \n    \n\n        \n          \n           public static void printPassInfo(boolean pass) {", "author": "jiacheliu3", "createdAt": "2020-05-11T11:59:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDI5MA=="}], "type": "inlineReview"}, {"oid": "f4da28f645f0d92e9c1a9a7dd0206f8388d6ccd7", "url": "https://github.com/Alluxio/alluxio/commit/f4da28f645f0d92e9c1a9a7dd0206f8388d6ccd7", "message": "address comments", "committedDate": "2020-05-11T12:01:37Z", "type": "commit"}]}