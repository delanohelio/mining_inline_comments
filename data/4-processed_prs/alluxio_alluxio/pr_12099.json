{"pr_number": 12099, "pr_title": "Enable new master to join an existing quorum", "pr_createdAt": "2020-09-10T22:37:59Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12099", "timeline": [{"oid": "808ef2e5c1cce7a89b8698fc70279a665f81b29e", "url": "https://github.com/Alluxio/alluxio/commit/808ef2e5c1cce7a89b8698fc70279a665f81b29e", "message": "Enable new master to join an existing quorum", "committedDate": "2020-09-10T22:24:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk5MjE0NA==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r487992144", "bodyText": "If joinQuorum failed, the master with raft journal system will still run?? Should we shut it down or retry joining?", "author": "LuQQiu", "createdAt": "2020-09-14T14:49:09Z", "path": "core/server/common/src/main/java/alluxio/master/journal/raft/RaftJournalSystem.java", "diffHunk": "@@ -562,6 +566,38 @@ public synchronized void startInternal() throws InterruptedException, IOExceptio\n       throw new IOException(errorMessage, e.getCause());\n     }\n     LOG.info(\"Started Raft Journal System in {}ms\", System.currentTimeMillis() - startTime);\n+    joinQuorum();\n+  }\n+\n+  private void joinQuorum() {\n+    InetSocketAddress localAddress = mConf.getLocalAddress();\n+    // Send a request to join the quorum.\n+    // If the server is already part of the quorum, this operation is a noop.\n+    AddQuorumServerRequest request = AddQuorumServerRequest.newBuilder()\n+        .setServerAddress(NetAddress.newBuilder()\n+            .setHost(localAddress.getHostString())\n+            .setRpcPort(localAddress.getPort()))\n+        .build();\n+    RaftClient client = createClient();\n+    client.sendReadOnlyAsync(Message.valueOf(\n+        UnsafeByteOperations.unsafeWrap(\n+            JournalQueryRequest\n+                .newBuilder()\n+                .setAddQuorumServerRequest(request)\n+                .build().toByteArray()\n+        ))).whenComplete((reply, t) -> {\n+          if (t != null) {\n+            LOG.error(\"Exception occurred while joining quorum\", t);\n+          }\n+          if (reply != null && reply.getException() != null) {\n+            LOG.error(\"Received an error while joining quorum\", reply.getException());", "originalCommit": "808ef2e5c1cce7a89b8698fc70279a665f81b29e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNzc3Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r488127773", "bodyText": "Yes. The join process is a best effort call with a retry policy. When a new quorum is forming a new leader might not be available when master starts. We should not shutdown the master for that. If the master later is rejected by the quorum because the unsuccessful join, the server will be shutdown.", "author": "bf8086", "createdAt": "2020-09-14T18:11:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk5MjE0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3NjI3Nw==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r488076277", "bodyText": "This journal request can have various types of requests, like snapshot (above), and now add quorum? There should only be 1 set at a time?\nAlso, should this section be like:\nif (queryRequest.hasGetSnapshotInfoRequest()) {\n...\nelse if (queryRequest.hasGetSnapshotRequest()) {\n...\nelse if (queryRequest.hasAddQuorumServerRequest()) {\n...\n}", "author": "gpang", "createdAt": "2020-09-14T16:45:12Z", "path": "core/server/common/src/main/java/alluxio/master/journal/raft/JournalStateMachine.java", "diffHunk": "@@ -185,6 +187,17 @@ public StateMachineStorage getStateMachineStorage() {\n         future.complete(reply);\n         return future;\n       }\n+      if (queryRequest.hasAddQuorumServerRequest()) {", "originalCommit": "808ef2e5c1cce7a89b8698fc70279a665f81b29e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyOTUyMA==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r488129520", "bodyText": "Yes there should be only one set for a request.\nBoth GetSnapshotInfoRequest and GetSnapshotRequest are handled by SnapshotManager. Only when a valid reply is not given does this function continue to check other types of request.", "author": "bf8086", "createdAt": "2020-09-14T18:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3NjI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE4MTg2NA==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r488181864", "bodyText": "I see. Can we just add a small comment, either here or above, saying something like handleRequest() handles GetSnapshotInfoRequest and GetSnapshotRequest, or returns null, so that this part handles the other requests (AddQuorumServerRequest).", "author": "gpang", "createdAt": "2020-09-14T19:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3NjI3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI0MDc3Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r488240773", "bodyText": "Added some comments.", "author": "bf8086", "createdAt": "2020-09-14T21:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3NjI3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3Nzc2Mg==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r488077762", "bodyText": "Does whenComplete run even on failure?", "author": "gpang", "createdAt": "2020-09-14T16:46:58Z", "path": "core/server/common/src/main/java/alluxio/master/journal/raft/RaftJournalSystem.java", "diffHunk": "@@ -562,6 +566,38 @@ public synchronized void startInternal() throws InterruptedException, IOExceptio\n       throw new IOException(errorMessage, e.getCause());\n     }\n     LOG.info(\"Started Raft Journal System in {}ms\", System.currentTimeMillis() - startTime);\n+    joinQuorum();\n+  }\n+\n+  private void joinQuorum() {\n+    InetSocketAddress localAddress = mConf.getLocalAddress();\n+    // Send a request to join the quorum.\n+    // If the server is already part of the quorum, this operation is a noop.\n+    AddQuorumServerRequest request = AddQuorumServerRequest.newBuilder()\n+        .setServerAddress(NetAddress.newBuilder()\n+            .setHost(localAddress.getHostString())\n+            .setRpcPort(localAddress.getPort()))\n+        .build();\n+    RaftClient client = createClient();\n+    client.sendReadOnlyAsync(Message.valueOf(\n+        UnsafeByteOperations.unsafeWrap(\n+            JournalQueryRequest\n+                .newBuilder()\n+                .setAddQuorumServerRequest(request)\n+                .build().toByteArray()\n+        ))).whenComplete((reply, t) -> {", "originalCommit": "808ef2e5c1cce7a89b8698fc70279a665f81b29e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNDEyMg==", "url": "https://github.com/Alluxio/alluxio/pull/12099#discussion_r488124122", "bodyText": "Yes, it always runs at the end of the action. When the action fails a throwable is given as the second parameter.", "author": "bf8086", "createdAt": "2020-09-14T18:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3Nzc2Mg=="}], "type": "inlineReview"}, {"oid": "384a42671e8654c2e40cd213ddd4d8ac0193a1cb", "url": "https://github.com/Alluxio/alluxio/commit/384a42671e8654c2e40cd213ddd4d8ac0193a1cb", "message": "Add comments", "committedDate": "2020-09-14T21:51:13Z", "type": "commit"}]}