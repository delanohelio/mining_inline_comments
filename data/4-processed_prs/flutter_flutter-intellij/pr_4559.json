{"pr_number": 4559, "pr_title": "Add \"plugin make\" that uses Gradle instead of Ant", "pr_createdAt": "2020-05-20T22:53:21Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/4559", "timeline": [{"oid": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "url": "https://github.com/flutter/flutter-intellij/commit/b0095786e16d64447dc6a0ef1b06998ef08967b6", "message": "Add \"plugin make\" that ues Gradle instead of Ant", "committedDate": "2020-05-20T22:31:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNjk0Mg==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428736942", "bodyText": "nit: trailing comma after last param. There are several places in this file where this should also be applied. Sorry in advance for spamming with trailing comma comments :)", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:42:22Z", "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzUyNw==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777527", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:45:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNjk0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzA2MA==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428737060", "bodyText": "trailing comma", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:42:31Z", "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzU1Mg==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777552", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:45:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzE4NA==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428737184", "bodyText": "trailing comma", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:42:38Z", "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzU3Ng==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777576", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzE4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODAxMA==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428738010", "bodyText": "trailing comma", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:43:31Z", "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzYwMQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777601", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODAxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODEyMw==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428738123", "bodyText": "trailing comma", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:43:38Z", "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');\n+    }\n+    return result;\n+  }\n+}\n+\n+class GradleBuildCommand extends BuildCommand {\n+  GradleBuildCommand(BuildCommandRunner runner) : super(runner, 'make');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.buildPlugin(spec, pluginVersion);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    var file = File(releasesFilePath(spec));\n+    _copyFile(\n+        File('build/distributions/flutter-intellij-$version.zip'), file.parent,\n+        filename: p.basename(file.path));", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzYzOQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777639", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczODEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczOTA0OA==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428739048", "bodyText": "this can be final", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:44:36Z", "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -309,13 +310,87 @@ void _copyResources(Directory from, Directory to) {\n   }\n }\n \n+class AntBuildCommand extends BuildCommand {\n+  AntBuildCommand(BuildCommandRunner runner) : super(runner, 'build');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.javac2(spec);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    int result;\n+\n+    // create the jars\n+    createDir('build/flutter-intellij/lib');\n+    result = await jar(\n+        'build/classes', 'build/flutter-intellij/lib/flutter-intellij.jar');\n+    if (result != 0) {\n+      log('jar failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.isTestTarget && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File('build/flutter-intellij/lib/flutter-intellij.jar'),\n+          Directory(testTargetPath(spec)),\n+          filename: 'io.flutter.jar');\n+    }\n+    if (spec.isAndroidStudio) {\n+      result = await jar(\n+          'build/studio', 'build/flutter-intellij/lib/flutter-studio.jar');\n+      if (result != 0) {\n+        log('jar failed: ${result.toString()}');\n+        return result;\n+      }\n+    }\n+\n+    // zip it up\n+    result = await zip('build/flutter-intellij', releasesFilePath(spec));\n+    if (result != 0) {\n+      log('zip failed: ${result.toString()}');\n+      return result;\n+    }\n+    if (spec.copyIjVersion && !isReleaseMode && !isDevChannel) {\n+      _copyFile(File(releasesFilePath(spec)), Directory(ijVersionPath(spec)),\n+          filename: 'flutter-intellij.zip');\n+    }\n+    return result;\n+  }\n+}\n+\n+class GradleBuildCommand extends BuildCommand {\n+  GradleBuildCommand(BuildCommandRunner runner) : super(runner, 'make');\n+\n+  Future<int> externalBuildCommand(BuildSpec spec) async {\n+    return runner.buildPlugin(spec, pluginVersion);\n+  }\n+\n+  Future<int> savePluginArtifact(BuildSpec spec, String version) async {\n+    var file = File(releasesFilePath(spec));", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzY3MQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777671", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczOTA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjA0Ng==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428742046", "bodyText": "not your fault, but can these both be final?", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:47:57Z", "path": "tool/plugin/lib/plugin.dart", "diffHunk": "@@ -383,7 +464,7 @@ class BuildCommand extends ProductCommand {\n       log('spec.version: ${spec.version}');\n \n       var compileFn = () async {\n-        var r = await runner.javac2(spec);\n+        var r = await externalBuildCommand(spec);", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NzcyMg==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777722", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjA0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjQwMA==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428742400", "bodyText": "make variables in this method final", "author": "kenzieschmoll", "createdAt": "2020-05-21T15:48:19Z", "path": "tool/plugin/lib/runner.dart", "diffHunk": "@@ -54,4 +54,29 @@ compile\n       }\n     }\n   }\n+\n+  Future<int> buildPlugin(BuildSpec spec, String version) async {\n+    var contents = '''", "originalCommit": "b0095786e16d64447dc6a0ef1b06998ef08967b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3Nzc0OA==", "url": "https://github.com/flutter/flutter-intellij/pull/4559#discussion_r428777748", "bodyText": "Done", "author": "stevemessick", "createdAt": "2020-05-21T16:46:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc0MjQwMA=="}], "type": "inlineReview"}, {"oid": "8c3fe5ee79a2f019e68add02d876345ff74e8a9e", "url": "https://github.com/flutter/flutter-intellij/commit/8c3fe5ee79a2f019e68add02d876345ff74e8a9e", "message": "Reformat and finalize", "committedDate": "2020-05-21T16:47:32Z", "type": "commit"}]}