{"pr_number": 5048, "pr_title": "Channel command: run 'flutter channel'", "pr_createdAt": "2020-11-14T00:31:39Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/5048", "timeline": [{"oid": "1c7e8d09bb5425b530365c790790781bee587743", "url": "https://github.com/flutter/flutter-intellij/commit/1c7e8d09bb5425b530365c790790781bee587743", "message": "Define a command to run: flutter channel", "committedDate": "2020-11-14T00:09:20Z", "type": "commit"}, {"oid": "af1be0e6bb75c498d7700274125c2dc6bd07954b", "url": "https://github.com/flutter/flutter-intellij/commit/af1be0e6bb75c498d7700274125c2dc6bd07954b", "message": "Add more post-processing", "committedDate": "2020-11-14T00:29:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3MjMwNw==", "url": "https://github.com/flutter/flutter-intellij/pull/5048#discussion_r524372307", "bodyText": "Do we want to throw here? Return null?\nFor a longer tail of users, the channel text will be just the git branch they're on for the flutter repo. We may want to handle unknown names, and map them to something like 'unknown' (instead of it being an error condition).", "author": "devoncarew", "createdAt": "2020-11-16T15:52:53Z", "path": "src/io/flutter/sdk/FlutterSdkChannel.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 The Chromium Authors. All rights reserved.\n+ * Use of this source code is governed by a BSD-style license that can be\n+ * found in the LICENSE file.\n+ */\n+package io.flutter.sdk;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+public class FlutterSdkChannel {\n+\n+  public enum ID {\n+\n+    // Do not change this order.\n+    STABLE(\"stable\"), BETA(\"beta\"), DEV(\"dev\"), MASTER(\"master\");\n+\n+    private final String name;\n+\n+    ID(String name) {\n+      this.name = name;\n+    }\n+\n+    public String toString() {\n+      return name;\n+    }\n+\n+    @NotNull\n+    public static ID fromText(String name) {\n+      switch (name) {\n+        case \"master\":\n+          return MASTER;\n+        case \"dev\":\n+          return DEV;\n+        case \"beta\":\n+          return BETA;\n+        case \"stable\":\n+          return STABLE;\n+        default:\n+          throw new IllegalArgumentException(\"Unknown channel: \" + name);", "originalCommit": "af1be0e6bb75c498d7700274125c2dc6bd07954b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNzAyMw==", "url": "https://github.com/flutter/flutter-intellij/pull/5048#discussion_r524437023", "bodyText": "what is EDT?", "author": "helin24", "createdAt": "2020-11-16T17:16:06Z", "path": "src/io/flutter/sdk/FlutterSdk.java", "diffHunk": "@@ -478,72 +491,64 @@ public String queryFlutterConfig(String key, boolean useCachedValue) {\n       return cachedConfigValues.get(key);\n     }\n \n-    cachedConfigValues.put(key, queryFlutterConfigImpl(key));\n-    return cachedConfigValues.get(key);\n+    String stdout = returnOutputOfQuery(flutterConfig(\"--machine\"));\n+    if (stdout != null) {\n+      try {\n+        final JsonElement elem = JsonUtils.parseString(stdout.substring(stdout.indexOf('{')));\n+        if (elem.isJsonNull()) {\n+          FlutterUtils.warn(LOG, \"Invalid Json from flutter config\");\n+          return null;\n+        }\n+\n+        final JsonObject obj = elem.getAsJsonObject();\n+        final JsonPrimitive primitive = obj.getAsJsonPrimitive(key);\n+        if (primitive != null) {\n+          cachedConfigValues.put(key, stdout);\n+          return cachedConfigValues.get(key);\n+        }\n+      }\n+      catch (JsonSyntaxException ignored) {\n+      }\n+    }\n+    return null;\n   }\n \n-  private String queryFlutterConfigImpl(String key) {\n-    final FlutterCommand command = flutterConfig(\"--machine\");\n+  // Do not run this on EDT.", "originalCommit": "af1be0e6bb75c498d7700274125c2dc6bd07954b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f073bd0fc3dd3fa21378ccea26845006f25aafb5", "url": "https://github.com/flutter/flutter-intellij/commit/f073bd0fc3dd3fa21378ccea26845006f25aafb5", "message": "Add unknown channel", "committedDate": "2020-11-16T17:48:03Z", "type": "commit"}]}