{"pr_number": 3079, "pr_title": "ARTEMIS-2706 Use FrameSize to decide when to flush large messages", "pr_createdAt": "2020-04-14T00:30:20Z", "pr_url": "https://github.com/apache/activemq-artemis/pull/3079", "timeline": [{"oid": "e944cbf41588166ba47dd01020ce769e822ab960", "url": "https://github.com/apache/activemq-artemis/commit/e944cbf41588166ba47dd01020ce769e822ab960", "message": "ARTEMIS-2706 Use FrameSize to decide when to flush large messages", "committedDate": "2020-04-14T02:36:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODE3Mg==", "url": "https://github.com/apache/activemq-artemis/pull/3079#discussion_r408038172", "bodyText": "I dont think this makes the most sense as there isnt anything to say there arent bytes for other messages in the session, so using that to govern behaviour for a particular delivery isnt a reliable way to achieve the desired behaviour.\nThe delivery has its own buffer, using that to govern behaviour would seem the most appropriate, see Delivery.pending() and available() (which both do the same thing hehe, https://issues.apache.org/jira/browse/PROTON-1409).\nJust checking the brokers outbound size limit doesnt allow for the fact the receivers frame size limit may be lower than it, so it may be worth calculating the lower of the two up front, otherwise it may never flush here. Similarly, the return slightly higher up may mean it returns without flushing following a change like this.\nThe existing flush here will presumably also be why ARTEMIS-2707 occurred, since the delivery isnt indicated complete (sender.advance()) or settled (which implicitly completes) until further down just before another flush, yet would have already had all its payload sent at this point. With the addition of an 'if outstanding is over frame size' guard here it would become less certain whether the flush and subsquent empty transfer occurred however, depending then on whether the threshhold was exceeded after the final send.\nI'd note that by creating such a small buffer, you are forcing a similarly small allocation on every send call as the payload is copied into the delivery. Using a bigger buffer would seem sensible when appropriate. Perhaps the message size can be discerned and something suitable selected based on that and the frame sizing. Or also using NettyReadable and sendNoCopy to avoid the copy (note though that per its API, sendNoCopy can/will still copy if there is outstanding data from a prior send call, hence passing a more appropriately sized buffer makes sense there too).\nIn terms of sizing on send, it may be worth allowing for some room for the frame header and transfer encoding, such that by supplying a little less than [a multiple of] the max you end up avoiding emitting a 'full' frame followed by a tiny one just to complete sending some small remaining content, then another full one and tiny one for subsequent send call content.", "author": "gemmellr", "createdAt": "2020-04-14T10:38:58Z", "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/proton/ProtonServerSenderContext.java", "diffHunk": "@@ -862,7 +862,9 @@ void deliver() {\n \n                   sender.send(buf.array(), 0, size);\n \n-                  connection.instantFlush();\n+                  if (protonSession.session.getOutgoingBytes() >= protonSession.session.getConnection().getTransport().getOutboundFrameSizeLimit()) {\n+                     connection.instantFlush();\n+                  }", "originalCommit": "e944cbf41588166ba47dd01020ce769e822ab960", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0MDk1OA==", "url": "https://github.com/apache/activemq-artemis/pull/3079#discussion_r408140958", "bodyText": "I wanted to avoid a bigger buffer. I will use the frame size as the buffer size...\nMaking an update", "author": "clebertsuconic", "createdAt": "2020-04-14T13:36:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODE3Mg=="}], "type": "inlineReview"}, {"oid": "6f0558412721b747d5105e68daea680d1c48d048", "url": "https://github.com/apache/activemq-artemis/commit/6f0558412721b747d5105e68daea680d1c48d048", "message": "ARTEMIS-2706 Use FrameSize to decide when to flush large messages", "committedDate": "2020-04-14T16:07:30Z", "type": "forcePushed"}, {"oid": "d27d61f223fe88fd01f8d98415ddadb75605d374", "url": "https://github.com/apache/activemq-artemis/commit/d27d61f223fe88fd01f8d98415ddadb75605d374", "message": "ARTEMIS-2706 Use FrameSize to decide when to flush large messages", "committedDate": "2020-04-14T16:59:25Z", "type": "commit"}, {"oid": "d27d61f223fe88fd01f8d98415ddadb75605d374", "url": "https://github.com/apache/activemq-artemis/commit/d27d61f223fe88fd01f8d98415ddadb75605d374", "message": "ARTEMIS-2706 Use FrameSize to decide when to flush large messages", "committedDate": "2020-04-14T16:59:25Z", "type": "forcePushed"}]}