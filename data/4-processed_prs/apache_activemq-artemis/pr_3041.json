{"pr_number": 3041, "pr_title": "Two JIRAs around Paging and AMQP", "pr_createdAt": "2020-03-22T05:16:14Z", "pr_url": "https://github.com/apache/activemq-artemis/pull/3041", "timeline": [{"oid": "048538fbc5cbdc991f197f1d82bd6223e1dea7dc", "url": "https://github.com/apache/activemq-artemis/commit/048538fbc5cbdc991f197f1d82bd6223e1dea7dc", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-22T05:18:16Z", "type": "forcePushed"}, {"oid": "6eaa928a52229c18acaea22c408c69270225a4f1", "url": "https://github.com/apache/activemq-artemis/commit/6eaa928a52229c18acaea22c408c69270225a4f1", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-22T05:19:15Z", "type": "forcePushed"}, {"oid": "c472b5b751b6a425549556b25d7c84ef6c1b1656", "url": "https://github.com/apache/activemq-artemis/commit/c472b5b751b6a425549556b25d7c84ef6c1b1656", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-22T05:23:50Z", "type": "forcePushed"}, {"oid": "a691b01e3adfae0e8afa498596be9d616c2e3e2a", "url": "https://github.com/apache/activemq-artemis/commit/a691b01e3adfae0e8afa498596be9d616c2e3e2a", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-22T05:31:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5MDkxOQ==", "url": "https://github.com/apache/activemq-artemis/pull/3041#discussion_r396490919", "bodyText": "I would use some named const somewhere to help understand why is 1 second", "author": "franz1981", "createdAt": "2020-03-23T14:27:04Z", "path": "artemis-commons/src/main/java/org/apache/activemq/artemis/utils/actors/ProcessorBase.java", "diffHunk": "@@ -99,45 +98,23 @@ public void shutdown(long timeout, TimeUnit unit) {\n       }\n    }\n \n-   /**\n-    * It will wait the current execution (if there is one) to finish\n-    * but will not complete any further executions\n-    */\n+   /** It will shutdown the executor however it will not wait for finishing tasks*/\n    public int shutdownNow(Consumer<? super T> onPendingItem) {\n       //alert anyone that has been requested (at least) an immediate shutdown\n       requestedForcedShutdown = true;\n       requestedShutdown = true;\n \n-      if (inHandler()) {\n-         stateUpdater.set(this, STATE_FORCED_SHUTDOWN);\n-      } else {\n-         //it could take a very long time depending on the current executing task\n-         do {\n-            //alert the ExecutorTask (if is running) to just drain the current backlog of tasks\n-            final int startState = stateUpdater.get(this);\n-            if (startState == STATE_FORCED_SHUTDOWN) {\n-               //another thread has completed a forced shutdown: let it to manage the tasks cleanup\n-               break;\n-            }\n-            if (startState == STATE_RUNNING) {\n-               //wait 100 ms to avoid burning CPU while waiting and\n-               //give other threads a chance to make progress\n-               LockSupport.parkNanos(100_000_000L);\n-            }\n-         }\n-         while (!stateUpdater.compareAndSet(this, STATE_NOT_RUNNING, STATE_FORCED_SHUTDOWN));\n-         //this could happen just one time: the forced shutdown state is the last one and\n-         //can be set by just one caller.\n-         //As noted on the execute method there is a small chance that some tasks would be enqueued\n+      if (!inHandler()) {\n+         flush(1, TimeUnit.SECONDS);", "originalCommit": "a691b01e3adfae0e8afa498596be9d616c2e3e2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNTYzMw==", "url": "https://github.com/apache/activemq-artemis/pull/3041#discussion_r396605633", "bodyText": "I was afraid of failures on the testsuite. In a production system the component would be going down anyways.\nI will try to remove the condition for good.", "author": "clebertsuconic", "createdAt": "2020-03-23T16:57:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5MDkxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5MjA2MA==", "url": "https://github.com/apache/activemq-artemis/pull/3041#discussion_r396492060", "bodyText": "the synchronize was there for 2 reasons:\n\nif we would have started using some multi-producer single-consume queue (the ones on JCTools for example...)\nonAddedTaskIfNotRunning is using a synchronize to allow all-or-nothing behaviour", "author": "franz1981", "createdAt": "2020-03-23T14:28:38Z", "path": "artemis-commons/src/main/java/org/apache/activemq/artemis/utils/actors/ProcessorBase.java", "diffHunk": "@@ -99,45 +98,23 @@ public void shutdown(long timeout, TimeUnit unit) {\n       }\n    }\n \n-   /**\n-    * It will wait the current execution (if there is one) to finish\n-    * but will not complete any further executions\n-    */\n+   /** It will shutdown the executor however it will not wait for finishing tasks*/\n    public int shutdownNow(Consumer<? super T> onPendingItem) {\n       //alert anyone that has been requested (at least) an immediate shutdown\n       requestedForcedShutdown = true;\n       requestedShutdown = true;\n \n-      if (inHandler()) {\n-         stateUpdater.set(this, STATE_FORCED_SHUTDOWN);\n-      } else {\n-         //it could take a very long time depending on the current executing task\n-         do {\n-            //alert the ExecutorTask (if is running) to just drain the current backlog of tasks\n-            final int startState = stateUpdater.get(this);\n-            if (startState == STATE_FORCED_SHUTDOWN) {\n-               //another thread has completed a forced shutdown: let it to manage the tasks cleanup\n-               break;\n-            }\n-            if (startState == STATE_RUNNING) {\n-               //wait 100 ms to avoid burning CPU while waiting and\n-               //give other threads a chance to make progress\n-               LockSupport.parkNanos(100_000_000L);\n-            }\n-         }\n-         while (!stateUpdater.compareAndSet(this, STATE_NOT_RUNNING, STATE_FORCED_SHUTDOWN));\n-         //this could happen just one time: the forced shutdown state is the last one and\n-         //can be set by just one caller.\n-         //As noted on the execute method there is a small chance that some tasks would be enqueued\n+      if (!inHandler()) {\n+         flush(1, TimeUnit.SECONDS);\n       }\n+\n+      stateUpdater.set(this, STATE_FORCED_SHUTDOWN);\n       int pendingItems = 0;\n-      //there is a small chance that execute() could race with this cleanup: the lock allow an all-or-nothing behaviour between them\n-      synchronized (tasks) {\n-         T item;\n-         while ((item = tasks.poll()) != null) {\n-            onPendingItem.accept(item);\n-            pendingItems++;\n-         }\n+\n+      T item;\n+      while ((item = tasks.poll()) != null) {", "originalCommit": "a691b01e3adfae0e8afa498596be9d616c2e3e2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwODc0Nw==", "url": "https://github.com/apache/activemq-artemis/pull/3041#discussion_r396608747", "bodyText": "I am removing the clear on onAddedTaskifNotRunning", "author": "clebertsuconic", "createdAt": "2020-03-23T17:02:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5MjA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwMTI2Mg==", "url": "https://github.com/apache/activemq-artemis/pull/3041#discussion_r396501262", "bodyText": "that's safe in any env?", "author": "franz1981", "createdAt": "2020-03-23T14:41:03Z", "path": "artemis-protocols/artemis-amqp-protocol/src/test/java/org/apache/activemq/artemis/protocol/amqp/proton/ProtonServerReceiverContextTest.java", "diffHunk": "@@ -154,6 +160,8 @@ private void doOnMessageWithDeliveryException(List<Symbol> sourceSymbols,\n \n       rc.onMessage(mockDelivery);\n \n+      Thread.sleep(1000);", "originalCommit": "a691b01e3adfae0e8afa498596be9d616c2e3e2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwNDIzNQ==", "url": "https://github.com/apache/activemq-artemis/pull/3041#discussion_r396604235", "bodyText": "I forgot to remove this sleep", "author": "clebertsuconic", "createdAt": "2020-03-23T16:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwMTI2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxMjk2Nw==", "url": "https://github.com/apache/activemq-artemis/pull/3041#discussion_r396512967", "bodyText": "is this logger used?", "author": "brusdev", "createdAt": "2020-03-23T14:56:01Z", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl.java", "diffHunk": "@@ -43,6 +44,8 @@\n  */\n public class OperationContextImpl implements OperationContext {\n \n+   private static final Logger logger = Logger.getLogger(OperationContextImpl.class);", "originalCommit": "a691b01e3adfae0e8afa498596be9d616c2e3e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a855cbf75a0ae07d37a8167ad54bec1c3e3a0612", "url": "https://github.com/apache/activemq-artemis/commit/a855cbf75a0ae07d37a8167ad54bec1c3e3a0612", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-23T17:23:51Z", "type": "forcePushed"}, {"oid": "669310d0eb0fcb7fada52ac5b1df1f2f7f91a4c4", "url": "https://github.com/apache/activemq-artemis/commit/669310d0eb0fcb7fada52ac5b1df1f2f7f91a4c4", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-23T17:54:10Z", "type": "forcePushed"}, {"oid": "2d3267fc48b89188305aa3eb290f679e1476fd39", "url": "https://github.com/apache/activemq-artemis/commit/2d3267fc48b89188305aa3eb290f679e1476fd39", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-23T17:54:59Z", "type": "forcePushed"}, {"oid": "f30caab0aff995f3561a6809f01c0b636b4136f9", "url": "https://github.com/apache/activemq-artemis/commit/f30caab0aff995f3561a6809f01c0b636b4136f9", "message": "ARTEMIS-2674 AMQP should use a separate executor for IO\n\ntest included on ARTEMIS-2673 is also valid for this commit", "committedDate": "2020-03-23T19:40:59Z", "type": "forcePushed"}, {"oid": "3821f6d33a2c367a51b24855bc29efeb84d63c35", "url": "https://github.com/apache/activemq-artemis/commit/3821f6d33a2c367a51b24855bc29efeb84d63c35", "message": "ARTEMIS-2673 PageStore should only be removed when Address is removed\nARTEMIS-2674 AMQP should use a separate executor for IO\n\nThis is after extensive test on paging & replication.\n\nThese two issues are related to each other, and this commit is addressing both.", "committedDate": "2020-03-23T19:50:20Z", "type": "forcePushed"}, {"oid": "2506088a9aa92e515eb6ecdc66128aeddc779242", "url": "https://github.com/apache/activemq-artemis/commit/2506088a9aa92e515eb6ecdc66128aeddc779242", "message": "ARTEMIS-2673 PageStore should only be removed when Address is removed\nARTEMIS-2674 AMQP should use a separate executor for IO\n\nThis is after extensive test on paging & replication.\n\nThese two issues are related to each other, and this commit is addressing both.", "committedDate": "2020-03-23T20:29:06Z", "type": "forcePushed"}, {"oid": "63c4180cddc8005bebdcea6ebd1e775ea247f826", "url": "https://github.com/apache/activemq-artemis/commit/63c4180cddc8005bebdcea6ebd1e775ea247f826", "message": "ARTEMIS-2673 PageStore should only be removed when Address is removed\nARTEMIS-2674 AMQP should use a separate executor for IO\n\nThis is after extensive test on paging & replication.\n\nThese two issues are related to each other, and this commit is addressing both.", "committedDate": "2020-03-23T23:48:59Z", "type": "forcePushed"}, {"oid": "a52aedaded9a0ca6c82fc4f9cd0b238efb9b9189", "url": "https://github.com/apache/activemq-artemis/commit/a52aedaded9a0ca6c82fc4f9cd0b238efb9b9189", "message": "ARTEMIS-2673 PageStore should only be removed when Address is removed\nARTEMIS-2674 AMQP should use a separate executor for IO\n\nThis is after extensive test on paging & replication.\n\nThese two issues are related to each other, and this commit is addressing both.", "committedDate": "2020-03-23T23:57:02Z", "type": "forcePushed"}, {"oid": "f874a02d17eb7787410c69024397353e53fc7689", "url": "https://github.com/apache/activemq-artemis/commit/f874a02d17eb7787410c69024397353e53fc7689", "message": "ARTEMIS-2673 PageStore should only be removed when Address is removed\n& ARTEMIS-2674 AMQP should use a separate executor for IO", "committedDate": "2020-03-24T00:02:17Z", "type": "commit"}, {"oid": "f874a02d17eb7787410c69024397353e53fc7689", "url": "https://github.com/apache/activemq-artemis/commit/f874a02d17eb7787410c69024397353e53fc7689", "message": "ARTEMIS-2673 PageStore should only be removed when Address is removed\n& ARTEMIS-2674 AMQP should use a separate executor for IO", "committedDate": "2020-03-24T00:02:17Z", "type": "forcePushed"}]}