{"pr_number": 3109, "pr_title": "ARTEMIS-2745 queue registering wrong metrics", "pr_createdAt": "2020-04-30T17:48:59Z", "pr_url": "https://github.com/apache/activemq-artemis/pull/3109", "timeline": [{"oid": "67252259ace40b6bb3b1196d287ad6a5f1c8f906", "url": "https://github.com/apache/activemq-artemis/commit/67252259ace40b6bb3b1196d287ad6a5f1c8f906", "message": "ARTEMIS-2745 queue registering wrong metrics", "committedDate": "2020-04-30T18:00:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0ODgwMQ==", "url": "https://github.com/apache/activemq-artemis/pull/3109#discussion_r418248801", "bodyText": "This test fails... run it in loop.\nWait.assertEquals please", "author": "clebertsuconic", "createdAt": "2020-04-30T19:47:16Z", "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/plugin/MetricsPluginTest.java", "diffHunk": "@@ -198,6 +199,36 @@ public void testForBasicMetricsPresenceAndValue() throws Exception {\n       checkMetric(metrics, \"artemis.consumer.count\", \"queue\", queueName, 0.0);\n    }\n \n+   @Test\n+   public void testMessageCountWithPaging() throws Exception {\n+      final String data = \"Simple Text \" + UUID.randomUUID().toString();\n+      final String queueName = \"simpleQueue\";\n+      final String addressName = \"simpleAddress\";\n+\n+      server.getAddressSettingsRepository().getMatch(addressName).setAddressFullMessagePolicy(AddressFullMessagePolicy.PAGE).setMaxSizeBytes(1024 * 10).setPageSizeBytes(1024 * 5);\n+\n+      session.createQueue(new QueueConfiguration(queueName).setAddress(addressName).setRoutingType(RoutingType.ANYCAST));\n+      ClientProducer producer = session.createProducer(addressName);\n+      ClientMessage message = session.createMessage(true);\n+      message.getBodyBuffer().writeString(data);\n+      int messageCount = 0;\n+      while (!server.getPagingManager().getPageStore(new SimpleString(addressName)).isPaging()) {\n+         producer.send(message);\n+         messageCount++;\n+      }\n+\n+      assertEquals(messageCount, server.locateQueue(queueName).getMessageCount());\n+      checkMetric(getMetrics(), \"artemis.message.count\", \"queue\", queueName, Double.valueOf(messageCount));\n+\n+      for (int i = 0; i < messageCount; i++) {\n+         producer.send(message);\n+      }\n+      producer.close();\n+\n+      assertEquals(messageCount * 2, server.locateQueue(queueName).getMessageCount());", "originalCommit": "67252259ace40b6bb3b1196d287ad6a5f1c8f906", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0OTY2Ng==", "url": "https://github.com/apache/activemq-artemis/pull/3109#discussion_r418249666", "bodyText": "change this line to\nWait.assertEquals(messageCount, server.locateQueue(queueName)::getMessageCount);", "author": "clebertsuconic", "createdAt": "2020-04-30T19:48:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0ODgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MjM1Ng==", "url": "https://github.com/apache/activemq-artemis/pull/3109#discussion_r418252356", "bodyText": "Done. I ran the test 500 times with no failures.", "author": "jbertram", "createdAt": "2020-04-30T19:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0ODgwMQ=="}], "type": "inlineReview"}, {"oid": "d53b2bcef6a19e403988a91e527998fa4b515e3e", "url": "https://github.com/apache/activemq-artemis/commit/d53b2bcef6a19e403988a91e527998fa4b515e3e", "message": "ARTEMIS-2745 queue registering wrong metrics", "committedDate": "2020-04-30T19:53:36Z", "type": "commit"}, {"oid": "d53b2bcef6a19e403988a91e527998fa4b515e3e", "url": "https://github.com/apache/activemq-artemis/commit/d53b2bcef6a19e403988a91e527998fa4b515e3e", "message": "ARTEMIS-2745 queue registering wrong metrics", "committedDate": "2020-04-30T19:53:36Z", "type": "forcePushed"}]}