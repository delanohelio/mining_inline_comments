{"pr_number": 3913, "pr_title": "Fix dhcp infinite lease time", "pr_createdAt": "2020-02-24T11:29:16Z", "pr_url": "https://github.com/apache/cloudstack/pull/3913", "timeline": [{"oid": "781d2ab08a25b62d53f80b8ef37d0f81ad0481a5", "url": "https://github.com/apache/cloudstack/commit/781d2ab08a25b62d53f80b8ef37d0f81ad0481a5", "message": "Fix dhcp infinite lease time\n\nThe previous setup of many hours would not work, due to some internal dnsmasq issues - lease was set correctly, but dnsmasq was setting the dhcp-renew-time (and rebind time) to less than 2 years from the date the lease was issued.\r\n\r\nUsing \"infinite\" as the value (instead of the number) works as expected - and (atm) the renew date is set to year 2088, etc.", "committedDate": "2020-02-24T11:29:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MTY3NA==", "url": "https://github.com/apache/cloudstack/pull/3913#discussion_r384551674", "bodyText": "pylint is not accepting this, @andrijapanicsb", "author": "DaanHoogland", "createdAt": "2020-02-26T15:06:22Z", "path": "systemvm/debian/opt/cloud/bin/cs/CsDhcp.py", "diffHunk": "@@ -174,18 +174,15 @@ def write_hosts(self):\n \n     def add(self, entry):\n         self.add_host(entry['ipv4_address'], entry['host_name'])\n-        # Lease time set to effectively infinite (36000+ days) since we properly control all DHCP/DNS config via CloudStack.\n+        # Lease time set to \"infinite\" since we properly control all DHCP/DNS config via CloudStack.\n         # Infinite time helps avoid some edge cases which could cause DHCPNAK being sent to VMs since\n         # (RHEL) system lose routes when they receive DHCPNAK.\n         # When VM is expunged, its active lease and DHCP/DNS config is properly removed from related files in VR,\n         # so the infinite duration of lease does not cause any issues or garbage.\n-        # There will be soon a PR which also regenerates the /var/lib/misc/dnsmasq.leases (active lease DB file)\n-        # in the new VR (when restarting network with cleanup), which will help around RHEL edge cases (described above)\n-        # for the VMs who are already running in productions systems with 30d lease time.\n-        lease = randint(870000, 870010)\n+        lease = 'infinite'\n \n         if entry['default_entry']:\n-            self.cloud.add(\"%s,%s,%s,%sh\" % (entry['mac_address'],\n+            self.cloud.add(\"%s,%s,%s,%s\" % (entry['mac_address'],", "originalCommit": "781d2ab08a25b62d53f80b8ef37d0f81ad0481a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MjIzMw==", "url": "https://github.com/apache/cloudstack/pull/3913#discussion_r384552233", "bodyText": "you need to unindent by one space as you made the base statement one char shorter as well. :P", "author": "DaanHoogland", "createdAt": "2020-02-26T15:07:11Z", "path": "systemvm/debian/opt/cloud/bin/cs/CsDhcp.py", "diffHunk": "@@ -174,18 +174,15 @@ def write_hosts(self):\n \n     def add(self, entry):\n         self.add_host(entry['ipv4_address'], entry['host_name'])\n-        # Lease time set to effectively infinite (36000+ days) since we properly control all DHCP/DNS config via CloudStack.\n+        # Lease time set to \"infinite\" since we properly control all DHCP/DNS config via CloudStack.\n         # Infinite time helps avoid some edge cases which could cause DHCPNAK being sent to VMs since\n         # (RHEL) system lose routes when they receive DHCPNAK.\n         # When VM is expunged, its active lease and DHCP/DNS config is properly removed from related files in VR,\n         # so the infinite duration of lease does not cause any issues or garbage.\n-        # There will be soon a PR which also regenerates the /var/lib/misc/dnsmasq.leases (active lease DB file)\n-        # in the new VR (when restarting network with cleanup), which will help around RHEL edge cases (described above)\n-        # for the VMs who are already running in productions systems with 30d lease time.\n-        lease = randint(870000, 870010)\n+        lease = 'infinite'\n \n         if entry['default_entry']:\n-            self.cloud.add(\"%s,%s,%s,%sh\" % (entry['mac_address'],\n+            self.cloud.add(\"%s,%s,%s,%s\" % (entry['mac_address'],\n                                              entry['ipv4_address'],\n                                              entry['host_name'],\n                                              lease))", "originalCommit": "781d2ab08a25b62d53f80b8ef37d0f81ad0481a5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "940b0c2a5cc684857e8d6309c860bac1f4fd4494", "url": "https://github.com/apache/cloudstack/commit/940b0c2a5cc684857e8d6309c860bac1f4fd4494", "message": "indent", "committedDate": "2020-02-26T15:38:10Z", "type": "commit"}]}