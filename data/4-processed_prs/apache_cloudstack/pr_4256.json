{"pr_number": 4256, "pr_title": "Fix comparison using nullable objects", "pr_createdAt": "2020-08-10T18:49:46Z", "pr_url": "https://github.com/apache/cloudstack/pull/4256", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MDE2Ng==", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468160166", "bodyText": "You do not need to remove the equals here. In this very specific use case, there is no null pointer that can happen here.", "author": "rafaelweingartner", "createdAt": "2020-08-10T20:16:48Z", "path": "utils/src/test/java/com/cloud/utils/TernaryTest.java", "diffHunk": "@@ -28,7 +28,7 @@ public void testEquals() {\n         Assert.assertEquals(new Ternary<String, String, String>(\"a\", \"b\", \"c\"), new Ternary<String, String, String>(\"a\", \"b\", \"c\"));\n         Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(new Ternary<String, String, String>(\"a\", \"b\", \"d\")));\n         Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(\"\"));\n-        Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(null));", "originalCommit": "f22d1ee39b7ab33e0b139e8c5936c849d76c2269", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4MTk1NA==", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468181954", "bodyText": "thanks for the hint, I did not know about this other specific use case.", "author": "RodrigoDLopez", "createdAt": "2020-08-10T20:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MDE2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MTYxNA==", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468161614", "bodyText": "The same here. I do not understand why people coded this check, but it does not cause a null pointer. Moreover, if you change the equals to == here, you are changing the test case.", "author": "rafaelweingartner", "createdAt": "2020-08-10T20:17:47Z", "path": "engine/orchestration/src/test/java/com/cloud/agent/manager/ConnectedAgentAttacheTest.java", "diffHunk": "@@ -44,7 +44,7 @@ public void testEqualsFalseNull() throws Exception {\n \n         ConnectedAgentAttache agentAttache1 = new ConnectedAgentAttache(null, 0, null, link, false);\n \n-        assertFalse(agentAttache1.equals(null));", "originalCommit": "f22d1ee39b7ab33e0b139e8c5936c849d76c2269", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MjAxMA==", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468162010", "bodyText": "This is the only one that makes sense to change.", "author": "rafaelweingartner", "createdAt": "2020-08-10T20:18:13Z", "path": "server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java", "diffHunk": "@@ -2199,7 +2199,7 @@ public Volume migrateVolume(MigrateVolumeCmd cmd) {\n         // OfflineVmwareMigration: check storage tags on disk(offering)s in comparison to destination storage pool\n         // OfflineVmwareMigration: if no match return a proper error now\n         DiskOfferingVO diskOffering = _diskOfferingDao.findById(vol.getDiskOfferingId());\n-        if (diskOffering.equals(null)) {\n+        if (diskOffering == null) {", "originalCommit": "f22d1ee39b7ab33e0b139e8c5936c849d76c2269", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3a3c7e5da8ecba1c2b8effbbcea7b258aad084e3", "url": "https://github.com/apache/cloudstack/commit/3a3c7e5da8ecba1c2b8effbbcea7b258aad084e3", "message": "fix comparison using nullable objects", "committedDate": "2020-08-10T20:39:11Z", "type": "commit"}, {"oid": "3a3c7e5da8ecba1c2b8effbbcea7b258aad084e3", "url": "https://github.com/apache/cloudstack/commit/3a3c7e5da8ecba1c2b8effbbcea7b258aad084e3", "message": "fix comparison using nullable objects", "committedDate": "2020-08-10T20:39:11Z", "type": "forcePushed"}]}