{"pr_number": 2347, "pr_title": "feat: add QueryOptions samples for JDBC", "pr_createdAt": "2020-03-06T13:43:04Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzIyNQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r389063225", "bodyText": "Nice, simple and clear!", "author": "lesv", "createdAt": "2020-03-06T18:15:53Z", "path": "spanner/jdbc/README.md", "diffHunk": "@@ -0,0 +1,36 @@\n+# Cloud Spanner JDBC Example", "originalCommit": "7b764234c138cc43102cf2c4650dce680676bd77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3MTgwMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r390371803", "bodyText": "Thanks :-)", "author": "olavloite", "createdAt": "2020-03-10T14:50:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzIyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzQ0MA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r389063440", "bodyText": "Try 1.0.12 - we are trying to roll it out.", "author": "lesv", "createdAt": "2020-03-06T18:16:21Z", "path": "spanner/jdbc/pom.xml", "diffHunk": "@@ -0,0 +1,94 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <properties>\n+    <maven.compiler.target>1.8</maven.compiler.target>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+  </properties>\n+\n+  <!--\n+    The parent pom defines common style checks and testing strategies for our samples.\n+    Removing or replacing it should not affect the execution of the samples in anyway.\n+  -->\n+  <parent>\n+    <groupId>com.google.cloud.samples</groupId>\n+    <artifactId>shared-configuration</artifactId>\n+    <version>1.0.11</version>", "originalCommit": "7b764234c138cc43102cf2c4650dce680676bd77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3Mjc1MA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r390372750", "bodyText": "Done. Works on my local development environment, so I assume it will also work once the PR this depends on has been merged into the JDBC driver.", "author": "olavloite", "createdAt": "2020-03-10T14:51:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzQ0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzY0OA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r389063648", "bodyText": "Don't use -SNAPSHOT's", "author": "lesv", "createdAt": "2020-03-06T18:16:46Z", "path": "spanner/jdbc/pom.xml", "diffHunk": "@@ -0,0 +1,94 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <properties>\n+    <maven.compiler.target>1.8</maven.compiler.target>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+  </properties>\n+\n+  <!--\n+    The parent pom defines common style checks and testing strategies for our samples.\n+    Removing or replacing it should not affect the execution of the samples in anyway.\n+  -->\n+  <parent>\n+    <groupId>com.google.cloud.samples</groupId>\n+    <artifactId>shared-configuration</artifactId>\n+    <version>1.0.11</version>\n+  </parent>\n+\n+  <groupId>com.example.spanner</groupId>\n+  <artifactId>cloud-spanner-jdbc</artifactId>\n+  <name>Cloud Spanner with JDBC Code Sample</name>\n+  \n+  <!-- [START spanner_jdbc_dependencies] -->\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.grpc</groupId>\n+      <artifactId>grpc-api</artifactId>\n+      <version>1.27.2</version>\n+    </dependency>\n+    <!-- The Spanner JDBC driver dependency -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloud-spanner-jdbc</artifactId>\n+      <version>1.13.1-SNAPSHOT</version>", "originalCommit": "7b764234c138cc43102cf2c4650dce680676bd77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3Mzk1Nw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r390373957", "bodyText": "I'll change that as soon as a version of the JDBC driver with support for QueryOptions has been released. Until then this PR won't build anyways, so it can't be merged by accident either.", "author": "olavloite", "createdAt": "2020-03-10T14:53:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzY0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzgyOQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r389063829", "bodyText": "Not a good idea.", "author": "lesv", "createdAt": "2020-03-06T18:17:13Z", "path": "spanner/jdbc/pom.xml", "diffHunk": "@@ -0,0 +1,94 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <properties>\n+    <maven.compiler.target>1.8</maven.compiler.target>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+  </properties>\n+\n+  <!--\n+    The parent pom defines common style checks and testing strategies for our samples.\n+    Removing or replacing it should not affect the execution of the samples in anyway.\n+  -->\n+  <parent>\n+    <groupId>com.google.cloud.samples</groupId>\n+    <artifactId>shared-configuration</artifactId>\n+    <version>1.0.11</version>\n+  </parent>\n+\n+  <groupId>com.example.spanner</groupId>\n+  <artifactId>cloud-spanner-jdbc</artifactId>\n+  <name>Cloud Spanner with JDBC Code Sample</name>\n+  \n+  <!-- [START spanner_jdbc_dependencies] -->\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.grpc</groupId>\n+      <artifactId>grpc-api</artifactId>\n+      <version>1.27.2</version>\n+    </dependency>\n+    <!-- The Spanner JDBC driver dependency -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloud-spanner-jdbc</artifactId>\n+      <version>1.13.1-SNAPSHOT</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>io.grpc</groupId>\n+          <artifactId>grpc-api</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    \n+    <!-- Test dependencies -->\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>4.13</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.google.truth</groupId>\n+      <artifactId>truth</artifactId>\n+      <version>1.0</version>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+  <!-- [END spanner_jdbc_dependencies] -->\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.codehaus.mojo</groupId>\n+        <artifactId>exec-maven-plugin</artifactId>\n+        <version>1.6.0</version>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>java</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+        <configuration>\n+          <mainClass>com.example.spanner.JdbcSample</mainClass>\n+          <cleanupDaemonThreads>false</cleanupDaemonThreads>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <!-- [START spanner_jdbc_snapshot_repo] -->\n+  <repositories>\n+    <repository>\n+      <id>snapshots-repo</id>\n+      <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n+      <releases><enabled>false</enabled></releases>\n+      <snapshots><enabled>true</enabled></snapshots>\n+    </repository>\n+  </repositories>\n+  <!-- [END spanner_jdbc_snapshot_repo] -->", "originalCommit": "7b764234c138cc43102cf2c4650dce680676bd77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM3NDA1Nw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r390374057", "bodyText": "Removed.", "author": "olavloite", "createdAt": "2020-03-10T14:53:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MzgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NDIxOA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r389064218", "bodyText": "Nice!", "author": "lesv", "createdAt": "2020-03-06T18:18:07Z", "path": "spanner/jdbc/src/main/java/com/example/spanner/JdbcSample.java", "diffHunk": "@@ -0,0 +1,214 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.spanner;\n+\n+import com.google.cloud.spanner.SpannerOptions;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.sql.Types;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/** Example showing how to use the Cloud Spanner open source JDBC driver. */\n+public class JdbcSample {\n+\n+  /** Class to contain singer sample data. */\n+  static class Singer {\n+\n+    final long singerId;\n+    final String firstName;\n+    final String lastName;\n+\n+    Singer(long singerId, String firstName, String lastName) {\n+      this.singerId = singerId;\n+      this.firstName = firstName;\n+      this.lastName = lastName;\n+    }\n+  }\n+\n+  static final List<Singer> SINGERS =\n+      Arrays.asList(\n+          new Singer(1, \"Marc\", \"Richards\"),\n+          new Singer(2, \"Catalina\", \"Smith\"),\n+          new Singer(3, \"Alice\", \"Trentor\"),\n+          new Singer(4, \"Lea\", \"Martin\"),\n+          new Singer(5, \"David\", \"Lomond\"));\n+\n+  /**\n+   * This example shows how to create a JDBC connection and use this to execute queries and updates.\n+   */\n+  public static void main(String[] args) throws Exception {\n+    if (args.length != 3) {\n+      printUsageAndExit();\n+    }\n+\n+    /*\n+     * CREATE TABLE Singers (\n+     *   SingerId   INT64 NOT NULL,\n+     *   FirstName  STRING(1024),\n+     *   LastName   STRING(1024),\n+     *   SingerInfo BYTES(MAX),\n+     * ) PRIMARY KEY (SingerId);\n+     */\n+\n+    String command = args[0];\n+    String projectId = SpannerOptions.getDefaultProjectId();\n+    String instanceId = args[1];\n+    String databaseId = args[2];\n+\n+    String connectionUrl =\n+        String.format(\n+            \"jdbc:cloudspanner:/projects/%s/instances/%s/databases/%s\",\n+            projectId, instanceId, databaseId);", "originalCommit": "7b764234c138cc43102cf2c4650dce680676bd77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NTg1NQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r389065855", "bodyText": "I think we try to avoid using CLI tools for java samples.  I'll approve this since I couldn't find a prohibition in https://github.com/GoogleCloudPlatform/java-docs-samples/blob/master/SAMPLE_FORMAT.md", "author": "lesv", "createdAt": "2020-03-06T18:21:35Z", "path": "spanner/jdbc/src/main/java/com/example/spanner/JdbcSample.java", "diffHunk": "@@ -0,0 +1,214 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.spanner;\n+\n+import com.google.cloud.spanner.SpannerOptions;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.sql.Types;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/** Example showing how to use the Cloud Spanner open source JDBC driver. */\n+public class JdbcSample {\n+\n+  /** Class to contain singer sample data. */\n+  static class Singer {\n+\n+    final long singerId;\n+    final String firstName;\n+    final String lastName;\n+\n+    Singer(long singerId, String firstName, String lastName) {\n+      this.singerId = singerId;\n+      this.firstName = firstName;\n+      this.lastName = lastName;\n+    }\n+  }\n+\n+  static final List<Singer> SINGERS =\n+      Arrays.asList(\n+          new Singer(1, \"Marc\", \"Richards\"),\n+          new Singer(2, \"Catalina\", \"Smith\"),\n+          new Singer(3, \"Alice\", \"Trentor\"),\n+          new Singer(4, \"Lea\", \"Martin\"),\n+          new Singer(5, \"David\", \"Lomond\"));\n+\n+  /**\n+   * This example shows how to create a JDBC connection and use this to execute queries and updates.\n+   */\n+  public static void main(String[] args) throws Exception {\n+    if (args.length != 3) {\n+      printUsageAndExit();\n+    }\n+\n+    /*\n+     * CREATE TABLE Singers (\n+     *   SingerId   INT64 NOT NULL,\n+     *   FirstName  STRING(1024),\n+     *   LastName   STRING(1024),\n+     *   SingerInfo BYTES(MAX),\n+     * ) PRIMARY KEY (SingerId);\n+     */\n+\n+    String command = args[0];\n+    String projectId = SpannerOptions.getDefaultProjectId();\n+    String instanceId = args[1];\n+    String databaseId = args[2];\n+\n+    String connectionUrl =\n+        String.format(\n+            \"jdbc:cloudspanner:/projects/%s/instances/%s/databases/%s\",\n+            projectId, instanceId, databaseId);\n+    try (Connection connection = DriverManager.getConnection(connectionUrl)) {\n+      run(command, connection, projectId, instanceId, databaseId);\n+    }\n+  }\n+\n+  static void run(\n+      String command, Connection connection, String projectId, String instanceId, String databaseId)\n+      throws SQLException {\n+    switch (command) {\n+      case \"createtable\":\n+        createTable(connection);\n+        break;\n+      case \"insertdata\":\n+        insertData(connection);\n+        break;\n+      case \"connectionwithqueryoptions\":\n+        connectionWithQueryOptions(projectId, instanceId, databaseId);\n+        break;\n+      case \"setqueryoptions\":\n+        setQueryOptions(projectId, instanceId, databaseId);\n+        break;\n+      default:\n+        printUsageAndExit();\n+    }\n+  }\n+\n+  static void printUsageAndExit() {\n+    System.err.println(\"Usage:\");\n+    System.err.println(\"    JdbcSample <command> <instance_id> <database_id>\");\n+    System.err.println(\"\");\n+    System.err.println(\"Examples:\");\n+    System.err.println(\"    JdbcSample createtable my-instance example-db\");\n+    System.err.println(\"    JdbcSample insertdata my-instance example-db\");\n+    System.err.println(\"    JdbcSample connectionwithqueryoptions my-instance example-db\");\n+    System.err.println(\"    JdbcSample setqueryoptions my-instance example-db\");\n+\n+    System.exit(1);\n+  }", "originalCommit": "7b764234c138cc43102cf2c4650dce680676bd77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM5MzMxNg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r390393316", "bodyText": "This is modeled to work in the same way as the existing SpannerSample samples: \n  \n    \n      java-docs-samples/spanner/cloud-client/src/main/java/com/example/spanner/SpannerSample.java\n    \n    \n        Lines 1597 to 1610\n      in\n      c3c4600\n    \n    \n    \n    \n\n        \n          \n           static void printUsageAndExit() { \n        \n\n        \n          \n             System.err.println(\"Usage:\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample <command> <instance_id> <database_id>\"); \n        \n\n        \n          \n             System.err.println(\"\"); \n        \n\n        \n          \n             System.err.println(\"Examples:\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample createdatabase my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample write my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample delete my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample query my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample read my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample addmarketingbudget my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample update my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample writetransaction my-instance example-db\"); \n        \n\n        \n          \n             System.err.println(\"    SpannerExample querymarketingbudget my-instance example-db\");", "author": "olavloite", "createdAt": "2020-03-10T15:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NTg1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA3NjAyOA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r389076028", "bodyText": "Do we need to add something in Java-Docs-Samples-Testing for this?", "author": "lesv", "createdAt": "2020-03-06T18:42:31Z", "path": "spanner/jdbc/src/test/java/com/example/spanner/JdbcSampleIT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.spanner;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.spanner.DatabaseAdminClient;\n+import com.google.cloud.spanner.DatabaseId;\n+import com.google.cloud.spanner.Spanner;\n+import com.google.cloud.spanner.SpannerOptions;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.Collections;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+/** Unit tests for {@code JdbcSample} */\n+@RunWith(JUnit4.class)\n+public class JdbcSampleIT {\n+  // The instance needs to exist for tests to pass.\n+  private final String instanceId = System.getProperty(\"spanner.test.instance\");\n+  private final String databaseId = formatForTest(System.getProperty(\"spanner.sample.database\"));", "originalCommit": "7b764234c138cc43102cf2c4650dce680676bd77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM5MzEwMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r390393103", "bodyText": "No, AFAICT this should work out of the box. This is also modeled to work exactly as the existing SpannerSampleIT: \n  \n    \n      java-docs-samples/spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java\n    \n    \n        Lines 39 to 40\n      in\n      c3c4600\n    \n    \n    \n    \n\n        \n          \n           private final String instanceId = System.getProperty(\"spanner.test.instance\"); \n        \n\n        \n          \n           private final String databaseId = formatForTest(System.getProperty(\"spanner.sample.database\"));", "author": "olavloite", "createdAt": "2020-03-10T15:17:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA3NjAyOA=="}], "type": "inlineReview"}, {"oid": "f45d9d41a8f614262d25874bb3fca7d0a3d46c94", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/f45d9d41a8f614262d25874bb3fca7d0a3d46c94", "message": "feat: add QueryOptions samples for JDBC", "committedDate": "2020-03-24T11:03:57Z", "type": "commit"}, {"oid": "3fa6e08d935ce7597e0cc9c0f14ff26c73879c5c", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/3fa6e08d935ce7597e0cc9c0f14ff26c73879c5c", "message": "fix: review comments", "committedDate": "2020-03-24T11:03:57Z", "type": "commit"}, {"oid": "ad9b4ac752307010fa7c9e6cb3f7199bf6fe14a3", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ad9b4ac752307010fa7c9e6cb3f7199bf6fe14a3", "message": "deps: update to most recent jdbc version", "committedDate": "2020-03-24T11:03:57Z", "type": "commit"}, {"oid": "ad9b4ac752307010fa7c9e6cb3f7199bf6fe14a3", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ad9b4ac752307010fa7c9e6cb3f7199bf6fe14a3", "message": "deps: update to most recent jdbc version", "committedDate": "2020-03-24T11:03:57Z", "type": "forcePushed"}, {"oid": "d51b7cf2c91b6213714e3b5bc0fd150fdb19c3ca", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d51b7cf2c91b6213714e3b5bc0fd150fdb19c3ca", "message": "Merge branch 'master' into spanner-jdbc-query-options", "committedDate": "2020-03-24T23:25:01Z", "type": "commit"}, {"oid": "b7bbd3b207da2f9fcfdc6655f2ee3f69ee42e84b", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b7bbd3b207da2f9fcfdc6655f2ee3f69ee42e84b", "message": "Merge branch 'master' into spanner-jdbc-query-options", "committedDate": "2020-03-25T04:08:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYwMDM0MA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r397600340", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String optimizerVersion = \"LATEST\";\n          \n          \n            \n                String optimizerVersion = \"1\";", "author": "skuruppu", "createdAt": "2020-03-25T04:14:20Z", "path": "spanner/jdbc/src/main/java/com/example/spanner/JdbcSample.java", "diffHunk": "@@ -0,0 +1,214 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.spanner;\n+\n+import com.google.cloud.spanner.SpannerOptions;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.sql.Types;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/** Example showing how to use the Cloud Spanner open source JDBC driver. */\n+public class JdbcSample {\n+\n+  /** Class to contain singer sample data. */\n+  static class Singer {\n+\n+    final long singerId;\n+    final String firstName;\n+    final String lastName;\n+\n+    Singer(long singerId, String firstName, String lastName) {\n+      this.singerId = singerId;\n+      this.firstName = firstName;\n+      this.lastName = lastName;\n+    }\n+  }\n+\n+  static final List<Singer> SINGERS =\n+      Arrays.asList(\n+          new Singer(1, \"Marc\", \"Richards\"),\n+          new Singer(2, \"Catalina\", \"Smith\"),\n+          new Singer(3, \"Alice\", \"Trentor\"),\n+          new Singer(4, \"Lea\", \"Martin\"),\n+          new Singer(5, \"David\", \"Lomond\"));\n+\n+  /**\n+   * This example shows how to create a JDBC connection and use this to execute queries and updates.\n+   */\n+  public static void main(String[] args) throws Exception {\n+    if (args.length != 3) {\n+      printUsageAndExit();\n+    }\n+\n+    /*\n+     * CREATE TABLE Singers (\n+     *   SingerId   INT64 NOT NULL,\n+     *   FirstName  STRING(1024),\n+     *   LastName   STRING(1024),\n+     *   SingerInfo BYTES(MAX),\n+     * ) PRIMARY KEY (SingerId);\n+     */\n+\n+    String command = args[0];\n+    String projectId = SpannerOptions.getDefaultProjectId();\n+    String instanceId = args[1];\n+    String databaseId = args[2];\n+\n+    String connectionUrl =\n+        String.format(\n+            \"jdbc:cloudspanner:/projects/%s/instances/%s/databases/%s\",\n+            projectId, instanceId, databaseId);\n+    try (Connection connection = DriverManager.getConnection(connectionUrl)) {\n+      run(command, connection, projectId, instanceId, databaseId);\n+    }\n+  }\n+\n+  static void run(\n+      String command, Connection connection, String projectId, String instanceId, String databaseId)\n+      throws SQLException {\n+    switch (command) {\n+      case \"createtable\":\n+        createTable(connection);\n+        break;\n+      case \"insertdata\":\n+        insertData(connection);\n+        break;\n+      case \"connectionwithqueryoptions\":\n+        connectionWithQueryOptions(projectId, instanceId, databaseId);\n+        break;\n+      case \"setqueryoptions\":\n+        setQueryOptions(projectId, instanceId, databaseId);\n+        break;\n+      default:\n+        printUsageAndExit();\n+    }\n+  }\n+\n+  static void printUsageAndExit() {\n+    System.err.println(\"Usage:\");\n+    System.err.println(\"    JdbcSample <command> <instance_id> <database_id>\");\n+    System.err.println(\"\");\n+    System.err.println(\"Examples:\");\n+    System.err.println(\"    JdbcSample createtable my-instance example-db\");\n+    System.err.println(\"    JdbcSample insertdata my-instance example-db\");\n+    System.err.println(\"    JdbcSample connectionwithqueryoptions my-instance example-db\");\n+    System.err.println(\"    JdbcSample setqueryoptions my-instance example-db\");\n+\n+    System.exit(1);\n+  }\n+\n+  static void createTable(Connection connection) throws SQLException {\n+    try (Statement statement = connection.createStatement()) {\n+      statement.execute(\n+          \"CREATE TABLE Singers (\\n\"\n+              + \"              SingerId   INT64 NOT NULL,\\n\"\n+              + \"              FirstName  STRING(1024),\\n\"\n+              + \"              LastName   STRING(1024),\\n\"\n+              + \"              SingerInfo BYTES(MAX),\\n\"\n+              + \"              ) PRIMARY KEY (SingerId)\\n\");\n+    }\n+    System.out.println(\"Created table [Singers]\");\n+  }\n+\n+  static void insertData(Connection connection) throws SQLException {\n+    boolean originalAutoCommit = connection.getAutoCommit();\n+    connection.setAutoCommit(false);\n+    try (PreparedStatement ps =\n+        connection.prepareStatement(\n+            \"INSERT INTO Singers\\n\"\n+                + \"(SingerId, FirstName, LastName, SingerInfo)\\n\"\n+                + \"VALUES\\n\"\n+                + \"(?, ?, ?, ?)\")) {\n+      for (Singer singer : SINGERS) {\n+        ps.setLong(1, singer.singerId);\n+        ps.setString(2, singer.firstName);\n+        ps.setString(3, singer.lastName);\n+        ps.setNull(4, Types.BINARY);\n+        ps.addBatch();\n+      }\n+      int[] updateCounts = ps.executeBatch();\n+      connection.commit();\n+      System.out.printf(\"Insert counts: %s\\n\", Arrays.toString(updateCounts));\n+    } finally {\n+      connection.setAutoCommit(originalAutoCommit);\n+    }\n+  }\n+\n+  // [START spanner_jdbc_connection_with_query_options]\n+  static void connectionWithQueryOptions(String projectId, String instanceId, String databaseId)\n+      throws SQLException {\n+    String optimizerVersion = \"LATEST\";", "originalCommit": "b7bbd3b207da2f9fcfdc6655f2ee3f69ee42e84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4MzMyMg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r397683322", "bodyText": "Done", "author": "olavloite", "createdAt": "2020-03-25T08:38:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYwMDM0MA=="}], "type": "inlineReview"}, {"oid": "066d0310d1be9e8faeb9c6e55b18bbbf8d16374d", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/066d0310d1be9e8faeb9c6e55b18bbbf8d16374d", "message": "Fix google-cloud-spanner-jdbc version", "committedDate": "2020-03-25T04:18:51Z", "type": "commit"}, {"oid": "83a587edbde3016dd6bb68c9b033c59688b29cc5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/83a587edbde3016dd6bb68c9b033c59688b29cc5", "message": "fix: fix test cases and jdbc version", "committedDate": "2020-03-25T08:37:33Z", "type": "commit"}, {"oid": "8d96d083b85d3adf5405ae565d1f6bbbe1d1ef23", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8d96d083b85d3adf5405ae565d1f6bbbe1d1ef23", "message": "Merge branch 'spanner-jdbc-query-options' of github.com:olavloite/java-docs-samples into spanner-jdbc-query-options", "committedDate": "2020-03-25T08:37:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAyOTMyMQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r398029321", "bodyText": "1.0.13 now", "author": "lesv", "createdAt": "2020-03-25T17:16:06Z", "path": "spanner/jdbc/pom.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <properties>\n+    <maven.compiler.target>1.8</maven.compiler.target>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+  </properties>\n+\n+  <!--\n+    The parent pom defines common style checks and testing strategies for our samples.\n+    Removing or replacing it should not affect the execution of the samples in anyway.\n+  -->\n+  <parent>\n+    <groupId>com.google.cloud.samples</groupId>\n+    <artifactId>shared-configuration</artifactId>\n+    <version>1.0.12</version>", "originalCommit": "8d96d083b85d3adf5405ae565d1f6bbbe1d1ef23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4ODcwNA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r398188704", "bodyText": "Done", "author": "olavloite", "createdAt": "2020-03-25T21:43:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAyOTMyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAyOTkyNQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r398029925", "bodyText": "1.0.1", "author": "lesv", "createdAt": "2020-03-25T17:16:52Z", "path": "spanner/jdbc/pom.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <properties>\n+    <maven.compiler.target>1.8</maven.compiler.target>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+  </properties>\n+\n+  <!--\n+    The parent pom defines common style checks and testing strategies for our samples.\n+    Removing or replacing it should not affect the execution of the samples in anyway.\n+  -->\n+  <parent>\n+    <groupId>com.google.cloud.samples</groupId>\n+    <artifactId>shared-configuration</artifactId>\n+    <version>1.0.12</version>\n+  </parent>\n+\n+  <groupId>com.example.spanner</groupId>\n+  <artifactId>cloud-spanner-jdbc</artifactId>\n+  <name>Cloud Spanner with JDBC Code Sample</name>\n+  \n+  <!-- [START spanner_jdbc_dependencies] -->\n+  <dependencies>\n+    <!-- The Spanner JDBC driver dependency -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloud-spanner-jdbc</artifactId>\n+      <version>1.15.0</version>\n+    </dependency>\n+    \n+    <!-- Test dependencies -->\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>4.13</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.google.truth</groupId>\n+      <artifactId>truth</artifactId>\n+      <version>1.0</version>", "originalCommit": "8d96d083b85d3adf5405ae565d1f6bbbe1d1ef23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4ODY0OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2347#discussion_r398188649", "bodyText": "Done.", "author": "olavloite", "createdAt": "2020-03-25T21:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAyOTkyNQ=="}], "type": "inlineReview"}, {"oid": "ac63ae1d755219ba57b4355e4a8d7b73e4ec289e", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ac63ae1d755219ba57b4355e4a8d7b73e4ec289e", "message": "fix: fix dependency versions", "committedDate": "2020-03-25T17:30:46Z", "type": "commit"}, {"oid": "8f896045ff77a33196656a02b65793a66f615683", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8f896045ff77a33196656a02b65793a66f615683", "message": "fix: use default db and instance", "committedDate": "2020-03-25T20:46:55Z", "type": "commit"}, {"oid": "6cf6e1ed4f266aa70cd36bafee52eb0fb293b2db", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/6cf6e1ed4f266aa70cd36bafee52eb0fb293b2db", "message": "fix: remove unused import", "committedDate": "2020-03-25T20:47:22Z", "type": "commit"}, {"oid": "c69e653fff4b3f77c9c6f5c13eba19c8747f1d3e", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c69e653fff4b3f77c9c6f5c13eba19c8747f1d3e", "message": "Merge branch 'master' into spanner-jdbc-query-options", "committedDate": "2020-03-25T21:02:24Z", "type": "commit"}, {"oid": "cbb0e65e0382250b87ea94f2af7c15881d6bf111", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/cbb0e65e0382250b87ea94f2af7c15881d6bf111", "message": "Merge branch 'master' into spanner-jdbc-query-options", "committedDate": "2020-03-25T21:25:17Z", "type": "commit"}]}