{"pr_number": 2520, "pr_title": "[GCF] Add ImageMagick samples", "pr_createdAt": "2020-03-30T10:19:42Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520", "timeline": [{"oid": "1c12aca638e86b9efb6126ee48b6923f7a1a8f2a", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1c12aca638e86b9efb6126ee48b6923f7a1a8f2a", "message": "Add GCF imagemagick sample", "committedDate": "2020-03-26T20:41:23Z", "type": "commit"}, {"oid": "fa636a728604b1170e149c5a34a202138615b485", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/fa636a728604b1170e149c5a34a202138615b485", "message": "Add imagemagick samples", "committedDate": "2020-03-30T10:08:12Z", "type": "commit"}, {"oid": "4f2f5fcea42b5e38b35bef091843fb4db9e8f356", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4f2f5fcea42b5e38b35bef091843fb4db9e8f356", "message": "Merge branch 'master' into gcf-imagick", "committedDate": "2020-03-30T10:19:52Z", "type": "commit"}, {"oid": "e981310bbbc585166ead2a2c242e8be5179036ab", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/e981310bbbc585166ead2a2c242e8be5179036ab", "message": "Merge branch 'master' into gcf-imagick", "committedDate": "2020-03-30T16:48:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0Njc5Mg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400346792", "bodyText": "4.0.0", "author": "lesv", "createdAt": "2020-03-30T16:56:48Z", "path": "functions/snippets/pom.xml", "diffHunk": "@@ -27,7 +27,30 @@\n     <groovy.version>3.0.2</groovy.version>\n   </properties>\n \n+  <!-- Required for com.example.functions.ImageMagick -->\n+  <dependencyManagement>\n+   <dependencies>\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>libraries-bom</artifactId>\n+      <version>3.2.0</version>", "originalCommit": "e981310bbbc585166ead2a2c242e8be5179036ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NzM3Mg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400347372", "bodyText": "You can be explicit here if you wish, though, I'd pick a bucket w/ very little else in it.", "author": "lesv", "createdAt": "2020-03-30T16:57:40Z", "path": "functions/snippets/src/main/java/com/example/functions/ImageMagick.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.functions;\n+\n+// [START functions_imagemagick_setup]\n+import com.google.cloud.functions.BackgroundFunction;\n+import com.google.cloud.functions.Context;\n+import com.google.cloud.storage.Blob;\n+import com.google.cloud.storage.BlobId;\n+import com.google.cloud.storage.BlobInfo;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageOptions;\n+import com.google.cloud.vision.v1.AnnotateImageRequest;\n+import com.google.cloud.vision.v1.AnnotateImageResponse;\n+import com.google.cloud.vision.v1.BatchAnnotateImagesResponse;\n+import com.google.cloud.vision.v1.Feature;\n+import com.google.cloud.vision.v1.Feature.Type;\n+import com.google.cloud.vision.v1.Image;\n+import com.google.cloud.vision.v1.ImageAnnotatorClient;\n+import com.google.cloud.vision.v1.ImageSource;\n+import com.google.cloud.vision.v1.SafeSearchAnnotation;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+public class ImageMagick implements BackgroundFunction<GcsEvent> {\n+\n+  private static Storage storage = StorageOptions.getDefaultInstance().getService();\n+  private static final String BLURRED_BUCKET_NAME = System.getenv(\"BLURRED_BUCKET_NAME\");", "originalCommit": "e981310bbbc585166ead2a2c242e8be5179036ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyMjAwNw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400422007", "bodyText": "This is supposed to be a user-specified bucket. I'll add a README that states that.", "author": "ace-n", "createdAt": "2020-03-30T18:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NzM3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MzQ5Ng==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400353496", "bodyText": "We should make sure you have an empty bucket for this if you are letting users provide the event.", "author": "lesv", "createdAt": "2020-03-30T17:07:26Z", "path": "functions/snippets/src/main/java/com/example/functions/ImageMagick.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.functions;\n+\n+// [START functions_imagemagick_setup]\n+import com.google.cloud.functions.BackgroundFunction;\n+import com.google.cloud.functions.Context;\n+import com.google.cloud.storage.Blob;\n+import com.google.cloud.storage.BlobId;\n+import com.google.cloud.storage.BlobInfo;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageOptions;\n+import com.google.cloud.vision.v1.AnnotateImageRequest;\n+import com.google.cloud.vision.v1.AnnotateImageResponse;\n+import com.google.cloud.vision.v1.BatchAnnotateImagesResponse;\n+import com.google.cloud.vision.v1.Feature;\n+import com.google.cloud.vision.v1.Feature.Type;\n+import com.google.cloud.vision.v1.Image;\n+import com.google.cloud.vision.v1.ImageAnnotatorClient;\n+import com.google.cloud.vision.v1.ImageSource;\n+import com.google.cloud.vision.v1.SafeSearchAnnotation;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+public class ImageMagick implements BackgroundFunction<GcsEvent> {\n+\n+  private static Storage storage = StorageOptions.getDefaultInstance().getService();\n+  private static final String BLURRED_BUCKET_NAME = System.getenv(\"BLURRED_BUCKET_NAME\");\n+  private static final Logger LOGGER = Logger.getLogger(ImageMagick.class.getName());\n+  // [END functions_imagemagick_setup]\n+\n+  // [START functions_imagemagick_analyze]\n+  @Override\n+  // Blurs uploaded images that are flagged as Adult or Violence.\n+  public void accept(GcsEvent gcsEvent, Context context) {\n+    BlobInfo blobInfo = BlobInfo.newBuilder(gcsEvent.getBucket(), gcsEvent.getName()).build();\n+\n+    // Construct URI to GCS bucket and file.\n+    String gcsPath = String.format(\"gs://%s/%s\", gcsEvent.getBucket(), gcsEvent.getName());", "originalCommit": "e981310bbbc585166ead2a2c242e8be5179036ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1NzgwNg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400357806", "bodyText": "There should be a WARNING: In production, you would not want to allow users the ability to provide unsanitized requests directly to APIs.", "author": "lesv", "createdAt": "2020-03-30T17:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MzQ5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyNzgyNw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400427827", "bodyText": "This is a storage-triggered function - so I'm assuming the request can only come from GCS?\n(Perhaps it's still worth adding a comment to that effect, or maybe something like WARNING: even though this request comes directly from Cloud Storage, it's still a good idea to sanitize it in production to prevent directory traversal attacks)", "author": "ace-n", "createdAt": "2020-03-30T19:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MzQ5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUwNDk0Ng==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400504946", "bodyText": "yes", "author": "lesv", "createdAt": "2020-03-30T21:27:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MzQ5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1NjA0OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400356049", "bodyText": "If users can blindly play w/ our buckets we should talk.", "author": "lesv", "createdAt": "2020-03-30T17:11:40Z", "path": "functions/snippets/src/main/java/com/example/functions/ImageMagick.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.functions;\n+\n+// [START functions_imagemagick_setup]\n+import com.google.cloud.functions.BackgroundFunction;\n+import com.google.cloud.functions.Context;\n+import com.google.cloud.storage.Blob;\n+import com.google.cloud.storage.BlobId;\n+import com.google.cloud.storage.BlobInfo;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageOptions;\n+import com.google.cloud.vision.v1.AnnotateImageRequest;\n+import com.google.cloud.vision.v1.AnnotateImageResponse;\n+import com.google.cloud.vision.v1.BatchAnnotateImagesResponse;\n+import com.google.cloud.vision.v1.Feature;\n+import com.google.cloud.vision.v1.Feature.Type;\n+import com.google.cloud.vision.v1.Image;\n+import com.google.cloud.vision.v1.ImageAnnotatorClient;\n+import com.google.cloud.vision.v1.ImageSource;\n+import com.google.cloud.vision.v1.SafeSearchAnnotation;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+public class ImageMagick implements BackgroundFunction<GcsEvent> {\n+\n+  private static Storage storage = StorageOptions.getDefaultInstance().getService();\n+  private static final String BLURRED_BUCKET_NAME = System.getenv(\"BLURRED_BUCKET_NAME\");\n+  private static final Logger LOGGER = Logger.getLogger(ImageMagick.class.getName());\n+  // [END functions_imagemagick_setup]\n+\n+  // [START functions_imagemagick_analyze]\n+  @Override\n+  // Blurs uploaded images that are flagged as Adult or Violence.\n+  public void accept(GcsEvent gcsEvent, Context context) {\n+    BlobInfo blobInfo = BlobInfo.newBuilder(gcsEvent.getBucket(), gcsEvent.getName()).build();", "originalCommit": "e981310bbbc585166ead2a2c242e8be5179036ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyODY5Nw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400428697", "bodyText": "They can't - all they can do is download (read) the zombie.jpg and wakeupcat.jpg files needed to run this test.\n(They have to specify a separate bucket to upload the blurred file to, as per the README I added.)", "author": "ace-n", "createdAt": "2020-03-30T19:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1NjA0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2MDk5OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400360999", "bodyText": "These can be pre-existing buckets.", "author": "lesv", "createdAt": "2020-03-30T17:19:17Z", "path": "functions/snippets/src/test/java/com/example/functions/ImageMagickTests.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.functions;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.common.testing.TestLogHandler;\n+import com.google.gson.Gson;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.logging.LogRecord;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.contrib.java.lang.system.EnvironmentVariables;\n+\n+public class ImageMagickTests {\n+  private static String BUCKET_NAME = System.getenv(\"FUNCTIONS_BUCKET\");\n+  private static String BLURRED_BUCKET_NAME = System.getenv(\"BLURRED_BUCKET_NAME\");", "originalCommit": "e981310bbbc585166ead2a2c242e8be5179036ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2MTIyMQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400361221", "bodyText": "and well known.", "author": "lesv", "createdAt": "2020-03-30T17:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2MDk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyOTE0MA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2520#discussion_r400429140", "bodyText": "BUCKET_NAME now points to nodejs-docs-samples-tests.", "author": "ace-n", "createdAt": "2020-03-30T19:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2MDk5OQ=="}], "type": "inlineReview"}, {"oid": "531605c635385e9fa68aa0000135a66516eccdd6", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/531605c635385e9fa68aa0000135a66516eccdd6", "message": "Make test image publicly available", "committedDate": "2020-03-30T18:56:02Z", "type": "commit"}, {"oid": "c3f78f9fe63afe10309f19fa3d19fb829a712966", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c3f78f9fe63afe10309f19fa3d19fb829a712966", "message": "Update bom + optimize imports", "committedDate": "2020-03-30T19:39:11Z", "type": "commit"}, {"oid": "bf4c14016221daf099347f75ad1ba1312b3c2c80", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/bf4c14016221daf099347f75ad1ba1312b3c2c80", "message": "Merge branch 'master' into gcf-imagick", "committedDate": "2020-03-30T19:39:46Z", "type": "commit"}, {"oid": "62a6c6a2417ec51e250dc6f3402aefeda7f27a7d", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/62a6c6a2417ec51e250dc6f3402aefeda7f27a7d", "message": "Add comments explaining bucket name origins", "committedDate": "2020-03-30T20:00:32Z", "type": "commit"}, {"oid": "c335844456bd2d1b865165a08779886aff169281", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c335844456bd2d1b865165a08779886aff169281", "message": "Merge branch 'master' into gcf-imagick", "committedDate": "2020-03-30T22:36:58Z", "type": "commit"}, {"oid": "edb74d9ed1213740f6e44a90cf2e00c4862c4043", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/edb74d9ed1213740f6e44a90cf2e00c4862c4043", "message": "Merge branch 'master' into gcf-imagick", "committedDate": "2020-03-31T19:32:03Z", "type": "commit"}, {"oid": "0b4438b7da792da9d079b5d93ed1334848d23dc1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/0b4438b7da792da9d079b5d93ed1334848d23dc1", "message": "Merge branch 'master' into gcf-imagick", "committedDate": "2020-04-01T22:05:17Z", "type": "commit"}, {"oid": "8335f2138a60cb012a9c33f838092bad7cd68462", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8335f2138a60cb012a9c33f838092bad7cd68462", "message": "Merge branch 'master' into gcf-imagick", "committedDate": "2020-04-01T22:46:43Z", "type": "commit"}]}