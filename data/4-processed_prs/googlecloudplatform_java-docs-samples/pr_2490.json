{"pr_number": 2490, "pr_title": "Update Bigtable+Beam hello world examples and move them into java-docs-samples", "pr_createdAt": "2020-03-25T21:38:03Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2490", "timeline": [{"oid": "90cdaa810c51d5c044b5991abcbe5583c5a50e36", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/90cdaa810c51d5c044b5991abcbe5583c5a50e36", "message": "Hello world reads and writes for beam, tests working", "committedDate": "2020-03-25T20:43:41Z", "type": "commit"}, {"oid": "b8620f1f8fc241447ec23f784ed0981764926620", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b8620f1f8fc241447ec23f784ed0981764926620", "message": "Add region tags", "committedDate": "2020-03-25T21:35:45Z", "type": "commit"}, {"oid": "9c2e707e0ff370504a5936335bb6ef247178203d", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/9c2e707e0ff370504a5936335bb6ef247178203d", "message": "Merge branch 'master' into beam-hello", "committedDate": "2020-03-25T21:38:11Z", "type": "commit"}, {"oid": "d4448a4679c034b764acfd68cb74c348d4a8d9a8", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d4448a4679c034b764acfd68cb74c348d4a8d9a8", "message": "Merge branch 'master' into beam-hello", "committedDate": "2020-03-25T21:45:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxMzQ1OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2490#discussion_r398713459", "bodyText": "Should be end, sorry to hit merge", "author": "lesv", "createdAt": "2020-03-26T16:30:05Z", "path": "bigtable/beam/helloworld/src/main/java/HelloWorldWrite.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+// [START bigtable_beam_helloworld_write]\n+import com.google.cloud.bigtable.beam.CloudBigtableIO;\n+import com.google.cloud.bigtable.beam.CloudBigtableTableConfiguration;\n+import org.apache.beam.runners.dataflow.options.DataflowPipelineOptions;\n+import org.apache.beam.sdk.Pipeline;\n+import org.apache.beam.sdk.options.Default;\n+import org.apache.beam.sdk.options.Description;\n+import org.apache.beam.sdk.options.PipelineOptionsFactory;\n+import org.apache.beam.sdk.transforms.Create;\n+import org.apache.beam.sdk.transforms.DoFn;\n+import org.apache.beam.sdk.transforms.ParDo;\n+import org.apache.hadoop.hbase.client.Mutation;\n+import org.apache.hadoop.hbase.client.Put;\n+import org.apache.hadoop.hbase.util.Bytes;\n+\n+public class HelloWorldWrite {\n+  public static void main(String[] args) {\n+    // [START bigtable_beam_helloworld_create_pipeline]\n+    BigtableOptions options =\n+        PipelineOptionsFactory.fromArgs(args).withValidation().as(BigtableOptions.class);\n+    Pipeline p = Pipeline.create(options);\n+    // [END bigtable_beam_helloworld_create_pipeline]\n+\n+    // [START bigtable_beam_helloworld_write_config]\n+    CloudBigtableTableConfiguration bigtableTableConfig =\n+        new CloudBigtableTableConfiguration.Builder()\n+            .withProjectId(options.getBigtableProjectId())\n+            .withInstanceId(options.getBigtableInstanceId())\n+            .withTableId(options.getBigtableTableId())\n+            .build();\n+    // [END bigtable_beam_helloworld_write_config]\n+\n+    // [START bigtable_beam_helloworld_write_transforms]\n+    p.apply(Create.of(\"phone#4c410523#20190501\", \"phone#4c410523#20190502\"))\n+        .apply(\n+            ParDo.of(\n+                new DoFn<String, Mutation>() {\n+                  @ProcessElement\n+                  public void processElement(@Element String rowkey, OutputReceiver<Mutation> out) {\n+                    long timestamp = System.currentTimeMillis();\n+                    Put row = new Put(Bytes.toBytes(rowkey));\n+\n+                    row.addColumn(\n+                        Bytes.toBytes(\"stats_summary\"),\n+                        Bytes.toBytes(\"os_build\"),\n+                        timestamp,\n+                        Bytes.toBytes(\"android\"));\n+                    out.output(row);\n+                  }\n+                }))\n+        .apply(CloudBigtableIO.writeToTable(bigtableTableConfig));\n+    // [START bigtable_beam_helloworld_write_transforms]", "originalCommit": "d4448a4679c034b764acfd68cb74c348d4a8d9a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}