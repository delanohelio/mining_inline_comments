{"pr_number": 4495, "pr_title": "Add tests for Cloud SQL samples", "pr_createdAt": "2020-12-30T05:07:15Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495", "timeline": [{"oid": "dc5a490c2586437f89e932b3a334d32007925f5e", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/dc5a490c2586437f89e932b3a334d32007925f5e", "message": "reformat files", "committedDate": "2020-12-30T10:49:30Z", "type": "forcePushed"}, {"oid": "d87593f2bcdb5e2296cb5eac0515ddc2bf0018ef", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d87593f2bcdb5e2296cb5eac0515ddc2bf0018ef", "message": "reformat files", "committedDate": "2020-12-30T10:51:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI2MDYyOA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r550260628", "bodyText": "Have you already set this up? If not we can use secret manager instead.", "author": "averikitsch", "createdAt": "2020-12-30T16:56:19Z", "path": ".kokoro/tests/run_tests.sh", "diffHunk": "@@ -78,6 +78,8 @@ if [[ \"$SCRIPT_DEBUG\" != \"true\" ]]; then\n     source \"${KOKORO_GFILE_DIR}/firestore_secrets.txt\"\n     # spellcheck source=src/cts_v4_secrets.txt\n     source \"${KOKORO_GFILE_DIR}/cts_v4_secrets.txt\"\n+    # shellcheck source=src/cloud_sql_secrets.txt\n+    source \"${KOKORO_GFILE_DIR}/cloud_sql_secrets.txt\"", "originalCommit": "d87593f2bcdb5e2296cb5eac0515ddc2bf0018ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4NDc2OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r550284769", "bodyText": "I have but it's not working, so let's try using Secret Manager instead if I can't figure it out in the next hour or so. I think it's reading in the variables correctly but I'm not sure.", "author": "shubha-rajan", "createdAt": "2020-12-30T18:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI2MDYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI5NTg4NA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r550295884", "bodyText": "sgtm. Dropping this example if you decided to switch https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/master/.kokoro/build-with-run.sh#L92", "author": "averikitsch", "createdAt": "2020-12-30T19:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI2MDYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMxMjgzMg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r550312832", "bodyText": "Got it working using the secrets file in Cloud Devrel Kokoro Resources. I think for now we can keep this setup, but eventually we should start migrating all the secrets to secret manager.", "author": "shubha-rajan", "createdAt": "2020-12-30T20:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI2MDYyOA=="}], "type": "inlineReview"}, {"oid": "2bffdecbc745aafb03b7c490a4fbf9dace306c8b", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2bffdecbc745aafb03b7c490a4fbf9dace306c8b", "message": "create table before tests", "committedDate": "2020-12-30T18:46:48Z", "type": "forcePushed"}, {"oid": "ea652ba79b279fc493d7401165984951dc2cc934", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ea652ba79b279fc493d7401165984951dc2cc934", "message": "create table before tests", "committedDate": "2020-12-30T19:26:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA4NzAwMw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r552087003", "bodyText": "update year for new files", "author": "averikitsch", "createdAt": "2021-01-05T17:38:56Z", "path": "cloud-sql/mysql/servlet/src/test/java/com/TestIndexServlet.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2018 Google LLC", "originalCommit": "25bd4aa0dd53893e5c1e68de9a5dbc072bdd04f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE1ODE2Mg==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r552158162", "bodyText": "It's probably more idiomatic to return a POJO, or at minimum an array of results.\nWe should be able to avoid using Object for sure.", "author": "kurtisvg", "createdAt": "2021-01-05T19:52:11Z", "path": "cloud-sql/mysql/servlet/src/main/java/com/example/cloudsql/IndexServlet.java", "diffHunk": "@@ -45,12 +47,9 @@\n \n   private static final Logger LOGGER = Logger.getLogger(IndexServlet.class.getName());\n \n-  @Override\n-  public void doGet(HttpServletRequest req, HttpServletResponse resp)\n-      throws IOException, ServletException {\n-    // Extract the pool from the Servlet Context, reusing the one that was created\n-    // in the ContextListener when the application was started\n-    DataSource pool = (DataSource) req.getServletContext().getAttribute(\"my-pool\");\n+  public Map<String, Object> getTemplateData(DataSource pool) throws ServletException {", "originalCommit": "25bd4aa0dd53893e5c1e68de9a5dbc072bdd04f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3MTYwNQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r552271605", "bodyText": "Wrong year", "author": "eaball35", "createdAt": "2021-01-06T00:00:22Z", "path": "cloud-sql/postgres/servlet/src/test/java/com/TestIndexServlet.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2018 Google LLC", "originalCommit": "25bd4aa0dd53893e5c1e68de9a5dbc072bdd04f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3Mzk5OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r552273999", "bodyText": "Does this create a table that needs be to cleaned up after tests?", "author": "eaball35", "createdAt": "2021-01-06T00:08:18Z", "path": "cloud-sql/mysql/servlet/src/test/java/com/TestIndexServlet.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2018 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.cloudsql;\n+\n+import static com.google.common.truth.Truth.assertWithMessage;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import com.zaxxer.hikari.HikariConfig;\n+import com.zaxxer.hikari.HikariDataSource;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import javax.servlet.ServletContext;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.sql.DataSource;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class TestIndexServlet {\n+\n+  private static List<String> requiredEnvVars =\n+      Arrays.asList(\"MYSQL_USER\", \"MYSQL_PASS\", \"MYSQL_DB\", \"MYSQL_CONNECTION_NAME\");\n+\n+  private static DataSource pool;\n+\n+  public static void checkEnvVars() {\n+    // Check that required env vars are set\n+    requiredEnvVars.forEach((varName) -> {\n+      assertWithMessage(\n+          String.format(\"Environment variable '%s' must be set to perform these tests.\", varName))\n+          .that(System.getenv(varName)).isNotEmpty();\n+    });\n+  }\n+\n+  private static void createTable(DataSource pool) throws SQLException {\n+    // Safely attempt to create the table schema.\n+    try (Connection conn = pool.getConnection()) {\n+      String stmt =\n+          \"CREATE TABLE IF NOT EXISTS votes ( \"\n+              + \"vote_id SERIAL NOT NULL, time_cast timestamp NOT NULL, candidate CHAR(6) NOT NULL,\"\n+              + \" PRIMARY KEY (vote_id) );\";\n+      try (PreparedStatement createTableStatement = conn.prepareStatement(stmt);) {\n+        createTableStatement.execute();\n+      }\n+    }\n+  }\n+\n+\n+  @BeforeClass\n+  public static void createPool() throws SQLException {\n+    checkEnvVars();\n+    HikariConfig config = new HikariConfig();\n+\n+    config.setJdbcUrl(String.format(\"jdbc:mysql:///%s\", System.getenv(\"MYSQL_DB\")));\n+    config.setUsername(System.getenv(\"MYSQL_USER\")); // e.g. \"root\", \"mysql\"\n+    config.setPassword(System.getenv(\"MYSQL_PASS\")); // e.g. \"my-password\"\n+    config.addDataSourceProperty(\"socketFactory\", \"com.google.cloud.sql.mysql.SocketFactory\");\n+    config.addDataSourceProperty(\"cloudSqlInstance\", System.getenv(\"MYSQL_CONNECTION_NAME\"));\n+\n+    pool = new HikariDataSource(config);\n+    createTable(pool);", "originalCommit": "25bd4aa0dd53893e5c1e68de9a5dbc072bdd04f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4MzcxOA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r556183718", "bodyText": "added a cleanup function", "author": "shubha-rajan", "createdAt": "2021-01-13T00:26:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3Mzk5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3NDI3OQ==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r552274279", "bodyText": "old year", "author": "eaball35", "createdAt": "2021-01-06T00:09:09Z", "path": "cloud-sql/postgres/servlet/src/test/java/com/TestIndexServlet.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2018 Google LLC", "originalCommit": "25bd4aa0dd53893e5c1e68de9a5dbc072bdd04f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3ODc2NA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r552278764", "bodyText": "Can name be more specific? I thought all of these were duplicates until I looked closer.", "author": "eaball35", "createdAt": "2021-01-06T00:15:03Z", "path": "cloud-sql/postgres/servlet/src/test/java/com/TestIndexServlet.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2018 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.cloudsql;\n+\n+import static com.google.common.truth.Truth.assertWithMessage;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import com.zaxxer.hikari.HikariConfig;\n+import com.zaxxer.hikari.HikariDataSource;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import javax.servlet.ServletContext;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.sql.DataSource;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class TestIndexServlet {", "originalCommit": "25bd4aa0dd53893e5c1e68de9a5dbc072bdd04f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjE4MzY0Nw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4495#discussion_r556183647", "bodyText": "Renamed these to include the database engine.", "author": "shubha-rajan", "createdAt": "2021-01-13T00:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI3ODc2NA=="}], "type": "inlineReview"}, {"oid": "f06cd7de870e4c2035219309ec4adc62fbea6e46", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/f06cd7de870e4c2035219309ec4adc62fbea6e46", "message": "add integration tests for mysql", "committedDate": "2021-01-13T04:32:50Z", "type": "commit"}, {"oid": "058fdf7a7d3d67d4a2672f372c8a1c37dc183981", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/058fdf7a7d3d67d4a2672f372c8a1c37dc183981", "message": "source Cloud SQL secrets in run_tests.sh", "committedDate": "2021-01-13T04:32:50Z", "type": "commit"}, {"oid": "9f2663ad861741455fb67a5344041c96d94eda66", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/9f2663ad861741455fb67a5344041c96d94eda66", "message": "add integration tests to postgres sample", "committedDate": "2021-01-13T04:32:50Z", "type": "commit"}, {"oid": "08fc2fbde4f51b241ec60ebdf54fd2dfcf43762f", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/08fc2fbde4f51b241ec60ebdf54fd2dfcf43762f", "message": "add tests for SQL server sample", "committedDate": "2021-01-13T04:32:50Z", "type": "commit"}, {"oid": "2c3e42086a410d6dbba5f37952c0cff8d133dcf5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2c3e42086a410d6dbba5f37952c0cff8d133dcf5", "message": "fix typo in run_tests.sh", "committedDate": "2021-01-13T04:32:51Z", "type": "commit"}, {"oid": "8ae97d746fba5ffcecf31f1f7a02c36d7bab1c00", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8ae97d746fba5ffcecf31f1f7a02c36d7bab1c00", "message": "reformat files", "committedDate": "2021-01-13T04:32:51Z", "type": "commit"}, {"oid": "045349e31426771dc1d68404d34e81df7c167644", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/045349e31426771dc1d68404d34e81df7c167644", "message": "create table before tests", "committedDate": "2021-01-13T04:33:34Z", "type": "commit"}, {"oid": "4643b8b1064bf29cce53db50cf685de42db7ae5e", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4643b8b1064bf29cce53db50cf685de42db7ae5e", "message": "fix linting", "committedDate": "2021-01-13T04:33:37Z", "type": "commit"}, {"oid": "0b62e8d04f32e64bf3ae9790345ede035964402e", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/0b62e8d04f32e64bf3ae9790345ede035964402e", "message": "update license headers", "committedDate": "2021-01-13T04:33:37Z", "type": "commit"}, {"oid": "ccaffc4a88797ce790e1644e40a4115b2745ce69", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ccaffc4a88797ce790e1644e40a4115b2745ce69", "message": "rename files", "committedDate": "2021-01-13T04:33:37Z", "type": "commit"}, {"oid": "bcae0749aa66ded58b8be51aaae83810d8f622f8", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/bcae0749aa66ded58b8be51aaae83810d8f622f8", "message": "use POJO instead of hashmap", "committedDate": "2021-01-13T04:33:38Z", "type": "commit"}, {"oid": "3324cf1f01cea13bf6c78ec4a821e44b491dd947", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/3324cf1f01cea13bf6c78ec4a821e44b491dd947", "message": "move TemplateData class", "committedDate": "2021-01-13T04:33:38Z", "type": "commit"}, {"oid": "13f3605d7b81d267c5784164ac4a02268538a9d2", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/13f3605d7b81d267c5784164ac4a02268538a9d2", "message": "move TemplateData class", "committedDate": "2021-01-13T04:33:38Z", "type": "commit"}, {"oid": "ab69c66db544842fba42363da57ba474b654024c", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ab69c66db544842fba42363da57ba474b654024c", "message": "move TemplateData class", "committedDate": "2021-01-13T04:33:38Z", "type": "commit"}, {"oid": "b6e4940ac44c1e61eba8aff7f3ef65b3bfa0a8b3", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b6e4940ac44c1e61eba8aff7f3ef65b3bfa0a8b3", "message": "add cleanup method to drop table", "committedDate": "2021-01-13T04:33:38Z", "type": "commit"}, {"oid": "2e35ac4efd7eaca9c83bd544d00f7342ef2ce36c", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2e35ac4efd7eaca9c83bd544d00f7342ef2ce36c", "message": "add uuid to table name", "committedDate": "2021-01-13T04:57:56Z", "type": "commit"}, {"oid": "2e35ac4efd7eaca9c83bd544d00f7342ef2ce36c", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2e35ac4efd7eaca9c83bd544d00f7342ef2ce36c", "message": "add uuid to table name", "committedDate": "2021-01-13T04:57:56Z", "type": "forcePushed"}, {"oid": "f4fe111dc2d33889ab7d97c329ca0ce3d7154593", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/f4fe111dc2d33889ab7d97c329ca0ce3d7154593", "message": "fix linting", "committedDate": "2021-01-13T07:54:27Z", "type": "commit"}, {"oid": "f4fe111dc2d33889ab7d97c329ca0ce3d7154593", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/f4fe111dc2d33889ab7d97c329ca0ce3d7154593", "message": "fix linting", "committedDate": "2021-01-13T07:54:27Z", "type": "forcePushed"}]}