{"pr_number": 3697, "pr_title": "Update Monitoring sample tests", "pr_createdAt": "2020-09-10T20:37:00Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3697", "timeline": [{"oid": "eb7f9a9650459b78a7f40870fafbc0bf46207fe3", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/eb7f9a9650459b78a7f40870fafbc0bf46207fe3", "message": "Update sample", "committedDate": "2020-09-10T20:36:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMTg3NA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3697#discussion_r486621874", "bodyText": "Should we have a list of commands and potential args somewhere?", "author": "lesv", "createdAt": "2020-09-10T20:43:07Z", "path": "monitoring/v3/README.md", "diffHunk": "@@ -5,22 +5,25 @@ Monitoring API to retrieve and modify Alerts data.\n \n ## Prerequisites to run locally:\n \n-    * [Maven 3](https://maven.apache.org)\n-    * [GCloud CLI](https://cloud.google.com/sdk/gcloud/)\n-    * Create a Cloud project\n+* [Maven 3](https://maven.apache.org)\n+* [GCloud CLI](https://cloud.google.com/sdk/gcloud/)\n+* Create a Cloud project\n \n # Set Up Your Local Dev Environment\n \n Create local credentials by running the following command and following the oauth2 flow:\n \n-    gcloud beta auth application-default login\n+```bash\n+gcloud auth application-default login\n+```\n \n To run:\n \n-    * `mvn clean install`\n-    * `./manage_alerts_sample.sh <YOUR-PROJECT-ID> <command> <args>\n-\n-## Running on GCE, GAE, or other environments\n+```bash\n+mvn clean install  \n+./manage_alerts_sample.sh \"<command> <args>\"", "originalCommit": "eb7f9a9650459b78a7f40870fafbc0bf46207fe3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMzA0Ng==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3697#discussion_r486623046", "bodyText": "Will add this", "author": "averikitsch", "createdAt": "2020-09-10T20:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMTg3NA=="}], "type": "inlineReview"}, {"oid": "e22d88c48ca8e722a94f6ce496945285a17f375a", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/e22d88c48ca8e722a94f6ce496945285a17f375a", "message": "Update pattern", "committedDate": "2020-09-10T21:34:11Z", "type": "commit"}, {"oid": "ea83286ded77671cb4d8fcb46f12c6e3a0cc5b45", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ea83286ded77671cb4d8fcb46f12c6e3a0cc5b45", "message": "Update readme", "committedDate": "2020-09-10T21:37:49Z", "type": "commit"}, {"oid": "9e7d4af0712e1473793b1c4b1b1a20414553f5d9", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/9e7d4af0712e1473793b1c4b1b1a20414553f5d9", "message": "Add retry", "committedDate": "2020-09-10T22:43:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2OTk2Mw==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3697#discussion_r500569963", "bodyText": "Start at 1300 * a random value * factor <-- so that multiple tests running at the same time don't do this at the same time. (ie at least one will break free / round).\nhttps://cloud.google.com/storage/docs/exponential-backoff for more info", "author": "lesv", "createdAt": "2020-10-06T20:16:54Z", "path": "monitoring/v3/src/test/java/com/example/AlertIT.java", "diffHunk": "@@ -94,24 +95,42 @@ public void testReplaceChannels() throws IOException {\n   }\n \n   @Test\n-  public void testDisableEnablePolicies() throws IOException {\n+  public void testDisableEnablePolicies() throws IOException, InterruptedException {\n     AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n-    \n+\n     // check the current state of policy to make sure\n     // not to enable the policy that is already enabled.\n     boolean isEnabled = bout.toString().contains(\"already\");\n-    if (isEnabled) {\n-      AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"disabled\"));\n+    int maxAttempts = 10;\n+    int attempt = 0;\n+    int factor = 1;\n+    Boolean retry = true;\n+    while (retry) {\n+      try {\n+        if (isEnabled) {\n+          AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"disabled\"));\n \n-      AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"enabled\"));\n-    } else {\n-      AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"enabled\"));\n+          AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"enabled\"));\n+        } else {\n+          AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"enabled\"));\n \n-      AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"disabled\"));\n+          AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"disabled\"));\n+        }\n+        retry = false;\n+      } catch (StatusRuntimeException e) {\n+        System.out.println(\"Error: \" + e.toString());\n+        System.out.println(\"Retrying...\");\n+        Thread.sleep(2300 * factor);", "originalCommit": "9e7d4af0712e1473793b1c4b1b1a20414553f5d9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}