{"pr_number": 3168, "pr_title": "[asset] feat: add samples for SearchAllResources and SearchAllIamPolicies", "pr_createdAt": "2020-06-12T21:18:21Z", "pr_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3168", "timeline": [{"oid": "c316055fc92556f5780074fd8d4bce73ace662a0", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c316055fc92556f5780074fd8d4bce73ace662a0", "message": "Add samples for SearchAllResources and SearchAllIamPolicies", "committedDate": "2020-06-12T21:14:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0ODE2NA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3168#discussion_r439648164", "bodyText": "https://google.github.io/styleguide/javaguide.html#s6.2-caught-exceptions\nIt's better to tell folks what might go wrong than to encourage catch and ignore.  It means searchAllIamPolicies should throw ideally specific Exception(s)", "author": "lesv", "createdAt": "2020-06-12T21:24:00Z", "path": "asset/cloud-client/src/main/java/com/example/asset/SearchAllIamPoliciesExample.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.asset;\n+\n+// [START asset_quickstart_search_all_iam_policies]\n+\n+import com.google.cloud.asset.v1.AssetServiceClient;\n+import com.google.cloud.asset.v1.AssetServiceClient.SearchAllIamPoliciesPagedResponse;\n+import com.google.cloud.asset.v1.SearchAllIamPoliciesRequest;\n+\n+public class SearchAllIamPoliciesExample {\n+\n+  public static void searchAllIamPolicies(\n+      String scope, String query, int pageSize, String pageToken) {\n+    SearchAllIamPoliciesRequest request =\n+        SearchAllIamPoliciesRequest.newBuilder()\n+            .setScope(scope)\n+            .setQuery(query)\n+            .setPageSize(pageSize)\n+            .setPageToken(pageToken)\n+            .build();\n+    try (AssetServiceClient client = AssetServiceClient.create()) {\n+      SearchAllIamPoliciesPagedResponse response = client.searchAllIamPolicies(request);\n+      System.out.println(\"Search completed successfully: \\n\" + response.getPage().getValues());\n+    } catch (Exception e) {\n+      System.out.println(\"Error during SearchAllIamPolicies: \\n\" + e.toString());\n+    }", "originalCommit": "c316055fc92556f5780074fd8d4bce73ace662a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0ODMwMA==", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3168#discussion_r439648300", "bodyText": "same comment", "author": "lesv", "createdAt": "2020-06-12T21:24:29Z", "path": "asset/cloud-client/src/main/java/com/example/asset/SearchAllResourcesExample.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.asset;\n+\n+// [START asset_quickstart_search_all_resources]\n+import com.google.cloud.asset.v1.AssetServiceClient;\n+import com.google.cloud.asset.v1.AssetServiceClient.SearchAllResourcesPagedResponse;\n+import com.google.cloud.asset.v1.SearchAllResourcesRequest;\n+import java.util.Arrays;\n+\n+public class SearchAllResourcesExample {\n+\n+  public static void searchAllResources(\n+      String scope,\n+      String query,\n+      String[] assetTypes,\n+      int pageSize,\n+      String pageToken,\n+      String orderBy) {\n+    SearchAllResourcesRequest request =\n+        SearchAllResourcesRequest.newBuilder()\n+            .setScope(scope)\n+            .setQuery(query)\n+            .addAllAssetTypes(Arrays.asList(assetTypes))\n+            .setPageSize(pageSize)\n+            .setPageToken(pageToken)\n+            .setOrderBy(orderBy)\n+            .build();\n+    try (AssetServiceClient client = AssetServiceClient.create()) {\n+      SearchAllResourcesPagedResponse response = client.searchAllResources(request);\n+      System.out.println(\"Search completed: \\n\" + response.getPage().getValues());\n+    } catch (Exception e) {\n+      System.out.println(\"Error during SearchAllResources: \\n\" + e.toString());\n+    }", "originalCommit": "c316055fc92556f5780074fd8d4bce73ace662a0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b502620e25b816256fb556c210435495e1474adf", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b502620e25b816256fb556c210435495e1474adf", "message": "Update error handling to catch specific exceptions.", "committedDate": "2020-06-13T01:02:28Z", "type": "commit"}, {"oid": "1e39a3a2324b0f92d4e942ff4bc1f68eb1d571b9", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1e39a3a2324b0f92d4e942ff4bc1f68eb1d571b9", "message": "Fix static analysis issues for the newly added files; Remove arguments that are not required by tests.", "committedDate": "2020-06-13T01:52:16Z", "type": "commit"}]}