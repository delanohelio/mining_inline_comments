{"pr_number": 329, "pr_title": "add AD task and tune detector&AD result data model", "pr_createdAt": "2020-12-11T21:56:27Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329", "timeline": [{"oid": "471a767bd841ecc3cf70c4b958bf757ed7a6e6c4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/471a767bd841ecc3cf70c4b958bf757ed7a6e6c4", "message": "add AD task and tune detector&AD result data model", "committedDate": "2020-12-11T21:44:36Z", "type": "commit"}, {"oid": "a3fbc478dc58dae220d5cf0dfad3137ce3eb20f8", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/a3fbc478dc58dae220d5cf0dfad3137ce3eb20f8", "message": "remove lines which commented out", "committedDate": "2020-12-11T22:37:41Z", "type": "commit"}, {"oid": "0cfb00798bd06ba72195bc98285c85c6f47da1f9", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0cfb00798bd06ba72195bc98285c85c6f47da1f9", "message": "fix checkstyle", "committedDate": "2020-12-11T22:58:40Z", "type": "commit"}, {"oid": "50ec0c88d681134e61e0e5581c41cfdcab59e278", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/50ec0c88d681134e61e0e5581c41cfdcab59e278", "message": "fix null point bug in AD result; add more test cases", "committedDate": "2020-12-14T22:03:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkwNTgzNg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r542905836", "bodyText": "why implement static method, instead of just using public method like this.isRealTimeDetector()?", "author": "yizheliu-amazon", "createdAt": "2020-12-14T23:00:22Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -596,7 +658,27 @@ public void setUser(User user) {\n         this.user = user;\n     }\n \n+    public String getDetectorType() {\n+        return detectorType;\n+    }\n+\n+    public DetectionDateRange getDetectionDateRange() {\n+        return detectionDateRange;\n+    }\n+\n     public boolean isMultientityDetector() {\n-        return getCategoryField() != null && getCategoryField().size() > 0;\n+        return AnomalyDetector.isMultientityDetector(getCategoryField());\n+    }\n+\n+    private static boolean isMultientityDetector(List<String> categoryFields) {\n+        return categoryFields != null && categoryFields.size() > 0;\n+    }\n+\n+    public boolean isRealTimeDetector() {\n+        return AnomalyDetector.isRealTimeDetector(getDetectionDateRange());\n+    }\n+\n+    private static boolean isRealTimeDetector(DetectionDateRange detectionDateRange) {\n+        return detectionDateRange == null || detectionDateRange.getEndTime() == null;\n     }", "originalCommit": "50ec0c88d681134e61e0e5581c41cfdcab59e278", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAwNjU3OA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543006578", "bodyText": "We need to use this static method to check if a detector is realtime or not before create detector instance. Check here: https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329/files#diff-ab4bf6eb04e845b21b1182e30afb84c73b282bae5cc26dbcfef2e846211bcdecR475", "author": "ylwu-amzn", "createdAt": "2020-12-15T02:54:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkwNTgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzExMA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543613110", "bodyText": "I see. got it.", "author": "yizheliu-amazon", "createdAt": "2020-12-15T19:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkwNTgzNg=="}], "type": "inlineReview"}, {"oid": "8a0db4ebaaa9364124e6adb7c0e57c6fc3623d0c", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/8a0db4ebaaa9364124e6adb7c0e57c6fc3623d0c", "message": "add more checking", "committedDate": "2020-12-15T08:15:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1MDYyNw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543450627", "bodyText": "what's different between created and init?  Is INIT for the model training state?", "author": "weicongs-amazon", "createdAt": "2020-12-15T15:35:26Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/ADTaskState.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.model;\n+\n+public enum ADTaskState {\n+    CREATED,\n+    INIT,", "originalCommit": "8a0db4ebaaa9364124e6adb7c0e57c6fc3623d0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU0OTM0MA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543549340", "bodyText": "Created: when user start a historical detector, we will create one task to track the detector execution and set its state as CREATED\nInitializing: after task created, coordinate node will gather all node\u2019s state and dispatch task to the worker node with lowest load. When the worker node receives the request, it will set the task state as INIT immediately, then start to run cold start to train RCF model.", "author": "ylwu-amzn", "createdAt": "2020-12-15T17:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1MDYyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY0MzUxNw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543643517", "bodyText": "Thanks for the explanation. we can add some java docs for it later", "author": "weicongs-amazon", "createdAt": "2020-12-15T19:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1MDYyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4OTMxMw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543789313", "bodyText": "Good point, will add java docs for these stats.", "author": "ylwu-amzn", "createdAt": "2020-12-16T00:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1MDYyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1Nzc4NQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543457785", "bodyText": "typo: SINGLE?", "author": "weicongs-amazon", "createdAt": "2020-12-15T15:44:04Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetectorType.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.model;\n+\n+public enum AnomalyDetectorType {\n+    REALTIME_SIGLE_ENTITY,\n+    REALTIME_MULTI_ENTITY,\n+    HISTORICAL_SIGLE_ENTITY,", "originalCommit": "8a0db4ebaaa9364124e6adb7c0e57c6fc3623d0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU0OTUwMA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543549500", "bodyText": "Good catch, will fix", "author": "ylwu-amzn", "createdAt": "2020-12-15T17:38:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ1Nzc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2MDg2OA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543460868", "bodyText": "what's the reason that there is a null check in the first method, not in the second one?", "author": "weicongs-amazon", "createdAt": "2020-12-15T15:47:48Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/DetectionDateRange.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.model;\n+\n+import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;\n+\n+import java.io.IOException;\n+import java.time.Instant;\n+\n+import org.apache.commons.lang.builder.ToStringBuilder;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import com.amazon.opendistroforelasticsearch.ad.annotation.Generated;\n+import com.amazon.opendistroforelasticsearch.ad.util.ParseUtils;\n+import com.google.common.base.Objects;\n+\n+public class DetectionDateRange implements ToXContentObject, Writeable {\n+\n+    public static final String START_TIME_FIELD = \"start_time\";\n+    public static final String END_TIME_FIELD = \"end_time\";\n+\n+    private final Instant startTime;\n+    private final Instant endTime;\n+\n+    public DetectionDateRange(Instant startTime, Instant endTime) {\n+        this.startTime = startTime;\n+        this.endTime = endTime;\n+        if (startTime == null) {\n+            throw new IllegalArgumentException(\"Detection data range's start time must not be null\");\n+        }\n+        if (endTime == null) {\n+            throw new IllegalArgumentException(\"Detection data range's end time must not be null\");\n+        }\n+    }\n+\n+    public DetectionDateRange(StreamInput in) throws IOException {\n+        this.startTime = in.readOptionalInstant();", "originalCommit": "8a0db4ebaaa9364124e6adb7c0e57c6fc3623d0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU1MTgzMQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543551831", "bodyText": "Good catch, should change the readOptionalInstant to readInstant, and readInstant will throw exception if it's null.", "author": "ylwu-amzn", "createdAt": "2020-12-15T17:42:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2MDg2OA=="}], "type": "inlineReview"}, {"oid": "813c50920410b3dd0b66c873b4b8f3e3d255a1b9", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/813c50920410b3dd0b66c873b4b8f3e3d255a1b9", "message": "fix typo", "committedDate": "2020-12-15T18:40:42Z", "type": "commit"}, {"oid": "2cd58aa6252aeeba0b879c69288f6be6de759fc3", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/2cd58aa6252aeeba0b879c69288f6be6de759fc3", "message": "add java doc for task state", "committedDate": "2020-12-16T01:14:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwNjg0Nw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543806847", "bodyText": "minor: endTime can't be  null, right?", "author": "weicongs-amazon", "createdAt": "2020-12-16T01:21:23Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -596,7 +661,27 @@ public void setUser(User user) {\n         this.user = user;\n     }\n \n+    public String getDetectorType() {\n+        return detectorType;\n+    }\n+\n+    public DetectionDateRange getDetectionDateRange() {\n+        return detectionDateRange;\n+    }\n+\n     public boolean isMultientityDetector() {\n-        return getCategoryField() != null && getCategoryField().size() > 0;\n+        return AnomalyDetector.isMultientityDetector(getCategoryField());\n+    }\n+\n+    private static boolean isMultientityDetector(List<String> categoryFields) {\n+        return categoryFields != null && categoryFields.size() > 0;\n+    }\n+\n+    public boolean isRealTimeDetector() {\n+        return AnomalyDetector.isRealTimeDetector(getDetectionDateRange());\n+    }\n+\n+    private static boolean isRealTimeDetector(DetectionDateRange detectionDateRange) {\n+        return detectionDateRange == null || detectionDateRange.getEndTime() == null;", "originalCommit": "2cd58aa6252aeeba0b879c69288f6be6de759fc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwODIwNw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/329#discussion_r543808207", "bodyText": "Yes, for initial release, we plan to separate historical detector and realtime detector flow, so it's true the endTime can't be null. Next phase we will build universal flow, then the endTime could be null. If the endTime is null, we will pre-train model with historical data from startTime to now, then start realtime detection with the pre-trained model.", "author": "ylwu-amzn", "createdAt": "2020-12-16T01:24:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwNjg0Nw=="}], "type": "inlineReview"}]}