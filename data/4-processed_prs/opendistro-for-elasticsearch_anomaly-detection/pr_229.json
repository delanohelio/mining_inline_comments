{"pr_number": 229, "pr_title": "CLI: Download Detector Configuration as File", "pr_createdAt": "2020-09-12T21:42:43Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229", "timeline": [{"oid": "0f39278e07e529528b65ba0c50c3384e30fa1497", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0f39278e07e529528b65ba0c50c3384e30fa1497", "message": "Refactor cat command\n\nGo provides an abstraction to support writing on file\nand stdout as same interface, refactor cat to accept\nfunc as input. Later, download will pass writeInfile as parameter", "committedDate": "2020-09-12T21:47:43Z", "type": "commit"}, {"oid": "10ab1db1fabef1e0e851a0e47f87f76e75b2f780", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/10ab1db1fabef1e0e851a0e47f87f76e75b2f780", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder", "committedDate": "2020-09-12T21:49:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjc1Mg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r488306752", "bodyText": "return?", "author": "wnbts", "createdAt": "2020-09-15T00:14:25Z", "path": "cli/cmd/cat.go", "diffHunk": "@@ -38,25 +40,30 @@ var catCmd = &cobra.Command{\n \t\t\t}\n \t\t\treturn\n \t\t}\n-\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n-\t\tcommandHandler, err := getCommandHandler()\n-\t\tif err != nil {\n-\t\t\tfmt.Println(err)\n-\t\t}\n-\t\t// default is name\n-\t\taction := ad.GetAnomalyDetectorsByNamePattern\n-\t\tif idStatus {\n-\t\t\taction = getDetectorsByID\n-\t\t}\n-\t\tresults, err := getDetectors(commandHandler, args, action)\n-\t\tif err != nil {\n-\t\t\tfmt.Println(err)\n-\t\t\treturn\n-\t\t}\n-\t\tprintDetectors(results)\n+\t\tprintDetectors(Println, cmd, args)\n \t},\n }\n \n+//printDetectors print detectors\n+func printDetectors(f func(*entity.DetectorOutput), cmd *cobra.Command, detectors []string) {\n+\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\tcommandHandler, err := getCommandHandler()\n+\tif err != nil {\n+\t\tfmt.Println(err)\n+\t}", "originalCommit": "10ab1db1fabef1e0e851a0e47f87f76e75b2f780", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NzU3Mw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r488347573", "bodyText": "Ack", "author": "VijayanB", "createdAt": "2020-09-15T02:38:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjc1Mg=="}], "type": "inlineReview"}, {"oid": "fd5f7820e5bdef0b1dbafa6312e421d25cd3a7d2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/fd5f7820e5bdef0b1dbafa6312e421d25cd3a7d2", "message": "CLI: Refactor command to display error\n\nPrinting error on console is added everywhere.\nCreate a function to check error and print.", "committedDate": "2020-09-15T02:24:37Z", "type": "commit"}, {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/9f6437fe80238d4a5c1b35e50f422382d9ee0293", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder", "committedDate": "2020-09-15T02:34:09Z", "type": "commit"}, {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/9f6437fe80238d4a5c1b35e50f422382d9ee0293", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder", "committedDate": "2020-09-15T02:34:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2NTA1Mg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489165052", "bodyText": "Add file extension?", "author": "ylwu-amzn", "createdAt": "2020-09-16T05:05:14Z", "path": "cli/cmd/download.go", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\tentity \"esad/internal/entity/ad\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const commandDownload = \"download\"\n+\n+//downloadCmd downloads detectors configuration on current working directory\n+//based on detector id or name patter\n+var downloadCmd = &cobra.Command{\n+\tUse:   commandDownload + \" [flags] [list of detectors]\",\n+\tShort: \"Downloads detectors configurations based on id or name pattern\",\n+\tLong: fmt.Sprintf(\"Description:\\n  \" +\n+\t\t`Downloads detectors configurations based on id or name pattern, use \"\" to make sure the name is not matched with pwd lists'`),\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tdisplayError(cmd.Usage(), commandDownload)\n+\t\t\treturn\n+\t\t}\n+\t\terr := printDetectors(WriteInFile, cmd, args)\n+\t\tdisplayError(err, commandDownload)\n+\t},\n+}\n+\n+//WriteInFile writes detector's configuration on file\n+//file will be created inside current working directory,\n+//with detector name as file name\n+func WriteInFile(d *entity.DetectorOutput) error {\n+\tcwd, err := os.Getwd()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tfilePath := filepath.Join(cwd, d.Name)", "originalCommit": "9f6437fe80238d4a5c1b35e50f422382d9ee0293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc5MTU2NA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489791564", "bodyText": "Added .json", "author": "VijayanB", "createdAt": "2020-09-16T22:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2NTA1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODA5Mw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489168093", "bodyText": "If the filePath exists, will os.Create override the existing file?", "author": "ylwu-amzn", "createdAt": "2020-09-16T05:16:17Z", "path": "cli/cmd/download.go", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\tentity \"esad/internal/entity/ad\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const commandDownload = \"download\"\n+\n+//downloadCmd downloads detectors configuration on current working directory\n+//based on detector id or name patter\n+var downloadCmd = &cobra.Command{\n+\tUse:   commandDownload + \" [flags] [list of detectors]\",\n+\tShort: \"Downloads detectors configurations based on id or name pattern\",\n+\tLong: fmt.Sprintf(\"Description:\\n  \" +\n+\t\t`Downloads detectors configurations based on id or name pattern, use \"\" to make sure the name is not matched with pwd lists'`),\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tdisplayError(cmd.Usage(), commandDownload)\n+\t\t\treturn\n+\t\t}\n+\t\terr := printDetectors(WriteInFile, cmd, args)\n+\t\tdisplayError(err, commandDownload)\n+\t},\n+}\n+\n+//WriteInFile writes detector's configuration on file\n+//file will be created inside current working directory,\n+//with detector name as file name\n+func WriteInFile(d *entity.DetectorOutput) error {\n+\tcwd, err := os.Getwd()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tfilePath := filepath.Join(cwd, d.Name)\n+\tf, err := os.Create(filePath)", "originalCommit": "9f6437fe80238d4a5c1b35e50f422382d9ee0293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2OTQxMg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489169412", "bodyText": "From this doc, https://golang.org/pkg/os/#Create\n\nIf the file already exists, it is truncated\n\nHow about check file exists or not before create ? If file exists, we should not truncate it directly in case user execute command by mistake.", "author": "ylwu-amzn", "createdAt": "2020-09-16T05:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc5MTk2MQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489791961", "bodyText": "I introduced a flag -i similar to  cp in linux commands, which prompt to stdout whether to overwrite the file or not.", "author": "VijayanB", "createdAt": "2020-09-16T22:37:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3MDU3NA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489970574", "bodyText": "The flag -i is optional? What if user don't add -i?", "author": "ylwu-amzn", "createdAt": "2020-09-17T04:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3MTQxNw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489971417", "bodyText": "It is interactive. By default download will overwrite but if user passes -i, it will prompt for user confirmation. Do you think prompt should be default?", "author": "VijayanB", "createdAt": "2020-09-17T04:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyMTUwOQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r490021509", "bodyText": "I think prompt should be default for this case, not good user experience/safe to override user's existing file without any prompt.", "author": "ylwu-amzn", "createdAt": "2020-09-17T07:14:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODA5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MDgyNg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489170826", "bodyText": "Is it possible to output detector into a different directory other than current directory?  Can user specify the absolute file path? For example, user want to download detector and output it into \"/tmp/my_detectors.json\".\nIf user query detector with name pattern and return multiple detectors, we will write detectors into separate files. Seems not very easy for user to share if they have hundreds of such small detector configuration files.  By specifying an absolute file path and output all detectors' configuration into one file will be easier for user to share, bulk recreate etc.", "author": "ylwu-amzn", "createdAt": "2020-09-16T05:25:39Z", "path": "cli/cmd/download.go", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\tentity \"esad/internal/entity/ad\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const commandDownload = \"download\"\n+\n+//downloadCmd downloads detectors configuration on current working directory\n+//based on detector id or name patter\n+var downloadCmd = &cobra.Command{\n+\tUse:   commandDownload + \" [flags] [list of detectors]\",\n+\tShort: \"Downloads detectors configurations based on id or name pattern\",\n+\tLong: fmt.Sprintf(\"Description:\\n  \" +\n+\t\t`Downloads detectors configurations based on id or name pattern, use \"\" to make sure the name is not matched with pwd lists'`),\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tdisplayError(cmd.Usage(), commandDownload)\n+\t\t\treturn\n+\t\t}\n+\t\terr := printDetectors(WriteInFile, cmd, args)\n+\t\tdisplayError(err, commandDownload)\n+\t},\n+}\n+\n+//WriteInFile writes detector's configuration on file\n+//file will be created inside current working directory,\n+//with detector name as file name\n+func WriteInFile(d *entity.DetectorOutput) error {\n+\tcwd, err := os.Getwd()", "originalCommit": "9f6437fe80238d4a5c1b35e50f422382d9ee0293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc5MjM2OA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489792368", "bodyText": "Yes definitely possible. I am planning to include this feature as next PR.", "author": "VijayanB", "createdAt": "2020-09-16T22:38:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MDgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk0MzkxNg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489943916", "bodyText": "Added allow user to provide output folder as new commit.", "author": "VijayanB", "createdAt": "2020-09-17T03:51:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MDgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3MDMyMw==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489970323", "bodyText": "Cool, thanks for the change", "author": "ylwu-amzn", "createdAt": "2020-09-17T04:55:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MDgyNg=="}], "type": "inlineReview"}, {"oid": "c29f835f7fd12e50d0dbc14d025ed1c573e872ff", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/c29f835f7fd12e50d0dbc14d025ed1c573e872ff", "message": "CLI: Add interactive to prompt for overwriting files\n\nSimilar to cp from linux, add interactive to allow user to decide\nwhether to overwrite file or not", "committedDate": "2020-09-16T22:32:37Z", "type": "commit"}, {"oid": "41ad5d68473814120f0e1c5d93bf6637525dace9", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/41ad5d68473814120f0e1c5d93bf6637525dace9", "message": "CLI: Allow user to specify output folder path\n\nAdded flag to allow user to specify target location where\ndetectors will be downloaded.", "committedDate": "2020-09-17T03:49:14Z", "type": "commit"}, {"oid": "363e8c78db0c22a91d1b1fac24610def415ab21c", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/363e8c78db0c22a91d1b1fac24610def415ab21c", "message": "CLI: Make download prompt as default\n\nDownload detector will always prompt if there is file\nexists in output directory.", "committedDate": "2020-09-17T17:09:00Z", "type": "commit"}]}