{"pr_number": 1786, "pr_title": "1463 remove beanutils", "pr_createdAt": "2020-11-17T16:06:46Z", "pr_url": "https://github.com/apache/accumulo/pull/1786", "timeline": [{"oid": "28267b36257d80cc692b201ccfe708ec1a6ee662", "url": "https://github.com/apache/accumulo/commit/28267b36257d80cc692b201ccfe708ec1a6ee662", "message": "re #1463: removed commons-beanutils dependency", "committedDate": "2020-11-17T13:42:40Z", "type": "commit"}, {"oid": "7bd26979e141e7bf460036108c665f15df86799a", "url": "https://github.com/apache/accumulo/commit/7bd26979e141e7bf460036108c665f15df86799a", "message": "re #1463: suppress findbugs warnings", "committedDate": "2020-11-17T15:31:14Z", "type": "commit"}, {"oid": "f4c199eb39b483b02d3d0e4ba1fdcf1d72797c2e", "url": "https://github.com/apache/accumulo/commit/f4c199eb39b483b02d3d0e4ba1fdcf1d72797c2e", "message": "Merge branch 'main' into 1463-remove-beanutils", "committedDate": "2020-11-17T15:32:00Z", "type": "commit"}, {"oid": "a9e33ef4c64988a302c7189de7f1c2b5c8be9d39", "url": "https://github.com/apache/accumulo/commit/a9e33ef4c64988a302c7189de7f1c2b5c8be9d39", "message": "re #1563: add variable interpolation test", "committedDate": "2020-11-17T15:50:05Z", "type": "commit"}, {"oid": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "url": "https://github.com/apache/accumulo/commit/098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "message": "re #1463: add test for system property", "committedDate": "2020-11-17T15:52:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5Njk1MQ==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525296951", "bodyText": "This changes exceptions thrown on a public API method.", "author": "ctubbsii", "createdAt": "2020-11-17T16:24:18Z", "path": "core/src/main/java/org/apache/accumulo/core/client/ClientConfiguration.java", "diffHunk": "@@ -194,14 +196,17 @@ public static ClientConfiguration create() {\n    *          the path to the configuration file\n    * @since 1.9.0\n    */\n-  public static ClientConfiguration fromFile(File file) {\n-    FileBasedConfigurationBuilder<PropertiesConfiguration> propsBuilder =\n-        new FileBasedConfigurationBuilder<>(PropertiesConfiguration.class)\n-            .configure(new Parameters().properties().setFile(file));\n-    try {\n-      return new ClientConfiguration(Collections.singletonList(propsBuilder.getConfiguration()));\n+  public static ClientConfiguration fromFile(File file) throws FileNotFoundException {", "originalCommit": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5Nzg3MQ==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525297871", "bodyText": "It'd be better to add these exceptions to the existing ConfigurationException using multi-catch. That way, we don't introduce new exceptions in the public API method.", "author": "ctubbsii", "createdAt": "2020-11-17T16:25:23Z", "path": "core/src/main/java/org/apache/accumulo/core/client/ClientConfiguration.java", "diffHunk": "@@ -194,14 +196,17 @@ public static ClientConfiguration create() {\n    *          the path to the configuration file\n    * @since 1.9.0\n    */\n-  public static ClientConfiguration fromFile(File file) {\n-    FileBasedConfigurationBuilder<PropertiesConfiguration> propsBuilder =\n-        new FileBasedConfigurationBuilder<>(PropertiesConfiguration.class)\n-            .configure(new Parameters().properties().setFile(file));\n-    try {\n-      return new ClientConfiguration(Collections.singletonList(propsBuilder.getConfiguration()));\n+  public static ClientConfiguration fromFile(File file) throws FileNotFoundException {\n+    var config = new PropertiesConfiguration();\n+    try (var reader = new FileReader(file)) {\n+      config.getLayout().load(config, reader);\n+      return new ClientConfiguration(Collections.singletonList(config));\n     } catch (ConfigurationException e) {\n       throw new IllegalArgumentException(\"Bad configuration file: \" + file, e);\n+    } catch (FileNotFoundException fnfe) {\n+      throw fnfe;\n+    } catch (IOException e1) {\n+      throw new UncheckedIOException(\"IOExcetion creating configuration\", e1);", "originalCommit": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5ODMzMg==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525298332", "bodyText": "This can be combined with the existing ConfigurationException", "author": "ctubbsii", "createdAt": "2020-11-17T16:25:55Z", "path": "core/src/main/java/org/apache/accumulo/core/client/ClientConfiguration.java", "diffHunk": "@@ -225,14 +230,15 @@ private static ClientConfiguration loadFromSearchPath(List<String> paths) {\n     for (String path : paths) {\n       File conf = new File(path);\n       if (conf.isFile() && conf.canRead()) {\n-        FileBasedConfigurationBuilder<PropertiesConfiguration> propsBuilder =\n-            new FileBasedConfigurationBuilder<>(PropertiesConfiguration.class)\n-                .configure(new Parameters().properties().setFile(conf));\n-        try {\n-          configs.add(propsBuilder.getConfiguration());\n+        var config = new PropertiesConfiguration();\n+        try (var reader = new FileReader(conf)) {\n+          config.getLayout().load(config, reader);\n+          configs.add(config);\n           log.info(\"Loaded client configuration file {}\", conf);\n         } catch (ConfigurationException e) {\n           throw new IllegalStateException(\"Error loading client configuration file \" + conf, e);\n+        } catch (IOException e1) {\n+          throw new UncheckedIOException(\"IOExcetion creating configuration\", e1);", "originalCommit": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5ODcxOA==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525298718", "bodyText": "This can be combined with the existing ConfigurationException", "author": "ctubbsii", "createdAt": "2020-11-17T16:26:22Z", "path": "core/src/main/java/org/apache/accumulo/core/conf/SiteConfiguration.java", "diffHunk": "@@ -203,15 +204,18 @@ private SiteConfiguration(Map<String,String> config) {\n   }\n \n   // load properties from config file\n+  @SuppressFBWarnings(value = \"PATH_TRAVERSAL_IN\", justification = \"path provided by test\")\n   private static AbstractConfiguration getPropsFileConfig(URL accumuloPropsLocation) {\n     if (accumuloPropsLocation != null) {\n-      var propsBuilder = new FileBasedConfigurationBuilder<>(PropertiesConfiguration.class)\n-          .configure(new Parameters().properties().setURL(accumuloPropsLocation));\n-      try {\n-        return propsBuilder.getConfiguration();\n+      var config = new PropertiesConfiguration();\n+      try (var reader = new FileReader(accumuloPropsLocation.getFile())) {\n+        config.getLayout().load(config, reader);\n       } catch (ConfigurationException e) {\n         throw new IllegalArgumentException(e);\n+      } catch (IOException e1) {\n+        throw new UncheckedIOException(\"IOExcetion creating configuration\", e1);", "originalCommit": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5OTk4MA==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525299980", "bodyText": "Nice checks to test interpolation!", "author": "ctubbsii", "createdAt": "2020-11-17T16:27:56Z", "path": "core/src/test/java/org/apache/accumulo/core/conf/SiteConfigurationTest.java", "diffHunk": "@@ -77,6 +78,8 @@ public void testFile() {\n     assertEquals(\"256M\", conf.get(Property.TSERV_WALOG_MAX_SIZE));\n     assertEquals(\"org.apache.accumulo.core.cryptoImpl.AESCryptoService\",\n         conf.get(Property.INSTANCE_CRYPTO_SERVICE));\n+    assertEquals(System.getenv(\"USER\"), conf.get(\"general.test.user.name\"));\n+    assertEquals(\"/tmp/test/dir\", conf.get(\"general.test.user.dir\"));", "originalCommit": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwMDkzOA==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525300938", "bodyText": "This can be combined with the existing ConfigurationException", "author": "ctubbsii", "createdAt": "2020-11-17T16:29:07Z", "path": "test/src/main/java/org/apache/accumulo/test/metrics/MetricsFileTailer.java", "diffHunk": "@@ -153,11 +147,12 @@ private Configuration loadMetricsConfig() {\n       }\n \n       return sub;\n-\n-    } catch (ConfigurationException ex) {\n+    } catch (ConfigurationException e) {\n       throw new IllegalStateException(\n           String.format(\"Could not find configuration file \\'%s\\' on classpath\",\n               MetricsTestSinkProperties.METRICS_PROP_FILENAME));\n+    } catch (IOException e1) {\n+      throw new UncheckedIOException(\"IOExcetion creating configuration\", e1);", "originalCommit": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwMTUzMA==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525301530", "bodyText": "Can probably also remove the entry from assemble/src/main/assemblies/component.xml", "author": "ctubbsii", "createdAt": "2020-11-17T16:29:51Z", "path": "assemble/pom.xml", "diffHunk": "@@ -106,11 +106,6 @@\n       <artifactId>jaxb-core</artifactId>\n       <optional>true</optional>\n     </dependency>\n-    <dependency>\n-      <groupId>commons-beanutils</groupId>\n-      <artifactId>commons-beanutils</artifactId>\n-      <optional>true</optional>\n-    </dependency>", "originalCommit": "098f8989078f5ab84ebc0b71f81fa1fc58a566b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bf6c1f0a5ec2a777fbff4abcb5cb06252b24afb2", "url": "https://github.com/apache/accumulo/commit/bf6c1f0a5ec2a777fbff4abcb5cb06252b24afb2", "message": "re 1463: made changes requested from PR", "committedDate": "2020-11-17T17:43:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUyNTQ5Nw==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525525497", "bodyText": "Is this suppression necessary on this method? This method doesn't look like it changed. It might be covered by the suppression elsewhere.", "author": "ctubbsii", "createdAt": "2020-11-17T21:08:31Z", "path": "core/src/main/java/org/apache/accumulo/core/conf/SiteConfiguration.java", "diffHunk": "@@ -140,8 +140,8 @@ public Buildable withOverrides(Map<String,String> overrides) {\n       return this;\n     }\n \n-    @SuppressFBWarnings(value = \"URLCONNECTION_SSRF_FD\",\n-        justification = \"location of props is specified by an admin\")\n+    @SuppressFBWarnings(value = {\"URLCONNECTION_SSRF_FD\", \"PATH_TRAVERSAL_IN\"},\n+        justification = \"location of props is specified by an admin, path provided by test\")", "originalCommit": "bf6c1f0a5ec2a777fbff4abcb5cb06252b24afb2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0ODU0Mw==", "url": "https://github.com/apache/accumulo/pull/1786#discussion_r525548543", "bodyText": "I wasn't aware of the read() method before. Apparently, we can just call config.read(reader) here. I also wasn't aware of FileHandler before, which I see is being used when saving files.\nI think we should try to be consistent. We should either use:\nvar config = PropertiesConfiguration();\ntry (var reader = new FileReader()) {\n  config.read(reader);\n}\n// and\ntry (var writer = new FileWriter()) {\n  config.write(writer);\n}\nOR\nvar config = new PropertiesConfiguration();\nvar fileHandler = new FileHandler(config);\nfileHandler.load(file);\n// and\nfileHandler.save(file);\nUltimately, they will both do the same thing, but I'm not sure which one is cleaner, since we still need to handle exceptions. Either way, but we should consistently use one pattern or the other.", "author": "ctubbsii", "createdAt": "2020-11-17T21:51:31Z", "path": "start/src/main/java/org/apache/accumulo/start/classloader/AccumuloClassLoader.java", "diffHunk": "@@ -86,10 +86,10 @@ public static String getAccumuloProperty(String propertyName, String defaultValu\n       return defaultValue;\n     }\n     try {\n-      FileBasedConfigurationBuilder<PropertiesConfiguration> propsBuilder =\n-          new FileBasedConfigurationBuilder<>(PropertiesConfiguration.class)\n-              .configure(new Parameters().properties().setURL(accumuloConfigUrl));\n-      PropertiesConfiguration config = propsBuilder.getConfiguration();\n+      var config = new PropertiesConfiguration();\n+      try (var reader = new FileReader(accumuloConfigUrl.getFile())) {\n+        config.getLayout().load(config, reader);", "originalCommit": "bf6c1f0a5ec2a777fbff4abcb5cb06252b24afb2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1091b26037b5ceefa0ce83fd62b36d0055797a37", "url": "https://github.com/apache/accumulo/commit/1091b26037b5ceefa0ce83fd62b36d0055797a37", "message": "re #1463: changes from PR comments", "committedDate": "2020-11-18T14:13:46Z", "type": "commit"}]}