{"pr_number": 1813, "pr_title": "Remove some unused code", "pr_createdAt": "2020-11-30T13:58:09Z", "pr_url": "https://github.com/apache/accumulo/pull/1813", "timeline": [{"oid": "a827d9b68196735746e6f0cb79c82099ab0fa60c", "url": "https://github.com/apache/accumulo/commit/a827d9b68196735746e6f0cb79c82099ab0fa60c", "message": "Remove some unused code\n\nRemove some unused code and corresponding warning suppressions.", "committedDate": "2020-11-27T05:36:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg3Mzk4Mg==", "url": "https://github.com/apache/accumulo/pull/1813#discussion_r532873982", "bodyText": "From a quick look, it seems this test trying to create a \"hole\" - does this invalidate the test if all volumes are present?", "author": "EdColeman", "createdAt": "2020-11-30T20:11:02Z", "path": "test/src/main/java/org/apache/accumulo/test/VolumeChooserIT.java", "diffHunk": "@@ -132,7 +129,7 @@ public void configure(MiniAccumuloConfigImpl cfg, Configuration hadoopCoreSite)\n \n     // Only add volumes 1, 2, and 4 to the list of instance volumes to have one volume that isn't in\n     // the options list when they are choosing\n-    cfg.setProperty(Property.INSTANCE_VOLUMES, v1 + \",\" + v2 + \",\" + v4);\n+    cfg.setProperty(Property.INSTANCE_VOLUMES, v1 + \",\" + v2 + \",\" + v3);", "originalCommit": "a827d9b68196735746e6f0cb79c82099ab0fa60c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg3ODE0OQ==", "url": "https://github.com/apache/accumulo/pull/1813#discussion_r532878149", "bodyText": "The v3 variable was entirely unused in this test. I removed it, and renamed v4 to v3. That's it.", "author": "ctubbsii", "createdAt": "2020-11-30T20:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg3Mzk4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4Mzc0MQ==", "url": "https://github.com/apache/accumulo/pull/1813#discussion_r532883741", "bodyText": "Out of curiosity, why is this constructor required?", "author": "jmark99", "createdAt": "2020-11-30T20:29:22Z", "path": "server/base/src/main/java/org/apache/accumulo/server/master/balancer/ChaoticLoadBalancer.java", "diffHunk": "@@ -52,17 +52,10 @@\n public class ChaoticLoadBalancer extends TabletBalancer {\n   private static final Logger log = LoggerFactory.getLogger(ChaoticLoadBalancer.class);\n \n-  @SuppressWarnings(\"unused\")\n-  private final String tableName;\n-\n-  public ChaoticLoadBalancer() {\n-    this.tableName = null;\n-  }\n+  public ChaoticLoadBalancer() {}\n \n   // Required constructor\n-  public ChaoticLoadBalancer(String tableName) {\n-    this.tableName = tableName;\n-  }\n+  public ChaoticLoadBalancer(String tableName) {}", "originalCommit": "a827d9b68196735746e6f0cb79c82099ab0fa60c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5Mzk2Nw==", "url": "https://github.com/apache/accumulo/pull/1813#discussion_r532893967", "bodyText": "We dynamically load balancer classes, based on user configuration. My guess is that this supports per-table balancing features. I left it as-is, rather than head down the rabbit hole of figuring out if it was necessary. \ud83d\ude3a", "author": "ctubbsii", "createdAt": "2020-11-30T20:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4Mzc0MQ=="}], "type": "inlineReview"}]}