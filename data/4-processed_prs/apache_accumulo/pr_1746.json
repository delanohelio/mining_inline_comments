{"pr_number": 1746, "pr_title": "Close #1739. Cleanup Splits file if CreateTable FaTE operation fails.", "pr_createdAt": "2020-10-21T13:01:34Z", "pr_url": "https://github.com/apache/accumulo/pull/1746", "timeline": [{"oid": "ac5fe457e788cd308bb42d851ef88b93cf97f25e", "url": "https://github.com/apache/accumulo/commit/ac5fe457e788cd308bb42d851ef88b93cf97f25e", "message": "cleanup split files if createtable op fails", "committedDate": "2020-10-21T12:59:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM3MDM3MQ==", "url": "https://github.com/apache/accumulo/pull/1746#discussion_r509370371", "bodyText": "returns boolean, should we log when delete fails?", "author": "dlmarion", "createdAt": "2020-10-21T15:08:53Z", "path": "server/manager/src/main/java/org/apache/accumulo/master/tableOps/create/CreateTable.java", "diffHunk": "@@ -78,7 +79,11 @@ public long isReady(long tid, Master environment) throws Exception {\n   }\n \n   @Override\n-  public void undo(long tid, Master env) {\n+  public void undo(long tid, Master env) throws Exception {\n+    // Clean up split files if create table operation fails\n+    Path p = tableInfo.getSplitPath().getParent();\n+    FileSystem fs = p.getFileSystem(env.getContext().getHadoopConf());\n+    fs.delete(p, true);", "originalCommit": "ac5fe457e788cd308bb42d851ef88b93cf97f25e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTIzMQ==", "url": "https://github.com/apache/accumulo/pull/1746#discussion_r509395231", "bodyText": "I can add a log for it if it is necessary but I should also add a check to make sure there is even a split file to begin with... I will add that.", "author": "Manno15", "createdAt": "2020-10-21T15:40:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM3MDM3MQ=="}], "type": "inlineReview"}, {"oid": "62081ac22aaab88bc8b981a2ca8644e08ca64685", "url": "https://github.com/apache/accumulo/commit/62081ac22aaab88bc8b981a2ca8644e08ca64685", "message": "add a check to ensure a split was done on createTable", "committedDate": "2020-10-21T15:44:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwNDkyOQ==", "url": "https://github.com/apache/accumulo/pull/1746#discussion_r514604929", "bodyText": "@Manno15 if this throws an Exception, then unreserveNamespace() will not execute and that may not be good.", "author": "keith-turner", "createdAt": "2020-10-29T22:31:37Z", "path": "server/manager/src/main/java/org/apache/accumulo/master/tableOps/create/CreateTable.java", "diffHunk": "@@ -78,7 +80,13 @@ public long isReady(long tid, Master environment) throws Exception {\n   }\n \n   @Override\n-  public void undo(long tid, Master env) {\n+  public void undo(long tid, Master env) throws IOException {\n+    // Clean up split files if create table operation fails\n+    if(tableInfo.getInitialSplitSize() > 0) {\n+      Path p = tableInfo.getSplitPath().getParent();\n+      FileSystem fs = p.getFileSystem(env.getContext().getHadoopConf());\n+      fs.delete(p, true);", "originalCommit": "62081ac22aaab88bc8b981a2ca8644e08ca64685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MzQ3NA==", "url": "https://github.com/apache/accumulo/pull/1746#discussion_r514643474", "bodyText": "We could wrap this and put the unreserve call in the finally block.", "author": "ctubbsii", "createdAt": "2020-10-30T00:36:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwNDkyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk4Nzg4OQ==", "url": "https://github.com/apache/accumulo/pull/1746#discussion_r514987889", "bodyText": "I will make a new pull request with these changes", "author": "Manno15", "createdAt": "2020-10-30T10:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwNDkyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0MjcxMA==", "url": "https://github.com/apache/accumulo/pull/1746#discussion_r515342710", "bodyText": "Follow up made on #1759", "author": "ctubbsii", "createdAt": "2020-10-30T19:49:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwNDkyOQ=="}], "type": "inlineReview"}]}