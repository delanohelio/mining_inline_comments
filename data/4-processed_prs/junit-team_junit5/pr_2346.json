{"pr_number": 2346, "pr_title": "Introduce `TypedArgumentConverter` as a more specific `ArgumentConverter`", "pr_createdAt": "2020-06-29T20:33:42Z", "pr_url": "https://github.com/junit-team/junit5/pull/2346", "timeline": [{"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713", "url": "https://github.com/junit-team/junit5/commit/67c2cfd8ec23784c9ab7737139dd45d66e0db713", "message": "Introduce `TypedArgumentConverter` as a more specific `ArgumentConverter`", "committedDate": "2020-06-29T20:43:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwNjc0OA==", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449506748", "bodyText": "The @SuppressWarnings can be avoided via:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn convert((S) source);\n          \n          \n            \n            \t\treturn convert(sourceType.cast(source));", "author": "marcphilipp", "createdAt": "2020-07-03T10:21:29Z", "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {\n+\t\tthis.sourceType = sourceType;\n+\t\tthis.targetType = targetType;\n+\t}\n+\n+\t@Override\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic final Object convert(Object source, ParameterContext context) throws ArgumentConversionException {\n+\t\tif (!sourceType.isAssignableFrom(source.getClass())) {\n+\t\t\tthrow new ArgumentConversionException(\"Can only convert objects of type \" + sourceType);\n+\t\t}\n+\t\tif (!targetType.isAssignableFrom(context.getParameter().getType())) {\n+\t\t\tthrow new ArgumentConversionException(\"Can only convert to type \" + targetType);\n+\t\t}\n+\t\treturn convert((S) source);", "originalCommit": "67c2cfd8ec23784c9ab7737139dd45d66e0db713", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTE0MA==", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449511140", "bodyText": "Please take a look at TypeBasedParameterResolver which determines the parameter type reflectively which would avoid the boilerplate constructor.", "author": "marcphilipp", "createdAt": "2020-07-03T10:31:29Z", "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {", "originalCommit": "67c2cfd8ec23784c9ab7737139dd45d66e0db713", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwNDUzMg==", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449904532", "bodyText": "Thing is, I would have to cast the found Class objects into Class<S> and Class<T>? Or am I missing something?", "author": "juliette-derancourt", "createdAt": "2020-07-05T18:16:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTE0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzUwNA==", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r456897504", "bodyText": "I guess so... \ud83e\udd14 @sbrannen WDYT?", "author": "marcphilipp", "createdAt": "2020-07-19T11:36:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTE0MA=="}], "type": "inlineReview"}, {"oid": "18d34e2a57c06629958270cc740f237d90a6ab33", "url": "https://github.com/junit-team/junit5/commit/18d34e2a57c06629958270cc740f237d90a6ab33", "message": "Introduce `TypedArgumentConverter` as a more specific `ArgumentConverter`", "committedDate": "2020-08-01T20:23:59Z", "type": "commit"}, {"oid": "24fe9e51b9c34d579b815a70a3f4e6fd828f408d", "url": "https://github.com/junit-team/junit5/commit/24fe9e51b9c34d579b815a70a3f4e6fd828f408d", "message": "Remove unchecked warning", "committedDate": "2020-08-01T20:23:59Z", "type": "commit"}, {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "url": "https://github.com/junit-team/junit5/commit/f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "message": "Add documentation + release note", "committedDate": "2020-08-01T20:23:59Z", "type": "commit"}, {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "url": "https://github.com/junit-team/junit5/commit/f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "message": "Add documentation + release note", "committedDate": "2020-08-01T20:23:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA0OTk3OQ==", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r464049979", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * New `TypedArgumentConverter` that always convert one specific type to another, therefore\n          \n          \n            \n              reducing boilerplate type checks compared to `ArgumentConverter`.\n          \n          \n            \n            * New `TypedArgumentConverter` for converting one specific type to another, therefore\n          \n          \n            \n              reducing boilerplate type checks compared to implementing `ArgumentConverter` directly.", "author": "marcphilipp", "createdAt": "2020-08-02T08:35:05Z", "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "diffHunk": "@@ -105,6 +105,8 @@ on GitHub.\n   same functionality but a more descriptive name.\n * `assertTimeoutPreemptively` in `Assertions` now reports the stacktrace of the timed out\n   thread in the cause of the `AssertionFailedError`.\n+* New `TypedArgumentConverter` that always convert one specific type to another, therefore\n+  reducing boilerplate type checks compared to `ArgumentConverter`.", "originalCommit": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA1MDA5MQ==", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r464050091", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `TypedArgumentConverter` that reduce boilerplate type checks.\n          \n          \n            \n            `TypedArgumentConverter` to avoid boilerplate type checks.", "author": "marcphilipp", "createdAt": "2020-08-02T08:36:02Z", "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -1442,6 +1442,14 @@ include::{testDir}/example/ParameterizedTestDemo.java[tags=explicit_conversion_e\n include::{testDir}/example/ParameterizedTestDemo.java[tags=explicit_conversion_example_ToStringArgumentConverter]\n ----\n \n+If the converter is only meant to convert one type to another, you can extend\n+`TypedArgumentConverter` that reduce boilerplate type checks.", "originalCommit": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6afe92a26696aa509506d68f768efafe0c7d914a", "url": "https://github.com/junit-team/junit5/commit/6afe92a26696aa509506d68f768efafe0c7d914a", "message": "Apply suggestions from code review\n\nCo-authored-by: Marc Philipp <mail@marcphilipp.de>", "committedDate": "2020-08-02T10:14:08Z", "type": "commit"}]}