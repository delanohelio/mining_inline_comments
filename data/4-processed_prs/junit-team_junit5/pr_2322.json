{"pr_number": 2322, "pr_title": "Replace \"blacklisted\" with \"unrecoverable\" exceptions", "pr_createdAt": "2020-06-14T15:04:31Z", "pr_url": "https://github.com/junit-team/junit5/pull/2322", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDY5Ng==", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439840696", "bodyText": "Instead of the term \"fatal\", I would suggest something along the lines of \"unrecoverable\" meaning an exception from which the application (test plan) cannot recover.\nIt's certainly debatable due to the common use of \"fatal errors\" in computing in general, but I have been told that terms (potentially) implying \"death\" or \"violence\" should be avoided if other terms are more suitable.", "author": "sbrannen", "createdAt": "2020-06-14T15:25:54Z", "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/FatalExceptions.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.commons.util;\n+\n+import static org.apiguardian.api.API.Status.INTERNAL;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * Internal utilities for working with <em>fatal</em> exceptions.", "originalCommit": "be04af19b02f75432cf4c75d2767c42b151150ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDg3NQ==", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439840875", "bodyText": "Granted, I realize that \"fatal\" can also mean \"causing failure\". That's why I say it's debatable.", "author": "sbrannen", "createdAt": "2020-06-14T15:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDY5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MjEyMw==", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439842123", "bodyText": "I agree that \"unrecoverable\" is better and will change it accordingly.", "author": "marcphilipp", "createdAt": "2020-06-14T15:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDY5Ng=="}], "type": "inlineReview"}, {"oid": "40f37b49ae874a2f5f568d2e5b50831adb80bf50", "url": "https://github.com/junit-team/junit5/commit/40f37b49ae874a2f5f568d2e5b50831adb80bf50", "message": "Replace \"blacklisted\" with \"unrecoverable\" exceptions\n\nThis commit replaces the oppressive term \"blacklist\" [1] with a more\ndescriptive, domain-specific one. Exceptions that are rethrown by the\nnew `UnrecoverableExceptions.rethrowIfUnrecoverable` method, are\n_unrecoverable_, i.e. they should always terminate test plan execution\nimmediately instead of being caught and potentially wrapped in another\nexception.\n\nTo support running newer engines on an older Platform, the existing\nclass is deprecated instead of deleted for now.\n\n[1] https://tools.ietf.org/id/draft-knodel-terminology-00.html#rfc.section.1.2", "committedDate": "2020-06-14T15:42:26Z", "type": "commit"}, {"oid": "40f37b49ae874a2f5f568d2e5b50831adb80bf50", "url": "https://github.com/junit-team/junit5/commit/40f37b49ae874a2f5f568d2e5b50831adb80bf50", "message": "Replace \"blacklisted\" with \"unrecoverable\" exceptions\n\nThis commit replaces the oppressive term \"blacklist\" [1] with a more\ndescriptive, domain-specific one. Exceptions that are rethrown by the\nnew `UnrecoverableExceptions.rethrowIfUnrecoverable` method, are\n_unrecoverable_, i.e. they should always terminate test plan execution\nimmediately instead of being caught and potentially wrapped in another\nexception.\n\nTo support running newer engines on an older Platform, the existing\nclass is deprecated instead of deleted for now.\n\n[1] https://tools.ietf.org/id/draft-knodel-terminology-00.html#rfc.section.1.2", "committedDate": "2020-06-14T15:42:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MzUxMg==", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439843512", "bodyText": "Please add an @deprecated Javadoc tag at the class level analogous to the one at the method level.", "author": "sbrannen", "createdAt": "2020-06-14T15:57:05Z", "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/BlacklistedExceptions.java", "diffHunk": "@@ -36,26 +33,26 @@\n  *\n  * @since 1.0\n  */\n-@API(status = INTERNAL, since = \"1.0\")\n+@API(status = DEPRECATED, since = \"1.7\")\n public final class BlacklistedExceptions {", "originalCommit": "40f37b49ae874a2f5f568d2e5b50831adb80bf50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1Mjg4Mg==", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439852882", "bodyText": "Added.", "author": "marcphilipp", "createdAt": "2020-06-14T17:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MzUxMg=="}], "type": "inlineReview"}, {"oid": "64953732fb1518be12845c37fcf74892e8059281", "url": "https://github.com/junit-team/junit5/commit/64953732fb1518be12845c37fcf74892e8059281", "message": "Add `deprecated` Javadoc tag and class-level annotation", "committedDate": "2020-06-14T17:50:06Z", "type": "commit"}]}