{"pr_number": 2494, "pr_title": "Fix compiler warnings", "pr_createdAt": "2020-12-15T20:53:47Z", "pr_url": "https://github.com/junit-team/junit5/pull/2494", "timeline": [{"oid": "311a5364318cbbc0d6e951d076d0d6673bd5dbc5", "url": "https://github.com/junit-team/junit5/commit/311a5364318cbbc0d6e951d076d0d6673bd5dbc5", "message": "Fix Kotlin compiler warnings in buildSrc", "committedDate": "2020-12-15T20:49:09Z", "type": "commit"}, {"oid": "9db010eddf26feefcde98c183f29a8082517cb37", "url": "https://github.com/junit-team/junit5/commit/9db010eddf26feefcde98c183f29a8082517cb37", "message": "Add default constructors explicitly", "committedDate": "2020-12-15T20:49:59Z", "type": "commit"}, {"oid": "f150e5e4ad0270de8077302b5e19091c9533dbda", "url": "https://github.com/junit-team/junit5/commit/f150e5e4ad0270de8077302b5e19091c9533dbda", "message": "Fix Kotlin compiler warning in test code", "committedDate": "2020-12-15T20:50:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY3ODkyNQ==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543678925", "bodyText": "We didn't mean for the default constructor to be public, did we?", "author": "marcphilipp", "createdAt": "2020-12-15T20:54:13Z", "path": "junit-platform-engine/src/main/java/org/junit/platform/engine/reporting/ReportEntry.java", "diffHunk": "@@ -35,6 +36,14 @@\n \tprivate final LocalDateTime timestamp = LocalDateTime.now();\n \tprivate final Map<String, String> keyValuePairs = new LinkedHashMap<>();\n \n+\t/**\n+\t * @deprecated Use {@link #from(String, String)} or {@link #from(Map)}\n+\t */\n+\t@API(status = DEPRECATED, since = \"5.8\")\n+\t@Deprecated\n+\tpublic ReportEntry() {\n+\t}\n+", "originalCommit": "f150e5e4ad0270de8077302b5e19091c9533dbda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcwMTU1OQ==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543701559", "bodyText": "I do not recall properly, whether this was intentional.\nIn hindsight, it seems to be an accident rather than explicitly designed this way.", "author": "mmerdes", "createdAt": "2020-12-15T21:32:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY3ODkyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxOTIwMQ==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543719201", "bodyText": "Any particular reason why this option is turned on? I understand it's to silence warnings about using experimental features of the Kotlin compiler, but it's not clear to me what warnings need to be silenced here.", "author": "jbduncan", "createdAt": "2020-12-15T22:02:29Z", "path": "buildSrc/build.gradle.kts", "diffHunk": "@@ -14,3 +16,13 @@ dependencies {\n \timplementation(\"com.github.jengelman.gradle.plugins:shadow:6.1.0\")\n \timplementation(\"org.gradle:test-retry-gradle-plugin:1.2.0\")\n }\n+\n+kotlinDslPluginOptions {\n+\texperimentalWarning.set(false)\n+}", "originalCommit": "f150e5e4ad0270de8077302b5e19091c9533dbda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3NjE2OQ==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r544076169", "bodyText": "The kotlin-dsl plugin currently emits a warning message stating that it enables experimental features. Setting this option to false suppresses that warning. Please note that this will no longer be necessary with Gradle 7.0: gradle/gradle#15460", "author": "marcphilipp", "createdAt": "2020-12-16T07:38:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxOTIwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxOTM0Nw==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543719347", "bodyText": "\ud83d\udc4d", "author": "jbduncan", "createdAt": "2020-12-15T22:02:44Z", "path": "buildSrc/src/main/kotlin/java-library-conventions.gradle.kts", "diffHunk": "@@ -155,9 +155,9 @@ val compileModule by tasks.registering(JavaCompile::class) {\n \tclasspath = files()\n \toptions.release.set(9)\n \toptions.compilerArgs.addAll(listOf(\n-\t\t\t// \"-verbose\",\n \t\t\t// Suppress warnings for automatic modules: org.apiguardian.api, org.opentest4j\n \t\t\t\"-Xlint:all,-requires-automatic,-requires-transitive-automatic\",\n+\t\t\t\"-Werror\", // Terminates compilation when warnings occur.", "originalCommit": "f150e5e4ad0270de8077302b5e19091c9533dbda", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxOTk2MA==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543719960", "bodyText": "I'm curious, what warning does it report if this change isn't made?", "author": "jbduncan", "createdAt": "2020-12-15T22:03:56Z", "path": "buildSrc/src/main/kotlin/java-repackage-jars.gradle.kts", "diffHunk": "@@ -2,15 +2,16 @@ import java.util.jar.JarEntry\n import java.util.jar.JarFile\n import java.util.jar.JarOutputStream\n import org.gradle.api.internal.file.archive.ZipCopyAction\n+import java.nio.file.Files\n \n // This registers a `doLast` action to rewrite the timestamps of the project's output JAR\n afterEvaluate {\n \tval jarTask = (tasks.findByName(\"shadowJar\") ?: tasks[\"jar\"]) as Jar\n \n \tjarTask.doLast {\n \n-\t\tval newFile = createTempFile(\"rewrite-timestamp\")\n-\t\tval originalOutput = jarTask.archiveFile.get().getAsFile()\n+\t\tval newFile = Files.createTempFile(\"rewrite-timestamp\", null).toFile()\n+\t\tval originalOutput = jarTask.archiveFile.get().asFile", "originalCommit": "f150e5e4ad0270de8077302b5e19091c9533dbda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3NDU0Mg==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r544074542", "bodyText": "createTempFile is deprecated: https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/create-temp-file.html", "author": "marcphilipp", "createdAt": "2020-12-16T07:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxOTk2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMjQ4Mw==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543722483", "bodyText": "\ud83d\udc4d", "author": "jbduncan", "createdAt": "2020-12-15T22:08:37Z", "path": "buildSrc/src/main/kotlin/kotlin-library-conventions.gradle.kts", "diffHunk": "@@ -10,5 +10,6 @@ tasks.withType<KotlinCompile>().configureEach {\n \t\tjvmTarget = Versions.jvmTarget.toString()\n \t\tapiVersion = \"1.3\"\n \t\tlanguageVersion = \"1.3\"\n+\t\tallWarningsAsErrors = true", "originalCommit": "f150e5e4ad0270de8077302b5e19091c9533dbda", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMjgyOA==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543722828", "bodyText": "\ud83d\udc4d", "author": "jbduncan", "createdAt": "2020-12-15T22:09:13Z", "path": "buildSrc/build.gradle.kts", "diffHunk": "@@ -14,3 +16,13 @@ dependencies {\n \timplementation(\"com.github.jengelman.gradle.plugins:shadow:6.1.0\")\n \timplementation(\"org.gradle:test-retry-gradle-plugin:1.2.0\")\n }\n+\n+kotlinDslPluginOptions {\n+\texperimentalWarning.set(false)\n+}\n+\n+tasks.withType<KotlinCompile>().configureEach {\n+\tkotlinOptions {\n+\t\tallWarningsAsErrors = true\n+\t}\n+}", "originalCommit": "f150e5e4ad0270de8077302b5e19091c9533dbda", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTUzMQ==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r543725531", "bodyText": "I assume that this constructor is needed by -Werror, right?", "author": "jbduncan", "createdAt": "2020-12-15T22:14:07Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/DisplayNameGenerator.java", "diffHunk": "@@ -92,6 +92,9 @@ static String parameterTypesAsString(Method method) {\n \n \t\tstatic final DisplayNameGenerator INSTANCE = new Standard();\n \n+\t\tpublic Standard() {\n+\t\t}", "originalCommit": "f150e5e4ad0270de8077302b5e19091c9533dbda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3Mzk5Mw==", "url": "https://github.com/junit-team/junit5/pull/2494#discussion_r544073993", "bodyText": "Yes, due to newly introduced warnings like these: https://ge.junit.org/s/aohc47ea6wfk6/console-log?task=:junit-jupiter:compileModule", "author": "marcphilipp", "createdAt": "2020-12-16T07:34:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTUzMQ=="}], "type": "inlineReview"}]}