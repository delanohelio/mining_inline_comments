{"pr_number": 13993, "pr_title": "SAML SSO JSP exception", "pr_createdAt": "2020-09-16T21:24:33Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13993", "timeline": [{"oid": "45532213ad12c74d0911c7d4f6411f76581dfbbf", "url": "https://github.com/OpenLiberty/open-liberty/commit/45532213ad12c74d0911c7d4f6411f76581dfbbf", "message": "SAML SSO JSP exception", "committedDate": "2020-09-16T21:27:48Z", "type": "commit"}, {"oid": "45532213ad12c74d0911c7d4f6411f76581dfbbf", "url": "https://github.com/OpenLiberty/open-liberty/commit/45532213ad12c74d0911c7d4f6411f76581dfbbf", "message": "SAML SSO JSP exception", "committedDate": "2020-09-16T21:27:48Z", "type": "forcePushed"}, {"id": "PRRC_kwDOBi5AKc4rUIqm", "url": "https://github.com/OpenLiberty/open-liberty/pull/13993#discussion_r726698662", "bodyText": "I'm just not quite clear why we're checking for a jarentry here when the next clause is:\nelse { \n                // browse a jar file\n                return processJar(packageFolderURL, recursive);\n\nWould we never enter this else now? What's the difference here between processJar and processBundle?", "author": "pnicolucci", "createdAt": "2021-10-12T01:46:39Z", "path": "dev/com.ibm.ws.jsp/src/com/ibm/ws/jsp/translator/compiler/utils/JspFileManager.java", "diffHunk": "@@ -285,7 +285,7 @@ public Boolean run() {\n             if (isDirectory) { \n                 // useful for when there are references to classes in WEB-INF/classes\n                 return processDir(packageName, directory, recursive);\n-            } else if (packageFolderURL.getProtocol().equals(\"bundleresource\")) {\n+            } else if (packageFolderURL.getProtocol().equals(\"bundleresource\") || packageFolderURL.getProtocol().equals(\"jarentry\")) {", "originalCommit": "45532213ad12c74d0911c7d4f6411f76581dfbbf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}