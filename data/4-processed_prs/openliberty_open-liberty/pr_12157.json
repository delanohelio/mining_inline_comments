{"pr_number": 12157, "pr_title": "Override the `toString` method to avoid ConcurrentModificationExceptions", "pr_createdAt": "2020-05-13T15:21:09Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12157", "timeline": [{"oid": "25e1e2b4a1782d5193898168b75901b4f8f072f4", "url": "https://github.com/OpenLiberty/open-liberty/commit/25e1e2b4a1782d5193898168b75901b4f8f072f4", "message": "Override the `toString` method to avoid ConcurrentModificationExceptions", "committedDate": "2020-05-13T16:06:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU1OTI1Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424559257", "bodyText": "propertyValues can be null, so this should be \"if (propertyValues[i] != NOT_FOUND) {\"", "author": "dettmoney", "createdAt": "2020-05-13T16:09:20Z", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "diffHunk": "@@ -1385,5 +1388,24 @@ public Object merge(String key, Object value, BiFunction<? super Object, ? super\n     public String[] getPropertyNames() {\n         return propertyNames;\n     }\n+\n+    @FFDCIgnore(ConcurrentModificationException.class)\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        for (int i=0; i<TOTAL; i++) {\n+            if (propertyValues[i] != null) {", "originalCommit": "25e1e2b4a1782d5193898168b75901b4f8f072f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU2MDIwMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424560203", "bodyText": "There should be a comma and space (or some other delimiter) between each name/value pair for both the propertyValues and the forEach calls below", "author": "dettmoney", "createdAt": "2020-05-13T16:10:41Z", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "diffHunk": "@@ -1385,5 +1388,24 @@ public Object merge(String key, Object value, BiFunction<? super Object, ? super\n     public String[] getPropertyNames() {\n         return propertyNames;\n     }\n+\n+    @FFDCIgnore(ConcurrentModificationException.class)\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        for (int i=0; i<TOTAL; i++) {\n+            if (propertyValues[i] != null) {\n+                sb.append(propertyNames[i]).append(\"=\").append(propertyValues[i]);", "originalCommit": "25e1e2b4a1782d5193898168b75901b4f8f072f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ca9b60e395cf46599a5c8adc57d33f462dbcd97d", "url": "https://github.com/OpenLiberty/open-liberty/commit/ca9b60e395cf46599a5c8adc57d33f462dbcd97d", "message": "Override the `toString` method to avoid ConcurrentModificationExceptions", "committedDate": "2020-05-13T16:24:52Z", "type": "commit"}, {"oid": "ca9b60e395cf46599a5c8adc57d33f462dbcd97d", "url": "https://github.com/OpenLiberty/open-liberty/commit/ca9b60e395cf46599a5c8adc57d33f462dbcd97d", "message": "Override the `toString` method to avoid ConcurrentModificationExceptions", "committedDate": "2020-05-13T16:24:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MjY2MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424582661", "bodyText": "The last name/value isn't going to look pretty with a trailing \", \", but not a big deal. I'll let you decide if you want to resolve that.", "author": "dettmoney", "createdAt": "2020-05-13T16:45:06Z", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.core.3.2/src/org/apache/cxf/message/MessageImpl.java", "diffHunk": "@@ -1385,5 +1388,24 @@ public Object merge(String key, Object value, BiFunction<? super Object, ? super\n     public String[] getPropertyNames() {\n         return propertyNames;\n     }\n+\n+    @FFDCIgnore(ConcurrentModificationException.class)\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append('{');\n+        for (int i=0; i<TOTAL; i++) {\n+            if (propertyValues[i] != NOT_FOUND) {\n+                sb.append(propertyNames[i]).append(\"=\").append(propertyValues[i]).append(\", \");\n+            }\n+        }\n+        try {\n+            forEach((k, v) -> { sb.append(k).append(\"=\").append(v).append(\", \"); });", "originalCommit": "ca9b60e395cf46599a5c8adc57d33f462dbcd97d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNTA5MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12157#discussion_r424705091", "bodyText": "yeah, I'm fine with a trailing comma - we should only ever see it when trace is enabled - and we'll only be looking at a trace if something uglier has already happened.  :)", "author": "andymc12", "createdAt": "2020-05-13T20:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MjY2MQ=="}], "type": "inlineReview"}]}